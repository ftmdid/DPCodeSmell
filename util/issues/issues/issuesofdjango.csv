id,Title,Body,User,Label,Created At,Updated At
13517,Fixed #32091 -- Fixed admin search bar width on filtered admin page.,"The search input will now show as a reasonable width with a list
filter value selected on a skinny window.",tim-schilling,None,2020-10-08T19:45:02Z,2020-10-09T10:10:19Z
13516,Fixed #32094 -- Fixed flush() calls on management command self.stdout/err proxies.,"## Issue
`flush()` is notably called during `migrate` command; it didn't work, and a long migration effectively printed to `stderr` no relevant information up until the end:
```
Operations to perform:
  Apply all migrations: myapp
Running migrations:
```
Then nothing more, but the migration is being done.
Then at the end of the real migration, the rest is flushed:
```
  Applying myapp.0002_auto_20200817_1030... OK
```

Expected behavior:
```
Operations to perform:
  Apply all migrations: myapp
Running migrations:
  Applying myapp.0002_auto_20200817_1030...
```
then work
then `OK`


## Reason
`self.stdout/stderr` in management commands are wrapped with `OutputWrapper`, commands assume the wrapping is transparent, but it is not: it inherits `TextIOBase` but doesn't implement most of the methods, only `write` and `isatty`; others either raise `not implemented` from `TextIOBase` (OK), or silently do nothing (KO, that's what happens with `flush`).

## Fix
I forward the `flush()` call to `self._out`, with a test verifying it's called.

I'm not sure if `if hasattr(self._out, 'flush'):` is really necessary, it's part of `IOBase` (but so is `isatty`).

I checked all django management commands and no other method seems called, so a more generic fix may wait for later (it may  still be useful for users commands).",thomas-riccardi,None,2020-10-08T19:00:01Z,2020-10-09T15:41:46Z
13515,Added free courses,,yashaggarwal03,b'invalid',2020-10-08T18:02:31Z,2020-10-08T18:42:46Z
13512,Fixed #32080 -- Fixed displaying Unicode chars in forms.JSONField and read-only JSONField values in admin.,[ticket-32080](https://code.djangoproject.com/ticket/32080),ZhaoQi99,None,2020-10-08T13:52:57Z,2020-10-09T06:42:57Z
13511,Fixed #32083 -- Added link to migrating section in multi-db docs example.,… example.,carltongibson,None,2020-10-08T08:13:47Z,2020-10-08T10:45:11Z
13510,Fixed #29356 -- Clarified docs for QueryDict.getlist() default. ,"When you do `dict.get('foo', None)` you get `None`, but with `query_params.getlist('foo', None)` you get `[]` which is a bit confusing. I don't think it warrants changing the code, but we can clarify the docs a bit.

I wrote code something like
```
exclude = request.query_params.getlist('exclude[]', None)
if exclude is not None:
   ...
```
This code looks right but it is not.

Clearly saying that a default value of None will give you an empty list should do the trick.

## Issue

https://code.djangoproject.com/ticket/29356

It was closed but I think we can improve this.",graup,None,2020-10-08T06:47:10Z,2020-10-08T12:19:52Z
13508,"Fixes #32076 -- Add async cache methods to Base, Dummy, and LocMem Cache","[ticket-32076](https://code.djangoproject.com/ticket/32076)

* Based on DEP 0009 and the implementation found [here](https://github.com/Andrew-Chen-Wang/django-async-redis)
* Copied all doc strings from the synchronous methods
* Adds async cache methods to BaseCache and DummyCache.

Issues I currently see are:

1. The request finished signal being unable to properly close all cache connections (more details in original ticket). This can be found in `django.core.cache` (init file).
2. This has been implemented as per DEP 0009 ~~Lots of times in several areas in Django, the cache is called by doing `if ""string"" in cache`. The async method cannot handle the magic method `__contains__` unless you use `sync_to_async`. I dislike context switching, so I would rather not touch that, but I can see why people would want to ""accidentally"" use it, even if in the documentation we mention it will not be performant and people should strive to use `await cache.has_key(""string"")` instead.~~
3. Current session backend is not handling the async methods. @felixxm Made a good point about being a partial solution and why BaseCache may not be good enough for this implementation; I'm currently writing a session backend for my websocket implementation [found here](https://github.com/pydanny/cookiecutter-django/blob/88b841715623d94bb709aaf1a9722b8a135a2de2/%7B%7Bcookiecutter.project_slug%7D%7D/config/websocket.py) (I'll be moving the code to a separate repository soon to demonstrate the functionality). The issue I immediately ran into was logging in since I wanted to see how I can validate the session for that custom websocket script. If we went with what @felixxm said, then the async methods in BaseCache would look like:

```
async def get_async(value):
    return sync_to_async(self.get(value))
```

The issue I see with that is if a library accidentally doesn't implement the get_async() method, then the error will say that the `get` method is not created when it should really say the dev needs to create the `get_async` method.
4. I'm not going to have time to write documentation (Edit rephrased: I'm terrible at documentation and heavily discouraged). 
5. I've added LocMem to this PR. The only change is that we're adding asyncio.Lock for async context. I think I can rework this to take advantage of the RunTimeError so we know which context we're in. That means we don't need to create two different locks. ~~If you'd like, I can add my setup for LocMem backend. I'm not too sure about the tests though. As I was copying and pasting all those test cases, my computer started burning up...~~",Andrew-Chen-Wang,None,2020-10-07T17:17:08Z,2020-10-09T17:21:58Z
13505,Fixed #31850 -- Fixed BasicExtractorTests.test_extraction_warning with xgettext 0.21+.,"Ticket: https://code.djangoproject.com/ticket/31850

test_extraction_warning (i18n.test_extraction.BasicExtractorTests) failed with xgettext 0.21 because the ""format string with unnamed arguments cannot be properly localized"" warning is not displayed.

Fixed the test failure by using a message that causes an xgettext warning regardless of the version.",msmolens,None,2020-10-06T22:04:01Z,2020-10-07T13:27:15Z
13504,Pr/32075,"Database backend for MariaDB Connector/Python.
It will require mariadb 1.0.3 which can be downoaded from PyPi.org",9EOR9,None,2020-10-06T15:05:24Z,2020-10-06T16:36:45Z
13502,Refs #20577 -- Deferred filtering of prefetched related querysets by reverse m2o relation.,"https://github.com/django/django/pull/11916, released in v3.1, introduced the idea of deferring filtering of a QS when prefetching related many to many relations, but the many to one case was left out. This adds the same idea to the many to one case.

I've never really stepped into the django codebase before so please let me know if there's anything else that needs doing. Tests, tickets etc.

Thanks!

",bobbyrenwick,None,2020-10-06T10:08:34Z,2020-10-06T20:35:19Z
13501,Skipped GetImageDimensionsTests.test_webp when WEBP is not installed.,Requires Pillow 4.2.0+,felixxm,None,2020-10-06T09:03:51Z,2020-10-06T09:26:07Z
13500,Fixed #32065 -- Restored leading dot to CSRF_COOKIE_DOMAIN examples.,"ticket-32065

Partially reverts afd375fc343baa46e61036087bc43b3d096bb0ca.

As per ticket-28741, leading dots are not needed for `Set-Cookie` headers. Django's CSRF protection does though use them to determine if cross-subdomain requests should be allowed. 

The CSRF check uses `CSRF_COOKIE_DOMAIN` to populate `good_referer`:

https://github.com/django/django/blob/efe74fff25e1e85402ecb73d80eea7625246f4ea/django/middleware/csrf.py#L254-L261

`good_referer is added to `good_hosts`, which are then run through `is_same_domain()`: 

https://github.com/django/django/blob/efe74fff25e1e85402ecb73d80eea7625246f4ea/django/middleware/csrf.py#L273-L281

`is_same_domain()` requires the leading dot to match subdomains: 

https://github.com/django/django/blob/efe74fff25e1e85402ecb73d80eea7625246f4ea/django/utils/http.py#L292-L296

Adjusting the `override_settings()` calls in `tests/csrf_tests/tests.py` to **not** use a leading dot causes various failures. 

@timgraham Can I ask for your sanity check please? Thanks. ",carltongibson,None,2020-10-06T08:21:00Z,2020-10-07T08:03:16Z
13499,Fixed #32073 -- Skipped collation tests on PostgreSQL < 10.,"ticket-32073

PostgreSQL < 10 doesn't support ICU collations.",felixxm,None,2020-10-06T04:57:04Z,2020-10-06T10:51:40Z
13498,Refs #32047 -- Added test for using call_command() with constant required options.,"Test for [ticket 32047](https://code.djangoproject.com/ticket/32047), base on [this comment](https://github.com/django/django/pull/13466#issuecomment-702711203).
",hramezani,None,2020-10-05T22:38:11Z,2020-10-06T06:56:11Z
13493,Refs #31926 -- Fixed reverse related identity crash on Q() limit_choices_to.,"cc @David-Wobrock, @felixxm (can't assign for review anymore)",charettes,None,2020-10-05T13:24:07Z,2020-10-05T19:20:00Z
13491,Fixed #32072 -- Fixed admin search bar height.,"https://code.djangoproject.com/ticket/32072

I'm not sure the `padding: 5px` rule this is overriding is actually used anywhere, but I'm a bit scared of breaking more stuff so just bumped the specificity back up.",knyghty,None,2020-10-05T08:13:04Z,2020-10-06T09:57:24Z
13490,"Fixed #32068 -- Added error messages on get() with filters following union(), intersection(), and difference().",Fixes https://code.djangoproject.com/ticket/32068,hramezani,None,2020-10-04T21:16:50Z,2020-10-05T11:22:47Z
13489,Removed useless `iri_to_uri` calls.,,apollo13,None,2020-10-04T12:59:31Z,2020-10-06T10:29:07Z
13487,[Documentation] Update tutorial02.txt,"Corrected the import to work with latest python, otherwise the following error is raised:
ModuleNotFoundError: No module named 'mysite.polls' with mysite being the name of the project.",alpuks,b'invalid',2020-10-04T12:16:23Z,2020-10-04T14:31:51Z
13486,Create Dictionary in Python,Dcitionaries in python,mahima2112,b'invalid',2020-10-04T10:05:46Z,2020-10-04T10:24:12Z
13485,Ticket 31710,"Added a note about all files validation for uploading multiple files .
Please do correct me incase of any mistakes.",MAHANTH-wq,None,2020-10-04T02:39:03Z,2020-10-04T10:29:41Z
13484,Fixed #31926 -- Fixed recreating queryset with FilteredRelation when using a pickled Query.,"Ticket: https://code.djangoproject.com/ticket/31926

Hi !

Details about the PR:

The test method comes from a suggested patch https://code.djangoproject.com/attachment/ticket/31926/test-31926.diff that reproduces the issue.

When tracking down the issue, it comes down to the alias of the table in the join that will be needed for the filtered relation condition.
Without pickling: `db.models.sql.query.Query.join` =>
would find the necessary join in the `self.alias_map` => and use the `reuse_alias` => `big_events`
With pickling:
we don't find the join in `self.alias_map`, even though the content seems to be the same, and the parameters are also the same.
https://github.com/django/django/blob/master/django/db/models/sql/query.py#L960-L963

The difference is when doing the `equals` call between both `Join` objects
=> `db.models.sql.datastructures.Join.equals` https://github.com/django/django/blob/master/django/db/models/sql/datastructures.py#L122

The condition that changed is `self.join_field == other.join_field` which was True without pickling, and False with pickling.
And in both cases, the join_field on both sides is a `ManyToOneRel`, with the same attributes.
The difference?
Without pickling => they are the **same object**, meaning their `id()` calls gave the same result
With pickling => not the same objects, different `id()` values

Since they have the same attributes, they should match. And I guessed that they weren't the same object in memory because of the pickling, which re-allocated the object.

So I implemented `__eq__` methods for the different ForeignObjectRel objects in order to cover them all.
So the join now matches, and the generated SQL is correct, with the right table alias

The `__hash__` methods have been added so that be can still use the `field in field_dict`.
The error that occurs if not specified:
```
  File ""mypath/django/django/db/models/base.py"", line 1274, in check
   *cls._check_field_name_clashes(),
  File ""mypath/django/django/db/models/base.py"", line 1434, in _check_field_name_clashes
    if f not in used_fields:
```

I hope the explanations are clear and there is not nasty side-effect of having those defined :)",David-Wobrock,None,2020-10-03T18:50:41Z,2020-10-05T12:47:56Z
13482,added module string,,ghost,b'invalid',2020-10-03T05:21:00Z,2020-10-03T06:43:49Z
13481,Improve Docs,,1-23-smy,b'invalid',2020-10-03T04:15:54Z,2020-10-03T06:45:34Z
13480,Update README.TXT,,pixamentory,b'invalid',2020-10-02T12:40:12Z,2020-10-02T12:46:30Z
13479,Refs #31777 -- Doc'd Char/TextField.db_collation parameter in MySQL notes.,"ticket-31777

I've noticed that we missed this section in e387f191f76777015b6ea687ce83cdb05ee47cee.

@knyghty Tom, Can you take a look?",felixxm,None,2020-10-02T10:46:38Z,2020-10-02T11:29:55Z
13478,Docs,,pk-png,b'invalid',2020-10-02T08:00:10Z,2020-10-02T08:01:28Z
13476,Update README.rst,,arkprocoder,b'invalid',2020-10-01T12:37:58Z,2020-10-01T13:10:45Z
13475,Update related_descriptors.py,Avoid unnecessary database UPDATEs if objects are already related.,adontz,None,2020-10-01T12:19:52Z,2020-10-01T13:15:46Z
13474,Fixed #32041 -- Doc'd how to modify served files' content types on Windows.,"[Ticket #32041](https://code.djangoproject.com/ticket/32041).

Possible issues on Linux are already documented; add a note about similar problems on Windows as well.",tari,None,2020-10-01T10:10:54Z,2020-10-01T12:02:31Z
13473,Fixed #32060 -- Added Random database function.,ticket-32060,pope1ni,None,2020-10-01T09:27:34Z,2020-10-02T08:29:44Z
13472,Fixed #32057 -- Doc'd HttpResponse.get()/items().,"I have added documentation for HttpResponse objects methods get(headers,alternate=None) and also items().

I'm new to the community so please help me out if i did any mistakes(This will be my first small contribution towards the community)
I don't know whether i have attached the issue to the pull requests ,if not please anyone guide me to do so.",MAHANTH-wq,None,2020-10-01T05:45:50Z,2020-10-01T09:00:20Z
13470,Update README.rst,,Rahul0521,b'invalid',2020-09-30T19:25:01Z,2020-09-30T19:47:20Z
13468,Fix default time zone support inconsistency in docs,"Removing this line since below it there is the message:

> The default `settings.py` file created by :djadmin:`django-admin startproject <startproject>` includes `USE_TZ = True` for convenience.",aalvrz,None,2020-09-29T22:17:16Z,2020-10-02T15:23:40Z
13467,[3.1.x] Updated translations from Transifex.,,claudep,None,2020-09-29T19:06:24Z,2020-09-30T08:56:25Z
13466,Fixed #32047 -- Fixed call_command() crash if a constant option from required mutually exclusive group is passed in options.,https://code.djangoproject.com/ticket/32047,hramezani,None,2020-09-29T14:49:13Z,2020-10-03T10:56:26Z
13465,Fixed #32055 – Add Surrogate-Control header to the 304 response,[ticket-32055](https://code.djangoproject.com/ticket/32055),bungoume,None,2020-09-29T10:58:23Z,2020-09-29T21:51:06Z
13463,Fixed #32051 -- Fixed rocket animation on the 'Congrats' page.,"This addresses issues reported with the animation in [#32051](https://code.djangoproject.com/ticket/32051), and also includes some code cleanup that should go un-noticed by end users. ~I’m happy to split the code cleanup and actual fixes into separate PRs if this is easier to review.~ Edit: splitting :)

## Code cleanup

There was a lot of unused CSS and SVG, and vendor prefixes that don’t feel relevant anymore (a CPU-heavy animation not running on browsers from 7 years ago is probably a usability win).

Additionally it was hard to extract the SVG to improve how it was defined in design tools – I’ve reworked it so the only styles defined with CSS are the ones used for animations (also makes it easy to display the artwork correctly with animations disabled).

## Rendering fixes

- Removed the Firefox-only `@-moz-document url-prefix()` styles so it gets the same animation as other browsers.
- Allowed the SVG to overflow so it’s no longer cropped when animating, and removed the IE9 workaround `svg:not(:root) { overflow: hidden; }`

## Performance fixes

The animations were already using properties that should be pretty fast and could be GPU-accelerated. They weren’t (at least on my machine), even after applying optimizations (`will-change: transform` didn’t add any layers). I have a feeling this might be due to this being SVG.

I decided to go for a simpler approach and:

- Changed the animations so they each use a single transform. The `scale` transforms were pretty hard to notice
- Added a maximum count to the animations, so they stop after 7s.

## `prefers-reduced-motion`

This was tricky because some of the shapes depend on the animated styles in order to render correctly. I refactored the code so more of the styles are defined directly in the SVG, so I could add the artwork to Sketch, and re-export it without any animation-dependent styles. Then added the media query.

This could have probably be a simpler `animation-play-state: paused`, but it feels safer to support there being no animation styles at all (for people who might disable them via browser extensions). It also makes the code much easier to follow.

---

Tested in latest Chrome, Firefox, Safari on macOS 10.14, as well as IE11. In IE11, only the exhaust__line animation works.

Screen recording of the updated animation, and how it stops (low-FPS GIF, looks smoother in practice):

![32051-new-animation](https://user-images.githubusercontent.com/877585/94495884-cbe9bc00-01ea-11eb-9dca-356534f5e9ec.gif)
",thibaudcolas,None,2020-09-28T23:27:30Z,2020-10-01T15:17:37Z
13462,Ticket 99999,,MAHANTH-wq,b'invalid',2020-09-27T10:42:45Z,2020-09-27T11:30:14Z
13461,grammatical-errors-fixed,,RigvedBansal,None,2020-09-26T21:56:04Z,2020-10-03T14:34:22Z
13460,Fixed #18995 -- Made blocktranslate tag raise TemplateSyntaxError when plural count is not a number.,ticket-18995,jacobtylerwalls,None,2020-09-26T19:04:38Z,2020-10-04T22:35:15Z
13459,fix #31550 correct content-type in test_file_response,"The test expects a `text/plain` content-type on a response containing a python file on Windows platforms, but the content type should be `text/x-python` as it is for other platforms.

See [#31550](https://code.djangoproject.com/ticket/31550) in the Django issue tracker.",asnelling,None,2020-09-26T00:01:43Z,2020-09-29T06:55:58Z
13458,Fixed #32042 -- Improved error messages for the number of submitted forms in formsets.,PR to fix the messaging issue mentioned in ticket #32042 - https://code.djangoproject.com/ticket/32042,meghanabhange,None,2020-09-25T08:46:02Z,2020-09-28T05:49:44Z
13457,Fixed typo and indentation in docs/ref/forms/fields.txt.,Noticed when reviewing #13148.,felixxm,None,2020-09-25T07:06:57Z,2020-09-25T08:04:21Z
13455,Update ASGI uvicorn deployment docs from upstream.,,graingert,None,2020-09-24T11:19:27Z,2020-09-29T08:55:07Z
13454,Fixed #32038 -- Fixed EmptyFieldListFilter crash with GenericRelation.,"ticket-32038

Thanks Javier Matos Odut for the report.",felixxm,None,2020-09-24T08:08:30Z,2020-09-25T10:58:52Z
13453,Fixed example of QuerySet.explain() with flags in docs.,"The output is actually a result of running explain with ANALYZE (includes `Planning time`, `Execution time`).",pawelzar,None,2020-09-23T08:51:32Z,2020-09-23T09:47:46Z
13452,Fix #32035 -- AbstractUser.clean assumes default manager is named objects,See ticket: https://code.djangoproject.com/ticket/32035#ticket,ben-bitdotio,None,2020-09-22T22:04:48Z,2020-09-23T08:04:23Z
13451,Fixed #32034 -- Removed redundant get_app_config() call in AdminSite.app_index.,Ticket https://code.djangoproject.com/ticket/32034,rsalmaso,None,2020-09-22T21:07:12Z,2020-09-23T08:44:04Z
13450,Stable/3.1.x,"
manage.py@dev > migrate
ssh://root@10.32.109.197:22/proj/env/bin/python3 -u /root/.pycharm_helpers/pycharm/django_manage.py migrate /proj/app/mysite
File tracking disabled
Operations to perform:
  Apply all migrations: admin, auth, cmdb, contenttypes, sessions
Running migrations:
  Applying cmdb.0001_initial...Traceback (most recent call last):
  File ""/root/.pycharm_helpers/pycharm/django_manage.py"", line 59, in <module>
    run_command()
  File ""/root/.pycharm_helpers/pycharm/django_manage.py"", line 46, in run_command
    run_module(manage_file, None, '__main__', True)
  File ""/usr/local/python3/lib/python3.8/runpy.py"", line 207, in run_module
    return _run_module_code(code, init_globals, run_name, mod_spec)
  File ""/usr/local/python3/lib/python3.8/runpy.py"", line 97, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File ""/usr/local/python3/lib/python3.8/runpy.py"", line 87, in _run_code
    exec(code, run_globals)
  File ""/proj/app/mysite/manage.py"", line 22, in <module>
    main()
  File ""/proj/app/mysite/manage.py"", line 18, in main
    execute_from_command_line(sys.argv)
  File ""/proj/env/lib/python3.8/site-packages/django/core/management/__init__.py"", line 401, in execute_from_command_line
    utility.execute()
  File ""/proj/env/lib/python3.8/site-packages/django/core/management/__init__.py"", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File ""/proj/env/lib/python3.8/site-packages/django/core/management/base.py"", line 330, in run_from_argv
    self.execute(*args, **cmd_options)
  File ""/proj/env/lib/python3.8/site-packages/django/core/management/base.py"", line 371, in execute
    output = self.handle(*args, **options)
  File ""/proj/env/lib/python3.8/site-packages/django/core/management/base.py"", line 85, in wrapped
    res = handle_func(*args, **kwargs)
  File ""/proj/env/lib/python3.8/site-packages/django/core/management/commands/migrate.py"", line 243, in handle
    post_migrate_state = executor.migrate(
  File ""/proj/env/lib/python3.8/site-packages/django/db/migrations/executor.py"", line 117, in migrate
    state = self._migrate_all_forwards(state, plan, full_plan, fake=fake, fake_initial=fake_initial)
  File ""/proj/env/lib/python3.8/site-packages/django/db/migrations/executor.py"", line 147, in _migrate_all_forwards
    state = self.apply_migration(state, migration, fake=fake, fake_initial=fake_initial)
  File ""/proj/env/lib/python3.8/site-packages/django/db/migrations/executor.py"", line 227, in apply_migration
    state = migration.apply(state, schema_editor)
  File ""/proj/env/lib/python3.8/site-packages/django/db/migrations/migration.py"", line 124, in apply
    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)
  File ""/proj/env/lib/python3.8/site-packages/django/db/migrations/operations/models.py"", line 92, in database_forwards
    schema_editor.create_model(model)
  File ""/proj/env/lib/python3.8/site-packages/django/db/backends/base/schema.py"", line 322, in create_model
    sql, params = self.table_sql(model)
  File ""/proj/env/lib/python3.8/site-packages/django/db/backends/base/schema.py"", line 195, in table_sql
    'table': self.quote_name(model._meta.db_table),
  File ""/proj/env/lib/python3.8/site-packages/django/db/backends/base/schema.py"", line 145, in quote_name
    return self.connection.ops.quote_name(name)
  File ""/proj/env/lib/python3.8/site-packages/django/db/backends/mysql/operations.py"", line 176, in quote_name
    if name.startswith(""`"") and name.endswith(""`""):
AttributeError: 'tuple' object has no attribute 'startswith'



The following error will be reported as soon as the new environment is submitted (migrate). Please solve it, thank you very much!",315xiaoyao,None,2020-09-22T13:07:35Z,2020-09-22T13:17:04Z
13449,Fixed #31723 -- Fixed window functions crash with DecimalField on SQLite.,"https://code.djangoproject.com/ticket/31723
The solution proposed by @charettes.",hramezani,None,2020-09-22T13:04:03Z,2020-09-23T08:00:23Z
13448,Fixed #32012 -- Made test database creation sync apps models when migrations are disabled.,"ticket-32012

Thanks Jaap Roes for the report.",felixxm,None,2020-09-22T10:28:46Z,2020-09-23T08:54:11Z
13446,Fixed #32016 -- Clarified manual logging config docs.,,carltongibson,None,2020-09-22T07:53:56Z,2020-09-22T12:17:13Z
13445,Corrected docstring quotes in various code.,,felixxm,None,2020-09-22T05:08:14Z,2020-09-22T08:30:57Z
13444,WIP:Fixed: #32030 Make Token Generator more universal,"Relevant ticket: https://code.djangoproject.com/ticket/32030

Splitted `PasswordResetTokenGenerator` into `BaseTokenGenerator` and `PasswordResetTokenGenerator` as its implementation for back compatibility",ilyachch,None,2020-09-22T02:55:27Z,2020-09-22T04:12:35Z
13443,Made jinja2 import in django.forms lazy,"I benchmarked the startup of a very simple (single file) django project to run `manage.py --help` using my Django test virtual environment.

I noticed that about 22% of the startup time was spent importing jinja2, which the project doesn't use.

I found this was from this one path in `django.forms.renderers` that imported the jinja2 backend ahead of use. I think it's therefore reasonable to make this import lazy. This will only affect projects where jinja2 is installed but not used, but given the prevalence of jinja2 that's likely to be many environments (e.g. if Ansible is installed, or the global Python install is used).

Timing (using [hyperfine](https://github.com/sharkdp/hyperfine)) shows about 20ms saved, or ~10%.

Before:

```
$ hyperfine --warmup 3 './manage.py --help'
Benchmark #1: ./manage.py --help
  Time (mean ± σ):     260.4 ms ±   5.5 ms    [User: 215.6 ms, System: 41.2 ms]
  Range (min … max):   252.4 ms … 270.3 ms    11 runs
```

After:

```
$ hyperfine --warmup 3 './manage.py --help'
Benchmark #1: ./manage.py --help
  Time (mean ± σ):     243.8 ms ±   4.6 ms    [User: 200.7 ms, System: 39.8 ms]
  Range (min … max):   237.7 ms … 254.9 ms    12 runs
```
",adamchainz,None,2020-09-21T21:09:07Z,2020-09-22T09:02:36Z
13442,Fixed #32027 -- Fixed wrapping of long words in admin error messages.,"https://code.djangoproject.com/ticket/32027#comment:1

Before:
![image](https://user-images.githubusercontent.com/2627/93783940-9f530480-fc2c-11ea-974f-dbf67376fc1a.png)


After:
![image](https://user-images.githubusercontent.com/2627/93783877-8a767100-fc2c-11ea-9163-9b6763816526.png)
",matthiask,None,2020-09-21T15:05:29Z,2020-09-23T11:51:51Z
13441,Add make toast func,,BenAwad95,b'invalid',2020-09-21T09:15:38Z,2020-09-21T09:16:43Z
13440,tutorial pt 1,,samiazam00,b'invalid',2020-09-20T21:34:06Z,2020-09-20T21:50:31Z
13439,Fixed #27906 -- Fixed count of RootElement in test.html.count().,ticket-27906,jacobtylerwalls,None,2020-09-20T14:48:26Z,2020-09-24T10:59:37Z
13438,Fixed #32028: Less padding around top-level form rows,"https://code.djangoproject.com/ticket/32028#ticket

I think it would be an improvement if the h1, h2, fieldset labels and individual labels were aligned. It didn't bother me before but since updating to Django@master with the new h2 (""Startseite"") subtitle (which I like!) it hasn't stopped bothering me.

I have checked collapsible fieldsets, tabular and stacked inlines – they all look alright.

Before: 

![image](https://user-images.githubusercontent.com/2627/93712262-15843800-fb55-11ea-939f-7181f1c6b960.png)

After:

![image](https://user-images.githubusercontent.com/2627/93712282-2e8ce900-fb55-11ea-9782-99edadd7394e.png)
",matthiask,None,2020-09-20T13:26:51Z,2020-09-23T11:13:46Z
13437,"Fixed #23681, Fixed #27445 -- Doc'd setting choices for NullBooleanField widgets.","ticket-23681
",jacobtylerwalls,None,2020-09-19T12:47:25Z,2020-10-08T10:46:02Z
13434,Refs #21181 -- Corrected DatabaseFeatures.test_collations for Swedish collation.,"Previously, backends used different keys ""swedish-ci"" or ""swedish_ci"".",felixxm,None,2020-09-18T10:22:14Z,2020-09-18T13:55:26Z
13433,Fixed #32029 -- Removed unnecessary margin in admin CSS for horizontal radio inputs.,"https://code.djangoproject.com/ticket/32029#ticket

Before:
![image](https://user-images.githubusercontent.com/2627/93574996-5d5e6000-f999-11ea-8cd2-35ca41c5d22d.png)

After:
![image](https://user-images.githubusercontent.com/2627/93574946-51729e00-f999-11ea-850a-86e250ddb146.png)

(Sorry for the missing ticket etc. I hope it's fine in this case.)",matthiask,None,2020-09-18T08:27:02Z,2020-09-23T11:59:36Z
13432,Made indexes tests use required_db_features.,,felixxm,None,2020-09-18T07:37:49Z,2020-09-22T08:30:12Z
13431,Fixed #31880 -- Made QuerySet.aggregate() raise FieldError when aggregating over aggregation aliases.,"Ticket: https://code.djangoproject.com/ticket/31880

(First implementation: https://github.com/django/django/pull/13390)

Suggested patch for the discussion https://code.djangoproject.com/ticket/31880#comment:7",David-Wobrock,None,2020-09-17T15:47:07Z,2020-09-29T07:57:13Z
13430,Refs #32013 -- Added backward incompatibility note about ModelChoiceIterator changes.,ticket-32013,felixxm,None,2020-09-17T11:39:14Z,2020-09-21T07:03:25Z
13429,Proposal of better documentation for dateformat,"Currently on reading the comments, It seems they haven't been updated because on using `dateformat` with `datetime`, django module settings setup is required, so thought of updating it.  Also `dateformat` is not searchable in django offical documentation.",S2606,None,2020-09-17T11:21:53Z,2020-09-17T12:12:14Z
13428,Documented dateparse functions’ ability to return None,,adamchainz,None,2020-09-16T17:33:17Z,2020-09-29T10:24:11Z
13427,fix exist pg jsonb error,"I recently upgrade my side project to django 3.1 , which database use postgres, 


```
class NewsRound(Model):
    class Meta:
        db_table = ""news_round""

    ....
    detail = model.JSONField(""rule"", default=hook_default)
```

when i execute 

```
NewsRound.objects.first()
```

then exception happens like this

![image](https://user-images.githubusercontent.com/5625783/93360204-fdbb6400-f875-11ea-9d9c-1b1692127cad.png)


for now i have to do workaround like this

```
import json

from django.db.models import JSONField as BuiltInJSONField


class JSONField(BuiltInJSONField):

    def from_db_value(self, value, expression, connection):
        if value is None:
            return value
        if isinstance(value, dict):
            return value
        try:
            return json.loads(value, cls=self.decoder)
        except json.JSONDecodeError:
            return value

```

PS: detail field in postgres is jsonb",twocucao,None,2020-09-16T15:41:41Z,2020-09-17T05:52:06Z
13426,Fixed #31916 -- Fixed combined queryset crash when combining with ordered combined querysets.,https://code.djangoproject.com/ticket/31916,hramezani,None,2020-09-16T13:00:06Z,2020-09-17T06:26:07Z
13425,Fixed #32004 -- Clarified docs for when request.FILES is set.,"Relevant ticket: https://code.djangoproject.com/ticket/32004

Let's discuss how to phrase this.",janosroden,None,2020-09-16T08:26:23Z,2020-09-22T11:28:02Z
13424,Refs #32007 -- Skipped test_q_expression_annotation_with_aggregation on Oracle.,"Boolean expressions are not supported in `SELECT` and `GROUP BY` on Oracle.

```
Traceback (most recent call last):
  File ""/home/jenkins/workspace/django-oracle-3.1/database/oracle18/python/python3.6/django/db/backends/utils.py"", line 84, in _execute
    return self.cursor.execute(sql, params)
  File ""/home/jenkins/workspace/django-oracle-3.1/database/oracle18/python/python3.6/django/db/backends/oracle/base.py"", line 534, in execute
    return self.cursor.execute(query, self._param_generator(params))
cx_Oracle.DatabaseError: ORA-00923: FROM keyword not found where expected
```",felixxm,None,2020-09-16T08:08:16Z,2020-09-16T09:47:07Z
13423,Fixed #32002 -- Added headers parameter to HttpResponse and subclasses.,"[Ticket](https://code.djangoproject.com/ticket/32002)

There are now two overlapping ways to set the `Content-Type` header. I think it makes sense to take `content_type` over `headers`, but not sure if we should check this in `__init__()` and raise an exception, document it, or perhaps neither is necessary.",knyghty,None,2020-09-15T10:46:41Z,2020-10-07T07:26:37Z
13422,Fixed #32007 -- Fixed queryset crash with Q() annotation and aggregation.,"ticket-32007

Thanks Gordon Wrigley for the report.

Regression in 8a6df55f2dd5131282084a4edfd48f63fbf8c69a.",felixxm,None,2020-09-15T08:53:37Z,2020-09-15T09:41:07Z
13421,Prevented creation of 3D test models if not supported.,"There's no problem creating the models on MySQL and Oracle
(which don't support 3D storage) but CockroachDB currently
crashes with a syntax error.",timgraham,None,2020-09-15T01:58:11Z,2020-09-15T12:30:51Z
13420,Added DatabaseIntrospection.index_default_access_method on the PostgreSQL backend.,This hook is for the CockroachDB backend where the name is 'prefix'.,timgraham,None,2020-09-14T13:18:28Z,2020-09-15T12:32:57Z
13419,Fixed #32003 -- Added obj argument to has_perm() methods in tests.,to match the signature of the real implementation,atodorov,None,2020-09-14T09:49:16Z,2020-09-14T10:28:31Z
13417,Fixed #31990 -- Fixed QuerySet.ordered for GROUP BY queries on models with Meta.ordering.,"ticket-31990

Regression in 0ddb4ebf7bfcc4730c80a772dd146a49ef6895f6.

Thanks Julien Dutriaux for the report.",felixxm,None,2020-09-14T07:49:15Z,2020-09-14T18:07:55Z
13416,Removed hardcoded paths to SpatialRefSys models in tests.,(Third-party backends deserve a chance to be tested.),timgraham,None,2020-09-14T01:47:49Z,2020-09-14T12:57:28Z
13415,Refs #26697 -- Removed empty gis_tests.maps.,,timgraham,None,2020-09-14T01:24:54Z,2020-09-14T12:57:45Z
13414,WIP: Pass obj in user.has_perm() in ModelAdmin,"to facilitate integration between backends providing object level
permissions, like django-guardian and applications that heavily
utilize the admin panel.",atodorov,None,2020-09-13T20:27:24Z,2020-09-14T08:32:53Z
13413,Fixed #31636 -- Made BooleanFieldListFilter respect Field.choices.,"Change the behaviour of BooleanFieldListFilter in such a way that choices are
respected while populating filters on the admin page.

[ticket-31636](https://code.djangoproject.com/ticket/31636)",manav014,None,2020-09-13T13:05:54Z,2020-09-15T13:20:10Z
13412,Adds a pre/post migration signal to each migration that runs,"We're currently using [django-tenant-schemas](https://github.com/bernardopires/django-tenant-schemas) and we're approaching the 300 tanant mark, while deploying 20-30 migrations at a time * ~300 tenants every time we deploy -- it gets a little crazy. Because of this we need a hook to each migration to keep track of them.",kingbuzzman,None,2020-09-13T08:44:31Z,2020-09-14T06:09:15Z
13411,Corrected exception types in QuerySet docs.,,felixxm,None,2020-09-12T19:52:17Z,2020-09-13T18:09:49Z
13410,Fixed #31989 -- Fixed return value of django.core.files.locks.lock()/unlock() on POSIX systems.,https://code.djangoproject.com/ticket/31989,hramezani,None,2020-09-11T09:58:41Z,2020-09-15T08:55:34Z
13409,Fixed #31986 -- Fixed admin filter sidebar scrolling.,"Alternative to https://github.com/django/django/pull/13397

This gets rid of all horizontal scrollbars I can find, works reasonably well at all sizes, and doesn't come with any extra issues as far as I can tell. It is quite a bit more code than the other PR, however.

I've tested everything I can think of - RTL, all screen sizes, inlines, with the various extra stuff (actions, date hierarchy, search, very long list filter), with and without nav sidebar... That said, I'm sure there are things I didn't think of.

I had to move out the date hierarchy and search bar from the container to outside of it to accommodate flexbox. I could have added yet another container div but I feel like there are enough of those already. So there is a small change, the search and date hierarchy are positioned slightly further up relative to the list filter than they were before, but I don't think it looks any worse.",knyghty,None,2020-09-11T08:22:29Z,2020-09-30T19:48:57Z
13408,Fixed #99999 -- Added a shortcut function to make toast.,,yuri20198,None,2020-09-11T00:00:11Z,2020-09-11T00:03:09Z
13407,Update middleware.py,"It is encouraged to use an exclamation mark, to emphasize when something is surprising or forceful.
It will help users understand the true meaning of the messages and get the sentence clear.",Awawdi,None,2020-09-10T13:07:00Z,2020-09-10T14:06:36Z
13406,Fixed #31943 -- Fixed recreating QuerySet.values()/values_list() when using a pickled Query.,"https://code.djangoproject.com/ticket/31943
Solution and test case proposed by @felixxm on the ticket.
I just added documentation and another test for this patch
",hramezani,None,2020-09-10T12:38:11Z,2020-09-11T08:25:57Z
13405,Update uploadedfile.py: while uploading file it creates unnecesarry quote,"### while uploading file it creates unnecesarry quote
`_, ext = os.path.splitext(name)` this line rarely creates extensions like  'mp4""' according to name of file
It puts one more unnecessary quote and causes errors

_i recommend to use_ `ext = ext.replace('""', """")` this line to fix after that line
",jehato47,None,2020-09-10T10:16:00Z,2020-09-10T10:41:18Z
13404,Refs #31956 -- Doc'd consequences of disabling psycopg2's JSONB typecaster.,"ticket-31956
ticket-31991",felixxm,None,2020-09-10T07:46:15Z,2020-09-10T09:00:54Z
13403,Fixed #31993 -- Added subtitles to admin change/view pages.,ticket-31993,jdufresne,None,2020-09-09T23:34:45Z,2020-09-11T05:07:26Z
13402,Fixed #31992 -- Made admin password reset templates use title/content_title blocks from the base template. ,ticket-31992,jdufresne,None,2020-09-09T22:36:29Z,2020-09-11T02:51:27Z
13401,Fixed #31750 -- Made models.Field equality compare models for inherited fields.,ticket-31750,felixxm,None,2020-09-09T11:19:00Z,2020-09-09T20:16:33Z
13400,Fixed #31967 -- Doc'd consequences of resolving an output_field for Value().,https://code.djangoproject.com/ticket/31967,hramezani,None,2020-09-09T10:55:54Z,2020-09-10T08:28:09Z
13399,Refs #23130 -- Added test for BooleanField choices generation.,"Adjusts @jacobtylerwalls' #13271. 

Nothing to do with `blank` or `null` but `BooleanField` with `choices` and without `default` **should** generate the empty option. 

I think this is Tim's [comment:22](https://code.djangoproject.com/ticket/23130#comment:22):

> Even if no further code changes are required, a test for this use case might be added.

(it's the dual of the test immediately above)

The validation issues are a red-herring. We **can** close the issue — I will write up conclusions and comment on other related PR anon. ",carltongibson,None,2020-09-09T10:31:21Z,2020-09-10T09:42:11Z
13398,Fixed #31987 -- Fixed Cast() with DurationField on MySQL.,"Cast datatype for DurationField was mising for MySQL. It was not possible to use:

    django.db.models.functions.Cast(x, output_field=DurationField())

because it generated `CAST(xxx AS bigint)` which is not valid MySQL syntax.

Fixes #31987",me2d09,None,2020-09-08T14:32:07Z,2020-09-09T06:01:46Z
13397,Fixed #31986 Django Admin filter sidebar does not scroll.,"At first, I solved the problem with absolute positioning. But it doesn't look very beautiful. So we use `overflow:hidden` to trigger  [BFC](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context) solve the problem. But unfortunately it led to other problems. So go back to the absolute positioning solution",007gzs,None,2020-09-08T10:58:11Z,2020-09-30T10:07:27Z
13395,Fixed #31962 -- Made SessionMiddleware raise SessionInterrupted when session destroyed while request is processing.,https://code.djangoproject.com/ticket/31962,hramezani,None,2020-09-07T11:35:41Z,2020-09-09T07:36:09Z
13394,Fixed #31985 -- Corrected salted_hmac()'s docstring about supported algorithms.,,franciscouzo,None,2020-09-07T07:17:39Z,2020-09-07T08:59:37Z
13393,Refs #21231 -- Corrected parse_qsl() fallback.,An oversight in fd209f62f1d83233cc634443cfac5ee4328d98b8.,timgraham,None,2020-09-07T02:30:18Z,2020-09-07T11:29:52Z
13391,Fixed #31944 -- Used addCleanup() to register TestContextDecorator cleanups.,"Cleanups from addCleanup() are scheduled to happen in reverse order to
the order they are added (LIFO). Ensures each cleanup is executed from
the innermost to the outermost.",francoisfreitag,None,2020-09-06T12:39:15Z,2020-09-07T07:16:52Z
13390,Fixed #31880 -- Handled overlapping annotations and aggregations,"Tackles https://code.djangoproject.com/ticket/31880

Annotating and aggregating are actually using the same dictionary behind the scenes. Therefore, when annotating a field that should be used in the subquery, and then defining an aggregation with the same alias, the subquery will not query the initial annotation.

In order to fix that with the minimal change, we introduce a dict that will only kick in, in this special case, and keep track of the overridden aliases that should be in the subquery.",David-Wobrock,None,2020-09-05T18:21:02Z,2020-09-17T15:30:00Z
13388,Updated groups doc,"Added references on to writing custom commands and migrations. So it took me some time to realize how to add groups in Django, especially I couldn't find out where to write them so that they are executed before the website is running, but after the database connection is created.

I am ready for you to deny this PR as there is a probability that not everyone is as blind as I am, plus I am not sure if this is the best place to put this info, or maybe this is already mentioned somewhere, but I never found that.

Additionally, would a guide on how to create groups and assign them permissions welcome? I feel I have spent too much time figuring out how to create group, assign permissions to it, and then put a user into that group. However, I feel that this might be trivial for others, so I wonder how necessary it is?",VladMasarik,None,2020-09-05T06:59:51Z,2020-09-05T11:09:35Z
13387,Fix months and weekday names from Portuguese translations.,"Contrary of English language, in Portuguese months and weekdays names haven't start with capital letter.",plainspooky,None,2020-09-04T20:01:15Z,2020-09-06T11:59:01Z
13386,Fixed #31982 -- Made HttpResponse.set_cookie() cast max_age argument to an integer.,https://code.djangoproject.com/ticket/31982,hramezani,None,2020-09-04T12:06:05Z,2020-09-05T08:42:10Z
13385,Fixed #27417 -- Made RenameField operation a noop for field name case changes on Oracle.,"Field names are always uppercased in the Oracle backend. Changing case should be a noop to avoid database errors: _""ORA-00957: duplicate column name""_.

ticket-27417",felixxm,None,2020-09-04T11:08:20Z,2020-09-04T18:27:27Z
13383,added examples for built-in safe filter,It is an improvement in documentation. I think some examples must be added to explain the use of 'safe' built-in filter. So I have added two examples to show the difference in using this filter and not using this filter.,niteshsinha17,None,2020-09-03T12:49:07Z,2020-09-03T19:25:43Z
13382,Refs #31224 -- Made sync_to_async() examples with ORM calls use thread sensitive.,,felixxm,None,2020-09-03T09:38:20Z,2020-09-03T11:30:25Z
13381,Fixed #31979 -- Made django.test.utils.setup_databases()'s time_keeper argument optional.,"ticket-31979

refs ticket-31811",jdufresne,None,2020-09-03T00:05:29Z,2020-09-03T07:48:41Z
13380,Allow to use with `ForeignKey(to_field=...`,"I have a model like this:

```python
class Location(Model):
    fias_id = UUIDField()
    city_fias_id = UUIDField()
    city = ForeignObject(to='self', from_fields=['city_fias_id'], to_fields=['fias_id'], ...
    ...
```

and with current code I can not use `AutocompleteSelect` becouse fied `pk` hardcoded on `AutocompleteMixin.optgroups`
my patch fix this problem.",mavriq,None,2020-09-02T14:41:06Z,2020-09-04T12:30:52Z
13379,Refs #31901 -- Fixed SeleniumTests.test_list_editable_popups with headless mode.,See [logs](https://djangoci.com/job/django-selenium/lastCompletedBuild/testReport/).,felixxm,None,2020-09-02T10:16:45Z,2020-09-02T13:16:09Z
13378,"Refs #29887, Refs #24212 -- Added servers configuration hook for memcached backends.","The servers property can be overridden to allow memcached backends to alter the server configuration prior to it being passed to instantiate the client. This allows avoidance of documentation for per-backend differences, e.g. stripping the 'unix:' prefix for `pylibmc`.",felixxm,None,2020-09-02T06:51:44Z,2020-09-02T07:24:50Z
13377,add Expected,,007gzs,None,2020-09-02T02:11:51Z,2020-09-02T05:00:36Z
13376,Refs #11390 -- Clarified dual-calling of ChoiceField.choices callable.,,carltongibson,None,2020-09-01T10:42:01Z,2020-09-02T07:08:46Z
13375,Use versionchanged instead of deprecated,,verhovsky,None,2020-09-01T08:57:51Z,2020-09-01T08:59:53Z
13374,Refs #29887 -- Simplified memcached client instantiation.,,felixxm,None,2020-09-01T08:27:21Z,2020-09-01T09:16:41Z
13373,[IMP] improve if conditation ,improve if conditation make it in one line ,shahshivam058,None,2020-08-31T14:17:52Z,2020-08-31T14:44:23Z
13372,Update lookups.py,"In the mysql5.6 environment, this function will cause the index to fail, and the query speed becomes very slow,",tjj021,None,2020-08-31T09:17:44Z,2020-08-31T09:30:35Z
13371,Fixed #31843 -- Fixed pickling named values from QuerySet.values_list().,Allowed pickling namedtuple-s returned by the QuerySet.values_list(),kwist-sgr,None,2020-08-31T08:55:35Z,2020-09-17T06:46:02Z
13370,Fixed #31843 -- django.db.models.query.Row is not pickleable,Allowed pickling namedtuple-s returned by the QuerySet.values_list(),kwist-sgr,None,2020-08-31T07:21:30Z,2020-08-31T08:44:51Z
13369,Fixed #31919 -- Resolved output_field of IntegerField subclasses combinations.,ticket-31919,charettes,None,2020-08-31T02:29:12Z,2020-08-31T05:11:04Z
13368,Fixed #31965 -- Adjusted multi-table fast-deletion on MySQL/MariaDB.,"ticket-31965

---

The optimization introduced in 7acef095d73 did not properly handle deletion involving filters against aggregate annotations.

It initially was surfaced by a MariaDB test failure but misattributed to an undocumented change in behavior that resulted in the systemic generation of poorly performing database queries in 5b83bae031.

Thanks @harmant for the report.

Refs #23576.",charettes,None,2020-08-30T17:29:30Z,2020-08-31T11:33:00Z
13367,Fixed #31894 -- Added note and tests for JSONField key lookups with QuerySet.exclude().,"[ticket-31894](https://code.djangoproject.com/ticket/31894)

Thanks for reporting this @carltongibson and @laymonage ! ",jpribyl,None,2020-08-30T17:19:54Z,2020-09-04T08:17:30Z
13366,Corrected note about long names in search docs.,,adursun,None,2020-08-30T16:25:49Z,2020-09-04T10:00:28Z
13365,Fixed #31766 -- Made GDALRaster.transform() return a clone for the same SRID and driver.,"Implemented a clone method using ds_copy to clone GDALRaster objects. 
Added conditional to simply return a clone of GDALRaster if SRID matches with transform srs argument.",bartonip,None,2020-08-30T11:41:05Z,2020-09-11T09:38:02Z
13364,Fixed #31858 -- Reallowed whitespaces in URL paths outside of parameters.,"**Ticket:** https://code.djangoproject.com/ticket/31858

**Background**
[Ticket 29667](https://github.com/django/django/pull/11688) implemented an exception if there was whitespace found in the URL path converter. 

This ticket updates that implementation by specifying invalid white spaces only between the `<` and `>` characters.  

**Implementation**
Instead of passing the entire `route` string into the exception check on Line 212, we only pass the part of the route between the`<` and `>` characters. To do this, we find the positions of those 2 characters and string index between them. 

`.find()` returns the index of the first occurrence of a character in a string.

![Screen Shot 2020-08-29 at 12 30 07 PM](https://user-images.githubusercontent.com/51100862/91644697-6d66cd80-e9f3-11ea-8dd7-a49780c6305e.png)


We could also do this in a 1 liner but that would sacrifice some readability. 
![Screen Shot 2020-08-29 at 12 32 58 PM](https://user-images.githubusercontent.com/51100862/91644738-cd5d7400-e9f3-11ea-9e62-1764ea1a92e0.png)


I also updated the error message to be more specific to this new implementation: 
Old Error: `URL route 'space/<int: num>' cannot contain whitespace.`
New Error: `URL route 'space/<int: num>' cannot contain whitespace between the < and > characters.`
",timpark0807,None,2020-08-29T19:46:47Z,2020-09-02T08:27:14Z
13363,Fixed #31948 -- Added tzinfo parameter to TruncDate() and TruncTime().,"As detailed here: https://code.djangoproject.com/ticket/31948

The TruncDate and TruncTime functions don't currently take a tzinfo parameter. This was unexpected and as I understand it there is no reason support wasn't added.  This PR adds tests and documentation for the new feature as well.",joeyjoejoejr,None,2020-08-29T18:59:41Z,2020-09-02T06:18:17Z
13361,Fixed #31962 -- Use more specific SuspiciousSession class,,alexmv,None,2020-08-28T19:36:37Z,2020-08-31T08:16:06Z
13360,Fixed #30952 -- Log out users when they access a password reset link,"PasswordResetConfirmView relies on a token in the session. But
user code (e.g. for logging) might access request.user and so
inadvertently flush the session. This then causes a KeyError when
PasswordResetConfirmView tries to delete the token.

To fix this, explicitly call auth_logout, so that the session is a
clean slate.",pdewacht,None,2020-08-28T12:50:34Z,2020-09-02T08:13:43Z
13359,added a new type of CreateView,"This new type of Edit View that inherits from CreateView let set more than one model to a CreatView. 
For example: 

class ExampleCreateView2(CreateViewV2):
    models_fields = {
        Model1: [
            'field1',
            'field2'
        ],
        Model2: [
            'field1',
            'field2',
            'field3'
        ],
        Model3: ['field1'],
       etc ..
       
    }
    template_name = 'index.html'

And, in the .html you just need to do :
    {% for form in forms %}
        {{form}}
    {% endfor %}
",marcosazcona00,None,2020-08-28T07:44:46Z,2020-08-28T07:48:03Z
13358,Fixed #31956 -- Fixed crash of ordering by JSONField with a custom decoder on PostgreSQL.,"ticket-31956

Thanks Marc Debureaux for the report.",felixxm,None,2020-08-28T07:04:48Z,2020-09-01T17:49:06Z
13357,Update models.py,renaming USERNAME_FIELD to LOGIN_FIELD,Priyansh2001here,None,2020-08-28T05:54:43Z,2020-08-28T07:07:22Z
13356,Fixed #31952 -- Fixed EmptyFieldListFilter crash with reverse relationships.,,jmfederico,None,2020-08-27T20:20:01Z,2020-08-31T08:40:43Z
13355,Fixed #30563 -- Optimized form Media by removing duplicated assets when adding.,"[Ticket #30563](https://code.djangoproject.com/ticket/30563)

There are a number of ways to solve this some are discussed in some detail on the ticket:

1. Set an arbitrary limit at which point `merge` is called. 

Con : this could result in the wrong order of outputs as it's unclear when the ordering is final. 

2. Use `OrderedSet` (something like comment 5 on the ticket)

Pro : ensures the right order
Con : more complex, a number of conversions between OrderedSets and lists may be required. 

3. Dedupe when items are exactly the same, let merge work out the different ones later

Pro : I _think_ this is simpler than using an `OrderedSet`. 
Con : If items are long the `in` search on a list could be slow.

I've tried to implement option 3. It adds the lists together but removes any items that are exactly the same. This solves the test in the ticket as the time is now very small. 

`100000 additions took: 0:00:00.136388`",smithdc1,None,2020-08-27T18:08:56Z,2020-09-24T16:32:35Z
13354,Fixed #31954 -- Fixed migration optimization for MTI model creation with parent model with mixed case app label.,"resolve_relation() should not convert the app name to lowercase, otherwise the references_model() function in db/migrations/operations/models.py will not recognize model dependencies if the app name has uppercase letters.",koendewit,None,2020-08-27T13:16:37Z,2020-08-28T12:14:39Z
13353,Refs #31913 -- Corrected comment in PasswordResetTokenGenerator.,"The token used to be limited to 20 characters in length but for some time it's been longer (32 characters currently, I think).

The URL conf rule that used to match it for ""password_reset_confirm"" was once matching a token up to 20 characters long but these days it has no limit.

Re https://code.djangoproject.com/ticket/31913#comment:2",philgyford,None,2020-08-27T09:18:17Z,2020-08-27T11:28:25Z
13352,Fixed #31912 -- Removed strict=True in Path.resolve() in project template and CommonPasswordValidator.,"This caused permission errors when user didn't have permissions to all parents directories of Django installation path.

Thanks tytusd and leonyxz for reports.
    
Regression in edeec1247e52de6fc32cee93e96d4ce36003ea4b and 26554cf5d1e96db10d0d5f4b69683a22fb82fdf8.

ticket-31912",felixxm,None,2020-08-27T07:06:40Z,2020-08-28T03:57:41Z
13350,Fixed #30422 -- Made TemporaryFileUploadHandler handle interrupted uploads.,"Patch for [ticket-30422](https://code.djangoproject.com/ticket/30422).
[Original PR](https://github.com/django/django/pull/12475), had to create a new one because I kind of messed up while rebasing.",aryan9600,None,2020-08-26T12:07:10Z,2020-09-30T08:55:47Z
13349,Fixed #31947 -- Made QuerySet.update_or_create() reuse get_or_create().,,homm,None,2020-08-26T10:29:39Z,2020-08-27T11:35:56Z
13348,Update related.py,,Rombora,b'invalid',2020-08-25T20:42:38Z,2020-08-25T22:34:26Z
13347,Fixed #31942 -- Made settings cleansing work with dictionary settings with non-string keys.,"Allowed SafeExceptionReporterFilter to descend into dictionaries which
have non-string key to hide sensitive secrets.",jlaine,None,2020-08-25T13:01:21Z,2020-08-26T13:02:46Z
13346,Fixed #31936 -- Fixed __in lookup on key transforms for JSONField.,"This resolves an issue on databases without a native `JSONField` (MariaDB, MySQL, SQLite, Oracle), where values must be wrapped.

Thanks Sébastien Pattyn for the report.

ticket-31936",felixxm,None,2020-08-25T06:25:31Z,2020-08-26T20:13:42Z
13345,Moved CreateExtension release notes into django.contrib.postgres section.,,CleitonDeLima,None,2020-08-25T01:07:59Z,2020-08-25T12:44:14Z
13344,Fixed #31928 -- Fixed detecting an async get_response in various middlewares.,"SecurityMiddleware and the three cache middlewares were not calling
`super().__init__()` during their initialization or calling the required
`MiddlewareMixin._async_check()` method.

This made the middlewares not properly present as coroutine and confused
the middleware chain when used in a fully async context.

The session middleware was correctly calling `_async_check` itself, this
was changed to calling `__init__` for consistency and to reduce the
likelihood of a future breakage if MiddlewareMixin changes its
implementation.

The MiddlewareMixin tests were extended to check that all of the
features of the class are supported by all the middlewares present in
the project.",kmichel-sereema,None,2020-08-24T20:50:35Z,2020-08-28T11:31:50Z
13343,Fixed #31941 -- Corrected FileField.deconstruct() with a callable storage.,https://code.djangoproject.com/ticket/31941,brianhelba,None,2020-08-24T19:29:12Z,2020-09-02T16:50:18Z
13342,Fixed #31934 -- Added note about the default of SameSite cookie flag in modern browsers.,"ticket-31934
Just created a PR based on @felixxm [comment on the ticket](https://code.djangoproject.com/ticket/31934#comment:4).",hramezani,None,2020-08-24T12:03:09Z,2020-08-31T10:33:11Z
13341,"Fixed #31877 -- Reverted ""Fixed #19878 -- Deprecated TemplateView passing URL kwargs into context.""","ticket-31877
ticket-19878

I think we should revert it because we don't have a clear deprecation path, and close ticket-19878 as wontfix.",felixxm,None,2020-08-24T07:17:59Z,2020-08-24T09:38:23Z
13340,Added assertions for the results of migrating an integer pk to AutoField.,They catch an issue in django-cockroachdb.,timgraham,None,2020-08-22T23:16:07Z,2020-08-24T12:16:25Z
13339,Fixed #24533 -- Dropped PostgreSQL sequence and Oracle identity when migrating away from AutoField.,https://code.djangoproject.com/ticket/24533,timgraham,None,2020-08-22T18:39:44Z,2020-09-17T19:39:02Z
13338,Fixed #31918 -- Allowed QuerySet.in_bulk() to fetch on a single distinct field.,"Ticket Link : https://code.djangoproject.com/ticket/31918

in_bulk function now supports mapping to distinct fields in a queryset.

",kc611,None,2020-08-22T06:01:57Z,2020-08-26T09:16:24Z
13337,Fixed #31925 -- Fixed typo in docs/releases/3.0.txt.,Fixed #31925 -- Replaced 'FILE_UPLOAD_PERMISSION' to 'FILE_UPLOAD_PERMISSIONS',kc611,None,2020-08-21T06:13:34Z,2020-08-21T15:18:03Z
13336,Fixed #31906 -- Fixed typo in docs/ref/forms/fields.txt.,Fixed #31906 -- Replaced 'iterator' to 'iterate' and 'choice' to 'choices',ninad-k,None,2020-08-21T05:17:49Z,2020-08-21T07:45:00Z
13335,Fixed #31906 -- Corrected fields.txt file,Fixed #31906 -- Replaced 'iterator' to 'iterate' and 'choice' to 'choices'. ,ninad-k,None,2020-08-21T04:30:18Z,2020-08-21T06:29:51Z
13334,Fixed #31905 -- Made MiddlewareMixin call process_request()/process_response() with thread sensitive.,"MiddlewareMixin use sync_to_async with thread_sensitive to prevent errors in database connection clearance.
https://code.djangoproject.com/ticket/31905",mgaller,None,2020-08-20T16:45:28Z,2020-08-26T05:54:56Z
13333,Refs #30897 -- Added test for WAL option to Queryset.explain() on PostgreSQL 13+.,ticket-30897,pope1ni,None,2020-08-20T15:59:28Z,2020-08-24T13:05:26Z
13331,Async docs incorrectly stated that async_to_sync runs async function in same thread,"The original docs said in the same paragraph, that when using `async_to_sync`, the async function will be called in the same thread (if a loop is present), and then at the end it said the function will always be called in a new thread. The first statement was incorrect, the async Task is added to the loop in the current thread, but the async function is executed in a new thread, no the same one from the loop.",fisadev,None,2020-08-19T23:43:53Z,2020-09-03T10:26:08Z
13330,"Adding context for the method ""choice_set""","The method ""choice_set"" appearing without explanation is confusing. I tried to add clarity there. See so many people having the same issue here:

https://stackoverflow.com/questions/2048777/what-is-choice-set-in-this-django-app-tutorial",manuelsh,None,2020-08-19T21:29:37Z,2020-09-11T02:52:03Z
13329,Improved wording in async views docs.,"I think this could prevent some confusion, since parallelism means something a little different to what async does, and the difference is usually a point of difficulty when learning about async.",fisadev,None,2020-08-19T19:20:17Z,2020-08-20T07:06:51Z
13328,Fixed #31909 -- Fixed typo in docs/ref/contrib/admin/index.txt.,"This is my first PR here, I read some examples of people who helped correct the documentation before, I hope I am not doing anything wrong. I encountered this error when I was looking for solutions to a Stackoverflow issue.

https://github.com/django/django/pull/12159",endersonmenezes,None,2020-08-19T18:24:58Z,2020-08-20T12:37:42Z
13327,Fixed #31978 -- Added username hint to admin's password reset confirmation form.,"Include hidden username field on password reset to help password managers

https://code.djangoproject.com/ticket/31978",collinanderson,None,2020-08-19T17:56:58Z,2020-09-03T07:47:27Z
13325,Fixed #31907 -- Fixed missing validate_key() calls in cache backends.,ticket-31907,pope1ni,None,2020-08-19T13:13:56Z,2020-08-24T08:44:36Z
13324,Add ModelBase._state variable annotation,"This is [a publicly documented field of `Model`](https://docs.djangoproject.com/en/3.1/ref/models/instances/#django.db.models.Model._state) but libraries such as unittest.mock cannot detect this field because it is only declared within `__init__()`. By adding a variable annotation, they will be able to detect it, making it compatible with unittest.mock's `spec_set`, for example.

I'm not sure whether this qualifies as a ""trivial"" change (being a one-line change), so I haven't yet created a Trac ticket for it.",RJPercival,None,2020-08-19T12:04:27Z,2020-09-17T10:33:01Z
13323,Fixed #31902 -- Fixed crash of ExclusionConstraint on expressions with params.,[Ticket 31902](https://code.djangoproject.com/ticket/31902),maximpetrov,None,2020-08-19T02:26:19Z,2020-08-20T05:45:15Z
13322,Fixed #31901 -- Prevented content overflowing in the admin changelist with navigation sidebar.,[ticket_31901](https://code.djangoproject.com/ticket/31901),007gzs,None,2020-08-19T00:41:53Z,2020-09-01T06:25:11Z
13321,Fixed #31895 -- Fixed crash when decoding invalid session data.,"ticket-31895, see also [my comment](https://github.com/django/django/pull/12460#discussion_r380101422) in the original patch.

Thanks Matt Hegarty for the report.

Regression in  d4fff711d4c97356bd6ba1273d2a5e349326eb5f.",felixxm,None,2020-08-18T10:43:52Z,2020-08-19T10:06:05Z
13320,Use UnsafeLoader for fixtures loading in YAML,"Ticket: https://code.djangoproject.com/ticket/31896#ticket

Currently, Django uses PyYAML's SafeLoader to load fixtures which prevent to use some advance utils like `!!python/object/apply`. For example, to create dates related to the current date for example, and not static dates that you have to update over time so that they aren't too old.

Anyway, there could be many reasons why a developer would want to use such an util in features. And I believe it should be safe to use UnsafeLoader for fixtures since this is certainly a data that developers create themselves.",GProst,None,2020-08-17T18:55:25Z,2020-08-18T05:26:04Z
13319,Improve ContextMixin,"I just added useful `get_context_updates` method in `ContextMixin`. Before this, if you want to update your context, you need to write:
```python
def get_context_data(self, *args, **kwargs):
    context = super().get_context_data(*args, **kwargs)
    context.update({""message"": ""egassem""})
    return context
```
And now, with this handy method, you can simple write the following:
```python
def get_context_updates(self):
    return {""message"": ""egassem""}
```

The key feature of writing this, while there is `extra_context` attribute, is that you can now access `self`. This means, you have access, for example, to `request`",ibrag8998,None,2020-08-17T18:17:22Z,2020-08-18T04:27:48Z
13318,Fixed typo in docs/ref/django-admin.txt.,,felixxm,None,2020-08-17T11:43:57Z,2020-08-18T04:28:34Z
13317,"Refs #9061, Refs #20347 -- Added absolute_max and can_delete_extra arguments to generic_inlineformset_factory().",We've missed `generic_inlineformset_factory()` in 162765d6c3182e36095d29543e21b44b908625fc and 433dd737f94b09043f64b873b0ac067b3f97364b.,felixxm,None,2020-08-17T11:39:19Z,2020-08-18T07:37:20Z
13316,Refs #17642 -- Doc'd min_num and validate_min arguments in modelformset_factory() docs.,I also changed arguments ordering to match the `modelformset_factory()`\'s signature.,felixxm,None,2020-08-17T11:01:19Z,2020-08-18T07:30:36Z
13313,Fixed #27679 -- Doc'd that empty formsets display extra + min_num forms.,"[Ticket #27679](https://code.djangoproject.com/ticket/27679)

This feature is tested here:
https://github.com/django/django/blob/master/tests/forms_tests/tests/test_formsets.py#L286

I considered making this note near the top where the docs discuss adding extra forms. However, that is an introduction and to mention this specific behavior there is a bit complex and therefore potentially confusing. `min_num` is documented lightly so I thought it best to add this caveat to that section. ",smithdc1,None,2020-08-16T19:54:47Z,2020-08-18T21:16:28Z
13312,Fixed #31892 -- Added backward incompatibility note about Media <script> tags changes.,ticket-31892,jdufresne,None,2020-08-16T18:15:57Z,2020-08-17T08:51:39Z
13311,Fixed #99999 -- Added a shortcut function to make toast.,,sdybreams,None,2020-08-15T16:24:32Z,2020-08-15T16:25:27Z
13310,Fixed #29887 -- Added a cache backend for pymemcache.,ticket-29887,pope1ni,None,2020-08-14T23:25:11Z,2020-09-16T08:04:51Z
13309,Fixed #31888 -- Avoided module-level MySQL queries in tests.,ticket-31888,lothemar,None,2020-08-14T20:14:44Z,2020-08-17T08:00:33Z
13308,Fixed #31897 -- Tweaked Settings docs to better explain settings.DEBUG example,"Tweaked Settings docs to better explain settings.DEBUG example

The current example for how to use `from django.conf import settings` includes the example of using `settings.DEBUG`.

The example is fine, but if a user tries to replicate this in their test scripts `settings.DEBUG` will always return `False` [as intended](https://docs.djangoproject.com/en/3.1/topics/testing/overview/#other-test-conditions). This PR simply adds an `admonition` in the docs to warn users about this and offer an alternative with `override_settings()`.",edelgm6,None,2020-08-14T19:05:56Z,2020-08-18T05:41:32Z
13307,Fix AttributeError Exception,"Our vulnerability scanner recently started triggering an AttributeError exception in MultiPartParser.

```
  File ""lib/python3.5/site-packages/django/http/multipartparser.py"", line 72, in __init__
    raise MultiPartParserError('Invalid boundary in multipart: %s' % boundary.decode())
AttributeError: 'NoneType' object has no attribute 'decode'
```

This is already fixed in HEAD, but we're running the 2.2 LTS. Patch is based on HEAD.

I don't believe this is a vulnerability, just a source of noise when monitoring exceptions.",sjansen,None,2020-08-14T17:58:36Z,2020-08-14T18:26:09Z
13306,fieldset attribute description example added,"fieldset attribute: `description` example added.
I test it by making a new project for it according to the documentation added

Note: I am new to contribution and this is my first PR, I created this to add little tweak in documentation as well as learn the contribution flow. I am excited to work more on this! Please guide me if I am doing something wrong.",zubairhassan652,None,2020-08-14T11:09:55Z,2020-09-16T16:50:11Z
13303,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,ticket-31863,felixxm,None,2020-08-13T12:45:00Z,2020-08-13T14:30:05Z
13302,Removed unnecessary urlsplit() call and added missing items to __all__.,"The statement `scheme, netloc, path, query, fragment = urlsplit(url)` is in both branches, but only actively used in the `else`-branch. Probably the commit message should be changed as well. I think the code style guide could be updated to cover cases like this.

PyCharm highlighted that some of the imports from different places within `django.test` were not declared in `__all__`. I'm not sure if it's a problem; it seems to be good style to have names in there that are public API. Which I believe that the names I added are. It's not complete, as I haven't asked why they were left out. ",atombrella,None,2020-08-13T11:08:08Z,2020-08-14T11:13:23Z
13301,Fixed #31878 -- Made createsuperuser respect --database option in default usernames. ,[ticket](https://code.djangoproject.com/ticket/31878),vonafor,None,2020-08-13T10:29:12Z,2020-08-14T09:45:58Z
13300,Fixed #31792 -- Made Exists() reuse QuerySet.exists() optimizations.,"The latter is already optimized to limit the number of results, avoid selecting unnecessary fields, and drop ordering if possible without altering the semantic of the query.

ticket-31792",charettes,None,2020-08-13T03:21:51Z,2020-08-13T18:08:42Z
13298,[2.1.x] Fixed #31867 -- Make hidden fields not displayed for inlines in admin when user has view-only permissions,,antoinehumbert,None,2020-08-12T19:08:39Z,2020-08-12T19:10:48Z
13297,Fixes #31877 -- Used lazy() for TemplateView kwarg deprecation warning.,[ticket](https://code.djangoproject.com/ticket/31877),adamchainz,None,2020-08-12T11:20:33Z,2020-08-19T21:39:40Z
13295,Fixed #31382 -- Made Model.save(update_fields=...) raise ValueError on non-concrete fields.,https://code.djangoproject.com/ticket/31382,patgarcia,None,2020-08-12T01:06:30Z,2020-08-12T20:22:16Z
13293,temp,,michalmit,None,2020-08-11T12:39:55Z,2020-08-11T12:41:10Z
13292,Fixed #31865 -- Adjusted admin sidebar template to reduce debug logging.,,carltongibson,None,2020-08-11T08:14:13Z,2020-08-11T09:42:20Z
13291,Added note about password updates on argon2 attributes change.,,wontonst,None,2020-08-10T21:30:48Z,2020-08-11T06:20:54Z
13290,Fix `django.db.models.base.Model.refresh_from_db`,I think here use `dict` may be better for readability,xuxinwen,None,2020-08-10T11:14:09Z,2020-08-10T11:43:43Z
13289,Refs #31180 -- Fixed unreachable assertions in apps tests.,,felixxm,None,2020-08-10T10:30:01Z,2020-08-11T08:31:13Z
13288,Fixed #31871 -- Updated SESSION_COOKIE_SAMESITE comment in global_settings.py.,[#31871](https://code.djangoproject.com/ticket/31871),uri-rodberg,None,2020-08-10T06:17:28Z,2020-08-10T06:51:21Z
13287,Fixed #31870 -- Fixed crash when populating app registry with empty or without apps module.,ticket-31870,iurisilvio,None,2020-08-09T13:01:34Z,2020-09-13T10:10:36Z
13286,"Fixed #23130 -- Raised IntegrityError when validating blank for BooleanField with choices, without default, and not nullable.","ticket-23130

It is doc'd in two places that unless `default` is provided with `choices`, a blank choice `'--------'` will be provided even if `blank=False`. The blank choice on a `models.BooleanField` should validate with a `django.core.exceptions.ValidationError: This field cannot be null.` if not nullable, or a similar error if nullable but required (`blank=False`).

The nullable fields were behaving correctly, but the not nullable fields raised `django.core.exceptions.ValidationError: “” value must be either True or False.`, which is not as informative as it could be.

Now they raise `django.core.exceptions.ValidationError: This field cannot be null.` because `models.BooleanField.to_python()` now returns `None`.

_Clarification:_ on form field validation, this means `IntegrityError` will propagate first if the field is not nullable and not required, whereas a required field will simply show a form error to the user.",jacobtylerwalls,None,2020-08-09T02:04:06Z,2020-09-11T02:23:10Z
13285,Add generic AsyncView,"I'm a python beginner, so I apologize in advance. It seemed to me that such an addition takes place",artemowkin,None,2020-08-08T13:08:11Z,2020-08-08T13:19:34Z
13284,Fixed #21181 -- Added Collate database function.,"Ticket: https://code.djangoproject.com/ticket/21181

Tried to implement this as a `Func()` at first, but the syntax is different enough from other functions that I couldn't find a clean way to implement it, so it's an expression instead.

Not sure if the implementation is good, and probably the docs and tests could be improved.",knyghty,None,2020-08-08T11:40:38Z,2020-08-11T20:47:09Z
13283,Fixed #31866 -- Fixed locking proxy models in QuerySet.select_for_update(of=()),https://code.djangoproject.com/ticket/31866,danifus,None,2020-08-08T10:45:21Z,2020-08-11T10:46:28Z
13282,Refs #31864 -- Doc'd that DEFAULT_HASHING_ALGORITHM requires 3.1.1+ in release notes.,"> Please open a PR after this got merged then, we usually apply doc fixes quite liberally to existing versions.

I'm not that good in English documentation. But what do you think about something like this?

Support for SHA-256 was added in Django 3.1. If you are upgrading multiple
instances of the same project to Django 3.1, you should set
:setting:`DEFAULT_HASHING_ALGORITHM` to ``'sha1'`` during the transition, in
order to allow compatibility with the older versions of Django. Once the
transition to 3.1 is complete you can stop overriding
:setting:`DEFAULT_HASHING_ALGORITHM`. We also recommend doing this with Django version >= 3.1.1, since sessions backward compatibility is not fully supported in Django 3.1 (:ticket:`31864`).

(with a link to [#31864](https://code.djangoproject.com/ticket/31864)).",uri-rodberg,None,2020-08-08T05:10:47Z,2020-08-08T15:37:55Z
13281,Fixed #31863 -- Prevented mutating model state by copies of model instances.,"ticket-31863
Discussion at https://groups.google.com/g/django-developers/c/QMhVPIqVVP4/m/kcvbnCn0AwAJ

Django 2.0 introduced a fields cache for model fields which ends up being copied during a model instance copy. This results in changes to the new model instance unexpectedly affecting the original model instance (last 2 asserts in test fails). In Django 1.11 and earlier the behavior was as expected when using copy.

This is my first PR to the Django project so please point out any thing I missed whilst reading the contributor guidelines. CLA was submitted last night.",GertBurger,None,2020-08-07T08:42:11Z,2020-08-12T11:17:21Z
13280,Fixed #31863: Reset model fields cache on copy,"ticket-31863
Discussion at https://groups.google.com/g/django-developers/c/QMhVPIqVVP4/m/kcvbnCn0AwAJ

Django 2.0 introduced a fields cache for model fields which ends up being copied during a model instance copy. This results in changes to the new model instance unexpectedly affecting the original model instance (last 2 asserts in test fails). In Django 1.11 and earlier the behavior was as expected when using `copy`.

This is my first PR to the Django project so please point out any thing I missed whilst reading the contributor guidelines. CLA was submitted last night.",GertBurger,None,2020-08-07T08:23:55Z,2020-08-07T08:34:31Z
13279,Fixed #31864 -- Fixed encoding session data during transition to Django 3.1.,"~~(release notes are missing)~~

ticket-31864",felixxm,None,2020-08-07T05:15:16Z,2020-08-08T05:12:17Z
13278,Removed unnecessary sentence in QuerySet docs.,"The queryset documentation page currently has this note:

> The *query* parameter to *QuerySet* exists so that specialized query subclasses can reconstruct internal query state. The value of the parameter is an opaque representation of that query state and is not part of a public API. To put it another way: if you need to ask, you don’t need to use it.

I think that the last sentence is slightly patronising and perhaps a kind of gatekeeping. It comes across as ""If you don't already know this, then you're never going to. This is an expert thing, only for expert people."".

I don't think we want the Django docs to have that kind of vibe . So this pull request makes a very simple change to fix it: remove that sentence. The note still makes complete sense without it.",adamalton,None,2020-08-06T10:35:21Z,2020-08-07T06:05:48Z
13277,Fixed typo in docs/ref/contrib/postgres/fields.txt.,"I noticed there was a missing parenthesis in the documentation for a code excerpt.

I'm not sure if the indentation is quite right though.",b0uh,None,2020-08-05T13:56:29Z,2020-08-07T06:22:47Z
13276,Fixed #31856 -- Add block to customize nav_sidebar,[ticket-31856](https://code.djangoproject.com/ticket/31856),007gzs,None,2020-08-05T09:25:37Z,2020-08-05T09:37:32Z
13275,Fixed #31854 -- Fixed wrapping long model names in admin's sidebar.,"Before:
![obraz](https://user-images.githubusercontent.com/2865885/89383250-74543600-d6fc-11ea-8e53-f7e8a6ecf2e8.png)

After:
![obraz](https://user-images.githubusercontent.com/2865885/89383172-54247700-d6fc-11ea-803c-294fd2cd901b.png)

ticket-31854",felixxm,None,2020-08-05T07:17:34Z,2020-08-05T08:55:10Z
13274,Fixed #31853 -- Fixed wrapping of translated action labels in admin sidebar.,"In some languages, such as Chinese, the Add button text of the navigation bar is wrapped

ticket-31853",007gzs,None,2020-08-05T06:03:36Z,2020-08-05T08:24:17Z
13273,Fixed #31679 -- Made query.aggregate() raise ValueError when conflicting alias supplied.,ticket-31679,jacobtylerwalls,None,2020-08-05T01:46:45Z,2020-09-05T21:20:24Z
13272,Added Hypercorn to ASGI deployment guide. ,"Hypercorn is an ASGI server that compliments Daphne and Uvicorn, and
isn't as well known in the Django community as an option - hopefully
this will help that.",pgjones,None,2020-08-04T12:17:46Z,2020-08-05T11:46:45Z
13271,Fixed #23130 -- Added test for BooleanField when blank=True.,ticket-23130,jacobtylerwalls,None,2020-08-04T05:36:18Z,2020-08-05T05:14:21Z
13270,Fix maximum and minimum value validators,"According to the validator's message the result has to be something like greater or equal and less or equal, but this was not happening in the code.",duducp,None,2020-08-03T21:14:04Z,2020-08-04T16:19:58Z
13269,Refactored to clean code and added more assertions,,rogerlindberg,None,2020-08-03T20:13:42Z,2020-08-04T13:03:09Z
13268,Moved note about features deprecated in Django 3.1 above their descriptions.,,felixxm,None,2020-08-03T09:10:14Z,2020-08-03T18:52:19Z
13267,Fixed #26977 -- Made abstract models raise TypeError when instantiating.,ticket-26977,jacobtylerwalls,None,2020-08-02T21:28:15Z,2020-08-05T12:29:31Z
13266,Ticket #31848: Add app_name to django.contrib.admindocs,"Currently, it is not possible to set a namespace to admindocs, as the following line will throw an error due to a missing app_name:

`re_path(r'admin/doc/', include('django.contrib.admindocs.urls'), namespace='docs')`

This PR attributes an app_name to django.contrib.admindocs.urls.

Ticket: https://code.djangoproject.com/ticket/31848#ticket
",marcelovicentegc,None,2020-08-02T18:11:16Z,2020-08-03T08:45:11Z
13265,Fixed #31831 -- Fixed migration operations ordering when adding order_with_respect_to and constraints/indexes.,ticket-31831,iurisilvio,None,2020-08-02T10:02:11Z,2020-08-11T09:20:50Z
13264,Updated translations from Transifex,,claudep,None,2020-08-01T16:16:07Z,2020-08-01T19:39:21Z
13263,Refs #27468 -- Fixed TestSigner.test_dumps_loads_legacy_signature.,"`signing.dumps()` doesn't have the `algorithm` parameter :facepalm: 

Added in 1d6fdca557e674b9a789b51caadca8985e588492.",felixxm,None,2020-07-31T20:40:18Z,2020-08-01T18:39:32Z
13262,Fixed #31842 -- Added DEFAULT_HASHING_ALGORITHM transitional setting.,ticket-31842,felixxm,None,2020-07-31T19:58:04Z,2020-08-04T07:43:08Z
13261,Refs #27996 -- Fixed postgres_tests crash if not running with PostgreSQL.,https://github.com/django/django/pull/13241#pullrequestreview-459038045,felixxm,None,2020-07-31T09:52:01Z,2020-07-31T10:38:35Z
13260,Fixed #31842 -- Added algorithm parameter to signing.dumps()/loads(). ,ticket-31842,felixxm,None,2020-07-31T05:47:34Z,2020-08-03T04:42:44Z
13258,Fixed #31841 -- Make DecimalField respect decimal_places when converting floats,Note that in the tests the model itself defined `decimal_places=2` and the conversion produced 3 decimal places. Setting something like that on postgresql would fail.,bellini666,None,2020-07-30T18:48:00Z,2020-07-31T14:36:24Z
13257,Refs #31493 -- Replaced var with const and let in JavaScriptCatalog template.,,claudep,None,2020-07-30T09:48:33Z,2020-08-10T13:02:28Z
13256,Linked to DSF fundraising page from README.,,daniloaldm,None,2020-07-30T04:12:36Z,2020-08-05T11:47:27Z
13255,Refs #31829 -- Added DatabaseFeatures.json_key_contains_list_matching_requires_list.,CockroachDB's behavior matches PostgreSQL.,timgraham,None,2020-07-29T23:42:20Z,2020-07-30T12:06:06Z
13254,Corrected admin.register() signature in docs.,,Neob91,None,2020-07-29T09:46:03Z,2020-07-29T10:56:51Z
13253,Completed test coverage for colorize().,"Completes test coverage for `colorize()`

https://djangoci.com/view/%C2%ADCoverage/job/django-coverage/HTML_20Coverage_20Report/
",smithdc1,None,2020-07-28T20:29:05Z,2020-07-29T06:18:22Z
13252,Refs #31839 -- Added additional database functions.,ticket-31839,pope1ni,None,2020-07-28T19:53:24Z,2020-07-30T06:36:04Z
13251,"Fixed #31783 -- Fixed crash when filtering againts ""negate"" field.","https://code.djangoproject.com/ticket/31783
I added a regression test for the @charettes patch.",hramezani,None,2020-07-28T11:59:53Z,2020-07-29T07:03:26Z
13250,Fixed #31836 -- Dropped support for JSONField __contains and __contained_by lookups on SQLite.,"The current implementation works only for basic examples without supporting nested structures and doesn't follow _""the general principle that the contained object must match the containing object as to structure and data contents, possibly after discarding some non-matching array elements or object key/value pairs from the containing object""_.

ticket-31836",felixxm,None,2020-07-28T10:26:49Z,2020-07-28T11:06:56Z
13249,Refs #30165 -- Removed leftover 'u' prefix.,,claudep,None,2020-07-28T10:09:07Z,2020-07-28T10:30:11Z
13248,Fixed #31835 -- Dropped support for JSONField __contains lookup on Oracle.,"The current implementation works only for basic examples without supporting nested structures and doesn't follow _""the general principle that the contained object must match the containing object as to structure and data contents, possibly after discarding some non-matching array elements or object key/value pairs from the containing object""_.

ticket-31835",felixxm,None,2020-07-28T07:54:15Z,2020-07-28T09:54:14Z
13247,Fixed #29336 -- Doc'd circular template inheritance,"[Ticket #29336](https://code.djangoproject.com/ticket/29336) Follows #9884 

I've tried to slim this down as per the comments on the other ticket. 
",smithdc1,None,2020-07-27T20:38:47Z,2020-08-05T09:36:15Z
13246,Removed unnecessary list() call in RelatedManager.add().,,sir-sigurd,None,2020-07-27T18:35:10Z,2020-07-30T10:20:16Z
13245,Fixed ru locale,,Valerich,None,2020-07-27T16:09:07Z,2020-07-27T18:27:16Z
13243,Fixed #31832 -- Extracted PASSWORD_RESET_TIMEOUT from token generator.,"https://code.djangoproject.com/ticket/31832
",iurisilvio,None,2020-07-27T12:07:35Z,2020-07-30T10:25:48Z
13241,Refs #27996 -- Doc'd no extension required for RandomUUID() on PostgreSQL 13+.,"PostgreSQL 13 adds support for the `GEN_RANDOM_UUID` function without the `PgCrypto` extension:

- https://www.postgresql.org/docs/13/functions-uuid.html
- https://www.postgresql.org/docs/13/pgcrypto.html#id-1.11.7.34.10.5",pope1ni,None,2020-07-26T21:40:50Z,2020-07-31T09:33:20Z
13240, Fixed #29324 -- Made SECRET_KEY validation lazy (on first access).,"Requires #13239 to be merged first

ticket-29324",apollo13,None,2020-07-26T18:28:23Z,2020-07-29T07:44:19Z
13239,Don't run `add_script_prefix` on every access to static/media urls in settings.,This one splits MEDIA_ & STATIC_URL handling out of  #13120.,apollo13,None,2020-07-26T18:14:11Z,2020-07-28T10:52:29Z
13238,Fixed #31829 -- Used JSONField __contains lookup on key transforms.,"[Ticket #31829](https://code.djangoproject.com/ticket/31829).

I made a mistake and created a `KeyTransformContains` that's based on `lookup.Contains`. This makes the `contains` lookup to not use JSON containment logic when it's performed on a `KeyTransform`. Therefore, it's incompatible with the previous PostgreSQL implementation, which uses the overridden lookup.

This PR fixes that by removing `KeyTransformContains`. The custom `JSON_CONTAINS` function on SQLite has also been extended to follow the rules of `JSON_CONTAINS` on MySQL. On Oracle, the implementation is turned into a chained `KeyTransformExact` lookup if the `rhs` is a `dict`, otherwise it falls back to the builtin `lookup.Contains`.

I also added notes to the docs, but I'm not sure if that's necessary.",laymonage,None,2020-07-26T06:21:15Z,2020-07-29T23:42:36Z
13237,Fixed #31826 -- Made AlterField operation a noop when adding db_column.,https://code.djangoproject.com/ticket/31826,iurisilvio,None,2020-07-25T13:52:40Z,2020-09-13T10:11:59Z
13236,Fixed #31825 -- Made RenameField operation a noop for fields with db_column.,https://code.djangoproject.com/ticket/31825,iurisilvio,None,2020-07-25T10:08:53Z,2020-09-13T10:12:12Z
13235,Fixed #31815 -- Fixed schema value encoding on PostgreSQL.,ticket-31815,felixxm,None,2020-07-24T19:57:54Z,2020-07-27T04:39:22Z
13234,Update files.py,"when trying to get url of a file which is no longer in database return None, return url if url to that file exists (file url != Null)",Priyansh2001here,None,2020-07-24T14:17:02Z,2020-08-12T08:49:32Z
13233,Fixed #31812 -- Fixed FileField.model for fields defined in abstract models.,Regression in a93425a37f4defdb31d4ca96bb3bf6da21f0b5ce.,matthiask,None,2020-07-24T06:59:52Z,2020-08-12T14:33:29Z
13232,Bumped minimum isort version to 5.1.0 and fixed inner imports.,"@felixxm isort v5 seems much more stable now. The release cycle seems to have slowed down significantly as well. 

https://github.com/timothycrosley/isort/blob/develop/CHANGELOG.md",smithdc1,None,2020-07-24T06:30:29Z,2020-07-30T09:22:27Z
13231,Fixed #31821 -- Removed outdated note in FILE_UPLOAD_PERMISSIONS docs.,#31821 - FILE_UPLOAD_PERMISSIONS in dev/ref/settings had an outdated note. I have tried to fix this. Any advice and suggestions for my first contribution will be greatly appreciated. 😊,HarpreetSharma07,None,2020-07-23T16:53:27Z,2020-07-24T01:10:06Z
13230,Fixed #31822 -- Added support for comments URL per feed item.,"Add support for the dynamic attribute item_comments in syndication feeds
as this is already explicitly implemented in the feedparser.

This change enables a direct comment URL hook without without having to
take the detour via item_extra_kwargs.",v-gar,None,2020-07-23T14:59:50Z,2020-07-30T06:16:07Z
13229,Fixed #31816 -- Corrected the expected content type in StreamingHttpResponse docs.,"Changed ""strings"" to ""bytestrings"". When this documentation was first written. ""strings"" referred to python 2 strings.",LincolnPuzey,None,2020-07-23T10:43:43Z,2020-07-23T11:12:58Z
13228,"[german translaction] fix german translation of ""the same""","According to german Duden the translation of ""the same"" is written as ""dasselbe"" [0]

[0] https://www.duden.de/rechtschreibung/derselbe",krystofbe,None,2020-07-23T07:49:02Z,2020-07-23T07:50:52Z
13227,[2.2.x] Pinned geoip2 < 4.0.0 in test requirements.,"`geoip2` 4+ doesn't support Python 3.5, example logs:
```
======================================================================
ERROR [0.001s]: gis_tests.test_geoip2 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.test_geoip2
Traceback (most recent call last):
  File ""/usr/lib/python3.5/unittest/loader.py"", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File ""/usr/lib/python3.5/unittest/loader.py"", line 369, in _get_module_from_name
    __import__(name)
  File ""/home/jenkins/workspace/django-oracle-2.2/database/oragis18/label/bionic/python/python3.5/tests/gis_tests/test_geoip2.py"", line 5, in <module>
    from django.contrib.gis.geoip2 import HAS_GEOIP2
  File ""/home/jenkins/workspace/django-oracle-2.2/database/oragis18/label/bionic/python/python3.5/django/contrib/gis/geoip2/__init__.py"", line 21, in <module>
    from .base import GeoIP2, GeoIP2Exception
  File ""/home/jenkins/workspace/django-oracle-2.2/database/oragis18/label/bionic/python/python3.5/django/contrib/gis/geoip2/base.py"", line 4, in <module>
    import geoip2.database
  File ""/home/jenkins/workspace/django-oracle-2.2/database/oragis18/label/bionic/python/python3.5/tests/.env/lib/python3.5/site-packages/geoip2/database.py"", line 9, in <module>
    import maxminddb
  File ""/home/jenkins/workspace/django-oracle-2.2/database/oragis18/label/bionic/python/python3.5/tests/.env/lib/python3.5/site-packages/maxminddb/__init__.py"", line 5, in <module>
    import maxminddb.reader
  File ""/home/jenkins/workspace/django-oracle-2.2/database/oragis18/label/bionic/python/python3.5/tests/.env/lib/python3.5/site-packages/maxminddb/reader.py"", line 36
    _buffer: Union[bytes, FileBuffer, ""mmap.mmap""]
           ^
SyntaxError: invalid syntax
```

See [release notes](https://github.com/maxmind/GeoIP2-python/releases/tag/v4.0.0).",felixxm,None,2020-07-23T07:34:27Z,2020-07-23T08:07:44Z
13226,Fixed #31802 -- Added system check for non-integer SITE_ID.,Added check to sites framework to verify if the `SITE_ID` is of type `int` if it is present in settings.,parth-verma,None,2020-07-23T06:24:58Z,2020-07-24T09:06:38Z
13225,Fixed #31814 -- Fixed typo in docs/ref/settings.txt.,,bukowa,None,2020-07-22T20:01:16Z,2020-07-22T20:38:46Z
13224,Fixed #31811 -- Add optional timing outputs to the test runner,"@carltongibson While this does the job, I'm not sure if this is efficient.

Any thoughts about the TimeKeeper class?

ticket-31811",lothemar,None,2020-07-22T16:04:39Z,2020-08-17T11:44:22Z
13223,Stable/3.1.x - Fix Farsi translate for password help text.,Fix Farsi translate for password help text.,rahnama72,None,2020-07-22T12:52:07Z,2020-07-22T12:59:54Z
13222,Fixed typo in docs/ref/models/querysets.txt.,,ramiro,None,2020-07-22T11:18:25Z,2020-07-22T21:37:11Z
13221,Fixed #31805 -- Fixed SchemaTests.tearDown() when table names are case-insensitive.,ticket-31805,felixxm,None,2020-07-22T08:54:56Z,2020-07-22T10:50:01Z
13220,Fixed #28507 -- Made ValidationError.__eq__() ignore messages and params ordering.,"[Ticket #28507](https://code.djangoproject.com/ticket/28507) -- Follows https://github.com/django/django/pull/8978

This is a re-base of the previous version of this patch and re targeted at 3.2. I also pushed some small code style amends. 

The ticket was marked as 'needs improvement' but it's unclear what is needed. The comments on the previous pull request were addressed as far as I can tell.

",smithdc1,None,2020-07-21T19:54:16Z,2020-07-29T17:32:48Z
13219,Removed duplicate non_field_error title,"https://docs.djangoproject.com/en/3.0/ref/exceptions/#non-field-errors

The two `NON_FIELD_ERROR` titles here look a bit odd. Do we need both 🤷 ? (I'm not sure what the second title means to me as a reader of the docs)


",smithdc1,None,2020-07-21T19:41:04Z,2020-07-21T23:16:48Z
13218,"Reverted ""Fixed #30300 -- Allowed migrations to be loaded from directories without __init__.py file.""","This reverts commit 3cd3bebe8921e14b911b36b2a1cbceef8fb6294e.

https://groups.google.com/g/django-developers/c/GVHMH2ciAnk/m/vbIPbZuSBQAJ",timgraham,None,2020-07-21T16:40:51Z,2020-07-22T15:02:09Z
13217, Refs #31804 -- Parallelize database cloning process,"Current patch works on MySQL, benchmark still pending to see the speed-up.

On PostgreSQL, there's an issue with concurrent access. Going to read documentation to patch this.

Not yet tested on SQLite.",lothemar,None,2020-07-21T16:33:52Z,2020-07-30T12:27:56Z
13216,Merge pull request #1 from django/master,update,HarpreetSharma07,None,2020-07-21T13:48:32Z,2020-07-21T14:00:55Z
13215,Fixed #31797 -- Skipped schema tests on specific MariaDB versions.,"`test_alter_not_unique_field_to_primary_key()` test is affected by [MDEV-19598](https://jira.mariadb.org/browse/MDEV-19598) on MariaDB 10.4.4 to 10.5.1.
    
`test_alter_pk_with_self_referential_field()` test is affected by [MDEV-22775](https://jira.mariadb.org/browse/MDEV-22775) on MariaDB 10.4 series from 10.4.13.


ticket-31797",felixxm,None,2020-07-21T11:06:58Z,2020-07-22T08:59:14Z
13213,Update tutorial04.txt,"The modified tutorial bullet makes it look as if setting the model attribute was necessary for both ListView and DetailView generic views, but it is not necessary for ListView, as shown by the [tutorial code for the class IndexView](https://docs.djangoproject.com/en/3.0/intro/tutorial04/#amend-views).
",JCiroR,None,2020-07-21T05:28:40Z,2020-07-21T08:42:45Z
13212,Fixed #31806 -- Made validators include the value in ValidationErrors.,https://code.djangoproject.com/ticket/31806,jdufresne,None,2020-07-21T02:53:58Z,2020-07-27T19:02:10Z
13211,Used context manager version of tempfile.TemporaryDirectory() in utils_tests.test_autoreload.,,jdufresne,None,2020-07-19T15:59:53Z,2020-07-20T09:08:24Z
13210,#31799 queryset update with auto now true,"I think It is more intuitive to operate like this.
I'd like to ask core contributers for advice.",KimSoungRyoul,None,2020-07-19T11:37:37Z,2020-07-20T04:42:20Z
13209,Fixed #31720 -- Defined default output_field of BoolAnd() and BoolOr() aggregate functions and added examples to docs.,"https://code.djangoproject.com/ticket/31720

Added defaults to BoolOr and BoolAnd classes and made documentation improvements by adding examples.
",davidchorpash,None,2020-07-19T08:17:26Z,2020-07-21T05:04:33Z
13208,Used temporary directory in RestartWithReloaderTests.test_manage_py().,"As per @felixxm on IRC, this is causing test failures",orf,None,2020-07-18T18:44:06Z,2020-07-20T08:03:52Z
13207,Fixed #31777 -- Added support for database collations to Char/TextFields.,"Ticket: https://code.djangoproject.com/ticket/31777
List: https://groups.google.com/u/2/g/django-developers/c/djMQwwxtCVY",knyghty,None,2020-07-18T11:20:04Z,2020-09-22T04:47:15Z
13206,Punctuation error,,Rustam95Ur,None,2020-07-17T16:18:32Z,2020-07-17T16:43:10Z
13204,Fixed #17653 -- Allowed using zero as AutoFields value on MySQL if NO_AUTO_VALUE_ON_ZERO SQL mode is enabled.,"I think it's time to implement [Ansi's comment](https://code.djangoproject.com/ticket/17653#comment:27).

ticket-17653

https://mariadb.com/kb/en/sql-mode/#no_auto_value_on_zero
https://dev.mysql.com/doc/refman/en/sql-mode.html#sqlmode_no_auto_value_on_zero",felixxm,None,2020-07-17T11:14:37Z,2020-07-20T07:49:26Z
13203,refactored a few methods,,MashhadiNima,None,2020-07-17T10:22:12Z,2020-07-17T10:32:35Z
13202,[3.1.x] Pinned asgiref to 3.2 series with minimum version to 3.2.10.,,felixxm,None,2020-07-17T09:10:41Z,2020-07-17T19:16:36Z
13200,Fixed typo in DecimalValidator tests.,"Fixed a typo, `-Infinity` was tested 2 times.",ccatterina,None,2020-07-16T08:36:43Z,2020-07-16T09:21:53Z
13199,[3.0.x] Fixed #31790 -- Fixed setting SameSite cookies flags in HttpResponse.delete_cookie().,"Cookies with the ""SameSite"" flag set to None and without the ""secure""
flag will be soon rejected by latest browser versions.

This affects sessions and messages cookies.

Backport of 240cbb63bf9965c63d7a3cc9032f91410f414d46 from master.",felixxm,None,2020-07-16T06:43:06Z,2020-07-16T07:30:20Z
13198,Refs #31790 -- Removed incorrect item from 2.2.15 and 3.0.9 release notes.,Django 2.2 and 3.0 don't support settings `samesite='None'` in `HttpResponse.set_cookie()` so fix is not necessary and will not be backported. :facepalm: ,felixxm,None,2020-07-16T06:29:44Z,2020-07-16T07:27:34Z
13197,Stopped adapting DecimalField values to strings on Oracle.,"`cx_Oracle` handles `decimal.Decimal`.

`expressions_case.tests.CaseExpressionTests.test_update_decimal` fails without this change, see [logs](https://djangoci.com/job/django-oracle/lastCompletedBuild/database=oracle18,python=python3.6/testReport/expressions_case.tests/CaseExpressionTests/test_update_decimal/).

Follow up to 9c5c9bd7091b60fdccc405890dc4f44a8010e954.",felixxm,None,2020-07-16T04:40:24Z,2020-07-16T07:43:13Z
13195,Fixed #31790 -- Fixed setting SameSite and Secure cookies flags in HttpResponse.delete_cookie().,"ticket-31790

Cookies with the ""SameSite"" flag set to None and without the ""secure"" flag will be soon rejected by latest browser versions.

This affects sessions and messages cookies.

We can decide that this should be backported to Django 2.2 :thinking: ",felixxm,None,2020-07-15T11:00:07Z,2020-07-16T06:17:02Z
13194,Doc'd Model.MultipleObjectsReturned docs and improved documentation related with models exceptions.,DoesNotExist and MultipleObjectsReturned are very similar but had very different documentation prior to this change. I also added a note that get() should generally be used for lookups that the DB guarantees uniqueness on.,adamchainz,None,2020-07-15T09:36:25Z,2020-07-24T08:04:28Z
13193,Refs #31502 -- Made minor edits to Model._state docs.,"* Add note about them being not really private
* Also mention `Model._meta`, since nothing currently links to its documentation page apart from ToC's!
* Add links from other mentions of `_state`",adamchainz,None,2020-07-15T09:28:51Z,2020-07-20T10:14:17Z
13192,"Fixed #31784 -- Fixed crash when sending emails on Python 3.6.11+, 3.7.8+, and 3.8.4+.","Maybe it's too naive :thinking: @apollo13 Can you take a look?


ticket-31784",felixxm,None,2020-07-15T05:40:22Z,2020-07-20T06:09:59Z
13191,FIxed typo in docs/ref/contrib/postgres/forms.txt.,"Fix typo of ""and"" when ""an"" is meant.",erictheise,None,2020-07-15T02:40:37Z,2020-07-15T07:02:52Z
13190,Fix #31793 -- Support async def handle management commands,"This fixes custom management commands that have async def handle, somewhat trying to be nice with older Python users, maybe more than necessary ? Keep in mind inspect.iscoroutine arrived in 3.5 and asyncio.run in 3.7

Temporary work-around for your projects:

```
    def handle(self, *args, **kwargs):    
        asyncio.run(self.async_handle(*args, **kwargs))    
            
    async def async_handle(self, *args, **kwargs):    
        await your_stuff()
```",jpic,None,2020-07-15T00:04:03Z,2020-07-15T12:54:37Z
13189,Fixed #31791 -- Made technical 404 debug page display the tried URL patterns for Http404.,https://code.djangoproject.com/ticket/31791,jdufresne,None,2020-07-14T19:08:07Z,2020-09-07T05:42:58Z
13188,2.2upgrade,Added md5 patches to the django 2.2 fork,KavinKaviarasan1,None,2020-07-14T19:01:07Z,2020-07-14T19:02:11Z
13187,[3.1.x] Added admin translatable string.,,claudep,None,2020-07-14T18:01:17Z,2020-07-14T19:35:27Z
13186,Fixed #31789 -- Added a new headers interface to HttpResponse.,"Ticket: https://code.djangoproject.com/ticket/31789
Mailing list: https://groups.google.com/u/2/g/django-developers/c/rlt1HhEaPaM

Possibly could use some more tests, but not sure for what. It's also likely that I've missed some uses of the old interface in other code / tests. I left some tests as-is as they seemed to be regression tests and didn't want to change them.",knyghty,None,2020-07-14T11:34:37Z,2020-09-14T07:52:34Z
13185,Refs #30446 -- Defined output_field of BoundingCircle() GIS database functions.,"Moved from #11359.

I removed `output_field` from `Reverse()` because it accepts a single expression and added tests for `BoundingCircle()`.",felixxm,None,2020-07-14T06:45:53Z,2020-07-14T07:37:19Z
13184,Part of #11359.,See #11359.,felixxm,None,2020-07-14T05:43:45Z,2020-07-14T06:22:23Z
13181,Fixed #99999 -- Added a shortcut function to make toast.,,drzhk,None,2020-07-13T03:59:28Z,2020-07-13T04:02:21Z
13180,Fixed #31731 -- Removed unreachable code for resetting sequences of auto-created m2m tables in sequence_reset_sql().,Removed dead code for condition check on model._meta.many_to_many for 'f.remote_field.through' from postgres/Oracle operations.py,Ravindar24,None,2020-07-12T13:12:49Z,2020-07-18T02:28:00Z
13178,Fixed #31770 -- Allowed select_for_update(of) on MySQL 8.0.1+.,ticket-31770,charettes,None,2020-07-12T04:29:59Z,2020-07-13T09:55:28Z
13177,Add maxsize=None to lru_cache functions with no arguments,"There is a small overhead with using an `lru_cache` with a `maxsize` value (the default). This overhead doesn't make sense with functions that have no parameters at all.

I've added a [ticket to CPython](https://bugs.python.org/issue41280) to see if this can be made the default, but right now it is not.",orf,None,2020-07-11T22:48:52Z,2020-08-01T16:46:31Z
13176,Fixed #31674 -- Made technical 500 debug page respect __suppress_context__.,Ticket https://code.djangoproject.com/ticket/31674,orf,None,2020-07-11T22:25:50Z,2020-07-13T08:33:49Z
13175,Fixed #31779 -- Bumped MariaDB requirement for JSONField to 10.2.16.,Ticket [#31779](https://code.djangoproject.com/ticket/31779).,laymonage,None,2020-07-11T09:34:26Z,2020-07-13T08:14:29Z
13174,Improved ManyToManyField.through docs.,,adamchainz,None,2020-07-10T13:27:43Z,2020-07-20T10:14:19Z
13173,Fixed #25513 -- Extracted admin pagination to Paginator.get_elided_page_range().,"Supersedes #5866 & #10328 for ticket-25513.

Notes on changes:

- Pagination code in the admin is now 1-indexed. Backward incompatibility note added [as requested](https://github.com/django/django/pull/5866#discussion_r50706695). I think this will be less confusing in the long run, despite Carlton's [reservations](https://github.com/django/django/pull/5866#issuecomment-408768724). It is unlikely that a bookmark to a specific page will show consistent results over time anyway.

- ``DOT`` constant is now ``ELLIPSIS`` using ``'…'`` which makes it easier to use the correct character for display purposes and better fits with the new ``EllipsisPaginator`` class.

- Calculations have been corrected to avoid inserting ``ELLIPSIS`` to replace one number, e.g. ``[1, 2, ELLIPSIS, 4, 5, …]`` should be ``[1, 2, 3, 4, 5, …]``

- Documentation has been updated and moved to the correct location below the documentation for ``Paginator``.

Outstanding questions:

- [x] Should ``ELLIPSIS`` be moved to ``EllipsisPaginator.ELLIPSIS``? Then it can be easily documented and used in code that iterates over the ellipsized page range.

- [x] Should we look to [merge](https://github.com/django/django/pull/5866#issuecomment-173279531) this into the base ``Paginator`` class? We can't add it to ``page_range`` as that is a property - we need to pass the current page number - so it'd just be adding the new method instead of defining it on a separate class.

- [ ] ~~Should we perform any validation on the values provided to ``on_each_side`` and ``on_ends``?~~

- [x] ""ellipsized"" is a neologism, but the ""ellipsed"" used in a previous version of this doesn't quite feel right either. Any thoughts? _Changed to ""elided""._",pope1ni,None,2020-07-09T21:42:51Z,2020-08-06T10:50:39Z
13172,Fixed #24782 -- Added TestCase.assertFormValid,"[Ticket #24782](https://code.djangoproject.com/ticket/24782)

Follows #6046",smithdc1,None,2020-07-09T19:17:36Z,2020-08-04T10:28:05Z
13171,Fixed #21528 -- Added note about filtering form field's queryset based on instance to admin docs.,"Ticket: https://code.djangoproject.com/ticket/21528
Previous PR: https://github.com/django/django/pull/12101

---

Screenshot

<img width=""672"" alt=""Screen Shot 2020-07-09 at 08 35 54"" src=""https://user-images.githubusercontent.com/55533/87035086-36c4c180-c1bf-11ea-9fe7-b462817526ba.png"">
",caioariede,None,2020-07-09T11:36:53Z,2020-07-13T21:09:31Z
13170,Fixed #29789 -- Added support for nested relations to FilteredRelation.,#12333 with final edits.,felixxm,None,2020-07-09T09:33:50Z,2020-07-10T07:34:33Z
13168,Used urllib.parse.urljoin() in auth_tests to join URLs.,"As the strings represent URLs and not paths, should use urllib to
manipulate them.",jdufresne,None,2020-07-09T01:46:25Z,2020-07-09T10:03:04Z
13167,Fixed#31766: Avoid unneccessary computation in GDALRaster.transform().,https://code.djangoproject.com/ticket/31766,srinivasreddy,None,2020-07-08T17:39:34Z,2020-08-21T12:52:19Z
13165,Fixed #31773 -- Fixed preserving output_field in ExpressionWrapper for combined expressions.,"ticket-31773

Regression in df32fd42b84cc6dbba173201f244491b0d154a63.",felixxm,None,2020-07-08T11:02:29Z,2020-07-09T09:55:17Z
13164,Fixed #31739 -- Documented dependency between HttpRequest stream IO methods and body.,"**Ticket:** https://code.djangoproject.com/ticket/31739

Wrote the documentation for this ticket within `HttpRequest.body` because both `.read()` and `readlines()` methods can cause the `PostRawDataException` to occur when accessing `body`. See link [here](https://github.com/django/django/blob/ae8338daf34fd746771e0678081999b656177bae/django/http/request.py#L44) for implementation of `HttpRequest`.

![Screen Shot 2020-07-07 at 9 09 23 PM](https://user-images.githubusercontent.com/51100862/86874884-311f8c80-c096-11ea-833b-72bc20cbef9d.png)

Currently, zero results are returned when searching the Django docs for `PostRawDataException`. This sentence should help point users in the right direction.

Let me know your thoughts! ",timpark0807,None,2020-07-08T04:12:47Z,2020-07-08T08:40:34Z
13163,Refs #30400 -- Improved typography in debug and csrf templates.,https://code.djangoproject.com/ticket/30400,jdufresne,None,2020-07-07T23:37:07Z,2020-07-08T20:33:10Z
13162,Fixed #31769 -- Improved default naming of merged migrations.,https://code.djangoproject.com/ticket/31769,jdufresne,None,2020-07-07T22:13:05Z,2020-07-20T18:34:20Z
13161,Added Turkmen language.,,resuls,None,2020-07-07T20:09:24Z,2020-07-08T07:05:20Z
13160,Fixed #31769 -- Improved default naming of merged migrations created by makemigrations.,https://code.djangoproject.com/ticket/31769,jdufresne,None,2020-07-07T02:05:11Z,2020-07-07T22:13:30Z
13159,Refs #26367 -- Assess if FieldFile can work with stdlib File instead of requiring Django's File,"[Ticket #26367](https://code.djangoproject.com/ticket/26367)

I am most likely using this wrong... but... I think this already works? 

The conversion to the Django `File` type happens here:
https://github.com/django/django/blob/master/django/core/files/storage.py#L49

",smithdc1,None,2020-07-06T20:32:24Z,2020-07-07T06:59:40Z
13158,Fixed #31767 -- Fixed QuerySet.none() on combined queryset.,ticket-31767,felixxm,None,2020-07-06T19:18:11Z,2020-07-07T10:15:19Z
13157,Fixed #31502 -- Documented Model._state.db and Model._state.adding,"**Ticket:** https://code.djangoproject.com/ticket/31502

Since the ticket discusses documenting just the attributes (and not the entire class), I added the documentation within the section that references the attributes ([link here](https://docs.djangoproject.com/en/dev/ref/models/instances/#customizing-model-loading)). Let me know if you see a better section to place this information. Thanks! 

[Implementation of ModelState](https://github.com/django/django/blob/659a73bc0a2df9be856e23fcfc6cc66d0d1a35fd/django/db/models/base.py#L393). ",timpark0807,None,2020-07-06T04:58:23Z,2020-07-08T08:11:09Z
13156,Refs #25466 -- Removed unused DeprecationInstanceCheck.,Unused since ff419de263138e905dff44c5cb806310c70f32aa.,jdufresne,None,2020-07-06T01:31:11Z,2020-07-16T13:15:13Z
13155,Added Igbo language.,Created the integration patch for the newly added Igbo language for 3.1 release.,PluckyPrecious,None,2020-07-05T22:50:17Z,2020-07-14T20:27:19Z
13153,Fixed #31765 -- Disabled bundled SQLite renaming atomic references on macOS 10.15. ,"Ticket: https://code.djangoproject.com/ticket/31765

tl;dr Python compiled with SQLite 3.28.0 that is bundled with MacOS Catalina fails the `schema.tests.SchemaTests.test_db_table` test on master. Python compiled with SQLite 3.28.0 installed through Homebrew passes.

",orf,None,2020-07-05T16:49:09Z,2020-07-22T08:31:27Z
13151,Fixed #31732 -- Cached callables signatures in django.utils.inspect methods.,"### Overview
**Ticket:** https://code.djangoproject.com/ticket/31732

Created a wrapper function to perform signature inspect lookup and added `lru_cache` decorator to eliminate repeated function calls. Replaced direct signature inspect calls with the cached wrapper function. 

### Testcases 
I am not sure how to add test cases for this functionality. As a manual check, I ran the existing set of test cases with print statements in the wrapper function, with and without the lru_cache. All duplicated calls are eliminated when using the LRU cache.

**Without LRU Cache**
![Without LRU Cache](https://user-images.githubusercontent.com/51100862/86523035-463cb700-be1b-11ea-98c5-c99b47baa986.png)

**With LRU Cache** 
![With LRU Cache](https://user-images.githubusercontent.com/51100862/86523049-5b194a80-be1b-11ea-9746-f409c5a7d34e.png)",timpark0807,None,2020-07-05T04:03:36Z,2020-07-06T15:36:01Z
13149,Fixed imports and tox configuration per isort 5.,"--recursive option has been removed. Directories passed in are now automatically sorted recursive.

isort version 5 has been released and it's broken the CI. I think this is the fix. 
 [CHANGELOG](
https://github.com/timothycrosley/isort/blob/develop/CHANGELOG.md)",smithdc1,None,2020-07-04T18:36:24Z,2020-07-12T14:05:29Z
13148,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,"[Ticket #28009](https://code.djangoproject.com/ticket/28009)

This is a partial fix for this ticket. If focuses on the form fields rather (model fields also need to be looked at). I've paused as this point to get some wider input. 

The ticket explains that the `CharField` subclasses should also return `empty_value`; however, the docs explain that the subclass fields return an empty string. 

What is happening in practice is a bit of a mixture. Some fields do return `empty_value` (email, regex, slug, url). However, `GenericIPAddressField` always returns an empty string and `JSONField` and `UUIDField` always return none. I've added tests for all of these to show the behavior. 

So question is - is this inconsistency right (that's how I've written the docs), or is there further work to ensure all of the fields return `empty_value`. 

Appreciate thoughts. ",smithdc1,None,2020-07-04T18:20:03Z,2020-09-26T08:18:08Z
13147,Fixed #29308 -- Clarified how assertQuerysetEqual()'s transform works.,https://code.djangoproject.com/ticket/29308,jacobtylerwalls,None,2020-07-04T13:52:32Z,2020-07-04T23:17:56Z
13146,Simplified <body> element references in DateTimeShortcuts.js.,,jdufresne,None,2020-07-04T00:31:36Z,2020-07-04T19:15:12Z
13145,Fixed #31623 -- Allowed specifying number of adjacent time units in timesince()/timeuntil().,"### **Overview**
**Ticket:** https://code.djangoproject.com/ticket/31623

The `timesince` function returns the time between two datetime objects as a formatted string.

The previous implementation always returned two units of time. This update improves flexibility by allowing the user to specify the number of units to be returned. To preserve existing functionality, the default depth value is set to 2. 

### **Example**
 - depth = 1 returns ""2 weeks""
 - depth = 2 returns ""2 weeks, 3 days""
 - depth = 3 returns ""2 weeks, 3 days, 3 hours""
 - depth = 4 returns ""2 weeks, 3 days, 3 hours, 13 minutes""

### **Update includes:**
- New depth functionality 
- New test cases 
- Updated Doc Strings
- Updated Release Notes 

Let me know if you see anything.

Thanks! ",timpark0807,None,2020-07-03T23:30:47Z,2020-09-21T11:19:18Z
13144,Django Tutorial Part 1 review,,mebdivio,None,2020-07-03T16:08:52Z,2020-07-03T16:10:31Z
13143,Added cast_template to allow non-explicit cast in custom fields.,"While working on https://github.com/laymonage/django-jsonfield-backport/pull/2, I noticed that I'm unable to define custom templates for casting custom model fields. This fixes it by adding another mapping like `cast_data_types`, but for templates. I think this also looks better as this gives better separation between `Cast` and model fields.",laymonage,None,2020-07-03T13:17:50Z,2020-07-03T15:42:37Z
13142,Removed duplicated sqlite3 converter.,"Converters typenames are case-insensitive. See
https://docs.python.org/3/library/sqlite3.html#sqlite3.register_converter.",sir-sigurd,None,2020-07-03T06:57:34Z,2020-07-03T08:23:14Z
13141,Update help_text for NumericPasswordValidator,The NumberPasswordValidator also checks for entirely alphabetic in its current implementation and therefore this help_text should be displayed to the user.,raajtilaksarma,b'invalid',2020-07-03T06:01:58Z,2020-07-03T08:15:28Z
13140,Update password_validation.py,"Adding ""Your password can’t be entirely alphabetic"" to help_text as currently entirely alphabetic password is also not being accepted and the current user does not get registered in the process. If user is allowed to put an entirely alphabetic password, this help_text is not needed.",raajtilaksarma,b'invalid',2020-07-03T05:50:40Z,2020-07-03T06:15:45Z
13139,Fixed #30945 -- Doc'd plural equations changes in 2.2. release notes.,"[Ticket](https://code.djangoproject.com/ticket/30945)

This is my interpretation of this documentation ticket. 

Not sure it's really needed as it's been fixed in a subsequent bug-fix release, but hopefully this helps to inform the decision to either fix or close the ticket 🤞 

",smithdc1,None,2020-07-02T20:22:46Z,2020-07-27T19:52:48Z
13138,Fixed #31758 -- Removed unneeded BytesToCharFieldConversionMixin.,https://code.djangoproject.com/ticket/31758,sir-sigurd,None,2020-07-02T12:03:27Z,2020-07-02T19:28:36Z
13137,Refs #6903 -- Adjusted ModelAdmin.preserve_filters docs.,Docs were added in c86a9b63984f6692d478f6f70e3c78de4ec41814 as the same as the 1.6 release note entry. Much later the `now` no longer reads as appropriate. ,carltongibson,None,2020-07-02T09:20:22Z,2020-08-05T09:38:10Z
13136,Fixed #29403 -- Made PyLibMCCache backend handle TooBig exception from pylibmc.,"Ticket: https://code.djangoproject.com/ticket/29403
Continue to https://github.com/django/django/pull/9811

I removed the [`self._cache.delete(key)`](https://github.com/django/django/pull/9811/files#diff-d603fa6afef1a44825847ccd4e9683a6R189) and it seems we don't need it. if I add a test in `PyLibMCCacheTests` like:
```python
    def test_large_value(self):
        cache.set('key', 'a')
        large_value = 'a' * (1024 * 1024)
        cache.set('key', large_value)
        value = cache.get('key')
        self.assertIsNone(value)
```
It will be passed successfully. Do we need to add this test?",hramezani,None,2020-07-02T08:20:07Z,2020-07-03T05:49:09Z
13135,[2.2.x] Fixed ForeignKeyRawIdWidgetTest.test_render_unsafe_limit_choices_to on Python 3.5.,"See [logs](https://djangoci.com/job/django-2.2/database=sqlite3,label=bionic,python=python3.5/lastCompletedBuild/testReport/admin_widgets.tests/ForeignKeyRawIdWidgetTest/test_render_unsafe_limit_choices_to/).",felixxm,None,2020-07-02T07:58:15Z,2020-07-02T08:59:20Z
13133,Updated docs/intro/tutorial02.txt,Just a grammatical correction,raman934,None,2020-07-01T19:44:42Z,2020-07-01T19:52:30Z
13132,Corrected custom model fields how-to.,"Since Django 1.8, `get_prep_value()` method is complementary of
`from_db_value()`, not `to_python()`.",ramiro,None,2020-07-01T14:46:49Z,2020-07-10T09:37:25Z
13131,Fixed #24816 -- Clarified docs about preventing duplicate signals.,"I imagine we'll need to work the wording here more before merge but I wanted to make sure I got this up, first.",jheld,None,2020-07-01T02:55:54Z,2020-07-08T06:23:11Z
13130,Refs #12990 -- Added example to JSONField release notes.,"As  discussed on IRC, I think the JSONField release notes deserve a code snippet of some kind.

I struggled to think of a suitable, compact example.",orf,None,2020-06-30T22:25:53Z,2020-07-03T12:25:28Z
13129,Refs #28621 -- Fixed crash of annotations with nested OuterRef.,https://code.djangoproject.com/ticket/28621,sir-sigurd,None,2020-06-30T18:25:53Z,2020-07-01T10:11:59Z
13128,Fixed #31755 -- Made temporal subtraction resolve output field.,https://code.djangoproject.com/ticket/31755,sir-sigurd,None,2020-06-30T18:06:56Z,2020-07-02T01:48:50Z
13127,'DIRS' BASE_DIR  typo in settings.py," 'DIRS': [BASE_DIR / 'templates'],

throws the following error

""\settings.py"", line 58, in <module>
    'DIRS': [BASE_DIR /  'templates'],
TypeError: unsupported operand type(s) for /: 'str' and 'str'""

Fixed as: 'DIRS': [BASE_DIR, 'templates'],

",1110sillabo,None,2020-06-30T13:53:08Z,2020-06-30T14:31:36Z
13126,Fixed #31752 -- Fixed intermittent test_order_by_relational_field_through_model failure.,Thanks to Mariusz Felisiak for the suggestion.,carltongibson,None,2020-06-30T10:06:32Z,2020-06-30T11:08:24Z
13125,Add forms TelInput,,Mopsan,None,2020-06-30T07:47:20Z,2020-06-30T08:19:20Z
13124,Fixed #31750 -- Made models.Field equality compare models for inherited fields.,"https://code.djangoproject.com/ticket/31750

One question I've thought of but not answered is what behavior is best to expect with *concrete* inheritance, or what the behavior in that circumstance is currently and would be after this change.

Arguably, the field would then really be on the base class, but I'm not sure what I might expect to be the case as a consumer of the field. For example, would the field de-duplicate in a set? My intuition is that they really should also be different in that case, unless they all report to have the same model.",ryanhiebert,None,2020-06-30T04:25:12Z,2020-09-09T13:49:16Z
13123,[2.2.x] Refs #31751 -- Doc'd that cx_Oracle < 8 is required.,ticket-31751,felixxm,None,2020-06-29T20:49:06Z,2020-06-30T07:48:02Z
13122,Fixed #31751 -- Fixed database introspection with cx_Oracle 8.,ticket-31751,felixxm,None,2020-06-29T20:45:05Z,2020-06-30T07:50:28Z
13121,Fixed #28925 -- Fixed durations-only expressions crash on SQLite and MySQL.,https://code.djangoproject.com/ticket/28925,sir-sigurd,None,2020-06-29T09:04:15Z,2020-06-30T06:35:06Z
13120,Improved performance of MEDIA_URL/STATIC_URL access and check SECRET_KEY on access.,,apollo13,None,2020-06-28T08:41:34Z,2020-07-29T07:27:38Z
13119,Fixed #30807 -- Fixed TestArchive.test_extract_file_permissions() when umask is 0o000.,"Fix test that checks permissions on files extracted from archives with
no permissions set to not assume a default umask of 0002.

This specifically broke tests on Windows Subsystem for Linux that
defaults to an umask of 0000.",awtimmering,None,2020-06-28T04:45:34Z,2020-06-29T05:51:52Z
13118,Fixed #23797 -- Fixed QuerySet.exclude() when rhs is a nullable column.,"Fixes https://code.djangoproject.com/ticket/23797

The referenced ticket demonstrates that `exclude()` and `filter()` are not complementary when the value of an `F()` expression is NULL. The discussion on the ticket reports that:
 • `exclude()` and `filter()` should be complementary, and thus that `exclude()` should return a record where the `F()` expression evaluates to NULL
 • The requisite query should be: ``NOT ((length = width) AND (length IS NOT NULL) AND (width IS NOT NULL))`` to avoid performance problems with `IS TRUE`, which is to say, for `exclude()` to return a record, one of three things must obtain: the comparison test fails, the tested value is null, or the comparison value is null.
 • The change should happen directly in `build_filter()`

Then discussion trails off. This was straightforward to implement; I just needed to check if the value (in the place of the F expression) was an instance of a `Col` before adding the `IS NOT NULL` clause. I look forward to your feedback. :-)
",jacobtylerwalls,None,2020-06-27T21:51:56Z,2020-07-06T11:11:55Z
13117,[IMP] optimize the if condition,purpose of this task to improve if condition ,shahshivam058,None,2020-06-27T06:36:40Z,2020-06-27T06:39:54Z
13116,"Link from ""Making queries"" doc to ""QuerySet API reference"" doc","I wanted to filter a `QuerySet` by upper and lower bounds (on a DateTime field).

I found myself searching through ""Making queries"" and saw sections such as ""Field lookups"" showing `__gt` examples, but the `__range` section is not mentioned.

My hope is, linking from ""Making queries"" to ""QuerySet API reference"", will make it easier to jump from how queries conceptually work to more details around available filters / manager methods.",tomleo,None,2020-06-26T22:23:54Z,2020-07-07T09:57:18Z
13115,Fixed #31745 -- Added error messages when using UniqueConstraint.include/opclasses with deferrable.,Ticket: https://code.djangoproject.com/ticket/31745,hannseman,None,2020-06-26T18:45:13Z,2020-06-29T04:42:08Z
13113,Fixed broken test_clean_does_deduplicate_values on Oracle after e13cfc6dfd4212ef7a40db1a41d3ae6ac4b97de0.,"Boolean filters are passed in `params` on Oracle. I switched to models without extra filters. 

See [logs](https://djangoci.com/job/pull-requests-oracle/database=oracle18,label=bionic4,python=python3.8/161/testReport/junit/model_forms.tests/ModelMultipleChoiceFieldTests/test_clean_does_deduplicate_values/).",felixxm,None,2020-06-26T10:06:40Z,2020-06-26T20:38:03Z
13112,Fixed #31742 -- Fixed makemigrations crash on ForeignKey to an app with mixed case label.,ticket-31742,felixxm,None,2020-06-26T04:51:38Z,2020-06-26T21:19:05Z
13111,Fixed #31620 -- Added support for %V format to WeekMixin/WeekArchiveView.,https://code.djangoproject.com/ticket/31620,hramezani,None,2020-06-25T21:05:18Z,2020-06-26T09:48:03Z
13110,Added test for django.contrib.admin.utils.help_text_for_field().,,felixxm,None,2020-06-25T08:47:54Z,2020-06-25T09:23:32Z
13109,Fixed #31596 -- Changed ForeignKey.validate() to use the base manager.,"Follow up from #12923 for which ~~GH seems~~ I seem to have _had a moment_...


cc @jdufresne ",carltongibson,None,2020-06-25T08:36:45Z,2020-06-25T09:36:26Z
13108,Refs #26761 -- Removed extra space in admin change list result header.,,felixxm,None,2020-06-25T04:34:26Z,2020-06-25T04:58:02Z
13107,Refs #31358 -- Change salt measurement from characters to bits of entropy,"This commit is in partial service of ticket
https://code.djangoproject.com/ticket/31358
It changes the measurement of the BasePasswordHasher salt
from character length to bits of entropy. Given the current
ascii encoding this code returns a salt with entropy greater than
or equal to the new `salt_entropy` value which has been set to ~128bits~ 71bits",darakian,None,2020-06-25T02:33:53Z,2020-06-29T15:21:36Z
13106,Improved description of USE_THOUSAND_SEPARATOR setting,I found the original a little hard to grok when I read it.,adamchainz,None,2020-06-24T20:54:50Z,2020-07-20T10:54:56Z
13105,Update signing.py for encode error,"When session_dict has Chinese charactors, Encoded error occur.
change  django.core.signing.JSONSerializer encoded mode from latin-1 to utf-8",CheungChan,None,2020-06-24T07:44:08Z,2020-06-24T08:04:49Z
13104,Fixed #31735 -- Fixed migrations crash on namespaced inline FK addition on PostgreSQL.,"The namespace of the constraint must be included when making the constraint immediate.

Refs #31106.

Thanks Rodrigo Estevao for the report.",charettes,None,2020-06-24T03:55:32Z,2020-08-19T04:28:22Z
13102,Fixed #31736 -- Fixed InspectDBTransactionalTests.test_foreign_data_wrapper crash on Windows.,Changed filename used in test_foreign_data_wrapper from constant '/dev/null' to os.devnull to work on Windows,lothemar,None,2020-06-23T13:07:08Z,2020-06-23T19:00:03Z
13101,Made JavaScript URL manipulation more robust with URL and URLSearchParams.,"Use the rich interface and native parsing provided by the browser rather
than raw string manipulation.

https://developer.mozilla.org/en-US/docs/Web/API/URL
https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams",jdufresne,None,2020-06-23T11:57:25Z,2020-07-01T14:06:39Z
13100,Refs #31692 -- Fixed compilemessages crash on Windows with Python < 3.8.,"Regression in ed0a040773f5bad187170ab4e3b094fe3108d702.

Logs: https://djangoci.com/job/django-windows/lastCompletedBuild/

See https://bugs.python.org/issue31961.",felixxm,None,2020-06-23T08:29:21Z,2020-06-23T09:14:47Z
13099,"Changed ` to ', because ` broke all localisations","Changed \` to ', because ` broke all localisations
before -
[http://i.imgur.com/cBJdXSf.png](url)
after -
[http://i.imgur.com/0uciFaS.png](url)",mistralbkru,None,2020-06-23T05:55:00Z,2020-06-23T05:59:41Z
13098,Simplified JavaScript with Array.prototype.includes().,https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes,jdufresne,None,2020-06-23T01:39:50Z,2020-07-01T14:06:39Z
13097,Fixed #9061 -- Allowed FormSets to disable deleting extra forms.,"[Ticket #9061](https://code.djangoproject.com/ticket/9061)

This carries on work made in #4772 and #12558. I've updated the PR for current master and added the feature to model and inline formset factories as well. I've tried to layout the commits in a logical order - the first is intended to be the PR as per the previous attempt in 12558 with my amends in the subsequent commits. I hope this is useful. 

I'll leave a few comments inline shortly. ",smithdc1,None,2020-06-22T19:27:10Z,2020-06-24T08:24:41Z
13096,Add Twitter to project_urls in setup.cfg,"- ee784604a1047ac9c290a911f6556ab63693de4e Update setup.cfg for Twitter URL
Reference: https://github.com/pypa/warehouse/blob/e8adbd567dd5b512652ed94280eae683e5aa24fc/warehouse/templates/packaging/detail.html#L46",wxh06,None,2020-06-22T13:04:51Z,2020-06-24T10:13:02Z
13095,Removed wrong admonition in argon2 docs.,"This does not seem to be true, python -m argon2 lists KiB:
```
python -m argon2 -m 512
Running Argon2id 100 times with:
hash_len: 16 bytes
memory_cost: 512 KiB
parallelism: 8 threads
time_cost: 2 iterations
```

And we use them as such:
https://github.com/hynek/argon2-cffi/blob/b42a51818d1180637bd3a9e99c0d1de87d511a51/src/argon2/_password_hasher.py#L40
https://github.com/django/django/blob/258c88a913fe1e7704cdb6f61c6ceb7493f6092a/django/contrib/auth/hashers.py#L311-L319",apollo13,None,2020-06-22T11:35:07Z,2020-06-22T11:56:18Z
13094,[2.2.x] Fixed #31728 -- Fixed cache culling when no key is found for deletion.,"DatabaseCache._cull implementation could fail if no key was found to
perform a deletion in the table. This prevented the new cache key/value
from being correctly added.

Backport of f386454d1302b66d0eb331ed0ae9e4811e2f3a15 from master",knixeur,None,2020-06-22T11:04:46Z,2020-06-22T11:44:23Z
13092,Removed unused param_dict return from URLResolver.resolve_error_handler().,"This empty dict seems to have always been present since a55598cbdd5e8ab58bb58e2178ccbe155526d735, but serves no purpose that I can tell.",adamchainz,None,2020-06-20T17:30:11Z,2020-07-20T10:14:20Z
13091,Combined MySQL backend server info queries,"This optimization means Django will only ever do a single ""reconnaisance"" query per server, combining the round trips.",adamchainz,None,2020-06-20T17:24:56Z,2020-06-22T08:54:32Z
13090,Improved RegexValidator docs.,"I've found myself wondering a few times over the years whether it uses `re.search()` or `re.match()`, so make that explicit. Also extract the behavior description above the attribute descriptons, and provide more links to the regex documentation.",adamchainz,None,2020-06-20T16:35:32Z,2020-06-30T11:05:55Z
13089,Fixed #31728 -- Fixed cache culling when no key is found for deletion.,"DatabaseCache._cull implementation could fail if no key was found to
perform a deletion in the table. This prevented the new cache
key/value from being correctly added.",knixeur,None,2020-06-20T07:36:10Z,2020-06-22T20:32:33Z
13088,Fixed #31573 -- Made QuerySet.update() respect ordering on MariaDB/MySQL.,"https://code.djangoproject.com/ticket/31573

Multiple rows can be updated with unique constraints on MySQL databases using QuerySet.order_by(...).update(...)",davidchorpash,None,2020-06-20T04:58:37Z,2020-07-08T16:24:43Z
13087,Fixed #16300 -- Improved singlehtml docs formatting with headers CSS.,"When using ""make singlehtml"" headings up to ""h12"" are created. Added some basic
styling to these to distinguish between paragraph text.

[Ticket #16300](https://code.djangoproject.com/ticket/16300)",smithdc1,None,2020-06-19T20:22:20Z,2020-06-22T19:37:41Z
13085,Fixed #31692 -- Prevented unneeded .po file compilation.,,claudep,None,2020-06-19T08:28:19Z,2020-06-22T07:29:28Z
13084,dsf,,Developermayank,None,2020-06-19T03:43:24Z,2020-06-19T03:43:57Z
13083,"Fixes #31722 - RangeWidget produces 1 subwidget, itself", MultiWidget should return it's subwidgets as it's subwidgets,rheard,None,2020-06-18T23:50:43Z,2020-06-23T07:23:38Z
13082,Fixed #31713 -- Added SpatialReference support to GDALRaster.transform().,"Deprecated integer SRID as function argument in ``django.contrib.gis.gdal.GDALRaster.transform`` in favor of directly passing a SpatialReference item to the transform (``django.contrib.gis.gdal.SpatialReference``).

Providing patch with updated documentation, release notes, and internal deprecation log.

This is my first PR so please point out anything that can be improved!
Very much appreciated.",rico-ci,None,2020-06-18T14:13:29Z,2020-07-07T11:47:27Z
13081,Fixed #31718 -- Add update_fields to User.save() in changepassword,"[Ticket #31718](https://code.djangoproject.com/ticket/31718#ticket)

Added `update_fields` to the `User.save()` call in `changepassword` command.",marceltschoppch,None,2020-06-18T11:35:06Z,2020-06-18T14:18:32Z
13080,[BUG] Stable/3.0.x bug in queryset of django's filter,"there is something wrong with ""exact"" filter:

product = Product.objects.filter(product_id__exact=str(product_id))[:1]

this code genereate the following sql query:

SELECT `main_product`.`id`, `main_product`.`name`, `main_product`.`product_id`, `main_product`.`supplier_id`, `main_product`.`description`, `main_product`.`price`, `main_product`.`type_id` FROM `main_product` WHERE `main_product`.`product_id` = dvxdioxfglixezqb LIMIT 1


as you can notice **dvxdioxfglixezqb** don't have quotes


<img width=""1334"" alt=""Screen Shot 2020-06-17 at 21 56 40"" src=""https://user-images.githubusercontent.com/26381154/84949652-7713b100-b0e5-11ea-9f01-1e7932dc4a1a.png"">
",youssef02,None,2020-06-17T20:57:50Z,2020-06-18T06:00:55Z
13079,Refs #31670 -- Renamed whitelist argument and attribute of EmailValidator.,"Hi All,

Here is a follow up to #13031 to address `EmailValidator`.

I judged consensus was heading towards `domain_allowlist` - however @adamchainz was +1 for `allowed_domains `

I also looked to deprecate `domain_whitelist` as per comments on the previous PR. In addition to the `@property` I also introduced a `setter` for this attribute. ",smithdc1,None,2020-06-17T20:11:50Z,2020-07-27T19:52:59Z
13078,Fixed typo in django/core/management/templates.py docstring.,,excursus,None,2020-06-17T16:46:03Z,2020-06-24T19:46:02Z
13077,Fixed #31716 -- Fixed detection of console scripts in autoreloader on Windows.,Ticket: https://code.djangoproject.com/ticket/31716,orf,None,2020-06-17T16:45:52Z,2020-06-18T11:04:11Z
13076,Refs #30190 -- Minor edits to JSONL serializer.,Follow up to e29637681be07606674cdccb47d1e53acb930f5b.,felixxm,None,2020-06-17T05:04:47Z,2020-06-17T05:59:50Z
13075,"Reverted ""Pinned asgiref == 3.2.7 in test requirements.""",This reverts commit dcb4d79ef719d824431a8b3ff8ada879bbab21cc.,felixxm,None,2020-06-17T04:33:46Z,2020-06-17T05:09:01Z
13074,Fixed #31743 -- Doc't that managed=False prevents Django from managing tables modifications.,"Managed = false will also prevent modifications. This is made clear in the comments in the auto-generated output from inspectdb but is not mentioned here.  This PR helps prevent the over half day wasted wondering makemigrations saw no changes when adding a new column to the table.

It would also be nice to add something to the first paragraph to make it clear that managed= True allows for modifications of the schema in the database. 

For this ticket
https://code.djangoproject.com/ticket/31743#ticket",thesteve0,None,2020-06-17T00:36:06Z,2020-06-26T07:58:41Z
13072,Removed unsupported third-party database backends from docs.,"Follow up to #12948

These are all looking unmaintained: 

* https://pypi.org/project/ibm_db_django/#history
* https://pypi.org/project/django-firebird/#history
* https://pypi.org/project/django-pyodbc/#history

They don't support the latest versions and there is no significant activity on the repos. If they come to life it's easy enough to re-add. ",carltongibson,None,2020-06-16T10:44:21Z,2020-07-09T06:06:50Z
13071,Refs #28077 -- Added opclasses to Index.__repr__().,,felixxm,None,2020-06-16T09:38:11Z,2020-06-17T08:32:47Z
13070,Refs #30446 -- Defined default output_field of text database functions.,"Moved from #11359.

I removed `output_field` from `Chr()` because it accepts a single expression and adjusted related tests.",felixxm,None,2020-06-16T08:10:12Z,2020-07-14T06:42:12Z
13069,Pinned asgiref == 3.2.7 in test requirements.,I think it's worth even for a day or two.,felixxm,None,2020-06-16T05:03:47Z,2020-06-16T05:54:46Z
13067,Fixed #31709 -- Added support for opclasses in ExclusionConstraint.,Fixed: https://code.djangoproject.com/ticket/31709,hannseman,None,2020-06-15T19:13:05Z,2020-06-16T07:06:27Z
13066,Fixed #30472 -- Made Argon2PasswordHasher use Argon2id.,"This also updates memory_cost and parallelism to be in line with the
default recommendations.

@hynek Do you think you could give this a review? It certainly is suboptimal in the sense that we still use our own salt, but much of the actual `low_level` usage got removed.",apollo13,None,2020-06-15T13:27:18Z,2020-10-05T11:45:47Z
13064,Fixed #31706 -- Removed unnecessary getattr() call in FileDescriptor.__get__().,"To retrieve a deferred model attributes, the `__get__` method is called twice. This is because it uses the `getattr()` function, which in turn causes the `__get__` method to be called again.

To prevent this unnecessary call, we can simply delete it (since at that moment the instance dict already contains the reloaded value). This reduces the number of method calls.",alosultan,None,2020-06-14T15:24:15Z,2020-08-22T02:34:54Z
13063,Fixed #31704 -- Fallback on ipdb failure,Ticket: https://code.djangoproject.com/ticket/31704,jayvdb,None,2020-06-14T05:17:25Z,2020-06-15T04:59:36Z
13062,"Fixed #31703 -- Made makemigrations name all initial migrations ""initial"".","When the MigrationAutodetector creates more than one initial migration
in a app, name all initial migrations ""initial"" rather than the opaque
""auto_<DATE>_<TIME>"" name.

Initial migrations that have a descriptive name continue to use the
descriptive name.

https://code.djangoproject.com/ticket/31703",jdufresne,None,2020-06-14T00:17:15Z,2020-07-01T14:06:40Z
13061,Fixed #31696 -- Updated OWASP links in docs.,"https://code.djangoproject.com/ticket/31696
I also searched for other `OWASP` links and updated them to avoid redirection.",hramezani,None,2020-06-13T20:28:52Z,2020-06-15T07:44:09Z
13059,Fixed #31702 -- Added support for PostgreSQL opclasses in UniqueConstraint.,Ticket: https://code.djangoproject.com/ticket/31702,hannseman,None,2020-06-12T20:08:34Z,2020-06-16T05:21:38Z
13058,Fix greek translation typos,"I observed 2 typos in the translation files for Greek. They are fixed in this pull request, and the .mo files are also re-generated for Greek.",orfeasa,None,2020-06-12T15:34:30Z,2020-06-12T15:59:19Z
13057,Fixed #31691 -- Added ordering support to JSONBAgg.,"Pretty simple fix. Uses the OrderableAggMixin to add the ordering argument to JSONBAgg.

The tests are modified from the ArrayAgg ordering tests. 

Ticket is here: https://code.djangoproject.com/ticket/31691

Let me know if you need changes.",john-parton,None,2020-06-12T14:58:00Z,2020-06-12T22:32:16Z
13056,Changed the quotes to maintain consistency. PEP8.,,ObliviousParadigm,None,2020-06-12T14:35:48Z,2020-06-12T15:31:16Z
13055,Changed the quotes to maintain consistency. PEP8.,,ObliviousParadigm,None,2020-06-12T14:32:49Z,2020-06-12T14:33:14Z
13054,Changed string formatting to maintain consistency,,ObliviousParadigm,None,2020-06-12T13:57:23Z,2020-06-12T14:34:33Z
13053,Fixed #31690 -- Added note about fuzzy entries in translation docs.,Related to https://code.djangoproject.com/ticket/31690,sebashwa,None,2020-06-12T13:32:19Z,2020-06-15T07:27:56Z
13052,Fixed #31701 -- Made FileDescriptor subclass DeferredAttribute.,"[Ticket #31701](https://code.djangoproject.com/ticket/31701)

The model fields use, by default, the descriptor **DeferredAttribute** to access and process (if necessary) the data associated with them. This type of data represents the actual data in db column. I prefer to call it a “field data”.

To access the field data in instance dict, **Field.attname** is used as a key.

In addition to the field data, some other model fields (for example, ForeignKey) also use a ""client data"" of the attribute, the processing of which is performed by a particular descriptor. Such a descriptor is assigned to a model using **Field.name**.  Its task is to present the same field data in a different format, the result of which differs from the result of `field.attname` descriptor: `article.author` returns a User object, and `article.auther_id` returns a User object pk.

This feature is not used in models.FileField. Then why use FileField.name instead of FileField.attname for FileDescriptor?

I think it would be better if FileDescriptor extends the DeferredAttribute class and uses `field.attname` instead of `field.name`.",alosultan,None,2020-06-12T13:05:13Z,2020-06-30T08:19:09Z
13051,Fixed #31689 -- Doc'd caveat about using bulk_create()'s ignore_conflicts on MariaDB and MySQL.,This is my suggested wording to warn about https://code.djangoproject.com/ticket/31689.,tuky,None,2020-06-12T12:55:09Z,2020-06-15T11:21:25Z
13050,Fixed #31491 -- Allowed 'password' option in DATABASES['OPTIONS'] on MySQL.,"[ticket](https://code.djangoproject.com/ticket/31491)

Do we need to address [this comment](https://github.com/django/django/pull/12763/commits/bfdc25f85174f671cfcdc58fcf00530c3cc8f451#r412015975) :thinking:  ? because keys in `OPTIONS` are lowercase and keys in `settings_dict` are uppercase and also for `db` we have `db` in `OPTIONS` and `NAME` in `settings_dict`.
maybe something like:
```python
        conn_params = {**settings_dict, **settings_dict['OPTIONS']}
        db = conn_params.get('db', conn_params['NAME'])
        user = conn_params['OPTIONS'].get('user', conn_params['USER'])
        password = conn_params['OPTIONS'].get('password', conn_params['PASSWORD'])
        host = conn_params['OPTIONS'].get('host', conn_params['HOST'])
        port = conn_params['OPTIONS'].get('port', conn_params['PORT'])
        server_ca = conn_params['OPTIONS'].get('ssl', {}).get('ca')
        client_cert = conn_params['OPTIONS'].get('ssl', {}).get('cert')
        client_key = conn_params['OPTIONS'].get('ssl', {}).get('key')
        defaults_file = conn_params['OPTIONS'].get('read_default_file')
```",hramezani,None,2020-06-11T20:17:25Z,2020-06-12T10:08:43Z
13049,Fixed #31649 -- Added support for covering exclusion constraints on PostgreSQL 12+,Ticket: https://code.djangoproject.com/ticket/31649,hannseman,None,2020-06-11T19:07:03Z,2020-06-13T04:53:52Z
13048,Fixed #31659 -- Made ExpressionWrapper preserve output_field for combined expressions.,"Regression in df32fd42b84cc6dbba173201f244491b0d154a63.

I think it makes sense to set `output_field` on a combined expression, used in `ExpressionWrapper`, when it cannot be resolved.

ticket-31659",felixxm,None,2020-06-11T09:35:29Z,2020-06-12T05:22:07Z
13047,Fix #31636 -- Respect choices for booleanfieldlistfilter,"Change behaviour of BooleanFieldListFilter in such a way that choices are
respected while populating filters in admin page.

ticket-31636",jithintomz,None,2020-06-11T07:25:24Z,2020-09-14T06:12:34Z
13046,[3.0.x] Refs #31660 -- Fixed annotations.tests crash on MySQL,Follow up to be7a295141337189b9eceea506489bdfe07f199e. `sql_mode` is not available in Django 3.0.,felixxm,None,2020-06-11T06:59:30Z,2020-06-11T08:36:47Z
13045,Fixes #30933 -- Updated installation instructions for GeoDjango depencies on Windows.,"[Ticket #30933](https://code.djangoproject.com/ticket/30933)

The first commit in this pull request makes an amend to the tutorial. I found the data set in the tutorial contains a 'null' entry and caused the import to fail. A change to the model allowed the data set to be imported successfully. 

This set of installation instructions works for 3.1 / Master. One of the trip-ups is that `OSGeo4W` installs a specific version of GDAL (currently 3.0), unless we go the 'advanced' route. Therefore to support older versions (e.g. Django 3.0) we would need to explore this. I've included a screenshot of what we would need to navigate (this screen is about half a dozen ""next""s in to the install process)

<img width=""688"" alt=""osgeo4w"" src=""https://user-images.githubusercontent.com/39445562/84315946-402c2100-ab62-11ea-8836-2aa037261022.PNG"">

The ticket mentions using other back ends. I explored using `spatialite` but this seems to be a non-trivial install. There's a few references when googling which explains you need to overwrite the [`sqlite.dll`](https://pythongisandstuff.wordpress.com/2015/11/11/python-and-spatialite-32-bit-on-64-bit-windows/), so ....😬 

I've updated the install instructions to use 64 bit everywhere. I've not tested other combinations, is it worth it, what do you think? 

",smithdc1,None,2020-06-10T20:38:36Z,2020-06-17T18:09:21Z
13044,"less code, same action in ModelBase.save()",obvious,SergBobrovsky,None,2020-06-10T11:51:16Z,2020-06-10T12:44:26Z
13043,simplified the cumbersome condition in ModelBase.__new__(),obvious,SergBobrovsky,None,2020-06-10T10:47:23Z,2020-06-10T15:18:11Z
13042,Refs #31682 -- Doc'd minimal sqlparse version in Django 2.2.,,felixxm,None,2020-06-10T04:23:10Z,2020-06-10T04:53:37Z
13041,Fixed #31675 -- Added warning to ExceptionReporter when exceptions chain has a cycle.,https://code.djangoproject.com/ticket/31675,hramezani,None,2020-06-09T20:31:16Z,2020-06-10T07:54:10Z
13040,Removed unnecessary list() call in ModelBase.__new__().,obvious,SergBobrovsky,None,2020-06-09T17:47:02Z,2020-06-10T10:10:37Z
13039,Fix list conditional predicate,"Pull request according to this ticket: https://code.djangoproject.com/ticket/31682#ticket

Would be also great full for a suggestion of a workaround in the meantime since I am stuck as of now.",sturmf,None,2020-06-09T17:37:25Z,2020-06-09T19:52:55Z
13037,Pin Sphinx version,"Hi @felixxm It looks like the most recent release of Sphinx is causing build errors (this seems to have happened a few times recently?). 

I _think_ that this should pin it to the previous version which works. Which _may_ be a short term solution?

I have spent some time looking into the issue. I thought that #12135 may have helped but I struggled to get that to work...",smithdc1,None,2020-06-08T20:50:09Z,2020-06-08T21:13:45Z
13036,Fixed #31680 -- Removed unnecessary getattr() call in DeferredAttribute.__get__().,"To retrieve a deferred model attributes, the `__get__` method is called twice. This is because it uses the `getattr()` function, which in turn causes the `__get__` method to be called again.

To prevent this unnecessary call, we can simply extract the value direct from the instance dict (since at that moment it already contains the reloaded value). This reduces the number of method calls.",alosultan,None,2020-06-08T19:02:05Z,2020-06-10T11:23:42Z
13035,Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.,Trac ticket [#28132](https://code.djangoproject.com/ticket/28132).,mbrown1413,None,2020-06-08T18:45:34Z,2020-06-16T04:42:52Z
13034,Fixed comment in django/contrib/auth/urls.py..,,knyghty,None,2020-06-08T17:59:41Z,2020-06-10T06:39:10Z
13033,Fixed #31657 -- Fixed ordering by attnames of self-referential ForeignKeys.,https://code.djangoproject.com/ticket/31657,hramezani,None,2020-06-07T14:52:19Z,2020-06-10T10:05:19Z
13032,Fixed #31661 -- Removed period in makemigrations history check warning.,"Improved log statement formatting resulting from an OperationalError being caught when manage.py makemigrations is invoked.

Before:
![image](https://user-images.githubusercontent.com/43051848/83956222-c837c100-a818-11ea-91c9-98713d816712.png)

After:
![image](https://user-images.githubusercontent.com/43051848/83956226-d554b000-a818-11ea-9d68-728c7db5fde5.png)
",davidchorpash,None,2020-06-06T23:12:13Z,2020-06-08T05:08:00Z
13031,Refs #31670 -- Removed whitelist/blacklist terminology in docs and comments.,"[Ticket #31670](https://code.djangoproject.com/ticket/31670#ticket)

Hi @adamchainz here is the updated PR (previously #12755). 

Probably a little bit of thought needed on ""allow list"" vs ""allowlist"" and ""deny list"" vs ""denylist"". I went without the spaces as that's what Microsoft/Google/Rails did (see links in ticket), but 🤷.",smithdc1,None,2020-06-06T21:32:15Z,2020-06-17T19:42:26Z
13030,Fixed #31667 -- Made __in lookup ignore None values.,[Ticket](https://code.djangoproject.com/ticket/31667),adamchainz,None,2020-06-05T22:49:57Z,2020-07-20T10:14:48Z
13029,Add helpers to get settings values from env variables,"I'm interested in reducing the distance from running `startproject` to having a deployable Django app, having recently had a number of interactions with junior devs interested in using Django but finding deployment a nightmare. Some of this is of course on the other side, on the PaaS of choice, but some of it can (and I think should) be done on the Django side.

I'd like to start small. This just adds a helper to get variables from the environment, with type conversion and defaults handled, and uses that helper on two values in `startproject`'s settings.

https://groups.google.com/d/topic/django-developers/CIPgeTetYpk/discussion",wlonk,None,2020-06-05T20:37:56Z,2020-06-25T20:53:45Z
13028,Fixed #31664 -- Reallowed using non-expressions having filterable attribute as rhs in queryset filters.,Check if rhs is an expression to be able to use `filterable` as model field name,chocobn69,None,2020-06-05T19:49:04Z,2020-06-08T07:18:30Z
13027,Fixed #31645 --  Enhanced the migration warning for migrate commmand.,Ticket: https://code.djangoproject.com/ticket/31645,chinmoy12c,None,2020-06-05T16:52:25Z,2020-06-14T02:08:28Z
13026,Refs #31645: Added code for more elaborate error when makemigrations is not run before migrate command,…is not run before migrate command,chinmoy12c,None,2020-06-05T16:09:54Z,2020-06-05T16:50:46Z
13025,Fixed #31660 -- Fixed queryset crash when grouping by m2o relation.,"ticket-31660

Regression in 3a941230c85b2702a5e1cd97e17251ce21057efa.

Thanks Tomasz Szymański for the report.",felixxm,None,2020-06-05T07:01:35Z,2020-06-08T05:22:48Z
13024,Fixed #31662 -- Added detection for GDAL 3.0 and 3.1 on Windows.,"I think the `lib_names` need updating for GDAL3 support. I've updated it for windows but am unsure for *nix. 

Having made this amend I can runmigrations following the gis tutorial. ",smithdc1,None,2020-06-04T21:00:01Z,2020-06-08T07:50:18Z
13023,Fixed #31663 -- Made DecimalField.to_python() handle non-numeric invalid values.,"If a dictionary was being passed to DecimalField.to_python() it failed to generate the ValidationError, and instead was propagating the TypeError from the lower-level code, thus hiding the specifics of which value exacly caused the error. This - for example - affects debugging a save() on an improperly initialized object with many fields.",spachev,None,2020-06-04T20:40:44Z,2020-06-05T19:13:36Z
13022,Fixed #31654 -- Fixed cache key validation messages.,ticket-31654,felixxm,None,2020-06-04T19:49:04Z,2020-06-05T05:22:07Z
13020,[2.2.x] Fixed ForeignKeyRawIdWidgetTest.test_render_unsafe_limit_choices_to on Python 3.5.,https://djangoci.com/job/django-2.2/lastCompletedBuild/testReport/,felixxm,None,2020-06-03T21:20:10Z,2020-06-04T05:37:44Z
13019,Removed unused 'flex' class from admin changelist.,"I loaded a Tailwind CSS into the admin (well, a subset) to help with some layout tweaks. The `flex` class from Tailwind broke the layout of the changelist content, since it has a `flex` class. This was added in 9dda4abee1225db7a7b195b84c915fdd141a7260 but I can't find any reference to it having associated CSS rules. I think we can remove it to avoid conflict with other CSS like Tailwind, and confusion with the CSS flexbox concept.",adamchainz,None,2020-06-03T14:56:38Z,2020-06-05T21:55:43Z
13018,Fixed #31650 -- Added note uniqueness of constraints names in docs.,https://code.djangoproject.com/ticket/31650,hramezani,None,2020-06-03T12:41:21Z,2020-06-04T05:36:13Z
13017,Refs CVE-2020-13254 -- Fixed cache.tests when KEY_PREFIX is defined.,,felixxm,None,2020-06-03T10:42:02Z,2020-06-04T19:49:38Z
13016,Cache warning,,felixxm,None,2020-06-03T10:19:51Z,2020-06-03T10:34:44Z
13015,Made default_role_error use logger.,"This prevents raising errors for translated docs also all warning will be shown instead of the first one, see https://github.com/django/djangoproject.com/issues/997.

Follow up to 1cdfe8d91215eefaa18c398069dd9c6879a9511d.",felixxm,None,2020-06-03T09:13:54Z,2020-06-03T09:43:31Z
13014,Made small improvements to PostgreSQL operations docs.,,adamchainz,None,2020-06-02T22:27:41Z,2020-06-23T09:40:35Z
13013,Refs #31615 -- Restored EXISTS clauses in extension operations.,"Removed in original PR #12952 with comment from Mariusz: https://github.com/django/django/pull/12952#discussion_r430308740

I think leaving these clauses in here is good to prevent TOCTTOU bugs. Although not the recommended workflow, I've seen setups where migrations are run in parallel by all webservers during deployment, so if we can prevent errors there we should.",adamchainz,None,2020-06-02T22:20:47Z,2020-06-03T06:26:12Z
13012,Fixed #31651 -- Made ExpressionWrapper use grouping columns from wrapped expression.,https://code.djangoproject.com/ticket/31651,theosotr,None,2020-06-02T21:19:37Z,2020-06-03T05:52:36Z
13011,Fixed #99999 -- Added a shortcut function to make toast.,My first basic contribution.,HarshaVardhan16,b'invalid',2020-06-02T18:25:13Z,2020-06-03T08:50:57Z
13010,Added support for the Korean language.,Added support for the Korean language.,ayj412,None,2020-06-02T15:17:32Z,2020-06-02T18:41:38Z
13009,Adjusted URL example in tutorial.,"No need for the example to be ASP specific.

Edits from #13005. 

Thanks @coderanger for the input: good spot, yes. 

Welcome aboard! ⛵️",carltongibson,None,2020-06-02T09:37:10Z,2020-06-02T10:26:36Z
13008,[3.0.x] Refs #31485 -- Backported jQuery upgrade to 3.5.1.,,carltongibson,None,2020-06-02T08:29:01Z,2020-06-02T12:36:35Z
13007,[2.2.x] Refs #31485 -- Backported jQuery upgrade to 3.5.1.,,carltongibson,None,2020-06-02T08:28:34Z,2020-06-02T12:36:00Z
13006,Refs #31485 -- Added release notes for backport of jQuery upgrade to 3.5.1.,,carltongibson,None,2020-06-02T08:12:10Z,2020-06-02T12:32:50Z
13005,Make the URL shade-throwing a bit less pointed in the tutorial,"Inspired by https://www.reddit.com/r/django/comments/gunzqt/the_jabs_at_asp_just_doesnt_stop_lol/. There is no need to reference ASP specifically for the point that the tutorial is making, so change it to something equally common and gross, but not throwing shade on any particular community.",coderanger,None,2020-06-02T07:57:14Z,2020-06-02T09:38:08Z
13004,Updated link to Celery,"The celeryproject.org site seems to be down (it was down yesterday also).

Could link to the github page instead?",smithdc1,None,2020-06-01T19:35:03Z,2020-06-03T19:41:02Z
13003,Fixed #31641 -- Improved loading of navigation sidebar in admin.,https://code.djangoproject.com/ticket/31641,collinanderson,None,2020-06-01T18:36:21Z,2020-06-04T20:53:17Z
13002,Fixed typo in docs/ref/templates/language.txt.,"Reading the documentation for the template language, I noticed what I believe to be an extra comma splitting the term ""alternative template language"" to  ""alternative template, language"".

I reviewed the first-time contributing guidelines, and I think I shouldn't need to set up a Trac on this, but I would be happy to if that makes things easier on your end.",Chris-May,None,2020-06-01T13:16:54Z,2020-06-01T18:51:55Z
13001,"Normalized spelling of ""system-wide"" in docs.",,jdufresne,None,2020-06-01T11:56:24Z,2020-07-01T14:06:46Z
13000,Removed redundant pyenchant dependency in spelling check docs.,"Docs currently advise to install `pyenchant` and `sphinxcontrib-spelling`. However, only sphinxcontrib-spelling is needed to be installed (pyenchant is installed as a dependency).
 ",smithdc1,None,2020-05-31T22:01:21Z,2020-06-01T06:48:46Z
12999,Refs #30997 -- Improved HttpRequest.is_ajax() warning message with stacklevel=2.,"For example, changes:
```
site-packages/django/http/request.py:264: RemovedInDjango40Warning: request.is_ajax() is deprecated. See Django 3.1 release notes for more details about this deprecation.
site-packages/django/http/request.py:264: RemovedInDjango40Warning: request.is_ajax() is deprecated. See Django 3.1 release notes for more details about this deprecation.
```
to
```
django-request/request/models.py:62: RemovedInDjango40Warning: request.is_ajax() is deprecated. See Django 3.1 release notes for more details about this deprecation.
  self.is_ajax = request.is_ajax()
django-request/request/middleware.py:26: RemovedInDjango40Warning: request.is_ajax() is deprecated. See Django 3.1 release notes for more details about this deprecation.
  if request.is_ajax() and settings.IGNORE_AJAX:
```",felixxm,None,2020-05-31T18:33:30Z,2020-06-03T06:47:32Z
12998,Fixed a wrong typo,"It's Question.objects.order_by('pub_date')[:5] and not ('-pub_date').

(Correct me if im wrong).",IT-Anthony,None,2020-05-31T13:31:16Z,2020-05-31T13:52:12Z
12997,Removed reference to unsupported versions of Django and Python.,"Now that Python 2 support has ended I wondered if we should remove this paragraph. I think it also simplifies the recomendation - use the latest version. 
",smithdc1,None,2020-05-31T05:19:44Z,2020-06-03T19:41:12Z
12996,Fixed #31643 -- Changed virtualenv doc references to Python 3 venv.,https://code.djangoproject.com/ticket/31643,jdufresne,None,2020-05-30T18:27:29Z,2020-06-02T22:15:09Z
12995,Stable/3.0.x,Remove pass from class Exception,sandes,b'invalid',2020-05-30T01:35:59Z,2020-05-30T06:52:46Z
12994,Added SingleObjectMixin.query_pk_and_slug to CBV flattened index.,This PR adds references to `SingleObjectMixin.query_pk_and_slug` docs to the `Class-based generic views - flattened index` page.,sanjioh,None,2020-05-29T12:52:14Z,2020-06-01T08:49:38Z
12993,Corrected FAQ link in docs/faq/help.txt.,"Without the leading slash, was pointing to Python's FAQ
https://docs.python.org/3/faq/index.html.",jdufresne,None,2020-05-29T11:19:07Z,2020-05-29T19:41:27Z
12992,Made small improvement to docs/topics/db/multi-db.txt.,"It really caught my eye today.

```python
db_list = ('primary', 'replica1', 'replica2')
```

1. `db_list` is not a list, it is a tuple
2. It is recommended to use `set` with `in` operations

So, it becomes:

```python
db_set = {'primary', 'replica1', 'replica2'}
```",sobolevn,None,2020-05-29T09:51:53Z,2020-06-01T08:34:24Z
12991,Refs #31638 -- Add (failing) test to show timezone problem with Now(),"This is a testcase to show a problem with `db.models.functions.Now`. For full details, see ticket-31638.

Below, the test output with various setups (output was slightly redacted to remove unnecessary cruft from the output).


### Sqlite without database `TIME_ZONE`
```
$ ./runtests.py db_functions.datetime.test_now --settings test_sqlite
.db_functions.datetime.test_now.NowTests.test_with_use_tz
TIME_ZONE: America/Chicago connection: UTC
now: 2020-05-28 11:14:08.703968+00:00 written: 2020-05-28 11:14:08.697957+00:00 published: 2020-05-28 11:14:08+00:00

.db_functions.datetime.test_now.NowTests.test_without_use_tz
TIME_ZONE: America/Chicago connection: America/Chicago
now: 2020-05-28 06:14:08.714462 written: 2020-05-28 06:14:08.712672 published: 2020-05-28 11:14:08

F
======================================================================
FAIL: test_without_use_tz (db_functions.datetime.test_now.NowTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/matthijs/docs/src/upstream/django/django/test/utils.py"", line 381, in inner
    return func(*args, **kwargs)
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 82, in test_without_use_tz
    self.compare_db_and_py_now()
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 73, in compare_db_and_py_now
    self.assertSequenceEqual(Article.objects.filter(written__gt=Now() - timedelta(minutes=1)), [a])
AssertionError: Sequences differ: <QuerySet []> != [<Article: Article object (1)>]
```

### Sqlite with database `TIME_ZONE`

This uses the following  db config (it also sets `USE_TZ`, since otherwise `TIME_ZONE` is not accepted):
```
  DATABASES = {                                                                                                           
      'default': {                                                                                                        
          'ENGINE': 'django.db.backends.sqlite3',                                                                         
          'TIME_ZONE': 'Europe/Amsterdam',                                                                                
      },                                                                                                                  
      'other': {                                                                                                          
          'ENGINE': 'django.db.backends.sqlite3',                                                                         
      }                                                                                                                   
  }                                                                                                                       
  USE_TZ=True  
```

```
$ ./runtests.py db_functions.datetime.test_now.NowTests.test_with_use_tz --settings test_sqlite
db_functions.datetime.test_now.NowTests.test_with_use_tz
TIME_ZONE: America/Chicago connection: Europe/Amsterdam
now: 2020-05-28 11:16:58.623102+00:00 written: 2020-05-28 13:16:58.616318+02:00 published: 2020-05-28 11:16:58+02:00

F
======================================================================
FAIL: test_with_use_tz (db_functions.datetime.test_now.NowTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/matthijs/docs/src/upstream/django/django/test/utils.py"", line 381, in inner
    return func(*args, **kwargs)
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 86, in test_with_use_tz
    self.compare_db_and_py_now()
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 71, in compare_db_and_py_now
    self.assertSequenceEqual(Article.objects.filter(written__lte=Now() + timedelta(minutes=1)), [a])
AssertionError: Sequences differ: <QuerySet []> != [<Article: Article object (1)>]
```

### Mysql (5.5.5-10.3.22-MariaDB-0ubuntu0.19.10.1)
```
$ ./runtests.py db_functions.datetime.test_now --settings test_mysql
.db_functions.datetime.test_now.NowTests.test_with_use_tz
TIME_ZONE: America/Chicago connection: UTC
global.time_zone: SYSTEM session.time_zone SYSTEM system_time_zone: CEST
now: 2020-05-28 11:15:14.890671+00:00 written: 2020-05-28 11:15:14.887143+00:00 published: 2020-05-28 13:15:14+00:00

Fdb_functions.datetime.test_now.NowTests.test_without_use_tz
TIME_ZONE: America/Chicago connection: America/Chicago
global.time_zone: SYSTEM session.time_zone SYSTEM system_time_zone: CEST
now: 2020-05-28 06:15:14.908754 written: 2020-05-28 06:15:14.903515 published: 2020-05-28 13:15:14

F
======================================================================
FAIL: test_with_use_tz (db_functions.datetime.test_now.NowTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/matthijs/docs/src/upstream/django/django/test/utils.py"", line 381, in inner
    return func(*args, **kwargs)
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 86, in test_with_use_tz
    self.compare_db_and_py_now()
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 73, in compare_db_and_py_now
    self.assertSequenceEqual(Article.objects.filter(written__gt=Now() - timedelta(minutes=1)), [a])
AssertionError: Sequences differ: <QuerySet []> != [<Article: Article object (3)>]

======================================================================
FAIL: test_without_use_tz (db_functions.datetime.test_now.NowTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/matthijs/docs/src/upstream/django/django/test/utils.py"", line 381, in inner
    return func(*args, **kwargs)
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 82, in test_without_use_tz
    self.compare_db_and_py_now()
  File ""/home/matthijs/docs/src/upstream/django/tests/db_functions/datetime/test_now.py"", line 73, in compare_db_and_py_now
    self.assertSequenceEqual(Article.objects.filter(written__gt=Now() - timedelta(minutes=1)), [a])
AssertionError: Sequences differ: <QuerySet []> != [<Article: Article object (4)>]
```",matthijskooijman,None,2020-05-28T11:28:07Z,2020-06-04T09:39:50Z
12990,Fixed #31570 -- Corrected translation loading for apps providing territorial language variants with different plural equations.,"Regression in e3e48b00127c09eafe6439d980a82fc5c591b673

Thanks to Shai Berger for report, reproduce and suggested fix.",carltongibson,None,2020-05-28T08:28:13Z,2020-06-01T08:02:27Z
12988,Fixed isolation of test_migrate_fake_initial.,"Noticed in [the last build on Oracle](https://djangoci.com/job/django-oracle/lastCompletedBuild/database=oracle18,python=python3.7/testReport/).",felixxm,None,2020-05-28T04:38:27Z,2020-05-28T07:32:56Z
12987,Refs #27804 -- Used subTest() in tests.utils_tests.test_text.,,jdufresne,None,2020-05-27T10:19:15Z,2020-06-04T09:18:26Z
12986,Changed some doc links to use intersphinx. ,,jdufresne,None,2020-05-27T10:01:08Z,2020-05-30T00:37:24Z
12985,Refs #31614 -- Added test for ordering by OrderBy() of combined queryset with not selected columns.,We missed this test in #12961.,felixxm,None,2020-05-27T04:12:43Z,2020-05-27T07:03:57Z
12984,Fixed #31630 -- Replaced introspection features with DatabaseFeatures.introspected_field_types.,https://code.djangoproject.com/ticket/31630,hramezani,None,2020-05-26T22:28:14Z,2020-06-04T08:33:38Z
12983,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,"[Ticket #28694](https://code.djangoproject.com/ticket/28694)
Previous work on this ticket at #8733

I've added an additional test for the documented behaviour of removing duplicate dashes and spaces betweeen words. I've left it here as a separate commit - happy to raise as a separate PR if you would prefer. 

I was a little unsure if to add to the release notes. I went on the side of caution as I figgured it's eaiser to delete something. 😄 ",smithdc1,None,2020-05-26T22:02:40Z,2020-06-03T19:41:45Z
12982,Refs #21171 -- Made Collector.delete() rollback in the correct database.,Noticed here https://github.com/django/django/pull/10448/files#r430711757,charettes,None,2020-05-26T21:22:17Z,2020-05-29T14:34:37Z
12981,Fixed #31628 -- Updated Windows install guide to recommend venv.,[Ticket #31628](https://code.djangoproject.com/ticket/31628),smithdc1,None,2020-05-26T21:15:50Z,2020-05-27T09:43:31Z
12980,Minor oversight/error?,"I think that this is just a minor oversight, which I have adjusted?",thmsrmbld,None,2020-05-26T20:12:08Z,2020-05-26T20:41:30Z
12979,Fixed #6933 -- Added support for searching against quoted phrases in ModelAdmin.search_fields.,With phrases surrounded with double quotes,alixleger,None,2020-05-26T15:55:12Z,2020-06-18T19:38:52Z
12978,"Refs #31040, Refs #31224 -- Prevented cycles in exceptions chain.","Exception handling was raising an exception that was creating a cycle in the exception chain (by re-raising an exception that was already being handled).

Thanks Chris Jerdonek for detailed analysis.

See also https://bugs.python.org/issue40696.",felixxm,None,2020-05-26T06:21:15Z,2020-05-28T11:05:28Z
12977,Fixed some formatting issues in docs.,,felixxm,None,2020-05-25T19:03:05Z,2020-05-27T07:07:06Z
12976,Preferred usage of among/while to amongst/whilst.,"Inspired by @adamchainz's tweet earlier today here is a PR which shows 'while' and 'among' being prefered in the Django docs. 

Wikipeida explains it in more detail but in short:

- In American English, whilst is considered to be pretentious or archaic
- Publications on both sides of the Atlantic disapprove of whilst in their style guides (incl. BBC, Guardian)

https://en.wikipedia.org/wiki/While#Whilst",smithdc1,None,2020-05-25T17:20:50Z,2020-06-03T19:41:54Z
12975,Phrase search in admin -- Added condition to change search behavior,Improved admin search behavior to be able to use a phrase surrounded with double quotes to make field searches.,alixleger,None,2020-05-25T16:19:01Z,2020-05-26T10:02:12Z
12974,Refs #23097 -- Used new octal format in FILE_UPLOAD_PERMISSIONS docs.,``0644`` is a syntax error on Python 3. Octal numbers must be specified with the ``0o`` prefix.,rfleschenberg,None,2020-05-25T15:36:10Z,2020-05-25T19:04:17Z
12973,Fixed #31616 -- Added hint about middleware ordering for SessionMiddleware admin check.,Fixes https://code.djangoproject.com/ticket/31616,hramezani,None,2020-05-25T14:42:33Z,2020-05-25T20:16:33Z
12972,Used not installed extension in CreateExtension() tests.,`uuid-ossp` was already installed.,felixxm,None,2020-05-25T09:28:06Z,2020-05-26T11:17:10Z
12971,Fixed #27719 -- Added QuerySet.alias() to allow creating reusable aliases.,"Added queryset.alias() method to allow creating an alias for the expression
without including the expression in the select clause and later reuse.
Using .alias() will produce the same side effects (joins and group by) as .annotate() immediately,
to avoid different query results depending on the alias used later.
The allowed use of an alias is limited intentionally to methods that can use the expression
without including it into the select clause.",alextatarinov,None,2020-05-25T07:56:14Z,2020-07-31T20:03:54Z
12970,Updated how to install Django on windows docs. ,"I bumped version numbers of python, removed legacy versions of windows (Windows 10 is only version with mainstream support) and removed link to install pip as it's been included since Python 3.4.",smithdc1,None,2020-05-25T06:31:38Z,2020-07-27T19:53:33Z
12969,Add asgi support to runserver,"This code adds support to run an asgi daphne based development server while leaving the default wsgi.

`./manage.py runserver --asgi`

https://code.djangoproject.com/ticket/31626",massover,None,2020-05-24T19:13:32Z,2020-05-26T10:49:15Z
12968,Removed instructions for unsupported Apache versions.,,claudep,None,2020-05-24T19:12:25Z,2020-05-25T06:58:00Z
12967,Refs 31617: Improved admin contrast,As I know changing brand colors is always controversial I tried to reuse existing colors where possible.,xi,None,2020-05-24T17:24:39Z,2020-05-25T04:21:55Z
12966,Fixed #29078 -- Made serializers respect prefetch_related() for m2m fields.,,claudep,None,2020-05-24T15:42:03Z,2020-05-25T10:31:39Z
12965,Fixed #31624 -- Avoided subquery usage on QuerySet.all().delete().,"This addresses a regression introduced by 7acef095d73322.

Refs #23576.

Thanks Adam Johnson for the report.",charettes,None,2020-05-24T13:20:03Z,2020-08-28T03:05:52Z
12964,Made modwsgi documentation more copy-paste friendly,"This idiom, used by the [official documentation](https://modwsgi.readthedocs.io/en/develop/user-guides/quick-configuration-guide.html), provides backwards compatibility without the need of manual editing.",lquenti,None,2020-05-24T10:50:34Z,2020-05-24T19:12:56Z
12962,Made minor edits to TemplateResponseMixin.get_template_names() docs.,This PR rewords `TemplateResponseMixin.get_template_names()` docs to avoid some redundancy.,sanjioh,None,2020-05-23T18:31:01Z,2020-06-01T08:49:43Z
12961,Fixed #31614 -- Fixed aliases ordering by OrderBy() expressions of combined queryset.,"added proper handling of column aliases in F objects used in a order_by,
in a combined query

https://code.djangoproject.com/ticket/31614",Lotram,None,2020-05-23T15:19:37Z,2020-05-26T21:44:42Z
12960,Refs #31534 -- Improved django.conf.urls.url() warning message with stacklevel=2.,"Use stacklevel=2 to show the calling site.

For example, changes:

    .../django/conf/urls/__init__.py:16: RemovedInDjango40Warning:
    django.conf.urls.url() is deprecated in favor of
    django.urls.re_path().

To:

    .../django-debug-toolbar/debug_toolbar/panels/sql/panel.py:131:
    RemovedInDjango40Warning: django.conf.urls.url() is deprecated in
    favor of django.urls.re_path().

The second version identifies the line containing django.conf.urls.url()
that must be fixed.",jdufresne,None,2020-05-23T15:16:54Z,2020-05-23T16:24:41Z
12959,Improved HTTPSitemapTests.test_localized_priority.,"Override setting instead of skipping.
Use translation override context manager to avoid language leaking.",claudep,None,2020-05-23T13:06:38Z,2020-05-25T07:39:05Z
12958,Refs #30400 -- Improved typography in admin_doc/missing_docutils.html.,,jdufresne,None,2020-05-22T23:58:18Z,2020-05-23T16:50:20Z
12957,Fixed #30134 -- Ensured unlocalized numbers are string representation in templates.,,claudep,None,2020-05-22T20:40:19Z,2020-06-12T15:45:00Z
12956,Refs #30578 -- Made SelectDateWidget.format_value() independent of USE_L10N.,,claudep,None,2020-05-22T19:04:28Z,2020-07-10T15:19:56Z
12955,Made intword/intcomma template filters independent of USE_L10N.,,claudep,None,2020-05-22T18:42:00Z,2020-06-01T18:32:27Z
12954,Refs #5691 -- Made cache keys independent of USE_L10N.,This mostly reverts af1893c4ff8fdbf227a43a559d90bb1c1238b01a.,claudep,None,2020-05-22T18:06:03Z,2020-06-22T09:39:34Z
12953,Fixed #31530 -- Added system checks for invalid model field names in CheckConstraint.check and UniqueConstraint.condition.,https://code.djangoproject.com/ticket/31530,hramezani,None,2020-05-22T13:30:18Z,2020-07-06T08:09:08Z
12952,Fixed #31615 -- Made migrations skip extension operations if not needed.,This is another try for #12950 which i messed up gitwise.  sorry about that.,minusf,None,2020-05-22T09:42:22Z,2020-05-27T09:14:17Z
12951,Fixed #31606 -- Allowed using condition with lookups in When() expression.,"Modify When to allow for a condition argument mixed with condition keywords.

Add test for using Exists in When, also add test for using condition argument with condition keyword.",rheard,None,2020-05-21T23:59:07Z,2020-05-27T05:56:42Z
12950,CREATE EXTENSION always requires superuser.,"For non-superuser cases skip the command enirely if the extension is
already installed.",minusf,None,2020-05-21T22:14:03Z,2020-05-22T09:43:30Z
12949,Doc'd release step for new classifiers on PyPI.,,felixxm,None,2020-05-21T18:43:42Z,2020-05-21T20:34:26Z
12948,Added CockroachDB to list of third-party DB backends.,"I expected to find this here when looking for it today, so... ",carltongibson,None,2020-05-21T08:44:49Z,2020-05-21T18:54:48Z
12947,Fixed #31608 -- Doc'd that form ISO 8601 datetime parsing retains tzinfo when USE_TZ is False.,Added release note for [ticket 31608](https://code.djangoproject.com/ticket/31608),hramezani,None,2020-05-20T22:09:56Z,2020-05-21T20:10:48Z
12946,Fixed #27445 -- RadioSelect widget does not work for NullBooleanField.,"[Ticket #27445](https://code.djangoproject.com/ticket/27445)

There was discussion recently on the [mailing list](https://groups.google.com/forum/m/#!searchin/django-developers/nullbooleanfield/django-developers/pSvFXcUUkRs) and it was decided that `forms.NullBooleanField` should be kept. I therefore think we can progress to fix this ticket. I've investiaged this so far but there are a few options and so I am looking for some guidance. 

The issue is that `NullBooleanField` doesn't set `choices` -  it relies on the `choices` within the `NullBooleanSelect` widget. To allow other widgets (e.g. Radio) we should set choices on the field and the widget. The PR that I've opened does this and therefore allows other widgets to be used. 

However... Should we allow choices descriptions to be customised? Ticket [#23681](https://code.djangoproject.com/ticket/23681) discusses this and there is even a suggestion to deprecate `NullBooleanSelect`. 

The tricky bit with changing names on `NullBooleanField` is `RadioSelect` / `Select` needs ('', 'True', 'False') as the first items in the choice tuples, but `NullBooleanSelect()` needs ('unknown', 'true', 'false'). Hence I can see why just using a select was sugested work, but I don't know about deprecating the current widget 😬 

In summary I think this patch solves part of the use case whilst maintaining backward compatibility. I think other options may be technically better but appear to change existing functionality.

Appreciate thoughts and guidance.

(p.s. The last example on ticket #23681 shows passing names into a `model.NullBooleanField`. Whilst this field is deprecated the same works for `model.BooleanField`. However, this gives a `TypedChoiceField`, not a `NullBooleanField` with updated names)",smithdc1,None,2020-05-20T21:40:01Z,2020-10-08T09:31:25Z
12945,Fixed #11157 -- Stopped removing stop words in admin's prepopulated_fields.,"This patch will close ticket #11157: [Allow stopwords in admin javascript URLify](https://code.djangoproject.com/ticket/11157).

With: @chosak

",Scotchester,None,2020-05-20T16:49:46Z,2020-05-27T12:49:55Z
12944,Fixed #30457 -- Added TestCase.captureOnCommitCallbacks(),"[Ticket](https://code.djangoproject.com/ticket/30457)

I've also released this code as a package: https://github.com/adamchainz/django-capture-on-commit-callbacks ",adamchainz,None,2020-05-20T10:26:52Z,2020-07-15T08:46:35Z
12943,Refs #31607 -- Added release notes for a125da6a7c79b1d4c55677d0bed6f9b1d7d77353.,"I persuaded myself that it's a regression in Django 3.1 :facepalm:, but it's a regression in Django 3.0 and we need release notes.",felixxm,None,2020-05-19T21:01:02Z,2020-05-20T07:18:49Z
12942,Removed unused variable in test_datetimefield_clean_input_formats.,,smithdc1,None,2020-05-19T20:23:57Z,2020-05-20T04:02:29Z
12941,Added notes related to security pre-notify list requests,Documented the existing policy of not accepting security audit/scanning entities to the pre-notification list. Also added a note to help emphasize that people really need to read the instructions if they want to get approved for the list.,manfre,None,2020-05-19T19:20:29Z,2020-05-21T08:30:15Z
12940,Added Kyrgyz language.,,claudep,None,2020-05-19T18:25:48Z,2020-05-20T11:32:50Z
12939,"Reverted ""Refs #23919 -- Removed obsolete __init__.py files in management command directories."".","Management commands still work if the directories `management` and `commands` do not contain `__init__.py` files, but I find it a bit odd that the docs don't tell the user to create them. 

According to https://docs.python.org/3/tutorial/modules.html#packages:

> The __init__.py files are required to make Python treat directories containing the file as packages.

By not creating the `__init__.py` files, the user is creating implicit namespace packages according to https://www.python.org/dev/peps/pep-0420/. I think this is not what we intend, and that we should keep the user on the normal path here.",rfleschenberg,None,2020-05-19T16:52:03Z,2020-06-01T08:57:07Z
12938,Fixed #31608 -- Made datetime naive in forms.DateTimeField when USE_TZ is False.,Fix for https://code.djangoproject.com/ticket/31608,hramezani,None,2020-05-19T13:16:28Z,2020-05-20T20:36:38Z
12937,Fixed #31610 - made easier to override RelatedFieldWidgetWrapper from admin,Fix for https://code.djangoproject.com/ticket/31610,xrmx,None,2020-05-19T12:18:20Z,2020-05-25T07:30:54Z
12936,Fixed #31607 -- Fixed evaluated Subquery equality.,"ticket-31607 

Regression in 691def10a0197d83d2d108bd9043b0916d0f09b4.",felixxm,None,2020-05-19T10:33:47Z,2020-05-19T20:45:32Z
12935,"Fixed #31591 -- Clarified ""reverse"" lookup name in making queries docs.","Also https://github.com/django/django/commit/2b1ea4b3c2e32d0510a72bed4a67bec572a57442, adjusts examples to match the example models at the top. ",carltongibson,None,2020-05-19T08:55:43Z,2020-08-05T09:39:30Z
12934,"Fixed #31597, #31603 -- Corrected admin clear all filters link behavior.","ticket-31597
ticket-31603",felixxm,None,2020-05-19T07:42:42Z,2020-05-20T19:34:23Z
12932,Fixed #31578 -- Dropped support for MySQL 5.6.,ticket-31578,felixxm,None,2020-05-18T19:05:02Z,2020-05-19T08:56:43Z
12931,"Fixed #31603 -- Changed ""Clear all filters"" link to just removes filters.",Fixes https://code.djangoproject.com/ticket/31603,hramezani,None,2020-05-18T16:08:41Z,2020-05-19T07:43:23Z
12930,create djtest,This is a test contribution,DeveshKumar24,b'invalid',2020-05-18T07:54:12Z,2020-05-18T07:59:15Z
12929,"Fixed #31601 -- Fixed SearchHeadlineTests on PostgresSQL 9.6.18+, 10.13+, 11.8+, and 12.3+.","Ticket: https://code.djangoproject.com/ticket/31601#ticket

The current state of this PR will not make the test suite compatible on both <10.13 and >=10.13. I started it to demonstrate the error and open up a discussion for a fix.",hannseman,None,2020-05-17T21:22:05Z,2020-05-19T06:16:23Z
12927,Fixed #31577 -- Clarified docs about bounds of RangeFields.,[Ticket 31577](https://code.djangoproject.com/ticket/31577),xncbf,None,2020-05-17T08:01:59Z,2020-05-18T18:42:14Z
12925,"Used assertIs(…, True) in model_forms.tests.ValidationTest.",,jdufresne,None,2020-05-16T22:21:43Z,2020-05-23T16:53:31Z
12924,"Ticket 31597 - New ""Clear all filters"" shown always in raw_id_fields popup","Ticket https://code.djangoproject.com/ticket/31597

## raw_id_fields popup

The new feature (PR #12351 ) has 2 issues with `raw_id_fields`:

 1. the new link is shown when `_popup=1` is present in the URL query, regardless of any actual filters
 2. clicking on the link will preserve `_popup` query param (which is correct) but it will remove `_to_field` param, which should probably also be preserved

",frnhr,None,2020-05-16T20:06:33Z,2020-05-19T07:43:12Z
12923,Fixed #31596 -- Changed ForeignKey.validate() to use the base manager.,https://code.djangoproject.com/ticket/31596,jdufresne,None,2020-05-16T19:15:44Z,2020-07-01T14:06:41Z
12922,"Enabled ESLint's ""eqeqeq"" rule.",https://eslint.org/docs/rules/eqeqeq,jdufresne,None,2020-05-16T16:50:16Z,2020-05-23T16:52:55Z
12921,Refs #31034 -- Improved accessibility of admin navigation sidebar.,"Not sure if I need a ticket for this, let me know.

This fixes a couple accessibility issues I noticed with the sidebar:

- Changed the toggle div to a button so it can be tabbed to and clicked by keyboard users and gets picked up as a button on screen readers. Also added an aria-label so screen reader users know what it does.
- Ensures you can't tab through the nav links when the sidebar is closed.",knyghty,None,2020-05-16T12:21:14Z,2020-05-28T09:22:00Z
12920,Refs #12990 -- Added DatabaseFeatures.has_json_operators,CockroachDB also has them.,timgraham,None,2020-05-16T00:38:58Z,2020-05-18T10:29:34Z
12919,Updated docutils link to HTTPS and new location.,,jdufresne,None,2020-05-16T00:04:31Z,2020-05-23T16:52:41Z
12918,Added support for the Tajik language.,Thanks Sirius Sufiew for contributing that support.,claudep,None,2020-05-15T19:03:42Z,2020-06-14T16:10:20Z
12917,Fixed #31494 -- Preserved query strings when following HTTP 307/308 redirects in test client.,,lothemar,None,2020-05-15T17:59:20Z,2020-05-27T08:38:03Z
12916,Fixed #31590 -- Fixed ModelAdmin.date_hierarchy crash with an empty QuerySet.,https://code.djangoproject.com/ticket/31590,kjpc-tech,None,2020-05-14T23:40:23Z,2020-05-15T05:07:26Z
12915,Fixed #31594 -- Added ASGIStaticFilesHandler.get_response_async().,"This code comes from conversions on this [thread](https://forum.djangoproject.com/t/current-async-todos/1013/13) on the django forum. While trying to add asgi support to runserver, I noticed that the get_response_async method was missing. ",massover,None,2020-05-14T23:30:01Z,2020-06-08T21:02:53Z
12914,Fixed #31586 -- Small mistake in tutorial,https://code.djangoproject.com/ticket/31586,mikkac,None,2020-05-14T15:26:41Z,2020-05-15T06:39:30Z
12913,Fixed #31584 -- Fixed crash when chaining values()/values_list() after Exists() annotation and aggregation on Oracle.,"Oracle requires the `EXISTS` expression to be wrapped in a `CASE WHEN` in the `GROUP BY` clause.

Regression in efa1908f662c19038a944129c81462485c4a9fe8.

ticket-31584",felixxm,None,2020-05-14T11:07:54Z,2020-06-04T12:53:43Z
12912,Fixed #31568 -- Fixed alias reference when aggregating over multiple subqueries.,"691def10a019 made all Subquery instances equal to each other which broke
aggregation subquery pushdown which relied on object equality to determine
which alias it should select.

`Subquery.__eq__` should be fixed in an another commit but `Query.rewrite_col` should have used object identity from the start.

Refs #30727, #30188.

Thanks Makina Corpus for the report.",charettes,None,2020-05-14T04:21:52Z,2020-05-14T12:04:16Z
12911,Fixed #31566 -- Fixed aliases crash when chaining values()/values_list() after annotate() with aggregations and subqueries.,"Subquery annotation references must be resolved if they are excluded from the GROUP BY clause by a following .values() call.

Thanks Makina Corpus for the report.",charettes,None,2020-05-14T03:43:26Z,2020-05-14T11:51:19Z
12910,Fixed #31546 -- Allowed specifying list of tags in Command.requires_system_checks.,https://code.djangoproject.com/ticket/31546,hramezani,None,2020-05-13T22:02:49Z,2020-05-21T11:03:02Z
12909,Fixed #31579 -- Dropped support for PostgreSQL 9.5 and PostGIS 2.2.,ticket-31579,felixxm,None,2020-05-13T18:58:35Z,2020-05-14T04:33:05Z
12908,"Fixed #31580 -- Added error messages on distinct() following union(), intersection(), and difference().",https://code.djangoproject.com/ticket/31580,hramezani,None,2020-05-13T11:36:48Z,2020-05-13T12:44:20Z
12907,Fixed #31576 -- Fixed selenium tests with headless mode.,"Horizontal scrollbar doesn't appear with the headless mode on small windows, that's why `window.scrollTo()` is not an option for these tests. We checked this multiple times and all works as expected on small windows without a selenium.

Tests changed after adding a navigation sidebar in 46fe506.

ticket-31576",felixxm,None,2020-05-13T10:51:55Z,2020-05-13T13:16:35Z
12906,"Fixed #31575, Refs #31034 -- Documented admin requires django.template.context_processors.request.","Required since d24ba1be7a53a113d19e2860c03aff9922efec24.

https://code.djangoproject.com/ticket/31575",jdufresne,None,2020-05-13T02:44:41Z,2020-05-14T10:34:08Z
12905,Fixed numbered list in admin overview docs.,"https://docs.djangoproject.com/en/dev/ref/contrib/admin/

![django-admin](https://user-images.githubusercontent.com/347634/81763439-1957cd80-9484-11ea-8919-0ef9941dc339.png)

There is a more complete version of this in #11546. I think reconsidering the original PR would make these kind of oversights less likely to happen.",jdufresne,None,2020-05-13T02:12:02Z,2020-05-17T12:35:48Z
12904,Add JSONField.from_db_value method only if necessary.,"I see that you are adding from_db_value, even if you are not using a decoder. This reduces performance. To improve performance, add from_db_value only if necessary.",alosultan,None,2020-05-12T12:17:54Z,2020-05-12T12:57:27Z
12903,Stable/3.0.x,"`(env) C:\Users\ZAQ\Desktop\spoton\geodjango\nearbyshops>manage.py runserver
Watching for file changes with StatReloader
Exception in thread django-main-thread:
Traceback (most recent call last):
  File ""C:\Users\ZAQ\AppData\Local\Programs\Python\Python38\lib\threading.py"", line 932, in _bootstrap_inner
    self.run()
  File ""C:\Users\ZAQ\AppData\Local\Programs\Python\Python38\lib\threading.py"", line 870, in run
    self._target(*self._args, **self._kwargs)
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\utils\autoreload.py"", line 53, in wrapper
    fn(*args, **kwargs)
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\core\management\commands\runserver.py"", line 109, in inner_run
    autoreload.raise_last_exception()
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\utils\autoreload.py"", line 76, in raise_last_exception
    raise _exception[1]
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\core\management\__init__.py"", line 357, in execute
    autoreload.check_errors(django.setup)()
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\utils\autoreload.py"", line 53, in wrapper
    fn(*args, **kwargs)
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\__init__.py"", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\apps\registry.py"", line 114, in populate
    app_config.import_models()
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\apps\config.py"", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File ""C:\Users\ZAQ\AppData\Local\Programs\Python\Python38\lib\importlib\__init__.py"", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File ""<frozen importlib._bootstrap>"", line 1014, in _gcd_import
  File ""<frozen importlib._bootstrap>"", line 991, in _find_and_load
  File ""<frozen importlib._bootstrap>"", line 975, in _find_and_load_unlocked
  File ""<frozen importlib._bootstrap>"", line 671, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 783, in exec_module
  File ""<frozen importlib._bootstrap>"", line 219, in _call_with_frames_removed
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\auth\models.py"", line 2, in <module>
    from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\auth\base_user.py"", line 47, in <module>
    class AbstractBaseUser(models.Model):
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\db\models\base.py"", line 121, in __new__
    new_class.add_to_class('_meta', Options(meta, app_label))
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\db\models\base.py"", line 325, in add_to_class
    value.contribute_to_class(cls, name)
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\db\models\options.py"", line 208, in contribute_to_class
    self.db_table = truncate_name(self.db_table, connection.ops.max_name_length())
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\db\__init__.py"", line 28, in __getattr__
    return getattr(connections[DEFAULT_DB_ALIAS], item)
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\db\utils.py"", line 207, in __getitem__
    backend = load_backend(db['ENGINE'])
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\db\utils.py"", line 111, in load_backend
    return import_module('%s.base' % backend_name)
  File ""C:\Users\ZAQ\AppData\Local\Programs\Python\Python38\lib\importlib\__init__.py"", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\db\backends\postgis\base.py"", line 6, in <module>
    from .features import DatabaseFeatures
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\db\backends\postgis\features.py"", line 1, in <module>
    from django.contrib.gis.db.backends.base.features import BaseSpatialFeatures
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\db\backends\base\features.py"", line 3, in <module>
    from django.contrib.gis.db.models import aggregates
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\db\models\__init__.py"", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\db\models\functions.py"", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\db\models\fields.py"", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\forms\__init__.py"", line 3, in <module>
    from .fields import (  # NOQA
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\forms\fields.py"", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\gdal\__init__.py"", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\gdal\datasource.py"", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\gdal\driver.py"", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\gdal\prototypes\ds.py"", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File ""C:\Users\ZAQ\Desktop\spoton\env\lib\site-packages\django\contrib\gis\gdal\libgdal.py"", line 39, in <module>
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried ""gdal204"", ""gdal203"", ""gdal202"", ""gdal201"", ""gdal20""). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.`### 

how to resolve this issue? I have tried multiple things as mentioned in the Django issue but couldn't find anything solvable. 
currently using Django 3.0.6",aimanhafeez04,None,2020-05-12T11:52:26Z,2020-05-12T12:00:18Z
12902,Replace unused variables with `_` in admin_scripts tests.,"@felixxm,  Feel free to close the PR if it doesn't add any value to the codebase.",hramezani,None,2020-05-12T11:09:08Z,2020-05-13T06:47:56Z
12901,Renamed PROJ.4 to PROJ.,,claudep,None,2020-05-12T09:07:24Z,2020-05-13T19:16:04Z
12900,Refs #30678 -- Added support for GDAL 3.1.,"https://code.djangoproject.com/ticket/30678

OSRSetAxisMappingStrategy() really returns void, so no errcheck is needed.
Previously set errcheck was raising positive false exceptions on GDAL 3.1.

Default behavior of `void_output` is misleading and probably should be reworked.",sir-sigurd,None,2020-05-12T08:51:35Z,2020-05-12T13:22:37Z
12899,Final changes before branching stable/3.1.x.,,felixxm,None,2020-05-12T05:25:42Z,2020-05-12T09:26:41Z
12898,"Fixed E128, E741 flake8 warnings.",,felixxm,None,2020-05-11T21:29:45Z,2020-05-12T06:52:30Z
12897,Updated JS admin translation catalog,,claudep,None,2020-05-11T19:41:04Z,2020-05-12T06:31:56Z
12896,Updated source translation catalogs.,,claudep,None,2020-05-11T19:08:19Z,2020-05-11T19:37:38Z
12895,Update forms.py,Updated UserChangeForm and UserCreationForm models from User to UserModel,dinceraslancom,None,2020-05-11T15:03:37Z,2020-05-11T15:49:31Z
12894,Removed trailing comma from a function definition,,tapiorantala,None,2020-05-11T07:41:32Z,2020-05-11T07:51:00Z
12893,Fixed #28342 -- Catch exceptions when using pylibmc cache backend,"Resolves https://code.djangoproject.com/ticket/28342 by catching exceptions from pylibmc and logging them rather than propagating them to the caller. This behaviour is consistent with the `MemcachedCache` backend, as described in the issue. Note that this pull request is intended to supersede the previous (stale) pull request for this issue: #8681.",OldSneerJaw,None,2020-05-10T23:31:39Z,2020-07-02T09:54:56Z
12892,Refs #30116 -- Simplified regex match group access with Match.__getitem__().,"The method has been available since Python 3.6. The shorter syntax is
also marginally faster:

    $ python -m timeit -s 'import re; m = re.match(r""a(\d+)"", ""a50"")' 'm.group()'
    5000000 loops, best of 5: 57.8 nsec per loop
    $ python -m timeit -s 'import re; m = re.match(r""a(\d+)"", ""a50"")' 'm[0]'
    10000000 loops, best of 5: 37.3 nsec per loop

    $ python3 -m timeit -s 'import re; m = re.match(r""a(\d+)"", ""a50"")' 'm.group(1)'
    5000000 loops, best of 5: 90.9 nsec per loop
    $ python3 -m timeit -s 'import re; m = re.match(r""a(\d+)"", ""a50"")' 'm[1]'
    5000000 loops, best of 5: 56.7 nsec per loop

https://docs.python.org/3/library/re.html#re.Match.__getitem__",jdufresne,None,2020-05-10T20:45:36Z,2020-05-17T12:35:58Z
12891,Removed unused admin:jsi18n <script> element from change_password.html.,"The view does not contain any other JavaScript and therefore does not
have any user facing JavaScript strings to translate. Avoid the HTTP
request.",jdufresne,None,2020-05-10T19:08:47Z,2020-05-28T14:06:37Z
12890,Disabled management commands output with verbosity 0 in various tests.,"Found a couple more after c86201b6ed4f8256b0a0520c08aa674f623d4127, a8d175c297ab4d05dda3e957e4fc64b261148904 and c86201b6ed4f8256b0a0520c08aa674f623d4127.",francoisfreitag,None,2020-05-10T18:54:31Z,2020-05-13T07:12:43Z
12889,Fixed #31556 -- Remove useless list comprehension,The `join` string method accepts an iterator.,yahya-abou-imran,None,2020-05-10T14:01:29Z,2020-05-10T18:48:57Z
12888,Removed unused member Downcoder.chars.,"Unused -- other than as a local variable -- since its introduction in
953badbea5a04159adbfa970f5805c0232b6a401",jdufresne,None,2020-05-10T00:36:32Z,2020-05-13T20:21:09Z
12887,Updated logging calls to use arguments instead of string interpolation.,"Variable data should be logged separately, the logger does the
interpolation. Follows established pattern and best practices from
https://docs.python.org/3/howto/logging.html#logging-variable-data",francoisfreitag,None,2020-05-09T18:34:51Z,2020-05-13T07:12:19Z
12886,Fixed fixtures loading isolation in tests.,"fixture1.json and fixture2.json exist in both `fixtures` and
`fixtures_model_package`. Both apps are listed in `INSTALLED_APPS`. The
`loaddata` management command loads from installed apps, thus loads both
fixtures when a test runs loaddata with any of these fixtures.",francoisfreitag,None,2020-05-09T18:02:23Z,2020-05-15T09:11:54Z
12885,Removed unused fixture2.xml from fixtures_model_package tests.,,francoisfreitag,None,2020-05-09T17:35:52Z,2020-05-13T07:13:03Z
12884,Simplified GDAL version parsing.,,sir-sigurd,None,2020-05-09T17:22:21Z,2020-05-11T09:58:02Z
12883,Removed redundant assertions in fixtures tests.,"The `assertQuerysetEqual` assertion fails when the Queryset contains a
different number of items than the list it is compared to.",francoisfreitag,None,2020-05-09T17:15:45Z,2020-05-13T11:07:16Z
12881,Support for GDAL 3,,jfbeltran97,None,2020-05-08T18:08:34Z,2020-05-08T18:16:08Z
12880,support for GDAL 3,Added support for  GDAL 3 by exposing OSRSetAxisMappingStrategy,jfbeltran97,None,2020-05-08T17:31:17Z,2020-05-08T17:36:30Z
12879,Fixed #31552 -- Added support for LZMA and XZ fixtures to loaddata.,https://code.djangoproject.com/ticket/31552,pauloxnet,None,2020-05-08T17:03:08Z,2020-05-15T10:12:36Z
12878,Fixed #30678 -- Added support for GDAL 3.,ticket-30678,claudep,None,2020-05-08T13:32:35Z,2020-08-04T10:19:45Z
12877,Fixed #31548 -- Fixed URLValidator crash on non-strings.,,yash-saini275,None,2020-05-08T09:07:26Z,2020-05-09T05:35:01Z
12876,Completed lorem tag test coverage.,Completes test coverage for the [`lorem`](https://djangoci.com/view/%C2%ADCoverage/job/django-coverage/HTML_20Coverage_20Report/_home_jenkins_workspace_django-coverage_django_template_defaulttags_py.html#t1085) tag and [`loremnode`](https://djangoci.com/view/%C2%ADCoverage/job/django-coverage/HTML_20Coverage_20Report/_home_jenkins_workspace_django-coverage_django_template_defaulttags_py.html#t315) ,smithdc1,None,2020-05-08T06:46:18Z,2020-05-17T15:34:29Z
12875,Changed selected attribute to HTML5 boolean syntax in SelectBox.js.,"Per MDN, HTMLOptionElement.selected is a Boolean attribute.

https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement#Properties,",jdufresne,None,2020-05-08T03:41:00Z,2020-05-08T04:13:32Z
12874,Several updates for Macedonian language in mk/LC_MESSAGES/django.po file,,drangovski,None,2020-05-07T22:38:18Z,2020-05-08T03:55:02Z
12873,Fixed tests isolation in logging_tests.,"Running the following command

```console
$ ./runtests.py logging_tests.tests.SetupConfigureLogging \
    logging_tests.tests.SecurityLoggerTest --parallel=1
```

results in output:

```
Testing against Django installed in '…/django'
System check identified no issues (0 silenced).
..Bad Request: /suspicious/
.Bad Request: /suspicious_spec/
.
```

The `SetupConfigureLogging` test case does not restore the logging config after its execution. It leaves the logger `django.request` with an empty handlers array.

From `logging.Logger.callHandlers()` docstring:

> If no handler was found, output a one-off error message to sys.stderr.

That causes the string “Bad Request: /suspicious/” to be logged to `stderr` by `django.core.handlers.BaseHandler.get_response()`, because the response status code is >= 400.

---

Removes the last use of `LOGGING_CONFIG`, introduced in 43503b093a35ca4707c16d865f10929960bfa0b8 for ticket #16288, originally to test a backward compatibility shim.",francoisfreitag,None,2020-05-07T20:19:29Z,2020-05-08T09:15:17Z
12872,Refs #31541 -- Updated Redirect.new_path.help_text.,Add the content according to the ticket 31541,yash-saini275,None,2020-05-07T13:44:52Z,2020-06-23T18:21:33Z
12871,Added tests for loaddata with gzip/bzip2 compressed fixtures.,"The `loaddata` command was missing explicit tests of with gzip and bzip2 compressed fixtures.

This PR:
- add a bzip2-compressed fixture created from the uncompressed version
- add new tests for loading gzip and bzip2 compressed fixtures",pauloxnet,None,2020-05-07T12:46:15Z,2020-05-08T07:03:58Z
12870,Enabled GitHub security policy.,"As per: https://help.github.com/en/github/managing-security-vulnerabilities/adding-a-security-policy-to-your-repository

The ""Security"" tab has become more prominent with the [announcements from Satellite](https://github.blog/2020-05-06-new-from-satellite-2020-github-codespaces-github-discussions-securing-code-in-private-repositories-and-more/) yesterday.",adamchainz,None,2020-05-07T10:01:35Z,2020-05-07T15:42:34Z
12869,Fixed #31528 -- Made collectstatic management command run staticfiles checks.,https://code.djangoproject.com/ticket/31528,hramezani,None,2020-05-06T20:31:29Z,2020-05-08T17:58:11Z
12868,Fixed #31509 -- Made DiscoverRunner enable faulthandler by default.,I mention some issues with this here: https://code.djangoproject.com/ticket/31509#comment:5,ovkulkarni,None,2020-05-06T17:56:16Z,2020-07-10T17:28:53Z
12866,"Fixed #31542 -- Simplified admin JavaScript with ""for … of"" statements.",https://code.djangoproject.com/ticket/31542,jdufresne,None,2020-05-06T00:55:22Z,2020-05-07T16:53:07Z
12865,Simplified Widget.get_context() a bit.,,jdufresne,None,2020-05-05T23:46:58Z,2020-05-17T12:36:26Z
12864,Fixed #31536 -- Fixed rendering of disabled AdminFileWidget and ClearableFileInput.,…leField is disabled,cpina,None,2020-05-05T19:06:44Z,2020-06-01T21:02:48Z
12863,Added release notes URL to packaging metadata.,Background info at https://github.com/pypa/warehouse/pull/7882,scop,None,2020-05-05T15:06:11Z,2020-05-06T16:23:55Z
12862,user.get_abbreviated_name(),"I was working on something that needed to have abbreviated names instead of getting full_names. I think most of people would like to have this feature built in into django. Would love to see the comments/feedback.

```
>>>user.first_name = ""John""
>>>user.last_name = ""Doe""
user.save()

>>>user.get_abbreviated_name() gives you
""John D.""
```",rahulkp220,None,2020-05-05T15:03:55Z,2020-05-05T21:23:07Z
12861,Fixed #31495 - Corrected note about admin i18n in tutorial.,ticket-31495,ovkulkarni,None,2020-05-05T14:06:50Z,2020-05-06T14:19:07Z
12860,Fixed #31515 -- Made ASGIHandler dispatch lifecycle signals with thread sensitive.,ticket-31515,carltongibson,None,2020-05-05T10:00:16Z,2020-05-06T07:42:09Z
12859,"Fixed a/an typos in ""SQL"" usage.","As pointed out by @laymonage in #12825, we have a [style guideline](https://docs.djangoproject.com/en/dev/internals/contributing/writing-documentation/#commonly-used-terms) for this.",adamchainz,None,2020-05-05T09:45:45Z,2020-05-06T09:30:12Z
12858,Fixed #31538 -- Fixed Meta.ordering validation lookups that are not transforms.,ticket-31538,felixxm,None,2020-05-05T04:49:02Z,2020-05-05T07:08:33Z
12857,Refs #28622 -- Corrected PASSWORD_RESET_TIMEOUT/PASSWORD_RESET_TIMEOUT_DAYS docs.,"In the 3.1 release notes, the description for the new PASSWORD_RESET_TIMEOUT setting describes it as the minimum number of seconds a reset link is valid for, but it's really the _maximum_ number of seconds.",ChrisBurch,None,2020-05-05T04:44:19Z,2020-05-05T07:50:38Z
12856,Fixed #31410 -- Added system checks for invalid model field names in UniqueConstraint.,https://code.djangoproject.com/ticket/31410,hramezani,None,2020-05-04T21:29:23Z,2020-05-20T10:24:33Z
12855,Fixed #31534 -- Deprecated django.conf.urls.url().,[Ticket](https://code.djangoproject.com/ticket/31534),smithdc1,None,2020-05-04T19:25:37Z,2020-07-27T19:52:28Z
12854,Bootstrapped Django 3.2.,(to be merged after the stable/3.2.x branch is created in following Django 3.1 alpha),felixxm,None,2020-05-04T10:50:18Z,2020-05-13T07:07:55Z
12853,Corrected opts argument of colorize in TermColorTests.test_colorize_empty_text().,"From the code below we can clearly see that `opts` is supposed to be a tuple.

https://github.com/django/django/blob/8f10ceaa907f3f608494f782f65070d0bb8b9587/django/utils/termcolors.py#L37  

The check below still works if `opts` is a string, so this has been testing the right part of the code all this time (a happy little accident).

https://github.com/django/django/blob/8f10ceaa907f3f608494f782f65070d0bb8b9587/django/utils/termcolors.py#L53",RasmusWL,None,2020-05-04T07:53:50Z,2020-05-05T09:31:16Z
12851,Fixed #25236 -- Deprecated {% ifequal %} and {% ifnotequal %} template tags.,"<s>https://code.djangoproject.com/ticket/31532</s>
https://code.djangoproject.com/ticket/25236",jdufresne,None,2020-05-03T14:57:24Z,2020-05-23T16:50:59Z
12850,Made test_once a keyword argument in template_tests.utils.setup().,"Replaces the `kwargs.get(...)` pattern. Helps avoid typos by providing a
better error message in case of misuse.",jdufresne,None,2020-05-03T14:23:26Z,2020-05-23T16:51:39Z
12848,Doc'd country part of locale name with more than 2 characters.,"I don't think the comments in https://github.com/django/django/blob/e0998a460ac15464bcdb048ebc52eae0bb1cbd38/django/utils/translation/__init__.py#L273-L284 is documented anywhere, so I add it in the locale name section.",gqqnbig,None,2020-05-02T21:49:25Z,2020-05-04T19:46:38Z
12847,"Fixed the centering of the ""Log in"" button on admin login page.","Previously, the button's container had a padding of 9.4em which was
approximately center but not precisely. Now, the container uses 'align:
text-center' to let the browser center the button.",jdufresne,None,2020-05-02T21:40:42Z,2020-07-01T14:06:57Z
12846,Simplified label element CSS in admin login.css.,"Don't add horizontal padding as the label is always displayed on its own
line. This padding added no visual difference.

Move the 'display: block' property from responsive.css to base.css. The
label is already displayed on its own line in all viewports, so reduce
differences in rendering. Using block also allows the label to consume
the width of its container, creating a larger clickable area for a
slight a11y improvement.",jdufresne,None,2020-05-02T21:24:38Z,2020-07-01T14:06:55Z
12845,Removed unnecessary admin CSS.,"The ""object-tools"" container is never rendered as a descendant of
.form-row.

The ""golink"" CSS class is unused.

A `<label>` element has not been included in the login .submit-row since
5869afe32b9c252cacd327f18c58e38c36d1f530.

The ""help"" CSS class from login.css has been unused since
0e5faf225c5cd1acf2ab653c74f5b161470403b9.

The <label> color in login.css is already inherited from the `<body>`
element and so does not need to be re-specified.

The #content-main container already has the property 'width: 100%' from
base.css and so does not need to be re-specified in login.css.

The `<td>` and `<th>` font-family property is inherited from the <body>
element and so does not need to be re-specified.

The `<html>` element has the attribute dir which automatically sets
the text direction in the layout. Adding the direction CSS property was
necessary to support IE which does not support the dir attribute, but IE
is no longer supported, so drop the direction property.

The 'font-size: 1em' property re-specifies the same font size. It
creates no visual difference.

The 'font-size: 14px' property often re-specifies the inherited value.
Avoid re-specifying it.
",jdufresne,None,2020-05-02T21:15:24Z,2020-07-01T14:06:53Z
12843,Optimized collectstatic when verbosity is 0.,"Avoid the dict lookup and length computation when command is not run in
verbose mode.",francoisfreitag,None,2020-05-02T17:53:36Z,2020-05-02T20:08:05Z
12842,Removed invalid value from admin CSS.,"The keyword value 'none' is not a valid value for padding-bottom. Fixes
CSS warning in Firefox console:

    Error in parsing value for ‘padding-bottom’.  Declaration dropped.

https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom#Syntax",jdufresne,None,2020-05-02T17:37:51Z,2020-05-17T12:37:04Z
12841,Changed `'%s' % value` pattern to `str(value)`.,,pope1ni,None,2020-05-01T14:56:10Z,2020-05-04T08:08:04Z
12840,Removed unnecessary inner methods in CreatesuperuserManagementCommand…,"…TestCase.

Wrapping in an inner method is for mock_input.",francoisfreitag,None,2020-05-01T14:44:36Z,2020-05-01T18:51:45Z
12839,Fixed #31529 -- Added support for serialization of pathlib.Path/PurePath and os.PathLike in migrations.,ticket-31529,pope1ni,None,2020-05-01T14:40:58Z,2020-06-24T12:40:58Z
12838,"Refs #30573 -- Rephrased ""Of Course"" and ""Obvious(ly)"" in documentation and comments.","Following #11482, this phrase also implies the reader should already know or have realized what is being said.",adamchainz,None,2020-05-01T12:40:06Z,2020-05-06T09:30:14Z
12837,Fixed #29232 -- Added title option for admin filter when providing field name,"Previous work was done by @dsanders11 in https://github.com/django/django/pull/9793 and by @baldychristophe in https://github.com/django/django/pull/10788

Unfortunately, it seems that all the work on this ticket was already done, but it was never merged. So I thought I'd finish it. As requested in the last pull request, I rebased the branch on master and updated the release notes. I also added the title parameter to the EmptyFieldListFilter that was added meanwhile. I hope everything is up to date and fine now.",pdecol,None,2020-05-01T08:32:17Z,2020-06-25T10:47:31Z
12836,Updated admin's Select2 to 4.0.13.,,felixxm,None,2020-05-01T08:04:18Z,2020-05-05T09:30:07Z
12835,Completed test coverage for ExclusionConstraint.,Dropping exclusion constraints was untested.,felixxm,None,2020-05-01T07:39:09Z,2020-05-07T08:50:01Z
12834,Refs #31032 -- Removed obsolete CSS workaround for IE in openlayers template.,We don't support IE anymore.,felixxm,None,2020-05-01T05:24:34Z,2020-05-02T18:39:50Z
12833,Fixed #31522 -- Made admin's SelectBox preserve scroll position.,,TapanGujjar,None,2020-05-01T02:36:57Z,2020-07-01T19:59:51Z
12832,Refs #31032 -- Removed unnecessary vendor prefixes from admin CSS.,"The CSS properties have been standardized and are available in all
supported browsers.",jdufresne,None,2020-05-01T02:27:19Z,2020-05-02T12:50:46Z
12831,Removed unused CSS in admin.,,jdufresne,None,2020-05-01T01:46:58Z,2020-05-02T12:50:46Z
12830,Fixed #20347 -- Allowed customizing the maximum number of instantiated forms in formsets.,"[Ticket #20347](https://code.djangoproject.com/ticket/20347)

This follows on from #1593, I've updated the pull request based on the comments at the time and added release notes. 

Hopefully I've also added the original author as co-author correctly 🤞 ",smithdc1,None,2020-04-30T19:55:06Z,2020-06-05T19:04:26Z
12829,Refs #27778 -- Removed reference to ASCII usernames in django.contrib.auth.models.User docs.,"I was looking at [ticket #27778](https://code.djangoproject.com/ticket/27778) and begun looking for references to unicode in the docs. 

I found this reference to python 2 and a change made Django 1.10 (released 2009?), and wondered if it is still relavant? ",smithdc1,None,2020-04-30T19:13:43Z,2020-05-01T11:28:12Z
12828,Update array.py,"In ""to_python"" method of class SimpleArrayField use delimiter regex split more flexibly",psiisyapk,None,2020-04-30T15:42:50Z,2020-04-30T18:18:46Z
12827,Removed unnecessary parameters on call_command in some tests,,MyungSeKyo,None,2020-04-30T14:51:50Z,2020-05-01T05:15:34Z
12826,"Used :pep:, :mimetype:, and :envvar: roles in various docs.","Updated to use `:pep:`, `:mimetype:`, and `:envvar:` roles in more places.

- For `:mimetype:` I didn't change where the value in double backticks was wrapped in quotes.
- For `:envvar:` I added the `.. envvar::` directive as required where missing.

I've also updated `docs/internals/contributing/writing-documentation.txt` to mention use of these roles.",pope1ni,None,2020-04-30T10:42:34Z,2020-05-13T08:06:32Z
12825,Improved wording in Q() docs.,"Noticed with a student that this was quite complicated language, and didn't clearly point to the ""making complex queries"" guide.",adamchainz,None,2020-04-30T09:42:35Z,2020-05-06T09:30:17Z
12824,Removed CSS workarounds for IE7 in admin.,,jdufresne,None,2020-04-29T22:53:07Z,2020-05-02T12:50:47Z
12823,Removed unused __str__() methods in tests models.,Follow up to 6461583b6cc257d25880ef9a9fd7e2125ac53ce1.,felixxm,None,2020-04-29T21:09:01Z,2020-04-30T07:13:42Z
12822,Refs #27468 -- Made user sessions use SHA-256 algorithm.,ticket-27468,felixxm,None,2020-04-29T07:02:48Z,2020-04-29T14:45:22Z
12821,Fixed #31524 -- Removed minified static assets from the admin.,https://code.djangoproject.com/ticket/31524,jdufresne,None,2020-04-29T03:32:25Z,2020-05-14T14:15:08Z
12820,Fixed #31523 -- Removed jQuery dependency from actions.js.,https://code.djangoproject.com/ticket/31523,jdufresne,None,2020-04-29T00:39:35Z,2020-07-01T14:06:51Z
12819,Added Selenium test coverage for actions.js.,,jdufresne,None,2020-04-29T00:35:42Z,2020-05-17T12:38:14Z
12818,Fixed #31521 -- Skipped test_parsing_rfc850 test on 32-bit systems.,https://code.djangoproject.com/ticket/31521,hramezani,None,2020-04-28T21:17:10Z,2020-04-30T05:12:42Z
12817,Fixed #31520 -- Corrected ManifestStaticFilesStorage handling of missing files. ,Opened for testing,thenewguy,None,2020-04-28T18:38:57Z,2020-06-16T10:27:44Z
12816,Fixes ticket 31520,,thenewguy,None,2020-04-28T16:43:33Z,2020-04-29T06:45:29Z
12815,Fix missing space,,manelclos,None,2020-04-28T16:32:44Z,2020-04-28T17:19:10Z
12813,Doc'd send_email() behavior when from_email is None.,Just a hole I found in the documentation that would've helped me get to my solution faster.,AdrianDAlessandro,None,2020-04-28T10:46:06Z,2020-04-30T11:08:34Z
12812,Update russian translations: quotation mark herringbone and apostrophes,,crazyzubr,None,2020-04-28T07:03:44Z,2020-04-28T07:05:02Z
12811,Removed unreachable code in actions.js.,"This code has been unreachable since its introduction in
f109f36a06c362f3a2f698648a9cc3917abbfccd.

$.data() is never set on the elements, so the if statement is never
entered.",jdufresne,None,2020-04-27T23:52:55Z,2020-05-02T12:52:04Z
12810,Fixes issue 31520,,thenewguy,None,2020-04-27T21:54:08Z,2020-04-28T16:37:43Z
12809,Fixed #31356 -- Changed IRC links to the Freenode webchat.,https://code.djangoproject.com/ticket/31356,hramezani,None,2020-04-27T20:30:16Z,2020-04-29T18:29:50Z
12808,Stable/3.0.x Update some doc templates/CSS for generating beautiful offline docs,"The original offline django DOCs which generated by Sphinx is somehow ugly.
I've made some change to part of the template/css files.

Just follow the official guide to generate the offline doc as shown in:
https://docs.djangoproject.com/en/3.0/internals/contributing/writing-documentation/

After you have generated the doc files in _build directory. Unzip the package and replace them in:
Location_your_django_source_code/django-master/docs/_build/html/_static 

[update django doc templates.zip](https://github.com/django/django/files/4540452/update.django.doc.templates.zip)
",alasaga,None,2020-04-27T15:23:44Z,2020-04-27T15:25:52Z
12805,Fixed typo in docs/topics/i18n/translation.txt.,Thanks @durey for the report (https://github.com/django/djangoproject.com/issues/988).,felixxm,None,2020-04-27T07:27:09Z,2020-04-28T08:07:50Z
12804,Refs #30400 -- Improved typography of user facing strings in admin changelist.,,jdufresne,None,2020-04-27T03:21:28Z,2020-05-02T12:52:46Z
12803,Fixed #31517 -- Fixed HashedFilesMixin.hashed_name() if hash of the file is None.,… if file_hash returns None,campenr,None,2020-04-26T20:22:37Z,2020-04-28T06:45:59Z
12802,Update global_settings.py,Add Shona to languages,vttn,None,2020-04-26T20:20:02Z,2020-05-03T20:49:10Z
12801,Merge stdout.write() calls in squashmigrations.,,francoisfreitag,None,2020-04-26T18:03:26Z,2020-04-28T07:49:02Z
12800,Sorted conflicting migrations by names.,"The makemigrations command relies on the ordering of conflicted
migrations to generate the merge migration. Using deterministic order
increases reproducibility and facilitates testing.",francoisfreitag,None,2020-04-26T16:33:32Z,2020-07-10T10:54:35Z
12798,Removed unnecessary capturing/hiding of stdout/stderr in various tests.,,francoisfreitag,None,2020-04-25T20:21:40Z,2020-04-27T08:12:51Z
12797,Disabled management commands output with verbosity 0 in test_regression_22823_unmigrated_fk_to_migrated_model.,,francoisfreitag,None,2020-04-25T20:20:05Z,2020-04-27T10:23:10Z
12796,Fixed #31504 -- Allowed calling makemigrations without an active database connection.,"[Ticket 31504](https://code.djangoproject.com/ticket/31504)

I updated the makemigrations command to catch any `OperationalErrors` encountered while checking migration history consistency and issue a warning -- allowing the command to continue even if an error occurs when connecting to the database.",wtkm11,None,2020-04-25T19:26:46Z,2020-05-19T08:51:25Z
12795,Removed unnecessary &nbsp; entities from the admin.,"Normal spaces are fine when used as a single spaced separation. For
larger spacing, CSS is used.",jdufresne,None,2020-04-25T18:42:15Z,2020-05-02T21:44:44Z
12794,Factorized common output in showmigrations applied migrations indicator.,,francoisfreitag,None,2020-04-25T18:34:50Z,2020-04-28T07:48:04Z
12793,Removed unnecessary tuple wrapping of single format string argument.,"When the argument is not a tuple, wrapping the value in a tuple is unnecessary and less readable.",francoisfreitag,None,2020-04-25T13:55:20Z,2020-04-27T08:15:50Z
12792,Refs #18325 -- Removed unnecessary line endings in management commands.,"The `OutputWrapper` automatically adds '\n' when it’s not present. Rely
on this behavior.",francoisfreitag,None,2020-04-25T13:52:52Z,2020-04-27T10:25:17Z
12791,Removed unnecessary capturing of stdout in test_makemigrations_non_interactive_not_null_addition.,…ull_addition,francoisfreitag,None,2020-04-25T12:27:45Z,2020-04-27T10:30:05Z
12790,Fixed #31514 -- Fixed default form widgets in model fields docs.,https://code.djangoproject.com/ticket/31514,hramezani,None,2020-04-24T23:52:37Z,2020-04-25T19:20:30Z
12789,Fixed #25712 -- Reorganized templates docs.,"[Ticket #25712](https://code.djangoproject.com/ticket/25712)

So this one is complex due to the size of the documentation on Templates. However, I think a key improvement in this area is to re-order the topic page to show the overview on the DTL first. The current structure discusses custom backends and debuggging before you are given an overview of the DTL.

Here are some of my thoughts when looking at this ticket. 

- The current content on templates are vast. There is the topic page, and then three more in depth sections under [`ref/templates`](https://docs.djangoproject.com/en/3.0/ref/templates/). 
- The three sections under `ref` are all about DTL. We therefore don't really have a better home (unless a new page) for the more advanced sections on the topic page. The flow on the reference pages seems to be fairly logical.
- The ticket proposed to create 2/3 pages out of the topics. However, this would result in having content split over three small pages. Most of the existing documentation isn't like this, it seems to favour fewer longer pages with links to each heading to focus on the right area. 
- The key issue to me seemed to be the ordering and how guide people to the right areas of the docs. I've therefore followed the proposal in the original ticket, but left it on one page. 

",smithdc1,None,2020-04-24T16:31:18Z,2020-04-30T20:25:21Z
12788,Refs #31369 -- Deprecated models.NullBooleanField in favor of BooleanField(null=True).,,felixxm,None,2020-04-24T08:12:00Z,2020-04-24T09:02:01Z
12787,Refs #30913 -- Added BaseDatabaseSchemaEditor._index_condition_sql().,,felixxm,None,2020-04-24T05:13:13Z,2020-04-24T05:57:34Z
12786,Fixed #29249 -- Made JSON and YAML serializers use Unicode by default.,[Ticket 29249](https://code.djangoproject.com/ticket/29249).,hramezani,None,2020-04-23T20:18:16Z,2020-04-28T18:13:36Z
12785,Fixes #31511 -- Remove the part of URLify that removes English stop words,"This patch will close ticket #31511: [Allow stopwords in slugs generated by ModelAdmin.prepopulated_fields](https://code.djangoproject.com/ticket/31511).

With: @chosak

",Scotchester,None,2020-04-23T20:16:06Z,2020-04-25T19:24:04Z
12784,Fixed typo in docs/intro/contributing.txt.,"Should be ""at least a few minutes to run"", not ""a few minutes run"".",chosak,None,2020-04-23T18:52:09Z,2020-04-24T06:20:53Z
12783,Fixed broken links in docs.,,felixxm,None,2020-04-23T18:28:25Z,2020-04-28T08:09:49Z
12782,Fixed broken link to Watchmen configuration in docs/ref/django-admin.txt.,Fixes a 404 link in the docs.,jdufresne,None,2020-04-23T15:32:59Z,2020-04-23T16:39:11Z
12781,Doc'd PasswordChangeView/PasswordResetView.success_url defaults.,Specified the default success_url value for PasswordChangeView and PasswordResetView to remove confusion while using app_name,tanmayvijay,None,2020-04-23T13:11:46Z,2020-04-25T05:28:12Z
12780,Fixed #31505 -- Doc'd possible email addresses enumeration in PasswordResetView.,,felixxm,None,2020-04-23T06:49:13Z,2020-04-27T16:06:18Z
12779,Updated template language philosophy in DTL docs.,"I have rephrased this section. A few of my thoughts:

- I rephased this section as it refers to ""we"" being ""world online"". This didn't feel quite right so I reworded it to remove the reference to world online. 

- I did think about removing the reference to it being used to write JS, but stopped short of making this change.
 
- Finally I removed the reference to manually editing XML being sadistic. I didn't see what this added but others may have a different opinion 🤷 ",smithdc1,None,2020-04-22T19:48:59Z,2020-04-30T20:25:32Z
12778,Fixed #99999 -- Added a shortcut function to make toast.,Fixed #99999 -- Added a shortcut function to make toast.,dongmyoung6053,None,2020-04-22T17:55:27Z,2020-04-22T18:00:47Z
12777,"Fixed a typo. ""da"" suffix should be separated.",This is the grammatically correct way in Turkish. ,onurmatik,None,2020-04-22T16:21:29Z,2020-04-22T16:23:02Z
12776,Refs #31493 -- Replaced var with const/let in documentation JS.,"[ticket](https://code.djangoproject.com/ticket/31493)

Pairs with #12767.",adamchainz,None,2020-04-22T14:35:25Z,2020-07-20T10:15:14Z
12775,Added a section on NGINX Unit to WSGI docs.,,artemkonev,None,2020-04-22T11:34:09Z,2020-04-23T13:42:25Z
12774,Fixed #31500 -- Fixed detecting of unique fields in QuerySet.in_bulk() when using Meta.constraints.,Ticket: https://code.djangoproject.com/ticket/31500,hannseman,None,2020-04-22T11:02:30Z,2020-04-23T07:31:58Z
12773,Made compress.py script use the officially released google-closure-compiler.,"The script previously used the PyPI package closure, which is slightly
out of date and not maintained by Google.

The JavaScript contribution docs and the compress.py script now runs the
google-closure-compiler package in the recommended way. Google's
documentation on usage and installation can be found at:

https://github.com/google/closure-compiler-npm/tree/master/packages/google-closure-compiler#usage

This also makes the usage simpler as the package now runs through npm's
npx utility, which will automatically install google-closure-compiler to
a per-user cache.",jdufresne,None,2020-04-22T10:52:07Z,2020-05-02T12:53:13Z
12772,Avoided unnecessary recompilation of ordering clause regex in SQLCompiler.,Found this taking up time on every query in a profile.,adamchainz,None,2020-04-22T10:35:23Z,2020-04-22T19:54:09Z
12771,Fixed #31499 -- Stored ModelState.fields into a dict.,"This allows the removal of its O(n) .get_field_by_name method and many other
awkward access patterns.

While fields were initially stored in a list to preserve the initial model
definiton field ordering the auto-detector doesn't take field ordering into
account and no operations exists to reorder fields of a model.

This makes the preservation of the field ordering completely superflous because
field reorganization after the creation of the model state wouldn't be taken
into account.",charettes,None,2020-04-22T03:21:43Z,2020-04-22T06:44:26Z
12770,Refs #29892 -- Fixed selenium test test_inline_formset_error_input_border on Firefox.,"Firefox does not include shorthand properties, such as ""border"", in the
computed CSS properties object. This is documented at MDN:

https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle

> The returned CSSStyleDeclaration object contains active values for CSS
> property longhand names. For example, border-bottom-width instead of
> the border-width and border shorthand property names. It is safest to
> query values with only longhand names like font-size. Shorthand names
> like font will not work with most browsers.

This difference between Firefox and Chrome is also discussed in the
stackoverflow thread at:

https://stackoverflow.com/a/32296604",jdufresne,None,2020-04-22T02:01:30Z,2020-04-22T10:34:39Z
12769,Improved readability of ESLint configuration.,https://eslint.org/docs/user-guide/configuring#configuring-rules,jdufresne,None,2020-04-21T12:19:29Z,2020-05-02T12:53:19Z
12768,Fixed #31486 -- Deprecated passing unsaved model object to related filters.,Fixes [ticket 31486](https://code.djangoproject.com/ticket/31486).,hramezani,None,2020-04-21T12:08:16Z,2020-08-30T12:10:04Z
12767,Fixed #31493 -- Replaced var with const and let keywords in JavaScript.,"The unused fallback of globals.django in jquery.init.js was removed. It
is always included before jsi18n-mocks.test.js and it always sets the
global value.

https://code.djangoproject.com/ticket/31493",jdufresne,None,2020-04-21T12:05:24Z,2020-05-02T12:52:51Z
12765,Fixed backends.oracle.test_operations.,"Using `unittest.TestCase` doesn't work properly when we perform db queries. Moreover introspection is extremely slow on Oracle without limiting models to a ""backends"" app.

Follow up to 8bcca47e8356521f52f0738d9633befd53007cae.

Before:
- `test_sql_flush_sequences (backends.oracle.test_operations.OperationsTests)` (**761.919s**)
- `test_sql_flush_sequences_allow_cascade (backends.oracle.test_operations.OperationsTests)` (**780.015s**)

after:

_TBC_",felixxm,None,2020-04-21T09:53:18Z,2020-04-21T13:46:23Z
12764,Refs #29983 -- Fixed displaying pathlib.Path database name in flush command's inputs.,"Before:
```
This will IRREVERSIBLY DESTROY all data currently in the PosixPath('/tickets_projects/ticket_31479/db.sqlite3') database`
```
after:
```
This will IRREVERSIBLY DESTROY all data currently in the ""/tickets_projects/ticket_31479/db.sqlite3"" database`
```",felixxm,None,2020-04-21T08:36:02Z,2020-04-21T10:50:19Z
12763,Fixed #31491 -- Renamed key for db password in MySql back-end,key used to fetch password from settings dict for dbshell management command has been renamed to password.,NeoXtreme,None,2020-04-21T08:27:33Z,2020-05-21T06:17:56Z
12762,Updated admin's XRegExp to 3.2.0.,,felixxm,None,2020-04-21T05:07:44Z,2020-04-22T06:45:18Z
12761,Fixed #30457 - Added on_commit testing guidlines.,"Refactored the database transactions document to contain earlier
guidelines about using TransactionTestClass. Ticket #30457 raised
issues about the documentation surrounding testing code that uses
on_commit. Added a warning earlier in on_commit documentation that
makes it clear what test class needs to be used and links to the
appropriate section with more information.",hassaanaliw,None,2020-04-21T01:33:14Z,2020-04-21T04:08:21Z
12760,Simplified collapse.js with Element.closest().,https://developer.mozilla.org/en-US/docs/Web/API/Element/closest,jdufresne,None,2020-04-21T00:19:01Z,2020-05-02T12:53:17Z
12759,Fixed typo in xregexp.js,,hramezani,None,2020-04-20T18:55:44Z,2020-04-21T04:19:24Z
12758,Fixed #31485 -- Updated admin's jQuery to 3.5.1.,ticket-31458,felixxm,None,2020-04-20T09:04:30Z,2020-05-05T09:00:22Z
12757,Fixed #31483 -- Remove admin change_form.js dependency on jQuery.,"https://code.djangoproject.com/ticket/31483

---

Removed CSS and JavaScript for unused HTML class add-another.
    
The HTML class was removed in 07988744b347302925bc6cc66511e34224db55ab. As such, the CSS and JavaScript is unused.

---

Rewrote change_form.js without jQuery.
    
The use of `$(document).ready()` was removed. The script is loaded at the end of the document. Therefore, the referenced DOM elements are already available and the script does not need to wait for the full DOM to be ready before continuing.
    
Now that the script has no external dependencies, it can be loaded asynchronously. As such, the async attribute was added to the script element.",jdufresne,None,2020-04-19T22:35:04Z,2020-04-22T14:06:28Z
12756,Fixed #24559 -- Made MigrationLoader.load_disk() catch more specific ModuleNotFoundError.,"Avoids inspecting the exception message, which is not considered a
stable API and can change across Python versions.

ModuleNotFoundError was introduced in Python 3.6. It is a subclass of
ImportError that is raised when the imported module does not exist. It
is not raised for other errors that can occur during an import. This
exception instance has the property ""name"" which holds the name of
module that failed to import.

https://code.djangoproject.com/ticket/24559",jdufresne,None,2020-04-19T15:57:50Z,2020-05-02T12:53:19Z
12755,Used allowlist not whitelist and blocklist not blacklist,"Replaced whitelist/blacklist with allowlist/blocklist. 

I've also added a release note for the for the `EmailValidator` class as I've changed the name of one of its arguments.",smithdc1,None,2020-04-19T11:49:41Z,2020-06-06T16:24:54Z
12754,Fixed #31416 -- Made autodetector find dependencies for MTI model creation on base fields removal.,Fixed ticket https://code.djangoproject.com/ticket/31416.,nanlliu,None,2020-04-19T10:59:30Z,2020-05-26T06:34:12Z
12753,Added link to Mozilla's infosec page on web security.,"I think it merits to include a reference to those pages from Django's official documentation. Under those pages, there's a document with OpenSSH configuration, some general security principles (make sure services that you don't use are closed, grant only necessary access, have a patch strategy etc.).

There are many who don't tweak the configuration of their web server to order the TLS cipher suites correctly.

I'm not sure if this little addition requires a ticket.",atombrella,None,2020-04-19T06:44:26Z,2020-04-22T15:28:28Z
12751,Refs #29069 -- Added test for calling request_finished signal by static file responses.,Ticket: https://code.djangoproject.com/ticket/29069#comment:15,orf,None,2020-04-18T21:00:15Z,2020-04-20T08:05:50Z
12750,Refs #30372 -- Stopped watching built-in Django translation files by auto-reloader.,"Ticket: https://code.djangoproject.com/ticket/30372

",orf,None,2020-04-18T20:38:31Z,2020-05-04T08:31:02Z
12749,Updated iTunes podcast format link in syndication docs.,,smithdc1,None,2020-04-18T17:38:11Z,2020-04-30T20:25:50Z
12748,Fixed #31479 -- Added support to reset sequences on SQLite.,https://code.djangoproject.com/ticket/31479,jdufresne,None,2020-04-18T16:45:01Z,2020-05-02T12:53:23Z
12747,Fixed #31474 -- Made QuerySet.delete() not return the number of deleted objects if it's zero.,Fixes [ticket 31474](https://code.djangoproject.com/ticket/31474).,hramezani,None,2020-04-18T16:41:40Z,2020-04-23T18:38:47Z
12746,Refs #22463 -- Replaced JSHint with ESLint in contributing docs.,,jigneshkotadiya000,None,2020-04-18T16:16:26Z,2020-04-20T08:53:01Z
12745,"Capitalized Unicode in docs, strings, and comments.",,jdufresne,None,2020-04-18T15:27:54Z,2020-05-02T12:53:32Z
12744,Refs #30165 -- Removed obsolete doc references to deprecated ugettext() & co.,"The u-prefixed variants were removed from the documentation in
6eb4996672ca5ccaba20e468d91a83d1cd019801.

https://code.djangoproject.com/ticket/30165",jdufresne,None,2020-04-18T14:55:26Z,2020-05-02T12:53:48Z
12743,Removed unnecessary capturing of stdout/stderr in auth_tests.test_management.,"Verbosity is set to 0, command does not write to stdout and stderr.",francoisfreitag,None,2020-04-18T10:38:51Z,2020-04-20T16:52:51Z
12742,Disabled management commands output with verbosity 0 in various tests.,"Instead of capturing the command output and discard it immediately, tell
the command not to log.

Output capturing was maintained for commands outputting lines despite
verbosity=0.",francoisfreitag,None,2020-04-18T10:35:01Z,2020-04-20T16:52:52Z
12741,"Fixed #31477 -- Removed ""using"" argument from DatabaseOperations.execute_sql_flush().",https://code.djangoproject.com/ticket/31477,jdufresne,None,2020-04-17T22:35:55Z,2020-05-02T12:53:24Z
12740,Stable/1.8.19-fork,"This fork avoids the urgent need to upgrade to django 1.11

Products and its versions:
- Python 2.7.x
- Instant Client 18.3.0.0.0-1
- cx-Oracle=6.4.1
- Oracle 12c",leonardotrp,None,2020-04-17T19:04:47Z,2020-04-17T21:03:40Z
12739,Simplified LongNameTest.test_sequence_name_length_limits_flush() with execute_sql_flush().,,jdufresne,None,2020-04-17T13:55:34Z,2020-05-02T12:53:55Z
12738,Fix #13883 | SelectBox.js with grouping (optgroup elements),"- current implementation ignores optgroup elements in selects.
- Here is an update of SelectBox.js which takes optgroups in selects.
",jigneshkotadiya000,None,2020-04-17T08:41:15Z,2020-05-06T09:09:39Z
12737,Fix #13883 | SelectBox.js with grouping (optgroup elements)," - current implementation ignores optgroup elements in selects. 
- Here is an update of SelectBox.js which takes optgroups in selects.",jigneshkotadiya000,None,2020-04-17T08:29:06Z,2020-04-17T08:34:43Z
12736,Refs #26552 -- Made reloading the database for tests check only loaded tables constraints.,,felixxm,None,2020-04-17T05:52:12Z,2020-04-17T06:14:43Z
12735,Refs #31351 -- Made partial constraints tests use required_db_features.,"This will notably silence the warnings issued when running the test suite on MySQL and MariaDB:
```
constraints.UniqueConstraintProduct: (models.W036) MariaDB does not support unique constraints with conditions.
    HINT: A constraint won't be created. Silence this warning if you don't care about it.
```",felixxm,None,2020-04-17T05:08:16Z,2020-04-17T05:45:56Z
12734,Fixed #31064 -- Recreated auto-created relationships on type change on SQLite.,https://code.djangoproject.com/ticket/31064,charettes,None,2020-04-17T05:00:59Z,2020-04-21T12:01:41Z
12733,Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.,"The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.

https://code.djangoproject.com/ticket/31473",jdufresne,None,2020-04-16T20:41:35Z,2020-04-17T17:56:37Z
12732,Fixed #31450 -- Fixed ArrayField(GeometryField) return value in query.,Fixes [ticket 31450](https://code.djangoproject.com/ticket/31450).,hramezani,None,2020-04-16T20:34:11Z,2020-08-30T12:07:37Z
12731,Fixed #31472 -- Checked object is None in get_fieldsets,,krnr,None,2020-04-16T18:04:58Z,2020-04-16T18:35:31Z
12730,refactoring: early return 'if else' syntax -> 'if' syntax,"For early return, I think 'if syntax' is better than 'if elif syntax'.

Thanks You!",marload,None,2020-04-16T04:32:34Z,2020-04-16T04:40:18Z
12729,Added test coverage for DatabaseOperations.sql_flush().,,jdufresne,None,2020-04-16T00:32:13Z,2020-04-17T13:51:14Z
12728,WIP: Added ability to generate HS256 JWTs.,,claudep,None,2020-04-15T18:53:15Z,2020-04-27T12:26:21Z
12726,Fixed invalid super-call in test code.,This mistake was discovered using mypy in the django-stubs project.,intgr,None,2020-04-15T14:45:58Z,2020-04-15T18:47:21Z
12725,Fixed #31470 -- Fixed fieldset admin CSS to prevent overflowing <pre> elements.,"This resolved issues with overflowing ``<pre>`` elements not being contained properly within ``<fieldset>``.

See ticket-31470.

Before:
![without-fix](https://user-images.githubusercontent.com/2855582/79346285-140d6e80-7f2a-11ea-83b2-5f22ee6b9053.png)

After:
![with-fix](https://user-images.githubusercontent.com/2855582/79346299-196ab900-7f2a-11ea-9c0f-105c213f5861.png)
",pope1ni,None,2020-04-15T14:03:03Z,2020-04-16T09:41:15Z
12724,Improved action message example in admin documentation.,Avoid partial string construction and make use of ``ngettext`` to show example of how to handle plural variants with translations. Also make use of ``messages.SUCCESS`` to highlight customizing the style of the message - in this case it better fits what the message is conveying.,pope1ni,None,2020-04-15T13:25:12Z,2020-04-16T09:40:36Z
12723,Added assertions for an empty stdout to CoreCommandsNoOutputTests.,,jdufresne,None,2020-04-15T12:47:40Z,2020-05-02T12:54:02Z
12722,Used :rfc: role in various docs.,,felixxm,None,2020-04-15T11:19:49Z,2020-04-15T18:02:53Z
12721,Fixed typo in docs/ref/templates/builtins.txt.,,felixxm,None,2020-04-15T08:11:13Z,2020-04-15T08:41:24Z
12720,Implemented Subquery join,,alextatarinov,None,2020-04-15T07:19:03Z,2020-04-15T07:19:50Z
12719,Refs #5086 -- Removed unused only_django argument from sql_flush().,,jdufresne,None,2020-04-15T00:31:26Z,2020-06-04T10:08:57Z
12718,Refs #21906 -- Changed dumpdata --database default to router.db_for_read.,"[Ticket 21906](https://code.djangoproject.com/ticket/21906).
",hramezani,None,2020-04-14T21:12:07Z,2020-09-30T14:45:48Z
12717,Fixed #31466 -- Make the slash and asterisk symbol escaped in JS,Handled [Ticket #31466](https://code.djangoproject.com/ticket/31466),phith0n,None,2020-04-14T18:56:58Z,2020-04-15T05:13:10Z
12714,Fixed #99999 -- Added a shortcut function to make toast.,,sunilprasad071998,None,2020-04-14T11:08:55Z,2020-04-14T11:09:48Z
12713,Fixed #31462 -- Allowed overriding autocomplete/raw_id_fields/filter widgets for ManyToManyFields with formfield_overrides.,,007gzs,None,2020-04-13T23:57:12Z,2020-04-15T07:11:32Z
12711,added copy() to message.py for keeping copy of email in sent mailbox,I have added copy function to message.py so that when called this function will keep the copy of the email in senders sent mail box. This comes handy when we want to track emails being sent by us.,samyakgaur,None,2020-04-13T08:27:18Z,2020-04-13T10:01:40Z
12710,Fixed #31459 -- Fixed handling invalid indentifiers in URL path conversion.,"[Ticket](https://code.djangoproject.com/ticket/31459).

This found one broken URL in Django's own test suite.",adamchainz,None,2020-04-13T08:07:45Z,2020-04-15T10:21:34Z
12709,Fixed #31458 -- Allowed changing executable_name for dbshell management command.,"This is a proof of concept to make the dbshell executable configurable either in `settings.py` (`DBSHELL_EXECUTABLE`) or through an environment variable (`DJANGO_DBSHELL_EXECUTABLE`).  The new executable must accept the same command line parameters.

If there is interest in this, i'll be happy to provide the bits for the other backends and the documentation.

`$ DJANGO_DBSHELL_EXECUTABLE=pgcli python manage.py dbshell`",minusf,None,2020-04-12T23:46:48Z,2020-04-20T16:59:09Z
12708,Fixed #29224 -- Fixed removing index_together indexes if exists unique_together constraint on the same fields.,"Hi Django fellows :)

A little fix of an old bug that is still relevant today it seems. https://code.djangoproject.com/ticket/29224

I was able to reproduce the issue with a test (and when creating a test project).

About the 2 commits: the first one should allow the second one, which adds a test and contains the 'real' fix.
This fix is filtering constraints on indices that are not only `{'index': True}` but also `{'unique': False}`. So that the unique_together constraint is not making the removal of index_together fail.

I couldn't think of any problem that could occur through adding this condition, but I'm not aware of all the possible side-effects on the stack.",David-Wobrock,None,2020-04-12T22:20:59Z,2020-04-23T10:49:15Z
12707,Fixed #29249 -- Added --allow_unicode option to dumpdata to allow unicode JSON or YAML.,"[Ticket 29249](https://code.djangoproject.com/ticket/29249).
Continue #9818. I added documentation.

According to [this comment](https://code.djangoproject.com/ticket/29249#comment:3), please suggest the new option name I'll change it.",hramezani,None,2020-04-12T17:23:24Z,2020-04-23T07:20:33Z
12706,Refs #31224 -- Removed incorrect @sync_to_async(thread_sensitive=True) example.,"It does not support thread_sensitive when used as a decorator, yet.",andrewgodwin,None,2020-04-12T16:14:51Z,2020-04-14T05:26:29Z
12705,Normalizing locales,,rohitjha941,None,2020-04-12T15:18:03Z,2020-04-12T15:18:19Z
12704,Fixed #31455 -- Added support for deferrable exclusion constraints on PostgreSQL.,"Follows on from #10338 to support `django.contrib.postgres.constraints.ExclusionConstraint`.

https://code.djangoproject.com/ticket/31455",Ian-Foote,None,2020-04-12T10:45:42Z,2020-05-01T10:24:41Z
12703,Sorted imports in docs/_ext/djangodocs.py,Follow up to 1cdfe8d91215eefaa18c398069dd9c6879a9511d.,timgraham,None,2020-04-12T01:04:34Z,2020-04-14T12:36:03Z
12702,Fixed docs warnings about glossary terms not found.,,claudep,None,2020-04-11T09:07:54Z,2020-04-11T09:36:23Z
12701,Refs #31196 -- Installed postgis_raster extension on PostGIS 3+.,,claudep,None,2020-04-11T08:16:18Z,2020-04-14T08:10:29Z
12700,Fixed #31451 -- Made settings cleansing work with list and tuple settings.,"Ticket link: https://code.djangoproject.com/ticket/31451.
This pull request makes `django.views.debug.SafeExceptionReporterFilter.cleanse_setting` recurses and iterates through built-in iterables: list and tuple, so that it will hide out sensitive informations for dictionaries inside the iterable.",ichlaffterlalu,None,2020-04-11T01:58:27Z,2020-04-15T08:03:21Z
12699,Allow ordering of models in the admin index,"This PR allows to display the models in a specific order per app on the admin index and the app index, using a new **`order_in_index`** option on `ModelAdmin`.

When left to default (None), the models are sorted alphabetically (backwards compatible).

This helps deal with a common case where there is some logical order between models that does not match alphabetical order (e.g. `Continents, Countries, Counties, Cities` is much more usable than `Cities, Continents, Counties, Countries`). There is no easy way to achieve this, except by prepending verbose_name with spaces, which is not very elegant.",olivierdalang,None,2020-04-11T00:27:44Z,2020-04-14T07:15:49Z
12698,Fixed term warnings on Sphinx 3.0.1+.,`term` role became case sensitive in Sphinx 3.0.1 (see https://github.com/sphinx-doc/sphinx/issues/7418).,felixxm,None,2020-04-10T16:36:38Z,2020-04-17T16:19:47Z
12697,Fixes #31441 -- Fixed admin TabularInline problems,Fixes the first two issues of [Ticket 31441](https://code.djangoproject.com/ticket/31441#comment:3).,hramezani,None,2020-04-10T15:39:23Z,2020-04-16T10:17:51Z
12696,Completed test coverage for forms.RegexField.,"Completes test coverage for `RegexField`.
Current test coverage is [here](https://djangoci.com/view/%C2%ADCoverage/job/django-coverage/HTML_20Coverage_20Report/_home_jenkins_workspace_django-coverage_django_forms_fields_py.html#t518).

The [docs](https://docs.djangoproject.com/en/3.0/ref/forms/fields/#django.forms.RegexField.strip) for `RegexField`  explain that `strip` happens before validation when `strip=true`. I didn't see a test for this scenario so I've added one now. It it only covers examples where we expect a different behaviour to the default setting. ",smithdc1,None,2020-04-10T13:43:12Z,2020-04-30T20:26:01Z
12695,Fixed #31449 Autocomplete dosnot work when ForeignKey to_field is not pk,,007gzs,None,2020-04-10T05:57:58Z,2020-04-10T06:09:26Z
12694,minor doc updates,,vvs31415,None,2020-04-10T00:23:08Z,2020-04-10T00:42:37Z
12693,Completed test coverage for BoundField.css_classes().,"This is to improve the test coverage for `css_classes()`. 
Here is the [current test coverage.](https://djangoci.com/view/%C2%ADCoverage/job/django-coverage/HTML_20Coverage_20Report/_home_jenkins_workspace_django-coverage_django_forms_boundfield_py.html#t173)

There are a couple of current tests which cover css_classes but they don't test the various options. Hopefully what I've done is reasonable.

I also added the argument into the docs which is missing. Not sure if that is deliberately so?

Looking forward to your comments 👍 ",smithdc1,None,2020-04-09T19:35:18Z,2020-04-10T06:01:37Z
12692,Fixed #31443 -- Fixed login redirection in auth mixins when LOGIN_URL is off-site URL.,,minusf,None,2020-04-09T11:06:27Z,2020-06-23T08:39:43Z
12691,Fixed #31407 -- Fixed unawaited coroutine warning for Python  3.8+.,"Follow-up to  #12661

Co-authored-by: Mark Korput <dr.theman@gmail.com> (@markkorput)

No warning on Python 3.7. Warning on Python 3.8. Adding the `__del__` back seems to clear it. 
(Let's see what the CI says.) I'm guessing a GC'd but not closed/awaited coroutine is the trigger on Python 3.8, but [still](https://docs.python.org/3/reference/datamodel.html#coroutine.close):

> Coroutine objects are automatically closed using the above process when they are about to be destroyed.

So 🤷‍♂️

Can't find a note on the change in behavior here. Probably ref https://bugs.python.org/issue32591",carltongibson,None,2020-04-09T09:52:45Z,2020-04-09T10:35:24Z
12690,Migration operations cleanups.,,felixxm,None,2020-04-09T08:03:46Z,2020-04-09T08:44:15Z
12689,Refs #31411 -- Used RENAME COLUMN on MySQL 8.0.4+.,"`ALTER TABLE ... RENAME COLUMN` is also supported on [MySQL 8.0.3+](
https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-3.html#mysqld-8-0-3-sql-syntax).",felixxm,None,2020-04-09T05:33:01Z,2020-04-09T09:16:45Z
12685,Fixed typo in tests/backends/base/test_operations.py.,,felixxm,None,2020-04-08T14:10:22Z,2020-04-08T18:06:36Z
12684,Fixed #31437 -- Corrected tests to show abstract multiple inheritance system check error.,"* Added minimal multiple inheritance test case showing error.
* Removed obsolete diamond-inheritance case, originally added in
   85ef98dc6ec565b1add417bd76808664e7318026.

Correcting this should let us progress #11337 🤞",carltongibson,None,2020-04-08T13:12:18Z,2020-04-08T19:11:13Z
12683,Fixed #31436 - Added support for named placeholders in format_html_join.,"This is my first PR, hope I did everything well...

Related ticket https://code.djangoproject.com/ticket/31436",SebCorbin,None,2020-04-08T09:09:53Z,2020-04-08T09:26:27Z
12682,Refs #30966 -- Added test for reloading related model state on non-relational changes.,Thanks Markus Holtermann for initial test.,felixxm,None,2020-04-08T05:56:11Z,2020-04-08T08:43:55Z
12681,Increased test coverage for forms.ImageField.to_python().,"Added a test for `ImageField` to check that an error is raised if Pillow doesn't recognise the image. This is to cover these lines [here](https://djangoci.com/view/%C2%ADCoverage/job/django-coverage/HTML_20Coverage_20Report/_home_jenkins_workspace_django-coverage_django_forms_fields_py.html#t649). 

The sample image I took from Pillow's own [repo](https://github.com/python-pillow/Pillow/blob/master/Tests/images/unimplemented_dxgi_format.dds), a little unsure if this is frowned upon? 

I tried to cover line 629/630 using `TemporaryUploadedFile`. Whilst I can get these lines to run by creating a 'fake' file, Pillow of course can't open it. So it didn't feel like a great test. 
",smithdc1,None,2020-04-07T20:52:10Z,2020-04-10T06:32:52Z
12680,Added more tests for loaddata/dumpdata with forward and circular references.,,felixxm,None,2020-04-07T10:17:30Z,2020-04-07T14:04:11Z
12679,FIxed TIcket 31354: Include Port in Host when not default,"When constructing the authority (host+port) for a URI it should
include the port number if the port is not the standard port for
the given scheme (80 for HTTP, 443 for HTTPS).

This change ensures that calls to request.build_absolute_uri()
will return a correct URL when the SERVER_PORT (or X_FORWARDED_PORT)
is something other than the default.",dgcgh,None,2020-04-07T06:40:50Z,2020-05-04T04:03:34Z
12678,Fixed #30779 -- Improved selection of filenames in technical 500 debug page.,"[Ticket 30779](https://code.djangoproject.com/ticket/30779)
Continue [original PR](https://github.com/django/django/pull/11789)
I rebased the patch and adjusted the tests.",hramezani,None,2020-04-06T22:02:20Z,2020-04-09T09:54:44Z
12677,Add super call in postgres' JSONField.get_prep_value,"currently we can't monkeypatch base classes of `django.contrib.postgres.fields.JSONField`. 
for example:
```
class NullBytesSanitizerMixin:
    def get_prep_value(self, value):
        value = remove_null_bytest(value)  # say it removes \u0000
        return super().get_prep_value(value)

JSONField.__bases__ = (NullBytesSanitizerMixn, *JSONField.__bases__)
# __mro__ is (<class 'django.contrib.postgres.fields.jsonb.JSONField'>, NullBytesSanitizerMixin, .... <class 'object'>)

``` 
 by doing above monkeypatch,
```
>>> JSONField().get_prep_value({""foo"": ""b\u0000ar""}).adapted
>>> {'foo': 'b\x00ar'}   # this is being returned

>>> # but the expected behavior after monkeypatching __bases__, is that 
>>> # {'foo': 'bar'} should have been returned instead, because JSONField.get_prep_value
>>> # doesn't call super().get_prep_value(value), hence mixin's get_prep_value doesn't get
>>> # called.
```

",karansthr,None,2020-04-06T20:51:53Z,2020-04-07T04:08:59Z
12676,Fixed typo in tests/forms_tests/field_tests/test_imagefield.py test names.,,smithdc1,None,2020-04-06T20:32:22Z,2020-04-07T08:28:53Z
12675,Refs #31358 -- Added decode() to password hashers.,"This PR is in service of
https://code.djangoproject.com/ticket/31358
and required a decode function on BasePasswordHasher along with
a simple decode implementation on PBKDF2PasswordHasher

Update on this PR for the sake of documentation. The PR has expanded to implement decode for all the included hashers and the decode function has subsumed manual decoding of database entries. See the commit text for more.",darakian,None,2020-04-06T20:16:02Z,2020-06-23T08:04:05Z
12674,Completed test coverage for forms.DurationField.to_python().,"To increase the test coverage for duration field. 

Specifically it targets the `to_python` function. [Current coverage.](https://djangoci.com/view/%C2%ADCoverage/job/django-coverage/HTML_20Coverage_20Report/_home_jenkins_workspace_django-coverage_django_forms_fields_py.html#t491)

I'm assuming for this type of small change to test coverage it's acceptable to just open the pull request. 🤞
",smithdc1,None,2020-04-06T20:03:27Z,2020-04-07T08:29:04Z
12673,More informative errors on exceptions in get_or_create(),"Provide a more informative message to help admins save time debugging this rather puzzling situation when get_or_create() crashes on IntegrityErrors.

This should never be happening in a healthy database, but it does when table index is corrupt and does not signal existence of a row so a duplicate is added.

See [this case study](https://webcookies.org/articles/51/django-get_or_create-integrity-or-duplicate-entry-errors) for details",kravietz,None,2020-04-06T17:07:06Z,2020-04-07T04:10:12Z
12672,Remove if statement from MultiWidget > id_for_label,I don't think we need this `if` statement.,smithdc1,None,2020-04-06T11:39:32Z,2020-04-07T08:29:15Z
12671,Fixed #31428 -- Allowed empty message in management command self.stdout/err proxies.,,francoisfreitag,None,2020-04-06T10:18:12Z,2020-04-27T10:30:04Z
12670,Fixed Sphinx warnings.,,felixxm,None,2020-04-06T06:11:56Z,2020-04-07T07:48:57Z
12669,Fixed #31426 -- Added proper field validation to QuerySet.order_by().,,charettes,None,2020-04-05T19:55:36Z,2020-04-06T13:50:47Z
12668,Fixed #31030 -- Registered SQLite functions as deterministic on Python 3.8+.,"[Ticket 31030](https://code.djangoproject.com/ticket/31030).
The original patch was from @sir-sigurd.
I've rebased the patch and added a release note per @felixxm [comment](https://github.com/django/django/pull/12145#issuecomment-561158032).",hramezani,None,2020-04-05T13:53:54Z,2020-04-06T10:02:53Z
12667,Update django.po,,fjy202,None,2020-04-05T08:45:01Z,2020-04-05T13:26:09Z
12666,Fix a translate problem,,fjy202,None,2020-04-05T08:36:41Z,2020-04-05T13:26:46Z
12665,Refs #27666 -- Ensured relationship consistency on delayed reloads.,See https://code.djangoproject.com/ticket/30966#comment:20,charettes,None,2020-04-05T06:24:23Z,2020-04-07T21:41:43Z
12664,Migration operations cleanups.,"While working on making sense out of [#31064](https://code.djangoproject.com/ticket/31064) and working towards cleaning things up for possible GSOC projects.

This PR includes a few commits that moves all reference resolving logs to contained functions in `operations.utils` instead of repeating the same logic in multiple `Operation.state_forwards` implementations.

It gets rid of `ModelTuple` which was added to deal with the special casing of `app_label=None` since this isn't something used internally anyway and was only meant as an easier way to test things out.

---

I would have liked to change the signature of `reduce`, `references_field` and `references_model` to have `app_label` be their first positional argument but it could break compatibility with possible operations that overrode these methods. Given it's a private API I think it would still make sense for the sake of coherency with app model concept and I'd be happy to provide a following PR if that's deemed appropriate.",charettes,None,2020-04-05T00:05:04Z,2020-04-10T07:42:48Z
12663,Fixed #31420 -- Fixed crash when filtering subquery annotation against a SimpleLazyObject.,"Fixes [ticket 31420](https://code.djangoproject.com/ticket/31420).
Thanks, @charettes for the solution and @felixxm for the test case.",hramezani,None,2020-04-04T18:58:49Z,2020-04-06T06:15:42Z
12662,Fixed #31423 -- Clarified nested atomic() example.,ticket-31423,felixxm,None,2020-04-04T18:34:01Z,2020-04-06T04:17:37Z
12661,Fixed #31407 -- Adjusted test to avoid coroutine never awaited warning.,"[Ticket #31407](https://code.djangoproject.com/ticket/31407)

The warning is caused by the test ```handlers.tests.test_unawaited_response()``` but is generated _after_ the test finishes, so there doesn't seem to be a clean way to suppress the message from within the test method without affecting global warning filters. Hence the decision to put this filter in ```runtests.py```",markkorput,None,2020-04-04T18:32:08Z,2020-04-09T08:55:01Z
12660,Doc'd troubleshooting steps for failures when test requirements,"**What is added:**
- Created a section to document and provide troubleshooting steps for failures when installing test requirements
- Added steps for fixing failures on macOS related to libmemcached

**Other information:**
- [Associated Django Forum topic](https://forum.djangoproject.com/t/error-when-installing-requirements-for-django-tests-fatal-error-libmemcached-memcached-h-file-not-found-include-libmemcached-memcached-h/1685/5)
- Previous Django Tickets on this topic [#29405](https://code.djangoproject.com/ticket/29405) and [#27876](https://code.djangoproject.com/ticket/27876)",ProProgrammer,None,2020-04-04T04:08:47Z,2020-04-04T09:58:14Z
12659,Doc'd Meta inheritance from abstract parents.,Inheriting from multiple abstract base classes will only inherit the first listed parent class's Meta options. This patch adds an admonition with an example.,GregKaleka,None,2020-04-04T00:28:04Z,2020-05-01T12:40:32Z
12658,Caveat Meta inheritance with multiple base classes,"When inheriting from multiple abstract base classes, only the Meta options from the first listed class will be inherited. This patch adds an admonition with an example of this issue.",GregKaleka,None,2020-04-03T21:31:53Z,2020-04-03T23:46:09Z
12657,Optimized Model and QuerySet pickling version comparison.,`get_version()` does a lot of unnecessary work to get at the pre-computed result in `__version__`. Also remove the `msg` variable to bypass its assignment and checking during the happy path.,adamchainz,None,2020-04-03T20:13:13Z,2020-06-05T21:56:01Z
12656,Fixed #13009 -- Added BoundField.widget_type property.,"[Ticket](https://code.djangoproject.com/ticket/13009)

The issue explained in the ticket of rendering fields (widgets, really) dependant upon their type is a key part of `crispy-forms`. This project solved it by adding a limited number of filters so you can do something like this. 

```
{% for field in fields %}
{% if field|is_checkbox %}
  # render a checkbox
{% elif field|is_file %}
  # render a file field
[...]
```

I've replicated that approach here, and for completeness I've added a filter for each of the widget types, added tests and docs.

There are comments on the ticket about `multifield` (multiwidget). I think for now just knowing it is a `multiwidget` is enough. Over at crispy-forms the project still hasn't found a way to deal with these widgets and all their complexities.

Appreciate your thoughts on this one. ",smithdc1,None,2020-04-03T20:12:40Z,2020-04-10T06:30:58Z
12655,Mentioned non_field_errors in form validation docs.,,sks444,None,2020-04-03T13:41:07Z,2020-04-09T10:40:30Z
12654,Fixed #31415 -- Fixed crash when nested OuterRef is used with operators or in database functions.,Fixes [ticket 31415](https://code.djangoproject.com/ticket/31415).,hramezani,None,2020-04-03T09:48:23Z,2020-04-04T18:37:14Z
12653,Enforced uniqueness of natural keys used in tests.,See [comment](https://github.com/django/django/pull/12166#discussion_r352387658).,felixxm,None,2020-04-03T07:38:39Z,2020-04-07T16:23:32Z
12652,Refs #31051 -- Fixed reloading the database with circular related objects and natural keys for tests.,"Made `deserialize_db_from_string()` do not sort dependencies.

`deserialize_db_from_string()` doesn't use natural keys, so there is no need to sort dependencies in `serialize_db_to_string()`. Moreover, sorting models cause issues for circular dependencies.",felixxm,None,2020-04-02T08:59:32Z,2020-04-02T10:13:38Z
12651,Refs #26552 -- Added test for reloading the database with self-referential objects.,,felixxm,None,2020-04-02T06:55:37Z,2020-04-02T07:47:14Z
12650,Refs #29988 -- Changed simple .format() calls to use f-strings.,"Only simple uses of .format() have changed such that the string
expressions are shorter, are not translated strings, and do not nest
quotes.

In addition to the readability improvement, f-strings are also
marginally faster:

    $ python3 -m timeit -s 'a = 42; b = None; c = ""foo""' '""{} {} {}"".format(a, b, c)'
    500000 loops, best of 5: 430 nsec per loop
    $ python3 -m timeit -s 'a = 42; b = None; c = ""foo""' 'f""{a} {b} {c}""'
    1000000 loops, best of 5: 286 nsec per loop

The cases were automatically detected and modified using pyupgrade:
https://github.com/asottile/pyupgrade

https://code.djangoproject.com/ticket/29988",jdufresne,None,2020-04-02T02:22:58Z,2020-05-17T12:37:54Z
12649,Fixed #31411 -- Used RENAME COLUMN on MariaDB 10.5.2+.,Fixes [ticket 31411](https://code.djangoproject.com/ticket/31411).,hramezani,None,2020-04-01T19:25:14Z,2020-04-02T05:19:53Z
12648,Backport of #12645 to stable/3.0.x.,"Hey @felixxm. 

This is a backport of Adam's #12645. 

Beyond being an improvement, I thought it worth doing, since I imagine it makes our lives easier backporting docs changes in the next few months. But, given the docs conf changes, I wanted to run it passed you so... ",carltongibson,None,2020-04-01T13:22:26Z,2020-04-01T18:52:27Z
12647,Refs #12990 -- Moved PostgresSimpleLookup to the django.db.models.lookups.PostgresOperatorLookup.,"Due to the fact that we use [the same logic](https://github.com/django/django/pull/12392/files#diff-0cc1c89fc2c9873de52d546ac65b10c2R133-R143) in #12392, I think it's worth to move `PostgresSimpleLookup` to the `django.db.models.lookups.PostgresOperatorLookup` and reuse it in both places.",felixxm,None,2020-03-31T18:06:42Z,2020-04-01T08:55:58Z
12645,Fixed all accidental use of single backticks in docs,"Add a custom role via [`Sphinx.add_role()`](https://www.sphinx-doc.org/en/master/extdev/appapi.html#sphinx.application.sphinx.add_role) that errors if used, and set it as the ""default role"", used by the single backtick syntax.

Also add a custom [pyenchant spellchecker filter](https://pyenchant.github.io/pyenchant/tutorial.html#filters) via [sphinxcontrib-spelling](https://sphinxcontrib-spelling.readthedocs.io/en/latest/customize.html#custom-word-filters) to allow ""Node.js"" as a word.

The default default role is undefined by Sphinx, but comes out as italics. All of the existing uses were not for italics, but rather:
* Mistaken code syntax, since Markdown uses single backticks
* Forgotten roles like `:ref:`
* Forgotten trailing underscores for links
* Subverting the spellchecker

This will prevent such busy work / fixes as #12639 and #12536, plus the numerous fixes here.",adamchainz,None,2020-03-31T09:09:55Z,2020-04-01T14:47:05Z
12644,"Replaced (IndexError, KeyError) exception catching with LookupError.",https://docs.python.org/3/library/exceptions.html#LookupError,felixxm,None,2020-03-30T10:20:01Z,2020-03-31T04:16:59Z
12643,Removed unused link in docs/faq/help.txt.,Unused since its introduction in 97cb07c3a10ff0e584a260a7ee1001614691eb1d.,felixxm,None,2020-03-30T06:07:23Z,2020-03-31T16:27:59Z
12641,"bugfix: hardcoded User, fails with custom User model","In django/contrib/auth/forms.py:
I think hardcoded 'User' should not be used to avoid failure with custom User model: ""Manager isn't available; User has been swapped for ..""
Instead get_user_model() is correct.
This function is in the top part of a forms.py assigned as 
UserModel = get_user_model()
.... so I have changed:
User -> UserModel

Best regards,
Mirek",zvolsky,None,2020-03-29T14:41:52Z,2020-03-30T05:36:52Z
12639,Fixed links in Getting Help FAQ.,Realized I missed a couple _ in my last PR #12604 so these links didn't work 🤦‍♂️,adamchainz,None,2020-03-29T09:34:56Z,2020-03-31T07:54:20Z
12638,Added a shortcut function to make toast,,undefinedlau,None,2020-03-28T22:07:28Z,2020-03-28T22:09:56Z
12637,Fixed #30864 -- Doc'd classproperty decorator.,"- Added documentation for classproperty and docstring to class definition
- Add contributor name to AUTHORS

Ticket: [#30864](https://code.djangoproject.com/ticket/30864)

_PS: Signed ICLA sent via email to cla@djangoproject.com_",ProProgrammer,None,2020-03-28T14:40:43Z,2020-03-31T09:12:15Z
12636,Fixed #31369 -- Deprecated NullBooleanField.,"Deprecated models.fields.NullBooleanField and
forms.field.NullBooleanField. The replacement for both
is BooleanField(null=True).",tim-schilling,None,2020-03-27T21:27:12Z,2020-04-27T05:26:39Z
12635,Refs #31040 -- Used 402 HTTP status in middleware_exceptions tests.,"HTTP status code `418` - ""I'm a Teaport"" was added to `http.HTTPStatus` in [Python 3.9.0a5](https://docs.python.org/3.9/whatsnew/3.9.html#http) that caused failures in `middleware_exceptions` tests.

```
File ""tests\middleware_exceptions\tests.py"", line 250, in test_async_teapot_middleware_async
    self.assertEqual(
AssertionError: ""I'm a Teapot: /middleware_exceptions/view/"" != 'Unknown Status Code: /middleware_exceptions/view/'
- I'm a Teapot: /middleware_exceptions/view/
+ Unknown Status Code: /middleware_exceptions/view/
```

This changes HTTP status used in `middleware_exceptions` tests to `402`, which exists in all supported versions of Python. ",felixxm,None,2020-03-27T09:02:21Z,2020-03-31T10:09:22Z
12634,Fixed #31275 -- Optimized sql_flush() without resetting sequence on MySQL.,"I checked the time taken by `flush` command with 100 tables. See the source code at https://github.com/c-bata/django-fast-mysql-flush

| number of records on each table | before | after `reset_sequences=False` (default) | after `reset_sequences=True` (optional) |
|--- | --- | --- | --- |
| 10|  3.302 sec (+/- 0.076) | 0.517 sec (+/- 0.019) | 3.658 sec (+/- 0.080) |
| 100 | 3.323 sec (+/- 0.047) | 0.575 sec (+/- 0.025) | 3.571 sec (+/- 0.077) |
| 1000 | 3.577 sec (+/- 0.106) | 1.046 sec (+/- 0.029) | 3.813 sec (+/- 0.073) |

Please note that the benchmark script was run on my laptop. So the times should not be taken precisely.


Ticket URL is https://code.djangoproject.com/ticket/31275",c-bata,None,2020-03-27T08:54:30Z,2020-04-02T11:37:24Z
12633,Fixed #31400 -- Doc'd the expected type of CONN_MAX_AGE database option.,Fixes [ticket 31400](https://code.djangoproject.com/ticket/31400).,hramezani,None,2020-03-26T21:27:37Z,2020-03-27T06:01:55Z
12631,Fixed #31404 -- Changed selector-chosen's multiple attribute to HTML5 boolean syntax.,…boolean attribute syntax.,zriv,None,2020-03-26T10:57:32Z,2020-03-27T11:39:52Z
12630,Fixed #31402 -- Added migrate --check option. ,,thenewguy,None,2020-03-26T09:22:15Z,2020-03-27T05:12:44Z
12629,Fixed #31330 -- Corrected catchall URL pattern in flatpages docs.,"Use re_path() pattern with the regex used before original regression in
df41b5a05d4e00e80e73afe629072e37873e767a.
Regression in a0916d7212aaae634f4388d47d8717abc2cd9036.

It's not worth using `path()` in this kind of context. (You **want** the control of the regex.)",carltongibson,None,2020-03-26T07:55:45Z,2020-03-26T08:44:33Z
12628,Fixed #31403 -- Added support for returning fields from INSERT statements on MariaDB 10.5+.,[Ticket](https://code.djangoproject.com/ticket/31403),adamchainz,None,2020-03-25T22:08:01Z,2020-03-31T07:53:48Z
12627,Fixed #31375 -- Made contrib.auth.hashers.make_password() accept only bytes or strings.,Fixes [ticket 31375](https://code.djangoproject.com/ticket/31375).,hramezani,None,2020-03-25T22:04:26Z,2020-03-31T09:40:30Z
12626,Merge pull request #1 from django/master,Updating,ycv005,None,2020-03-25T20:28:55Z,2020-03-25T21:00:33Z
12625,Fixed #31268 -- Updated Algerian Arabic (ar_DZ) locale formats.,Add Inputs format.,infosrabah,None,2020-03-25T18:58:41Z,2020-04-15T08:13:51Z
12624,Fixed #31399 -- Made SchemaEditor._alter_field() ignore foreign key constraints if unsupported.,https://code.djangoproject.com/ticket/31399,timgraham,None,2020-03-25T12:43:50Z,2020-04-12T00:38:59Z
12623,Removed unnecessary assertions in ExpressionOperatorTests.,These tests don't modify `Number.float` field.,felixxm,None,2020-03-25T09:27:30Z,2020-03-25T12:12:36Z
12622,Made prepopulate_init.js wait for the DOM to be ready before querying it.,,jdufresne,None,2020-03-25T00:26:56Z,2020-03-28T17:46:41Z
12621,"Reverted ""Pinned asgiref == 3.2.5 in test requirements.""","This reverts commit aa21020218a2dcd29a03444ad2a77f03f085b04e.

Regression was fixed by https://github.com/django/asgiref/commit/e4367c571fd1833bda0b7ff0bd68d924916352da.",felixxm,None,2020-03-24T19:13:35Z,2020-03-24T19:52:10Z
12620,Improved sessions notes in deployment checklist.,"Nearly every django project I audit has this missing and often GB's of old sessions sitting around that can be cleared. Hopefully this helps users find this.

Also removing the 'memcached' only distinction for cached sessions, since other cache backends can be appropriate, from `DatabaseBackend` to third party backends in django-mysql or django-redis.",adamchainz,None,2020-03-24T14:53:02Z,2020-03-25T15:15:48Z
12619,Improved docs on migration reversibility.,"* Renamed ""reverting"" section to ""reversing"" since every other part of the docs talks about ""reversing"" migrations/operations
* Gave an example of irreversible migration
* Noted in `RunSQL` and `RunPython` that they default to being irreversible.",adamchainz,None,2020-03-24T11:49:54Z,2020-03-25T15:15:53Z
12618,Fixed intermittent SeleniumTests.test_prepopulated_fields failure.,"Element would occasionally be outside of frame.

Not [the error I'm after](https://djangoci.com/job/pull-requests-selenium/database=postgres,label=bionic-pr,python=python3.7/117/testReport/junit/admin_views.test_autocomplete_view/SeleniumTests/test_select_multiple/) (which won't reproduce for me) but another one... ",carltongibson,None,2020-03-24T11:24:06Z,2020-03-25T08:59:01Z
12617,Fixed #31396 -- Added binary XOR operator to F expressions.,Ticket: https://code.djangoproject.com/ticket/31396,hannseman,None,2020-03-24T08:16:28Z,2020-03-25T12:22:30Z
12616,Pinned asgiref == 3.2.5 in test requirements.,,felixxm,None,2020-03-24T05:56:52Z,2020-03-24T07:52:26Z
12615,Pinned asgiref == 3.2.5 in test requirements.,,felixxm,None,2020-03-24T05:55:09Z,2020-03-24T07:52:27Z
12614,Fixed #31385 -- Improved wording in tutorial 1.,"In tutorial 01, it mentioned that it would create a project ""next to"" the existant
manage.py. Changed the text to instruct it is creating the project ""in the same directory""
as the existant manage.py.",victorcmoura,None,2020-03-24T02:01:58Z,2020-03-24T06:12:49Z
12613,Fixed #30583 -- Fixed handling JSONFields in XML serializer.,"Fixes [ticket 30583](https://code.djangoproject.com/ticket/30583).
Continue [original PR](https://github.com/django/django/pull/11538).
I've fixed the test as @felixxm [comment](https://github.com/django/django/pull/11538#discussion_r300645944).
@felixxm, Do we need to change `JSONField` `to_python()` and `value_to_string()`?",hramezani,None,2020-03-23T18:39:24Z,2020-06-17T09:55:12Z
12612,Fixed #31392 -- Avoided unnecessary SchemaEditor.effective_default() calls when altering a field.,,fengsp,None,2020-03-23T12:33:47Z,2020-03-24T12:09:44Z
12611,Fixed #99999 -- Added a shortcut function to make toast.,This is a tutorial f/u.,xanthoc,None,2020-03-23T05:41:09Z,2020-03-23T05:42:05Z
12610,Fixed .po file msgid,"Change msgid ""Yes, I'm sure"" to msgid ""Yes, I’m sure""
In admin template file ""delete_confirmation.html"" and ""delete_selected_confirmation.html"" , the trans string is ""Yes, I’m sure"" , like this:
<input type=""submit"" value=""{% trans 'Yes, I’m sure' %}"">",likaozheng,None,2020-03-23T02:56:03Z,2020-03-23T03:10:28Z
12609,Added missing Meta.apps to a schema model.,"While running the tests for a third-party backend, I found the table was created outside of the schema tests which resulted in a failure when trying to create the table in the test this model is used. This seems to have just been an oversight in 61cfcec5b7d47232a1d6facbde71d4cca35986eb.",timgraham,None,2020-03-23T00:04:12Z,2020-03-23T10:37:54Z
12608,Fixed #31395 -- Made setUpTestData enforce in-memory data isolation.,https://code.djangoproject.com/ticket/31395#ticket,charettes,None,2020-03-22T22:36:12Z,2020-05-15T19:42:33Z
12607,[GSOC] Make ParallelTestSuite works on Windows and latest Mac OS,"This is my initial POC on `ParallelTestSuite` for `spawn` start method (used by Windows and recent Mac OS versions). This is far from complete.

Existing checks might fail as I didn't rerun the whole test yet. I will fix them gradually as further feedback may come for this proposal.

Further details are available in my GSOC proposal gist: https://gist.github.com/ichlaffterlalu/db244e6b304bf499a3732774ab222d90.",ichlaffterlalu,None,2020-03-22T15:40:37Z,2020-05-20T04:03:47Z
12606,Fix i18n for Russian and other languages,Templates use ’ but in some files use ' and translation does not occur,xaircore,None,2020-03-22T11:38:49Z,2020-03-22T13:56:55Z
12604,Rewrote Getting Help FAQ.,Make it a more useful place to point beginners with questions.,adamchainz,None,2020-03-21T18:26:07Z,2020-03-29T09:18:29Z
12603,Updated settings example in overriding templates docs.,Follow up to ba4389a36b5fb1afce0cddb4e28233138b6612b7.,felixxm,None,2020-03-21T17:36:35Z,2020-03-21T19:03:01Z
12601,Normalized check framework test pattern.,,adamchainz,None,2020-03-21T16:08:07Z,2020-03-25T15:15:57Z
12600,TESTING Selenium on master.,,jdufresne,None,2020-03-21T16:03:21Z,2020-03-23T15:20:07Z
12599,Refs #31032 -- Removed unsupported browsers workarounds and comments in admin's JavaScript.,"Since 8b30360322d4de6687e17ab267a856db4e3c78a6, the admin documentation
is explicit that only modern evergreen browsers are supported. This
allows removing several long standing workarounds for IE and other older
browser versions.",jdufresne,None,2020-03-21T15:12:50Z,2020-03-24T13:28:36Z
12598,Fixed #31391 -- Removed jQuery usage in cancel.js,"Now that cancel.js has no dependencies, it can be loaded asynchronously.

https://code.djangoproject.com/ticket/31391",jdufresne,None,2020-03-21T14:32:32Z,2020-03-24T13:28:36Z
12597,Fixed #28194 -- Added support for normalization and cover density to SearchRank.,Ticket https://code.djangoproject.com/ticket/28194#ticket,hannseman,None,2020-03-20T21:02:14Z,2020-03-23T11:23:44Z
12596,Fixed #31380 -- Added deployment system check for DJANGO_ALLOW_ASYNC_UNSAFE environment variable.,https://code.djangoproject.com/ticket/31380,hashlash,None,2020-03-20T20:23:45Z,2020-04-01T11:20:27Z
12595,Added link to contributing docs in deprecation policy.,"I often go to one and mean the other, and I think the how-to reveals some extra detail that is useful for users.",adamchainz,None,2020-03-20T18:09:04Z,2020-03-25T15:16:05Z
12594,Removed obsolete references to South database migrations.,,timgraham,None,2020-03-20T14:05:39Z,2020-03-23T10:56:41Z
12593,Refs #29724 -- Added is_dst parameter to QuerySet.datetimes().,,felixxm,None,2020-03-20T11:38:27Z,2020-03-20T12:18:27Z
12592,Fixed #99999 -- Added a shortcut function to make toast.,,Dharamvirsingh1,None,2020-03-20T10:03:26Z,2020-03-20T10:14:04Z
12591,Fixed #30311 -- Restored ability to override global admin actions.,https://code.djangoproject.com/ticket/30311,hashlash,None,2020-03-20T07:59:43Z,2020-04-17T20:45:18Z
12590,Fixed #31383 -- Made createcachetable use SchemaEditor.,https://code.djangoproject.com/ticket/31383,timgraham,None,2020-03-20T01:49:51Z,2020-06-07T20:21:58Z
12589,Fixed #31377 -- Disabled grouping by aliases on QuerySet.values()/values_list() when they collide with field names.,Fixes [ticket 31377](https://code.djangoproject.com/ticket/31377).,hramezani,None,2020-03-19T19:04:17Z,2020-03-25T08:49:43Z
12588,Fixed #31123 -- Added --include-stale-apps option to the remove_stale_contenttypes management command.,#12558 with final edits.,felixxm,None,2020-03-19T10:20:11Z,2020-03-19T11:16:22Z
12587,Clarified async documentation.,"* Fixed some code examples to be correct, or more minimal.
* Tried to use the shorter ""sync"" and ""async"" more often, especially in the async topic guide which introduces ""async"" at the top. It was still mixing them.
* Split some sentences up to improve readability and translatibility. This especially meant dropping semicolons.",adamchainz,None,2020-03-19T09:42:25Z,2020-04-04T11:01:52Z
12586,Improve RawSQL documentation,"I needed to refer to an [SO question](https://stackoverflow.com/questions/47095623/django-queryset-how-to-filter-a-rawsql-annotation-based-on-a-queryset-field) in order to figure out how this works, so better to have it in the docs.",akx,None,2020-03-19T08:33:27Z,2020-03-20T06:12:06Z
12585,Refs #29548 -- Mentioned MariaDB in database system checks.,Preparation for #12459.,felixxm,None,2020-03-19T08:09:51Z,2020-03-19T09:43:11Z
12584,Refs #31055 -- Made long column names checks support databases aware.,,felixxm,None,2020-03-18T12:30:57Z,2020-03-18T17:41:45Z
12583,Fixed #31376 -- Optimized nulls ordering when possible on SQLite and MySQL.,"https://code.djangoproject.com/ticket/31376

---

Both backends order `NULL`s first on ascending ordering and last on descending ordering which makes `ORDER BY IS (NOT)? NULL` wasteful when `asc(nulls_first)` and `desc(nulls_last)` are used since it prevents indice usage.",charettes,None,2020-03-18T02:04:58Z,2020-03-22T22:08:43Z
12582,Fixed #31368 -- Doc'd 'expression' parameter of Field.from_db_value()/Expression.convert_value().,"Fixes [ticket 31368](https://code.djangoproject.com/ticket/31368).
I've added @felixxm [comment on the ticket](https://code.djangoproject.com/ticket/31368#comment:1) to documentation.
Unfortunately, I couldn't add anything to it :pensive: ",hramezani,None,2020-03-17T22:37:05Z,2020-03-18T10:57:28Z
12581,Fixed #31371 -- Increased User.first_name max_length to 150 characters.,"Increases the max_length of first_name in django.contrib.auth to 150 characters to facilitate longer first names.

Fixes ticket-31371",ryanpetrello,None,2020-03-17T11:40:01Z,2020-03-18T07:53:26Z
12579,Fixed #31172 -- Added note to translators for yesno filter. ,"Fixes [ticket 31172](https://code.djangoproject.com/ticket/31172).
Based on @bmispelon [comment](https://code.djangoproject.com/ticket/31172#comment:8).",hramezani,None,2020-03-16T20:55:36Z,2020-03-17T10:39:51Z
12578,Simplified settings' BASE_DIR definition with pathlib.Path.parent.,"Suggested by [milliams on reddit](https://www.reddit.com/r/django/comments/fjif7y/use_pathlib_in_your_django_settings_file_adam/fknfc4f/) as simpler on the back of my [pathlib blog post](https://adamj.eu/tech/2020/03/16/use-pathlib-in-your-django-project/). I agree - it's more user friendly. `parents[1]` opens up the questions like ""Which order are the parents in?"" and ""Does 1 mean the first or the 2nd parent?"".",adamchainz,None,2020-03-16T15:11:26Z,2020-03-20T19:07:32Z
12577,Fixes #31367 -- SuccessURLAllowedHostsMixin moved to mixins,[https://code.djangoproject.com/ticket/31367](https://code.djangoproject.com/ticket/31367),mdisec,None,2020-03-16T13:32:47Z,2020-03-16T13:56:29Z
12576,Stable/3.0.x,"The admin page for Django cannot be accessed,and the program will exit",NonCover,b'invalid',2020-03-16T09:47:50Z,2020-03-16T09:52:28Z
12575,Bumped minimum ESLint version to 6.8.0.,,jdufresne,None,2020-03-16T02:21:03Z,2020-03-16T15:19:03Z
12574,Removed bundled QUnit in favor of npm package.,,jdufresne,None,2020-03-16T02:02:21Z,2020-03-17T14:44:43Z
12573,Removed unused return values in SelectFilter2.js.,,jdufresne,None,2020-03-15T23:35:53Z,2020-03-21T14:07:47Z
12572,Fixed #31365 -- Removed jQuery usage in SelectFilter2.js.,https://code.djangoproject.com/ticket/31365,jdufresne,None,2020-03-15T17:49:30Z,2020-03-24T13:28:36Z
12571,Updated to QUnit 2.9.3.,,jdufresne,None,2020-03-14T22:15:20Z,2020-03-16T15:05:11Z
12570,Fixes #25113: ORM does not support SQL `NOT IN` clauses,"Via `exclude` and `Q` objects, Django currently supports `NOT (id IN (…))`, but does not support `id NOT IN (…)`. These clauses do not necessary produce the same results.

This P.R. adds a `__notin` filter.

Thank you to @adamchainz for pointing me in the right direction on the Django Forum: https://forum.djangoproject.com/t/django-orm-equivalent-of-sql-not-in-query/1480",FlipperPA,None,2020-03-14T21:32:00Z,2020-08-23T20:18:10Z
12569,Simplified SelectFilter2 with Element.closest().,https://developer.mozilla.org/en-US/docs/Web/API/Element/closest,jdufresne,None,2020-03-14T21:01:18Z,2020-03-21T14:07:45Z
12568,Fixed #31363 -- Added support for negative integers to intword template filter.,,jay20162016,None,2020-03-14T16:35:50Z,2020-03-16T09:23:13Z
12567,Fixes #11836 -- Missing django.forms.widgets.MultiWidget hidden counterpart,"[Ticket](https://code.djangoproject.com/ticket/11836)

Currently `MultipleHiddenInput` gives each subwidget the same name. This pull request appends an index reference and therefore gives consistency to other widgets. 

I've added an attribute so that the new behaviour can be turned off, to enable backwards compatibility. I've currently defaulted to `True` as I think this is the right thing to do (it improves consistency) and it also shows the impact on the entire test suite. 

I think the key 'design' decisions are:

- Do we need the flag to enable the behaviour to be change at all
- Do we put this on a deprecation path, to remove the flag in future
- Do we default to True/False

",smithdc1,None,2020-03-14T07:20:04Z,2020-04-07T18:41:07Z
12566,Fixed #31362 -- Removed nonexistent choices attribute from MultipleHiddenInput's docs.,"This [commit](https://github.com/django/django/commit/65c13f9675d2ca7fc1c925e7182a2e35d07ff5fb#diff-aee6730bae795d31efec3c5d014804a9) removed the choices attribute from `MultipleHiddenInput`.

Therefore lets remove the reference to it in the docs.",smithdc1,None,2020-03-14T06:25:22Z,2020-03-16T21:50:24Z
12565,Fixed #31330 -- Updated flatpages URLconf example to work with APPEND_SLASH.,Fixes [ticket 31330](https://code.djangoproject.com/ticket/31330).,hramezani,None,2020-03-13T21:36:31Z,2020-03-14T19:09:04Z
12564,"Fixed #31361 -- Fixed invalid action="""" in admin forms.",https://code.djangoproject.com/ticket/31361,jdufresne,None,2020-03-13T13:38:55Z,2020-03-16T15:04:54Z
12563,Refs #31340 -- Simplified SearchQuery by making it subclass Func.,,felixxm,None,2020-03-13T11:09:18Z,2020-03-13T19:38:15Z
12562,Refs #31224 -- Doc'd async adapter functions.,,felixxm,None,2020-03-12T22:23:53Z,2020-03-13T06:37:01Z
12561,Attic/generic auth,lijghasdflibhjadfshoifadlsh,evancasey1,None,2020-03-12T15:12:52Z,2020-03-12T15:13:29Z
12560,Fixed random auth_tests.test_tokens.TokenGeneratorTest.test_timeout failures.,Random failures depended on the current timestamp.,felixxm,None,2020-03-12T07:02:10Z,2020-03-12T09:56:42Z
12559,Fixed #31351 -- Added system checks for partial indexes and unique constraints support.,"Ticket link: https://code.djangoproject.com/ticket/31351
This pull request added warning to alert users that use MySQL/MariaDB or other DBs that doesn't support partial indexing, when they are using UniqueConstrant with conditions. The behavior is actually the same: Django will ignore the constraint, but this time it wouldn't be doing it silently.",ichlaffterlalu,None,2020-03-12T02:05:11Z,2020-04-10T18:18:36Z
12558,Fixed #31123 -- Added --include-stale-apps option to the remove_stale_contenttypes management command.,Ticket: https://code.djangoproject.com/ticket/31123,gowthamk63,None,2020-03-11T19:16:01Z,2020-03-19T11:39:34Z
12557,Increased test coverage for BaseHandler.,I noticed these two paths when I was checking tests coverage for #11650.,felixxm,None,2020-03-11T11:16:22Z,2020-03-12T06:37:19Z
12556,Fixed #31359 -- Deprecated get_random_string() calls without an explicit length.,,claudep,None,2020-03-11T08:49:53Z,2020-05-10T20:59:34Z
12555,test purposes,,TaTRaTa,None,2020-03-10T23:03:10Z,2020-03-11T06:30:18Z
12554,Fixed typo in tests/forms_tests/widget_tests/test_clearablefileinput.py docstring.,The description of the test should say `is_required`,smithdc1,None,2020-03-10T21:56:54Z,2020-03-11T19:20:50Z
12552,Refs #26445 -- Allowed using UserManager.create_user()/create_superuser() in migrations.,"[Ticket 26445](https://code.djangoproject.com/ticket/26445)
Continue @felixxm [PR](https://github.com/django/django/pull/8268).
Try to address @charettes [comment](https://github.com/django/django/pull/8268#discussion_r109012729)",hramezani,None,2020-03-10T21:24:24Z,2020-07-06T10:12:26Z
12551,Corrected learn_cache_key() signature in docs.,Follow up to b22415214a7bdeaf8ccd7b8b21872038ab865991.,felixxm,None,2020-03-10T07:34:45Z,2020-03-10T07:55:03Z
12550,FIxed TIcket 31354: Include Port in Host when not default,"When constructing the authority (host+port) for a URI it should
include the port number if the port is not the standard port for
the given scheme (80 for HTTP, 443 for HTTPS).

This change ensures that calls to `request.build_absolute_uri()`
will return a correct URL when the SERVER_PORT (or X_FORWARDED_PORT)
is something other than the default.",dgcgh,None,2020-03-10T04:06:32Z,2020-05-04T04:03:30Z
12549,Fixed #26513 -- Added tests for <Backend>GeometryColumns.geom_col_name().,Fixes [Ticket 26513](https://code.djangoproject.com/ticket/26513).,hramezani,None,2020-03-09T22:18:05Z,2020-03-10T11:27:28Z
12548,Added additional note that tests use locmem email backend.,,adamchainz,None,2020-03-09T19:38:33Z,2020-03-25T15:15:20Z
12547,Ref #31169: Rewrite ParallelTestRunner to use `spawn` as start method,"This PR is no where close to being finished. There even might be some naive coding decisions I've made. I've tested it on Windows and on Linux, both running Postgres.

This patch doesn't support spawn with SQLite since the database is in-memory. There are two workarounds I can think of:
1. Don't allow in-memory databases, parallel, and spawn together. 
2. SQL Dump the in-memory database and then re-create the database in the child processes.

The problem with the second one is, afaik, there isn't a way to dump an SQLite DB with the ORM. However, the sqlite3 module provides a method for it (`Connection.iterdump()`). I wasn't sure how to tackle that, hence left it out of the patch.

Please test out this patch on your primary OS and database.
",abhijeetviswa,None,2020-03-09T18:56:48Z,2020-05-10T15:35:06Z
12546,Fixed #29214 -- Fixed invalid SQL on using a subquery with an outerref having joins,Thanks Simon for all the guidance.,ChetanKhanna,None,2020-03-09T18:47:39Z,2020-08-07T10:20:26Z
12545,Corrected get_cache_key() signature in docs.,,verhovsky,None,2020-03-09T17:23:04Z,2020-03-10T07:12:58Z
12544,Refs #29299 -- Add type annotations to gettext.,"Can add more of these if patches like these are welcome. They would help our project, if present.",PetterS,None,2020-03-09T15:54:38Z,2020-03-09T17:25:33Z
12543,Fixed #27865 -- Adjusted docs example to avoid confusion with private BaseManager.,"Rename BaseManager to CustomManager in docs to avoid any confusion with django.db.models.manager.BaseManager and use MyManager as the Manager for MyModel.

Fixes https://code.djangoproject.com/ticket/27865",radwon,None,2020-03-08T21:23:46Z,2020-03-10T08:14:31Z
12542,Fixed #31350 -- Fixed typo in docs/topics/db/optimization.txt.,"…cess optimization

Fixes https://code.djangoproject.com/ticket/31350",sks444,None,2020-03-08T10:49:38Z,2020-03-09T06:54:40Z
12541,Fixed #31347 -- Checked allow_migrate() in CreateExtension operation.,Fixes [ticket 31347](https://code.djangoproject.com/ticket/31347),hramezani,None,2020-03-07T21:16:45Z,2020-03-09T11:34:16Z
12540,Refs #30489 -- Fixed RasterFieldTest.test_deserialize_with_pixeltype_flags() when run without numpy.,"See [test failure](https://djangoci.com/job/master-no-requirements/database=postgis,label=bionic,python=python3.8/lastCompletedBuild/testReport/gis_tests.rasterapp.test_rasterfield/RasterFieldTest/test_deserialize_with_pixeltype_flags/).",felixxm,None,2020-03-07T20:37:32Z,2020-03-07T21:46:20Z
12539,Fixed #31349 -- Used :nth-child() CSS pseudo-class to style alternative rows in admin.,https://code.djangoproject.com/ticket/31349,jdufresne,None,2020-03-07T18:33:55Z,2020-03-09T13:36:52Z
12538,Backport of fix for #30093,"Backporting fix for #30093

Ticket: https://code.djangoproject.com/ticket/30093
Original PR: https://github.com/django/django/pull/10842",uskudnik,None,2020-03-06T16:03:48Z,2020-03-06T19:31:55Z
12537,Optimized a bit handle() of sqlmigrate management command.,,felixxm,None,2020-03-06T12:19:08Z,2020-03-06T12:38:58Z
12536,Added missing backticks in various docs.,,felixxm,None,2020-03-06T09:58:22Z,2020-03-06T10:52:56Z
12535,Updated migrations example in tutorial 2.,Follow up to a97845a823c86b1d6e65af70fbce64e6e747e081.,felixxm,None,2020-03-06T07:47:15Z,2020-03-10T07:53:51Z
12534,Refs #31304 -- Made __search lookup default to its rhs' config.,"This make the `SearchLookup` lookup more coherent with its `SearchVectorExact` base which configures its rhs `SearchQuery` with its lhs' config.

---

Follow up to https://code.djangoproject.com/ticket/31304#comment:10",charettes,None,2020-03-06T05:04:27Z,2020-03-06T14:26:57Z
12533,Fixed #31345 -- Added BaseDatabaseIntrospection.get_relations().,,shankarj67,None,2020-03-06T04:59:04Z,2020-03-06T08:40:46Z
12532,Fixed #8760 -- Changed ModelMultipleChoiceField to use invalid_list as a error message key.,"[Ticket](https://code.djangoproject.com/ticket/8760)

This longstanding issue had a patch provided by some years ago. However, Tim raised the question about if and how this should be implemented. e.g. if we accept this change is it ok as a backwards incompatible change or do we try a deprecation path. 

I've put together this PR to help this discussion. Making this change only broke one minor test which I've provided a fix for, hopefully this can help the debate. 

I'm not sure if this is a simple decision that can be made here or if wider discussion (on the mailing list) is warranted. 

Appreciate your views & guidance. ",smithdc1,None,2020-03-05T22:30:13Z,2020-03-16T21:55:49Z
12531,Fixed #31342 -- Clarified docs about using base managers for related objects.,The query keeps coming up. Linking back to the Making Queries topic page seems the best approach. ,carltongibson,None,2020-03-05T15:05:33Z,2020-03-06T10:43:52Z
12530,Refs #31224 -- Added autoconversion of test async methods.,,felixxm,None,2020-03-05T13:32:12Z,2020-03-05T14:13:25Z
12529,Doc'd return values of as_sql() for Func and query expressions.,Mostly to make it clear that `params` may be a list or tuple.,adamchainz,None,2020-03-05T08:52:02Z,2020-03-25T15:16:20Z
12528,Fixed #31341 -- Doc'd minimal gettext version with ES6 template strings support.,,claudep,None,2020-03-05T08:05:49Z,2020-03-05T13:51:51Z
12527,Fixed GeoQuerySetTest.test_unionagg_tolerance() test on Oracle 18c.,,felixxm,None,2020-03-05T06:55:43Z,2020-03-05T07:55:38Z
12526,Fixed #20935 -- ePub documentation not valid,"[Ticket](https://code.djangoproject.com/ticket/20935)

This fixes ""NAV-011"" errors in the epub file. 

My approach here has been to add :rubric: headings. They are styled as H2 headings but are not included in the TOC. 

I felt this approach resulted in a lower impact than having a large restructure of the documentation. The downside of this approach is these headings are no longer included in the TOC and therefore the heading's no longer generate a link. 

Having run epub check this leaves the following errors.
{'HTM-003': 72, 'OPF-029': 4, 'PKG-021': 4, 'OPF-073': 2}
",smithdc1,None,2020-03-04T21:59:30Z,2020-03-11T19:21:16Z
12525,Fixed #31340 -- Allowed query expressions in SearchQuery.value and __search lookup.,ticket-31340,bmispelon,None,2020-03-04T13:36:58Z,2020-03-16T11:27:27Z
12524,Refs #30489 -- Made from_pgraster()/to_pgraster() use BANDTYPE_FLAG_HASNODATA and bitwise operators for nodata flag.,,felixxm,None,2020-03-04T13:14:35Z,2020-03-04T13:45:55Z
12523,Clarified SeparateDatabaseAndState docs and added example of changing ManyToManyField.,"The `SeparateDatabaseAndState` documentation has always been too short and non-visual for how often one ends up using it (at least, I do). This adds an example and rewords it to point to `RunSQL.state_operations` and be less patronizing about avoiding it.",adamchainz,None,2020-03-03T17:53:05Z,2020-03-25T15:16:33Z
12522, Fixed #30489 -- Fixed RasterField deserialization with pixeltype flags.,"[Ticket 30498](https://code.djangoproject.com/ticket/30489).
I have fixed @felixxm comment on [PR](https://github.com/django/django/pull/11381)
The solution was proposed by @ivorbosloper.",hramezani,None,2020-03-03T14:29:52Z,2020-03-05T09:08:15Z
12521,Fixed #31333 -- Added BaseDatabaseIntrospection.get_table_description().,,aryan9600,None,2020-03-03T10:39:07Z,2020-03-04T11:49:25Z
12520,Documented default value of InlineModelAdmin.extra.,As I just helped a user discover on the forums: https://forum.djangoproject.com/t/inlinemodeladmin-options-and-stackedinline/1336/2,adamchainz,None,2020-03-02T17:31:20Z,2020-03-25T15:16:34Z
12519,Fixed #31150 -- Included subqueries that reference related fields in GROUP BY clauses.,"ticket-31150

Thanks Johannes Hoppe for the report.

Regression in fb3f034f1c63160c0ff13c609acd01c18be12f80.",felixxm,None,2020-03-02T12:53:06Z,2020-03-03T10:25:42Z
12518,Fixed #31318 -- Allowed sqlmigrate to inspect squashed migrations.,"Hi!

https://code.djangoproject.com/ticket/31318
Currently when calling `sqlmigrate` on a migration that is being replaced by a squash migration (because the migration is in the `replaces` class attribute of the squad migration), then we get a KeyError.

I tackled the patch and I suggest a **commit-by-commit** review.

The approach I took is interfere as less as possible with the existing migration graph and keep its logic as it is. Currently, the migration graph seems to represent one migration hierarchy and database evolution schema. Intervening in the ""forward state"" logic in the graph would have affected lots of logic in the Django migration system.
Instead, I added a flag enabling loading the migration graph (by the migration loader obviously) without replacing the migrations by squashed migrations. This flag enables to keep entire logic as it is, but just have another representation of the migration graph that we will use instead and just for `sqlmigration`.",David-Wobrock,None,2020-03-01T22:17:19Z,2020-03-09T08:21:23Z
12517,Fixed #29329 -- Made datetime logging from runserver more consistent.,ticket-29329,hramezani,None,2020-03-01T20:35:12Z,2020-04-16T11:21:37Z
12516,fix ticket ref,"looking at the commit that added this message,
https://github.com/django/django/commit/663e48947ff8ef3e6a6275bda2d1ee1b0de13be3
it looks like there's a typo in the ref here.",davidszotten,None,2020-03-01T19:28:22Z,2020-03-02T08:08:29Z
12515,Refs #26064 -- Avoided unnecessary list slicing in migration optimizer.,The in_between list is only necessary if an optimization is possible.,charettes,None,2020-03-01T18:49:50Z,2020-03-02T14:35:44Z
12514,Fixed #31255 - Fixed AutoDetector from creating redundant RemoveFields.,"`DeleteModel` and `RemoveField` weren't aware of what they were holding a reference to.  @charettes wrote some logic and refactored the `reduce()` and `references_field()` method of `DeleteModel` and `RemoveField` to solve the issue. Building on top of that, I fixed the `ManyToManyField` optimizations that were broken because of the changes.",aryan9600,None,2020-03-01T18:02:27Z,2020-10-02T07:05:33Z
12513,Fixed #31327 -- Deprecated providing_args argument for Signal.,https://code.djangoproject.com/ticket/31327,jdufresne,None,2020-03-01T17:34:20Z,2020-03-21T14:07:49Z
12512,Fixed #31324 -- Use IS NULL in JSONField lookups whole_field=None,,ndtretyak,None,2020-03-01T11:29:09Z,2020-03-18T10:35:48Z
12511,Refs #31320 -- Warned against using BEGIN/COMMIT in RunSQL.,[Ticket](https://code.djangoproject.com/ticket/31320),adamchainz,None,2020-03-01T11:21:09Z,2020-07-20T10:16:03Z
12510,Update client.py to handle latest version of MySQL 8 with dbshell,"…bshell

client.py for MySQL 8 has been updated to handle changes from previous versions. This change is backwards compatible MySQL 8 'DEFAULTS' in settings.py must be explicitly set for the new changes to take effect.  Otherwise, without the MySQL 'DEFAULTS' in settings.py, older code or apps with older versions of MySQL will continue to work.",w3b-net-au,None,2020-02-29T15:15:11Z,2020-03-02T08:19:40Z
12509,"Update client.py for latest MySQL versions, add new options for settings.py","The backend MySQL client.py appears to need an update for the latest versions of MySQL.  In particular the executable is mysqlsh, or 'mysqlsh mysql', the last argument without an --opt= is the host name, not the database schema, and there's options to use classic SQL sessions, JS sessions and Python session. Add mysql_version which comes from settings.  New settings variables in settings.py for the database config section include 'MYSQL_VERSION' : 8, 'MYSQL_CLASSIC_SESSION' : True,|False 'MYSQL_JAVASCRIPT_SESSION: True|False, 'MYSQL_PYTHON_SESSION' : True}|False.

For example:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'MYSQL_VERSION': 8,
        'SQL_CLASSIC_SESSION': True,
        # 'JAVASCRIPT_SESSION': True,
        # 'PYTHON_SESSION': True,
        'NAME': 'my_database',
        'USER': 'dbuser',
        'PASSWORD': 'dbuser',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}",w3b-net-au,None,2020-02-29T13:33:15Z,2020-02-29T14:19:48Z
12508,Fixed #29501 -- Allowed dbshell to pass options to underlying tool.,[Ticket](https://code.djangoproject.com/ticket/29501),adamchainz,None,2020-02-29T08:15:13Z,2020-04-15T10:47:46Z
12507,Removed outdated note about not supporting partial indexes by Django.,Supported since a906c9898284a9aecb5f48bdc534e9c1273864a6.,felixxm,None,2020-02-28T17:14:12Z,2020-02-29T19:35:15Z
12506,Fixed #31301 -- Fixed crash of QuerySet.bulk_create() with mixed empty and set ForeignKeys to AutoFields on Oracle.,"Added support for nullable AutoField, SmallAutoField and BigAutoField",HansAarneLiblik,None,2020-02-28T07:00:27Z,2020-02-28T13:40:46Z
12503,Fixed #31314 -- Raised CommandError when locale is not specified in makemessages.,"`makemessages` needs either the `--locale`, `--exclude`, or the  `--all` flag to work properly. Failure to pass one of those three flags should result in `CommandError`, but that is currently broken because of a small bug.

This PR fixes this issue, which has been reported as ticket #31314 in the issue tracker.

https://code.djangoproject.com/ticket/31314",cmackenziek,None,2020-02-27T12:47:46Z,2020-02-28T10:28:56Z
12502,Fixed #31032 -- Updated admin browser support FAQ for 2020.,"ticket-31032

Following web standards, the modern _evergreen_ browsers are all supported.
This applies equally to mobile platforms. Assuming current trends continue,
this should be a sustainable policy.

Microsoft deprecated all versions of Internet Explorer. IE 11, the last
version, is described as a ""compatibility solution"" rather than a web browser.
Whilst it will receive security updates for the lifetime of Windows 10 it's use
is actively discouraged.

The IE 11 downloads page makes it clear:

> We recommend you use the new Microsoft Edge.

References:

* https://techcommunity.microsoft.com/t5/windows-it-pro-blog/the-perils-of-using-internet-explorer-as-your-default-browser/ba-p/331732
* https://support.microsoft.com/en-us/help/17454/lifecycle-faq-internet-explorer-and-edge
* https://support.microsoft.com/en-gb/help/17621/internet-explorer-downloads",carltongibson,None,2020-02-27T09:34:35Z,2020-02-28T12:19:40Z
12501,Fixed #123456 -- Added a shortcut function to make toast.,Fixed #123456 -- Added a shortcut function to make toast.,ngotienthang,None,2020-02-27T06:30:48Z,2020-02-27T06:53:07Z
12500,Fixed #31312 -- Properly ordered temporal subtraction params on MySQL.,"Refs #31133

Regression introduced by 9bcbcd599abac91ea853b2fe10b784ba32df043e.",charettes,None,2020-02-27T05:36:56Z,2020-02-27T08:20:31Z
12499,Fixed #31313 -- Fixed is_upperclass() example in enumeration types docs.,"In `docs/ref/models/fields.txt` documentation example fixed, class instance
was lost for Field.choices Enumeration types.",dorosch,None,2020-02-27T05:32:57Z,2020-02-27T07:53:53Z
12498,Fixed #31311 -- Removed unneeded escapes in validator regexes. ,,kimbo,None,2020-02-26T18:18:09Z,2020-02-28T10:28:57Z
12497,Fixed #31310 -- Fixed hints in checks for using intermediate model with ambiguous foreign key.,Changed ForeignKey to ManyToManyField and removed outdated symmetrical=False keyword argument.,matheuscmotta,None,2020-02-26T18:12:31Z,2020-02-28T18:09:00Z
12496,Fixed #29129 -- Skipped UPDATE when adding a model instance with primary key that has a default.,"[ticket 29129](https://code.djangoproject.com/ticket/29129)

Couldn't think of a better model name for the testcase.",abhijeetviswa,None,2020-02-26T17:59:25Z,2020-03-05T11:29:48Z
12495,Removed hint from fields.E310 message in system check docs.,This is the only documented hint.,felixxm,None,2020-02-26T09:02:06Z,2020-02-26T11:00:56Z
12494,Fixed #31309: Add X-UA-Compatible to the admin base template.,,PetterS,None,2020-02-26T08:53:04Z,2020-02-26T10:29:45Z
12493,A few contrib.postgres.search cleanups.,A few things I identified while investigating https://code.djangoproject.com/ticket/31304,charettes,None,2020-02-25T14:53:54Z,2020-02-26T07:38:18Z
12492,Fixed #99999 -- Added a shortcut function to make toast.,,ngotienthang,None,2020-02-25T08:42:13Z,2020-02-25T08:47:47Z
12491,Fixed #31306 -- Raise ValidationError only on first failure validator.,Changed fields validators model validation error occurs when first validator failed.,dorosch,None,2020-02-25T07:53:13Z,2020-02-25T08:15:09Z
12490,Fixed #31307 -- Fixed filter_horizontal add/remove SVG :hover positioning.,"ticket-31307

Fix: Arrow display error in filter_horizontal field when width less than 1024px",007gzs,None,2020-02-25T00:38:00Z,2020-02-27T14:39:15Z
12489,Fixed #31251 -- Disabled grouping by OuterRef() annotation.,,rohitjha941,None,2020-02-24T19:34:58Z,2020-02-27T12:28:32Z
12488,Fixed backends tests on Oracle.,Using `Person` in `test_introspection` caused removing constraints in intermediate table for `ManyToManyField` in `VeryLongModelNameZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ` that were expected by other transaction tests. A model without any constraints was used to prevent isolation issues.,felixxm,None,2020-02-24T11:41:30Z,2020-02-24T13:22:04Z
12487,Fixed #31303 -- Removed outdated note about symmetrical intermediate table for self-referential ManyToManyField.,"Previously it was required to set symmetrical=False for m2m
relationship from a model to itself with intermediary model.
But this isn't the case since Django 3.0.",matheuscmotta,None,2020-02-23T22:28:10Z,2020-02-24T22:52:24Z
12486,Fixed #28280 -- Prevented numberformat.format() from formatting large/tiny floats in scientific notation.,"Fixes [Ticket 28289](https://code.djangoproject.com/ticket/28280).
Test cases copied from [old PR](https://github.com/django/django/pull/8612).",hramezani,None,2020-02-23T13:42:26Z,2020-02-26T15:37:23Z
12485,Fixed #31293 -- Allowed MultiPartParser to handle double-quoted encoded headers.,ticket-31293,007gzs,None,2020-02-21T05:43:48Z,2020-02-28T14:05:07Z
12484,Fixed #31289 -- Added hint for USERNAME_FIELD/REQUIRED_FIELDS system check.,"Patch for [#31289](https://code.djangoproject.com/ticket/31289). I messed up while rebasing, so I deleted my upstream branch and created a new one. Thus, I had to create a new PR. I will make sure to be more careful in the future.",aryan9600,None,2020-02-20T18:26:04Z,2020-02-26T08:51:05Z
12483,Improved performance of admin changeform_view.,"Fixes [Ticket 31353](https://code.djangoproject.com/ticket/31353).
This change prevents validation of all formsets when `form_validated=Flase`.",hramezani,None,2020-02-20T15:22:43Z,2020-03-10T06:40:53Z
12481,Fixed #31182 -- Noted limitations of current async support,,adamchainz,None,2020-02-20T08:55:11Z,2020-03-25T15:16:35Z
12480,Fixed #31289 -- Added hint for USERNAME_FIELD/REQUIRED_FIELDS system check. ,Patch for [ticket #31289](https://code.djangoproject.com/ticket/31289).,aryan9600,None,2020-02-20T07:09:24Z,2020-02-20T18:21:36Z
12479,Fixed #31291 -- Renamed salt to mask for CSRF tokens.,Relevant thread: https://groups.google.com/forum/#!topic/django-developers/SokWmLcIkds,cool-RR,None,2020-02-20T06:19:06Z,2020-02-25T13:16:36Z
12478,Captured logging in DebugViewTests with assertLogs().,,jdufresne,None,2020-02-20T04:33:29Z,2020-03-21T14:07:49Z
12477,Fixed #31185 -- Fixed detecting of unique fields in ForeignKey/ForeignObject checks when using Meta.constraints.,"Fixed #31185 -- Adjusted model check for UniqueConstraints without conditions
.
Changed _check_unique_target to take into account UniqueConstraints without conditions. Added test in invalid_models_tests, and changed code to take into account pre-existing method total_unique_constraints
Ticket number is [31185](https://code.djangoproject.com/ticket/31185)",lothemar,None,2020-02-19T22:26:20Z,2020-02-27T18:01:25Z
12476,"Fixed typo of ""auto_add_now"" to ""auto_now_add"".",,jdufresne,None,2020-02-19T21:40:50Z,2020-03-21T14:07:50Z
12475,Fixed #30422 -- Added logic to remove temporary files upon upload interruption,Patch for [ticket #30422](https://code.djangoproject.com/ticket/30422).,aryan9600,None,2020-02-19T18:59:07Z,2020-08-26T11:49:01Z
12474,Refs #31224 -- Added BaseHandler.check_response().,,felixxm,None,2020-02-19T12:27:51Z,2020-02-19T13:17:00Z
12473,Fixed tests when run in reverse.,"See https://djangoci.com/view/Main/job/master-reverse/45/.

To reproduce an isolation issue, run:

```
./runtests.py mail backends --noinput --reverse --parallel=1
```

Regression in 98f23a8af0be7e87535426c5c83058e2682bfdf8.",felixxm,None,2020-02-19T11:58:49Z,2020-02-19T13:49:16Z
12472,Fixed #31286 -- Made database specific fields checks databases aware.,"Further tests required(or not?).
Current test cases don't cover the case when the user provides multiple databases, e.g.:
```python manage.py check --database dba --database dbb```
",Taoup,None,2020-02-19T11:25:51Z,2020-02-24T16:37:57Z
12471,Fixed #31288 -- Added ReplaceAuthMiddleware,https://code.djangoproject.com/ticket/31288,TheoHd,None,2020-02-19T11:12:11Z,2020-02-19T11:33:51Z
12470,"Fixed #31285 -- Fixed inherited Meta.ordering of ""-pk"".",https://code.djangoproject.com/ticket/31285,jdufresne,None,2020-02-19T04:48:55Z,2020-03-21T14:07:51Z
12469,Fixed #29724 -- Fixed timezone handling in ModelAdmin.date_hierarchy queries.,"Fixes [ticket 29724](https://code.djangoproject.com/ticket/29724).
Refresh [current PR](https://github.com/django/django/pull/10380).
Fixed failed tests by adding `is_dst = True` to `Trunc`.

",hramezani,None,2020-02-18T14:18:28Z,2020-03-25T20:24:08Z
12468,Fixed typos in docs and a test comment.,"The word ""the"" is repeated. I propose to remove one.",YooInKeun,None,2020-02-18T12:55:58Z,2020-02-19T06:28:35Z
12467,Fixed #31292 -- Fixed django.contrib.gis.gdal.gdal_full_version() crash.,"The ctypes signature uses a 'c_char_p' type. The `gdal_version()` was updated in 5330cd50cdb to reflect that, but `gdal_full_version()` wasn't updated. It currently raises:

```
ctypes.ArgumentError: argument 1: <class 'TypeError'>: wrong type
```",vdboor,None,2020-02-18T12:22:15Z,2020-02-24T14:06:11Z
12466,Fixed #31282 -- Corrected RelatedManager docs for using add/remove/set with PKs.,"Using add/remove/set with PKs is only valid for M2M.
Added tests showing errors for FK.

Regression in a44a21a22f20c1a710670676fcca798dd6bb5ac0",carltongibson,None,2020-02-18T09:25:45Z,2020-02-18T18:54:34Z
12465,Fixed #31271 -- Preserved ordering when unifying query parameters on Oracle.,"This caused misplacing misplacing parameters in logged SQL queries.

Regression in 79065b55a70cd220820a260a1c54851b7be0615a.

Thanks Hans Aarne Liblik for the report.

ticket-31271",felixxm,None,2020-02-18T08:37:14Z,2020-02-18T10:45:32Z
12464,Fixed #31228 -- Reallowed aggregates to be used with multiple expressions and no DISTINCT on SQLite.,"Aggregation with multiple expressions and no DISTINCT raises NotSupported Error on sqlite backend.
",Taoup,None,2020-02-18T07:34:42Z,2020-02-18T10:35:42Z
12463,Fixed #30040 -- Used default permission name in docs examples to avoid confusion.,"Fixes [ticket 30040](https://code.djangoproject.com/ticket/30040).
Continue to [PR](https://github.com/django/django/pull/10757).
Changed previous pr `polls` app related permission `'polls.add_vote'` to `'polls.add_choice'` based on @claudep [comment](https://code.djangoproject.com/timeline?from=2018-12-17T13%3A44%3A06-06%3A00&precision=second).
The remain `add_vote` permissions don't related to `polls` app and I didn't change them.",hramezani,None,2020-02-17T15:31:54Z,2020-02-19T14:39:49Z
12462,Update tut 2 to add Choice admin,"Later on the tutorial asks us to vote without selecting and selecting things, but we never added or are told to add the choice field to the admin panel.

Or notify the reader at some point that choices aren't there and cant be added just yet till tut 7",Saduk0,None,2020-02-16T15:02:02Z,2020-02-17T10:54:41Z
12461,Fixed #31277 -- Relaxed system check of m2m intermediary tables for db_table collision when database routers are installed.,https://code.djangoproject.com/ticket/31277,Qu4tro,None,2020-02-16T00:32:46Z,2020-02-17T12:55:14Z
12460,Fixed #31274 -- Used signing infrastructure in SessionBase.encode()/decode().,,claudep,None,2020-02-15T11:21:51Z,2020-03-02T13:15:43Z
12459,Fixed #31144 -- Relaxed system check for max_length of CharFields on MySQL/MariaDB by turning into a warning.,,rohitjha941,None,2020-02-14T19:18:17Z,2020-03-20T11:29:12Z
12458,Fixed #31051 -- Allowed dumpdata to handle circular references in natural keys.,"This is a slightly cleaned up version of #12166, fixing just ticket-31051.",matthijskooijman,None,2020-02-14T17:31:01Z,2020-04-07T19:22:00Z
12457,Removed unused and incorrect PossessedCar.__str__() method in test_utils.,`PossessedCar` doesn't have a color.,felixxm,None,2020-02-14T10:43:24Z,2020-02-14T12:16:21Z
12456,Removed redundant MiddlewareTest.test_old_style_request() test.,`CurrentSiteMiddleware.process_request()` is already covered by `MiddlewareTest.test_request()`.,felixxm,None,2020-02-14T09:39:15Z,2020-02-14T10:00:54Z
12455,Fixed #7664 -- Allowed customizing suffixes of MultiWidget.widgets' names.,"Allows names to be passed into MultiWidget and name it's sub widgets. [Ticket #7664.](https://code.djangoproject.com/ticket/7664)

This ticket had a patch written some time ago. I've therefore created this pull request with the original patch to try and close this ticket. 
",smithdc1,None,2020-02-13T22:36:33Z,2020-03-24T19:42:19Z
12454,Refs #27468 - Changed default Signer algorithm to SHA-256.,,claudep,None,2020-02-13T20:21:39Z,2020-04-15T18:32:09Z
12453,Fixed #26552 -- Deferred constraint checks when reloading the database with data for tests.,"This is a subset of PR #12166, just fixing issue-26552.",matthijskooijman,None,2020-02-13T20:03:27Z,2020-05-28T13:15:13Z
12452,Stable/2.0.x,"I'm so sorry, it was a missclick. I though that PR would go to my forked repo, not to main repo. That PR was like ""back to the future"". I'm yet  junior on github. Thanks for help.",PeterZhukov,None,2020-02-13T19:04:58Z,2020-02-13T19:25:07Z
12451,Fixed #31270 -- Doc'd RedirectView.get_redirect_url() arguments.,Fixes [ticket 31270](https://code.djangoproject.com/ticket/31270),hramezani,None,2020-02-13T15:07:41Z,2020-02-14T09:33:17Z
12450,Removed unused cache.tests.CacheUtils._set_cache().,Unused since its introduction in 71a03e01aa19cbde08e915d156abf39b67d904ef.,felixxm,None,2020-02-13T12:55:00Z,2020-02-13T13:17:21Z
12448,Fixed #31267 -- Added tests cases with empty username or password for URLValidator.,"Hi 
I added more test cases to cover credentials in URL validation and added myself as an AUTHOR. 

https://code.djangoproject.com/ticket/31267

",kinkerl,None,2020-02-12T20:10:20Z,2020-02-13T07:51:56Z
12447,Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.,,francoisfreitag,None,2020-02-12T13:56:47Z,2020-04-28T09:11:27Z
12446,Fixed #31250 -- Ignored processing instructions in assertXMLEqual()/assertXMLNotEqual().,Fix compare_xml function in assertXMLEqual and assertXMLNotEqual,yurasavin,None,2020-02-12T10:40:47Z,2020-02-13T10:04:36Z
12445,formatting strings use format() function,"the strings are in old style, i change for the new style.",JAugusto42,None,2020-02-12T01:48:16Z,2020-02-12T05:40:13Z
12443,Making Django's documentation website's sidebar column fixed,"As there is a lot of scrolling in the Django docs website It would be better to make the sidebar fixed and add scrolling to it. Like w3schools does.



After some reading i need to scroll up to the top to find the contents.

What do you guys think?



Post image",csandreas1,None,2020-02-11T20:22:24Z,2020-02-12T05:43:51Z
12442,Increased test coverage for MultiValueDict.update.,"I don't know how to trigger `TypeError`, and my attempts only triggered an`AttributeError`. The code is mostly from 2005-6, and not covered by tests. Probably Python changed a lot in the mean time.

https://github.com/django/django/blob/master/django/utils/datastructures.py#L206-L208 I couldn't really figure out to target this.",atombrella,None,2020-02-11T13:17:03Z,2020-10-05T17:47:54Z
12441,Fixed #30261 -- Prevented Form._html_output() from mutating errors when hidden fields have errors.,"Fixes [ticket 30261](https://code.djangoproject.com/ticket/30261).
The initial fix on the ticket was:

`top_errors = self.non_field_errors().copy()`

But, this causes some tests to fail, e.g: `forms_tests.tests.test_forms.FormsTestCase.test_only_hidden_fields`

and we needed to add another fix for `ErrorList` class constructor like:
```diff
diff --git a/django/forms/utils.py b/django/forms/utils.py
index 5ae137943a..ac5de676c5 100644
--- a/django/forms/utils.py
+++ b/django/forms/utils.py
@@ -83,8 +83,9 @@ class ErrorList(UserList, list):
     """"""
     def __init__(self, initlist=None, error_class=None):
         super().__init__(initlist)
-
-        if error_class is None:
+        if isinstance(initlist, ErrorList):
+            self.error_class = initlist.error_class
+        elif error_class is None:
             self.error_class = 'errorlist'
         else:
             self.error_class = 'errorlist {}'.format(error_class)
```
So, I fixed it with `copy.deepcopy`.",hramezani,None,2020-02-10T21:49:56Z,2020-02-13T07:31:46Z
12440,Fixed #30846 -- Made PostGIS backend respect Index's name argument.,,Pratik1999,None,2020-02-10T06:08:11Z,2020-02-10T14:26:24Z
12439,Added django logo on Technical 404 page,,thewolfcommander,None,2020-02-10T00:55:24Z,2020-02-10T06:34:18Z
12437,Fixes ka_GE casing issue for new Unicode 11 standard,"Georgian Script Casing in Python 3.7 and Unicode 11

The problem is in all versions starting with python 3.7, let's go back a little and follow what happened.
So with the new version of [Unicode 11 (June 5, 2018)](https://unicode.org/versions/Unicode11.0.0/) we have some major changes for the Georgian script. Georgian was considered a monocameral (non-casing) script. Therefore, Georgian letters were gc=Lo(Letter, Other) and starting from the version 11 [Unicode 11.0, those Georgian letters are now gc=Ll(Letter, Lowercase)](https://www.unicode.org/versions/Unicode11.0.0/#Migration). In python 3.7 first release(June 27, 2018), we have implementation of Unicode 11 and manipulation on the Georgian scripts (capitalize, titlecasing, uppercase) gives us strange symbols on the output.


ex. shown below

```
Python 3.7.5 (default, Oct 17 2019, 12:21:00) 
[GCC 8.3.1 20190223 (Red Hat 8.3.1-2)] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> 'ა'
'ა'
>>> 'ა'.upper()
'Ლ'
>>> print('ა'.upper())
Ლ
>>> print('ლაშა'.upper())
ᲚᲐᲨᲐᲐ
>>> print('ლაშა'.capitalize())
Ლაშა
```
[Casting issue on the Python issue tracker](https://bugs.python.org/issue37121)

The bug is in `capfirst` [link](https://docs.djangoproject.com/en/3.0/ref/templates/builtins/#capfirst) and `upper` [link](https://docs.djangoproject.com/en/3.0/ref/templates/builtins/#upper) methods 

These is django builtin tags, which is used to capitalize the first letter of a string and converts a string into all uppercase. When i used to this tag in  template gives me strange symbols on the output.

Also, this bug affects the Django ain because this filter tag is used in model forms and templates in Django admin.

[fixes implementation](https://gist.github.com/Lh4cKg/16a8433affb1636086ba2c51dcfbe1f3)",Lh4cKg,None,2020-02-09T12:50:34Z,2020-02-12T08:31:27Z
12436,Fixed #31249 -- select_for_update 'of' crashed with Multilevel Inherited models,"Evaluating a queryset, with select_for_update 'of' referencing a
parent model two levels up from the queryset model, crashed with
IndexError.

This PR excepts the patch from PR #12434 (Ticket #31246). Hence, the added test case will fail.",abhijeetviswa,None,2020-02-09T06:18:15Z,2020-02-10T07:31:20Z
12435,Fixed #31248 -- Added missing space before USING SQL on PostGIS.,Ticket: https://code.djangoproject.com/ticket/31248,hannseman,None,2020-02-08T19:32:14Z,2020-02-10T10:54:23Z
12434,Fixed #31246 -- Fixed locking models in QuerySet.select_for_update(of=()) for related fields and parent link fields with multi-table inheritance.,"When a related model (with parents) is specified in `of` for select_for_update,
the `of` clause of the generated query references the field's parent model
instead of the field's model.",abhijeetviswa,None,2020-02-08T05:10:06Z,2020-02-11T20:35:58Z
12433,Fixed Typo in 3.0 Async Support Docs,,joeGannuscio,None,2020-02-07T19:53:02Z,2020-02-10T14:18:16Z
12432,Refs #31055 -- Fixed Model.check() call in ConstraintsTests.test_check_constraints_required_db_features().,A system check for `CheckConstraint`'s is ignored without passing `databases`.,felixxm,None,2020-02-07T14:07:59Z,2020-02-08T16:23:39Z
12431,Fixed #31240 -- Properly closed FileResponse when wsgi.file_wrapper is used.,,apollo13,None,2020-02-07T11:57:36Z,2020-02-11T19:39:13Z
12430,Fixed #31253 -- Fixed data loss possibility when using caching from async code.,Case missed in a415ce70bef6d91036b00dd2c8544aed7aeeaaed.,jdufresne,None,2020-02-07T02:03:56Z,2020-03-21T14:07:52Z
12428,Closed caches in clear_cache_handlers() signal handler.,"When running the Django test suite, fixes warnings of the form:

    Exception ignored in: <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 39112), raddr=('127.0.0.1', 11211)>
    Traceback (most recent call last):
      File "".../django/test/signals.py"", line 30, in clear_cache_handlers
        caches._caches = Local()
    ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 39112), raddr=('127.0.0.1', 11211)>",jdufresne,None,2020-02-07T01:48:08Z,2020-03-21T14:07:54Z
12427,Fixed #31241 -- Clarified porting translations of the Django docs to docs.djangoproject.com.,"This updates https://docs.djangoproject.com/en/dev/internals/contributing/localizing/#translating-documentation .

Closes https://code.djangoproject.com/ticket/31241",tnir,None,2020-02-06T13:56:22Z,2020-02-12T14:06:40Z
12426,Fixed typo in tests/model_inheritance/tests.py.,,sobolevn,None,2020-02-06T12:23:27Z,2020-02-06T13:24:54Z
12425,Allow empty form value for nullable fields,"## The Problem

The following DB model field cannot be set to NULL from Django Admin:

```
    my_field = models.CharField(
        max_length=100,
        blank=False,
        null=True,
    )
```

Current implementation makes this field `required`.
This will change boldness of the field in HTML and backend
validator will deny empty data.

After the change it is possible to pass empty string value
from web browser and backend will treat it as NULL for DB.",kolomenkin,None,2020-02-06T12:02:43Z,2020-02-06T12:08:24Z
12424,Cleaned QuerySet.__getitem__ a little,,Taoup,None,2020-02-06T07:49:28Z,2020-08-05T10:42:40Z
12423,"Refs #31233 -- Added ""error"" filter for RuntimeWarning during tests.",,jdufresne,None,2020-02-05T23:11:49Z,2020-02-07T01:48:52Z
12422,Fixed #31268 -- Updated Algerian Arabic (ar_DZ) locale formats.,,infosrabah,None,2020-02-05T18:30:06Z,2020-02-14T21:44:54Z
12421,Refs #28214 -- Added test for escaping JSONField key lookups.,"ticket-28214

Thanks mrsanders for the report.

Fixed in 7deeabc7c7526786df6894429ce89a9c4b614086.",felixxm,None,2020-02-05T13:08:26Z,2020-02-05T13:31:36Z
12420,Improved grammar in 3.0 release notes for SECURE_CONTENT_TYPE_NOSNIFF change.,,adamchainz,None,2020-02-05T10:15:13Z,2020-03-25T15:16:36Z
12419,Fixed #31232 -- Changed default SECURE_REFERRER_POLICY to 'same-origin'.,,adamchainz,None,2020-02-05T10:02:56Z,2020-03-25T15:16:38Z
12418,Fixed #28528 -- Allowed combining SearchVectors with different configs.,[code.djangoproject.com/ticket/28528](https://code.djangoproject.com/ticket/28528),adamb70,None,2020-02-05T01:53:52Z,2020-02-06T07:20:21Z
12416,Fixed #31234 - Increase entropy in make_msgid().,https://code.djangoproject.com/ticket/31234,bsolomon1124,None,2020-02-04T21:25:17Z,2020-02-05T12:58:48Z
12415,Used assertRaisesMessage() in various tests.,,hramezani,None,2020-02-04T21:00:43Z,2020-02-07T12:16:15Z
12414,Fixed #31233 -- Closed database connections and cursors after use.,https://code.djangoproject.com/ticket/31233,jdufresne,None,2020-02-04T14:40:14Z,2020-03-21T14:07:56Z
12413,Updated Python license for 2020.,,felixxm,None,2020-02-04T09:02:47Z,2020-02-04T10:58:17Z
12412,Refs #27604 -- Fixed loading of legacy cookie hashes when CookieStorage.key_salt is changed.,"This is a partial revert of bcc9fa25285f506666fa5074fc43c7114d61bb79 to
not break legacy hashes when key_salt is actually changed.",apollo13,None,2020-02-04T08:01:18Z,2020-02-04T08:45:04Z
12411,django 2020,,simotwo,b'invalid',2020-02-04T07:41:49Z,2020-02-04T07:47:18Z
12410,Fixed #31210 -- Documented how to reproduce HttpRequest.is_ajax(),,adamchainz,None,2020-02-03T18:58:04Z,2020-03-25T15:16:39Z
12409,Fixed #31226 -- Fixed typo in docs/internals/contributing/writing-code/submitting-patches.txt.,"[Ticket #31226](https://code.djangoproject.com/ticket/31226)

Inserted **of** (missing preposition) in the mentioned line:

> There are a couple reasons that code in Django might be deprecated:",Vibhu-Agarwal,None,2020-02-03T12:26:15Z,2020-02-03T19:41:08Z
12408,"- Fix the issue of ""__str__ returned non-string (type __proxy__)""",This string format for the label will resolve the non-string issue that occurred in the advanced setting for the page.,shankarThiyagaraajan,None,2020-02-03T07:14:32Z,2020-02-04T12:52:23Z
12407,Fixed #20995 -- Added support for iterables of template names to {% include %} template tag.,,keshav2212,None,2020-02-02T16:53:25Z,2020-02-18T09:50:35Z
12406,Fixed #26813 -- Prevented empty choice in ModelChoiceField with RadioSelect for fields with blank=False.,"[Ticket 26813](https://code.djangoproject.com/ticket/26813).
",hramezani,None,2020-02-02T16:34:05Z,2020-02-05T09:48:59Z
12405,Fixed #31223 -- Added __class_getitem__() to Manager and QuerySet.,"Ticket: https://code.djangoproject.com/ticket/31223#ticket

Related: 
- https://github.com/django/deps/pull/65
- https://github.com/django/django/pull/11849

django-stubs repo: https://github.com/typeddjango/django-stubs",sobolevn,None,2020-02-02T10:17:58Z,2020-04-15T09:36:14Z
12403,Fixed #31222 -- Fixed typo in docs/internals/contributing/bugs-and-features.txt.,"[Ticket #31222](https://code.djangoproject.com/ticket/31222)

Removed **to** from:
 _If your idea can be developed as an independent application or module — for instance, you want to support another database engine — we’ll probably suggest **that you to** develop it independently._",Vibhu-Agarwal,None,2020-02-01T17:00:45Z,2020-02-03T18:28:02Z
12402,Fixed #28699 -- Fixed CSRF validation with remote user middleware.,"Modified how the `process_view` function accesses the csrf cookie string
so that it always accesses the user-submitted value, even when the user
authenticated via RemoteUserMiddleware.

When a user authenticates via RemoteUserMiddleware the value of
`request.META['CSRF_COOKIE']` gets rotated by a call to
`django.middleware.csrf.rotate_token` triggered by a call to
`django.contrib.auth.login()`. When the process_view function executes, after
all middlewares, including RemoteUserMiddleware, and immediately prior
to the view function, the value in `request.META['CSRF_COOKIE']` no longer
represents the user-submitted value but rather the new, rotated csrf
token string and csrf validation mistakenly fails. Accessing the token
via `self.get_token(request)` fixes this problem.

While issue ticket-28699 is old, I think it will become more an issue as people migrate to using JWTs from auth providers like Auth0. Following the basic tutorial for securing an API in Django using auth0 causes failure of the CsrfViewMiddleware. Here's why based on the order of execution of middleware events:

```
MIDDLEWARE = [
    ...,
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.RemoteUserMiddleware',
    ...,
]
```

What executes:

1. `CsrfViewMiddleware.process_request()` which sets `request.META['CSRF_COOKIE']` to the value submitted in the cookie by the user. This act does not seem essential to the CSRF validation process (we could simply pass on this method and run the process_view() method since it contains all the actual CSRF validation logic). However, as pointed out by @carltongibson below, the behavior of the process_request() method ""is required so that, for example, 404 error handlers do not incorrectly regenerate the CSRF token, prior to CsrfViewMiddleware.process_view() ever being executed.""
1. RemoteUser.Middleware.process_request() which will login a user, call login(), and set the `request.META['CSRF_COOKIE']` to a new csrf string.
3. After all the middleware has executed and a view is about to be run, CsrfViewMiddleware.process_view() will perform the actual csrf validation and will fail because it will access `request.META['CSRF_COOKIE']` to get the user submitted csrf cookie string but will find instead the new csrf string set by the RemoteUserMiddleware. This string will not match the value submitted in the header and CSRF validation will fail despite proper inputs by the user. This is where the real csrf validation occurs.

I believe my proposed solution addresses this problem fundamentally without requiring any major changes to the middleware or auth backends. The logic of the code is fundamentally the same as the logic already implemented in the CsrfViewMiddleware.

Additionally, if there is something functionally important to django about accessing the cookie value from `request.META` then I have another simple solution (it's what I implemented in my own subclass of CsrfViewMiddleware in my production application) that I can propose that respects this access pattern; however, I do believe the one-liner is simpler if changing the source code is a possibility. I mention this because I do not know what should/shouldn't be in request.META and if there are access patterns that are important to be maintained by getting the CSRF_COOKIE value from request.META instead of from the request.cookie directly.

Please let me know your thoughts!
",coltonbh,None,2020-02-01T08:09:28Z,2020-02-28T04:50:04Z
12401,Fixed #28699 - Get CSRF cookie from user-submitted value rather than modified request.META['CSRF_COOKIE'] value,"While issue #28699 is old, I think it will become more an issue as people migrate to using JWTs from auth providers like Auth0. Following the basic tutorial for securing an API in Django using auth0 causes failure of the CsrfViewMiddleware. Here's why based on the order of execution of middleware events:

```
MIDDLEWARE = [
    ...,
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.RemoteUserMiddleware',
    ...,
]
```

What executes:

1. CsrfViewMiddleware.process_request() which sets request.META['CSRF_COOKIE'] to the value submitted in the cookie by the user. This appears to be an entirely superfluous act and does not contribute to the csrf validation in any fundamental way.
2. RemoteUser.Middleware.process_request() which will login a user, call login(), and set the request.META['CSRF_COOKIE'] to a new csrf string.
3. After all the middleware has executed and a view is about to be run: CsrfViewMiddleware.process_view() will perform the actual csrf validation and will fail because it will access request.META['CSRF_COOKIE'] to get the user submitted csrf cookie string but will find instead the new csrf string set by the RemoteUserMiddleware. This string will not match the value submitted in the header and CSRF validation will fail despite proper inputs by the user. This is where the real csrf validation occurs.

I believe my proposed solution addresses this problem fundamentally without requiring any major changes to the middleware or auth backends. The logic of the code is fundamentally the same as the logic already implemented in the CsrfViewMiddleware.

Additionally, if there is something sacred about accessing the cookie value from request.META then I have another simple solution (it's what I implemented in my own subclass of CsrfViewMiddleware in my production application) that I can propose that respects this access pattern; however, I do believe the one-liner is simpler if changing the source code is a possibility.

Please let me know your thoughts!",coltonbh,None,2020-02-01T05:07:20Z,2020-02-01T08:14:48Z
12400,[3.0.x] Updated translations from Transifex,,claudep,None,2020-01-31T19:02:59Z,2020-01-31T20:00:03Z
12399,Refs #30943 -- Fixed postgres_tests on PostgreSQL 9.5.,Bloom extension is available on PostgreSQL 9.6+ (see related failure in [django-docker-box](https://travis-ci.org/django/django-docker-box/jobs/635839167?utm_medium=notification&utm_source=github_status)).,felixxm,None,2020-01-31T16:39:55Z,2020-01-31T19:42:21Z
12398,Used temporary directory in FileFieldTests.test_pickle().,Using the current directory caused a `PermissionError` (e.g. in [docker builds](https://travis-ci.org/django/django-docker-box/jobs/635839156?utm_medium=notification&utm_source=github_status)).,felixxm,None,2020-01-31T13:32:21Z,2020-01-31T19:33:53Z
12397,Fixed #27604 -- Used the cookie signer to sign message cookies.,Thanks Craig Anderson for the initial patch.,claudep,None,2020-01-31T10:22:14Z,2020-02-04T19:32:33Z
12396,Fixed #31055 -- Made constraint checks support databases aware. ,Simplified version of https://github.com/django/django/pull/12201.,charettes,None,2020-01-31T06:41:25Z,2020-03-18T12:31:55Z
12395,Refs #22426 -- Removed pre-Django 1.5 messages compatibility code and test.,This reverts commit f286721f7fdc2202f77a5f4d650d9d0779b86811.,claudep,None,2020-01-30T21:51:49Z,2020-01-31T10:14:57Z
12394,Fixed #31219 -- Fixed object deletion crash for nested protected related objects.,See https://code.djangoproject.com/ticket/31219#ticket,matthiask,None,2020-01-30T17:11:15Z,2020-01-31T08:42:32Z
12393,Move technical_500 template paths to class-level variables,This allows effortless replacement of the debugging templates without having to copy-paste the `get_traceback_html` and `get_traceback_text` functions into a deriving class.,akx,None,2020-01-30T16:05:20Z,2020-08-11T07:23:01Z
12392,"Fixed #12990, Refs #27694 -- Added JSONField model field.","Following #11452.
Ticket [#12990](https://code.djangoproject.com/ticket/12990), as part of the [Google Summer of Code](https://g.co/gsoc) program.

Some points:
- Currently supports storing and retrieving any valid JSON value (boolean, integer, float, string, object, array) on all supported database backends (SQLite, PostgreSQL, MySQL, MariaDB, Oracle).
  Note: Oracle only supports JSON object and array if `IS JSON` constraint is enabled.
- Supports custom encoder and decoder (defaults to `json.JSONEncoder` and `json.JSONDecoder`, respectively). I had to cast the `SELECT` query to `text` for PostgreSQL to avoid having the value already decoded in `from_db_value` so it's possible to use a custom decoder (see [psycopg2 docs](http://initd.org/psycopg/docs/extras.html#json-adaptation)).
- Custom lookups and transforms from `contrib.postgres.fields.JSONField` are implemented as possibly supported for each backend.
- Check constraints are applied.  
  - MariaDB and SQLite have a `JSON_VALID` function which works well.
  - Oracle has [`IS JSON`](https://docs.oracle.com/en/database/oracle/oracle-database/12.2/adjsn/conditions-is-json-and-is-not-json.html#GUID-1B6CFFBE-85FE-41DD-BA14-DD1DE73EAB20) constraint, but from what I tried, it only returns true if the field's value is either a JSON object or array.
  - The constraint already comes with the JSON data types in PostgreSQL and MySQL. You can only insert valid JSON values for `jsonb` and `json` columns.
- Oracle implementation uses the `nclob` data type. Oracle recommends using `blob`, but there are some downsides (see [docs](https://docs.oracle.com/en/database/oracle/oracle-database/12.2/adjsn/overview-of-storage-and-management-of-JSON-data.html)). Besides, an existing implementation of [oracle-json-field](https://github.com/Exscientia/oracle-json-field) uses `clob`. `TextField` also uses `nclob`, so I think this makes sense.
- Needs [JSON1](https://www.sqlite.org/json1.html) extension for SQLite. Most Linux distros already have it enabled by default in their SQLite and Python packages.
- Supports introspection.

More details of this available on [my blog](https://gsoc.laymonage.com).

To test this,

```bash
$ pip install --no-cache --upgrade https://github.com/django/django/archive/pull/12392/head.zip
```

(or change `Django==x.y.z` in your `requirements.txt` with the link), and

```py
from django.db import models

class MyModel(models.Model):
    data = models.JSONField()
```",laymonage,None,2020-01-30T14:17:43Z,2020-07-07T06:35:42Z
12391,Replaced assertWarns() with SimpleTestCase.assertWarnsMessage() in tests.,"Based on [Django Coding Style](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/), it would be better to use `assertWarnsMessage` instead of `assertWarns`.",hramezani,None,2020-01-30T09:41:51Z,2020-01-30T10:58:34Z
12390,Added tests for signing non-string values and updated docs.,,claudep,None,2020-01-30T09:32:32Z,2020-01-30T12:29:29Z
12389,Refs #29708 -- Deprecated PickleSerializer,[Ticket](https://code.djangoproject.com/ticket/29708),adamchainz,None,2020-01-30T09:28:51Z,2020-06-15T08:44:28Z
12388,Fixed #31217 -- Made QuerySet.values()/values_list() group by not selected annotations with aggregations used in order_by().,"ticket-31217

Regression in 59b4e99dd00b9c36d56055b889f96885995e4240.

Thanks Jon Dufresne for the report.",felixxm,None,2020-01-30T07:52:37Z,2020-02-03T06:48:22Z
12386,Refs #27468 -- Included algorithm in Signer signature.,This commit prepares the way for different algorithms.,claudep,None,2020-01-29T17:48:30Z,2020-03-05T16:46:13Z
12385,"Added ""{% csrf_token %}""","Added ""{% csrf_token %}"" to post method form which gives an error ""Forbidden 403"" if not added.",Hisham-Pak,None,2020-01-29T17:06:19Z,2020-01-29T17:20:58Z
12384,Fixed #31206 -- Migration crashes for changed database default values,ticket-31206,codingjoe,None,2020-01-29T16:16:45Z,2020-01-31T09:43:50Z
12383,Fixed 31207 -- Prevented references to non-local remote fields in ForeignKey.to_field.,"[Ticket 31207](https://code.djangoproject.com/ticket/31207)
Solution was proposed by @charettes on the [comment](https://code.djangoproject.com/ticket/31207#comment:3)",hramezani,None,2020-01-29T13:33:14Z,2020-01-31T10:00:29Z
12382,Updated the GeoJSON format specification link to RFC 7946.,,felixxm,None,2020-01-29T06:13:09Z,2020-01-29T08:35:21Z
12381,Refs #25778 -- Updated some links to HTTPS and new locations.,,felixxm,None,2020-01-29T06:12:39Z,2020-01-29T08:34:41Z
12380,Made token tests in auth_tests use assertIs() rather than assertTrue/False().,,jdufresne,None,2020-01-29T01:42:24Z,2020-03-21T14:07:58Z
12379,Refs #25778 -- Updated sphinx-doc.org links to HTTPS.,,jdufresne,None,2020-01-29T01:29:50Z,2020-03-21T14:08:00Z
12378,Fixed #31212 -- Updated psycopg links to HTTPS and new location.,https://code.djangoproject.com/ticket/31212,jdufresne,None,2020-01-29T01:04:27Z,2020-03-21T14:08:00Z
12377,Fixed #31211 -- Added SearchConfig expression.,https://code.djangoproject.com/ticket/31211,hannseman,None,2020-01-28T21:59:32Z,2020-01-29T10:50:18Z
12376,Refs #27852 -- Fixed object deletion to show all restricted related objects rather than just the first one.,Fix for the [comment](https://code.djangoproject.com/ticket/27852#comment:9) about restricted objects on [ticket 27852](https://code.djangoproject.com/ticket/27852).,hramezani,None,2020-01-28T09:54:31Z,2020-01-29T08:32:57Z
12375,Allowed selected Choice values as a set,"This commit changes the `ChoiceWidget`'s value formatting to accept sets, and not just lists and tuples. ""set"" was thus added to the `isinstance()` test used.

This would allow sets of options to be specified without explicit re-casting to a list.",tienne-B,None,2020-01-27T20:47:06Z,2020-01-29T19:12:45Z
12374,Refs #27468 -- Made PasswordResetTokenGenerator use SHA-256 algorithm.,,claudep,None,2020-01-27T18:13:37Z,2020-02-12T21:38:53Z
12373,Refs #30997 -- Added link to Fetch API in release notes.,I thought it might be helpful to link to the documentation on MDN for the Fetch API?,pope1ni,None,2020-01-27T13:22:43Z,2020-01-28T08:54:39Z
12372,Refs #27852 -- Fixed object deletion to show all protected related objects rather than just the first one.,"Fixes [Ticket 27852](https://code.djangoproject.com/ticket/27852).
Continue the [PR](https://github.com/django/django/pull/8160)",hramezani,None,2020-01-25T14:59:25Z,2020-01-27T13:54:17Z
12371,Small change in datastructures.py,"For only testing purpose as I'm a newbie on opensource contribution....

I'm expecting that, this not to be merged.",MaqOwais,None,2020-01-25T09:27:45Z,2020-01-25T09:49:13Z
12370,Use '.example.com' for cross-subdomain cookies,I believe this documentation is incorrect. To set a cookie that will work across all subdomains of `example.com` you need to specify `.example.com` in these settings.,simonw,None,2020-01-24T23:20:22Z,2020-01-27T06:51:54Z
12369,Improved SearchVectorCombinable and SearchQueryCombinable error messages.,,hannseman,None,2020-01-24T22:25:31Z,2020-01-28T06:39:21Z
12368,Refs #27888 -- Removed redundant {% if %} in admin changelist filters.,"We have the `if cl.has_filters` above this condition:
https://github.com/django/django/blob/d66d72f95655312c413d916add61a62928639514/django/contrib/admin/templates/admin/change_list.html#L60
",hramezani,None,2020-01-24T15:39:04Z,2020-01-24T19:51:14Z
12367,Used model's Options.label/label_lower where applicable.,We can reuse [model's `Options` properties](https://github.com/django/django/blob/cf493e5c819f5ee49b96954f026bec722e19d9c3/django/db/models/options.py#L132-L138).,felixxm,None,2020-01-24T12:01:31Z,2020-01-29T11:09:25Z
12366,Refs #30997 -- Added HttpRequest.accepts().,ticket-30997,felixxm,None,2020-01-24T10:11:59Z,2020-01-24T13:49:04Z
12365,Fixed #31204 -- Added notes for zero in custom Paginator.count method.,See https://code.djangoproject.com/ticket/31204,frost-nzcr4,None,2020-01-24T08:56:11Z,2020-01-24T13:47:28Z
12364,Fixed #31187 -- Fixed detecting of existing total ordering in admin changelist when using Meta.constraints.,"Hi,

this PR should fix https://code.djangoproject.com/ticket/31187

A couple of notes:

- `constraint_field_names` could be a `set()`, which would have the nice side effect of de-duplicating common tuples between `unique_together` and `constraints`; at the end I opted for a tuple, giving up on de-duplication in favor of a more predictable outcome provided by order preservation.

- Tests are quite verbose: I added a bunch of fields to the `Model` class in order to have each test case match a very specific `UniqueConstraint` instance. That required having each time different field names, so to avoid unexpected overlaps. IOW, in this case I was more inclined towards correctness than conciseness.

- I didn't touch the docs (namely the file `docs/ref/contrib/admin/index.txt`, which is the only one I've found regarding this context) since they just mention an ""unique together set of fields"", which in my opinion is an abstract enough wording to include both `Meta.unique_together` and the `UniqueConstraint` instances in `Meta.constraints`.
If you disagree I can add a more specific sentence.

Please let me know if you want me to make changes on things I didn't mention.

Thanks!",sanjioh,None,2020-01-23T17:19:54Z,2020-05-23T18:36:24Z
12363,Fixed #31184 -- Clarified URL matching behavior in URL dispatcher docs.,,roysmith,None,2020-01-23T16:27:43Z,2020-01-24T11:21:24Z
12362,Installation guide using jupyter,to install the package using jupyter,cosmos-coder,None,2020-01-23T08:49:31Z,2020-01-23T08:51:14Z
12361,Refs #31197 -- Added tests for combined expressions in CheckConstraint.check.,"ticket-31197

Thanks Adam Johnson for the report.

Fixed in 306b6875209cfedce2536a6679e69adee7c9bc6a.",felixxm,None,2020-01-23T08:10:59Z,2020-01-27T15:49:39Z
12360,Fixed #31200 -- Added system checks for permissions codenames max length.,"Basically my problem was I ended up with a model name just shy of 100 characters, so _makemigrations_ worked fine, but when I ran those migrations the builtin permissions creation failed and raised database errors. This just adds some system checks to raise errors if you try to create a model that's going to do this.",mulhollandms,None,2020-01-23T04:23:05Z,2020-01-23T12:07:17Z
12359,Made AppConfig.ready example show class,"By showing the import at the same level as the function definition, the example was a little unclear that it needs to be implemented inside the `AppConfig` subclass. I think this improves it.",adamchainz,None,2020-01-22T10:18:26Z,2020-03-25T15:16:42Z
12358,Removed unneeded int() call in GEOSCoordSeq.__len__().,,sir-sigurd,None,2020-01-22T08:55:31Z,2020-01-22T09:25:38Z
12357,Fixed #30439 - Translations issues on upgrade due to unexpected changes in plural forms,"- Add PLURAL_FORMS_CONSISTENCY setting
- Add plural forms inconsistency warning at run-time
- Add plural forms inconsistency system-check
- Add '--update-plural-forms' option to makemessages command
- Add LOCALE_ROOT setting
- Add '--collect-bundled' option to makemessages
- Fix plural forms inconsistency in catalogs and add missing 'am' and 'ms' main Djano po files

",math-a3k,None,2020-01-22T06:26:21Z,2020-01-22T08:18:45Z
12356,Fixed #30274 -- Prevented segmentation fault on LineString iteration.,"https://code.djangoproject.com/ticket/30274

This reverts commit 138a78ec8cab5e1df0c8ba2a3ee895cb756ff1ae.",sir-sigurd,None,2020-01-21T18:24:36Z,2020-01-21T21:14:23Z
12355,Fixed #31196 -- Added support for PostGIS 3.,https://code.djangoproject.com/ticket/31196,sir-sigurd,None,2020-01-21T17:20:27Z,2020-04-14T11:22:12Z
12354,Fixed #31195 -- Relaxed GeometryDistance test for PROJ 5.2+.,https://code.djangoproject.com/ticket/31195,sir-sigurd,None,2020-01-21T16:45:39Z,2020-01-22T04:51:29Z
12353,Just here to test some tests.,,hs-matt,None,2020-01-21T15:09:27Z,2020-01-21T15:17:12Z
12352,Removed unused GEOSFuncFactory subclasses.,Unused since 2d18c60fbb1efcc980adfe875dadb02c749da509.,sir-sigurd,None,2020-01-21T14:48:04Z,2020-01-22T04:51:03Z
12351,Fixed #27888 -- Added link to clear all filters in the admin changelist view.,"[Ticket 27888](https://code.djangoproject.com/ticket/27888)
Complete the [PR](https://github.com/django/django/pull/8156), Added tests and release note.",hramezani,None,2020-01-21T14:17:15Z,2020-05-16T22:07:12Z
12350,Refs #31177 -- Specified using explicit exception chaining in style guide.,@carltongibson Here's the fix to the style guide.,cool-RR,None,2020-01-21T13:54:26Z,2020-02-11T08:18:22Z
12349,Refs #29095 -- Added test for using QuerySet.count() with window expressions ordered by related fields.,Fixed in 3f32154f40a855afa063095e3d091ce6be21f2c5.,felixxm,None,2020-01-21T09:42:26Z,2020-01-21T10:13:50Z
12348,Fixed #31190 -- Fixed prefetch_related() crash for GenericForeignKey with custom ContentType foreign key.,"Hello there.

I'm not sure that it's a right way, but when I have generic foreign key like: 

`obj = GenericForeignKey('object_content_type', 'object_id')`

and 

`some_instances = GenericRelation('some_app.SomeModel', object_id_field='object_id', content_type_field='object_content_type')`

When I try to get all `some_instances`, I get the next error:

`AttributeError: 'SomeModel' object has no attribute 'content_type_id'`",HackoDev,None,2020-01-21T07:17:29Z,2020-01-22T07:29:18Z
12347,Fixed #31003 -- Doc'd and tested return value of QuerySet.bulk_create().,,adamchainz,None,2020-01-20T10:32:53Z,2020-03-25T15:16:44Z
12346,Made examples concrete in upgrade documentation.,,adamchainz,None,2020-01-20T10:28:17Z,2020-01-21T12:16:52Z
12345,"Fixed #31183 -- Added a feature flag for ""<db> only supports UNBOUNDED together with PRECEDING and FOLLOWING"".",https://code.djangoproject.com/ticket/31183,timgraham,None,2020-01-19T23:32:30Z,2020-01-20T19:27:40Z
12344,Changed re-raising an exception to use bare raise syntax where appropriate.,,jdufresne,None,2020-01-19T22:20:04Z,2020-01-20T14:14:50Z
12343,Fixed #31181 -- Added links to related models for admin's readonly fields.,"In the django admin, readonly relationship fields (e.g. ForeignKey, ManyToMany) were rendered as plaintext of the target object.
This changes this to render them as links instead, making it possible to navigate through the relationship.

## Before
<img width=""200"" alt=""Screenshot 2020-01-21 at 21 59 59"" src=""https://user-images.githubusercontent.com/506602/72842969-e356c980-3c99-11ea-8c7a-9b70e9689efb.png"">

## After
<img width=""200"" alt=""Screenshot 2020-01-21 at 22 00 12"" src=""https://user-images.githubusercontent.com/506602/72842981-e81b7d80-3c99-11ea-82b0-925cf8e0cebd.png"">



Based on [feedback](https://groups.google.com/forum/#!topic/django-developers/XFoaohDpqZE) / [discussion](https://github.com/julienr/django/commit/01bba0b714f831a669b271c1192e93fc3ef011b8#commitcomment-36862302) with @aaugustin , things to decide:

- [x] Should this stop rendering links for ManyToMany if there are more than say 20 remote objects ? The current plaintext behavior already renders all objects ? Is the concern here the number of calls to `reverse` ? Should I make 20 a config option or just hardcode it ?

- [x] The link should only be rendered if the user has permission to view the target model. This would be nice, but the current `master` behavior with raw_id fields is to render the link even if the user cannot view the target model. So I feel changing this would be another issue. I looked a bit into it and it seems fixing this would require passing the `request` all the way down to be able to check for permissions. Basically from `ModelAdmin._changeform_view` =>  `AdminForm` => `Fieldset` => `Fieldline` => `AdminReadonlyField`. Should I open a separate ticket for this ?

- [x] In the [contribution guidelines](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/submitting-patches/#patch-review-checklist), it says new features should have an entry in the release notes. Is this considered a new feature ? I feel this is pretty minor, but not sure what the policy is",julienr,None,2020-01-19T19:13:19Z,2020-10-08T19:25:21Z
12342,Refs #31117 -- Made various tests properly handle unexpected databases aliases.,"Quite some test in the testsuite assumed that the test configuration
only contains a 'default' and 'other' database, for no good reason. This
commit removes these assumptions.

This commit was originally written to allow a third database to be used
for testing database creation, but that turned out to be infeasible for
other reasons (see https://github.com/django/django/pull/12247). Still,
cleaning up these assumptions makes the code slightly cleaner and makes it easier to add an additional database in the future.

The fixed assumptions are as follows.
 - In most cases, a testcase would use the `databases = [...]` to
   declare it used 'default' and 'other', but then access all databases
   through `django.db.connections`. If a third database is added,
   accessing it is prevented by the test environment, resulting in a
   failing testcase. This is easy to fix by simply iterating over the
   `databases` value rather than `django.db.connections`.
 - `backends.tests` would hardcode the number of connections to 2, now
    it uses `len(connections)` instead.
 - `migrations` had some database routers that assumed only two
   databases. These were slightly changed to keep equivalent behaviour,
   without trying to migrate anything other than 'default' and 'other'.
 - `test_runner.test_discover_runner` would make assumptions about skip
   messages that were not necessarily true. These were adapted by
   autogenerating any skipped connections.",matthijskooijman,None,2020-01-19T15:13:25Z,2020-01-20T13:59:18Z
12341,Fixed #31179 -- Reset password logs out all sessions for user,,imrshu,None,2020-01-19T13:59:32Z,2020-01-20T06:45:47Z
12340,Fixed #31142 -- Fixed MakeValid.output_field when geometry type is changed.,https://code.djangoproject.com/ticket/31142,sir-sigurd,None,2020-01-18T18:41:02Z,2020-01-20T08:21:50Z
12339,"Fixed #31177 -- Used ""raise from"" when wrapping exceptions, all over the codebase","Following [31166](https://code.djangoproject.com/ticket/31166) , I made a regex search to find 90% of places where we use ""raise"" and should use ""raise from"".

Trac ticket: https://code.djangoproject.com/ticket/31177

If this is too big for one PR, I could split it to smaller chunks.

@shaib @felixxm If you're interested in giving your opinion here, that'll be helpful.",cool-RR,None,2020-01-17T18:40:27Z,2020-02-11T08:18:11Z
12338,Fixed field default in dates tests.,,felixxm,None,2020-01-17T15:17:35Z,2020-01-18T19:07:30Z
12337,Cached ForeignObject.(local/foreign/reverse)_related_fields properties.,"I profiled a test run of a large application with py-spy and noticed `foreign_related_fields` was in the top 20 function calls by execution time. Looking at the code, `related_fields` is re-implementing the `@cached_property` pattern, and the derived properties can be sped up by caching them too.",adamchainz,None,2020-01-17T13:50:22Z,2020-04-04T11:01:24Z
12336,Update request-response.txt,added additional information about accessing request.POST when submitting data via AJAX,coinclear-uk,None,2020-01-17T12:00:30Z,2020-01-17T17:14:21Z
12335,Refs #30752 -- Doc'd error reporting related optional request attributes.,"https://github.com/django/django/pull/11754#issuecomment-575311484

Not for 3.0. master only",carltongibson,None,2020-01-17T10:44:13Z,2020-01-17T14:18:59Z
12334,Refs #27468 -- Added algorithm parameter to django.utils.crypto.salted_hmac().,,claudep,None,2020-01-17T07:51:01Z,2020-01-27T12:42:47Z
12333,Fixed #29789 -- Added support for nested relations to FilteredRelation.,"For ticket 29789
https://code.djangoproject.com/ticket/29789",ferrants,None,2020-01-16T23:56:17Z,2020-07-09T09:34:51Z
12332,Fixed #30439 - Added support for different plurals for the same language.,ticket-30439,claudep,None,2020-01-16T19:32:19Z,2020-04-12T09:58:02Z
12331,Create .sonarcloud.properties,,unibamonash,b'invalid',2020-01-16T18:27:51Z,2020-01-16T18:36:58Z
12330,Fixed #31171 -- Fixed wording in auto-escaping section of custom template tags docs.,[Ticket #31171](https://code.djangoproject.com/ticket/31171),yukihira1992,None,2020-01-16T11:38:53Z,2020-01-17T08:21:04Z
12329,Fixed #31162 -- Prevented error logs when using WKT strings in lookups.,"ticket-31162

Regression in 6f44f714c92d2966dca390ebd3054e5fb0bb0c80.",felixxm,None,2020-01-16T09:10:30Z,2020-01-16T13:35:48Z
12328,Used constant instead of hard-coded value for recursive relationship.,,felixxm,None,2020-01-16T07:31:19Z,2020-01-16T08:12:16Z
12327,Fixed #31162 GIS error logging when using WKT string as input to filter() query,Restored an ```os.path.exists``` check in __init__ and added an extra check to ```is_vsi_based()``` following @felixxm's suggestion. ,dbxnr,None,2020-01-16T03:40:08Z,2020-01-16T04:50:43Z
12326,Added apps.py to project from tutorials in reusable apps docs.,"Add the apps.py file on files list for the polls module (from part1 of the tutorial)

Regards",AnaelMobilia,None,2020-01-15T15:08:22Z,2020-01-16T13:51:37Z
12325,Fixed #29998 -- Allowed multiple OneToOneFields to the parent model.,"We assumed that any `OneToOneField`'s in a child model must be the parent link and raised an error when `parent_link=True` was not specified. This patch allows to specify multiple `OneToOneField`'s
to the parent model.

`OneToOneField`'s without a custom `related_name` will raise `fields.E304` and `fields.E305` so this should warn users when they try to override the automatically-created `OneToOneField`.

ticket-29998",felixxm,None,2020-01-15T14:02:25Z,2020-01-16T07:06:20Z
12324,Use stdout for StreamHandler logging documetation instead of default stderr,"By default, if `stream` is not set in `StreamHandler`, everything goes to `sys.stderr` - which is not  ideal - specially for users who are trying to learn this for the first time.

Doc page: https://docs.djangoproject.com/en/3.0/topics/logging/#examples
Python StreamHandler: https://docs.python.org/3.7/library/logging.handlers.html#logging.StreamHandler",amritb,None,2020-01-15T12:46:46Z,2020-01-15T15:07:25Z
12323,Refs #29998 -- Corrected auto-created OneToOneField parent_link in MTI docs.,https://code.djangoproject.com/ticket/29998#comment:1,felixxm,None,2020-01-15T12:23:30Z,2020-01-15T14:07:12Z
12322,Refs #27468 -- Added explicit tests for django.utils.crypto.constant_time_compare.,,felixxm,None,2020-01-15T11:01:30Z,2020-01-15T11:54:56Z
12321,#31169 Ensure the parallel test worker has initialised django and uses the test db names,,bragradon,None,2020-01-15T10:18:57Z,2020-06-24T10:56:06Z
12320,Refs #31165 -- Overhauled settings.,https://code.djangoproject.com/ticket/31165,orlnub123,None,2020-01-14T10:26:01Z,2020-01-15T09:21:57Z
12319,Clarified backport policy for regressions.,,carltongibson,None,2020-01-14T09:14:07Z,2020-01-15T14:52:09Z
12318,Refs #31097 -- Added release notes for 2f565f84aca136d9cc4e4d061f3196ddf9358ab8.,I have 2f565f84aca136d9cc4e4d061f3196ddf9358ab8 backported locally but we need these too. ,carltongibson,None,2020-01-14T09:01:50Z,2020-01-14T13:35:34Z
12317,Refs #31136 -- Made QuerySet.values()/values_list() group only by selected annotation.,"ticket-31136

Regression in 0f843fdd5b9b2f2307148465cd60f4e1b2befbb4.

IMO `QuerySet.values()/values_list()` should use only selected annotations in a `GROUP BY` clause.

Before 0f843fdd5b9b2f2307148465cd60f4e1b2befbb4 we had:
```sql
SELECT DISTINCT ""aggregation_book"".""name"", MIN(T4.""age"") AS ""min_age"" 
...
GROUP BY
    ""aggregation_book"".""id"", ""aggregation_book"".""isbn"", ""aggregation_book"".""name"",
    ""aggregation_book"".""pages"", ""aggregation_book"".""rating"", ""aggregation_book"".""price"",
    ""aggregation_book"".""contact_id"", ""aggregation_book"".""publisher_id"",
    ""aggregation_book"".""pubdate"", ""first_author_the_same_age""
```
After 0f843fdd5b9b2f2307148465cd60f4e1b2befbb4 we have:
```sql
SELECT DISTINCT ""aggregation_book"".""name"", MIN(T4.""age"") AS ""min_age"" 
...
GROUP BY
    ""aggregation_book"".""id"", ""aggregation_book"".""isbn"", ""aggregation_book"".""name"",
    ""aggregation_book"".""pages"", ""aggregation_book"".""rating"", ""aggregation_book"".""price"",
    ""aggregation_book"".""contact_id"", ""aggregation_book"".""publisher_id"",
    ""aggregation_book"".""pubdate"",  T4.""age""
```
with this patch we'll get:
```sql
SELECT DISTINCT ""aggregation_book"".""name"", MIN(T4.""age"") AS ""min_age"" 
...
GROUP BY
    ""aggregation_book"".""id"", ""aggregation_book"".""isbn"", ""aggregation_book"".""name"",
    ""aggregation_book"".""pages"", ""aggregation_book"".""rating"", ""aggregation_book"".""price"",
    ""aggregation_book"".""contact_id"", ""aggregation_book"".""publisher_id"",
    ""aggregation_book"".""pubdate""
```",felixxm,None,2020-01-14T08:27:55Z,2020-01-15T08:32:47Z
12316,Added note about incomplete HTML in tutorial 3.,,adamchainz,None,2020-01-13T22:04:45Z,2020-01-17T16:23:07Z
12315,Fixed <span> nesting in technical 500 template.,,blueyed,None,2020-01-13T22:00:14Z,2020-01-14T10:27:42Z
12314,Fixed #28073 -- RemoveField.state_forwards() gives AttributeError.,"Added a check if old_field exist, otherwise delay is set to False",pallav10,None,2020-01-13T16:45:02Z,2020-09-03T09:06:21Z
12313,Fixed #23916 -- Allowed makemigrations to handle related model name case changes.,"[Ticket](https://code.djangoproject.com/ticket/23916)

I believe this is the correct fix.

The reason continuous migrations were being generated was the comparison of the before and after deconstructed `ForeignKey`s in `MigrationAutodetector.generate_altered_fields`:

```
if old_field_dec != new_field_dec:
```

The model name in the migration history is based on the migration that added the model, but nothing ever changes this casing since the autodetector only uses the ""model name"" (lowercased class name) throughout. `ForeignObject.deconstruct()` seems to have been a place where this was missed.",adamchainz,None,2020-01-13T16:26:23Z,2020-07-20T10:17:23Z
12312,Fixed typo in docs/ref/django-admin.txt.,,blueyed,None,2020-01-13T10:13:01Z,2020-01-13T11:39:15Z
12311,Optimized ModelAdmin._changeform_view() by avoiding multiple get_fieldsets() calls.,This avoids the second call in https://github.com/django/django/blob/11472e17cee8d78e912a8a39d73664764af6b564/django/contrib/admin/options.py#L669.,blueyed,None,2020-01-13T09:39:33Z,2020-01-17T20:42:30Z
12310,Fixed #31180 -- Configured applications automatically.,"Many pluggable applications are configured with a dotted path to the app (e.g. `""django.contrib.admin""`) in `INSTALLED_APPS`.

The application then relies on `default_app_config` for locating its `AppConfig` class (e.g. `""django.contrib.admin.apps.AdminConfig""`).

`default_app_config` was intended to allow author of pluggable applications to take advantage of `AppConfig` features without require their users to change `INSTALLED_APPS`, in order to increase adoption.

Unfortunately, that reduced the incentive for directly putting paths to `AppConfig` in `INSTALLED_APPS`. Even though that was the official recommendation, it didn't gain traction.

If I had better anticipated this result, I wouldn't have introduced `default_app_config` in the app-loading refactor in Django 1.7.

We've spent about five years failing at getting people to adopt explicit configuration. It's time to admit failure. Practicality beats purity.

With the benefit of hindsight, I'm proposing to load `AppConfig` classes from a conventional location, namely the `apps` submodule inside an application.

This is inconsistent with Django's design philosophy, as Django favors configuration over convention, but not much worse than the `default_app_config` convention.

There's a small risk of backwards-incompatibility. Django could import an `apps.py` submodule designed for another purpose and that could have side effects. I think that risk is low.",aaugustin,None,2020-01-12T20:41:21Z,2020-07-21T17:24:23Z
12309,Fixed #26761 -- Made admin changelist and readonly fields display help_text.,[Ticket 26761](https://code.djangoproject.com/ticket/26761),hramezani,None,2020-01-12T14:43:31Z,2020-06-25T08:43:19Z
12308,Fixed #31157 -- Fixed displaying read-only JSONField values in admin.,Refs #31157  See https://code.djangoproject.com/ticket/31157,dbxnr,None,2020-01-12T04:21:15Z,2020-05-08T08:27:24Z
12307,Fixed #31160 -- Fixed admin CSS for ordered lists' descendants in unordered list.,"Without this change, an ordered lists nested inside an unordered list will be rendered as if it is unordered. This can occur when using admindocs with nested lists used in docstrings.",owenh000,None,2020-01-11T06:11:33Z,2020-01-14T00:55:23Z
12306,Fixed #31155 -- Fixed a system check for the longest choice when a named group contains only non-string values.,"Regression in b6251956b69512bf230322bd7a49b629ca8455c6.

Thanks Murat Guchetl for the report.

ticket-31155",felixxm,None,2020-01-10T19:36:24Z,2020-01-11T18:48:01Z
12305,Removed unused __str__() methods in tests models. ,"Maybe there are more of such things in the test suite. Perhaps we can leave this PR to look for more, instead of merging immediately.",atombrella,None,2020-01-10T10:23:19Z,2020-04-15T18:53:55Z
12304,Fixed #31154 -- Added support for using enumeration types in templates.,,adamchainz,None,2020-01-09T15:43:51Z,2020-01-10T10:40:00Z
12303,Added file cleanup in FileFieldTests.test_pickle().,"Resolves lingering file after aaea9deac4dea08ada934a930cfc27765358d8da. 

Wasn't 100% sure if a tmp file wouldn't be better, but wasn't convinced it was worth the time to set up the Storage. Maybe @felixxm or @hramezani would be able to do that quicker, since you have the relevant logic more fresh in mind. 

(Wouldn't block on it though... — not worth the investment unless it's instantly obvious to you.) ",carltongibson,None,2020-01-09T15:13:45Z,2020-01-09T20:19:43Z
12302,Removed unused ExceptionReporterFilter class.,"It's undocumented, untested, and unused. The [docs explicitly state that `DEFAULT_EXCEPTION_REPORTER_FILTER` requires a `SafeExceptionReporterFilter` subclass](https://docs.djangoproject.com/en/3.0/howto/error-reporting/#custom-error-reports). 

(I'm guessing it was intended as a base class folks would extend, but just never turned out that way.)

We have [precedent for removing code here without deprecation from 1.9](https://docs.djangoproject.com/en/dev/releases/1.9/#httprequest-details-in-error-reporting).",carltongibson,None,2020-01-09T15:04:08Z,2020-01-11T19:58:16Z
12301,Fix the following problem: https://stackoverflow.com/questions/579524…,…35/django-tutorial-testcase-failed-to-create-testuser-on-oracle-express-database,mschaffenroth,None,2020-01-09T15:02:20Z,2020-01-09T19:17:10Z
12300,Fixed #23004 -- Added request.META filtering to SafeExceptionReporterFilter.,"Two commits:

1. Implements Tim's old suggestion from the ticket to move the setting values and functions to the filter class to allow overriding. Co-authored-by @maxsond from #10748. 
2. Add the request.META filtering itself. Co-authored-by @audiolion originally from #7996. 

Hopefully we can get this in now. It should be a good 50% of the flexibility folks are looking for in the error reporting.  ",carltongibson,None,2020-01-09T10:42:34Z,2020-01-10T11:01:11Z
12299,"Fixed #31148 -- Added error messages on update()/delete() operations following union(), intersection(), and difference().",[Ticket 31148](https://code.djangoproject.com/ticket/31148),hramezani,None,2020-01-09T10:13:12Z,2020-01-09T11:40:46Z
12298,Simplified DeferredAttribute.__get__() a bit.,,Taoup,None,2020-01-09T09:50:03Z,2020-01-29T15:06:57Z
12297,Fixed #31147 -- Added SearchHeadline to django.contrib.postgres.,Ticket: https://code.djangoproject.com/ticket/31147,hannseman,None,2020-01-09T09:13:27Z,2020-03-03T20:08:52Z
12296,Create path_same_name_urls.py,,KHMANJUNATH,None,2020-01-09T08:30:24Z,2020-01-09T08:34:34Z
12295,Stable/3.0.x ,,KHMANJUNATH,None,2020-01-09T08:22:24Z,2020-01-09T08:25:38Z
12294,Improved ReST formatting in docs/README.rst.,In docs/README.rst file two links were written adjacent to each other I changed them and wrote one below other,KHMANJUNATH,None,2020-01-09T08:09:59Z,2020-01-09T14:13:06Z
12293,Fix Nested FilteredRelation Support,"For: https://code.djangoproject.com/ticket/29789

Renamed branch to ticket_xxx here https://github.com/django/django/pull/12333",ferrants,None,2020-01-09T00:25:04Z,2020-01-16T23:56:43Z
12292,Renamed docs/README to README.rst.,Changed docs/REAME to docs/README.md to make a beautiful readme file,Someoneece,None,2020-01-08T22:11:27Z,2020-01-09T08:01:57Z
12291,Refs #27468 - Allowed variable hash algo in utils.crypto.salted_hmac().,,claudep,None,2020-01-08T16:23:34Z,2020-04-16T06:44:57Z
12290,Added tests for using the same name for multiple URL patterns.,Moved from #12121.,felixxm,None,2020-01-08T09:57:09Z,2020-01-08T10:21:16Z
12289,"Rewording section of <Following relationships ""backward""> in queries.txt","Rewording section of <Following relationships ""backward""> in docs/topics/db/queries.txt",Taoup,None,2020-01-08T07:50:16Z,2020-01-08T08:53:12Z
12288,Support for Nested FilteredRelation,"https://code.djangoproject.com/ticket/29789

There are some other places I considered making changes, noted in the comments. I'd remove these comments before wanting to merge, but left them there for conversation sake.

I also have a branch that does this for 3.0, some small differences, mostly in the `resolve_expression` function signature. I can open the PR for 3.0 as well, but I need the 2.2 one for work I am actively doing.",ferrants,None,2020-01-07T22:54:29Z,2020-01-09T01:10:38Z
12287,Don't raise E004 on a sublanguage if the base language is available,fixes: #31141,quique,None,2020-01-07T18:32:41Z,2020-01-07T18:37:47Z
12286,Fixed #31141 -- Relaxed system check of translation settings for sublanguages.,"Regression in 4400d8296d268f5a8523cd02ddc33b12219b2535.

Thanks Enrique Matías Sánchez for the report.",felixxm,None,2020-01-07T13:56:28Z,2020-01-08T07:05:53Z
12284,Fixed #31124 -- Fixed setting of get_FOO_display() when overriding inherited choices.,"(To be squashed and tidied obviously)

Three commits: 

* Test for ticket-31124
* Initial fix, but...
* Further test, since it can come up again. 

@felixxm @claudep @sir-sigurd: What do you all think? 

I [initially suggested](https://github.com/django/django/commit/e3c035ef177d9ed40340b2d294aa55a7e5100529#diff-5b33a9c46f488003c1846ef677f861d3R820-R839) for ticket-30931 that we doc overriding `_get_FIELD_display()`:

```
.. admonition:: Overriding extra instance methods

    In order to customize ``get_FOO_display()``, or either of
    ``get_next_by_FOO()`` or ``get_previous_by_FOO()``, you need to override
    the helper methods ``_get_FIELD_display()``, or
    ``_get_next_or_previous_by_FIELD()``, respectively.

    For example, you might customize ``get_FOO_display()`` like so::

        from django.db import models


        class FooBar(models.Model):
            foo_bar = models.IntegerField(choices=[(1, 'foo'), (2, 'bar')])

            def _get_FIELD_display(self, field):
                if field.attname == 'foo_bar':
                    return 'custom display string'
                return super()._get_FIELD_display(field)
```

I suggested this saying, about the fix in `contribute_to_class()`, that ""this way lies madness"", i.e. we're in danger of adding ever more complicated logic into `contribute_to_class()`, when there's a clean way to point users to available. 

We decided to add the `hasattr` check, which is OK.

Now we can move to inspecting the `__dict__` directly (to avoid walking the bases). I guess that might be OK too. 

But we need to decide at what point we cut our loses and say that we don't support this. So...

Is this further fix OK? Do we need to support the last test case? If not do we doc it? OR do we back out and doc the non-`__new__()` approach? Or...? (My inclination is towards the simpler code, and so documenting overriding `_get_FIELD_display()`—for me, it's just trying to be too clever here—but happy to go with majority opinion.)

Thanks for the thoughts! 
(And happy new year! 🎊)",carltongibson,None,2020-01-07T11:06:31Z,2020-01-15T14:35:29Z
12283,Fixed timezones tests for PyYAML 5.3+.,"Issue with loading timezones was fixed in PyYAML 5.3:
- https://github.com/yaml/pyyaml/pull/163
- ticket-18867",felixxm,None,2020-01-07T08:01:38Z,2020-01-07T08:54:26Z
12282,Simplified model's Options.add_field() a bit.,,Taoup,None,2020-01-06T14:20:53Z,2020-01-07T11:46:40Z
12281,Fixed #30980 -- Improved error message when checking uniqueness of admin actions' __name__.,Getting #30980 over the line. Credit to the existing work done in https://github.com/django/django/pull/12165 by @keshav2212 as a strong starting point,AdamDonna,None,2020-01-06T11:14:37Z,2020-01-10T17:10:30Z
12280,Fixed #30439 - Translations issues on upgrade due to unexpected changes in plural forms,"ticket-30439

- Modify the catalog merging policy to ""no-merge"" if plural forms differ
  in translations
- Add new LOCALE_ROOT setting
- Add new --comply-plural-forms option to makemessages
- Add new --collect-base-catalogs option to makemessages
- Fix inconsistencies with plural forms to comply the new merging policy",math-a3k,None,2020-01-06T07:21:07Z,2020-01-22T09:28:01Z
12279,hello LICense PR,license change ,codeitTeacher,None,2020-01-06T05:25:56Z,2020-01-06T07:40:32Z
12277,"Removed ""Don't do that"" from docs and error messages.",It's slightly aggressive and doesn't explain itself.,adamchainz,None,2020-01-05T10:07:33Z,2020-01-06T14:00:58Z
12276,Fixed #31118 -- Made FileInput to avoid the required attribute when initial data exists.,"Added `use_required_attribute()` method to `FileInput` widget, this will remove the required attribute if initial data is provided to the `FileField`.",ShubhamSingh20,None,2020-01-05T08:04:40Z,2020-01-08T08:56:44Z
12275,Fixed #15982 -- Added DATE_INPUT_FORMATS to forms.DateTimeField default input formats.,,claudep,None,2020-01-04T11:17:34Z,2020-01-07T13:23:43Z
12273,Fixed #29871 -- Allowed setting pk=None on a child model to create a copy.,"Ensured that setting pk = None sets all parent_ptr_id's as well as
all AutoField's in the parent heirarchy to None. This follows the
current documentation on copying model instances:
https://docs.djangoproject.com/en/3.0/topics/db/queries/#copying-model-instances
Thanks Simon for the initial patches on Trac!",ChetanKhanna,None,2020-01-03T18:47:56Z,2020-01-15T07:46:48Z
12272,Fixed #31136 -- Disabled grouping by aliases on QuerySet.values()/values_list().,"Regression in fb3f034f1c63160c0ff13c609acd01c18be12f80.

Thanks Sigurd Ljødal for the report.

ticket-31136",felixxm,None,2020-01-03T13:33:42Z,2020-01-04T19:49:24Z
12271,Reorganized forms.DateTimeField tests.,Moved from #11893. I pushed minor edits and used `subTest()`.,felixxm,None,2020-01-03T09:39:05Z,2020-01-03T10:39:12Z
12270,Fixed typo in docs/index.txt.,,maryaB-osr,None,2020-01-02T17:39:10Z,2020-01-03T06:55:35Z
12269,Fixed #31133 -- Fixed crash when subtracting against a subquery annotation.,"The `subtract_temporals` database operation was not handling expressions returning SQL `params` in mixed database types.

Thanks Reupen Shah for the report.",charettes,None,2020-01-02T16:38:33Z,2020-01-03T09:36:21Z
12268,Refs #31040 -- Fixed crypt.crypt() call in test_hashers.py.,"An empty string is invalid for the `salt` argument in Python 3 and raises exception since Python 3.9, see https://bugs.python.org/issue38402.",felixxm,None,2020-01-02T08:14:16Z,2020-01-03T06:47:27Z
12267,Fixed #30190 -- Added JSONL serializer.,"As you know loading/dumping data from a large database can be problematic (MemoryError). This pull request tries to solve the problem by adding `JSONL` support to django serializers.

The pull request updates the code, tests and docs. I should note that it's heavily based on `JSON` serializer code.

Ticket: https://code.djangoproject.com/ticket/30190
Mailing list discussion: https://groups.google.com/forum/#!topic/django-developers/MMm1AGS2Ibg",aliva,None,2020-01-01T17:39:41Z,2020-06-16T20:59:32Z
12266,Fixed #31124 - Model.get_FOO_display() does not work correctly with i…,,gpopides,None,2020-01-01T14:35:36Z,2020-01-15T11:07:23Z
12265,Fixed #30934: Include database alias in `django.db.backends` debug output ,"Original PR: #11994 

Went through the patch checklist and changed patch notes and added version added admonition to documentation.

Thanks to @codeinthehole for the ticket and patch. I simply added the documentation. ",abhijeetviswa,None,2019-12-31T18:51:53Z,2020-01-01T07:32:59Z
12264,Documentation: add class link to CharField from SlugField,,morugu,None,2019-12-31T17:05:51Z,2020-01-02T06:52:17Z
12263,"Fixed #31166 -- Used ""raise from"" when raising ImproperlyConfigured exceptions in django.urls.resolvers.","This will make it have a text of ""this exception is the direct result of"" instead of ""During handling of the above exception, another exception occurred"" 

This is more accurate for the case of this exception.",cool-RR,None,2019-12-30T20:32:25Z,2020-01-17T11:21:02Z
12262,Fixed #31128 -- Fixed TemplateSyntaxError in simple_tag() and inclusion_tag() for kwargs.,"https://code.djangoproject.com/ticket/31128#ticket

See there for description",P-Seebauer,None,2019-12-30T13:13:59Z,2020-01-02T10:48:07Z
12261,Fixed #31126 -- Doc'd STATICFILES_DIRS namespacing in static files how-to.,"Ticket: https://code.djangoproject.com/ticket/31126

I've added information regarding prefixes (as part of namespacing) in the `Static file namespacing` admonition. ",abhijeetviswa,None,2019-12-30T13:04:45Z,2020-01-29T09:45:09Z
12260,Stable/3.0.x   Template truncate dots missing,"django.po如下：
msgid ""%(truncated_text)s...""
msgstr ""%(truncated_text)s""",SunshingYang,None,2019-12-30T03:08:18Z,2019-12-30T06:37:25Z
12259,Fixed #31097 -- Fixed crash of ArrayAgg and StringAgg with filter when used in Subquery.,"Tackling https://code.djangoproject.com/ticket/31097

For the review, commit-by-commit and the commit messages should explain what I did :)

Questions:
* do I need to add information to potential docs/release notes for backports on LTS versions?
* do I need to open PRs to these branches for the backports?

I should have sent you the CLA by email by now :)",David-Wobrock,None,2019-12-28T21:55:33Z,2019-12-31T11:04:49Z
12257,Fixed remove_stale_contenttypes to remove contenttype for stale app #31123,,gowthamk63,None,2019-12-27T20:22:24Z,2020-01-29T16:55:16Z
12256,Refs #31117 -- Isolated backends.sqlite.test_creation.TestDbSignatureTests.,,felixxm,None,2019-12-27T14:19:08Z,2019-12-31T11:09:54Z
12255,Fixed random models_fields.test_uuid.TestQuerying failures.,"Random failures depended on a generated UUID, e.g. tests failed when it contains `0000` or `8400e29b`.",felixxm,None,2019-12-27T13:41:57Z,2019-12-27T14:25:54Z
12254,Fixed typo in ref/forms/widgets.txt.,@jdufresne Can you take a look? IMO it's typo in c74378bb77db5bbeac1bd48c0cd31154f96a81d6.,felixxm,None,2019-12-27T10:24:08Z,2020-01-02T06:46:36Z
12253,remove contenttype for stale apps,,gowthamk63,None,2019-12-26T21:24:56Z,2019-12-27T06:00:00Z
12252,Fixed #31121 -- Cleared Site cache in SitesFrameworkTests.,Thanks Matthijs Kooijman for the report and analysis.,claudep,None,2019-12-26T12:22:16Z,2019-12-27T11:50:30Z
12251,Fixed #28290 -- Enabled Sphinx auto-label generation for title and section headers.,"Certain sections don't have labels which makes it difficult to refer them
from other Sphinx documents using InterSphinx. The AutoSectionLabel does
what it says.

Asked for opinion regarding a particular setting of the extension here: https://groups.google.com/forum/#!topic/django-developers/sRfq48rD-Ao",abhijeetviswa,None,2019-12-26T10:38:20Z,2020-01-29T13:34:15Z
12250,Fixed typo in django/utils/termcolors.py docstring.,,leollon,None,2019-12-26T10:06:23Z,2019-12-27T06:49:43Z
12249,Readme file,just learning,CodeMonkey-42,None,2019-12-24T17:02:58Z,2019-12-24T17:03:21Z
12248,"Dummy PR to debug #31117, please ignore.","This is a dummy PR, not intended to be merged. It contains some extra debug printing, to be executed by the Jenkins builds, intended to discover why the bug described at https://code.djangoproject.com/ticket/31117 does not occur inside Jenkins.",matthijskooijman,None,2019-12-24T12:45:11Z,2019-12-24T21:04:15Z
12247,Fixed #31117 -- Isolated backends.base.test_creation.TestDbCreationTests,"(Commit replaced with different fix, see comments below)

~~This lets TestDbCreationTests properly clean up by not only calling `create_test_db`, but also `destroy_test_db`.~~

~~Since we cannot call `destroy_test_db` on the 'default' database, which is used by other tests, and since calling `create_test_db` on a database that is already created is fragile in any case, this also changes the test to use the 'unused' database that is introduced in this PR.~~

~~Additionally, this changes the restoration of the connection settings to restore just the `MIGRATE` setting, rather than the entire dict, since that prevents issues when the same dict is referenced from multiple places (as detailed in #31117).~~

~~Before this PR can be merged, https://code.djangoproject.com/ticket/31055 must be fixed (work underway in #12201). Until then, this PR contains a hack to disable checking entirely.~~

~~I am not entirely happy with the name of the new database. I called it 'unused', since it is *normally* unused by testcases (e.g. not used directly), but can be used by testcases that need to go through the full create/destroy cycle. Any suggestions?~~

~~Also, when this database will be used for multiple tests (e.g. I also need it for #12166), I'm afraid there might be concurrency issues when both tests end up running at the same time. Is there any standard way to deal with this? Maybe simply add a lock for using this third database?~~",matthijskooijman,None,2019-12-23T22:33:11Z,2020-01-20T10:22:49Z
12246,Fixed #31114 -- Fixed HttpRequest.build_absolute_uri() crash with reverse_lazy() locations.,https://code.djangoproject.com/ticket/31114,jdufresne,None,2019-12-23T11:06:35Z,2020-03-21T14:08:01Z
12245,Increased test coverage of django.utils.inspect.,The function is not used in django's code base.,atombrella,None,2019-12-23T10:57:27Z,2019-12-31T07:11:45Z
12244,Refs #31115 -- Added test for nested subquery that references related fields.,"Thanks Dmitriy Gunchenko for the report and Simon Charette for the analysis and tests.

Regression in 5a4d7285bd10bd40d9f7e574a7c421eb21094858.

Fixed in 5a4d7285bd10bd40d9f7e574a7c421eb21094858.

ticket-31115",felixxm,None,2019-12-23T10:56:02Z,2019-12-23T11:18:09Z
12243,Added guidelines for assertIs() usage.,"I can open a discussion on the mailing list if needed, and possibly also a ticket.

`assertTrue` is used quite a lot, when it seems that `assertIs` would have been better because it checks the boolean value of the expression, when `assertTrue` just checks that the truthiness of the expression. ",atombrella,None,2019-12-22T10:27:20Z,2019-12-31T07:11:21Z
12242,Stable/3.0.x,Changes in the comments,suryatejabandlamudi,None,2019-12-22T05:46:38Z,2019-12-22T05:50:49Z
12241,Fixed #31109 -- Disabled grouping by aliases on QuerySet.exists().,"Clearing the SELECT clause in Query.has_results was orphaning GROUP BY references to it.

Thanks Thierry Bastian for the report and Baptiste Mispelon for the bisect.",charettes,None,2019-12-22T04:27:34Z,2019-12-23T08:25:40Z
12240,Renamed set_language()'s next variable to avoid clash with builtin.,"Hello Django team,

I've noticed that in `views.i18n` module, we're using the [`next`](https://github.com/django/django/blob/master/django/views/i18n.py#L34) variable, in my opinion, it would be better to rename it to `next_` to avoid confusion between built-in python `next()` function.

Since a lot of modern IDE highlightings built-in functions, I think it makes sense to rename it.",myusko,None,2019-12-21T20:23:38Z,2020-01-09T09:18:39Z
12239,Fixed #28991 -- Added EmptyFieldListFilter class in admin.filters.,This PR continues the work from #10599 which in turn took from #9546.,jmfederico,None,2019-12-21T15:49:20Z,2020-01-10T16:46:18Z
12238,Fixed #30780 -- Improved visibility of Getting Help FAQ in tutorials.,"This PR is linked to https://github.com/django/djangoproject.com/pull/969 and should be merged last because it contains references to a button added by the PR on djangoproject.com

Trac ticket : https://code.djangoproject.com/ticket/30780",Crocmagnon,None,2019-12-21T14:03:24Z,2019-12-31T08:26:04Z
12237,"Fixed #30892 -- Fixed slugify() and admin's URLify.js for ""İ"".","This eliminates the validation error when validating a string
containing an ""İ"" that has been run trough slugify with
allow_unicode=true.

Thanks Luis Nell for solution idea as well as a very detailed bug report.

I am new to writing tests in Django so any feedback about that or anything else would be appreciated.
See the issue for the discussion up until this point. https://code.djangoproject.com/ticket/30892",Sjbrgsn,None,2019-12-21T12:24:00Z,2019-12-31T06:55:42Z
12236,Fixed #31110 -- Fixed typo in docs/ref/models/expressions.txt.,,Taoup,None,2019-12-21T04:12:05Z,2019-12-21T19:33:05Z
12235,Fixed non int values in function _boolean_icon,The field_val is now working as expected because not always is an int ('0' value instead of 0).,jesusredondo,None,2019-12-20T18:28:36Z,2019-12-21T19:27:51Z
12234,Removed unnecessary code-block directives in various docs.,"Better follows internal ""Writing documentation"".

https://docs.djangoproject.com/en/3.0/internals/contributing/writing-documentation/#guidelines-for-restructuredtext-files

> Add `.. code-block:: <lang>` to literal blocks so that they get
> highlighted. Prefer relying on automatic highlighting using :: (two
> colons). This has the benefit that if the code contains some invalid
> syntax, it won’t be highlighted. Adding `.. code-block:: python`, for
> example, will force highlighting despite invalid syntax.",jdufresne,None,2019-12-20T16:21:04Z,2020-03-21T14:08:03Z
12233,Fixed #30138 -- Changed QuerySet.bulk_create() to set pk of created objects when ignore_conflicts=True.,"[Ticket 30138](https://code.djangoproject.com/ticket/30138)
Continue to The [PR](https://github.com/django/django/pull/10998)",hramezani,None,2019-12-20T15:04:32Z,2020-01-08T11:38:59Z
12232,Fixed #31106 -- Fixed migrations crash on PostgreSQL 10+ when adding FK constraints inline and changing data.,"This allows adding foreign key constraints inline and changing data in the same migration on PostgreSQL 10+.

Regression in 738faf9da2a5cd03148a36375db80746c99c9623.

Thanks Janne Rönkkö for the report and Simon Charette for the implementation idea.

ticket-31106",felixxm,None,2019-12-20T11:53:50Z,2019-12-23T22:29:03Z
12231,Fixed #31095 -- Made RelatedManager.set() preserve existing m2m relations with an invalid type.,[Ticket 31095](https://code.djangoproject.com/ticket/31095),hramezani,None,2019-12-19T10:10:59Z,2019-12-19T12:53:32Z
12230,Fixed #31103 -- Improved pagination topic documentation.,"Added specific reference to the Page object which is important for
understanding how pagination works. Added details of how the context
is affected when pagination is added to a ListView, and a template to
show how this is used. Changed the example model name to Contact from
Contacts which was potentially confusing. Adjusted variable names in
the view function example so it is in step with the class-based example
and so the same template would actually work for both.",eastface,None,2019-12-18T22:29:29Z,2020-01-15T13:50:48Z
12229,Fixed #31032 -- Cleaner explanation for which clients to run admin ap…,"This is my first PR, if it's possible, I need guidance, have a nice day.",ozata,None,2019-12-18T17:22:24Z,2020-02-27T09:36:25Z
12228,Cleaner explanation for which clients to run admin app on web,"This is my first PR, if it's possible, I need guidance, have a nice day.",ozata,None,2019-12-18T17:17:46Z,2019-12-18T17:21:14Z
12227,Fixed #31094 -- Included columns referenced by subqueries in GROUP BY on aggregations.,"Failing to include such columns resulted in a crash on PostgreSQL where only
selected table primary keys are included unless an explicit grouping set is
specified.

Thanks Johannes Hoppe for the report.

Refs #30158.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>

--- 

https://code.djangoproject.com/ticket/31094

---

I didn't have the chance to get a full suite run so there will likely be failures and the patch could likely be broken into separate commits.

The idea here is to piggy back on `external_aliases` to include *all* external aliases and not only the ones that are aliased (aliased external aliases) with a flag denoting whether or not they are aliases.

Now that a query knows which aliases are external to itself it can walk through it's collection of expressions and determine which ones are referring to external aliases. These are the ones that need to be included in the `GROUP BY` clause on PostgreSQL.",charettes,None,2019-12-17T06:59:55Z,2019-12-19T14:52:02Z
12226,Fixed typo in documentations.,,hramezani,None,2019-12-16T21:22:53Z,2019-12-18T10:36:28Z
12225,Fixed #31086 -- Improved error message for admin model inlines with more than one foreign key to the same parent.,"Added a list of foreign keys available for a model, in the error message
raised by the ```__get_foreign_key``` method. Also updated the error message
for the admin_checks test's , ```test_inline_self_check``` method.",ShubhamSingh20,None,2019-12-16T21:18:44Z,2019-12-17T08:35:14Z
12224,Fixed #31086 -- Added ForeignKeys list in error message with code admin.E202,"Added a list of foreign keys available for a model, in the error message raised by the ```__get_foreign_key``` method. Also updated the error message for the admin_checks test's , ```test_inline_self_check``` method.",ShubhamSingh20,b'invalid',2019-12-16T20:49:30Z,2019-12-17T06:43:12Z
12223,Fixed #31086 -- Added choices for ForeignKey in admin.E202 error message,"Added a list of all the valid ForeignKey, to be displayed with the admin
E.202 error message, in the _get_foreign_key() method.",ShubhamSingh20,b'invalid',2019-12-16T19:33:17Z,2019-12-17T06:43:19Z
12222,Documentation: Recommend utf8mb4 instead of utf8 for MySQL.,"`utf8mb4` is the ""real"" utf8 for MySQL. Otherwise, characters like emojis won't work.",PetterS,None,2019-12-16T08:38:44Z,2019-12-16T10:07:34Z
12221,Optimized containment check in ChoicesMeta.,,cool-RR,None,2019-12-15T20:00:55Z,2019-12-16T10:22:46Z
12220,Fixed #31076 -- Fixed dbshell crash on Windows with Python < 3.8.,"`dbshell` command fails for sqllite on Windows for python 
versions older than 3.8. see [ticket 31076](https://code.djangoproject.com/ticket/31076)

I am not sure if I should add any tests for this fix.",zeyneloz,None,2019-12-14T23:27:51Z,2019-12-16T10:21:40Z
12218,Made BaseCacheTests skip culling tests if culling is not supported.,,jdufresne,None,2019-12-14T17:11:00Z,2020-03-19T14:57:06Z
12217,Improved tests assertions in cache tests.,"- Always assert the result of `.add()`, `.delete()`, `.touch()`, `incr()`, `.decr()`, and `.get_or_set()`.
- Assert bools using `.assertIs()` to verify its type is correct, not only its truthiness.",jdufresne,None,2019-12-14T15:28:06Z,2020-03-21T14:08:04Z
12216,Refs #12679 -- Added test for using property as ModelAdmin.inlines.,ticket-12679,bmispelon,None,2019-12-13T21:02:36Z,2019-12-15T06:54:01Z
12215,Fixed #31088 -- Added support for websearch searching in SearchQuery.,"
",jamesturk,None,2019-12-13T20:55:34Z,2020-06-14T23:29:47Z
12214,Fixed Pytest command in upgrade documentation,Pytest changed their recommended entrypoint to 'pytest' in version 3.0.0 in 2016 : https://docs.pytest.org/en/latest/changelog.html#id1009. Also link the name since this is the only reference in the Django documentation at current.,adamchainz,None,2019-12-13T17:47:33Z,2020-07-20T10:17:42Z
12213,Added Algerian Arabic language.,,claudep,None,2019-12-13T16:14:04Z,2019-12-14T16:06:19Z
12212,Fixed #26743 -- Fixed UnboundLocalError crash when deserializing m2m fields and value isn't iterable.,"Even though this change affect all serializers, I only added a test for the `json` one. This seems like a somewhat consistent practice: `tests_json.py` has a lot more test methods than `tests_xml.py` for example and not all of them are json-specific.

Adding the test to the base class (the one in `tests.py` that gets executed for all available serialization formats) is complicated because it's not straightforward to generate the broken serialized data that correspond to the active format (`self.serializer_name`).


ticket-26743",bmispelon,None,2019-12-12T08:40:03Z,2019-12-13T11:12:03Z
12211,Refs #23919 -- Used yield from in inspectdb.,,jdufresne,None,2019-12-12T05:30:45Z,2020-03-21T14:08:29Z
12210,avoid throwing exceptions on bad input data,"Resolves exceptions being thrown on 'NoneType' object has no attribute 'has_header' when bad input data is passed.

We occasionally have issues with spammers hitting out site throwing the below error, this should resolve the issue


Exception Value: | 'NoneType' object has no attribute 'has_header'
-- | --
/var/www/python-blogs/venv/lib64/python3.7/site-packages/django/utils/cache.py in patch_response_headers, line 243

",botanicvelious,None,2019-12-12T04:24:14Z,2019-12-12T07:01:33Z
12209,Fixed #31071 -- Disabled insert optimization for primary keys with defaults when loading fixtures.,,charettes,None,2019-12-12T04:11:05Z,2020-01-05T23:53:23Z
12208,Removed unnecessary app_template directory from flake8 exclude.,Unnecessary since abc0777b63057e2ff97eee2ff184356051e14c47 where the `.py` suffix was change for template files.,jdufresne,None,2019-12-12T04:08:14Z,2020-03-21T14:08:32Z
12207,First ar_DZ locale init,"	new file:   django/conf/locale/ar_DZ/LC_MESSAGES/django.mo
	new file:   django/conf/locale/ar_DZ/LC_MESSAGES/django.po
	new file:   django/conf/locale/ar_DZ/__init__.py
	new file:   django/conf/locale/ar_DZ/formats.py",infosrabah,None,2019-12-12T01:17:05Z,2019-12-12T07:11:12Z
12206,Fixed typos in 3.0 release notes and docs/ref/request-response.txt.,,hramezani,None,2019-12-11T21:05:13Z,2019-12-12T09:19:10Z
12205,Fixed typo in tests/cache/tests.py docstring.,,jdufresne,None,2019-12-11T16:06:44Z,2019-12-11T16:40:19Z
12204,Refs #25361 -- Added test for pickling queryset of abstract-inherited models with Meta.ordering.,"While triaging some old tickets, I found that ticket-25361 appears to have been fixed as a side-effect of another issue.

I propose adding this test based on the report and closing the ticket.",bmispelon,None,2019-12-11T14:28:00Z,2019-12-12T08:44:29Z
12203,"Fixed #31069, Refs #26431 -- Doc'd RegexPattern behavior change in passing optional named groups in Django 3.0.",[Ticket 31069](https://code.djangoproject.com/ticket/31069),hramezani,None,2019-12-11T10:59:29Z,2019-12-12T13:50:08Z
12202,Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.,ticket-31073,felixxm,None,2019-12-11T08:35:47Z,2019-12-11T09:07:59Z
12201,Fixed #31055 -- Handled database errors on check constraint support check.,"Since #28478 test databases are only created if necessary for the subset of
tests targeted.

Under such circumstances its possible for some databases defined in
settings.DATABASES not to exist which prevents the retrieval of the
supports_table_check_constraints feature flag on MySQL since it requires a
usable connection.

Skipping the check when this happens should not be harmful given it will run
under normal circumstances when the full set of tests are targeted or when
checks are run from a different management command.

---

https://code.djangoproject.com/ticket/31055",charettes,None,2019-12-11T00:06:10Z,2020-01-31T06:42:46Z
12200,"Fixed #31080 -- Removed redundant type=""text/javascript"" attribute from <script> tags.",https://code.djangoproject.com/ticket/31080,jdufresne,None,2019-12-10T13:38:42Z,2019-12-11T15:51:25Z
12199,Change minimum sqlite version.,,oysterbank,None,2019-12-09T20:25:59Z,2019-12-09T20:27:12Z
12198,Fixed #26480 -- Fixed crash of contrib.auth.authenticate() on decorated authenticate() methods of authentication backends.,"`inspect.getcallargs()` doesn't follow potential `__wrapped__` functions (set by `functools.wraps()` for example) and is deprecated since Python 3.5.

Fixes ticket-26480 as a side-effect.

I've split the pull request into 3 commits for easier review:
1) Rewrote imports to make the actual fix less noisy (should be a noop)
2) Added test for ticket-26480 (failing)
3) Replaced all usages of `inspect.getcallargs()` (there were only 3).",bmispelon,None,2019-12-09T16:59:47Z,2019-12-10T08:58:02Z
12197,Fixed #31044 -- Errored nicely when using Prefetch with a raw() queryset.,[Ticket 31044](https://code.djangoproject.com/ticket/31044),hramezani,None,2019-12-09T12:02:49Z,2019-12-09T19:20:39Z
12196,Fixed #31077 -- Made debug decorators raise TypeError if they're not called.,"… decorators.

Django will now raise an error if you forget to
call the decorator:

    @sensitive_variables
    def my_function(*args):
        ...

ticket-31077",bmispelon,None,2019-12-09T11:37:40Z,2019-12-10T13:49:22Z
12195,Refs #23433 -- Fixed test_django_admin_py.DeprecationTest tests failures on Windows and Python < 3.8.,`subprocess.run()`'s `args` parameter accepts a path-like object on Windows since Python 3.8 (see [documentation](https://docs.python.org/3/library/subprocess.html).,felixxm,None,2019-12-09T10:04:26Z,2019-12-10T10:18:19Z
12194,Refs #30676 -- Added test for invalid --pdb and --parallel usage in DiscoverRunner.,,felixxm,None,2019-12-09T09:34:55Z,2019-12-09T10:12:14Z
12193,Fixed #31073 -- Prevented CheckboxInput.get_context() from mutating attrs.,"[Ticket 31073](https://code.djangoproject.com/ticket/31073)

I chose modifying the SplitArrayWidget over the CheckboxInput to keep the potential negative impact to a minimum, but would appreciate guidance if that was the correct choice. I'm unsure because no other widget modifies the passed-in attrs dictionary, so avoiding that in CheckboxInput may be preferable instead.",PeteAndersen,None,2019-12-08T01:38:25Z,2019-12-10T11:50:33Z
12192,Rewrote simple JavaScript example without jQuery.,"Makes the example as universal as possible. The example is just as easy
to write using vanilla JavaScript as it doesn't use any exotic jQuery
features.

Also drop the MIME type from the script tag. The script type defaults to
JavaScript and the HTML5 specification urges authors to omit the
attribute rather than provide a redundant MIME type.",jdufresne,None,2019-12-07T22:05:18Z,2019-12-12T15:34:43Z
12191,Fixed typo in docs/releases/3.0.1.txt.,,AliMirlou,None,2019-12-07T05:13:34Z,2019-12-09T06:57:40Z
12190,Fixed #31070 -- Added urls.W009 check for mixed named/unnamed capture…,"… groups in URLconf.

ticket-31070",bmispelon,None,2019-12-06T10:24:44Z,2019-12-17T14:15:52Z
12189,Fixed typo in ModelChoiceFieldTests.,"The `subindex` and `attrs` arguments should be passed through to the parent, not overridden as `None`.",jdufresne,None,2019-12-06T03:21:55Z,2020-03-21T14:08:34Z
12188,Fixed #31066 -- Added a docstring to main() function in manage.py template.,,natural-neural-network,None,2019-12-06T02:32:49Z,2019-12-09T06:54:52Z
12186,Fixed outdated import in django/utils/safestring.py.,The backported version of `functools.wraps` was removed a while ago in 13864703bc1d5dd4dac63c96c6a4b42a392bc57f so we can import directly from `functools` now.,bmispelon,None,2019-12-05T16:35:46Z,2019-12-06T08:37:23Z
12185,Fixed #31060 -- Reallowed window expressions to be used in conditions outside of queryset filters.,Regression in [#30668](https://github.com/django/django/commit/4edad1ddf6203326e0be4bdb105beecb0fe454c4).,gizmondo,None,2019-12-05T16:13:43Z,2019-12-06T14:24:39Z
12184,Fixed #31061 -- Ignored positional args in django.urls.resolve() when all optional named parameters are missing.,"Regression in 76b993a117b61c41584e95149a67d8a1e9f49dd1.

Thanks Claude Paroz for the report.

ticket-31061",felixxm,None,2019-12-05T13:09:48Z,2019-12-06T08:32:55Z
12183,Moved selenium import to nested scope.,"Selenium is an optional dependency, so this import should be nested inside the test case function. ",carltongibson,None,2019-12-05T10:11:34Z,2019-12-05T11:47:36Z
12182,"Fixed optimize"" __eq__(self, other)"" method of  CaseInsensitiveMapping in django/utils/datastructures.py","if they don't have same length, then there is no need to create two dict",sunsongpy,None,2019-12-05T07:39:54Z,2019-12-09T07:01:46Z
12181,Fixed #31062 -- Doc'd asgi.py in tutorials and project templates.,ticket-31062,felixxm,None,2019-12-05T07:10:26Z,2019-12-05T07:39:08Z
12180,Fixed typo in docs/releases/3.0.txt.,,jsals1,None,2019-12-05T03:55:01Z,2019-12-07T02:11:03Z
12179,Removed unnecessary apostrophe.,,jsals1,None,2019-12-05T03:50:55Z,2019-12-05T03:54:43Z
12178,Fixed #30819 -- Fixed year determination in admin calendar widget for two-digit years.,Completing this PR: https://github.com/django/django/pull/11904,farhaanbukhsh,None,2019-12-04T03:33:01Z,2019-12-30T13:30:38Z
12177,Fixed #20935 - Reduced error count in Epub,Discussion: https://code.djangoproject.com/ticket/20935#comment:14,fredrikmalmfors,None,2019-12-03T23:54:24Z,2019-12-04T10:38:15Z
12176,Fixed a problem with the order of the apps in the Template Loader,"Hi I have found a problem when a third party app overrides the Django Admin templates
The problem happens in 'django.template.loaders.app_directories.Loader'
As this apps name are stored in a dictionary the order is not consistent so sometimes you get the template of the Django app and sometimes you get the template of the third party app. This makes it impossible for a third party app to override the admin templates. In the Third Party app I maintain (Django-Tenants) it really important to be able to override the admin templates.
So the fix I have done is very simple it changes the self.app_configs = {} to an ordered dict.",tomturner,None,2019-12-03T23:32:58Z,2019-12-04T09:40:16Z
12175,Fixed typo in internals/contributing/writing-documentation.txt.,An extra `and` has been removed.,hramezani,None,2019-12-03T16:27:58Z,2019-12-03T20:04:53Z
12174,"Replaced ""Same as …"" text with the actual text.",,jdufresne,None,2019-12-03T13:32:50Z,2020-03-21T14:08:35Z
12173,Allow configuring session cache prefix,"By default this creates a key without a separator

`django_cache:1:django.contrib.sessions.cachecte1pz8c5vlu0ta601a8xqqbge5hh2fz`",tony,None,2019-12-02T22:43:57Z,2019-12-02T22:44:40Z
12172,Fixed #31056 -- Allowed disabling async-unsafe check with an environment variable.,"This allows manual disabling of this safety feature, and includes docs about it, plus one test to enforce it.

Fix for https://code.djangoproject.com/ticket/31056",andrewgodwin,None,2019-12-02T20:04:10Z,2019-12-03T17:07:19Z
12171,Fixed #26424 -- Added support for schemes='__all__' to URLValidator.,"Thanks to Burhan Khalid for the original pull request.

ticket-26424",bmispelon,None,2019-12-02T14:10:49Z,2019-12-09T19:55:58Z
12170,update django.po pt_BR,naturaltime translation spacing correction.,Iazzetta,None,2019-12-02T13:42:31Z,2019-12-02T13:43:48Z
12169,Fixed #27430 -- Added -b/--buffer option to DiscoverRunner.,"I couldn't figure out how to make it work with parallel test execution

ticket-27430",bmispelon,None,2019-12-02T10:44:49Z,2019-12-09T13:23:52Z
12168,Refs #25705 -- Fixed invalid SQL generated by SQLFuncMixin.as_sql() in custom_lookups tests.,See comments https://github.com/django/django/pull/10568#pullrequestreview-296832467 and https://github.com/django/django/pull/12156#discussion_r352130061.,felixxm,None,2019-12-02T10:39:58Z,2019-12-02T12:58:45Z
12167,Updated translations from Transifex,,claudep,None,2019-12-02T07:59:38Z,2019-12-02T10:21:34Z
12166,Better handling of (de)serialization of circular and forward references with natural keys,"This PR addresses [#26552](https://code.djangoproject.com/ticket/26552) and [#31051](https://code.djangoproject.com/ticket/31051), both of which address problems with (de)serializing data involving forward or circular references and natural keys.",matthijskooijman,None,2019-12-02T00:34:31Z,2020-04-03T07:39:26Z
12165,Fixed #30980 -- admin.E130(duplicate __name__ attributes of actions) …,…should specify which were duplicated.,keshav2212,None,2019-12-01T17:39:13Z,2020-01-07T13:11:13Z
12164,Fixes #31050 -- Remove empty strings from recipients in email message headers.,"[Ticket #31050](https://code.djangoproject.com/ticket/31050)

If we can't filter values inside init for some reason (eg. `msg.to = ['']`), let me know, I'll change `_set_list_header_if_not_empty` function then.",kalekseev,None,2019-12-01T15:31:25Z,2019-12-02T12:23:31Z
12163,Used mock.Mock() in SMTPBackendTests.,"We are typechecking mail tests now https://github.com/typeddjango/django-stubs/pull/208 and this patch would help us to pass tests without ignoring errors. Not sure would you accept such patches to test modules, let me know if I have to create ticket for it.",kalekseev,None,2019-12-01T15:08:03Z,2020-08-07T19:04:45Z
12162,Fixed #31024 -- Clarified {% firstof %} tag's handling of arguments.,"Changed the documentation to say that firstof returns
the first argument that is not ""Falsy"" (instead of ""False"").

Ticket: https://code.djangoproject.com/ticket/31024",uttamk,None,2019-11-30T13:52:30Z,2019-12-04T13:37:02Z
12161,Fixed #31046 -- Allowed RelatedManager.add()/create()/set() to accept callable values in through_defaults.,ticket-31046,bmispelon,None,2019-11-29T17:06:08Z,2019-12-03T20:24:06Z
12160,Update libgeos.py to fix version_regex to match bad CAPI version strings,"The latest 3.0.x-CAPI version strings has a space char suffixed appended, and won't match the `version_regex` regular expression, breaking migration commands.",xenomuta,None,2019-11-29T16:30:08Z,2019-12-02T09:51:01Z
12159,Fixed #31034 -- Added a navigation sidebar to the admin,"https://code.djangoproject.com/ticket/31034

I'm not altogether sure about my approach here. This seems to be the way that is the least disruptive to me, (almost) all the CSS is in a new file so it shouldn't affect users that have it turned off.

Really I think something like a drawer that slides from the side and covers some of the page would be better, as even with it only enabled on the largest breakpoint it can be a little crowded at the minimum size (1024px). Open to suggestions here. Also couldn't find a combination of `height`s and `min-height`s that would get the sidebar to cover the whole height of the screen without breaking something.

I decided to default to on since it seems like the majority of users would want that, and it's easy enough to turn off if upgrading and not wanting it.

Tested with latest Chrome, Firefox, Safari. Could use some eyes on other browsers.

Will add tests/docs after getting some feedback.

Screens:

15"" Macbook:
<img width=""1440"" alt=""Screenshot 2019-12-05 at 14 22 05"" src=""https://user-images.githubusercontent.com/3871354/70239136-06213300-176b-11ea-81f5-cb34656f752a.png"">

At 1025px, the smallest size the sidebar will show up (a little crowded, but didn't want to add another breakpoint):
<img width=""1029"" alt=""Screenshot 2019-12-05 at 14 24 00"" src=""https://user-images.githubusercontent.com/3871354/70239203-2b15a600-176b-11ea-981e-f292dbb06f70.png"">
",knyghty,None,2019-11-29T15:56:16Z,2020-08-19T18:06:51Z
12158,"Fixed #31039 -- Added support for contained_by lookup with AutoFields, SmallIntegerField, and DecimalField.",[Ticket 31039](https://code.djangoproject.com/ticket/31039).,hramezani,None,2019-11-29T14:00:42Z,2019-12-05T21:09:46Z
12157,Refs #29892 -- Made Selenium tests wait for popups to be ready.,"Fixes intermittent test failure:

    ======================================================================
    FAIL: test_inline_with_popup_cancel_delete (admin_views.tests.SeleniumTests)
    Clicking """"No, take me back"" on a delete popup closes the window.
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "".../django/tests/admin_views/tests.py"", line 4840, in test_inline_with_popup_cancel_delete
        self.assertEqual(len(self.selenium.window_handles), 1)
    AssertionError: 2 != 1

https://code.djangoproject.com/ticket/29892",jdufresne,None,2019-11-29T04:17:37Z,2019-12-02T19:55:46Z
12155,Fixed #30255 -- Fixed admindocs errors when rendering docstrings without leading newlines.,"…g with no leading newline

ticket-30255",bmispelon,None,2019-11-28T16:24:23Z,2019-11-29T13:05:01Z
12154,"Fixed #30953 -- Made select_for_update() lock queryset's model when using ""self"" with multi-table inheritance.","See ticket-30953, TODO:
- [x] release notes,
- [x] fix for using parent model's pointer in the `of` argument (`test_for_update_sql_model_inheritance_ptr_generated_of`),
- [x] add `_ptr` to the list of choices in `FieldError`.

Thanks Abhijeet Viswa for the report and initial patch (#12082). 

This patch presents two changes in the current behavior:
- 1st, `select_for_update(of=('self',))` will lock a queryset's model instead of a parent model (data loss issue),
- 2nd, `select_for_update(of=('self',)).values(...)` won't lock any model when `SELECT` clause doesn't contain any columns from a queryset's model (this is a side effect of the main fix that is tested in `test_for_update_of_self_when_self_is_not_selected`, IMO the new behavior is the correct one).",felixxm,None,2019-11-28T12:53:35Z,2019-12-02T06:57:22Z
12153,Fixed #31021 -- Fixed proxy model permissions data migration crash with a multiple databases setup.,"ticket-31021

Regression in 98296f86b340c8c9c968375d59f1d3a3479e60c2.",felixxm,None,2019-11-28T10:53:17Z,2019-12-02T06:39:09Z
12152,Fixed #29892 -- Added explicit Selenium wait in admin autocomplete tests.,"@jdufresne @codingjoe This is the kind of thing I'm aiming at for the selenium tests. 

* Avoid the implicit wait, since...
* Our use-case is quite simple: we **know** the expected state before/after, and we don't have to deal with difficult timing questions, so...
* We end up with faster (and more precise?) tests if we can control the transitions more tightly and then use straight asserts. (A failure would tell us something, I think.) 

What do you both think? Thanks!

ticket-29892",carltongibson,None,2019-11-28T10:21:08Z,2019-11-29T13:03:27Z
12151,Fixed #31042 -- Removed AdminSeleniumTestCase.get_css_value() in favor of Selenium .is_displayed().,https://code.djangoproject.com/ticket/31042,jdufresne,None,2019-11-28T03:45:45Z,2019-11-28T14:10:36Z
12150,Refs #28373 -- Stopped setting tzinfo in typecast_timestamp().,"This seems unneeded, although I'm not sure when it became so.",sir-sigurd,None,2019-11-27T12:05:04Z,2019-12-11T13:02:09Z
12149,Fixed #29892 -- Fixed Selenium tests to pass with Firefox.,https://code.djangoproject.com/ticket/29892,jdufresne,None,2019-11-27T01:07:37Z,2019-11-28T11:20:33Z
12148,Fixed #22261 -- Fixed resolving namespaced URLs for flatpages.,"[Ticket 22261](https://code.djangoproject.com/ticket/22261).
Continue this [PR](https://github.com/django/django/pull/2554).
I cleaned the patch and fixed the comments.",hramezani,None,2019-11-26T23:08:25Z,2020-01-28T12:45:01Z
12147,Refs #29892 -- Replaced Selenium .submit() shim with .click() on the submit button.,"There is no WebDriver submit primitive. The Selenium project implements
it as a convenience only. The geckodriver developers recommend against
using it. Replace it with a real primitive, click on the submit button.

Fixes failing Seleninum test test_date_time_picker_shortcuts when using
the Firefox Selenium driver.

https://code.djangoproject.com/ticket/29892",jdufresne,None,2019-11-26T13:03:19Z,2019-11-28T11:20:47Z
12146,Used :ticket: role in all tickets links.,,sir-sigurd,None,2019-11-26T09:56:26Z,2020-01-17T16:10:30Z
12145,Fixed #31030 -- Registered SQLite functions as deterministic on Python 3.8.,https://code.djangoproject.com/ticket/31030,sir-sigurd,None,2019-11-26T06:59:31Z,2020-04-06T08:25:35Z
12144,Fixed #31018 -- Removed django-nonrel in NoSQL databases FAQ.,ticket-31018,felixxm,None,2019-11-25T19:18:27Z,2019-11-27T06:36:38Z
12143,Fixed #31031 -- Fixed data loss in admin changelist view when formset's prefix contains regex special chars.,"Data loss could happen when using a Formset with a custom
prefix that contains regex-significant characters.

Refs b18650a2634890aa758abae2f33875daa13a9ba3

ticket-31031",bmispelon,None,2019-11-25T14:38:30Z,2019-11-26T08:19:13Z
12142,Fixed #31029 -- Used more specific links to RFCs.,ticket-31029,bmispelon,None,2019-11-25T08:43:43Z,2019-11-30T06:31:32Z
12141,Fixed #30803 -- Allowed comma separators for milliseconds in django.utils.dateparse functions.,This is a continuation to complete https://github.com/django/django/pull/11818,farhaanbukhsh,None,2019-11-25T03:52:07Z,2019-11-27T08:51:36Z
12140,Removed unused unencoded_ampersands_re regex.,It should have been removed in 8b81dee60c1533e714a310fa5c3907356042a64c,bmispelon,None,2019-11-24T22:14:12Z,2019-11-25T08:16:52Z
12139,"Fixed #31028 -- Used classList API to check, add and remove DOM classes.",https://code.djangoproject.com/ticket/31028,jdufresne,None,2019-11-24T20:30:15Z,2019-11-28T14:21:49Z
12138,Fixed #31027 -- Replaced .getAttribute()/.setAttribute() usage with DOM properties.,https://code.djangoproject.com/ticket/31027,jdufresne,None,2019-11-24T20:08:34Z,2019-11-28T01:41:50Z
12137,Refs #25388 -- Corrected value of TEST MIGRATE setting in MIGRATION_MODULES docs.,,jdufresne,None,2019-11-24T16:46:04Z,2019-11-28T11:20:57Z
12136,Fixed #31002 -- Fixed GIS lookups crash against a subquery annotation.,"https://code.djangoproject.com/ticket/31002

Thanks Vasileios Bouzas for the report.",charettes,None,2019-11-24T15:25:26Z,2019-11-25T14:13:38Z
12135,Fixed #29942 -- Fixed viewsource links to contrib.auth.forms not appearing.,[Ticket 29942](https://code.djangoproject.com/ticket/29942),hramezani,None,2019-11-24T15:16:27Z,2020-07-03T09:14:42Z
12134,Fixed #31014 -- Added FromWKB and FromWKT GIS functions.,"https://code.djangoproject.com/ticket/31014

- [ ] add `srid` parameter?",sir-sigurd,None,2019-11-24T10:37:35Z,2020-09-29T10:02:09Z
12132,Fixed #31010 -- Allowed subdomains of localhost in the Host header by default when DEBUG=True.,https://code.djangoproject.com/ticket/31010,thenewguy,None,2019-11-24T02:18:03Z,2019-12-05T09:05:14Z
12131,Fixed #31468 -- Allowed specifying migration filename in Operation.,[ticket](https://code.djangoproject.com/ticket/31468),adamchainz,None,2019-11-23T11:09:24Z,2020-05-28T10:57:06Z
12130,Improved custom MultiWidget example in docs.,"I was working through creating a `MultiWidget` subclass yesterday and found a number of problems with the example:

* It used `from django.forms import widgets` even though this page recommends using them from `django.forms` directly
* Some code unnecessarily snipped for brevity
* Code style was a bit weird, using `D` as a variable name
* It's not necessary for widgets to validate their data, but that implementation was, which I think is a bit misleading.
* Due to doing some validation, the widget's `decompress()` wasn't handling the case when it is passed a string that the field couldn't convert in `to_python`  to a `datetime.date`.

I've thus rewritten this example. I tested it in a [single file app](https://adamj.eu/tech/2019/04/03/django-versus-flask-with-single-file-applications/) with a simple form + view:

```python
class MyForm(forms.Form):
    select_a_date = forms.DateField(widget=DateSelectorWidget())


def index(request):
    if request.method == ""POST"":
        form = MyForm(request.POST)
        if form.is_valid():
            return HttpResponse(
                f'Great choice of date, {form.cleaned_data[""select_a_date""]}'
            )
    else:
        form = MyForm(initial={""select_a_date"": date.today()})
    return HttpResponse(
        f""""""
        <html>
          <body>
            <form method=""post"">
              {form.as_p()}
              <button type=""submit"">Try it!</button>
            </form>
          </body>
        </html>
    """"""
    )
```",adamchainz,None,2019-11-23T10:25:51Z,2019-11-28T15:46:53Z
12129,Doc'd SpatiaLite support of 3D geometry fields.,https://github.com/django/django/blob/a5855c8f0fe17b7e888bd8137874ef78012a7294/django/contrib/gis/db/backends/spatialite/features.py#L9,sir-sigurd,None,2019-11-23T09:04:26Z,2019-11-25T08:39:56Z
12128,Fixed #31006 -- Doc'd backslash escaping in date/time template filters.,Fix for Issue 31006,ryancheley,None,2019-11-23T02:45:29Z,2019-12-02T12:54:15Z
12127,Fixed #31025 -- Fixed highlightlinenothreshold deprecation warning on Sphinx 1.8+.,ticket-31025,bmispelon,None,2019-11-22T21:33:30Z,2019-11-25T09:33:34Z
12126,Fixed #28469 -- Doc'd how to create a custom HttpResponse subclass.,"…esponse class

ticket-28469",bmispelon,None,2019-11-22T20:59:17Z,2019-11-25T07:40:06Z
12125,Fixed #27914 -- Fixed serialization of nested classes in migrations.,"With v3.0.x introducing models.Choices, models.IntegerChoices, using nested enums will become a common pattern; serializing them properly with __qualname__ seems prudent.
",jbowen7,None,2019-11-22T12:55:45Z,2019-11-25T10:30:43Z
12124,Stable/3.0.x,"Fix for Issue 31006 ""Document how to escape a date/time format character for the |date and |time filters.""",ryancheley,None,2019-11-22T04:56:06Z,2019-11-22T04:56:46Z
12123,Fixed #8467 -- Prevented crash when adding existent m2m relation with an invalid type.,"This was an issue anymore on backends that allows conflicts to be ignored
(Refs #19544) as long the provided values were coercible to the expected
type. However on the remaining backends that don't support this feature,
namely Oracle, this could still result in an IntegrityError.

By attempting to coerce the provided values to the expected types in
Python beforehand we allow the existing value set intersection in
ManyRelatedManager._get_missing_target_ids to prevent the problematic
insertion attempts.

Thanks Baptiste Mispelon for triaging this old ticket against the current
state of the master branch.

---

https://code.djangoproject.com/ticket/8467",charettes,None,2019-11-22T01:16:46Z,2019-11-22T13:49:43Z
12122,Fixed #9762 -- Made DateFormat.r() locale-independent.,"Thanks to Antonio Melé for the original report all those years ago
and to all the contributors who helped along the way.

ticket-9762",bmispelon,None,2019-11-21T19:39:03Z,2019-11-22T12:36:59Z
12121,Fixed #30995 -- Allowed converter.to_url() to raise ValueError to indicate no match.,https://code.djangoproject.com/ticket/30995,jcushman,None,2019-11-21T19:11:36Z,2020-01-09T14:06:26Z
12120,"Fixed #31012 -- Reverted ""Fixed #29056 -- Fixed HTML5 validation of r…","…equired SelectDateWidget.""

This reverts commit f038214d917c982613f5a15db8dfe325b1f7479b.

The initial issue was incorrect. Django 2.2, and before, did not generate
invalid HTML as reported. With f038214 in place invalid HTML **was** generated.

Thanks to Kevin Brown for follow-up report and investigation.",carltongibson,None,2019-11-21T14:48:17Z,2019-11-21T20:14:48Z
12119,"Made versionadded/versionchanged annotations without a content end with ""."".",Regression in d2afa5eb2308e672b6313876856e32e2561b90f3.,sir-sigurd,None,2019-11-21T07:45:29Z,2019-11-21T08:03:36Z
12118,Fixed #31013 -- Removed jQuery usage in SelectBox.js.,ticket-31013,codingjoe,None,2019-11-21T06:10:49Z,2019-11-25T17:11:00Z
12117,Updated Select2 to version 4.0.12,"Update vendored Select2 dependency to the latest minor release (4.0.7 -> 4.0.12).

<details>
<summary>
Change log
</summary>

## 4.0.12

### Bug fixes

* Fixes incorrect offset when using the Shadow DOM and styling the `<html>` element (#5682)

### Miscellaneous

* Replace cdnjs with jsDelivr in the documentation (#5687)
* Fix incorrect provider for the automated NPM deployment (#5686)

## 4.0.11

### Bug fixes

* Fixes jQuery migrate error when getting offset when dropdownParent not in document (#5584)

### Miscellaneous

* Enable GitHub actions for CI (#5591)
* Documentation has been moved into and is deployed from the code repository (#5638)
* Remove Travis CI integration (#5665)

## 4.0.10

### New features / improvements

* Support passing in a selector for `dropdownParent` option (#5622)

### Bug fixes

* Fix bug where dropdowns pointing upwards were incorrectly positioned (#5621)

## 4.0.9

### New features / improvements

* Mirror disabled state through aria-disabled on selection (#5579)
* Select2 now clears the internal ID when it is destroyed (#5587)
* Set the main ARIA 1.1 roles and properties for comboboxes (#5582)
* The `language` option now has a clearly defined fallback chain (#5602)

### Bug fixes

* Do not propagate click when search box is not empty (#5580)
* Fix `maximumSelectionLength` being ignored by `closeOnSelect` (#5581)
* Fix generated options not receiving result IDs (#5586)
* Remove selection title attribute if text is empty (#5589)
* Reposition dropdown whenever items are selected (#5590)
* Fix dropdown positioning when displayed above with messages (#5592)
* Fix search box expanding width of container (#5595)
* `allowClear` no longer shifts selections to a new line (#5603)

### Translations

* Fix error in German translations (#5604)

### Miscellaneous

* Updated development grunt version so it no longer shows as vulnerable (#5597)
* Remove unused variables (#5554)

## 4.0.8

### New features / improvements

* Test against and fix compatibility with jQuery 3.4.1 (#5531)
* Results respect disabled state of `<option>` (#5560)
* Add `computedstyle` option for calculating the width (#5559)

### Bug fixes

* Fix tag creation being broken in 4.0.7 (#5558)
* Fix infinite scroll when the scrollbar is not visible (#5575)
* Revert change to focusing behaviour in 4.0.6 (#5576)

### Translations

* Fix wording in French translations (#5521)

### Miscellaneous

* Update grunt-contrib-qunit to latest version (#5530)
* Removed unused `.select2-selection__placeholder` CSS definitions for multiple selects (#5508)
* Remove deprecated jQuery shorthand (#5564)
</details>",kevin-brown,None,2019-11-21T03:38:01Z,2020-05-01T08:04:39Z
12116,Fixed #31012 -- Fixed SelectDateWidget required attribute,https://code.djangoproject.com/ticket/31012,kevin-brown,None,2019-11-21T03:24:15Z,2019-11-21T14:49:05Z
12115,Ticket #30916 - Added support for functional constraints.,Added case_insensitive option to UniqueConstraint to create a functional unique index with Lower,saad-alsaad,None,2019-11-21T01:04:57Z,2019-11-21T06:54:24Z
12114,Fixed #31008 -- Fixed typos in docs/topics/logging.txt.,,felixxm,None,2019-11-20T18:59:15Z,2019-11-20T19:35:40Z
12113,Fixed #30413 -- Fixed test database signature on SQLite when test database name is provided.,"Added regression test for test_db_signature, test db name is
added to the database name list in order to prepare signatures list
for the database.

Signed-off-by: Farhaan Bukhsh <farhaan.bukhsh@gmail.com>",farhaanbukhsh,None,2019-11-20T17:49:06Z,2019-11-21T19:37:53Z
12112,Simplified TemplateDetailView with pathlib.Path.read_text().,,jdufresne,None,2019-11-20T14:24:34Z,2019-11-28T11:21:02Z
12111,Fixed #30625 -- Doc'd cache.get()/delete() behavior change in Django 2.2.,Documentation part for [ticket 30625](https://code.djangoproject.com/ticket/30625).,hramezani,None,2019-11-20T12:04:49Z,2019-11-21T09:54:06Z
12110,Pinned asgiref to 3.x series.,,carltongibson,None,2019-11-20T10:09:43Z,2019-11-20T13:57:14Z
12109,Refs #29145 Updated CIText to return case insensitive string values,[Ticket 29145](https://code.djangoproject.com/ticket/29145),v1kku,None,2019-11-19T18:09:35Z,2019-11-20T07:26:40Z
12108,Fixed #30999 -- Fixed typo in docs/howto/custom-template-tags.txt.,[Ticket 30999](https://code.djangoproject.com/ticket/30999),hramezani,None,2019-11-19T08:34:42Z,2019-11-19T09:08:33Z
12106,Removed unused default value None to matches_patterns().,An iterable is always passed.,jdufresne,None,2019-11-19T00:53:52Z,2020-03-19T13:19:24Z
12105,Refs #29097 -- Added test to check MySQL constraints order using composite indexes.,Test for [ticket 29097](https://code.djangoproject.com/ticket/29097).,hramezani,None,2019-11-18T23:21:35Z,2019-11-19T07:16:17Z
12104,Match @import rule and url() statement exclude of the css comment /* */ in the css static file source code,https://code.djangoproject.com/ticket/31000#ticket,tmszi,None,2019-11-18T20:04:06Z,2019-11-19T05:41:46Z
12102,Hide raw field explicitly,"If you define a CSS rule like "".change-form #content-main form textearea"" and change the display, the raw field appears. I think it's better to hide it more explicitly.",farooqaaa,None,2019-11-18T14:52:47Z,2019-11-19T07:28:30Z
12101,Fixed #21528 -- Improve doc for formfield_for_foreignkey,"Ticket: https://code.djangoproject.com/ticket/21528

---

Add example on how to filter fields based on the instance

<img width=""660"" alt=""Screen Shot 2019-11-18 at 10 55 29 AM"" src=""https://user-images.githubusercontent.com/55533/69058196-f7f4b800-09f1-11ea-83c5-88300627cc80.png"">

Section:

<img width=""670"" alt=""Screen Shot 2019-11-18 at 10 55 34 AM"" src=""https://user-images.githubusercontent.com/55533/69058193-f7f4b800-09f1-11ea-9808-3d5117cb448b.png"">
",caioariede,None,2019-11-18T13:56:33Z,2020-07-03T09:24:27Z
12100,Corrected outdated sentence in One-to-one relationships docs.,The respective line refers to an 'ID' that's not anywhere in the code and the wording is a bit confusing IMO.,philippbosch,None,2019-11-18T13:28:50Z,2020-03-17T10:13:11Z
12099,Replaced unnecessary str()/bytes() calls with literals.,,jdufresne,None,2019-11-18T13:15:56Z,2019-11-28T11:21:06Z
12098,Refs #23919 -- Replaced super(...) with super() in metaclasses.,,jdufresne,None,2019-11-18T13:09:42Z,2020-03-21T14:08:36Z
12097,Replaced encode() usage with bytes literals.,,jdufresne,None,2019-11-18T12:52:48Z,2019-11-28T11:21:10Z
12096,Fixed #27164 -- Fixed an example of using routers in multiple databases docs.,"Ticket: https://code.djangoproject.com/ticket/27164

---

Make sure that `AuthRouter` does include `ContentType` in the same
database, otherwise the example is naturally broken as we state at
the bottom of the documentation, on the same page:

> Several contrib apps include models, and some apps depend on others.
> Since cross-database relationships are impossible, this creates some
> restrictions on how you can split these models across databases",caioariede,None,2019-11-18T12:40:42Z,2019-11-20T11:44:02Z
12095,Used modern idiom in collectstatic command.,,jdufresne,None,2019-11-18T12:36:01Z,2020-03-21T14:08:35Z
12094,Removed unnecessary numeric indexes in format strings.,,jdufresne,None,2019-11-18T12:26:28Z,2019-11-28T11:21:14Z
12093,Removed unnecessary parentheses in various code.,,jdufresne,None,2019-11-18T12:18:31Z,2019-11-28T11:21:19Z
12092,Fixed #30989 -- Removed unimplemented B time format.,It's never been documented and has always raised a NotImplementedError.,bmispelon,None,2019-11-18T10:28:52Z,2019-11-18T11:51:33Z
12091,Fixed #30997 -- Deprecated HttpRequest.is_ajax().,,claudep,None,2019-11-18T08:31:16Z,2020-01-27T11:53:26Z
12089,Fixed #29058 -- return geom type for GeoDjango fields when using Spatialite backend so that migrations don't fail.,[Ticket 29058](https://code.djangoproject.com/ticket/29058),v1kku,None,2019-11-18T02:30:36Z,2019-11-18T02:35:25Z
12088,Fixed #30998 -- Added ModelChoiceIteratorValue to pass the model instance to ChoiceWidget.create_option().,https://code.djangoproject.com/ticket/30998,jdufresne,None,2019-11-17T23:43:40Z,2020-03-21T14:08:03Z
12087,Fixed #30425 -- Handled jinja2.TemplateSyntaxError when rendering a template.,[Ticket 30425](https://code.djangoproject.com/ticket/30425),hramezani,None,2019-11-17T19:38:43Z,2019-11-27T12:21:10Z
12082,Fixed #30953 -- of args of select_for_update only includes parent model,"When using `select_for_update` with the `of` args specified, only the
parent model (for multi-table inheritance) would be included in the
query. To specify the parent models, the field representing the link
between the models have to be specified.

The docs have been updated to specify this change with proper
examples.",abhijeetviswa,None,2019-11-17T07:35:48Z,2019-11-29T09:45:46Z
12081,Fixed #30996 -- Added AsWKB and AsWKT GIS functions.,ticket-30996,sir-sigurd,None,2019-11-16T22:20:42Z,2019-11-22T13:08:22Z
12080,Fixed #30994 -- Added Oracle support for AsGeoJSON GIS function.,https://code.djangoproject.com/ticket/30994,sir-sigurd,None,2019-11-16T15:05:14Z,2019-11-18T19:17:34Z
12079,Fixed #30991 -- Added a new mode to get_or_create,"Added a new kwarg ""raw"" to get_or_create method of QuerySet that
allows to run it without opening a new transaction and without an
additional query to a database if IntegrityError exception occurs",StavoR42,None,2019-11-16T05:21:31Z,2019-11-18T07:14:18Z
12078,Removed hardcoded pks in tests.,"The pks of some databases, like cockroachdb, don't start at 1.",timgraham,None,2019-11-15T23:27:48Z,2019-11-18T13:30:27Z
12077,Relaxed some query ordering assertions in tests.,It accounts for differences seen on cockroachdb.,timgraham,None,2019-11-15T22:26:33Z,2019-11-18T13:30:24Z
12076,Fixed #30990 -- Fixed example output in 'z' date format docs.,,bmispelon,None,2019-11-15T22:02:58Z,2019-11-22T20:50:57Z
12075,Fixed #30989 -- Implemented Swatch Internet Time time format,"Finally, it's here! 🙈",bmispelon,None,2019-11-15T21:52:41Z,2019-11-18T07:40:32Z
12074,Replaced QueryWrapper single usage with RawSQL.,This didn't seem like it needed a ticket but I'll happily create one if you think otherwise.,charettes,None,2019-11-15T21:30:02Z,2019-11-18T13:32:34Z
12073,Fixed #30988 -- Deprecated the InvalidQuery exception class.,"It was barely documented without pointers at its defining location and was abused to prevent misuse of the QuerySet field deferring feature.

---

https://code.djangoproject.com/ticket/30988",charettes,None,2019-11-15T21:23:02Z,2019-11-18T14:00:20Z
12072,Fixed #30981 -- Fixed admin changelist crash when using F() or OrderBy() expressions in admin_order_field.,[Ticket 30981](https://code.djangoproject.com/ticket/30981),hramezani,None,2019-11-15T21:01:09Z,2019-11-19T19:14:18Z
12071,Expanded API stability docs to include our policy of continual improvement,"The background to this PR is this thread on https://groups.google.com/forum/#!msg/django-developers/GgqjkYSqfR0/f5zER264EgAJ where I offered to tweak the wording of our API stability docs, and I've finally got round to it!

My aim here is not to change our policy at all, but to make our docs more clearly reflect what I think our actual practice and philosophy is — with some positive spin on why we do it that way — and perhaps avoid the frustrations and disappointment of people like Pakal on the linked thread, for whom its fair to say that the current API stability docs give unrealistic expectations.

I removed reference to version 1.0 since it is no longer relevant, that was a very long time ago...

While I've tried to sum up what I think is our current practice and policy, we may want some discussion on wording etc. obviously that's fine.",spookylukey,None,2019-11-15T19:18:09Z,2019-11-18T20:39:23Z
12070,Refs #29808 -- Fixed MigrateTests.test_migrate_fake_initial_case_insensitive() crash on Oracle.,"Previous `db_table` name was too long, an identifier cannot be longer than 30 chars on Oracle.


",felixxm,None,2019-11-15T17:35:52Z,2019-11-15T20:05:46Z
12069,Updated link to IBM DB2 backend.,See https://github.com/ibmdb/python-ibmdb/pull/375,sir-sigurd,None,2019-11-15T15:49:09Z,2019-11-25T20:00:14Z
12068,Fixed #30986 -- Fixed queryset crash when filtering against boolean RawSQL expressions on Oracle.,"Ticket [30986](https://code.djangoproject.com/ticket/30986), see [discussion on PR#12067](https://github.com/django/django/pull/12067/files#r346680973).",felixxm,None,2019-11-15T09:32:58Z,2019-11-18T08:17:30Z
12067,Fixed #30484 -- Added conditional expressions support to CheckConstraint.,"https://code.djangoproject.com/ticket/30484#comment:6

---

The `SimpleCol` removal also happens to greatly simplify #11929.",charettes,None,2019-11-15T05:40:16Z,2019-11-21T11:25:54Z
12066,Removed unnecessary dict.get() call in favor of direct indexing.,The 'TEST' key is always set to a dictionary in ConnectionHandler.,jdufresne,None,2019-11-15T04:31:07Z,2020-03-21T14:08:37Z
12065,Remove deprecated render attribute in widget,"Hi, in file forms/boundfield.py there is a deprecated option used according this documentation https://docs.djangoproject.com/en/2.1/releases/2.1/#features-removed-in-2-1 .
I deleted ""renderer=self.form.renderer"" because it returned an error 500 when the function was called.
Thanks !
",amnesik,None,2019-11-14T16:38:22Z,2019-11-14T16:59:41Z
12064,Django 14 nov2019,,NewRGB,None,2019-11-13T19:00:36Z,2019-11-13T19:05:52Z
12063,Fixed random auth_tests.test_tokens.TokenGeneratorTest.test_10265 failures.,"Random failures depended on the current timestamp, e.g. [pull-requests-bionic/2845](https://djangoci.com/view/PR%20Builders/job/pull-requests-bionic/2845/database=postgis,label=bionic-pr,python=python3.8/testReport/junit/auth_tests.test_tokens/TokenGeneratorTest/test_10265/).",felixxm,None,2019-11-13T09:42:42Z,2019-11-13T13:22:39Z
12062,Fixed #25388 -- Added an option to allow disabling of migrations during test database creation.,https://code.djangoproject.com/ticket/25388,jdufresne,None,2019-11-13T03:54:00Z,2020-03-09T11:47:47Z
12061,"Fixed #30966 -- Fixed Migration crashes due to foreign key issue, depending on otherwise irrelevant order.",Description on [ticke comment](https://code.djangoproject.com/ticket/30966#comment:4).,hramezani,None,2019-11-12T23:12:20Z,2020-04-08T07:41:03Z
12060,Fixing change password path on es_MX translations,"Currently, when changing locale to es_MX, the change password link on the admin is broken. This patch fix it",rin-amezquita,None,2019-11-12T20:36:05Z,2019-11-12T21:40:19Z
12059,Refs #29926 -- Doc'd Python 3.8 compatibility in Django 2.2.x.,Follow up to #12058.,felixxm,None,2019-11-12T13:55:45Z,2019-11-12T21:11:57Z
12058,[2.2.x] Added Python 3.8 compatibility in Django 2.2.x.,,felixxm,None,2019-11-12T13:53:47Z,2019-11-12T20:51:14Z
12057,"Fixed #30941 -- Reverted ""Simplified AuthenticationMiddleware a bit.""",This reverts commit 2f010795e690550c8c6f56b3924c0f629cacb33b.,felixxm,None,2019-11-12T10:58:08Z,2019-11-14T06:45:23Z
12056,Fix commas every three digits.,"This change replaces the decimal separator according to the ""settings.USE_L10N"" variable.
For exemple, 2000 becomes 2,000 or 2.000",lucassobfer,None,2019-11-11T19:09:00Z,2019-11-12T12:41:54Z
12055,Fixed #21238 -- Fixed restoring attributes when pickling FileField and ImageField.,https://code.djangoproject.com/ticket/21238,hramezani,None,2019-11-10T22:00:30Z,2020-03-18T09:44:01Z
12054,Fixed #30958 -- Used a clearer example in the Cast() docs.,"The example in the Cast documentation looks misleading,
this commits ellaborates the example to fix ambiguity.

Signed-off-by: Farhaan Bukhsh <farhaan.bukhsh@gmail.com>",farhaanbukhsh,None,2019-11-10T13:55:02Z,2019-11-11T09:10:32Z
12053,Fixed #30975 -- Replaced custom get_select_option with Selenium's select_by_value.,https://code.djangoproject.com/ticket/30975,codingjoe,None,2019-11-10T11:12:02Z,2019-11-28T02:43:48Z
12052,Fixed #29892 -- Fixed some selenium race conditions using wait over assert,https://code.djangoproject.com/ticket/30974,codingjoe,None,2019-11-10T10:49:19Z,2019-11-28T14:44:34Z
12051,Fixed #30973 -- Converted selenium tests wait_page_loaded() to context manager.,https://code.djangoproject.com/ticket/30973,codingjoe,None,2019-11-10T10:30:28Z,2019-11-28T03:01:32Z
12050,Fixed #30971 -- Prevented Query.resolve_lookup_value() from coercing list values to tuples.,https://code.djangoproject.com/ticket/30971,georgemarshall,None,2019-11-10T08:53:45Z,2019-11-13T08:20:47Z
12049,Fixed #29808 -- Fixed initial migration detection when identifiers are case-insensitive.,"[Ticket 29808](https://code.djangoproject.com/ticket/29808).
Not sure about the solution.
PR just created for proposing the solution.",hramezani,None,2019-11-08T23:50:59Z,2019-11-15T08:36:04Z
12048,Fixed #30967 -- Fixed TrigramTest failures on PostgreSQL 12+.,Ticket: https://code.djangoproject.com/ticket/30967,hannseman,None,2019-11-08T20:22:26Z,2019-11-11T12:30:32Z
12047,Fixed #30955 -- Doc'd that only concrete base models are stored in historical models bases.,"…l bases.

Abstract models are removed from bases when generating historical model
state since 6436f1fad9ce51f18735106ac75aeea3d6d1f310.",fengsp,None,2019-11-08T06:16:01Z,2019-11-08T08:41:59Z
12046,Updated Python license for 2019.,,felixxm,None,2019-11-07T14:11:39Z,2019-11-07T14:30:22Z
12045,Added QuerySet.get_or_none method,"This is pretty much a duplicate of https://code.djangoproject.com/ticket/2659 with small difference - method is added at the `QuerySet` itself instead of `django.shortcuts` module. This would make it easier to use as it doesn't require extra import.

### Motivation

Over the years we've added a lot of similar utility functions like `.first()` / `.last()`, `.earliest()` / `.latest()`. Now I often see code like `Item.objects.filter(id=123).first()`. Users simply don't want to create four lines like that:

    try:
        item = Item.objects.get(id=123)
    except Item.objects.DoesNotExist:
        item = None

However. using `.first()` / `.last()` to achieve similar result is misleading (they implies order to be important at the first glance while it's not important at all when filtering by particular primary key).

_In my opinion this is relevant shortcut that should land at the very core of Django's ORM and it would make many project's code cleaner and easier to read._

Let me know if it makes sense now to include it and I can work on extending docs etc.",lukaszb,None,2019-11-07T08:48:49Z,2019-11-07T09:41:32Z
12044,Ref #30962 -- Added GitHub action for static code linters,,codingjoe,None,2019-11-07T04:13:38Z,2019-11-07T10:23:12Z
12043,Update response.py,modification serialize_headers,tale-legend,None,2019-11-07T03:01:09Z,2019-11-07T08:50:42Z
12042,Refs #29983 -- Added support for using pathlib.Path in all settings.,"This is intended to be exhaustive. All settings that could potentially accept a `Path`, are now tested. Either here or in an earlier commit. If you discover one that I missed, please let me know. Release notes were added only for cases where code changes were required.",jdufresne,None,2019-11-07T01:54:49Z,2019-11-08T10:13:47Z
12041,[WIP] Comparison Filtering using Python Syntax.,"This allows using python syntax to filter when using expressions.

    queryset.filter(Expression(...) > Value(...))

It could compare two expressions, too.

Note that in order to get this to work (at least for the case of ==, I needed to remove `BaseExpression.__eq__`

Presumably that will not wash.",schinckel,None,2019-11-07T01:36:52Z,2020-09-15T09:36:36Z
12040,Fixed #24858 -- Added support for get_FOO_display() to ArrayField and RangeFields.,"[Ticket 24858](https://code.djangoproject.com/ticket/24858).
It is possible to do this change in the model base like this:
```
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 0a5e5ff673..0847427248 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -939,9 +939,15 @@ class Model(metaclass=ModelBase):
     delete.alters_data = True
 
     def _get_FIELD_display(self, field):
-        value = getattr(self, field.attname)
+        original_value = getattr(self, field.attname)
+        d = {
+            (tuple(k) if isinstance(k, list) else k): v
+            for k, v in field.flatchoices
+        }
+        value = tuple(original_value) if isinstance(original_value, list) else original_value
+
         # force_str() to coerce lazy strings.
-        return force_str(dict(field.flatchoices).get(value, value), strings_only=True)
+        return force_str(d.get(value, original_value), strings_only=True)
```
and don't add these changes both `ArrayField` and `RangeField`.",hramezani,None,2019-11-06T22:18:52Z,2019-11-08T10:59:16Z
12039,Fixed #30961 -- Fixed spaces in columns list SQL generated for indexes.,"Ticket: https://code.djangoproject.com/ticket/30961

Not really sure if this PR requires an addition to the release notes. Let me know and I'll sort it out.",hannseman,None,2019-11-06T21:14:34Z,2019-11-08T09:21:25Z
12038,Clarified license is BSD 3-Clause in package metadata.,"Use the SPDX identifier in the license metadata field to clarify that the primary license for Django is the BSD 3-Clause ""New"" or ""Revised"" License. The 'License :: OSI Approved :: BSD License' trove classifier is not clear enough to indicate which if the variants of the BSD license Django uses.

See https://github.com/django/django/pull/12013#discussion_r342001037",pope1ni,None,2019-11-06T16:00:33Z,2019-11-07T19:38:52Z
12037,Refs #28954 -- Remove remaining code and documentation for Jython.,"There are two commits here. One removed a leftover piece of code, the other removes the remaining documentation.

---

The remaining bit of code was missed from 23b21db31bfcf2a065d485617412cca43a311a4c and was found while reviewing #12034.

---

Regarding the remaining documentation:

There is still no further progress on Jython 3 since support for Jython was stripped in Django 2.0. The developers experimenting with Jython 3 have stated that they would need to start from scratch, so it doesn't look as though it will materialize for years to come.

Python 2 and Django 1.11, the last version to support Python 2.7, will both be end-of-life before Django 3.1 is released. We should no longer instruct users to use an unsupported version of Django.",pope1ni,None,2019-11-06T15:39:52Z,2019-12-19T16:51:59Z
12036,"Removed ""Pocket PC"" from terminal color support function.","Introduced over 13 years ago in 9bea530c33e, Pocket PC was surpassed by Windows Mobile, then Windows Phone, which has since been retired. The value ""Pocket PC"" isn't documented as a value for ``sys.platform`` and it isn't clear whether it ever worked. There are no tests for this.

Found while reviewing #12034.",pope1ni,None,2019-11-06T15:06:40Z,2020-01-29T08:39:52Z
12035,Replaced n_ prefix with number_of_ in docs/topics/db/queries.txt.,Shortening ``number_of`` to ``n_`` can be a little confusing to people who are not used it. There is no harm in spelling this out.,rfleschenberg,None,2019-11-06T14:13:49Z,2019-11-07T08:40:51Z
12034,Harmonized Windows checks in tests to a single style.,,jdufresne,None,2019-11-06T12:57:30Z,2019-11-06T15:05:54Z
12033,Refs #29983 -- Added test for TEMPLATES['DIRS'] pathlib support.,The existing use doesn't need to coerce the Path object to a string.,jdufresne,None,2019-11-06T12:34:37Z,2019-11-08T10:13:51Z
12032,Adjusted expected exception message for Windows.,"Test failure introduced in fbbff7f80870bc3e98de4a2fc9cd853949842fd0.

Windows uses a different error message when a non-path is passed to
os.path functions.",jdufresne,None,2019-11-06T12:29:57Z,2019-11-06T13:39:57Z
12031,Refs #29983 -- Added test for MEDIA_ROOT pathlib support.,,jdufresne,None,2019-11-06T11:56:49Z,2019-11-08T10:13:53Z
12030,"Fixed #29916 -- Added lower_inc, lower_inf, upper_inc, and upper_inf lookups for RangeFields.",,dulmandakh,None,2019-11-06T10:24:18Z,2019-11-15T00:14:03Z
12029,Doc'd archiving historical branches as git tags.,Suggested docs adjustment for moving old branches to tags. ,carltongibson,None,2019-11-06T10:03:30Z,2019-11-08T11:10:04Z
12028,isfinite lookup,,dulmandakh,None,2019-11-06T09:16:17Z,2019-11-06T09:59:13Z
12027,Refs #30956 -- Added Lower and Upper lookups in RangeField,https://code.djangoproject.com/ticket/30956,dulmandakh,None,2019-11-06T08:15:32Z,2019-11-06T08:38:13Z
12026,Refs #29983 -- Added test for FIXTURES_DIRS pathlib support.,,jdufresne,None,2019-11-06T03:28:34Z,2019-11-08T10:13:56Z
12025,Refs #30183 -- Doc'd dropping support for sqlparse < 0.2.2.,"From sqlparse [change log](https://github.com/andialbrecht/sqlparse/blob/master/CHANGELOG):

Release 0.2.2 (Oct 22, 2016)
----------------------------

Internal Changes

* `is_whitespace` and `is_group` changed into properties

  [1]: https://github.com/andialbrecht/sqlparse/blob/master/CHANGELOG",stephenrauch,None,2019-11-06T03:13:18Z,2019-11-06T14:48:27Z
12024,Refs #29983 -- Added test for FILE_UPLOAD_TEMP_DIR pathlib support.,,jdufresne,None,2019-11-06T02:54:05Z,2019-11-08T10:14:02Z
12023,Added a link to the file email backend from EMAIL_FILE_PATH setting.,,jdufresne,None,2019-11-06T01:37:41Z,2019-11-08T10:14:03Z
12022,Refs #29983 -- Added pathlib.Path support to the file email backend.,,jdufresne,None,2019-11-06T01:35:41Z,2019-11-08T10:13:54Z
12021,Refs #29983 -- Added tests for FileBasedCache pathlib support.,,jdufresne,None,2019-11-06T01:14:17Z,2019-11-08T10:13:55Z
12020,Documented arguments for custom 500 error view.,Matches note in django.urls.resolvers.py at def _check_custom_error_handlers(self):,DanielSwain,None,2019-11-05T20:35:22Z,2019-11-06T08:27:15Z
12019,Fixed DatabaseFeatures.has_select_for_update_nowait on MariaDB 10.3+.,Thanks Kola Erinoso for the report.,felixxm,None,2019-11-05T08:25:42Z,2019-11-05T09:19:08Z
12018,Fixed #30928 -- Clarified MySQL/MariaDB support of QuerySet.select_for_update() options.,"MySQL added support for `NOWAIT` and `SKIP LOCKED` options in version [8.0.1](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-1.html#mysqld-8-0-1-feature) with documentation done [here](https://dev.mysql.com/doc/refman/8.0/en/innodb-locking-reads.html#innodb-locking-reads-nowait-skip-locked). MariaDB added support for only the `NOWAIT` option in version [10.3.0](https://mariadb.com/kb/en/library/wait-and-nowait/) with the Jira issue on adding support for the `SKIP LOCKED` still open [here](https://jira.mariadb.org/browse/MDEV-13115).

This change updates the documentation to reflect the support for both options for MySQL and just the `NOWAIT` for MariaDB.

Issue ticket - https://code.djangoproject.com/ticket/30928",kola-er,None,2019-11-04T22:09:00Z,2019-11-05T13:52:23Z
12017,Refs #21231 -- Backport urllib.parse.parse_qsl() from Python 3.8.,"This backports [`urllib.parse.parse_qsl()`](https://docs.python.org/3.8/library/urllib.parse.html#urllib.parse.parse_qsl) from Python 3.8 to replace `limited_parse_qsl()`.

I think there may be a couple of projects using this undocumented function, so I don't know whether we want to mention it in backwards compatibility notes or whether we need to deprecate?

It seems that support for `max_num_fields` was also patched into Python 3.6.8 and 3.7.2 ([bpo-34866](https://bugs.python.org/issue34866)), so I don't know whether we even want the backport considering Django's policy on using the latest patch release in a series. That would run the risk that thinks break for people though. Even if we decide to keep it, we should probably use the version available in Python in preference for all versions of Python. What do you think?",pope1ni,None,2019-11-04T12:35:35Z,2020-09-07T02:32:23Z
12016,Fixed #15742 -- Fixed an example of collecting selected objects in ModelAdmin.actions docs.,"( https://docs.djangoproject.com/en/2.2/ref/contrib/admin/actions/#actions-that-provide-intermediate-pages )
`/docs/ref/contrib/admin/actions.txt`
in paragraph
`Actions that provide intermediate pages`


recommends directly accessing the form values:

`selected = request.POST.getlist(admin.ACTION_CHECKBOX_NAME)`

to get a list of selected ids.  This fails to take into account if the `select all` box has been selected.

This patch changes one line to suggest using the queryset to get the IDs, which results in the correct behaviour.",danthedeckie,None,2019-11-04T11:50:57Z,2019-11-06T12:41:02Z
12015,[2.2.x] Fixed #30928 -- Updated docs for MySQL support of nowait and skip_locked options,"MySQL added support for `NOWAIT` and `SKIP LOCKED` options in version [8.0](https://dev.mysql.com/doc/refman/8.0/en/innodb-locking-reads.html) and was added to the Django codebase in this commit https://github.com/django/django/commit/a7bc1aea03508f544c9dfac0f34b01996653cef4.

This change updates the documentation to reflect the support for both options for MySQL database backend.

Issue ticket - https://code.djangoproject.com/ticket/30928",kola-er,None,2019-11-04T00:27:06Z,2019-11-04T21:21:57Z
12013,Fixed #30948 -- Changed packaging to use setuptools declarative config in setup.cfg.,"setuptools allows using `setup.cfg` to define a package’s metadata and other options that are normally supplied to the `setup()`. This declarative approach avoids the need for some logic in `setup.py` which can help reduce boilerplate and support automation with external tools.

Available since setuptools 30.3.0 (8 Dec 2016).

https://code.djangoproject.com/ticket/30948",jdufresne,None,2019-11-02T16:02:44Z,2019-11-08T20:18:25Z
12012,Refs #30116 -- Simplified stdout/stderr decoding with subprocess.run()'s encoding argument.,"The encoding argument has been available since Python 3.6.

https://docs.python.org/3/library/subprocess.html#subprocess.run",jdufresne,None,2019-11-02T15:08:38Z,2019-11-08T10:14:07Z
12011,Updated list of field types conversions in ModelForm docs.,,adamchainz,None,2019-11-02T10:21:19Z,2020-07-20T10:18:09Z
12010,Removed unnecessary EXCLUDE_FROM_PACKAGES from setup.py.,"Excluding the directories containing templates has been unnecessary
since abc0777b63057e2ff97eee2ff184356051e14c47 where the extension was
changed to not be .py.

As django.bin does not have a __init__.py, it is not a package and
therefore is not excluded by this argument.",jdufresne,None,2019-11-02T05:28:52Z,2019-11-08T10:14:09Z
12009,Fixed #23433 -- Deprecated django-admin.py entry point in favor of django-admin.,"Unify on the entry point created by setuptools entry_points feature.

https://code.djangoproject.com/ticket/23433",jdufresne,None,2019-11-02T04:49:18Z,2020-03-21T14:08:34Z
12008,Passed strict=True to Path.resolve() to enforce that the path must exist.,,jdufresne,None,2019-11-02T03:28:00Z,2019-11-08T10:14:14Z
12007,Simplified consecutive calls to pathlib.Path.parent.,,jdufresne,None,2019-11-02T02:49:40Z,2019-11-08T10:14:15Z
12006,Fixed #30944 -- Changed reusable apps docs to use a declarative config.,https://code.djangoproject.com/ticket/30944,jdufresne,None,2019-11-02T02:03:26Z,2019-11-08T10:14:06Z
12005,Fixed #29983 -- Replaced os.path() with pathlib.Path in project template and docs.,https://code.djangoproject.com/ticket/29983,jdufresne,None,2019-11-02T00:31:58Z,2019-11-08T10:13:47Z
12004,Fixed #30943 -- Added BloomIndex to django.contrib.postgres.,Ticket [#30943](https://code.djangoproject.com/ticket/30943).,pope1ni,None,2019-11-01T17:03:28Z,2019-11-07T19:39:12Z
12003,Refs #13312 -- Simplified handling of nulls ordering on MySQL.,"MySQL & MariaDB support the standard ``IS NULL`` and ``IS NOT NULL`` so the same workaround used for ``NULLS FIRST`` and ``NULLS LAST`` that is used for SQLite < 3.30.0 can be used. Let's combine them and simplify ``OrderBy()``.

Following on from a [discussion](https://github.com/django/django/pull/12001#pullrequestreview-310125225) with @charettes.",pope1ni,None,2019-11-01T12:19:32Z,2019-11-04T14:01:39Z
12002,Refs #27808 -- Added test for saving nested ArrayField with nullable base field.,Test for [Ticket 27808](https://code.djangoproject.com/ticket/27808),hramezani,None,2019-11-01T11:09:44Z,2019-11-01T15:44:14Z
12001,Refs #13312 -- Removed unnecessary IF wrapping in MySQL nulls_last handling.,[The MySQL `ISNULL` function already returns 0 and 1 booleans](https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html#function_isnull),charettes,None,2019-10-31T13:56:01Z,2019-10-31T21:12:34Z
12000,Refs #30095 -- Simplified Field._check_choices() a bit.,Using an internal `is_value()` hook to check whether `Field.choices` is iterable is misleading. This should also simplify #11930.,felixxm,None,2019-10-31T13:29:01Z,2019-10-31T19:04:53Z
11999,Fixed #30931 -- Restored ability to override Model.get_FIELD_display().,"~~* Test case, plus...~~
~~* Docs example (for 2.2+)~~

Test and fix. ",carltongibson,None,2019-10-31T10:39:18Z,2019-11-04T07:14:58Z
11998,Fixed #30865 -- Doc'd that not all DATABASES['OPTIONS'] are passed to command-line client.,"Some of the DATABASES['OPTIONS'] were not passed to the dbshell, added the documentation pointing
the same.

Signed-off-by: Farhaan Bukhsh <farhaan.bukhsh@gmail.com>",farhaanbukhsh,None,2019-10-31T04:14:51Z,2019-11-07T09:45:53Z
11997,Fixed #30761 -- Prevented floatformat filter from returning a negative zero.,"Old behaviour:
>>> floatformat(-0.001, 2)
'-0.00'
>>> floatformat(-0.4, 0)
'-0'

New behaviour:
>>> floatformat(-0.001, 2)
'0.00'
>>> floatformat(-0.4, 0)
'0'",countermeasure,None,2019-10-31T02:48:00Z,2019-10-31T10:29:37Z
11996,Refs #23576 -- Disabled MySQL multi-alias deletion path on MariaDB >= 10.3.2.,"It looks like MariaDB dropped support for the `DELETE $table FROM $table` MySQL'ism during the 10.3.X lifecycle after adding support for `DELETE FROM $table WHERE id IN (SELECT .. FROM $table)` in 10.3.1 https://mariadb.com/kb/en/library/mariadb-1031-release-notes/

This commit disables this workaround when not necessary.

I tested against MariaDB 10.2 and 10.3 using django-docker-box.",charettes,None,2019-10-31T02:27:55Z,2020-08-30T11:34:22Z
11995,Update index.txt,"Installation of 64-bit Python results in failure as GDAL doesn't seem to support it.

https://code.djangoproject.com/ticket/30933",astarrh,None,2019-10-30T16:55:39Z,2019-10-31T21:44:52Z
11993,Corrected ValueError message in Many-to-many relationships docs.,,felixxm,None,2019-10-30T14:35:38Z,2019-10-30T15:17:24Z
11992,Fixed typo in docs/ref/signals.txt.,"Signals is plural, so it should be `these` rather than `this`.",gforcada,None,2019-10-30T14:31:39Z,2019-10-30T16:41:24Z
11991,Fixed #30913 -- Added support for covering indexes on PostgreSQL 11+.,Ticket: https://code.djangoproject.com/ticket/30913,hannseman,None,2019-10-30T09:34:35Z,2020-06-04T13:56:17Z
11989,Refs #28428 -- Made filepath_to_uri() support pathlib.Path.,"Refs [ticket 28428](https://code.djangoproject.com/ticket/28428).
This is needed to support `pathlib.Path` in `FileSystemStorage.url()`.",hramezani,None,2019-10-29T20:22:42Z,2019-10-30T12:35:13Z
11988,Fixed #30927 -- Simplified an example of test for the deprecation warning with assertWarnsMessage().,Note: the ticket has not been accepted yet. Since this was a simple one I went ahead and created the PR.,aericson,None,2019-10-29T19:50:13Z,2019-10-30T12:52:45Z
11986,Backport: Fixed #29182 -- Fixed schema table alteration on SQLite 3.26+.,"SQLite 3.26 repoints foreign key constraints on table renames even when
foreign_keys pragma is off which breaks every operation that requires
a table rebuild to simulate unsupported ALTER TABLE statements.

The newly introduced legacy_alter_table pragma disables this behavior
and restores the previous schema editor assumptions.

Thanks Florian Apolloner, Christoph Trassl, Chris Lamb for the report and
troubleshooting assistance.

Backport of c8ffdbe514b55ff5c9a2b8cb8bbdf2d3978c188f from master.",bennofs,None,2019-10-29T14:26:59Z,2020-03-15T15:41:01Z
11985,Refs #30908 -- Added test for nonexistent path in forms.FilePathField.,Based on @felixxm [comment](https://code.djangoproject.com/ticket/30908#comment:6) on [Ticket 30908](https://code.djangoproject.com/ticket/30908).,hramezani,None,2019-10-28T22:21:50Z,2019-10-29T07:40:57Z
11984,Refs #30923 -- Fixed an example of rendering templates in contrib.sites docs.,,alasdairnicol,None,2019-10-28T14:21:17Z,2019-11-05T11:44:06Z
11983,Fixed #30922 -- Fixed ModelAdmin.date_hierarchy queries with DST changes.,"[ticket](https://code.djangoproject.com/ticket/30922)

There was an issue where admin date_hierarchy didn't render last day of month in
dst-switch month (usually october in northern hemispere), due to applying
start-of-month timezone to end-of-month date. This fixes it by making from_date and to_date timezone aware seperately, to make sure they get the correct timezone for their own date.",ErwinJunge,None,2019-10-28T14:13:20Z,2019-10-29T13:40:28Z
11982,Fixed #30918 -- Made timesince()/timeuntil() respect custom time strings for future and the same datetimes.,[Ticket 30918](https://code.djangoproject.com/ticket/30918),hramezani,None,2019-10-28T10:19:29Z,2019-10-28T12:30:54Z
11980,Fixed #30917 -- Clarifed formsets topic documentation.,"Changed the wording in the documentation of formsets to make
it more explicit that the formset_factory creates a class,
and that the formset is created as an instance of that class.",KenWhitesell,None,2019-10-27T14:22:20Z,2019-10-30T08:00:46Z
11979,Fixed #30908 -- Fixed FilePathField raises FileNotFoundError for nonexistent path.,"[Ticket 30908](https://code.djangoproject.com/ticket/30908).
Thanks, @felixxm for the test case.",hramezani,None,2019-10-27T11:41:38Z,2019-10-28T08:36:12Z
11978,Fixed #30915 Implication for the Q object,I will provide documentation for the feature if it will be accepted.,pax0r,None,2019-10-27T10:42:24Z,2019-10-29T07:41:38Z
11977,Fixed #30899 -- Lazily compiled import time regular expressions.,"[Ticket 30899](https://code.djangoproject.com/ticket/30899)

- Just import time `re.compile` are changed.
- Tests are excluded.
- [django.utils.translation.trim_whitespace_re](https://github.com/django/django/blob/6bbf9a20e2c5865e01b537e8cd34dfca06621a4a/django/utils/translation/__init__.py#L331) did not include because `django.utils.translation` already imported in `django.utils.text`.(Circular dependency)
- [django.core.handlers.wsgi._slashes_re](https://github.com/django/django/blob/6bbf9a20e2c5865e01b537e8cd34dfca06621a4a/django/core/handlers/wsgi.py#L12) did not include because it compile bytes `re.compile(br'/+')` and `_lazy_re_compile` does not handle bytes(add byte handling to `_lazy_re_compile`?)",hramezani,None,2019-10-26T14:44:34Z,2019-10-29T08:55:18Z
11976,Documented the order in which signal receivers are called.,,adamchainz,None,2019-10-25T13:13:14Z,2020-04-04T11:03:07Z
11975,Fixed #13750 -- Clarified need to reopen models.ImageField.image file to access raw image data.,"@carltongibson As you mentioned on https://github.com/django/django/pull/11912, Here is added document for [ticket 13750](https://code.djangoproject.com/ticket/13750).",hramezani,None,2019-10-25T12:59:23Z,2019-10-29T15:09:09Z
11974,Refs #30908 -- Fixed the empty value of forms.FilePathField in docs.,,felixxm,None,2019-10-25T08:43:50Z,2019-10-25T09:22:07Z
11973,Fixed #30910 -- Added system check to warn on duplicate check constraints.,https://code.djangoproject.com/ticket/30910,jdufresne,None,2019-10-24T23:45:08Z,2020-03-21T14:08:38Z
11972,Fixed #30904 -- Doc'd caveat about using filtered queryset with select_for_update() on MySQL.,ticket 30904,saad-alsaad,None,2019-10-24T21:45:04Z,2019-10-25T07:00:12Z
11971,Fixed #30906 -- Fixed an example of using the template system to generate CSV.,[Ticket 30906](https://code.djangoproject.com/ticket/30906),hramezani,None,2019-10-24T13:17:50Z,2019-10-25T06:13:01Z
11970,Fixed #30907 -- Fixed SplitArrayField.has_changed() with removal of empty trailing values.,"https://code.djangoproject.com/ticket/30907

`django.contrib.postgres.forms.SplitArrayField.has_changed()` returns `True` when `initial` is empty list and `data` is list of empty strings. This is a problem when a form is submitted with input fields left blank - resulting in e.g. `["""", """",]` (passed to `has_changed()` and evaluated as `True` instead of `False`). I believe the issue I'm describing should be more clear from the written tests.

Note that this bug in `has_changed()` method causes issues with FormSets which fail to correctly validate empty forms (in cases where `SplitArrayField` is used).

The issue is similar to https://github.com/django/django/pull/9520",paveldedik,None,2019-10-24T11:42:06Z,2019-10-28T10:01:14Z
11969,Replaced return_None with lambda,,nick-traeger,None,2019-10-24T10:55:11Z,2019-10-24T10:59:23Z
11968,Fixed DatabaseFeatures.update_can_self_select on MariaDB 10.3.2+.,"https://mariadb.com/kb/en/library/mariadb-1031-release-notes/#syntax-general-features
https://mariadb.com/kb/en/library/delete/#same-source-and-target-table

https://jira.mariadb.org/browse/MDEV-12874 10.3.2+
https://jira.mariadb.org/browse/MDEV-12137 10.3.1+

Noticed when reviewing #11931",felixxm,None,2019-10-24T09:50:01Z,2019-10-24T10:18:25Z
11967,Fixed #30900 -- Skipped async-related tests on Windows using Python 3.8.0.,"Refs https://bugs.python.org/issue38563.
",carltongibson,None,2019-10-24T06:48:05Z,2019-10-24T08:44:11Z
11966,Fixed #30903 -- Fixed migrations crash on PostgreSQL when adding Index with opclasses and ordering.,"Ticket: https://code.djangoproject.com/ticket/30903#ticket

I've also added a space between `col_suffixes` and the rest of the statement for readability.",hannseman,None,2019-10-23T20:19:14Z,2019-10-24T07:53:58Z
11965,Add new test case for GEOS,"I'm seeing this error on Django 1.11.25:

    raise GEOSException('Could not parse version info string ""%s""' %
    ver)
    django.contrib.gis.geos.error.GEOSException: Could not parse version
    info string ""3.8.0-CAPI-1.13.1 ""

So, I'm adding this as a test case.

Related:
  https://code.djangoproject.com/ticket/28441#comment:13",nikolas,None,2019-10-23T15:16:42Z,2019-10-24T06:48:21Z
11964,Fixed #30902 -- Added __str__() for model choice enums.,"Allows expected comparison against strings, matching behaviour of created
instances with those fetched from the DB.


@shaib @pope1ni — This looks right to me, especially given the example on the ticket of the difference between created and retrieved instances but, what do you think? Thanks! ",carltongibson,None,2019-10-23T14:16:45Z,2019-10-25T09:11:29Z
11963,Refs #29926 -- Bumped minimum tblib version to 1.5.0 in test requirements.,,felixxm,None,2019-10-23T12:56:43Z,2019-10-23T13:26:19Z
11962,Bumped minimum Pillow version to 6.2.0 in test requirements.,`Pillow` < 6.2.0 is vulnerable to [CVE-2019-16865](https://nvd.nist.gov/vuln/detail/CVE-2019-16865).,felixxm,None,2019-10-23T12:27:14Z,2019-10-23T13:07:10Z
11961,Refs #29926 -- Skipped RemoteTestResultTest.test_add_failing_subtests() on Python 3.8+ and tblib <= 1.4.0.,https://code.djangoproject.com/ticket/29926,felixxm,None,2019-10-22T12:18:07Z,2019-10-22T13:34:29Z
11960,Simplified AuthenticationMiddleware a bit.,,sir-sigurd,None,2019-10-22T11:33:08Z,2019-10-29T12:53:57Z
11959,Refs #26601 -- Removed obsolete workarounds for MIDDLEWARE_CLASSES setting.,,sir-sigurd,None,2019-10-22T11:03:11Z,2020-01-17T16:12:05Z
11958,Fixed typo in XViewMiddleware.process_view() docstring.,,sir-sigurd,None,2019-10-22T10:55:07Z,2019-10-22T12:30:57Z
11957,Refs #13724 -- Corrected QuerySet signature in docs.,"Just came across this docs mismatch, here the update if needed",Rusox89,None,2019-10-22T10:44:51Z,2019-10-22T13:42:08Z
11956,Refs #29926 -- Added Python 3.8 to classifiers and tox.ini.,,Djailla,None,2019-10-21T23:43:11Z,2019-10-24T11:40:37Z
11955,"Fixed #30897 -- Improved QuerySet.explain() for newer versions of MariaDB, MySQL and PostgreSQL.","Ticket [#30897](https://code.djangoproject.com/ticket/30897).

Would you mind looking at this @orf as you originally added `QuerySet.explain()` IIRC?",pope1ni,None,2019-10-21T17:10:03Z,2019-10-24T15:29:13Z
11954,Used more specific unittest assertions in tests.,Improvements to choice of assertion methods highlighted by [flake8-assertive](https://pypi.org/project/flake8-assertive/).,pope1ni,None,2019-10-21T16:11:37Z,2019-10-29T12:15:11Z
11953,Refs #28428 -- Made FileSystemStorage.save() to support pathlib.Path.,"Continue to https://github.com/django/django/pull/11554.
Added test for change.",hramezani,None,2019-10-21T16:05:17Z,2019-10-31T08:45:44Z
11952,Updated link to GEOS C API header.,,sir-sigurd,None,2019-10-21T12:23:44Z,2019-10-21T13:25:59Z
11951,Fixed #30827 -- Made batch_size arg of QuerySet.bulk_create() respect DatabaseOperations.bulk_batch_size().,I added test provided by Chetan Khanna.,felixxm,None,2019-10-21T09:35:46Z,2019-10-21T10:05:06Z
11950,add get_or_none,"```def get_or_none```  can be used usefully in python3.8. 
example.
```
try:
    post = Post.objects.get(name='hoge'):
except Post.DoesNotExist:
    pass
```
or
```
if Post.objects.filter(name='hoge').exists():
    post = Post.objects.get(name='hoge'):
```
to
```
if post := Post.objects.get_or_none(name='hoge'):
```
",kemu3007,None,2019-10-21T05:56:45Z,2019-10-21T12:45:47Z
11949,Replaced deprecated assertEquals() with assertEqual(),"Fixes warning:

    …/django/tests/model_fields/test_charfield.py:43: DeprecationWarning: Please use assertEqual instead.
      self.assertEquals(p1, p2)
    …/django/tests/model_fields/test_charfield.py:44: DeprecationWarning: Please use assertEqual instead.
      self.assertEquals(p2.title, Event.C)",jdufresne,None,2019-10-20T22:01:57Z,2019-10-24T23:46:40Z
11948,Fixed #30828 -- Added how to remove/insert many-to-many relations in bulk to the database optimization docs.,"Adds documentation explaining how to bulk-add and bulk-remove many-to-many relationships efficiently.

It is written assuming no dedicated methods are added for these operations, such as the operations proposed in PR <https://github.com/django/django/pull/11899> .

---

The code that users are expected to inline is somewhat long, so I still wonder if we might reconsider adding dedicated methods to support the bulk-associate and bulk-disassociate use cases:

* Bulk associate a list of object-pairs
    * 6 lines of boilerplate user code
    * uses the `*`-operator (an advanced Python feature)
    * uses a list comprehension (an advanced Python feature)
* Bulk disassociate a list of object-pairs
    * 6 lines of boilerplate user code
    * uses Q expressions (an advanced Django feature)",davidfstr,None,2019-10-20T19:35:30Z,2019-11-14T01:02:20Z
11947,Removed unused **kwargs from GEOSFuncFactory.__call__().,"This slightly improves performance:

Before:
```
$ python -m pyperf timeit -s 'from django.contrib.gis.geos import Point; p = Point()' ""p.empty""  --duplicate=100
.....................
Mean +- std dev: 2.00 us +- 0.04 us
```

After:
```
$ python -m pyperf timeit -s 'from django.contrib.gis.geos import Point; p = Point()' ""p.empty""  --duplicate=100
.....................
Mean +- std dev: 1.94 us +- 0.03 us
```",sir-sigurd,None,2019-10-20T19:10:07Z,2020-01-22T10:40:46Z
11946,Removed unused *args and **kwargs from GEOSFuncFactory.__init__().,Follow-up to ff17ef1adab864d2c165d50501fa0b0684808d07.,sir-sigurd,None,2019-10-20T18:51:47Z,2020-01-22T10:19:39Z
11945,Fixed #30876 -- Moved classproperty() decorator to the django.utils.functional.,"Moving `django.utils.decorators.classproperty` to
`django.utils.functional` in preparation to make it public.

See also:
#30864",aericson,None,2019-10-20T16:48:10Z,2019-10-21T08:27:33Z
11944,Refs #27060 -- Add db_index support for inspectdb command,"I'm using `inspectdb` for some legacy Django based projects.

I have a problem with indexes as described here: https://code.djangoproject.com/ticket/27060

I understand that it's not so simple to fix all edge cases. And it is a reason why there has been no activity on this issue for three years.

But, It will help me if at least `db_index` indexes are supported by the inspectdb.
",pahaz,None,2019-10-20T14:57:05Z,2019-11-14T07:38:11Z
11943,Allow explicit None setting in SAMESITE cookie setting,"Because of changes starting with Chrome 76, for Django apps to work within an iframe, they need to explicitly set the SAMESITE attribute to ""None"" for the cookie. Otherwise the default is ""Lax"" as described here: https://www.netsparker.com/blog/web-security/same-site-cookies-by-default/ . Please let me know if there are some documentation/test changes that need to go with this. Note that this is different than using the value `None` - instead, to set SAMESITE explicitly, the user would have to pass in the string `""None""` - so the behavior is still backwards compatible.",ethan92429,None,2019-10-19T14:26:06Z,2019-10-19T15:08:18Z
11942,Fixed #20456 -- Added CBV Testing docs,Adding the documentation for class-based view testing per the discussion in #11908 ,felipe-lee,None,2019-10-19T01:45:07Z,2020-06-04T02:15:44Z
11941,Added custom remote user backend,Implemented a custom remote user backend ``LowerCaseRemoteUserBackend`` which converts the logged-in user username to all-lower case. This is important because some external authentication services return a case-sensitive username upon login. This is problematic with Django as the built-in user model is case-sensitive. This means a single remote user may have two different records in that database (e.g. 'Username' is different than 'username').,HassanKadhem,None,2019-10-18T22:18:10Z,2019-10-19T19:35:49Z
11940,Implemented a custom remote user backend ,Implemented a custom remote user backend ``LowerCaseRemoteUserBackend`` that converts logged-in user username to all-lower case letters. This is important because some external authentication services return a case-sensitive username upon login. This is problematic with Django as the built-in user model is case-sensitive. This means a single remote user may have two different records in that database (e.g. 'Username' is different than 'username').,HassanKadhem,b'invalid',2019-10-18T21:51:55Z,2019-10-19T07:46:41Z
11939,Added custom remote user backend ,Added ``LowerCaseRemoteUserBackend`` that converts the logged-in user username to all lower case username. This is important because some external authentication services return a case-sensitive username upon login. This is problematic with Django as the built-in user model is case-sensitive. This means a single remote user may have two different records in that database (e.g. 'Username' is different than 'username').,HassanKadhem,b'invalid',2019-10-18T21:34:19Z,2019-10-21T20:41:48Z
11937,Fixed #27395 -- Updated sitemap to generate 'alternates',"Updated the sitemap generator and default template to include
link elements with hreflang attribute to alternate language URLs.

https://code.djangoproject.com/ticket/27395",fdemmer,None,2019-10-18T16:20:26Z,2020-07-29T09:48:30Z
11936,Refs #27391 -- Added more tests for SimpleTestCase.,,felixxm,None,2019-10-18T08:34:28Z,2019-10-18T09:12:39Z
11935,Fixed #28337 -- Preserved extra headers of requests made with django.test.Client in assertRedirects().,"Continue https://github.com/django/django/pull/8931:
- Rebased with the master.
- Fixed @timgraham comments.",hramezani,None,2019-10-17T19:38:59Z,2019-10-18T07:11:46Z
11934,Fixed typo in tests/admin_scripts/tests.py.,,vlt,None,2019-10-17T17:39:25Z,2019-10-18T07:21:41Z
11933,Fixed #30890 -- Added MariaDB support for the relate lookup.,https://code.djangoproject.com/ticket/30890,felixxm,None,2019-10-17T12:05:15Z,2019-10-18T05:46:50Z
11932,Refs #12990 -- Moved CheckFieldDefaultMixin to the django.db.models.fields.mixins.,,felixxm,None,2019-10-17T09:44:15Z,2019-10-17T10:35:23Z
11931,Fixed #23576 -- Implemented multi-alias fast-path deletion in MySQL backend.,"This required moving the entirety of DELETE SQL generation to the compiler where it should have been in the first place and implementing a specialized compiler on MySQL.

The MySQL compiler relies on the ""DELETE table FROM table JOIN"" syntax for queries spanning over multiple tables.",charettes,None,2019-10-17T06:30:41Z,2020-08-30T07:42:45Z
11930,Fixed #30095 -- Fixed system check for RangeField/ArrayField.choices with lists and tuples.,[ticket 30095](https://code.djangoproject.com/ticket/30095),hramezani,None,2019-10-16T22:16:24Z,2019-11-05T11:11:34Z
11928,Fixed #30885 -- Dropped support for MariaDB 10.1.,https://code.djangoproject.com/ticket/30885,felixxm,None,2019-10-16T16:10:59Z,2019-10-16T17:40:37Z
11927,Fixed #30562 -- Doc'd MariaDB support for GIS spatial lookups.,https://code.djangoproject.com/ticket/30562,felixxm,None,2019-10-16T13:43:34Z,2019-10-16T14:37:27Z
11926,Fixed #30987 -- Added models.PositiveBigIntegerField.,"Ticket: https://code.djangoproject.com/ticket/30987

## Motivation

This is needed for fixing #11900 

The `PositiveBigIntegerField` field will later be used in `BigAutoField` so we have consistency between all auto fields:

| auto field | relation type field |
| -- | -- |
| AutoField | PositiveIntegerField |
| BigAutoField | **PositiveBigIntegerField** |
| SmallAutoField | PositiveSmallIntegerField |

---

## Docs

<img width=""645"" alt=""Screen Shot 2019-10-16 at 9 31 27 AM"" src=""https://user-images.githubusercontent.com/55533/66919721-429ca200-eff8-11e9-9b43-e890c83a5f04.png"">
",caioariede,None,2019-10-16T12:36:43Z,2019-11-19T20:10:42Z
11925,Refs #28436 -- Corrected docs regarding MySQL support of distance lookups.,Support was added in f3bada9889da23ae99a86ce268122b7c9ad9f1eb.,felixxm,None,2019-10-16T12:18:05Z,2019-10-16T12:39:19Z
11924,Refs #22423 -- Corrected crosses lookup support on MySQL in documentation.,Support was added in 15715bf2a2303b8f24edefc6c517cad7294edbe9.,felixxm,None,2019-10-16T11:29:45Z,2019-10-16T11:56:42Z
11923,Refs #27910 -- Added __init__.py file for model_enums tests.,,felixxm,None,2019-10-15T18:54:35Z,2019-10-15T19:27:26Z
11922,Fixed #30859 -- Fixed DatabaseFeatures.supports_aggregate_filter_clause on SQLite 3.30.1+.,https://code.djangoproject.com/ticket/30859,felixxm,None,2019-10-15T18:36:34Z,2019-10-15T18:55:59Z
11921,"Moved ""Sign the CLA"" to the bottom of New Contributor First Steps.","[As discussed on the mailing list][0]:

> Step 1 of First Steps shouldn't be ""Find a printer"".

[0]: https://groups.google.com/d/topic/django-developers/owOqFmxufgs/discussion",carltongibson,None,2019-10-15T09:47:31Z,2019-10-15T12:24:31Z
11919,Fixed #28699 - Deferred CSRF token rotation on login to middleware process response phase.,"Delegate CSRF token rotation on login to middleware instead of
django.auth.login and clarify documentation.",math-a3k,None,2019-10-15T07:08:34Z,2020-02-19T10:25:37Z
11918,Fixed #28699 - REMOTE_USER issues with CSRF,"Delegate CSRF token rotation on login to middleware instead of
django.auth.login and clarify documentation.",math-a3k,b'invalid',2019-10-15T06:32:27Z,2019-10-15T07:05:33Z
11917,Fixed #20393 -- Stopped QuerySet repr from executing database queries,Discussion on the mailing list: https://groups.google.com/forum/#!topic/django-developers/WzRZ0IfBipc,satchamo,None,2019-10-14T23:25:41Z,2019-10-15T12:01:37Z
11916,Fixed #20577 -- Deferred filtering of prefetched related querysets.,"Since Queryset._filter_or_exclude machinery is quite heavy, add the
possibility to defer it till actually necessary. Use it in
ManyRelatedManager to avoid O(N) calls to Query.add_q in
prefetch_related.",gizmondo,None,2019-10-14T23:01:15Z,2020-05-08T06:59:56Z
11915,Fixed #30881 --Optimize magage_translations.py file,"The function **_tx_resource_for_name()** in the file **manage_translation.py** uses if else statement to return the **Transifex resource name**. I replaced that if else statement with a ternary operator. It allows us  to replace simple if statements with a single line expression and  increases code readability by reducing number of lines of code.


",ankitsaxena21,b'invalid',2019-10-14T20:37:27Z,2019-10-15T06:24:55Z
11914,Fixed #30880 -- Optimized _tx_resource_for_name() function,"The function **_tx_resource_for_name()** in the file **manage_translation.py** uses if else statement to return the **Transifex resource name**.
I replaced that if else statement with a ternary operator. It allows us to replace simple if statements with a single line expression and increases code readability by reducing number of lines of code.
",ankitsaxena21,b'invalid',2019-10-14T20:09:17Z,2019-10-15T06:24:47Z
11913,Fixed #30880 -- Optimized _tx_resource_for_name(),"The _tx_resource_for_name() function in django/scripts/manage_translations.py uses simple if else statement to return the Transifex resource name.
I replaced the simple if else statement with a ternary operator. It reduced the number of lines of codes and make the code more readable.
",ankitsaxena21,b'invalid',2019-10-14T19:22:33Z,2019-10-15T06:25:11Z
11912,Fixed #30252 -- Clarified need to reopen forms.ImageField.image file to access raw image data.,[ticket 30252](https://code.djangoproject.com/ticket/30252),hramezani,None,2019-10-14T15:35:46Z,2019-11-11T10:50:37Z
11911,Fixed #30870 -- Fixed showing that RunPython operations are irreversible by migrate --plan.,,felixxm,None,2019-10-14T08:52:04Z,2019-10-14T09:46:13Z
11910,Fixed #30868 -- Prevented unnecessary AlterField when renaming a referenced pk.,"Regression introduced by dcdd219ee1, refs [#25817](https://code.djangoproject.com/ticket/25817).

Thanks Carlos E. C. Leite for the report and Mariusz for the bisect.",charettes,None,2019-10-14T01:56:49Z,2019-10-14T06:27:30Z
11909,Refs #26207 -- Removed obsolete note about slow constructing a model with deferred fields.,"This is not true since 7f51876f998 removed the necessity of creating proxy model classes at runtime for each deferred field sets.

For the record it was `deferred_class_factory` that motivated the addition of this note

https://github.com/django/django/commit/7f51876f99851fdc3fef63aecdfbcffa199c26b9#diff-1e7fc0d7d1b36358e371fab97bd1ddb1L233-L274",charettes,None,2019-10-13T23:36:59Z,2019-10-14T12:17:10Z
11908,Refs #20456 -- Moved initialization of HEAD method based on GET to the View.setup() for generic views.,"I've added documentation, but it got a bit long. Not sure if I should cut it down a bit, move it elsewhere, add more, or if it's fine as is.

I ran the doc build, spelling check, flake8, and django tests (sqlite and postgres).

",felipe-lee,None,2019-10-13T05:37:48Z,2019-11-07T00:36:13Z
11907,Hola mundo,,Emilio4585,b'invalid',2019-10-13T00:27:30Z,2019-10-13T21:17:36Z
11906,Fixed #30816 -- Doc'd how to create projects with a local copy of Django.,"Added notes to clarify how a new contributor can try out newly made
changes in a local project by creating a new virtual env also pointing
to local Django clone from where to start a new project with
django-admin startproject.

This alleviates confusion for people who end up trying to run
django-admin startproject within the directory in which they have
cloned Django to run tests.

Added link to pip ""editable install"" documentation for reference.",awtimmering,None,2019-10-12T02:45:30Z,2019-10-15T10:57:20Z
11905,Fixed #30841 -- Deprecated using non-boolean values for isnull lookup.,"Add deprecation warning to, later on, add a check on version 4.x",aericson,None,2019-10-11T18:19:39Z,2019-10-21T07:39:43Z
11904,Fixed #30819 -- Fix admin datepicker year display when the input is two digits year.,"There is a bug in JS code causing datepicker to to display the wrong year.
When date input field is using two digits year, the datepicker showing 4 digits year will miss the year by 100 years.
For example, if the input field has `19` as the year part, the calendar will show year `1919` instead of `2019`.
A screenshot: 
https://drive.google.com/file/d/17KEkY89TqimwJIJ0kz-b2IJpYETpd46g/view.
Ticket: https://code.djangoproject.com/ticket/30819

Thanks @felixxm  for triaging.

",aldian,None,2019-10-11T17:00:15Z,2019-12-04T06:57:23Z
11903,Fixed #30872 -- Improved unknown command message when settings are manually configured.,https://code.djangoproject.com/ticket/30872,carltongibson,None,2019-10-11T14:46:51Z,2019-10-15T12:26:29Z
11902,"Fixed #30870 -- Fixed ""migrate --plan"" outputs ""IRREVERSIBLE"" on RunPython operations without docstrings.","[ticket 30870](https://code.djangoproject.com/ticket/30870)
Solution Proposed by @felixxm in the ticket.",hramezani,None,2019-10-11T14:03:04Z,2019-10-14T08:55:09Z
11901,Fixed #30854 -- Fixed QuerySet.select_related() with multiple FilteredRelations.,[ticket 30854](https://code.djangoproject.com/ticket/30854),hramezani,None,2019-10-10T19:16:23Z,2019-10-11T07:17:09Z
11899,Fixed #30828 -- Added add_relations and remove_relations.,Trac ticket: https://code.djangoproject.com/ticket/30828,davidfstr,None,2019-10-10T05:54:20Z,2019-10-30T09:05:00Z
11898,Fixed #24529 -- Allow double squashing of migrations,Allow squashing of squashed migrations as per [24529](https://code.djangoproject.com/ticket/24529). Added some tests to cover issue reported in [23090](https://code.djangoproject.com/ticket/23090).,browniebroke,None,2019-10-09T21:18:18Z,2020-03-26T10:48:47Z
11897,[WIP] Refs #28477 -- Strip unused annotations from count queries,I will try to revive https://github.com/django/django/pull/8928 / https://code.djangoproject.com/ticket/28477 with this.,tuky,None,2019-10-09T13:19:37Z,2019-10-10T11:27:41Z
11896,Merge pull request #1 from django/master,update fork,ozata,b'invalid',2019-10-09T12:13:52Z,2019-10-15T06:25:36Z
11895,Merge pull request #1 from django/master,update fork,ozata,b'invalid',2019-10-09T12:11:19Z,2019-10-15T06:25:45Z
11894,Fixed #30862 -- Allowed setting SameSite cookies flags to 'None'.,"Other changes:
- Improve documentation for 'secure' flag
- Fix method signatures for 'samesite' in `.set_cookie` and
`.set_signed_cookie`

Ticket: https://code.djangoproject.com/ticket/30862#ticket",danidee10,None,2019-10-09T12:01:10Z,2020-08-23T02:51:07Z
11893,Fixed #11385 -- Made forms.DateTimeField accept ISO 8601 date inputs.,Thanks José Padilla for the initial patch.,claudep,None,2019-10-09T10:14:53Z,2020-01-06T11:17:35Z
11892,Refs #27086 -- Corrections to unit testing contributor docs. ,"In the [unit tests contributor docs](https://docs.djangoproject.com/en/2.2/internals/contributing/writing-code/unit-tests/), the _Tips_ section is over-indented under the _Troubleshooting_ section. It should be a sibling. (I think.) 

This just outdents it a notch. 

#### Before:

<img width=""265"" alt=""before"" src=""https://user-images.githubusercontent.com/64686/66469493-38bef000-ea88-11e9-8a56-56eac5cd3ef4.png"">

#### After:

<img width=""284"" alt=""after"" src=""https://user-images.githubusercontent.com/64686/66469509-3f4d6780-ea88-11e9-8771-be3bc3555d75.png"">
",carltongibson,None,2019-10-09T09:32:39Z,2019-10-09T13:46:49Z
11891,Fixed #30812 -- Made ConditionalGetMiddleware set ETag only for responses with non-empty content.,,Dart-net,None,2019-10-09T09:20:50Z,2019-10-10T08:27:09Z
11890,"Refs #26608 -- Fixed DatabaseFeatures.supports_frame_range_fixed_distance on SQLite 3.28+, MariaDB 10.2+, and MySQL 8.0.2+.",https://www.sqlite.org/changes.html#version_3_28_0,felixxm,None,2019-10-09T09:07:48Z,2019-10-09T11:07:54Z
11889,Fixed #30858 -- Clarified that AdminEmailHandler processes all 5xx responses.,"Not quite sure this is worth the change but... 


",carltongibson,None,2019-10-09T07:31:16Z,2019-10-09T08:13:16Z
11888,Improved performance of django.template.base.Parser.,"pop(0), which is used to fetch each token, is O(n) in the length of the list. By reversing the list and operating off the end, we can perform next_token, prepend_token, and delete_first_token in O(1)

(I have neither benchmarked this, nor tested it locally, but it's basically impossible for this to be slower for any non-trivial template.)",alex,None,2019-10-09T02:26:03Z,2019-10-09T06:53:21Z
11887,Fixed #30860 -- Disabled unneeded NULLS FIRST/LAST workaround on SQLite 3.30+.,Confirmed that ordering related tests pass against SQLite 3.30 locally.,charettes,None,2019-10-09T02:11:04Z,2019-10-09T08:48:05Z
11886,Fixed #30405 -- Fixed source code mismatch crash in ExceptionReporter. ,[ticket 30405](https://code.djangoproject.com/ticket/30405),hramezani,None,2019-10-08T22:03:38Z,2019-11-13T11:16:30Z
11885,Fixed #30856 -- Combined fast-delete queries by model during cascade deletion.,,charettes,None,2019-10-08T15:22:07Z,2019-10-09T10:10:21Z
11884,Fixed #11097 -- Added note about parent link fields in formsets for multi-table inheritance models.,"https://code.djangoproject.com/ticket/11097

I'm not sure how much it's worth saying about this - while the example in the ticket is excellent, I think it might be a niche enough situation that it just needs notes. I've added two notes, one on each of the related features, but I think perhaps one is sufficient. If people disagree I'm happy to add the example as a whole section.

Edits/suggestions very welcome, I'm new to editing the Django docs.",veryhappythings,None,2019-10-08T13:14:12Z,2019-10-31T14:23:24Z
11883,Fixed #30759 -- Made cache.delete() return whether it succeeded.,"I returned a tuple with (success, count), a la `update_or_create` but am not completely sure of this as the return value.

Native Memcache returns a simple `TRUE` or `FALSE` value, while native Redis returns an integer with the number of deleted keys, so it seems there is no set standard.

",MisterRios,None,2019-10-08T11:36:31Z,2019-11-14T10:33:23Z
11882,Fixed #28790 -- Doc'd how to avoid running certain test classes in parallel.,,felixxm,None,2019-10-08T10:07:51Z,2019-10-08T10:32:38Z
11881,Fixed #30849 -- Added autodetector signals.,"Added two new signals, sent during makemigrations, which allow
third-party applications to modify the change detection process, and
allows them to insert custom operations into automatically generated
migration files, based upon changes to the model state.",Skeen,None,2019-10-08T08:49:47Z,2019-10-08T12:02:55Z
11880,Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't share error messages.,Fix for [ticket 30839](https://code.djangoproject.com/ticket/30839).,hramezani,None,2019-10-07T19:10:59Z,2019-10-08T08:28:27Z
11879,Fix bug with Apache x-sendfile header.,,Dart-net,None,2019-10-07T18:28:35Z,2019-10-08T06:19:58Z
11878,Ticket 30812,Fix bug with Apache X-SENDFILE header.,Dart-net,b'invalid',2019-10-07T15:26:40Z,2019-10-15T06:26:55Z
11877,Ticket 30812,Fix bug with Apache X-SENDFILE header.,Dart-net,b'invalid',2019-10-07T15:20:32Z,2019-10-15T06:26:50Z
11876,Ticket 30812,Fix bug with apache x-sendfile header.,Dart-net,b'invalid',2019-10-07T15:12:38Z,2019-10-15T06:26:46Z
11875,Ticket 30812,Fix bug with x-sendfile header.,Dart-net,b'invalid',2019-10-07T15:06:50Z,2019-10-15T06:26:41Z
11874,[UPDATE] LoginView,"Hi, I'm Kevin. When I use django auth loginview, I think it is need to add 'form_invalid_message'. Then, developer and user can easily know that input data is invalid. So, I propose that when user info is incorrect, return 'form_invalid_message'. Thank You!",YooInKeun,None,2019-10-06T19:04:49Z,2019-10-07T00:35:52Z
11873,Fixed #30841 -- Fixed join promotion for non-boolean isnull.,"Ticket: https://code.djangoproject.com/ticket/30841
Briefly discussed here: https://groups.google.com/forum/#!topic/django-developers/AhY2b3rxkfA

When setting `isnull` on a `filter()` with a value that is not a boolean will cause problems when deciding to promote the `INNER JOIN ` to a `LEFT OUTER`.

One realistic case where this would happen is when one defines it's own `__bool__()` method and pass that object to `isnull`.",aericson,None,2019-10-05T12:47:32Z,2019-10-11T18:01:54Z
11872,Fixed #30808 -- Added the Django Forum to contributing index.,Adding a new bullet to the contributing page about the [Django forum](https://forum.djangoproject.com/) as per [#30808](https://code.djangoproject.com/ticket/30808#comment:6),grahamhealy20,None,2019-10-04T22:56:10Z,2019-10-15T07:22:42Z
11871,Fixed #28273 -- Doc'd fast nullable column creation with defaults.,"Ticket: https://code.djangoproject.com/ticket/28273

---

<img width=""659"" alt=""Screen Shot 2019-10-04 at 10 54 40 AM"" src=""https://user-images.githubusercontent.com/55533/66213162-94a70480-e695-11e9-84ea-50264e50831f.png"">
",caioariede,None,2019-10-04T13:56:01Z,2019-10-07T12:38:11Z
11870,Password reset template html to txt with fallback,See https://code.djangoproject.com/ticket/30837#ticket,Thijss,None,2019-10-04T00:15:59Z,2019-10-08T09:07:25Z
11869,change all appearances of password_reset_email.html to password_reset…,See https://code.djangoproject.com/ticket/30837#ticket,Thijss,None,2019-10-04T00:15:30Z,2019-10-04T05:29:23Z
11868,Made minor edits and small fixes to docs/faq/install.txt.,"* Django deployment docs detail WSGI servers, not alternatives.
* Explicitly iterate over the list of databases supported (in
master/3.x)
* Describe the development web/db server, and callout the prod
suggestions

Plus minor grammar and tense corrections.",glasnt,None,2019-10-03T16:46:16Z,2019-10-04T09:40:51Z
11867,Fixed #30834 -- Added explicit list of supported databases to the databases docs.,"This corrects the assumption from the main docs landing page that this
page is a list of ""supported databases"", aand prevents readers from
having to read all the top-level section headers to enumerate the
list of supported databases manually.",glasnt,None,2019-10-03T15:54:54Z,2019-10-03T17:50:07Z
11866,Refs #14218 -- Adjusted release note to use present tense.,"* Tim's https://github.com/django/django/pull/9296#pullrequestreview-296334026 (Good catch Tim, thank you! 🎩)
* ~~Also noticed a verb/subject count mismatch whilst I was there.~~",carltongibson,None,2019-10-03T06:42:20Z,2019-10-03T09:12:26Z
11865,Update MultiWidget documentation example,"The previous example of the [MultiWidget](https://docs.djangoproject.com/en/1.11/ref/forms/widgets/#django.forms.MultiWidget) class used two non-defined variables:
- `days`
- `months`

I included those on the docs with some dummy data.",german1608,None,2019-10-03T02:16:10Z,2020-01-02T13:43:56Z
11864,Update utils.py,remove white spaces for readability.,MrAfrazKhan,b'invalid',2019-10-02T17:21:16Z,2019-10-02T17:23:20Z
11863,Fixed #30826 -- Fixed crash of many JSONField lookups when one hand side is key transform.,"When doing `as_sql` the `compiler.compile` executes this to get the sql and params.
https://github.com/django/django/blob/master/django/db/models/sql/compiler.py#L412

In the jsonb `KeyTransform` code, we return a tuple https://github.com/django/django/blob/master/django/contrib/postgres/fields/jsonb.py#L115

Which makes `PostgresSimpleLookup.as_sql` fail: https://github.com/django/django/blob/master/django/contrib/postgres/lookups.py#L11 because `lhs_params` is a tuple and `rhs_params` is a list.

```
lhs_params ('d',)
rhs_params [<django.contrib.postgres.fields.jsonb.JsonAdapter object at 0x104e7f090>]
```

The fact that it's a tuple was introduced here: https://github.com/django/django/commit/6c3dfba89215fc56fc27ef61829a6fff88be4abb to fix a subquery bug.

I have doubts on wether we should use `tuple` or `list` for params.




",louiseGrandjonc,None,2019-10-02T00:17:34Z,2019-10-18T11:10:04Z
11862,Fixed #20917 -- Use faster password hasher when testing,"Took the points from the discussion in this old ticket and tried to implement them:

- [x] Add a new `TEST_PASSWORD_HASHERS` setting that default to MD5, which behaviour can be overriden or skipped.
- [x] Implement in `setup_test_environment` to use this fester password hasher for tests
- [x] Add a few tests to cover variations of the setting
- [x] Update documentation for settings 
- [x] Update release notes?",browniebroke,None,2019-10-01T19:50:23Z,2020-03-26T10:28:52Z
11861,Fixed #30827 -- Made batch_size arg of QuerySet.bulk_create() respect DatabaseOperations.bulk_batch_size().,"Fixes the issue described in https://code.djangoproject.com/ticket/30827

This bug causes failure in `bulk_create` if passed `batch_size` is greater than calculated `max_batch_size`.

Note that this already works as expected in `bulk_update`: https://github.com/django/django/blob/stable/2.2.x/django/db/models/query.py#L504

",ahmetkucuk,None,2019-10-01T17:18:34Z,2019-10-22T03:29:28Z
11860,Update .editorconfig,it may be better,sk044,b'invalid',2019-10-01T12:29:02Z,2019-10-01T13:10:50Z
11859,Fixed misplaced period in translatable literal.,Thanks to translator Vláďa Macek (@tottle) who reported this on Transifex.,ramiro,None,2019-10-01T10:42:20Z,2019-10-01T12:52:59Z
11858,Refs #27914 -- Fixed serialization of nested enum.Enum classes in migrations.,,hramezani,None,2019-10-01T07:39:36Z,2019-10-03T07:08:12Z
11857,Fixed #30510 -- Fixed crash of QuerySet.bulk_create() with mixed-length texts on Oracle.,"Fixes the issue described in here: https://code.djangoproject.com/ticket/30822#no2

and originally reported in https://code.djangoproject.com/ticket/30510

We are converting every TextField to CLOB if we are doing a bulk insert into Oracle DB. That prevents `DatabaseError: ORA-01790: expression must have same datatype as corresponding expression`. 

Another proposed solution is PRed here: https://github.com/django/django/pull/11416

",ahmetkucuk,None,2019-10-01T05:50:29Z,2019-10-01T17:31:14Z
11856,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,,spookyvision,None,2019-09-30T22:33:25Z,2019-10-02T09:51:48Z
11855,Fixed #30817 -- Clarified return value of Sitemap.items().,"Patch for issue https://code.djangoproject.com/ticket/30817 hopefully inline with suggestion from @felixxm. 
This is my first contribution so let me know if there is anything I need to know or do differently",Sjbrgsn,None,2019-09-30T12:55:53Z,2019-10-02T10:19:32Z
11854,Fixes #30807 -- Fix permissions when extracting archives,"When extracting archives, files that do not have “owner read”
permissions in the archive metadata are now extracted with
“owner read”, as opposed to leaving the permissions up to OS default.

Test has been updated to now expect “owner read” only when extracting 
a file with zero permissions in the archive.

This fixes a regression introduced after #27628 fixed a prior 
regression in #27494, but that became only apparent after more 
tests were introduced in #30160.",awtimmering,None,2019-09-29T12:42:11Z,2019-10-12T04:27:52Z
11853,Fixed #30977 -- Optimized PasswordResetForm.save() a bit.,,hramezani,None,2019-09-29T12:31:06Z,2019-11-11T09:40:05Z
11852,Fixed #30807 -- Fix permissions when extracting archives & related tests,"When extracting archives, files that do not have “owner read” permissions in the archive metadata are now extracted _with_ “owner read”, as opposed to leaving the permissions up to OS default.

Test has been updated to now expect “owner read” only when extracting a file with zero permissions in the archive.

This fixes a regression introduced after #27628 fixed a prior regression in #27494, but that became only apparent after more tests were introduced in #30160.",awtimmering,None,2019-09-29T12:17:39Z,2019-09-29T12:37:48Z
11851,Refs #10348 -- Doc'd that ModelAdmin ignores list_select_related when QuerySet.select_related() was already called.,"…dy applied

This is the part of code that will ignore the `list_select_related` hence the warning.
https://github.com/django/django/blob/fa8fe09e4e2b538c5d50a559081861d5c0635d55/django/contrib/admin/views/main.py#L449-L450",tamers,None,2019-09-29T09:19:15Z,2019-10-07T09:17:15Z
11850,Fix list item typo on messages documentation page,,bretwalker,None,2019-09-28T22:04:51Z,2019-09-28T22:14:42Z
11849,add __class_getitem__ to QuerySet and Manager,"Hi, I'm a primary maintainer of django-stubs https://github.com/typeddjango/django-stubs. 

I'll never find time/enough motivation to actually write DEP for type-checking, so I thought I'll just submit a PR with methods I need to support it, to start a discussion. ",mkurnikov,None,2019-09-28T20:02:43Z,2019-09-30T06:30:19Z
11848,Fixed #28690 -- Fixed handling of two-digit years in parse_http_date().,"Changed date parser to account for 2 year digits in accordance with
RFC7231. Added mocked tests to check for roll-over scenarios.",awtimmering,None,2019-09-28T04:28:22Z,2019-09-30T13:38:33Z
11847,Refs #28816 -- Prevented silencing data loss when decreasing CharField.max_length for ArrayField.base_field on PostgreSQL.,Fix for [ticket 28816 comment](https://code.djangoproject.com/ticket/28816#comment:7).,hramezani,None,2019-09-28T00:50:21Z,2019-10-17T11:29:17Z
11846,Doc'd that migrate commmand accepts a unique migration name prefix.,Documented: You can use the <migration_name> prefix when django-admin <app_label> <migrate>,davidmgvaz,None,2019-09-27T21:33:35Z,2019-09-30T07:48:33Z
11845,Added Uzbek language.,,claudep,None,2019-09-27T20:48:31Z,2019-11-04T14:19:41Z
11843,Ticket 28726 - DEFAULT_FROM_EMAIL,Updated documents to clarify that the DEFAULT_FROM_EMAIL setting expects a tuple.,paqman85,None,2019-09-27T16:55:42Z,2019-09-30T06:59:55Z
11842,Refs #30597 -- Added a warning about dependent apps when unapplying migrations.,"When unapplying a migration it could spread out to other dependent apps

following the comment in /pull/11821/",davidmgvaz,None,2019-09-27T16:48:56Z,2019-09-27T18:14:13Z
11840,Use Bloom filter for common passwords lookup,"The current mechanism to look up common passwords is simply to keep a list of 20k strings in memory as a `set` and look up the supplied password in it.

This is neither CPU nor memory effective, so I have replaced it with Bloom filter, a structure perfectly suitable for this usage scenario. Static passwords list is replaced with ~25 KB binary pickled, pre-generated Bloom filter, directly loaded into  memory by the class. Any custom password list is also converted into an in-memory Bloom filter.

Testing indicates **4x lookup speed gain and 30% memory savings** with the default 20k list, and these results will be even better with larger password lists.",kravietz,None,2019-09-27T13:10:21Z,2019-09-27T13:31:51Z
11839,[2.2.x] Fixed #30216 -- Doc'd that BooleanField is no longer blank=True in Django 2.1.,"Changed de documentation to alert for this implicit behavior change.

Following the /pull/11831 comments",davidmgvaz,None,2019-09-27T10:16:37Z,2019-09-27T14:30:33Z
11838,Refs #30010 -- Doc'd running tests with django-docker-box.,"Per conversation with Carlton during Django sprint at DjangoCon US, added Django Docker Box to unit testing docs. Closes #30010",KatherineMichel,None,2019-09-27T00:00:44Z,2019-10-02T12:04:59Z
11837,Fixed #30043 -- AdminURLFieldWidget incorrectly unquotes URLs e.g. containing %2F,"# What this does
Attempts to solve this by adding a check for this special case, and if this special case exists within the segment being quoted, the segment instead gets passed through the iri_to_uri function to properly ignore the `%2F` due to `iri_to_uri` adding the `%` to the ""safe"" characters. 

This issue arrises due to `/` being a safe character when encoded on the path, however when this has already been encoded on the path, the unquote would turn `%2F` into `/` which was undesirable according to this ticket:
https://code.djangoproject.com/ticket/30043",bmoe872,None,2019-09-26T23:56:44Z,2019-10-02T14:42:10Z
11836,Removed outdated information about creating PRs for stable branches.,"All PRs should be against master.
Any backport will be performed by the merger.",davidmgvaz,None,2019-09-26T23:09:55Z,2019-09-27T17:19:51Z
11835,Fixes #30806 by configuring OBJC_DISABLE_INITIALIZE_FORK_SAFETY,MacOS OBJC default forking configuration causes tests to hang. This sets the env var under tox.,crwilcox,None,2019-09-26T23:08:51Z,2019-09-27T21:56:39Z
11834,Fixed #20601 - intcomma internationalization error,"Fixed regex transform to set appropriate THOUSAND_SEPARATOR and
DECIMAL_SEPARATOR for the given locale/language.
Added test case in 'test_i18n_intcomma'",RamParameswaran,None,2019-09-26T22:47:43Z,2020-03-17T09:21:32Z
11833,Fixed #30810 -- Fixed WatchmanReloaderTests.test_setting_timeout_from_environment_variable test.,"Please review https://code.djangoproject.com/ticket/30810

`client_timeout` is an instance attribute of the watchman reloader implementation.

The reason of creating a new instance instead of using the `self.reloader` one is the `setUp` tampering the `client_timeout` value.",poligarcia,None,2019-09-26T22:26:48Z,2019-09-27T06:39:25Z
11832,Fixes 30810 - WatchmanReloaderTests error with AttributeError: type object 'WatchmanReloader' has no attribute 'client_timeout',"Please review https://code.djangoproject.com/ticket/30810

`client_timeout` is an instance attribute of the watchman reloader implementation.

The reason of creating a new instance instead of using the `self.reloader` one is the `setUp` tampering the `client_timeout` value.",poligarcia,None,2019-09-26T22:04:21Z,2019-09-26T22:24:18Z
11831,Fixed #30216 -- Document BooleanField no longer blank=True in Django …,"Changed de documentation to alert for this implicit behavior change.

reverted some lines from: 9b15ff08ba638a7070fb51c1ab4c01e245556ae8

Removing .. versionchanged:: 2.1, while there are people still migration from 1.11 to 2.2, can be dangerous. There should be a more cautious methodology. Or eventually, create a way to capture all the changes between two consecutive LTS.",davidmgvaz,None,2019-09-26T21:55:46Z,2019-09-27T10:27:30Z
11830,Fixes #30806: Prevent tests from hanging,"MacOS users may need to set OBJC_DISABLE_INITIALIZE_FORK_SAFETY=TRUE
(#27086) to prevent tests from hanging.  However, if the tests are
run with `tox`, the environment variable is not set and the tests may
hang.",dustinlharrison,None,2019-09-26T21:11:08Z,2019-10-09T09:20:15Z
11829,Fixed #23755 -- Added support for multiple field names in the no-cache Cache-Control directive to patch_cache_control().,,fcurella,None,2019-09-26T20:59:55Z,2019-10-11T07:13:58Z
11828,Refs #26601 -- Deprecated passing None as get_response arg to middleware classes.,This is the new contract since middleware refactoring in Django 1.10.,claudep,None,2019-09-26T19:39:02Z,2020-02-18T19:26:37Z
11827,Refs #15396 -- Mentioned full path to GZipMiddleware in documentation.,Added a little note about ,mayela,None,2019-09-26T19:38:31Z,2019-10-02T17:03:02Z
11826,Fixed #30216 -- Document BooleanField no longer blank=True in Django 2.1+,"The documentation for 2.1 already mentioned the null change, I just added the implicit blank=True there, to be explicit about it.",davidmgvaz,None,2019-09-26T19:17:20Z,2019-09-26T21:47:16Z
11825,Fixed #30216 -- Document BooleanField no longer blank=True in Django 2.1+,"The documentation for 2.1 already mentioned the null change, I just added the inplicit blank=True there, to be explicit about it.",davidmgvaz,None,2019-09-26T19:14:39Z,2019-09-26T19:15:44Z
11824,Fixed #30802 -- Prevented manifest creation when running collectstatic in dry run mode.,,paul-eclipse,None,2019-09-26T19:09:34Z,2019-09-27T21:08:17Z
11823,Fixed #30765 -- Made cache_page decorator take precedence over max-age Cache-Control directive.,,fcurella,None,2019-09-26T18:42:25Z,2020-01-16T13:32:10Z
11822,Fixed #27921 -- Clarified usage of make_aware() with is_dst argument.,Updated the description of pytz.NonExistantTimeError to clearly explain how using is_dst will modify the time.,paqman85,None,2019-09-26T17:48:40Z,2019-09-27T16:01:11Z
11821,Fixed #30597 -- Clarified how to unapply migrations.,I think the rewrite help clarify migrate [app_label] zero. As well as it alerts for possible reversions on other dependent migrations from other apps.,davidmgvaz,None,2019-09-26T17:43:01Z,2019-09-27T21:38:27Z
11820,Fixed #30798 -- Fixed Meta.ordering validation for pk of related fields.,"[Ticket 30798](https://code.djangoproject.com/ticket/30798).
Test case by @felixxm ",hramezani,None,2019-09-26T08:37:14Z,2019-09-27T12:53:50Z
11819,FIX django jet integration,"Jet expects for jquery to be loaded and fails (from years)
https://github.com/geex-arts/django-jet/issues/148
This fixes the problem",avdata99,None,2019-09-26T01:23:07Z,2019-10-17T18:27:20Z
11818,"Fixed #30803 -- Allowed comma separators for miliseconds in parse_datetime(), parse_time() and parse_duration().","ISO 8601:2004 states that parsers should support both delineators, with a preference for commas.

https://www.iso.org/standard/40874.html

A decimal mark, either a comma or a dot (without any preference as stated in resolution 10 of the 22nd General Conference CGPM in 2003,[16] but with a preference for a comma according to ISO 8601:2004)


Trac issue https://code.djangoproject.com/ticket/30803#ticket",benwilber,None,2019-09-25T20:20:20Z,2019-11-25T11:45:47Z
11817,Fixed #30800 -- Fixed migrations crash when altering a field with custom db_type().,"Regression in 1378d665a1c85897d951f2ca9618b848fdbba2e7.

https://code.djangoproject.com/ticket/30800",felixxm,None,2019-09-25T06:43:40Z,2019-09-25T10:32:31Z
11816,Fixed false positive tests of Paginator.count property.,"Those two invocations generate false-positives on django-stubs test suite. They make no difference for Django itself, as exception is raised before attempting to call an integer. But technically, they are incorrect. ",mkurnikov,None,2019-09-24T21:49:01Z,2019-09-25T07:15:28Z
11815,Fixed #30774 -- Made serialization in migrations use members names for Enums.,[Ticket 30774](https://code.djangoproject.com/ticket/30774),hramezani,None,2019-09-24T21:45:36Z,2019-09-30T08:52:23Z
11814,Documented admonition on when to use custom signals,"As discussed on django-developers: https://groups.google.com/d/msg/django-developers/c5sFZ5BEujI/jVLsfSYBAwAJ
",adamchainz,None,2019-09-24T21:09:39Z,2019-09-25T14:35:20Z
11813,Doc'd support for missing types serialization in migrations.,,felixxm,None,2019-09-24T11:09:37Z,2019-09-24T11:57:16Z
11811,Fixed #30585 -- Added {% translate %} and {% blocktranslate %} template tags.,"https://code.djangoproject.com/ticket/30585

https://groups.google.com/forum/#!msg/django-developers/tANKEpROLeQ/mbXwb482DwAJ",mwhansen,None,2019-09-24T01:18:02Z,2019-12-18T13:17:54Z
11810,Fixed #30796 -- Prevented select_related() from mutating a queryset on chaining.,Thanks Darren Maki for the report.,charettes,None,2019-09-23T19:56:25Z,2019-09-24T07:53:37Z
11809,[ENHANCEMENT] Fixed class name return instead of hardcoded code,"This is my first PR for django project. :)
It's an improvement to get the class name instead of hardcoded name.",viniciuschan,None,2019-09-23T15:26:55Z,2019-09-23T15:39:30Z
11808,Fixed #30651 -- Made __eq__() return NotImplemented for not implemented comparisons.,"Changed `__eq__` methods on `Model`, `UniqueConstraint`, and `CheckConstraint`
to return `NotImplemented` instead of `False` if compared to an object of
the same type, as is recommended by the Python data model reference.
Now these models can be compared to `ANY` (or other objects with `__eq__`
overwritten) without returning `False` automatically.

In the corresponding [issue](https://code.djangoproject.com/ticket/30651), I was asked if I would do this change for all classes... there's a lot of them, and I'm not sure any besides Model really gets compared in tests often, which is the main place this bug manifests. So, changing Model seems to me to be higher value than the rest of these classes. Therefore, before writing changes and tests for all of the 70 odd classes I'd change, I thought I should submit this, so I stop procrastinating on fixing it. I also thought it would give people an opportunity to say they don't want this, or want different tests, or want to chime in that not every `False` to `NotImplemented` needs a test, so I can hear any of that before doing a lot of repetitive work.",ElizabethU,None,2019-09-23T15:12:09Z,2019-10-02T00:05:11Z
11806,Create files.py,Added class-based views.,Wolflind,None,2019-09-22T19:16:47Z,2019-09-23T07:21:08Z
11805,Fixed #30457 -- Doc'd TestCase on_commit hook behaviour and solution to trigger,https://code.djangoproject.com/ticket/30457,Swat009,None,2019-09-22T16:52:30Z,2020-05-20T10:33:21Z
11804,Fixed #30793 -- Added SECURITY.md.,"### Summary

Adds a `SECURITY.md` file that GitHub will pick up and link to from a tooltip when users are creating their first issue. [See an example on nodejs/nodejs](https://github.com/nodejs/node/issues/new).

Fixes https://code.djangoproject.com/ticket/30793.

### Other Information

I've duplicated the content here from https://docs.djangoproject.com/en/dev/internals/security/.",greysteil,None,2019-09-22T16:06:24Z,2019-09-23T05:51:18Z
11803,WIP: Enforced get_response middleware init argument,,claudep,None,2019-09-21T21:04:07Z,2019-09-22T09:38:46Z
11802,Refs #26601 -- Used new-style middlewares in documentation.,,claudep,None,2019-09-21T19:04:00Z,2019-09-26T16:49:02Z
11801,Ref #30790 -- fixes a bug with `autocomplete_fields`,"When `search_fields` is not defined but `get_search_fields` is the `autocomplete_fields` feature fails this check. This commit should fix that.

https://code.djangoproject.com/ticket/30790#ticket",chadgh,None,2019-09-20T21:23:28Z,2019-09-20T22:57:02Z
11800,Refs #30771 -- Fixed RemovedInDjango31Warning in test_exact_query_rhs_with_selected_columns.,,felixxm,None,2019-09-20T19:20:20Z,2019-09-20T20:01:38Z
11799,Removed uneeded if-condition in BaseExpression.flatten.,I believe that due to `Value(arg)` in https://github.com/django/django/blob/master/django/db/models/expressions.py#L184 the `if`-condition is unnecessary. I found it by going through the coverage report.,atombrella,None,2019-09-20T14:48:21Z,2020-01-02T20:44:18Z
11798,Fixed #30786 -- Used CONVERT_TZ to check if the time zone definitions are installed on MySQL.,"Replaced a timezone check in the MySQL backend with one that
doesn't require access to the mysql.time_zone database and more
closely aligns with Django's usage of the timezone info.",recvfrom,None,2019-09-20T02:52:26Z,2019-09-20T06:56:59Z
11797,Fixed #30771 -- Fixed exact lookup against queries with selected columns.,"Added check in Exact class to use pre-existing select fields (and
thereby GROUP BY fields) from subquery if they were specified, instead
of always defaulting to pk

Thanks Aur Saraf for the report and Simon Charette for guidance.",jhtimmins,None,2019-09-20T02:23:19Z,2019-09-20T15:12:07Z
11796,Fixed #30771 -- Fixed Exact lookup so GROUP BY works in subquery.,"Added check in Exact class to use pre-existing select fields (and thereby GROUP BY fields) from subquery if they were specified, instead of always defaulting to pk

Thanks Aur Saraf for the report and Simon Charette for guidance.",jhtimmins,None,2019-09-20T02:02:13Z,2019-09-20T02:17:40Z
11795,WIP: Test github actions,,orf,None,2019-09-19T21:12:09Z,2019-09-19T21:19:22Z
11794,Changed 'using either one of' to 'using one of',"Changed ""Named arguments can be passed by using either one of the following syntaxes::
"" to ""Named arguments can be passed by using one of the following syntaxes::
""",ForeStrikeGallery,None,2019-09-19T20:37:10Z,2019-09-20T09:27:55Z
11793,Fixed #30785 -- Doc'd that SESSION_COOKIE_DOMAIN supports subdomains.,#30785: Docs for `SESSION_COOKIE_DOMAIN` extended with hint about subdomain wildcard,GitRon,None,2019-09-19T14:02:55Z,2019-09-23T11:50:19Z
11792,Fixed #27462 -- Clarifed difference in m2m_changed pk_set for add() vs remove().,"_Wording. Hmmm._ 

c.f. #10563. ",carltongibson,None,2019-09-18T14:14:59Z,2019-09-19T09:38:28Z
11791,Documentation updates: Sites reference and assertNumQueries().,"This PR contains two documentation updates. 

1. To address the request here: https://github.com/django/django/pull/11667 -- my goal is minimal changes while still keep the good example in place. 
2. Hopefully make the `assertNumQueries` be more obvious that you can pass `using` as a kwarg. I got confused when I read the docs and the example talked about the `lambda` for the `call`.",garrypolley,None,2019-09-18T01:20:37Z,2019-12-20T07:47:43Z
11790,Fixed #30776 -- Restored max length validation on AuthenticationForm.UsernameField.,"A regression in Django 1.11 prevented the AuthenticationForm from setting max_length on the username's TextInput.
Thanks to felixxm for reporting and for regression tests.",smjreynolds,None,2019-09-17T14:33:44Z,2019-09-18T21:34:10Z
11789,Fixed #30779 - Improved selection of filename/lnum in technical_500 template.,"Fixes https://code.djangoproject.com/ticket/30779.

Will look into tests when this gets accepted.",blueyed,None,2019-09-17T10:09:51Z,2020-04-07T05:19:33Z
11787,Fixed #30732 -- Doc'd that SameSite cookies flags can affect xframe_options_exempt.,"Added note for CSRF_COOKIE_SAMESITE and SESSION_COOKIE_SAMESITE
below the xframe_options_exempt of the clickjacking guide.",jezeniel,None,2019-09-16T10:14:00Z,2019-09-24T06:43:43Z
11786,Merge pull request #1 from django/master,update code,chinassx,None,2019-09-16T09:20:19Z,2019-09-16T09:21:16Z
11785,Added vanilla JavaScript examples to CSRF documentation,,adamchainz,None,2019-09-16T08:50:52Z,2020-04-04T10:50:54Z
11784,Fixed #30769 -- Fixed a crash when filtering against a subquery JSON/HStoreField annotation.,"This was a regression introduced by 7deeabc7c7526786df6894429ce89a9c4b614086 to address CVE-2019-14234.

Thanks Tim Kleinschmidt for the report and Mariusz for the tests.

---

@felixxm I guess we should backport down to 1.11.x?",charettes,None,2019-09-16T03:30:46Z,2019-09-16T06:52:44Z
11782,Fixed #29444 -- Allowed returning multiple fields from INSERT statements on Oracle.,@felixxm this is that bit fixed `can_return_multiple_columns_from_insert` for Oracle.,codingjoe,None,2019-09-14T21:59:49Z,2019-09-25T00:35:41Z
11781,"Fixed #30775 -- Added admonition about missing imports to ""Running tests"" section in tutorial 5.",Ensures that users go back and check for their `models.py` imports if they get an error different to the expected bug,glasnt,None,2019-09-14T02:53:26Z,2019-09-16T10:54:13Z
11779,grammar/typo,,falkben,None,2019-09-13T14:18:47Z,2019-09-13T18:37:21Z
11778,Return the result of send_mail for check the number of sent emails,"So, this is my first pull request. If I have made mistakes, please help me.

Basically, send_email function return a value to test on, email_user is not. It will be useful to return the same value to known the number of sent emails.",gaamdalurt,None,2019-09-13T10:59:41Z,2019-11-13T09:51:23Z
11777,Refs #30420 -- Added request process check routine when runserver request is processing,"Added request process check routine when the request is processing

https://code.djangoproject.com/ticket/30420",bunseokbot,None,2019-09-13T08:45:36Z,2019-09-16T08:29:20Z
11776,[WIP] Refs #28935 -- Corrected template error message,"### Work in progress.

[#28935](https://code.djangoproject.com/ticket/28935)
Issue is:
When ""extends"" and ""include"" template tags are used together in same html page, and ""include"" tries to include nonexistent html file, error page gives incorrect information (filename and line number) under the heading ""Error during template rendering"".

### Example: 
base.html
```
{% block content %}
{% endblock %}
```

home.html
```
{% extends 'base.html' %}
{% block content %}
{% include ""./nonexistent.html"" %}    <== TemplateNotFound
{% endblock %}
```

This gives 
```
Error during template rendering
In template /.../base.html, error at line 0 
```

But the expected error reporting should be
```
In template /.../home.html, error at line 3
```

### What I've done:
Django template engine is saving only most recently rendered/visited template informations.
In this case, `home.html -> base.html -> `then error occurs here, without going back to home.html.
This makes ""base.html"" the most recent one, and error information is pulled from the base.html.

Therefore, I made a global variable, ""template_stack"", to save and pull out previously rendered page information, i.e. home.html.
Please have a look and see if this approach is Okay.

There is one test failure, but if I mimic the test with actual files and browser it seems to be working fine.
```
======================================================================
FAIL: test_compile_tag_error_27956 (template_tests.tests.TemplateTests)
Errors in a child of {% extends %} are displayed correctly.
----------------------------------------------------------------------
AssertionError: 'nt.html&quot; %}\n' != '{% badtag %}'
```",minho42,None,2019-09-12T19:16:38Z,2020-03-17T09:19:19Z
11775,Increased the default PBKDF2 iterations for Django 3.1.,,carltongibson,None,2019-09-12T09:49:34Z,2019-09-12T15:24:06Z
11774,Expanded notes on alphas in release How-to.,"Refs https://github.com/django/djangoproject.com/issues/941

A few minor points from Tuesday's release. ",carltongibson,None,2019-09-12T08:06:06Z,2019-09-12T08:35:23Z
11773,Refs #30767 -- Improved deployment documentation.,"Continuation of https://code.djangoproject.com/ticket/30767

(unsure if I should open a seperate ticket)

In essence: I found that there is, hiding in the middle of the [`django-admin` reference docs](https://docs.djangoproject.com/en/2.2/ref/django-admin/#runserver), a very important statement: 

> We’re in the business of making Web frameworks, not Web servers

Exposing that up in the top level of the howto documentation I think is important. Especially around explaining *why* we don't and aren't giving recommendations. 

I also did not link to any other resources on purpose as not to pick favourites (even the djangogirls section on deployment makes a [choice](https://tutorial.djangogirls.org/en/deploy/) out of necessity. ",glasnt,None,2019-09-12T05:49:04Z,2019-12-20T10:34:11Z
11772,Fixed #30772 -- Optimized make_template_fragment_key().,"Also on Trac: https://code.djangoproject.com/ticket/30772#ticket

The `make_template_fragment_key` function in `django.core.cache.utils` has the following (minor) issues:

- Using `urllib.quote` for `vary_on` args, is not needed any more - it was originally added to make the unhashed strings safe to send to memcached and similar restricted systems.  But since the value is hashed, this is now adding nothing. (See https://github.com/django/django/commit/ebc1325721e43808cef4334edaffc23a43f86614#diff-702b69be0100a594fd6fea1e4ab2feb1).

- Use of the MD5 hashing function is disallowed on certain (odd) systems, not being FIPS compliant. See (https://github.com/django/django/pull/10605).

- Creates a string of all joined `vary_on` args to send to the hashing function, rather than using the hashlib `.update()` method - for very long strings, this can be slow and use a lot of memory.

Here is a version solving these, ~~switching to SHA256, and~~ speeding up the function quite a bit:

https://github.com/danthedeckie/django/tree/simplified_make_template_fragment_key

And here's the repo showing performance improvement:

https://github.com/danthedeckie/make_template_fragment_key_test

Which seems to be faster in every case.

The downside of this is that the cache key is now different from before.  The tests have been updated to the new values.

The current PR now sticks with MD5, but with a cleaned up function, following @claudep 's suggestion to do all hash function replacements as a separate PR.

Thoughts?",danthedeckie,None,2019-09-11T21:55:19Z,2019-09-19T06:07:02Z
11771,Stable/3.0.x,gotta try ,ghost,None,2019-09-11T18:43:13Z,2019-09-11T18:46:48Z
11770,Refs #27910 -- Improved documentation for model field choice enumeration types.,"I noticed a few typos and grammatical errors and a broken reference.

While I was there, I improved some explanations, added some helpful links and gave the enumeration types their own subsection, rather than mixing it in with rest.",pope1ni,None,2019-09-11T14:22:06Z,2019-09-13T13:54:35Z
11768,Refs #27338 -- Added tests for altering CharField with primary_key=True to AutoField on PostgreSQL.,"Fixed in 91b2bc3e70be2632baad86488fb03cf02848b5b6.

https://code.djangoproject.com/ticket/27338
",felixxm,None,2019-09-11T11:19:34Z,2019-09-11T11:41:25Z
11767,Fixed typos in comments and docs,"Some of them were found by reading, and the others were by script.
",minho42,None,2019-09-11T10:58:14Z,2019-10-03T11:41:20Z
11766,Fixed #30725 -- Fixed width of DateTimeField inputs in admin tabular inline.,"This fixed CSS issue of shrunken DateTimeField input box in admin when using user's own local timezone in settings.TIME_ZONE instead of ""UTC"" or other timezones.

https://code.djangoproject.com/ticket/30725
",minho42,None,2019-09-11T10:33:16Z,2019-09-17T14:19:57Z
11765,Refs #30591 -- Fixed too long identifier crash in migrations.test_operations on MySQL 8.0.16+.,Follow up to #11704.,felixxm,None,2019-09-11T09:58:36Z,2019-09-11T10:20:33Z
11760,Clarified that SECURE_REDIRECT_EXEMPT patterns should not include leading slashes.,"If someone sets `SECURE_REDIRECT_EXEMPT` to something like `r'^/no-ssl/$'`, the pattern will not match, because `SecurityMiddleware` strips leading slashes. This PR contains a small change to the docs that clarifies this behaviour.",rfleschenberg,None,2019-09-10T15:40:36Z,2019-10-11T14:07:01Z
11759,Fixed #30732 -- Added note for SameSite settings.,"Added note for `CSRF_COOKIE_SAMESITE` and `SESSION_COOKIE_SAMESITE`
below the `xframe_options_exempt` of the clickjacking guide.",jezeniel,None,2019-09-09T11:19:28Z,2019-09-16T08:27:33Z
11758,Fixed #30767 -- Improved references to deployment documentation.,"* Increase tocdepth to expose more complexity of topics
* Ensure deployment checklist is linked on main doc page

https://code.djangoproject.com/ticket/30767",glasnt,None,2019-09-09T04:23:03Z,2019-09-09T08:02:34Z
11757,Fixed #30754 -- Prevented inclusion of aliases in partial index conditions.,"SQLite doesn't repoint table aliases in partial index conditions on table rename which breaks the documented table alteration procedure.

Thanks Pēteris Caune for the report.",charettes,None,2019-09-09T00:57:42Z,2019-09-10T08:07:21Z
11756,Fixed #29823 -- Doc'd limitation of DecimalField on SQLite.,,claudep,None,2019-09-08T21:27:34Z,2019-09-14T17:29:18Z
11755,Fixed #30758 -- Made RangeFields use multiple hidden inputs for initial data.,https://code.djangoproject.com/ticket/30758,nasirhjafri,None,2019-09-08T16:39:07Z,2019-09-19T10:46:39Z
11754, Fixed #30752 -- Allowed using ExceptionReporter subclass in error re…,"…ports.

https://code.djangoproject.com/ticket/30752",pulysak,None,2019-09-07T17:33:11Z,2020-01-17T10:11:07Z
11753,Fized #30752 -- Allowed using ExceptionReporter subclass in error rep…,…orts.,pulysak,None,2019-09-07T17:27:53Z,2019-09-07T17:29:05Z
11752,Doc'd that UpdateCacheMiddleware and cache_page affect downstream caches.,"Make it clearer that both `UpdateCacheMiddleware` and `cache_page` set HTTP
headers related to client-side caching. Without this, there is no documentation that `cache_page` affects the client-side cache.",Flimm,None,2019-09-07T15:18:43Z,2020-09-17T12:28:23Z
11751,Fixed #30426 -- Changed X_FRAME_OPTIONS setting default to DENY.,,claudep,None,2019-09-07T07:55:44Z,2020-05-10T21:00:27Z
11750,"Fixed DatabaseFeatures.can_introspect_check_constraints on MariaDB < 10.2.22, 10.3.0 - 10.3.9.",Regression in e2c6a0858d7d9ad85eda353076a5b46608b704a9.,felixxm,None,2019-09-06T09:09:27Z,2019-09-06T09:53:58Z
11749, Fixed #30763 -- Fixed management commands when using required mutually exclusive groups.,"[ticket 30763](https://code.djangoproject.com/ticket/30763)
Thanks to @felixxm for preparing the test case.",hramezani,None,2019-09-05T21:47:44Z,2019-09-06T09:53:11Z
11748,Fixes#30766 Allowed to override cookies filtering in custom ExceptionReporter subclass,https://code.djangoproject.com/ticket/30766,nasirhjafri,None,2019-09-05T20:26:04Z,2019-09-05T20:43:56Z
11747,Fixes #29724 - date_hierarchy TZ and DST issues,Fixes https://code.djangoproject.com/ticket/29724 - date_hierarachy DST and TZ issues,yab228,None,2019-09-05T16:05:56Z,2019-09-05T20:45:02Z
11746,Moved release note for refs #30158 from deprecated to backwards incompatible changes.,Follow up to 9dc367dc10594ad024c83d398a8e3c3f8f221446.,felixxm,None,2019-09-05T13:32:42Z,2019-09-05T13:56:57Z
11745,Bootstrapped Django 3.1.,(to be merged after the stable/3.0.x branch is created following Django 3.0 alpha),felixxm,None,2019-09-05T13:09:43Z,2019-09-10T10:20:53Z
11744,Used Statement in PostGISSchemaEditor._create_index_sql().,"@charettes You introduced Statement and other DDL classes a long time ago, but the `PostGISSchemaEditor` was not touched.",atombrella,None,2019-09-05T06:15:25Z,2019-09-11T06:10:52Z
11743,Fixed #30750 -- Added support for check constraints on MySQL 8.0.16+.,"[ticket 30750](https://code.djangoproject.com/ticket/30750).
The original patch was from @felixxm. I just fixed a small test.",hramezani,None,2019-09-04T14:55:26Z,2019-09-05T07:51:54Z
11742,Fixed #30757 -- Added a system check to ensure max_length fits the longest choice.,"Ticket [#30757](https://code.djangoproject.com/ticket/30757).

Following on from https://github.com/django/django/pull/11540#issuecomment-527511798.",pope1ni,None,2019-09-04T08:30:14Z,2019-09-09T10:19:02Z
11741,Fix humanized dates in pt_BR,The missing spaces produce pretty annoying content.,terceiro,None,2019-09-03T14:02:33Z,2019-09-04T05:49:03Z
11740, Fixed #30691 -- Made migrations autodetector find dependencies for foreign keys altering.,…n other apps.,Dart-net,None,2019-09-03T10:44:38Z,2019-09-05T07:30:32Z
11739,Refs #29444 -- Made db.backends.oracle.utils.InsertVar use str as default.,,felixxm,None,2019-09-03T08:35:45Z,2019-09-03T11:08:50Z
11738,Refs #28699 -- Clarified CSRF middleware ordering in relation to RemoteUserMiddleware.,…dleware.,carltongibson,None,2019-09-03T08:02:22Z,2019-10-02T11:14:43Z
11737,FieldFile - wrong data if custom __str__ used,Original get_prep_value relies on FieldFile.__str__ function. If some overrides it database data will be corrupt (invalid). Should use file.name for get_prep_value instead of str(file),sooslaca,None,2019-09-02T13:06:30Z,2019-09-02T15:04:42Z
11736,Fixed #30747 -- Renamed is_safe_url() to url_has_allowed_host_and_scheme().,https://code.djangoproject.com/ticket/30747,carltongibson,None,2019-09-02T10:03:27Z,2020-02-13T08:03:34Z
11734,Fixed #30739 -- Fixed exclusion of multi-valued lookup against outer rhs.,,charettes,None,2019-09-01T18:46:50Z,2019-09-02T09:13:34Z
11733,Fixed images directory typo,Images to be put in `polls/static/polls/images` and not in `polls/static/polls/images/background.gif`,shvms,None,2019-08-31T19:37:55Z,2019-09-02T07:33:45Z
11732,Fixed #29406 -- Added support for Referrer-Policy header.,,claudep,None,2019-08-31T12:45:03Z,2019-09-02T07:58:40Z
11731,Fixed #30738 -- Fixed typo in docs/ref/forms/widgets.txt.,Thanks Emmanuel Cazenave for the reporting.,Oktosha,None,2019-08-30T14:33:28Z,2019-08-31T08:58:41Z
11730,Change decorator of BaseFormSet.empty_form from property to cached_property,This fix allows to change empty_form after formset initialization (set field's choices dynamically for example).,lampslave,None,2019-08-30T13:51:55Z,2019-09-13T11:28:33Z
11729,Fixed #13296 -- Fixed ordering by Options.order_with_respect_to after deleting objects.,"[ticket 13296](https://code.djangoproject.com/ticket/13296)
Original patch from @DrMeers ",hramezani,None,2019-08-30T08:30:32Z,2019-09-23T09:45:24Z
11728,Fixed #30731 -- Fixed handling trailing groups in simplify_regex().,"Fixes [30731](https://code.djangoproject.com/ticket/30731)
- e.g. pattern ends with a group that is not followed by / or $
- I was able to apply @felixxm [patch](https://code.djangoproject.com/ticket/30731#comment:2) to `replace_named_groups()`
- I was **unable** to immediately see how to fix `replace_unnamed_groups()` after staring at it for a while. So there's currently a failing test.

A kludge would be to just add at the top of `replace_unnamed_groups()`:
```
if not pattern[-1] == '$':
        pattern += '$'
```
... but that doesn't feel all too elegant even if the tests pass!

Submitting this PR to hopefully get some help with fixing replace_unnamed_groups(); I stared at the code for a while but it's pretty unclear. Maybe  @ketanbhatt can take a look?


",n2ygk,None,2019-08-29T17:31:03Z,2019-08-30T11:21:23Z
11727,"Fixed #29376 -- Allowed hiding ""Save and Add Another"" button in admin.",[ticket 29376](https://code.djangoproject.com/ticket/29376),hramezani,None,2019-08-29T14:32:01Z,2019-09-16T10:02:26Z
11726,minor mistakes in code,we have added choice as 'Just hacking again' but c = q.choice_set.filter(choice_text__startswith='Just hacking') doesn't work after c.delete().,praython,None,2019-08-29T12:45:43Z,2019-08-30T08:08:45Z
11725,Refs #25367 -- Simplified OrderBy and Lookup by using Case() instead of RawSQL() on Oracle.,Follow up to efa1908f662c19038a944129c81462485c4a9fe8.,felixxm,None,2019-08-29T08:35:54Z,2019-08-30T22:54:32Z
11724,Used skipUnlessDBFeature instead of checking vendor in test_filtering_on_annotate_that_uses_q.,,felixxm,None,2019-08-29T07:07:11Z,2019-08-29T07:40:54Z
11723,Added tests for raising an error when passing non-boolean expression to When().,,felixxm,None,2019-08-29T06:59:09Z,2019-08-29T07:29:50Z
11722,Fixed #30736 -- Added Storage.get_alternative_name() to allow customization.,"… resolving algorithm.

ticket [#30736](https://code.djangoproject.com/ticket/30736)",yukihira1992,None,2019-08-28T17:08:32Z,2019-08-30T09:50:11Z
11721,Changed example git clone URLs to use HTTPS.,"Cloning with HTTPS is recommended compared to SSH as per github.
https://help.github.com/en/articles/which-remote-url-should-i-use

Cloning with SSH URL requires generating an SSH key and adding it to the GitHub account.

I believe using HTTPS URL consistently across the docs is much easier for beginners to follow along.
",minho42,None,2019-08-28T14:57:56Z,2019-09-04T07:17:25Z
11720,Ticket 30735 -- Add support for dict data in multipart encoding,"It still needs tests.
I was thinking that `tests.test_client.tests` could be a good candidate...isn't it?",ychab,None,2019-08-28T14:24:21Z,2019-08-29T07:54:42Z
11719,Matched headings to summary of what's covered,"docs/intro/contributing.txt

I noticed summary has different wording than the heading:
""Downloading a copy of Django's development version"" != ""Getting a copy of Django’s development version.""
Then wondered if it would be better to include exactly what's covered in the page in case anyone wants to search for something from looking at the summary.
",minho42,None,2019-08-28T02:48:11Z,2019-08-28T06:00:39Z
11718,Fixed #30733 -- Doc'd that datetime lookups require time zone definitions in the database.,"In the QuerySet documentation, many of the APIs that work on
datetime fields have a variation of the same notice indicating
that when the USE_TZ setting is set to True, the database is
used to do timezone conversions.  This commit replaces the
variations with, IMO, the most helpful of these variations.",recvfrom,None,2019-08-27T21:58:50Z,2019-08-28T07:08:37Z
11717,[2.2.x] Fixed #30500 -- Fixed race condition in loading URLconf module.,"Ticket: https://code.djangoproject.com/ticket/30500

",orf,None,2019-08-27T16:01:43Z,2019-08-27T18:33:36Z
11716,Doc'd for_save argument of Expression.resolve_expression().,,felixxm,None,2019-08-27T14:54:18Z,2019-08-27T15:14:34Z
11715,Refs #24462 -- Added BaseSubquery datastructure.,"This is a sketch on how to eventually introduce QuerySet.subquery(), see [#24462](https://code.djangoproject.com/ticket/24462). 

Added new `Join`-like class `BaseSubquery` which is meant to be used in
FROM clauses. Rewrote `Query.get_aggregation` with it. Got rid of
`AggregateQuery` and `SQLAggregateCompiler` as redundant.

The only change in tests is related to [#26430](https://code.djangoproject.com/ticket/26430). Currently there is an early return from `get_aggregation` in case of provably empty query, and it doesn't run through converters. This looks like a bug to me, so changed outright. Is deprecation cycle needed here?

@charettes, could you please take a look?",gizmondo,None,2019-08-26T20:37:59Z,2020-03-21T16:25:13Z
11714,Fixed #30500 -- Added a lock around urlconf_module to prevent a race condition,"Ticket: https://code.djangoproject.com/ticket/30500

Any advice on how to test this would be greatly appreciated. I've run the reproduction script in the ticket for a long time and have not seen the failure at all, so I'm confident this does indeed fix the issue.",orf,None,2019-08-25T17:15:17Z,2019-08-27T15:56:00Z
11713,Fixed typo in tests/prefetch_related/tests.py comment.,,timgates42,None,2019-08-25T10:50:06Z,2019-08-26T06:14:30Z
11712,Fixed#30200 Added support to update array using indexes,"https://code.djangoproject.com/ticket/30200

- [x] Update `ArrayField` using indexes. i.e. `Foo.objects.update(arr__0=2)`
- [x] Update `JSONField` using indexes.
- [x] Update `HStoreField` using indexes
- [x] Update nested `ArraField` using indexes i.e. `Board.objects.update(pieces__0__0=4)`
for 
```python
class Board(models.Model):
    pieces = ArrayField(ArrayField(models.IntegerField()))
```

",nasirhjafri,None,2019-08-24T19:40:24Z,2020-07-03T09:18:47Z
11711,"Refs #23919 -- Replaced super(ASGIHandler, self) with super().",,jdufresne,None,2019-08-24T18:24:42Z,2019-10-24T23:46:46Z
11710,Refs #27795 -- Removed unnecessary force_bytes() calls in uri_to_iri().,"The argument to `uri_to_iri()` is always a string, so can safely call `.encode()`.

The value returned from `urllib.parse.quote()` is always a string, so can safely call `.encode()`.

https://code.djangoproject.com/ticket/27795",jdufresne,None,2019-08-24T17:34:31Z,2019-10-24T23:46:43Z
11709,Refs #27804 -- Used subTest() in utils_tests/test_encoding.py.,https://code.djangoproject.com/ticket/27804,jdufresne,None,2019-08-24T17:20:17Z,2019-10-24T23:46:48Z
11708,Removed shell=True from subprocess.run() where unnecessary.,"The Python docs recommend passing a sequence to subprocess.run() when
possible. Doing so allows for automatic escaping and quoting of
arguments.

https://docs.python.org/3/library/subprocess.html#frequently-used-arguments

> args is required for all calls and should be a string, or a sequence
> of program arguments. Providing a sequence of arguments is generally
> preferred, as it allows the module to take care of any required
> escaping and quoting of arguments (e.g. to permit spaces in file
> names).",jdufresne,None,2019-08-23T23:34:54Z,2019-10-24T23:46:52Z
11707,Fixed #30727 -- Made Subquery pickle without evaluating their QuerySet.,"Subquery expression objects, when pickled, were evaluating the QuerySet objects
saved in its _constructor_args attribute.

https://code.djangoproject.com/ticket/30727",brownan,None,2019-08-23T21:38:34Z,2019-08-27T11:33:32Z
11706,Fixed broken dbshell.test_oracle.OracleDbshellTests tests after 9386586f31b8a0bccf59a1bff647cd829d4e79aa.,,felixxm,None,2019-08-23T18:07:22Z,2019-08-23T19:25:26Z
11705,Fixed #28622 -- Allowed specifying password reset link expiration in seconds and deprecated PASSWORD_RESET_TIMEOUT_DAYS.,"Continue [ticket 28622](https://code.djangoproject.com/ticket/28622).
Documentation added.",hramezani,None,2019-08-23T15:16:52Z,2020-03-12T07:19:03Z
11704,Refs #30591 -- Fixed introspection of check and unique column constraints on MariaDB.,"Unnamed unique and check columns constraints have the same name as a column. Ensure uniqueness by using custom names.

Thanks Adnan Umer for the report.",felixxm,None,2019-08-23T11:25:56Z,2019-08-26T07:15:41Z
11703,Fixed typo in docs/ref/applications.txt.,"The value of verbose_name is the localized string of ""Administration"" and none of the translations have the value ""Admin"".",AliMirlou,None,2019-08-22T21:37:01Z,2019-08-23T06:48:27Z
11702,Replaced subprocess commands by run() wherever possible,,claudep,None,2019-08-22T17:59:19Z,2019-08-23T09:00:48Z
11701,Fixed #30064 -- Added form to validate admin search fields query input.,"Follow up to #10895

(And #11700. It's _Take 3._ 😠 Grrr, GitHub, sometimes!)",carltongibson,None,2019-08-22T10:15:28Z,2019-08-22T12:09:54Z
11700,Fixed #30064 -- Added form to validate admin search fields query input.,Follow-up from #10895 (because GH is being naughty.),carltongibson,None,2019-08-22T10:10:46Z,2019-08-22T10:34:20Z
11699,Fixed #30715 -- Fixed crash of ArrayField lookups on ArrayAgg annotations over AutoField.,,felixxm,None,2019-08-22T09:33:11Z,2019-08-23T08:54:39Z
11698,30651: __eq__ should raise NotImplemented for different instance type,,srinivasreddy,None,2019-08-22T06:43:17Z,2019-08-22T08:29:24Z
11697, Update postgres lookups.py,[https://code.djangoproject.com/ticket/30715](url),3ep-one,None,2019-08-21T18:14:56Z,2019-08-21T18:32:41Z
11696,Update postgres lookups.py,"[https://code.djangoproject.com/ticket/30715](url)
",3ep-one,None,2019-08-21T18:05:02Z,2019-08-21T18:09:13Z
11695,Fixed #30722 -- Added default rate-limiting requests to admin's Select2 widget.,Avoid unnecessary load on the server by waiting until the user stops typing before Select2 makes a request.,jmfederico,None,2019-08-21T16:39:32Z,2019-12-21T12:53:37Z
11694,Added header to README.rst.,,kshithijiyer,None,2019-08-21T11:54:14Z,2019-08-22T07:51:48Z
11693,FIX: TypeError: int() argument must be a string for Oracle,"Oracle is returning insert ID (from a create command, for example) as a
list. Take the first value and use it as the ID.",bugant,None,2019-08-21T08:13:55Z,2019-08-21T09:29:00Z
11691,Fixed broken links and redirects in documentation.,"Identified candidates with `make linkcheck`.

Removed reference to custom builds, feature removed in
https://github.com/openlayers/openlayers/commit/8e6b3bba994f5908e51c492ac314240863178789.",francoisfreitag,None,2019-08-21T07:57:31Z,2019-08-21T09:42:52Z
11690,Resolves #30719: Allow using Expressions in OuterRef.,"This allows for using expressions, rather than just simple field names in OuterRef.",schinckel,None,2019-08-21T00:51:16Z,2019-08-21T01:29:08Z
11689,Simplified imports from django.db and django.contrib.gis.db.,"Following on from https://github.com/django/django/pull/10680#discussion_r315305644.

The following have been changed to be imported from `django.db.models` where they were already available:
- `django.db.models.aggregates.Aggregate`
- `django.db.models.aggregates.Avg`
- `django.db.models.aggregates.Count`
- `django.db.models.aggregates.Max`
- `django.db.models.aggregates.Min`
- `django.db.models.aggregates.StdDev`
- `django.db.models.aggregates.Sum`
- `django.db.models.aggregates.Variance`
- `django.db.models.constraints.CheckConstraint`
- `django.db.models.constraints.UniqueConstraint`
- `django.db.models.deletion.CASCADE`
- `django.db.models.deletion.DO_NOTHING`
- `django.db.models.deletion.PROTECT`
- `django.db.models.deletion.ProtectedError`
- `django.db.models.expressions.Exists`
- `django.db.models.expressions.Expression`
- `django.db.models.expressions.ExpressionWrapper`
- `django.db.models.expressions.F`
- `django.db.models.expressions.Func`
- `django.db.models.expressions.Value`
- `django.db.models.fields.BLANK_CHOICE_DASH`
- `django.db.models.fields.NOT_PROVIDED`
- `django.db.models.fields.AutoField`
- `django.db.models.fields.BooleanField`
- `django.db.models.fields.CharField`
- `django.db.models.fields.DateTimeField`
- `django.db.models.fields.Field`
- `django.db.models.fields.IntegerField`
- `django.db.models.fields.NullBooleanField`
- `django.db.models.fields.proxy.OrderWrt`
- `django.db.models.fields.related.ForeignKey`
- `django.db.models.fields.related.ForeignObject`
- `django.db.models.fields.related.ManyToManyField`
- `django.db.models.fields.related.ManyToManyRel`
- `django.db.models.fields.related.OneToOneField`
- `django.db.models.indexes.Index`
- `django.db.models.lookups.Lookup`
- `django.db.models.lookups.Transform`
- `django.db.models.query.QuerySet`
- `django.db.models.query_utils.Q`

The following have been changed to be imported from `django.db.models` but were not already available there so were added as it seemed sensible and consistent:
- ~~`django.db.models.deletion.Collector`~~
- `django.db.models.expressions.OrderBy`
- `django.db.models.fields.related.ForeignObjectRel`

The following have been changed to be imported from `django.db` where they were already available:
- `django.db.utils.DEFAULT_DB_ALIAS`
- ~~`django.db.utils.ConnectionHandler`~~
- ~~`django.db.utils.ConnectionRouter`~~
- `django.db.utils.DataError`
- `django.db.utils.DatabaseError`
- `django.db.utils.IntegrityError`
- `django.db.utils.NotSupportedError`
- `django.db.utils.OperationalError`
- `django.db.utils.ProgrammingError`

The following have been changed to be imported from `django.contrib.gis.db.models` where they were already available:
- `django.contrib.gis.db.models.aggregates.Collect`
- `django.contrib.gis.db.models.aggregates.Extent`
- `django.contrib.gis.db.models.aggregates.Extent3D`
- `django.contrib.gis.db.models.aggregates.MakeLine`
- `django.contrib.gis.db.models.aggregates.Union`
- `django.contrib.gis.db.models.fields.GeometryCollectionField`
- `django.contrib.gis.db.models.fields.GeometryField`
- `django.contrib.gis.db.models.fields.LineStringField`",pope1ni,None,2019-08-20T08:01:21Z,2020-02-04T20:09:41Z
11688,Fixed #29667 -- Prohibited whitespaces in URL path converters.,[ticket 29667](https://code.djangoproject.com/ticket/29667),hramezani,None,2019-08-19T15:33:10Z,2019-08-20T09:53:11Z
11687,Moved migrations.test_operations.OperationTestBase to migrations.test_base.,,felixxm,None,2019-08-19T14:03:17Z,2019-08-20T06:25:29Z
11686,Fixed typos in test names and comment,,minho42,None,2019-08-19T13:13:10Z,2019-08-23T17:04:43Z
11685,Fixed broken links and redirects to OGR library in docs.,,felixxm,None,2019-08-19T08:05:16Z,2019-08-19T09:44:20Z
11684,Fixed broken links to Dive Into Python 3 book.,"I was reading through the contributing documentation to start contributing, and found that the dive into python link was broken.",bcye,None,2019-08-18T23:32:17Z,2019-08-19T05:21:41Z
11683,Fixed #30591 -- Fixed recreation of foreign key constraints on MySQL when altering type of referenced unique field.,"Unittests provided by @felixxm.
Ref: https://code.djangoproject.com/ticket/30591
",uadnan,None,2019-08-18T19:16:33Z,2019-09-11T09:44:24Z
11681,Fixed #29955 -- Added support for distance expression to the dwithin lookup.,"This was missed when adding support to other distance lookups in refs [#25499](https://code.djangoproject.com/ticket/25499) (37d06cfc46679759c47178a3380b12fbf22a4f25)

Thanks Peter Bex for the report and Mariusz for the testcase.",charettes,None,2019-08-17T14:39:05Z,2019-08-30T22:33:16Z
11680,Fixed #29260 -- Skipped an UPDATE when adding a model instance with primary key that has a default.,[ticket 29260](https://code.djangoproject.com/ticket/29260),hramezani,None,2019-08-17T13:32:36Z,2019-08-19T11:50:25Z
11679,Fixed #30712 -- Allowed BLOB/TEXT defaults on MySQL 8.0.13+.,Ticket: https://code.djangoproject.com/ticket/30712,nasirhjafri,None,2019-08-17T10:54:28Z,2019-08-22T16:25:23Z
11678,Fixed #30413 - Update test setup_databases for multidb sqlite,"During `setup_databases`, all other connection configured as mirror of the first one which raises `django.db.utils.OperationalError`: database is locked",nsiregar,None,2019-08-17T02:52:15Z,2019-11-12T11:56:35Z
11677,Fixed #29545 -- Fixed using filter lookups againts nested subquery expressions.,"This is necessary to allow filter lookups against nested subquery expressions to properly resolve their `OuterRef`s to `Col`s.

Thanks Oskar Persson for the simplified test case.",charettes,None,2019-08-17T01:59:04Z,2019-08-29T10:10:22Z
11676,Fixed #30694 -- Documented FileResponse does not seek its file source,,claudep,None,2019-08-16T19:24:02Z,2019-08-17T07:30:56Z
11675,Update base.py,Meaningless and hi-cost construction.,0x55AAh,None,2019-08-16T11:36:48Z,2019-08-17T19:30:35Z
11674,Refs #28428 -- Made FileField.upload_to support pathlib.Path.,,claudep,None,2019-08-15T16:25:28Z,2019-08-19T06:49:24Z
11673,Corrected typo in search docs.,,DanielSwain,None,2019-08-15T16:15:15Z,2019-08-20T12:46:07Z
11672,[2.2.x] Fixed test_json.TestQuerying.test_key_transform_expression() on Python 3.5.,,felixxm,None,2019-08-15T15:14:30Z,2019-08-15T17:38:21Z
11671,Fixed #27676 -- Allowed BLOB/TEXT defaults on MariaDB 10.2.1+.,[Ticket](https://code.djangoproject.com/ticket/27676),adamchainz,None,2019-08-15T14:16:17Z,2020-03-25T15:33:26Z
11670,Refs #28622 -- Clarified security implications of PASSWORD_RESET_TIMEOUT.,"I meant to write this up after the [discussion](https://groups.google.com/d/msg/django-developers/65iOQunvkPY/pP5mF-44AQAJ) for [ticket 28622](https://code.djangoproject.com/ticket/28622), finally got around to it :-)
",spookylukey,None,2019-08-15T11:06:53Z,2019-09-23T06:20:04Z
11669,Fixed #19878 -- Deprecated TemplateView passing URL kwargs into context.,[Ticket #19878](https://code.djangoproject.com/ticket/19878),adamchainz,None,2019-08-15T05:49:40Z,2020-07-20T10:18:20Z
11668,Stable/2.2.x,"class PasswordResetView(...), in file django/contrib/auth/views.py has attribute html_email_template_name which is None by default. And there is another attribute email_template_name which is 'registration/password_reset_email.html' by default. I think html_email_template_name should be assigned to 'registration/password_reset_email.html' and email_template_name to 'registration/password_reset_email.txt'. So if you don't override these attributes, there will be always sent text email, even if you have html code in password_reset_email.html

",Tessium,None,2019-08-14T11:26:54Z,2019-08-14T11:49:19Z
11667,Removed outdated examples of flatpages on Django.,Removing the lawrence journal flat page examples because one is no longer a web page (404) and the other is no longer served by Django: https://www.reddit.com/r/django/comments/8v0fpb/the_lawrence_journalworld_where_django_was/,garrypolley,None,2019-08-13T21:19:18Z,2019-08-21T14:14:10Z
11666,Fixed #30701 -- Updated patch_vary_headers() to handle an asterisk according to RFC 7231.,,uadnan,None,2019-08-13T20:41:11Z,2019-08-16T15:30:28Z
11665,Optimized Field.deconstruct().,"This seems like a cleanup/speedup that should have been made some time ago :) There are more of such if-sequences in `django.db.models.fields` but in all of the branches, there's a return-statement, so there's not much gain in replacing them.",atombrella,None,2019-08-13T20:21:43Z,2019-08-14T09:05:41Z
11664,Fixed #30695 -- Used relative path in default_storage docs example.,"This is my first contribution, so please share any feedback if you have any. Thank you!",Harrison88,None,2019-08-13T02:01:25Z,2019-08-20T10:06:05Z
11663,"Fixed #29043 -- Prevent test --keepdb says ""Using existing ..."" at first time.","[Ticket 29043](https://code.djangoproject.com/ticket/29043)
Continue to https://github.com/django/django/pull/11437.

@carltongibson, Please take a look at my [last comment on the ticket](https://code.djangoproject.com/ticket/29043#comment:6).",hramezani,None,2019-08-12T19:54:29Z,2019-08-20T10:46:29Z
11662,Fixed #30704 -- Fixed crash of JSONField nested key and index transforms on expressions with params.,https://code.djangoproject.com/ticket/30704,felixxm,None,2019-08-12T17:46:49Z,2019-08-13T06:42:38Z
11661,Fixed #30449 -- Made RelatedFieldListFilter respect Model._meta.ordering.,Fix for [ticket 30703](https://code.djangoproject.com/ticket/30703).,Perlence,None,2019-08-12T15:03:34Z,2019-08-13T06:00:31Z
11660,Ref #30700 Add failing test of truncatechars_html on html entities,See https://code.djangoproject.com/ticket/30700#ticket,therefromhere,None,2019-08-12T01:56:35Z,2019-08-12T07:54:17Z
11659,Updated the default cache key transformation in documentation.,"The documention has been updated to reflect the current default_key_func.
It seems the documentation wasn't updated [when the code was](https://github.com/django/django/commit/6c69de80bdcd2744bc64cb933c2d863dd5e74a33).",tubaman,None,2019-08-11T18:29:44Z,2019-09-24T10:42:57Z
11658,#30699 - Remove `PublisherDetail.get_context_data()` from documentation,Visit https://code.djangoproject.com/ticket/30699,gachdavit,None,2019-08-11T17:16:39Z,2019-08-13T02:32:27Z
11657,#30698 - `BaseDetailView` and `SingleObjectMixin` optimization.,Visit https://code.djangoproject.com/ticket/30698,gachdavit,None,2019-08-11T17:12:04Z,2019-08-13T02:32:50Z
11656,#30698 - `BaseDetailView` and `SingleObjectMixin` optimization.,Visit https://code.djangoproject.com/ticket/30698,gachdavit,None,2019-08-11T17:00:16Z,2019-08-11T17:07:11Z
11655,Revert 4 gachdavit cbv patch,,gachdavit,None,2019-08-11T16:26:55Z,2019-08-11T16:28:45Z
11654,#30698  `BaseDetailView` and `SingleObjectMixin` optimization. ,Visit https://code.djangoproject.com/ticket/30698,gachdavit,None,2019-08-11T10:07:18Z,2019-08-11T16:52:16Z
11653,#30698 `BaseDetailView` and `SingleObjectMixin` optimization.,Visit https://code.djangoproject.com/ticket/30698,gachdavit,None,2019-08-11T09:56:02Z,2019-08-11T11:15:21Z
11652,Refs #25367 -- Moved Oracle Exists() handling to contextual methods. ,"Oracle requires the `EXISTS` expression to be wrapped in a `CASE WHEN` in the following cases.

1. When part of a `SELECT` clause.
2. When part of a `ORDER BY` clause.
3. When compared against another expression in the `WHERE` clause.

This commit moves the systematic `CASE WHEN` wrapping from `Exists.as_oracle` to
contextual `.select_format`, `Lookup.as_oracle`, and `OrderBy.as_oracle` methods in order to avoid the unnecessary wrapping.

Closes #11641, #11642 as it supersedes them.",charettes,None,2019-08-11T06:22:34Z,2019-08-13T06:15:24Z
11651,Fixed typos,,minho42,None,2019-08-10T22:09:36Z,2019-08-12T11:49:59Z
11650,Fixed #31224 -- Added support for asynchronous views and middleware.,"ticket-31224 

This implements the ability to have asynchronous views in Django, by simply declaring a view as `async def`.

Under the hood, it rewrites the BaseHandler to be natively async and makes the WSGI request path run an async loop in-place for every request in order to service this. The ASGI request path down to a view is instead intended to be natively asynchronous all the way down.

This is still a work in progress, as it currently has several potential issues:

- [x] There are a small number of failing tests 
- [x] Synchronous middleware works, but its presence means a thread is used every request, defeating the point of async views. 
- [x] Class-based views do not have a clear path to async compatibility
- [x] There is not yet any documentation about how to use it

I'm putting it up as a draft PR so people have a place to easily see it and review the code so far.",andrewgodwin,None,2019-08-10T18:50:44Z,2020-03-21T09:19:14Z
11649,Fixed #30696 -- Removed obsolete mention of CheckConstraint in the AddConstraint docs.,,akash1997,None,2019-08-10T17:08:58Z,2019-08-11T14:32:16Z
11648, Fixed #30461 -- Made GeoIP2 and GEOIP_PATH setting accept pathlib.Path as library path.,,claudep,None,2019-08-10T09:58:12Z,2019-08-13T19:32:42Z
11647,Added Documentation for add_constraint() and remove_constraint() in SchemaEditor,,akash1997,None,2019-08-10T08:34:40Z,2019-08-10T08:35:26Z
11646,Fixed #30670 -- Doc'd SchemaEditor.add/remove_constraint().,,akash1997,None,2019-08-10T08:32:22Z,2019-08-11T01:26:45Z
11645,Stable/2.2.x,"cannot recognize commands like 'makemigrations','migrate','createsuperuser'
such as :
> python manage.py makemigrations
>result is:
usage: manage.py [-h] [--checkpoint CHECKPOINT]
manage.py: error: unrecognized arguments: makemigrations
",zhiyumeng,None,2019-08-10T07:42:06Z,2019-08-10T08:38:00Z
11644,Refs #11964 -- Made constraint support check respect required_db_features.,This should notably silence the warnings when running the test suite on MySQL.,charettes,None,2019-08-10T06:45:13Z,2019-08-12T05:23:08Z
11643,Use same validator method for fields choices:,"In commit 9883551d50e105b324d8071232bf420935844e43 introduce choice
validate in fields choices as str. If set integer indices for choices in
field the validation pass the forms/fields but not db/models/fields

This change use the same method in db/models/fields to validate choices as
forms/fields.py",roramirez,None,2019-08-09T19:59:08Z,2020-09-16T14:40:15Z
11642,Refs #25367 -- Moved Exists.as_oracle SELECT logic to select_format. ,An alternative patch which is probably more appropriate given it doesn't leak expression details at the compiler level.,charettes,None,2019-08-09T18:37:29Z,2019-08-11T06:23:39Z
11641,Refs #25367 -- Moved Oracle SELECT EXISTS wrapping logic to the compiler.,This might need to be adjusted to support `Q` object annotations in the future but this should avoid passing around a contextual boolean during expression resolution for the sole purpose of working around this Oracle quirk.,charettes,None,2019-08-09T18:18:32Z,2019-08-11T06:23:11Z
11640,[django 1.11.x] Set content.decode encoding to `response.charset`,"Otherwise when unicode is passed it will raise `UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 168: ordinal not in range(128)`

I've checked master and it's set.",taoufik07,None,2019-08-09T14:45:05Z,2019-08-09T15:05:42Z
11639,Fixed #30693 -- Removed separate import of os.path in django.core.management.templates.,"Removed relative import for 'path' module. Refactored all
relative import usage of 'path' module to absolute import.
e.g from 'path.join(some_path)' to 'os.path.join(some_path)'

Ticket [here](https://code.djangoproject.com/ticket/30693).",Diaga,None,2019-08-09T12:58:20Z,2019-08-19T11:27:14Z
11638,Fixed #30677 -- Improved error message for urlencode() and Client when None is passed as data.,https://code.djangoproject.com/ticket/30677,Swat009,None,2019-08-09T08:41:19Z,2019-08-11T19:51:11Z
11637,Tweaked loaddata command to re-use a calculated value.,Dublicated call get_public_serializer_formats on loaddata command,0x55AAh,None,2019-08-08T12:33:08Z,2020-09-17T08:50:14Z
11636,Fixed #30688 -- Added examples for base manager usage,"Previously, there was no example base manager usage in the docs, here
in topics or in the reference. It was unclear what specifically
Meta.base_manager_name should be set to and this caused some confusion
and mistakes. The example and description clarify the usage.

Per [my ticket](https://code.djangoproject.com/ticket/30688), this originated from [experiencing confusion](https://github.com/agilgur5/django-serializable-model/issues/4#issuecomment-519338032) in a `django` library I maintain and mistakenly using the wrong name by reading `base_manager_name` very literally.",agilgur5,None,2019-08-08T04:31:56Z,2019-08-12T17:42:03Z
11635,Removed unnecessary StatAggregate.resolve_expression().,"The method only calls the parent method, but without the `for_save` argument The parent class, `Aggregate`, already ignores the `for_save` argument so there is no need for special handling.
`Aggregate.resolve_expression()` contains the comment:

    # Aggregates are not allowed in UPDATE queries, so ignore for_save",jdufresne,None,2019-08-08T03:27:48Z,2019-10-24T23:46:52Z
11634,Fixed #30687 -- Fixed using of OuterRef() expressions in distance lookups.,"https://code.djangoproject.com/ticket/30687
",brownan,None,2019-08-07T16:59:15Z,2019-08-16T10:51:05Z
11633,Fixed #30686 -- Stopped Truncator.chars truncating HTML entities,Ticket https://code.djangoproject.com/ticket/30686,tdhooper,None,2019-08-06T14:36:35Z,2020-09-04T09:02:56Z
11632,Corrected several typos in string literals and test names.,,minho42,None,2019-08-05T15:48:50Z,2019-08-07T09:41:09Z
11631,Fixed #30680 -- Removed obsolete system check for SECURE_BROWSER_XSS_FILTER setting.,Removes security.W007 check as mentioned here https://code.djangoproject.com/ticket/30680,uadnan,None,2019-08-05T12:26:48Z,2019-08-07T06:03:11Z
11630,Fixed #30673 -- Relaxed system check for db_table collision when database routers are installed by turning the error into a warning.,https://code.djangoproject.com/ticket/30673,uadnan,None,2019-08-05T11:22:41Z,2019-08-08T19:39:22Z
11629,Fixed #30676 -- Added --pdb option to test runner.,"This adds a `--pdb` option to both the standard Django test runner and `runtests.py` that spawns a pdb (or ipdb if it is installed) session where the error occurred.

Fixes https://code.djangoproject.com/ticket/30676",andrewgodwin,None,2019-08-05T04:10:53Z,2019-08-07T06:27:08Z
11628,Change HTTP_X_FORWARDED_PROTOCOL to HTTP_X_FORWARDED_PROTO in tests,,minho42,None,2019-08-03T18:48:04Z,2019-08-12T11:50:31Z
11627,Merge pull request #1 from django/master,update code,chinassx,None,2019-08-03T14:11:12Z,2019-08-03T14:23:06Z
11626,Fixes #30673 -- If DATABASE_ROUTERS is defined warn on db_table collision,,uadnan,None,2019-08-03T11:25:30Z,2019-08-05T11:23:19Z
11625,Fixed #18763 -- Added ModelBackend/UserManager.with_perm() methods.,"Ticket [#18763](https://code.djangoproject.com/ticket/18763).
Supersedes PR #7153 

I've picked this up as I'd really love to see this make it into 3.0 after ~3 years!
I hope you don't mind @berkerpeksag ...

@felixxm I've addressed the outstanding review comments and managed to change over to using `Exists()` so that we can drop `.distinct()`. I've had to use `.annotate()` for now, but that could be simplified when #8119 lands.",pope1ni,None,2019-08-02T22:52:34Z,2019-08-30T11:14:46Z
11624,Refs #30236 -- Added release note for autocapitalize attributes on UsernameField.,"It was initially decided that no release note should be added for the `autocapitalize` attribute, but one was added for the `autocomplete` attribute that was added in a more recent commit. It makes sense to also mention the `autocapitalize` attribute as it highlights that this common source of irritation has been addressed.",pope1ni,None,2019-08-02T21:52:15Z,2019-08-05T08:55:19Z
11623,Refs #29379 -- Moved autocomplete attribute to UsernameField.,"Ticket [#29379](https://code.djangoproject.com/ticket/29379).

Moving the `autocomplete` attribute into `UsernameField` allows this to work for custom forms making use of `UsernameField`, removes some duplication in the code, and keeps consistency with the `autocapitalize` attribute that is already defined on `UsernameField`.",pope1ni,None,2019-08-02T21:28:13Z,2019-09-02T08:54:31Z
11622,Fixed #28393 -- Added helpful error messages for invalid AutoField/FloatField/IntegerField values.,"Ticket [#28393](https://code.djangoproject.com/ticket/28393)
Supersedes PR #8760

Note that with `AutoField`s inheriting from `IntegerField`s in #10680, this will be more DRY.

I've added tests that were missing in the original PR. I don't think we really need any documentation for this, but do we want a release note?",pope1ni,None,2019-08-02T20:57:56Z,2019-08-05T09:39:05Z
11621,Refs #30426 -- Changed default SECURE_CONTENT_TYPE_NOSNIFF to True.,,claudep,None,2019-08-02T15:20:24Z,2019-08-18T18:19:40Z
11620,Fixed #29008 -- Fixed crash of 404 debug page when URL path converter raises Http404.,"Not sure while writing test for this, since `Resolver404` is instance of `Http404` and while raised it only pass.",nsiregar,None,2019-08-02T13:56:08Z,2019-08-09T21:22:56Z
11619,Simplified AlterModelTable by making it subclass ModelOptionOperation.,It seems like it was an oversight in 49f4c9f4c61. I looked through the original PR (#5957) and couldn't find a reason that this shouldn't have been done. Can you cast an eye over this @charettes as the original author? Thanks.,pope1ni,None,2019-08-02T10:47:49Z,2019-08-02T16:46:11Z
11618,Fixed #30599 -- Prevented ManifestFilesMixin.read_manifest() from silencing errors other than FileNotFoundError.,[ticket 30599](https://code.djangoproject.com/ticket/30599),zeyneloz,None,2019-08-01T14:51:49Z,2019-08-02T07:58:18Z
11617,Fixed #30672 -- Fixed crash of JSONField/HStoreField key transforms on expressions with params.,,felixxm,None,2019-08-01T09:53:13Z,2019-08-14T13:26:14Z
11616,inspectdb should generate related names for FK fields,"Currently the `inspectdb` command leaves the developer to the painful task of manually adding a proper `related_name` to each ForeingKey field for each Model that's imported from a DB if a collission occurs, this however could be avoided if the script were to automatically generate a related_name for each FK field by default. 

Code is not my own but comes from this SO answer: https://stackoverflow.com/a/52872876/1605873 I've yet to find any scenario where it fails, and though I reckon it can probably be improved for readabilty and ease of maintenance, it works so I'm submitting it on behalf of the poster.",ZippoLag,None,2019-07-31T16:26:27Z,2019-07-31T16:38:11Z
11615,Fixed #29019 -- Added ManyToManyField support to REQUIRED_FIELDS.,[ticket 29019](https://code.djangoproject.com/ticket/29019),hramezani,None,2019-07-31T15:10:13Z,2019-08-26T13:28:43Z
11614,Refs #30669 -- Removed incorrect branch in ASGIHander.read_body().,"`None` is not valid for `settings.FILE_UPLOAD_MAX_MEMORY_SIZE`.
Always use `SpooledTemporaryFile`.",carltongibson,None,2019-07-31T10:04:42Z,2019-07-31T11:33:10Z
11613,Removed unneeded ValueError catching in django.utils.text._replace_entity().,"The `html.entities.name2codepoint` dict contains only valid Unicode codepoints. Either the key exists and `chr()` will succeed or the key does not exist.

https://docs.python.org/3/library/html.entities.html#html.entities.name2codepoint",jdufresne,None,2019-07-31T04:36:07Z,2019-10-24T23:46:56Z
11612,Fixed #30664 -- Fixed migrations crash when altering table on SQLite or altering AutoField/BigAutoField on PostgreSQL for models with quoted db_table.,Fixed migration fail in SQLite when using quoted db_table,nsiregar,None,2019-07-31T00:24:16Z,2019-08-01T11:37:51Z
11611,Fixed #30661 -- Added models.SmallAutoField.,"Ticket [#30661](https://code.djangoproject.com/ticket/30661).
Extracted from PR #10680.",pope1ni,None,2019-07-30T17:15:22Z,2019-08-02T11:30:09Z
11610,[1.11.x] Fixed #29182 -- Fixed schema table alteration on SQLite 3.26+.,"Backport of c8ffdbe514b55ff5c9a2b8cb8bbdf2d3978c188f from master.

This is my take at backporting code from #10733 to the Django 1.11.x LTS series. I am aware of the security fixes only policy, but would highly appreciate if it will still make it in the next release.

The current situation is that once e.g. Heroku updates SQLite, all 1.11.x installations will break, making it effectively impossible to continue using it until the planned decommissioning date. Therefore, I think that this trivial fix warrants an exception to keep it working for everybody, who are in still the process of upgrading to the next LTS, but aren't done with it yet.",zyv,None,2019-07-30T14:36:20Z,2019-07-31T11:34:48Z
11609, Removed redundant ArchiveTest.test_extract_method() test.,,felixxm,None,2019-07-30T09:36:45Z,2019-07-30T10:15:21Z
11608,Corrected StreamingHttpResponse.streaming_content description in docs.,"**StreamingHttpResponse.streaming_content** is an iterator of bytes, not string.",niauah,None,2019-07-30T03:31:35Z,2019-08-02T14:37:50Z
11607, Refs #30593 -- Fixed introspection of check constraints columns on MariaDB.,Continue to https://github.com/django/django/pull/11566.,hramezani,None,2019-07-29T22:02:43Z,2019-07-30T14:51:03Z
11606,Fixed #28107 -- Added DatabaseFeatures.allows_group_by_selected_pks_on_model() to allow enabling optimization for unmanaged models.,,Tasssadar,None,2019-07-29T14:45:36Z,2019-09-09T16:40:45Z
11605,Fixed #30668 -- Made QuerySet.filter() raise NotSupportedError if any of source expressions is not filterable.,"Fixes [#30668](https://code.djangoproject.com/ticket/30668).
The idea is to propagate `filterable` property through expressions that use other expressions. 
The patch itself is incomplete, at least Case/When is not handled yet.
I wonder if it's worth doing though, because this property probably should be removed altogether when [#28333](https://code.djangoproject.com/ticket/28333) is implemented?",gizmondo,None,2019-07-29T11:52:50Z,2019-12-04T10:00:20Z
11604,Adjusted multi-db example to avoid confusion with DATABASES keys.,"In the routers, it was not clear that auth_db is which auth_db between the lines 306-343. Was it the key of the dictionary or name field? I added _name suffix to name fields of databases. Now it's clear that reader should use dictionary key of a database in routers to access it. Not the name.",MansurAliKoroglu,None,2019-07-29T04:25:49Z,2020-07-03T10:42:14Z
11603,Fixed #30665 -- Added support for distinct argument to Avg() and Sum().,"These aggregations (Avg, Min, Max, and Sum) can have the DISTINCT keyword applied in most (if not all) database backends, and so using the distinct parameter should also work. These aggregations were left behind when adding the restriction on DISTINCT (#9174).

Tests for these aggregations were also added, as well as release notes.",tienne-B,None,2019-07-28T18:14:23Z,2019-07-31T15:38:40Z
11602,Refactored the Django's documentation to fix the path of django's admin templates are located.,,hamzatekin,None,2019-07-27T22:49:22Z,2019-07-28T13:03:38Z
11601,Fixed #29427 -- Ensured request has _body even when RequestDataTooBig is raised,,claudep,None,2019-07-27T17:01:29Z,2020-01-21T18:56:55Z
11600,Fixed #25946 -- Fixed isnull condition target col for negated conditions.,Ticket: [#25946](https://code.djangoproject.com/ticket/25946),cansarigol,None,2019-07-27T11:58:29Z,2020-07-03T09:20:38Z
11599,Fixed #30552 -- Fixed loss of srid when calling reverse() on LineString/Point.,,claudep,None,2019-07-27T09:19:06Z,2019-07-27T21:15:49Z
11598,Stable/2.1.x,"when i put ""𝌆"" charactre to mysql database with django, cause the exception:
1366, ""Incorrect string value: '\\xF0\\x9D\\x8C\\x86\\x0D\\x0A...' for column 'SourceCodeWalkthrough' at row 1"")",c4td0g8,None,2019-07-27T08:50:38Z,2019-07-27T09:54:54Z
11597,Fixed #30656 -- Added QuerySet.bulk_update() to the database optimization docs.,"Hi,

I ended up restructuring the `Insert in bulk` section because it didn't make sense to me.
Inserting and creating were lumped together with the header `Insert in bulk`, so it took me a bit to realize what the `my_band` section was doing there.

The Update in bulk section is the new bit, and the part that directly addresses the ticket.",MisterRios,None,2019-07-26T10:40:56Z,2019-07-29T08:11:48Z
11596,Fixed #30411 -- Improved formatting of text tracebacks in technical 500 templates.,Fixes [30411](https://code.djangoproject.com/ticket/30411).,jerrodmartin,None,2019-07-26T01:56:29Z,2019-07-29T11:40:27Z
11595,SQL Injection Escaping Helper Function,"I was reading some of the docs, https://docs.djangoproject.com/en/2.2/topics/db/sql/ , and was thinking that it would be useful to have a helper function to do some sqli attack preventions, like this (not sure where to put it though)
```python
def escape_sql_injection(user_input):
    # Function to escape against
    # An SQL Injection Attack
    escaped = ''
    for char in user_input:
        if char == '\\':
            escaped += '\\\\'
        elif char == '\'':
            escaped += '\\\''
        else:
            escaped += char
    return escaped
```
Sorry if I did something wrong, I haven't contributed to many Open-Source projects!",JonPizza,None,2019-07-26T00:54:02Z,2019-07-26T05:03:27Z
11594, Fixed #21039 -- Added AddIndexConcurrently/RemoveIndexConcurrently operations for PostgreSQL.,Basically a follow-up to #10901 where feedback has been addressed.,atombrella,None,2019-07-25T12:15:46Z,2019-08-21T20:05:23Z
11593,Added Query.is_sliced property.,In most of cases we use `Query.can_filter()` to check if a query has limit (is sliced). IMO it's confusing and it will be good to add a `has_limit` property.,felixxm,None,2019-07-25T09:09:03Z,2019-07-25T18:46:17Z
11592,Fixed #30567 -- Made WSGIHandler pass FileResponse.block_size to wsgi.file_wrapper.,,domandinho,None,2019-07-24T17:10:08Z,2019-07-26T06:00:39Z
11591,"Fixed #27995 -- Added error messages on unsupported operations following union(), intersection(), and difference().",[Ticket 27995](https://code.djangoproject.com/ticket/27995),hramezani,None,2019-07-24T15:41:09Z,2019-07-25T10:59:55Z
11590,Removed unused BaseReloader.watch_file().,Unused since its introduction in c8720e7696ca41f3262d5369365cc1bd72a216ca.,felixxm,None,2019-07-24T11:14:07Z,2019-07-24T11:32:06Z
11589,Fixed #30657 -- Allowed customizing Field's descriptors with a descriptor_class attribute.,"Allows model Fields to override the descriptor class used on the model
instance attribute.

https://code.djangoproject.com/ticket/30657",jdufresne,None,2019-07-24T02:28:25Z,2019-10-24T23:46:58Z
11588,Refs #29548 -- Fixed DatabaseWrapper.display_name on MariaDB.,https://code.djangoproject.com/ticket/29548,felixxm,None,2019-07-23T08:59:42Z,2019-07-23T11:34:10Z
11587,Refs #28147 -- Fixed setting of OneToOne and Foreign Key fields to None when using attnames.,"Fixes regression introduced 519016e5f25d7c0a040015724f9920581551cab0.

https://code.djangoproject.com/ticket/28147#comment:15",jdufresne,None,2019-07-23T04:29:04Z,2019-07-28T19:03:25Z
11586,Removed unnecessary code in Model.__init__().,"As `is_related_object` is `True`, the `val` variable is unused for the remainder of the method.

Dead code since 53da1e47942f22a56e761d786ba89d05ca55a224.",jdufresne,None,2019-07-23T01:25:13Z,2019-10-24T23:47:01Z
11585,Annotate object - Ticket 30653,,Ivo-Donchev,None,2019-07-22T20:04:49Z,2019-07-22T20:07:29Z
11584,Fixed #30647 -- Fixed crash of autoreloader when extra directory cannot be resolved.,Ticket: https://code.djangoproject.com/ticket/30647,orf,None,2019-07-21T21:31:31Z,2019-07-25T10:37:22Z
11583,Fixed #30506 -- Fixed crash of autoreloader when path contains null characters.,Ticket: https://code.djangoproject.com/ticket/30506,orf,None,2019-07-21T20:56:14Z,2019-07-25T10:37:37Z
11582,Fixed #23524 -- Allowed DATABASES['TIME_ZONE'] option on PostgreSQL.,ticket-23524,aaugustin,None,2019-07-20T16:44:14Z,2019-12-04T19:06:22Z
11581, Improved error message when index in __getitem__() is invalid.,"Now matches Python's message for an invalid index:

    $ python3 -c 'l = []; l[""a""]'
    Traceback (most recent call last):
      File ""<string>"", line 1, in <module>
    TypeError: list indices must be integers or slices, not str",jdufresne,None,2019-07-19T21:39:09Z,2019-10-24T23:47:00Z
11579,Removed some outdated backwards compatibility imports and misleading comments.,"I found some comments with ""Backwards compatibility"" in them, importing different things into other modules. `EmptyResultSet` is not documented as available from `django.db.models.query` and the two lines were last changed in 2008. Django 1.9 is no longer maintained, so I guess `BoundField` and `pretty_name` are not relevant either.

There are also two lines in `django.db.models.sql.datastructures`:
    
    # for backwards-compatibility in Django 1.11
    from django.core.exceptions import EmptyResultSet  # NOQA: F401

I'm not sure if they can be removed as well.

There are other things added for backwards compatibility, but no version numbers are in the comments.
",atombrella,None,2019-07-19T14:47:13Z,2019-09-25T05:12:46Z
11578,Fixed typos in comments and a test name.,,minho42,None,2019-07-19T14:46:54Z,2019-07-19T22:02:47Z
11577,Simplified get_key_columns()/get_relations() introspection methods for PostgreSQL.,Related with #11511.,felixxm,None,2019-07-19T12:38:47Z,2019-07-20T13:16:16Z
11576,Refs #30083 -- Clarified database state of instances in signals.pre_init docs.,https://code.djangoproject.com/ticket/30083#comment:6,felixxm,None,2019-07-19T11:16:28Z,2019-07-19T14:06:09Z
11575,Fixed #30648 -- Removed unnecessary overriding get_context_data() from mixins with CBVs docs.," Overriding get_context_data() is unnecessary in the ""Using FormMixin with DetailView"" example.

Ticket Visit https://code.djangoproject.com/ticket/30648.",gachdavit,None,2019-07-18T14:05:06Z,2019-07-20T04:26:02Z
11574,Refs #30547 -- Clarified that partial UniqueConstraints don't affect model validation.,https://code.djangoproject.com/ticket/30547#comment:8,felixxm,None,2019-07-18T05:58:22Z,2019-07-18T10:56:46Z
11573,Fixed #30646 -- Always close unusable connections,"Ensure that unusable connections are always closed whether or not an
error related to the connection has occurred previously.

https://code.djangoproject.com/ticket/30646",dneuhaeuser-zalando,None,2019-07-17T18:03:48Z,2019-07-18T05:16:56Z
11572,Simplified tests for PostgreSQL constraints.,,felixxm,None,2019-07-16T12:58:16Z,2019-07-16T14:56:48Z
11571,Fixed heading level typo in ref/contrib/postgres/fields.txt.,,felixxm,None,2019-07-16T12:52:29Z,2019-07-16T13:08:27Z
11570,Updated WSGI servers ordering according to the more commonly used.,"    - Point users toward the more popular WSGI servers first

gunicorn and uwsgi are far more popular these days than mod_wsgi or deploying with Apache in general and the docs should reflect this. ",frankwiles,None,2019-07-15T13:28:47Z,2019-07-16T12:44:01Z
11569,زیبا‌سازی املایی,افزایش نوشته‌های پارسی اصیل و زیبا‌سازی املایی,mablue,None,2019-07-15T11:07:33Z,2019-07-15T11:09:22Z
11568,Fixed #27452 -- Added serial fields to django.contrib.postgres,https://code.djangoproject.com/ticket/27452,codingjoe,None,2019-07-14T14:29:38Z,2020-05-29T19:43:54Z
11567,Fixed #30636 -- Fixed options ordering when cloning test database on MySQL.,,fallen,None,2019-07-14T10:33:20Z,2019-07-16T06:20:13Z
11566,Fixed #30593 -- Added support for check constraints on MariaDB 10.2+.,[ticket 30593](https://code.djangoproject.com/ticket/30593),hramezani,None,2019-07-13T23:28:02Z,2019-07-29T15:40:05Z
11565,Fixed explanation of how to automatically create tables in database.,"Current docs tell the user to run `manage.py migrate` to generate
migrations which is incorrect.

This is the page in question: https://docs.djangoproject.com/en/2.2/intro/overview/

Location in question: https://docs.djangoproject.com/en/2.2/intro/overview/#install-it",frankwiles,None,2019-07-13T19:02:48Z,2019-07-15T13:25:55Z
11564,Fixed #25598 -- Added SCRIPT_NAME prefix to STATIC_URL and MEDIA_URL set to relative paths.,"Original PRs https://github.com/django/django/pull/10724 and #7000 seem abandoned, so let me try to revive this activity based on #10724.

Fixing issue https://code.djangoproject.com/ticket/25598 


Behavior:

SCRIPT_NAME	|STATIC_URL setting	|STATIC_URL final value
------------ | -------------|----
 /subpath	| http://myhost.com/media/ |	http://myhost.com/media/
 /subpath |	media/ |	 /subpath/media/
None or empty |	media/ |	 /media/
 /subpath |	/media/	|  /media/

To get similar behavior with current `{% url %}` tag we apply `SCRIPT_NAME` only for relative path, including the case when `SCRIPT_NAME` is empty or not set. Thus final `*_URL` value will be always absolute.

So it also improves the logic of relative paths in `*_URL` settings, de-facto transforming them to absolute paths.",okainov,None,2019-07-12T21:06:28Z,2020-09-09T12:12:50Z
11563,Simplified RangeContainedBy by making it subclass PostgresSimpleLookup.,,felixxm,None,2019-07-12T18:07:38Z,2019-07-13T08:56:12Z
11562,Simplified DateTimeRangeContains by making it subclass PostgresSimpleLookup.,,felixxm,None,2019-07-12T13:08:29Z,2019-07-12T15:28:06Z
11561,"Fixed ""Getting Started"" docs typo - changed ""outer"" to ""inner""","I'm a django-newbie going through the tutorial, and I noticed a small typo. Under [The development server](https://docs.djangoproject.com/en/2.2/intro/tutorial01/#the-development-server), the docs say to ""_Change into the outer mysite directory_"", when it should be saying ""_Change into the **inner** mysite directory_"". Figured I'd go ahead and make a PR.",jcat4,None,2019-07-12T00:25:33Z,2019-07-12T02:42:05Z
11560,Fixed #30602 -- Made Extract raise ValueError when using unsupported lookups for DurationField.,[ticket 30602](https://code.djangoproject.com/ticket/30602),hramezani,None,2019-07-11T19:15:56Z,2019-07-12T06:55:48Z
11559,Refs #30557 -- Fixed crash of ordering by ptr fields when Meta.ordering contains F() expressions.,"Thanks Can Sarıgöl for the report.

Follow up to 8c5f9906c56ac72fc4f13218dd90bdf9bc8a248b",felixxm,None,2019-07-11T11:18:03Z,2019-07-11T11:40:49Z
11558,Added Feature -- Pagination for FormSets,"Formset includes a ``paginator`` method which returns a django.core.utlis.Paginator object.
This will be a handy and useful shortcut to create paginator directly from the formset instance.
Added tests and documentation as well for formsets.paginator",Parth1811,None,2019-07-11T08:36:07Z,2019-07-11T12:55:58Z
11557,Fixed spelling mistake in sessions.txt,,terminator14,None,2019-07-10T22:37:15Z,2019-07-23T13:10:59Z
11556,Doc'd --no-input option for createsuperuser.,,hramezani,None,2019-07-10T19:59:37Z,2019-07-11T08:25:50Z
11555,Fixed #30557 -- Fixed crash of ordering by ptr fields when Meta.ordering contains expressions.,"Continue to [PR 11489](https://github.com/django/django/pull/11489), Related to [ticket 30557](https://code.djangoproject.com/ticket/30557).
Fixed @felixxm comments.",hramezani,None,2019-07-10T18:07:07Z,2019-07-11T11:18:35Z
11554,Refs #28428 -- Made FileSystemStorage.save() to support pathlib.Path.,"`name` can be a `pathlib.Path` object and then `.replace` is different operation, which results in error:
`replace() takes 2 positional arguments but 3 were given`

Fixed by casting `pathlib.Path` to `str` before `.replace`.",mdczaplicki,None,2019-07-10T11:48:07Z,2019-10-23T09:33:13Z
11553,Fixed #30621 -- Fixed crash of __contains lookup for Date/DateTimeRangeField when the right hand side is the same type.,"Ticket [30621](https://code.djangoproject.com/ticket/30621).

Thanks Tilman Koschnick for the report and initial patch.

Regression in 6b048b364ca1e0e56a0d3815bf2be33ac9998355.",felixxm,None,2019-07-10T06:43:21Z,2019-07-10T08:33:56Z
11552,Feature #30629 -- Add Redis Module,"https://code.djangoproject.com/ticket/30629
This pull request adds Redis module to django.core.cache.",shouc,None,2019-07-10T02:58:39Z,2020-05-21T04:12:36Z
11551,Fixed #30543 -- Fixed checks of ModelAdmin.list_display for fields accessible only via instance.,"Continue [ticke 30543](https://code.djangoproject.com/ticket/30543).
Test has been added.",hramezani,None,2019-07-09T22:28:45Z,2019-07-10T08:59:50Z
11550,Fixed #30628 -- Adjusted expression identity to differentiate bound fields.,"Refs #29745.

Expressions referring to different bound fields should not be considered equal.

Thanks Julien Enselme for the detailed report.",charettes,None,2019-07-09T21:41:48Z,2019-07-10T06:05:28Z
11549,"Enabled GitHub ""Sponsor"" button.","This will need to be enabled in the repository settings as well.
See also: https://help.github.com/en/articles/displaying-a-sponsor-button-in-your-repository",codingjoe,None,2019-07-09T17:00:23Z,2019-07-10T06:38:55Z
11548,Update Select2 to version 4.0.7,"Update vendored Select2 dependency to the latest minor release (4.0.3 -> 4.0.7).
<details>
<summary>Change log</summary>

## 4.0.7

### New features/improvements
- Do not close on select if Ctrl or Meta (Cmd) keys being held (#5222)

### Bug fixes
- Fixed issue where single select boxes would automatically reopen when they were closed (#5490, #5492)

### Miscellaneous
- Move almost and jquery-mousewheel to devDependencies (#5489)

## 4.0.6

### New features/improvements
- Add style property to package.json (#5019)
- Implement `clear` and `clearing` events (#5058)
- Add `scrollAfterSelect` option (#5150)
- Add missing diacritics (#4118, #4337, #5464)

### Bug fixes
- Fix up arrow error when there are no options in dropdown (#5127)
- Add `;` before beginning of factory wrapper (#5089)
- Fix IE11 issue with select losing focus after selecting an item (#4860)
- Clear tooltip from `select2-selection__rendered` when selection is cleared (#4640, #4746)
- Fix keyboard not closing when closing dropdown on iOS 10 (#4680)
- User-defined types not normalized properly when passed in as data (#4632)
- Perform deep merge for `Defaults.set()` (#4364)
- Fix ""the results could not be loaded"" displaying during AJAX request (#4356)
- Cache objects in `Utils.__cache` instead of using `$.data` (#4346, #5486)
- Removing the double event binding registration of `selection:update` (#4306)

#### Accessibility
- Improve `.select2-hidden-accessible` (#4908)
- Add role and aria-readonly attributes to single selection dropdown value (#4881)

### Translations
- Add Turkmen translations (`tk`) (#5125)
- Fix error in French translations (#5122)
- Add Albanian translation (`sq`) (#5199)
- Add Georgian translation (`ka`) (#5179)
- Add Nepali translation (`ne`) (#5295)
- Add Bangla translation (`bn`) (#5248)
- Add `removeAllItems` translation for clear ""x"" title (#5291)
- Fix wording in Vietnamese translations (#5387)
- Fix error in Russian translation (#5401)

### Miscellaneous
-  Remove duplicate CSS selector in classic theme (#5115)

## 4.0.5

### Bug fixes
- Replace `autocapitalize=off` with `autocapitalize=none` (#4994)

### Translations
- Vietnamese: remove an unnecessary quote mark (#5059)
- Czech: Add missing commas and periods (#5052)
- Spanish: Update the 'errorLoading' message (#5032)
- Fix typo in Romanian (#5005)
- Improve French translation (#4988)
- Add Pashto translation (`ps`) (#4960)
- Add translations for lower and upper Sorbian (`dsb` and `hsb`) (#4949)
- Updates to Slovak (#4915)
- Fixed Norwegian `inputTooShort` message (#4817, 4896)
- Add Afrikaans translation (`af`) (#4850)
- Add Bosnian translation (`bs`) (#4504)

## 4.0.4

### New features / Improvements
- Make tag matching case insensitive [https://github.com/select2/select2/commit/cb9a90457867ffb14c7b1550bb67e872e0a5c2dd, https://github.com/select2/select2/commit/1167bace78cd3b1a918c1b04f3bac54674eab62b]
- Support selecting options with blank or `0` option values [https://github.com/select2/select2/commit/16b4840c0e2df0461998e3b464ee0a546173950d, https://github.com/select2/select2/commit/0358ee528765157234643d289bce6b8ca5889c72]

### Bug fixes
- Fix issue with entire form losing focus when tabbing away from a Select2 control (#4419)
- Fix UMD support for CommonJS [https://github.com/select2/select2/commit/45a877345482956021161203ac789c25f40a7d5e]

### Documentation
- Github Pages documentation has been deprecated, replaced with https://github.com/select2/docs
- Add django-autocomplete-light to integrations [https://github.com/select2/select2/pull/4597]
- Correct typo in options page [https://github.com/select2/select2/pull/4389]
- Correct misspelling in AJAX query parameters example [https://github.com/select2/select2/pull/4435]
- ""highlight"" should be ""focus"" in focus example [https://github.com/select2/select2/pull/4441]
- Correct misspelling in `<select>` serialization example [https://github.com/select2/select2/pull/4538]
- Correct typos in documentation [https://github.com/select2/select2/pull/4663]

### Translations
- Add `errorLoading` Hungarian translation [https://github.com/select2/select2/commit/7d1d13352321e21670ff1c6cba7413aa264fd57a]
- Add `errorLoading` German translation [https://github.com/select2/select2/commit/4df965219ea4c39147fde9335bc260840465933a]
- Add Slovene language [https://github.com/select2/select2/commit/8e6422c570a87da8d89c45daf0d253695a943c84]
- Add `errorLoading` Galician translation [https://github.com/select2/select2/commit/8fcc6202c37f4e06d951342bf142a3b906b6b8e3]
- Add `errorLoading` Thai translation [https://github.com/select2/select2/commit/625fc78ee616baedf64aa37357403b4b72c7363c]
- Add `searching` and `errorLoading` Finnish translations [https://github.com/select2/select2/pull/4730]
- Add `errorLoading` Turkish translation [https://github.com/select2/select2/commit/fd4a0825315c7055347726d5818c999279f96ff8, https://github.com/select2/select2/commit/751b36767f9f28b9de9428d5e8035c9a404915d9]
- Add Armenian language [https://github.com/select2/select2/commit/f6fa52dcc02341df1523f50348f2effc54ee2911]
</details>",codingjoe,None,2019-07-08T09:41:12Z,2019-07-10T12:38:24Z
11547,Update tools.txt,consistency. the same as line 1311,linchiwei123,None,2019-07-08T02:26:36Z,2019-07-09T08:25:32Z
11546,Fixed #30624 -- Changed docs to use numbered list reStructuredText syntax.,"The numbered list syntax simplifies future maintenance:

- As items are added or removed, the rendered items are automatically
  renumbered.

- If a long list happens to reach double digits, all items remain
  indented the same.

https://code.djangoproject.com/ticket/30624",jdufresne,None,2019-07-07T23:46:30Z,2019-10-24T23:47:02Z
11545,Refs #30623 -- Remove duplicate call to `self.update`,"Ticket [#30623](https://code.djangoproject.com/ticket/30623)

`self.update({})` is called twice one after the other on `class RequestContext`.
One of those calls seems unnecesary.",jmfederico,None,2019-07-07T22:38:29Z,2019-08-21T16:44:25Z
11544,Fixed #30620 -- Made an example of admin-compliant custom user app pep8 compliant.,,nunoh,None,2019-07-07T18:32:20Z,2019-07-08T11:35:39Z
11543,Fixed #30619 -- Made runserver --nothreading use single threaded WSGIServer.,"Ticket: [#30619](https://code.djangoproject.com/ticket/30619)

Client: Chrome 75.0.3770.100/Firefox 67.0.4 on macOS 10.14.5.
Server: macOS 10.14.5., Python 3.7.3, Django 2.2.3

Running web application with single-threaded wsgi server may stop responding.

This is because Web browser uses multiple connection, and all of them has Connection: keep-alive header by default.

When the first request is finished, wsgi server continue to read the socket first request used because the connection is keep-alive.

So, the second connection is kept waiting without accepted by wsgi server, until the fist connection is closed. But the first connection will not be closed by browser for very long time.


",atsuoishimoto,None,2019-07-06T16:28:41Z,2019-07-10T22:12:51Z
11542,Fixed #30618 -- Fixed wrong AppConfig.name when called startapp comma…,"…nd with target


I tried to make a test for it but I have no idea to test.
Could you help me? ; )
https://code.djangoproject.com/ticket/30618#ticket",JungChaeMoon,None,2019-07-06T14:19:12Z,2019-07-16T07:32:43Z
11541,Fixed #30614 -- Added constraint name validation to system checks.,Ticket: [#30614](https://code.djangoproject.com/ticket/30614),cansarigol,None,2019-07-05T08:49:02Z,2019-07-08T08:50:26Z
11540,Fixed #27910 -- Added enumeration helpers for use in Field.choices,"Ticket [#27910](https://code.djangoproject.com/ticket/27910)
Supersedes PR [#11223](https://github.com/django/django/pull/11223)

Improvements over the previous pull request:
- Simplified definition by moving everything from `ChoiceEnum` into `ChoiceEnumMeta`.
- Added additional properties for fetching `labels`, `values`, and `names`.
- Used [`enum.unique()`](https://docs.python.org/3/library/enum.html#enum.unique) to prevent duplicate values.
- Moved all documentation from `django.db.models.enums` into `docs/ref/models/fields.txt`.
- Improved and expanded documentation in `docs/ref/models/fields.txt`.
- Improved and expanded tests in `tests/model_fields/test_choiceenum.py`.
- Improved messages in exceptions.

Things left to do:
- [x] Update documentation in `docs/topics/db/models.txt`.
- [ ] ~~Add documentation for the `.validate()` method.~~
- [x] Check whether the [Functional API](https://docs.python.org/3/library/enum.html#functional-api) works; add tests and documentation.
- [x] Check handling of blank values in choices, e.g. `''` or `None`.
  - _Handling `None` is potentially problematic as were restricted to `int` or `str`._",pope1ni,None,2019-07-04T23:26:23Z,2019-09-04T14:14:35Z
11539,Fixed #30613 -- Moved index name validation to system checks.,Ticket [#30613](https://code.djangoproject.com/ticket/30613#ticket),cansarigol,None,2019-07-04T14:51:31Z,2019-07-05T08:08:17Z
11538,Fixing #30583 -- XML serializer doesn't handle JSONFields,"When using the XML serializer on a JSON field, it was previously trying
to serialize the raw python data object that the JSONField outputs. This
change causes the XML serializer to use json.dumps and json.loads for
serializing and deserializing JSONField data.",chason,None,2019-07-04T06:54:05Z,2020-03-23T19:21:39Z
11537,Fixed #30600 -- Clarified that ValueError raised by converter.to_python() means no match., ,sp1rs,None,2019-07-03T18:01:38Z,2019-07-04T11:36:55Z
11536,Fixed #30600 -- Clarifiy that ValueError raised by converter.to_python() causes 404.,,sp1rs,None,2019-07-03T17:54:32Z,2019-07-03T17:56:43Z
11535,Fixed #28581 -- Moved django.core.paginator documentation to API Reference.,"I rebased previous PRs, and made few changes:

- added ` .. attributes` to a `Paginator` constructor,
- removed sections ""Required arguments"" and ""Optional arguments"" and added instead ""Required"" / ""Optional"" to arguments descriptions,
- removed duplicate object description of `django.core.paginator`,
- fixed references to `django.core.paginator.Paginator`,
- renamed sections,
- moved exceptions to the end of `ref/paginator` page,
- fixed typos.",felixxm,None,2019-07-03T13:55:10Z,2019-07-04T09:45:11Z
11534,Fixed #30596 -- Fixed SplitArrayField.has_changed() for non-string base fields.,"SplitArrayField.has_changed() is always returning True when it is an
array of numeric fields. This fix cleans the data when to_python method
is called, coercing data to be numeric type instead of strings.

Thanks to Evgeniy Krysanov for the report and the idea to use to_python
Thanks to felixxm for the test case",chason,None,2019-07-03T09:36:29Z,2019-07-03T15:25:57Z
11533,#30609 - Add reference to FileWrapper class being removed inDjango 1.9,"Ticket: [#30609](https://code.djangoproject.com/ticket/30609)

The class FileWrapper that was made available in `django.core.servers.basehttp` for
backward compatibility was removed in Django 1.9 release.

To make it more visible here are the references:
Django 1.8.x

https://github.com/django/django/blob/stable/1.8.x/django/core/servers/basehttp.py#L15

Django 1.9.x
https://github.com/django/django/blob/stable/1.9.x/django/core/servers/basehttp.py#L15

This is being added to ensure if anyone still upgrading from Django 1.8 to
Django 1.9 is aware of this.",BernardoSilva,None,2019-07-03T09:31:12Z,2019-07-03T10:33:47Z
11532,Fixed #30608 -- Fixed non-unicode EmailMessage crash when domain name for localhost is non-ASCII.,"When sending out an email, Django attaches the domain name as part
of the Message-ID header. This was causing an error when the domain
name contains unicode characters and the message is set to an
encoding that cannot encode them. These domains should probably
always be set to encode to punycode in any case, so this patch
changes the CachedDnsName class in django.core.mail.utils to return
this fqdn as punycode when it can't be encoded as ascii.

Assisted by felixxm",chason,None,2019-07-02T10:29:28Z,2019-07-03T10:06:44Z
11531,Fixed typos in comments and docs.,,minho42,None,2019-07-01T15:55:55Z,2019-07-19T13:50:16Z
11530,Fixed #28588 -- Doc'd User.has_perm() & co. behavior for active superusers.,"Alternative to PR #11284, implementing Tim's suggestion on the ticket just to document the behaviour. 

https://code.djangoproject.com/ticket/28588",carltongibson,None,2019-07-01T10:01:14Z,2019-07-02T09:29:07Z
11529,Fixed broken selenium tests after 42b9a23267f14be39b9b00958e18d5746783208e.,,felixxm,None,2019-06-30T18:06:53Z,2019-06-30T18:35:21Z
11527,Fixed #30595 -- Added error message when no objects found to sql* management commands.,[ticket 30595](https://code.djangoproject.com/ticket/30595),hramezani,None,2019-06-29T23:44:21Z,2019-07-01T12:21:44Z
11526,Fixed #30589 -- Clarified that urlize should be applied only to email addresses without single quotes.,This PR adds a notice in the templates documentation that 'urlize' doesnt not work as intended with email addresses containing single quotes.,aitoehigie,None,2019-06-29T01:58:14Z,2019-07-01T10:04:47Z
11525,Fixed #30604 -- Made mail_admins()/mail_managers() raise ValueError if ADMINS/MANAGERS is set incorrectly.,[ticket 30604](https://code.djangoproject.com/ticket/30604),hramezani,None,2019-06-28T23:52:53Z,2019-07-02T05:59:10Z
11524,Removed unnecessary import in django/utils/autoreload.py.,I removed a redundant import of `pathlib` to address a [recommendation from lgtm](https://lgtm.com/projects/g/django/django/snapshot/92f837d8dbfc17eec9cda618361fd0a590a23684/files/django/utils/autoreload.py?sort=name&dir=ASC&mode=heatmap).,PatOnTheBack,None,2019-06-28T15:57:23Z,2019-07-01T12:50:01Z
11523,use collections.ChainMap to simplify code,,linchiwei123,None,2019-06-28T08:08:24Z,2019-06-28T08:25:33Z
11522,make use of collections.ChainMap to simplify the code,,linchiwei123,None,2019-06-28T06:40:38Z,2019-06-28T11:16:52Z
11521,make use of collections.ChainMap to simplify the code,,linchiwei123,None,2019-06-28T05:54:35Z,2019-06-28T06:41:52Z
11520,Fixed GeoIPTest.test04_city() with the latest GeoIP2 database.,,felixxm,None,2019-06-27T12:37:19Z,2019-06-27T13:09:41Z
11519,Fixed #30602 ExtractYear optimizations with DurationFields,,cecedille1,None,2019-06-27T12:20:28Z,2019-06-28T08:40:23Z
11518,Fixed #28725 -- Prevented serializing inherited ManyToManyFields in child model.,,nadege,None,2019-06-27T07:59:02Z,2019-06-27T13:59:14Z
11517,Fixed #30584 -- Fixed management command when using subparsers with dest parameter.,,hramezani,None,2019-06-26T20:18:50Z,2019-06-28T11:13:21Z
11516,"Fixed #30049 -- Fix GIS widget init after ""Add another"" in admin inlines","This fixes a initialization of new GIS widget that was added using ""Add another"" button in admin inlines. The ""Add another"" button takes a hidden `__prefix__`-ed form, copies it, updates element attributes IDs and NAMEs and put down at right place. The GIS widget template uses inline javascript that initializes widget using IDs and that was a problem!

Proposal solution adds hook for ""Add another"" action using EventListener for `formset:added` javascript event and fixes inline javascript code and refires it.",shaddeus,None,2019-06-26T19:15:28Z,2020-07-07T10:21:58Z
11515,Fixed #28667 -- Clarified how to override list of forms fields for custom UserAdmin with custom user model.,https://code.djangoproject.com/ticket/28667,Swat009,None,2019-06-26T06:21:02Z,2019-07-04T06:23:57Z
11514,Fixed #30594 -- Added 'private' Cache-Control directive to never_cache() decorator.,Ticket: https://code.djangoproject.com/ticket/30594#ticket,nsasaki128,None,2019-06-26T04:28:07Z,2019-06-26T07:47:06Z
11513,Fixed DatabaseFeatures.supports_column_check_constraints/supports_table_check_constraints on MariaDB 10.2+.,See https://mariadb.com/kb/en/library/constraint/#check-constraints,felixxm,None,2019-06-25T13:13:33Z,2019-06-25T17:38:41Z
11512,Fixed typos in test comments.,"* Replace `alawys` with `always`.
* Replace `COOKES` with `COOKIES` to match test section.",timgates42,None,2019-06-25T00:36:36Z,2019-06-25T09:12:46Z
11511,Fixed #30644 -- Made introspection use pg_table_is_visible() instead of filtering by public schema on PostgreSQL.,"Only some of the functions in `db/backends/postgresql/introspection.py` respect visible tables. The remaining function either assume `public` (hardcoded) or return everything found mixed together.

This PR updates the remaining functions to only deal with tables visible in the current `search_path` (Postgres schema).

This partially addresses https://code.djangoproject.com/ticket/22673
",georgi-yanchev,None,2019-06-24T23:00:25Z,2019-07-22T08:25:22Z
11510,Fixed #30477 -- Made reverse lookup use Field.get_db_prep_value() from the target field.,Ticket [#30477](https://code.djangoproject.com/ticket/30477),cansarigol,None,2019-06-24T15:49:11Z,2019-06-25T11:53:09Z
11509,Fix simple typo with `COOKES` to `COOKIES`,Replace `COOKES` with `COOKIES` to match test section.,timgates42,None,2019-06-24T12:36:39Z,2019-06-24T19:02:31Z
11508,Fix a few typos,Replace `alawys` with `always`.,timgates42,None,2019-06-24T12:23:37Z,2019-06-25T00:37:20Z
11507,Fixed #30588 -- Fixed crash of autoreloader when __main__ module doesn't have __file__ attribute.,Ticket: https://code.djangoproject.com/ticket/30588#ticket,orf,None,2019-06-23T17:35:02Z,2019-06-27T10:25:03Z
11506,Simplified handling of non-existent paths in autoreloader with Path.resolve(strict=True).,"In Python 3.6 and above there is a [`strict` argument in `resolve()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve).

We can use this detect if the file exists or not in a single call, rather than doing it twice (one for `.exists()` and one for `.resolve()`).",orf,None,2019-06-23T13:51:30Z,2019-06-27T10:25:44Z
11505,just testing CI,"This branch identical to `master`, except for one empty line. It fails CI :(",frnhr,None,2019-06-22T20:51:38Z,2019-06-23T08:15:36Z
11504,Fixed #29087 -- Added delete buttons for unsaved admin inlines on validation error.,"ticket: https://code.djangoproject.com/ticket/29087

Admin code, only templates and JS, no Python changes (except for selenium tests).

----


## Effects

### Can delete failed inlines

(main intent of the PR)

Currently if an inline fails on form validation, it cannot be deleted / removed. The error has to be fixed, so that the inline can be saved. Only then can it be deleted. This can sometimes create situations where user has no choice but to reload the page, losing all data in the form:

![Screenshot 2019-08-30 at 21 08 13](https://user-images.githubusercontent.com/1173748/64048276-94d15300-cb71-11e9-86fd-140d47043330.png)
This PR adds the ""X"" delete buttons to all unsaved inlines, so in this case ☝️ the user needs only click the ""X"" next to offending inline and save.

### Can remove inlines to less then `extra = N`

(side-effect, IMHO positive although at first look it might seem negative)

#### Current state of things 

Setting `extra = 3` on the inline class (`3` is also the default) will show 3 empty inline forms without the delete buttons.

However, after saving those 3 inlines (provided there is any data to save), those 3 inlines get the `Delete` checkbox and can be deleted. So despite initial appearances, the `extra = 3` does not guarantee 3 related instances on the model. 

#### Changes in this PR

With this PR, those 3 inlines will have the delete buttons. Every inline will have either the delete button (for unsaved forms) or the delete checkbox (for saved forms). Permissions are respected as before.

Having the delete button on all unsaved inlines, (regardless of the `extra` value) is IMHO closer to the intended functionality of `extra` [as documented](https://docs.djangoproject.com/en/2.2/ref/contrib/admin/#django.contrib.admin.InlineModelAdmin.extra). Note that while there _is_ mention of inlines not exceeding `max_num` (a functionality which is kept in this PR), there is _no_ reference to not being able to go below `min_num` (the functionality which was quasi-provided with `extra = 3` and which is removed as a side-effect of this PR).




",frnhr,None,2019-06-22T19:23:48Z,2020-01-07T16:34:01Z
11503,Fixed typo in docs/topics/db/models.txt.,,meysam81,None,2019-06-22T17:38:20Z,2019-06-24T07:04:34Z
11502,Removed extra `be` word,,chexex,None,2019-06-22T07:01:56Z,2019-06-24T07:00:53Z
11501,Fixed #27801 -- Made createsuperuser fall back to environment variables for password and required fields.,,hramezani,None,2019-06-21T21:39:42Z,2019-07-30T21:01:04Z
11500,#30585 Add support for translate and blocktranslate tags,"The initial commit here tries to minimize the changes to the Django codebase, but I'm happy to do additional work to do more extensive changes depending on the community's thoughts on this issue.",mwhansen,None,2019-06-21T16:50:26Z,2019-06-24T06:16:35Z
11498,Bumped minimum ESLint version to 4.18.2.,,MarkusH,None,2019-06-21T10:43:43Z,2019-06-21T19:46:12Z
11497,Fixed typo in BasicExpressionsTests.test_object_update_fk() test.,,felixxm,None,2019-06-21T09:02:37Z,2019-06-21T10:00:47Z
11496,Fixed #30578 - Made SelectDateWidget respect a custom date format when USE_L10N is disabled.,Had reproduced and yielded invalid dates. Now fixed and updated tests.,CruxBox,None,2019-06-20T19:58:48Z,2019-06-26T09:08:47Z
11495,"Fixed typos in 1.11.19, 2.0.11, 2.1.6 release notes.",,jdufresne,None,2019-06-20T14:48:06Z,2019-07-06T17:09:34Z
11494,Removed unnecessary backslashes from docs.,I noticed this when checking #11476.,felixxm,None,2019-06-20T11:42:04Z,2019-06-20T12:04:45Z
11493,Update mixins.py,,gachdavit,None,2019-06-20T09:27:50Z,2019-06-20T10:18:43Z
11492,Ticket 99999,,GRqGitHub,None,2019-06-20T02:50:51Z,2019-06-20T04:27:24Z
11491,Stable/1.11.x does not support chinese path when upload files,"When i upload files in python2.7 envirment with 
""reload(sys)
sys.setdefaultencoding('UTF-8')""
 in the head, where the store_path contains chinese word,there was no problem,
but when i upload files  in python3.6 envirment without 
""reload(sys)
sys.setdefaultencoding('UTF-8')""
 in the head,
I got the error like this:
![image](https://user-images.githubusercontent.com/28126518/59749646-0a868c00-92b0-11e9-869b-79ddb94d18b5.png)


Does anyone else  know how to solve it?
",hedongya,None,2019-06-19T08:31:58Z,2019-06-19T08:49:08Z
11490,Fixed #30572 -- Prevented values()/values_list() on combined queryset from mutating the list of columns in querysets.,https://code.djangoproject.com/ticket/30572,felixxm,None,2019-06-19T07:47:46Z,2019-06-19T08:44:57Z
11489,Fixed #30557 -- Fixed crash of ordering when parent model's Meta.ordering contains expressions.,"Add check for instance of OrderBy inside got_order_dir. Not sure if this is full solution, but it solves the bugs in the ticket test cases.
",ekeydar,None,2019-06-19T05:58:15Z,2019-07-10T18:21:55Z
11488,"Fix for #30557, add check for OrderBy instance in get_order_dir",Add check in get_order_dir for instance of OrderBy,ekeydar,None,2019-06-19T05:36:14Z,2019-06-19T05:53:16Z
11487,Fix typos in signals and custom management commands docs.,Continue to [PR 11483](https://github.com/django/django/pull/11483).,hramezani,None,2019-06-18T18:40:45Z,2019-06-19T06:41:37Z
11486,attempt to improve formset initial data docs,"The way to prepopulate multiple forms in a formset is not made very explicit. I missed it. I hope this tiny addition (or a variation) might make things clearer for future users.

Please feel free to do what you think is best with this proposed change.

Thank you for your work on Django!

M",markvdb,None,2019-06-18T11:23:16Z,2019-06-18T11:58:26Z
11485,Fixed LiveWidgetTests.test_textarea_trailing_newlines() crash on Chrome 75+.,,felixxm,None,2019-06-18T09:09:11Z,2019-06-18T09:38:55Z
11484,Fixed #30565 -- Closed HttpResponse when wsgi.file_wrapper closes file-like object.,Fixes #30565: https://code.djangoproject.com/ticket/30565,cjerdonek,None,2019-06-18T09:00:26Z,2019-06-20T10:07:58Z
11483,Fixed typos and example in signals.pre_init docs.,[ticket 30571](https://code.djangoproject.com/ticket/30571),hramezani,None,2019-06-17T17:49:13Z,2019-06-18T16:18:22Z
11482,Fixed #30573 -- Rephrased documentation to avoid words that minimise the involved difficulty.,"Obviously (heh.) this patch does not remove all occurrences of the words
in question. Rather, I went through all of the occurrences of the words
listed below, and judged if they a) suggested the reader had some kind
of knowledge/experience, and b) if they added anything of value
(including tone of voice, etc). I left most of the words alone. I looked
at the following words:

- simply/simple
- easy/easier/easiest
- obvious/obviously
- just
- merely
- straightforward
- ridiculous

Thanks to Carlton Gibson for guidance on how to approach this issue, and to Tim Bell for providing the idea.

Ticket link: https://code.djangoproject.com/ticket/30573",rixx,None,2019-06-17T15:00:19Z,2019-09-06T12:37:31Z
11480,WIP: Fixed #30213 -- Add a Watchdog autoreloader,"Ticket: https://code.djangoproject.com/ticket/30213

Still WIP, there are some tricky issues around threads here that I need to resolve.",orf,None,2019-06-16T20:35:42Z,2020-06-17T16:00:42Z
11479,Fixed typos in FakePayload docstring and SimplifiedURLTests test name.,,minho42,None,2019-06-14T20:30:23Z,2019-06-25T22:42:01Z
11478,Fixed #30547 -- Doc'd how Meta.constraints affect model validation.,"Patch with suggested changes.

https://code.djangoproject.com/ticket/30547",Swat009,None,2019-06-14T20:17:10Z,2019-06-20T08:44:03Z
11477,Fixed #26431 -- Prevented django.urls.resolve() from returning missing optional parameters.,"…amed groups are missing in the URL pattern

Commit Message too long?

I had patched with the original patch provided by the reporter, but then dug a bit deeper. I then patched at
`_reverse_with_prefix` which is where most of my previous work was situated. (Delete kwargs with `None` values that are valid parameters- using set magic). But the tests for `named_optional` and `named_optional_terminated` with just one parameter still went through, so I dug deeper.

Usually these None-value parameters never make it to `_reverse_with_prefix`. The culprit, in the end, was django.urls.resolvers.RegexPattern.match. It user groupdict() which returns a `None` as a default value instead of nixing the parameter: https://docs.python.org/3.6/library/re.html#re.match.groupdict

https://code.djangoproject.com/ticket/26431",MisterRios,None,2019-06-14T17:40:45Z,2019-09-27T08:13:57Z
11476,Fixed #30066 -- Enabled super user creation without email and password,"Resubmit of existing (unmerged) patch with corresponding corrections in the Documentation.

https://code.djangoproject.com/ticket/30066",MisterRios,None,2019-06-14T08:37:52Z,2019-08-29T17:40:22Z
11475,[2.2.x] Fixed #30547 -- Meta.constraints validation description added,"Documented what happens during model validation with Meta.constraints.

https://code.djangoproject.com/ticket/30547",Swat009,None,2019-06-14T07:55:24Z,2019-06-17T19:01:16Z
11474,Ticket 30547 2 2,"Documented what happens during model validation with Meta.constraints.

https://code.djangoproject.com/ticket/30547",Swat009,None,2019-06-14T07:44:38Z,2019-06-17T19:00:51Z
11473,Fix es_MX translation on admin's change password,The hardcoded href produces an invalid link on 1.9+,alfaro28,None,2019-06-13T16:51:50Z,2019-06-13T17:22:54Z
11472,"Refs #30512, #15042 -- Added local-only address to sanitize_email() tests cases.","`email.headerregistry.parser.get_mailbox()` returns a token with a `token_type` attribute.

If `token_type` is `'invalid-mailbox'` then RFC violations have been detected. Emails with only the local part, and no domain,  are correctly parsed but are marked as `'invalid-mailbox'`.

As per #15042, local-only are supported, to enable sending to addresses on localhost.

`sanitize_email()` does not currently check `token_type`. This test is added to avoid a regression in case this is revisited in the future.",carltongibson,None,2019-06-13T14:40:14Z,2019-06-13T15:30:03Z
11471,Refs #30451 -- Added HttpRequest._set_content_type_params() hook.,,felixxm,None,2019-06-13T08:19:33Z,2019-06-17T09:44:05Z
11470,Simplified GISFunctionsTests.test_point_on_surface().,See [comment](https://github.com/django/django/commit/b616f65855e5658a0272506ded1274516daa908d#r33908854).,felixxm,None,2019-06-12T10:30:05Z,2019-06-12T10:59:06Z
11469,Refs #29548 -- Doc'd MariaDB support for GIS database functions.,,felixxm,None,2019-06-12T08:53:54Z,2019-06-13T08:26:25Z
11468,Added missing support for PointOnSurface function on MariaDB.,https://mariadb.com/kb/en/library/st_pointonsurface/,felixxm,None,2019-06-12T07:44:50Z,2019-06-12T08:51:46Z
11467,Fixed GISFunctionsTests.test_asgeojson() crash on MariaDB 10.2+.,,felixxm,None,2019-06-12T07:08:33Z,2019-06-12T07:43:09Z
11466,Simplified django.urls.reverse() a bit.,,sir-sigurd,None,2019-06-12T02:42:30Z,2019-06-12T10:47:51Z
11465,Changed charset and collation link to MySQL docs.,"Issue https://github.com/django/djangoproject.com/issues/919
I suggest change links for MySQL at anchors https://docs.djangoproject.com/en/2.2/ref/settings/#charset and https://docs.djangoproject.com/en/2.2/ref/settings/#collation from https://dev.mysql.com/doc/refman/en/charset-database.html to https://dev.mysql.com/doc/refman/en/charset-charsets.html because second one contains ""Supported Character Sets and Collations"" for MySQL instead of previous.",NickCoolii,None,2019-06-11T06:53:57Z,2019-06-11T09:16:43Z
11464,Fixed #26434 -- Fixed to making wrong query when the query has order by and select values together.,Ticket: [#26434](https://code.djangoproject.com/ticket/26434),cansarigol,None,2019-06-10T14:35:56Z,2020-07-13T10:47:35Z
11463,[2.2.x] Fixed #30481 -- document force_text() can return non-text str,"Not needed in Django 3.x because ""force_text()"" is deprecated there
in favor of ""force_str()"". This documentation clarifies ""yes, we said
text but really we mean str""; that's not needed when the function says
""str"" in the first place.",adamhooper,None,2019-06-10T14:05:28Z,2019-12-05T09:17:12Z
11462,Refs #29444 -- Added support for fetching a returned non-integer insert values on Oracle.,"This is currently not actively used, since the ORM will ask the
SQL compiler to only return auto fields and none other. However
this will change in #29444.",codingjoe,None,2019-06-10T12:04:43Z,2019-07-08T08:59:35Z
11461,Stable/2.2.x,Stable/2.2.x,mizutani-isao,None,2019-06-10T08:43:59Z,2019-06-10T08:45:46Z
11460,Refs #30485 -- Removed non-representative test that emitted a warning.,"Previously, when running the Django test suite with warnings enabled, the following was emitted:

    /usr/lib64/python3.7/urllib/parse.py:915: BytesWarning: str() on a bytearray instance
      v = quote_via(str(v), safe, encoding, errors)

This occurred due to the `bytearray()` being passed to `urllib.parse.urlencode()` which eventually calls `str()` on it. The test does not represent desired real world behavior. Rather than test for and
assert strange unspecified behavior that emits a warning, remove it.

This was also discussed in PR #11374.",jdufresne,None,2019-06-10T00:59:29Z,2019-07-06T17:09:53Z
11459,Fixed #27486 -- Fixed Python 3.7 DeprecationWarning in intword and filesizeformat filters.,"Previously, running the Django test suite with warnings enabled resulted in several of the form:

```
…/django/django/utils/translation/trans_real.py:325: DeprecationWarning: Plural value must be an integer, got float
  return getattr(t, translation_function)(singular, plural, number)
```

The rationale for this warning is documented in BPO-28692: https://bugs.python.org/issue28692.

For `filesizeformat`, the `filesize` value is expected to be an int -- it fills `%d` string formatting placeholders. It was likely coerced to a float to ensure floating point division on Python 2. Python 3 always does floating point division, so coerce to an int instead of a float to fix the warning.

For `intword`, the number may contain a decimal component. In English, a decimal component makes the noun plural. A helper function, `round_away_from_one()`, was added to convert the float to an integer that is appropriate for `ngettext()`.

https://code.djangoproject.com/ticket/27486",jdufresne,None,2019-06-09T23:58:03Z,2019-07-06T17:09:53Z
11458,Refs #27804 -- Used subTest() in filesizeformat tests and HumanizeTests.,,jdufresne,None,2019-06-09T23:08:20Z,2019-07-06T17:09:53Z
11457,Fixed #30548 -- Improved exception when expression contains mixed types.,,CruxBox,None,2019-06-09T22:38:18Z,2019-06-10T18:30:59Z
11456,Fixed #30553 -- Clarified the default value of disable_existing_loggers.,"### Fixed misleading logging documentation about disable_existing_loggers default value

Moved  (which is the default)  from True to False in the paragraph.

> ""If the disable_existing_loggers key in the LOGGING dictConfig is set to True then all loggers from the default configuration will be disabled. Disabled loggers are not the same as removed; the logger will still exist, but will silently discard anything logged to it, not even propagating entries to a parent logger. Thus you should be very careful using 'disable_existing_loggers': True; it’s probably not what you want. Instead, you can set disable_existing_loggers to False (which is the default) and redefine some or all of the default loggers; or you can set LOGGING_CONFIG to None and handle logging config yourself.""


https://code.djangoproject.com/ticket/30553",Swat009,None,2019-06-09T19:39:43Z,2019-06-10T13:19:26Z
11455,Refs #27804 -- Used subTest() in HumanizeTests.,,jdufresne,None,2019-06-09T18:45:16Z,2019-07-06T17:09:53Z
11454,Removed order by from get_group_by in SQLCompiler,"Ticket: [#26434](https://code.djangoproject.com/ticket/26434)

I opened this pull request to discuss when collecting group by columns why are order by columns added into extensions. 

For example: 
Model.objects.values(""col_a"").annotate(max=Max(""col_b"")).order_by('col_c')
current query:
```
select col_a, MAX(col_b) as max 
from Model 
group by col_a, col_c
order by col_c
```
I think the expected behavior has should be like that:
`django.db.utils.ProgrammingError: column ""Model.col_c"" must appear in the GROUP BY clause or be used in an aggregate function`

Because this behavior changes my group by and result. if I'm lucky, my result doesn't change.

If we check `test_annotation_with_value`, 'name' column is being added into `group_by` because Book model has `Meta.ordering`.",cansarigol,None,2019-06-09T12:17:42Z,2019-06-10T06:14:09Z
11453,Refs #30207: Optimise paginator for tables with massive records by slicing records using pk instead of all columns,"I had a problem with Paginator class to slice huge dataset. In case of millions of record it can take 30 second to reach the last page. So I cam up with a solution to overcome this problem.

The problem is that for slicing data, current solution needs to compute whole list to render data bottom:top. The reason is that, current script will generate for example SELECT ID, COL_1, ..., COL_N, ... WHERE ... which has huge burden for database to slice the data. To overcome this problem we can instead select primary keys and do the slicing step and then fetch records that their pk are in that sliced list. Very simple but very efficient solution. I improved the performance for our project significantly using this approach. So form 30 seconds to only 2-3 seconds for 8 million records.

Tested DB: Postgres",javidanmd,None,2019-06-09T08:45:57Z,2019-06-10T10:08:18Z
11452,Fixed #12990 -- Added JSONField model field.,"### This pull request is closed. Please look at #12392 instead.

---

Ticket [#12990](https://code.djangoproject.com/ticket/12990), as part of the [Google Summer of Code](https://g.co/gsoc) program.

Some points:
- Currently supports storing and retrieving any valid JSON value (boolean, integer, float, string, object, array) on all supported database backends (SQLite, PostgreSQL, MySQL, MariaDB, Oracle).
  Note: Oracle only supports JSON object and array if `IS JSON` constraint is enabled.
- Supports custom encoder and decoder (defaults to `json.JSONEncoder` and `json.JSONDecoder`, respectively). I had to cast the `SELECT` query to `text` for PostgreSQL to avoid having the value already decoded in `from_db_value` so it's possible to use a custom decoder (see [psycopg2 docs](http://initd.org/psycopg/docs/extras.html#json-adaptation)).
- Custom lookups and transforms from `contrib.postgres.fields.JSONField` are implemented as possibly supported for each backend.
- Check constraints are applied.  
  - MariaDB and SQLite have a `JSON_VALID` function which works well.
  - Oracle has [`IS JSON`](https://docs.oracle.com/en/database/oracle/oracle-database/12.2/adjsn/conditions-is-json-and-is-not-json.html#GUID-1B6CFFBE-85FE-41DD-BA14-DD1DE73EAB20) constraint, but from what I tried, it only returns true if the field's value is either a JSON object or array.
  - The constraint already comes with the JSON data types in PostgreSQL and MySQL. You can only insert valid JSON values for `jsonb` and `json` columns.
- Oracle implementation uses the `nclob` data type. Oracle recommends using `blob`, but there are some downsides (see [docs](https://docs.oracle.com/en/database/oracle/oracle-database/12.2/adjsn/overview-of-storage-and-management-of-JSON-data.html)). Besides, an existing implementation of [oracle-json-field](https://github.com/Exscientia/oracle-json-field) uses `clob`. `TextField` also uses `nclob`, so I think this makes sense.
- Needs [JSON1](https://www.sqlite.org/json1.html) extension for SQLite. Most Linux distros already have it enabled by default in their SQLite and Python packages.
- Supports introspection.

More details of this available on [my blog](https://gsoc.laymonage.com).",laymonage,None,2019-06-09T01:52:22Z,2020-01-30T14:32:42Z
11451,Fixed #30556 -- Avoided useless query and hasher call in ModelBackend.authenticate() when credentials aren't provided.,"There's no need to fetch a user instance from the database unless
a username and a password are provided as credentials.",aaugustin,None,2019-06-08T19:11:42Z,2019-06-10T09:32:45Z
11450,Refs #27804 -- Used subTest() in BinaryFieldTests.test_set_and_retrieve().,,jdufresne,None,2019-06-07T01:23:38Z,2019-06-07T15:42:15Z
11449,Fixed #30550 -- Fixed decoding of non-UTF-8 bytes objects in response.json().,https://code.djangoproject.com/ticket/30550,jdufresne,None,2019-06-07T00:54:56Z,2019-06-07T15:42:15Z
11448,Refs #30512 -- Added tests for sanitizing email addresses with display name and two @ signs.,,felixxm,None,2019-06-06T12:52:16Z,2019-06-06T13:28:52Z
11447,Updated Hindi language name and added Gujarati language.,"1. Added Gu - Gujarati
2. Updated name_locale for Hi - Hindi.",winter-code,None,2019-06-06T08:53:18Z,2019-06-07T06:49:06Z
11446,Fixed #30521 -- Fixed invalid HTML in default error pages. ,"Ticket: https://code.djangoproject.com/ticket/30521
Simple solution to have better html responses form default error pages",alej0varas,None,2019-06-05T18:57:08Z,2019-06-11T14:26:45Z
11445,Fixed #28790 -- Doc'd how to avoid running certain test classes in parallel.,"Ticket: https://code.djangoproject.com/ticket/28790

<img width=""672"" alt=""Screen Shot 2019-06-05 at 11 37 22 AM"" src=""https://user-images.githubusercontent.com/55533/58965055-4dac0f80-8786-11e9-9b42-ec85f1f91fbc.png"">

---

<img width=""669"" alt=""Screen Shot 2019-06-05 at 11 37 13 AM"" src=""https://user-images.githubusercontent.com/55533/58965056-4e44a600-8786-11e9-8c80-079462be42ff.png"">",caioariede,None,2019-06-05T14:37:59Z,2019-10-08T11:40:13Z
11444,Fixed #30543 -- Correct validation of ModelAdmin's list_display,"First attempt to get field via get_field, if that fails try getattr,
and only if both fail return E108 error.
If a field was retrieved by either way then check it is not a ManyToMany.
Fixes bug that a field for which getattr fails (e.g. because needs instance)
but get_field succeeds would incorrectly return E108 error.
Also include the errant item in E109 error message.",ajcsimons,None,2019-06-05T14:02:21Z,2019-07-10T04:51:10Z
11443,Fixed #30542 -- Fixed crash of numerical aggregations with filter.,"Filters in annotations crashed when used with numerical-type aggregations (i.e. `Avg`, `StdDev`, and `Variance`). This was caused as the source expressions no not necessarily have an output_field (such as the filter field), which lead to an AttributeError: 'WhereNode' object has no attribute 'output_field'.

A regression test was also added for this case, and a release page for 2.2.3 was created.

Thanks to Chuan-Zheng Lee for the report.

Regression in c690afb and following two commits (each for different aggregations, e85afa5943695457c85e9bc1c5dc0d985004e303 and 6d4efa8e6a4cc7be4ba957dec71f6f63cd58700d)",tienne-B,None,2019-06-04T20:42:55Z,2019-06-05T07:32:55Z
11442,Fixed #28567 -- Added examples of redirect_to context variable when using set_language() view.,Provided examples on how to set the [`redirect_to`](https://docs.djangoproject.com/en/dev/topics/i18n/translation/#the-set-language-redirect-view) variable based on the provided solutions in the ticket [28567](https://code.djangoproject.com/ticket/28567).,raratiru,None,2019-06-04T19:49:27Z,2019-06-06T15:13:01Z
11441,Updated security release archive with missing entries.,"@carltongibson It looks like an update to the security release archive was missed. I've checked the release process in case it was missing and something needed amending, but I did find it [here](https://docs.djangoproject.com/en/stable/internals/howto-release-django/#post-release) as point 3.

Hope these commits do the trick. They will need backporting as appropriate.",pope1ni,None,2019-06-03T19:31:14Z,2019-06-04T06:34:58Z
11440,Fixed #28752 -- Made django.setup() idempotent.,"Stripped-down version of ticket #30536, without tweakable django setup.",pakal,None,2019-06-03T18:31:43Z,2019-10-17T08:55:42Z
11439,Removed redundant object descriptions to prevent warnings with Sphinx 2.1.0.,,felixxm,None,2019-06-03T11:10:19Z,2019-06-04T12:24:05Z
11438,Updated release process for oss-security list content guidelines.,"c.f. https://oss-security.openwall.org/wiki/mailing-lists/oss-security#list-content-guidelines

(We get told-off otherwise 🙂)",carltongibson,None,2019-06-03T07:45:59Z,2019-06-04T14:40:26Z
11437,"Fixed #29043 --  Prevent test --keepdb says ""Using existing ..."" at first time.","[Ticket 29043](https://code.djangoproject.com/ticket/29043)
The patch needs tests. I don't know how to test it.
Any suggestion?
",hramezani,None,2019-06-02T14:47:43Z,2019-08-12T19:44:54Z
11436,Update setup.cfg,,henrymoses21,None,2019-06-01T20:55:02Z,2019-06-02T06:01:31Z
11435,Refs #30536 - Make django.setup() idempotent and tweakable,"The new DJANGO_SETUP_CALLABLE setting allows users to tweak django setup, especially when using external test runners and mockups.

See https://code.djangoproject.com/ticket/30536",pakal,None,2019-06-01T19:37:05Z,2019-10-17T08:58:49Z
11434,Skip non-target dbshell tests.,,nakagami,None,2019-06-01T11:14:01Z,2019-06-01T12:23:40Z
11433,Fixed #30534 -- Fixed overriding a field's default in ModelForm.cleaned_data().,…OSTed,RobertAKARobin,None,2019-05-31T17:06:20Z,2019-06-04T07:01:15Z
11432,Simplified m2m_recursive.tests.,,felixxm,None,2019-05-31T12:43:10Z,2019-05-31T14:20:35Z
11431,Fixed #28831 -- Doc'd that InlineModelAdmin methods' obj argument is the parent object.,"Documented that the InlineModelAdmin.get_fieldsets is called with a parent obj
instead and not with the children object.",Parth1811,None,2019-05-30T20:20:59Z,2019-05-31T11:21:52Z
11430,Compile sql parameters to lists instead of tuples,"Here's the corresponding ticket: https://code.djangoproject.com/ticket/30529#ticket. In some places I omitted the explicit `list` conversion. It might however be necessary to not break 3rd party compilers.

It occurs to me, that the use of tuples maybe was intentional, because they are immutable?!",tuky,None,2019-05-29T13:16:09Z,2019-06-12T22:59:48Z
11429,Fixed #30505 -- Doc'd how changes in the order of Field.choices affect migrations.,,caioariede,None,2019-05-29T12:23:14Z,2019-06-04T13:08:51Z
11428,Fixed #30516 -- Fixed crash of autoreloader when re-raising exceptions with custom signature.,Ticket: https://code.djangoproject.com/ticket/30516,orf,None,2019-05-28T18:08:20Z,2019-06-27T10:25:52Z
11427,Fixed #30520 -- Fixed crash of admin model inlines on custom fields without labels.,,jonesambrosi,None,2019-05-28T18:00:19Z,2019-06-04T17:07:57Z
11426,Correct labels for inlines,,jonesambrosi,None,2019-05-28T15:36:50Z,2019-05-30T16:02:20Z
11425,Merge pull request #1 from django/master,update to latest,charismafight,None,2019-05-28T15:08:38Z,2019-05-28T15:11:04Z
11424,terminate all connections to postgresql test database before destroying,Execute query to terminate all connections to postgresql test database before destroying,Haikson,None,2019-05-28T10:05:55Z,2019-05-29T11:04:35Z
11423,Fixed #30493 -- Fixed prefetch_related() for GenericRelation with different content types.,Ticket: [#30493](https://code.djangoproject.com/ticket/30493),cansarigol,None,2019-05-28T07:50:36Z,2019-06-25T11:53:25Z
11422,Fixed #30479 -- Fixed detecting changes in manage.py by autoreloader when using StatReloader.,Ticket: https://code.djangoproject.com/ticket/30479,orf,None,2019-05-27T19:15:21Z,2019-05-28T07:02:21Z
11421,Fixed #30505 -- Prevented migrations detecting changes on field choices order,Trac ticket: https://code.djangoproject.com/ticket/30505,caioariede,None,2019-05-27T19:05:01Z,2019-05-29T12:06:11Z
11420,Refs #30485 -- Avoided unnecessary instance checks in urlencode.,Given `doseq` defaults to `False` it should avoid an unnecessary instance check in most cases.,charettes,None,2019-05-27T18:59:58Z,2019-05-27T20:04:11Z
11419,Fixed #30523 -- Fixed updating file modification times on seen files in auto-reloader when using StatReloader.,"Ticket: https://code.djangoproject.com/ticket/30523#ticket

Currently we only update the file mtimes if the file has not been 'seen' before - i.e on the first iteration of the loop.

If the mtime has been changed we trigger the `notify_file_changed()` method which in all cases except the translations will result in the process being terminated. However to be strictly correct we need to update the mtime for either branch of the conditional.

I can make a ticket for this, I don't see it as being a serious issue, but in the future if we expand this to watch other non-python files (or have other logic to reset translations) it could well be. ",orf,None,2019-05-27T11:52:24Z,2019-05-29T07:42:32Z
11418,Simplified Model.save() a bit.,,xiaomiba0904,None,2019-05-27T10:19:26Z,2019-05-28T13:40:51Z
11417,Fixed #30512 -- Used email.headerregistry.parser for parsing emails in sanitize_address().,"https://code.djangoproject.com/ticket/30512#ticket

> `django.core.mail.message.sanitize_address` uses email.utils.parseaddr from the standard lib. On Python 3, email.headerregistry.parser.get_mailbox() does the same, and is less error-prone.

This PR does that, adds some test cases and fixes doc where it advertizes using things that go against the RFC.

Not sure if I should be adding something to the changelog or what ?",ewjoachim,None,2019-05-26T17:32:11Z,2019-06-13T18:00:31Z
11416,Fixed #30510 -- Adjust Oracle bulk insert column types to match.,"Patch to address the issue described in https://code.djangoproject.com/ticket/30510

This adds an extra `adjust_param_rows` hook at the connection backend level that allows the query parameters to an insert to be adjusted with a view of the inserted matrix.",msg555,None,2019-05-26T04:31:49Z,2019-10-01T15:41:48Z
11415,Fixed #28520 -- Added --start-at/--start-after options to runtests.py.,"[ticket 28520](https://code.djangoproject.com/ticket/28520)
Continue https://github.com/django/django/pull/8957 work.",hramezani,None,2019-05-25T19:00:38Z,2019-05-31T05:22:21Z
11413,Fixed #30315 -- Fixed crash of ArrayAgg and StringAgg with ordering when used in Subquery.,Trac Ticket: https://code.djangoproject.com/ticket/30315,caioariede,None,2019-05-25T14:01:48Z,2019-05-28T12:07:13Z
11412,Fixed #30507 -- Updated admin's jQuery to 3.4.1.,,dulmandakh,None,2019-05-24T13:43:30Z,2019-08-23T09:54:24Z
11411,Refs #9982 -- Added test for saving OneToOneField field after saving related object.,Fixed in 519016e5f25d7c0a040015724f9920581551cab0.,felixxm,None,2019-05-24T08:28:01Z,2019-05-24T08:54:09Z
11410,Fixed #30504 -- Corrected redirect() signature in docs.,,sp1rs,None,2019-05-24T05:48:34Z,2019-05-24T06:26:40Z
11409,"override get_app_list of AdminSite , the app not appear in adminsite","In my app admin.py
```
from django.contrib import admin
from myapp import modelsone,modelstwo,modelsthree

class EventAdminSite(admin.AdminSite):
    def get_app_list(self, request):
        """"""
        Return a sorted list of all the installed apps that have been
        registered in this site.
        """"""
        ordering = {
            ""Emodelsone"": 1,
            ""modelstwo"": 2,
            ""modelsthree"": 3,
        }
        app_dict = self._build_app_dict(request)
        # a.sort(key=lambda x: b.index(x[0]))
        # Sort the apps alphabetically.
        app_list = sorted(app_dict.values(), key=lambda x: x['name'].lower())

        # Sort the models alphabetically within each app.
        for app in app_list:
            app['models'].sort(key=lambda x: ordering[x['name']])

        return app_list

mysite = EventAdminSite()


class MymodelsoneAdmin(admin.ModelAdmin):
     ....
class MymodelstwoAdmin(admin.ModelAdmin):
     ....
class MymodelsthreeAdmin(admin.ModelAdmin):
     ....

mysite.register(modelsone,MymodelsoneAdmin)

```

the models one,two,three don't appear in my adminsite.
",Flag-sunqi,None,2019-05-24T04:02:07Z,2019-05-24T04:59:41Z
11408,Fixed #29799 -- Allowed registration and unregistration of lookups per field instances.,"Ticket [#29799](https://code.djangoproject.com/ticket/29799)

As far as I could understand, I prepared a PR. Does this approach work, Could you review @charettes?",cansarigol,None,2019-05-23T14:40:46Z,2020-08-05T10:37:18Z
11407,Used re.Pattern.findall() instead of re.findall() in inspectdb.tests.,,jdufresne,None,2019-05-23T13:16:01Z,2019-06-07T15:42:48Z
11406,Refs #24944 -- Added test for overriding domain in email context in PasswordResetView.,Which version I should target for this? 2.3?,MattBlack85,None,2019-05-23T12:36:11Z,2019-05-27T10:27:26Z
11405,Fixed #30501 -- Preventing QuerySet.reverse() from mutating expressions in QuerySet.order_by and Meta.ordering.,Ticket [30501](https://code.djangoproject.com/ticket/30501).,felixxm,None,2019-05-23T07:01:53Z,2019-05-23T18:34:17Z
11403,Refs #30116 -- Removed unnecessary str() calls in CommonPasswordValidator.,open() and gzip.open() have supported path-like objects since Python 3.6.,jdufresne,None,2019-05-22T15:23:31Z,2019-05-22T17:57:00Z
11402,Fixed #30497 -- Ignored document type in assertXMLEqual()/assertXMLNotEqual().,Trac Ticket: https://code.djangoproject.com/ticket/30497,caioariede,None,2019-05-22T13:41:27Z,2019-05-24T12:18:46Z
11401,Refs #29548 -- Updated docs for MariaDB support.,"Ticket [29548](https://code.djangoproject.com/ticket/29548). It's time officially supports MariaDB.

I updated docs with basic notes about MariaDB support.  

@adamchainz @orf Would you like to take a look? I'm not a MariaDB expert. Should we add some MariaDB caveats?",felixxm,None,2019-05-22T11:57:09Z,2019-05-27T17:59:53Z
11400, Fixed #30449 -- Fixed RelatedFieldListFilter/RelatedOnlyFieldListFilter to respect model's Meta.ordering.,"Check [#30449](https://code.djangoproject.com/ticket/30449)

Refactored admin.RelatedFieldListFilter and admin.RelatedOnlyFieldListFilter
to respect ordering defined in related model admin. Refactored
Field.get_choices to fallback to default model ordering.",zeyneloz,None,2019-05-22T11:30:39Z,2019-08-15T11:14:53Z
11399,Fixed #30498 -- Fixed proxy class caching in lazy().,"Ticket: https://code.djangoproject.com/ticket/30498

I split this from PR #11314.",bluetech,None,2019-05-22T09:09:50Z,2019-07-29T19:29:56Z
11398,Forced utf-8 encoding when loading common passwords in CommonPasswordValidator.,Follow up to 28eac41510eb9de728bdfbc22a36f33ac75394f2 (see #11391),felixxm,None,2019-05-22T07:12:12Z,2019-05-23T06:39:35Z
11397,Fixed datetime string format examples in docs/howto/custom-template-tags.txt.,"%M is minutes, and the example is clearly trying to output months",alex,None,2019-05-21T19:57:46Z,2019-05-22T04:47:54Z
11396,Fixed #26192 -- Fixed crash of ordering by constants on PostgreSQL.,"Ordering by constants is reasonable in some cases (e.g. in compound queries), but in the same time it can be problematic on PostgreSQL without specified output type (see ticket [26192](https://code.djangoproject.com/ticket/26192)).

IMO we should raise `FieldError` when `output_field` cannot be resolved.

@charettes What do you think?",felixxm,None,2019-05-21T18:25:06Z,2019-05-31T05:39:09Z
11395,Fixed #29998 -- Fixed parents dict for inherited table that contains multiple OneToOne references.,Ticket: [#29998](https://code.djangoproject.com/ticket/29998),cansarigol,None,2019-05-21T16:08:11Z,2020-01-15T14:02:57Z
11394,Refs #26192 -- Changed test_order_raises_on_non_selected_column() to order by function instead of static value.,"Order by static value doesn't have much sense and can be problematic on PostgreSQL (see ticket [26192](https://code.djangoproject.com/ticket/26192)).

IMO we can remove static values from `ORDER BY` clause as a part of query optimization (see #11384).",felixxm,None,2019-05-21T14:02:05Z,2019-05-21T14:16:46Z
11393,"Fixed #29396, #30494 -- Added indirect values support to __year lookups.","https://code.djangoproject.com/ticket/30494

The previous heuristics were naively enabling the `BETWEEN` optimization on successful cast of the first rhs SQL params to an integer while it was not appropriate for a lot of database resolved expressions.

Thanks Alexey Chernov for the report.",charettes,None,2019-05-20T23:01:01Z,2019-05-21T05:54:21Z
11392,Refs #30062 -- Corrected UniqueConstraint signature in docs.,Added missing `condition` argument to `UniqueConstraint` signature in constraints documentation page.,gbdlin,None,2019-05-20T08:41:29Z,2019-05-20T11:26:56Z
11391,Improved performance of loading common passwords in CommonPasswordValidator.,"`CommonPasswordValidator.__init__` previously called either
splitlines or readlines, creating an unneeded intermediate list
in memory.  For large custom password files, this could be
burdensome.

This change takes advantage of the fact that the file object
is iterable and maps a lambda over its lines, then takes the
set of the results.",bsolomon1124,None,2019-05-19T22:15:18Z,2019-05-27T10:07:37Z
11390,Fixed #30491 -- Clarified when save() on object with pk executes INSERT.,"Ticket: https://code.djangoproject.com/ticket/30491

The docs for 'How Django knows to UPDATE vs. INSERT'
do not make any mention of a potentially confusing condition,
which is that updating a PK followed by a call to `.save()`
will always result in an INSERT rather than an UPDATE.

While this note is present in the primary key docstring
itself, it would be worthwhile to duplicate it to this section
as a gotcha.

See also: https://stackoverflow.com/q/56212145/7954504",bsolomon1124,None,2019-05-19T21:53:52Z,2019-05-28T11:05:37Z
11389,Fixed #28763 -- Allowed overriding the session cookie age with SessionStore.get_session_cookie_age().,Add test for https://github.com/django/django/pull/9318,hramezani,None,2019-05-19T20:18:28Z,2019-05-21T07:08:44Z
11388,WIP/RFC: Cache model state renders in migrations,"(This PR is the result of some fruitful work during the DjangoCongress JP 2019 sprint day)

 Model state rendering happens a lot in larger migrations, but for the most part the resulting models are the same. this tries to reduce the amount of work that needs to happen for larger migration work (notably happens during testing)

For the stats on this: on my 2017 Macbook Pro, on what I would call a ""decently large"" project (241 models over 89 apps, 492 migrations), the total run time of migrating went from 230 seconds to 42 seconds (averaged over a lot of runs). The cache hit rate on this is roughly 90% (for a full run I found:
```
CACHE HITS  63867
CACHE MISSES  5985
```
)

So this makes the migration step during a test in CI _much_ faster for us. But it obviously won't be a huge deal for migrating in production, since one rarely runs that many migrations in production.

I'm torn between performance and potentially missing an issue about correctness here, but I think this change would make sense at least behind some ""useful for testing"" flag.

(I am going to post something in the developers mailing list in a bit with some more context/other improvements I think are possible in this space in a bit)",rtpg,None,2019-05-19T13:55:27Z,2020-01-03T14:02:35Z
11387,Fixed #28944 - allow select_for_update(of) in values() queries,"Ticket: [#28944](https://code.djangoproject.com/ticket/28944)
Hi, I was trying to understand this ticket and I've noticed that when we use `values` or `values_list` after `select_related`, `set_values` set `self.select_related` as False. I removed this line and I have not encountered a problem except all column return in result. `get_related_selections` uses `get_default_columns` to append the columns into `select_fields`. To fix this, I added a case.
Is this appropriate? Does remove `self.select_related = False` line cause a problem?",cansarigol,None,2019-05-19T10:47:31Z,2019-12-30T06:45:17Z
11386,Fix #99999 -- Add a shortcut function to make toast.,,chaudharychandan,None,2019-05-18T16:07:40Z,2019-05-18T16:11:19Z
11385,Fixed #23559 - Prevent non-superusers from granting superuser rights,"I recently found that non-superuser staff users with `auth.change_user` permission can turn themselves into superusers. A [similar issue](https://code.djangoproject.com/ticket/23559) was brought up a few years ago, and was eventually resolved by adding a small comment in the documentation. Having used Django for years, this was a big surprise for me.

I think it's important for Django to provide a better default and prevent this case. I personally can't think of any reason why anyone would want non-superusers to be able to turn themselves, or any user, to superusers.",hakib,None,2019-05-18T11:54:07Z,2020-01-06T10:39:40Z
11384,Fixed #26192 -- Added control that removing constants from ordering.,Ticket: [#26192](https://code.djangoproject.com/ticket/26192),cansarigol,None,2019-05-18T10:10:12Z,2019-05-28T13:27:49Z
11383,Fixed #28147 -- Fixed loss of assigned parent when saving child after parent.,https://code.djangoproject.com/ticket/28147,xmeowmeowx,None,2019-05-18T03:42:51Z,2019-05-21T08:39:30Z
11382,Ticket/28147,https://code.djangoproject.com/ticket/28147,xmeowmeowx,None,2019-05-18T02:21:49Z,2019-05-18T02:43:30Z
11381,fixed #30489 — Django Rasterfield deserialization with pixeltype flags,Fixing https://code.djangoproject.com/ticket/30489,ivorbosloper,None,2019-05-17T19:56:30Z,2020-03-03T19:15:05Z
11380,Fixed #30488 -- Removed redundant Coalesce call in SQL generated by SearchVector.,… wrapper,thomasina-lee,None,2019-05-17T14:37:08Z,2019-05-20T07:13:32Z
11378,Django Unchained,,iShoma,None,2019-05-17T11:42:05Z,2019-05-17T11:46:13Z
11377,Fixed #30463 -- Fixed crash of deprecation message when Meta.ordering contains expressions.,"This solves the error raised when `self._meta_ordering` encountered OrderBy instances in `.join()` function. I've used regex function and python replace method to convert the string such that quotation marks are at the desired place and, the string remains in the form of real source code compatible with `order_by()`.

I'd appreciate any cleaner solution than this one and would be happy to improve the code.  ",ruchit2801,None,2019-05-17T07:53:01Z,2019-05-18T18:08:07Z
11376,Fixed #30486 -- Fixed the default value of Aggregate.distinct and updated example of custom aggregate functions.,I'm not sure that the line `# template = '...' # write it if you need to change the template` is correct,VVyacheslav,None,2019-05-16T16:33:30Z,2019-06-11T10:02:30Z
11375,s/issubclass(type(\(\w*\))/isinstance($1/g,a 'draft' PR just to run the test suite - and see if this actually makes a difference for @adamchainz,graingert,None,2019-05-16T14:28:08Z,2019-05-16T15:11:17Z
11374,Fixed #30485 -- Fixed django.utils.http.urlencode when doseq=False.,This makes the behavior more like the standard library version in the non-iteration value case,jlubcke,None,2019-05-16T13:42:34Z,2019-05-24T15:15:34Z
11373,Fixed #30486 -- Updated custom Count aggregate example to use allow_distinct.,,VVyacheslav,None,2019-05-16T11:18:42Z,2019-05-16T15:04:41Z
11372,formset.errors can be out of sync with formset.forms,"If you delete a form in a formset you now a situation where len(formset.forms) != len(formset.errors). But the documentation for formset.errors says ""Return a list of form.errors for every form in self.forms."". To keep them in sync, insert an empty dict for deleted entries. 

The workaround is to never use formset.errors but instead get the form from formset.forms and then use the errors property from that form.",boxed,None,2019-05-16T07:50:19Z,2019-05-16T18:41:13Z
11371,Fixed #30483 -- Switched test requirement to psycopg2 package.,https://code.djangoproject.com/ticket/30483#ticket,jdufresne,None,2019-05-16T00:42:49Z,2019-06-07T15:42:49Z
11370,Make it very clear where LOGGING setting goes - be consistent,Only one of the code blocks had the filename caption. Added it to more.,funkybob,None,2019-05-15T23:27:24Z,2019-05-16T14:51:37Z
11369,Fixed #30482 -- Prevented unnecessary evaluation of lookup.queryset in prefetch_related_objects().,"`prefetch_related_objects` was inadvertently evaluating `lookup.queryset` when there was a bad prefetch ordering, which is unnecessary and could cause queries matching very large numbers of rows, or whole tables.

When encountering a prefetch it has already seen and checking whether to throw the ""lookup was already seen with a different queryset"" `ValueError`, `prefetch_related_objects` will inadvertently evaluate `lookup.queryset`. For example:
```
foo = Foo.objects.create()
prefetches = [
    'bar',
    Prefetch('bar', queryset=Bar.objects.filter(my_field=True))
]
prefetch_related_objects([foo], *prefetches)
```
Right before it throws the `ValueError`, the above code will execute the full unfiltered query `Bar.objects.filter(my_field=True)`. This may match a very large number of rows (or a whole table), since it is not restricted to `Bars` related to the specific `foo`. In our case this led to the query timing out and the page returning a 504 without the code ever actually reaching the `ValueError`.",iainwatts,None,2019-05-15T23:20:24Z,2019-05-16T19:43:25Z
11368,Fixed #27635 -- Used secrets module in django.utils.crypto.,"https://code.djangoproject.com/ticket/27635

This is an alternate pull request following on from https://github.com/django/django/pull/11357#issuecomment-492839409.

The first commit fixes the fallback in the absence of a secure pseudo-random number generator and adds a test. The second commit switches over to using the `secrets` module. And the (optional) third commit drops support for the fallback given that it didn't work before the first commit fixed it anyway. We could remove it as I'm not aware of any complaints that this never worked.",pope1ni,None,2019-05-15T22:05:06Z,2019-05-20T12:32:02Z
11367,[donotmerge] testing jenkins,This is to test jenkins PR integration,apollo13,None,2019-05-15T15:51:20Z,2019-05-15T16:13:29Z
11366,Fix mis-capitalisation in comment,,allyjweir,None,2019-05-15T08:49:54Z,2019-05-15T10:15:00Z
11365,Do not require npm installed for JavaScript tests,"Now we use nodeenv for JavaScript test running via `tox -e javascript`
to not force developers to install Node.js for tests execution.

Closes-Bug: #30478",e0ne,None,2019-05-15T06:50:15Z,2019-05-15T07:22:20Z
11364,Modelformset in Generic Class View,"While creating a modelformset , django documentation is only providing information using a FBV . Validating the formset is a difficult task , a flexible workaround is djang-extra-views . It would be better if documentation can provide much information regarding the modelformset in generic CBV in a flexible format similar to below one in django-extra-views. 
```python
from extra_views import FormSetView
class ItemFormSetView(ModelFormSetView):
    model = Service
    template_name = 'service_formset.html'
```",joeldeleep,None,2019-05-14T04:44:17Z,2019-05-14T04:55:05Z
11363,Changed docs to link to Python's description of iterable.,"Inspired by the discussion in PR #11330. Rather than describing the Python term ""iterable"" link to Python's description.",jdufresne,None,2019-05-14T01:53:42Z,2019-05-17T15:43:44Z
11362,Changed tuple choices to list in docs.,"I'll copy @spookylukey great reasoning from PR  #11267 with minor adaptations. Credit to Luke for the write up.

---

Choices are documented as accepting any iterable.

In docs, we should use lists for homogeneous sequences and tuples for ""namedtuples without names"" i.e. sequences where each item has a different meaning. Because:

1. This is how we already [decided](https://groups.google.com/d/msg/django-developers/h4FSYWzMJhs/_2iVc4qgfsoJ) to do it, and most things have already been cleaned up that way, …
2. New code/docs are written that way e.g. [Options.constraints](https://docs.djangoproject.com/en/dev/ref/models/options/#django.db.models.Options.constraints).
3. That's the way [Guido intended](https://marc.info/?l=python-dev&m=107666578526990&w=2) :-)

So in example code, choices should be a list of tuples.
",jdufresne,None,2019-05-14T01:37:02Z,2019-06-07T15:42:52Z
11361,Refs #28593 -- Changed url() to path() in comments following URL routing changes.,,xi,None,2019-05-13T12:22:38Z,2019-05-13T16:30:52Z
11360,Fixed #30449  -- Fixed ordering of admin.RelatedFieldListFilter.,"Check [#30449](https://code.djangoproject.com/ticket/30449)

Refactored admin.RelatedFieldListFilter and admin.RelatedOnlyFieldListFilter
to respect ordering defined in related model admin. Refactored
Field.get_choices to fallback to default model ordering.",zeyneloz,None,2019-05-12T23:02:39Z,2019-05-22T11:29:40Z
11359,Fixed #30446 -- Resolved Value.output_field for stdlib types. ,,charettes,None,2019-05-12T21:29:57Z,2020-07-15T14:00:17Z
11358,Fixed #26192 -- Added control for the value expression is in both order_by  and select clause in the same query.,Ticket: [#26192](https://code.djangoproject.com/ticket/26192),cansarigol,None,2019-05-12T18:05:49Z,2019-05-17T14:21:01Z
11357,Fixed #27635 -- Used secrets module in django.utils.crypto.,,claudep,None,2019-05-12T14:45:54Z,2019-12-27T10:09:49Z
11356,Fixed #30436 -- Added check that on_delete is callable in ForeignKey and OneToOneField.,https://code.djangoproject.com/ticket/30436,xmeowmeowx,None,2019-05-12T11:00:10Z,2019-05-13T06:17:06Z
11355,Fixed #28816 -- Prevented silencing data loss when decreasing CharField.max_length on PostgreSQL.,https://code.djangoproject.com/ticket/28816,hramezani,None,2019-05-11T15:32:13Z,2019-05-21T12:37:40Z
11354,Fixed #28289 -- Fixed crash of RawSQL annotations on inherited model fields.,Ticket : [#28289](https://code.djangoproject.com/ticket/28289),cansarigol,None,2019-05-11T12:43:07Z,2019-07-11T07:13:23Z
11353,Fixed #30459 - Delegated hide/show JS toggle to parent div.,https://code.djangoproject.com/ticket/30459,claudep,None,2019-05-11T10:41:23Z,2019-06-12T10:05:44Z
11352,Fixed #28936 - Unescape regex escapes outside groups in simplify_regex,,okcleary,None,2019-05-11T00:05:51Z,2020-09-08T08:08:03Z
11351,psycopg2 v2.8 dynamic table descriptions.,Reimplementing dynamic table description discovery while maintaining support for psycopg2 2.8.,allanbunch,None,2019-05-10T15:12:50Z,2019-05-10T16:59:29Z
11350,Changed poll_id to poll_ids in examples of custom management commands.,"On line 52 in docs/howto/custom-management-commands.txt, the parser adds an argument - 
```python
parser.add_argument('poll_id', nargs='+', type=int)
```
And references it on line 55, to loop through the ids provided via the command
```python
for poll_id in options['poll_id']:
```
Since it's multiple ids that are provided through the command line, it makes more sense to name the argument `poll_ids` signifying plural.",mentix02,None,2019-05-10T12:41:28Z,2019-05-20T08:44:55Z
11349,Fixed #30472 -- Added Argon2id support and made it the default variety of Argon2PasswordHasher.,,fengsi,None,2019-05-10T10:29:39Z,2020-06-15T14:44:38Z
11348,Fixed #30470 -- Added assertHTMLEqual() support for all self closing tags.,"Support for the following tags was added: `area`, `embed`, `param`, `track`, and `wbr`.

The full list of self closing tags is documented at:

https://html.spec.whatwg.org/#void-elements

https://code.djangoproject.com/ticket/30470",jdufresne,None,2019-05-10T00:30:10Z,2019-06-07T15:42:52Z
11346,Fixed trivial source comment typo,Found via `codespell`,luzpaz,None,2019-05-09T14:46:41Z,2019-05-09T21:13:55Z
11345,Fixed #30468 -- Fixed assertHTMLEqual() to handle all ASCII whitespace in a class attribute.,https://code.djangoproject.com/ticket/30468,jdufresne,None,2019-05-09T14:21:35Z,2019-05-10T00:13:47Z
11344,Refs #27804 -- Used subTest() in HTMLEqualTests.test_self_closing_tags.,,jdufresne,None,2019-05-09T13:57:49Z,2019-05-10T00:13:47Z
11343,Refs #30399 -- Made assertHTMLEqual normalize character and entity references.,,jdufresne,None,2019-05-08T13:29:56Z,2019-05-09T14:00:01Z
11342,Refs #30462 -- Added test for conditional aggregation on annotated subquery.,,felixxm,None,2019-05-08T09:00:39Z,2019-05-08T09:29:29Z
11341,Fixed #30461 -- Added pathlib.Path support for `path` parameter for `GeoIP2`.,,lsnk,None,2019-05-08T05:10:59Z,2019-08-11T16:21:31Z
11339,Fixed #29338 -- Allowed using union query in Subquery,,EugeneKovalev,None,2019-05-08T00:23:10Z,2019-08-21T08:10:56Z
11338, Fixed #30316 -- Added source code link to the default logging configuration in logging docs.,"Full description in https://code.djangoproject.com/ticket/30316

Since the link corresponds to the default logging I decided to put it there, since the link to configure the logger is reachable trough the default logger.",approdriguez,None,2019-05-07T19:25:44Z,2019-05-15T10:37:39Z
11336,Removed redundant check from StaticFilesHandler.,"As per https://github.com/django/django/pull/11209#discussion_r280065461 the `_should_handle()` check is already performed in `__call__()`. 

Both calls were added without tests in 8e96584f6363cba7cbbac41771a4318dde9f46dd 9 years ago. 
Looks like overkill. Nothing fails removing the 2nd call from `get_response()`, which is only called via `__call__()`.",carltongibson,None,2019-05-07T10:42:17Z,2019-05-08T07:26:19Z
11335,[WIP] Fixed #30398 -- Added CONN_HEALTH_CHECKS db setting,"This is a proof of concept solution for [ticket 30398](https://code.djangoproject.com/ticket/30398), with no docs or tests yet.

Introduce a `CONN_HEALTH_CHECKS` DB setting to Django which can be used to enable database connection health checks for Django's [persistent DB connections](https://docs.djangoproject.com/en/2.2/ref/databases/#persistent-connections).

If it's set to `False` (default), the behavior is the same as without this change.

If it's set to `True`, then health checks are enabled. They work as
follows (assuming an already existing ""persistent"" DB connection):

- Before each connection reuse, perform a connection test
  (eg. `SELECT 1` query in case of PostgreSQL).

- This only happens once per request, regardless of how many DB
  transactions will be performed during the handling of the request.

- This only happens for ""requests"" that do use the database.

- If the check fails, close the connection and create a new one.

More info about the rationale and motivation in the [ticket 30398](https://code.djangoproject.com/ticket/30398).

----
This is a simpler alternative to #11311 (thanks @apollo13 for the suggestion to drop the checks based on the timer), with the general approach being the same.",suligap,None,2019-05-07T09:56:31Z,2020-04-30T15:18:47Z
11334,Fixed #30453 -- Fixed crash of simple_tag() and inclusion_tag() when function is wrapped.,Functions unwrapped before the getting fullargspec part.,isidentical,None,2019-05-07T02:19:11Z,2019-05-17T08:41:02Z
11333,Fixed #29744 -- Fixed caching of URLResolver for a default URLconf.,"Full description of the problem here:
https://code.djangoproject.com/ticket/29744

`URLResolver._populate` could get called twice under certain conditions,
due to differences in how the `get_resolver` function is called. With a
large number of routes (like we have at Instagram), this can be rather
expensive.",bgw,None,2019-05-06T21:00:53Z,2019-07-03T10:15:26Z
11332,Remove unused code and duplicate import,"Remove unused code and duplicate import.

ref : https://lgtm.com",sanchjat,None,2019-05-06T18:43:30Z,2019-05-07T05:55:50Z
11331,Fixed #30440 -- Prevented any_selected() in SelectFilter2.js from leaving temporary required attribute.,"Fixes bug on browsers which do support the required attribute but not the `:valid` pseudo-selector

Fixes https://code.djangoproject.com/ticket/30440#ticket",BenMusch,None,2019-05-06T18:24:51Z,2019-05-07T06:20:42Z
11330,Fixed #30437 -- Clarified that urlpatterns can be a sequence.,https://code.djangoproject.com/ticket/30437/,joncasdam,None,2019-05-06T15:55:59Z,2019-05-14T04:53:26Z
11329,Fixed #30444 -- Moved SQL generation for tables to BaseDatabaseSchemaEditor.table_sql().,"This extracts the logic for generating the `CREATE TABLE` DDL from `BaseDatabaseSchemaEditor.create_model` into a `table_sql` method—which also returns a tuple containing `(sql, params)`.

Something I'm slightly unhappy with is how the new `table_sql` method appends to `self.deferred_sql`. However, this pattern is already used in the `_unique_sql` method, so it's not entirely without precedent.",robgolding,None,2019-05-06T14:21:20Z,2019-05-07T08:49:59Z
11328,Fixed typo in docs/ref/django-admin.txt.,,vlt,None,2019-05-06T13:43:05Z,2019-05-09T07:53:27Z
11327,Fixed #30447 - Added 'is_in_european_union' in GeoIP2.city() dict.,"Maxmind data supplies european union information as part of both the free and paid database sets.
This isn't accessible from the GeoIP2 city dict, despite it being available.",c23gooey,None,2019-05-06T01:05:33Z,2019-05-07T11:31:44Z
11326,Ticket #30443 Format negative duration for duration_string,,udbhavgovil,None,2019-05-05T11:53:48Z,2019-05-06T04:59:19Z
11325,Readded comment about the default params of cursor.execute().,"It was removed in 728548e483, but is worth keeping - given that it still
applies, which I have not checked.

/cc @aaugustin ",blueyed,None,2019-05-05T05:50:48Z,2019-05-07T06:24:49Z
11324,Removed deprecated license-file from setup.cfg.,"Starting with wheel 0.32.0 (2018-09-29), the ""license-file"" option is deprecated.

https://wheel.readthedocs.io/en/stable/news.html

The wheel will continue to include LICENSE, it is now included automatically:

https://wheel.readthedocs.io/en/stable/user_guide.html#including-license-files-in-the-generated-wheel-file",jdufresne,None,2019-05-05T01:45:58Z,2019-05-09T14:01:57Z
11323,Fixed #29056 -- Fixed HTML5 validation of required SelectDateWidget.,[https://code.djangoproject.com/ticket/29056](https://code.djangoproject.com/ticket/29056),hramezani,None,2019-05-04T23:30:06Z,2019-05-08T11:52:34Z
11322,Removed unnecessary import,"Removed unnecessary import.

As `functools` is already imported so instead of importing partial again `from functools import partial` . we can use it from `functools`.

",sanchjat,None,2019-05-04T17:57:26Z,2019-05-07T05:33:29Z
11321,Fixed #30443 -- Format negative durations more intuitively.,"See https://code.djangoproject.com/ticket/30443 for rationale.

Basically, `duration_string(parse_duration(""-00:00:05""))` should not be `-1 23:59:55`.",rgov,None,2019-05-04T17:47:04Z,2019-05-06T05:11:31Z
11320,Removed unnecessary line in DebugLexer.tokenize().,Removed unnecessary code/variable which is not in use.  Ref  https://lgtm.com/projects/g/django/django,sanchjat,None,2019-05-04T17:26:36Z,2019-05-07T11:34:06Z
11319,Fixed #30442 -- Added validators to auth/password_validation.py.,"Ticket: https://code.djangoproject.com/ticket/30442

Added the following validator classes:

NoAmbiguousCharactersValidator

    Validate that the password does not contain ambiguous characters.
    The default set of ambiguous characters is:
    { 0, 1, I, i, l, |, O, o }

NoRepeatSubstringsValidator

    Validate that the password does not contain repeated substrings
    longer than a given threshold.

NoSequentialCharsValidator

    Validate that the password does not contain sequential repeated
    characters.

ShannonEntropyValidator

    Validate that the password is sufficiently complex via the
    Shannon Entropy score.

Also added an __all__ dunder to contrib/auth/password_validation.py
that contains both top-level module functions and the full set
of validator classes.

Also added respective test for each of the 4 new classes in
auth_test/test_validators.py.  Each, at a minimum, tests
`.validate()` and `.get_help_text()` in a manner similar to the
existing tests from that module.

--------------------------------------

Why add these classes?

These classes were added in the spirit of _more validation is almost
always better._  These classes `.validate()` are meant to be
straightforward, quick, and lightweight.  They offer checks that are
not captured by the existing validators.

One piece of food for thought is to more thoroughly document that
rules-based password validation can be a fool's errand depending on
how you structure it.  These days, the consensus seems to be moving
towards the conclusion that users should no longer focus on passwords
to passphrases.  The idea here is that *entropy is king*:
a 38-character all-lowercase password could have 170 bits of entropy
but fail a basic ""mixed case letters"" test.  In other words, all of
the validators are best used in combination, and it should be
advertised everywhere possible that they provide _negative_ checks
in many cases rather than positive ones.",bsolomon1124,None,2019-05-04T14:15:28Z,2019-05-06T09:26:40Z
11318,[2.2.x] Fixed #30380 -- Handled bytes in MySQL backend for PyMySQL support.,"Backport of a41b09266dcdd01036d59d76fe926fe0386aaade from master.
Backport of 994a00eb70969e4fd8f7a30a95122e2f0411ff48 from master.

Message from felixxm at [PR 11225](https://github.com/django/django/pull/11255):

After this change we have still 870 errors in our test suite with PyMySQL.
Partly reverts efd8a82e268a82b3ad0be77bd5b4548c30bcb4d7

Ticket [30380](https://code.djangoproject.com/ticket/30380)",eavictor,None,2019-05-04T08:55:36Z,2019-05-04T12:03:13Z
11317,auth/base_user.py: Used staticmethod appropriately,"- Converted `BaseUserManager.normalize_email`, `BaseUserManager.make_random_password`, and `AbstractBaseUser.normalize_username` to staticmethods
- All three make more sense as staticmethods given that they don't reference either the instance or class (conventionally `self/cls`, respectively; one of them had a `cls` param but then didn't actually use it.",bsolomon1124,None,2019-05-03T19:44:40Z,2019-05-07T10:18:35Z
11315,Fixed NonQueryWindowTests.test_unsupported_backend() on MySQL.,See [django-docker-box build](https://travis-ci.com/orf/django-docker-box/jobs/197366255) for details.,felixxm,None,2019-05-03T11:20:07Z,2019-05-03T11:49:14Z
11313,Refs #11929 -- Fixed ordering of test YAML dumps.,Thanks Nick Pope for the review.,felixxm,None,2019-05-03T08:49:59Z,2019-05-03T09:07:31Z
11312,Removed unused YamlSerializerTestCase.fwd_ref_str.,"Unused since its introduction in febd5aeec604198b2e374a33552b0c365096fd45.

Related with #11285 .",felixxm,None,2019-05-03T07:33:04Z,2019-05-03T08:00:10Z
11311,[WIP] Fixed #30398 -- Added CONN_HEALTH_CHECK_DELAY db setting,"This is a proof of concept solution for [ticket 30398](https://code.djangoproject.com/ticket/30398), with no docs or tests yet.

Introduce a `CONN_HEALTH_CHECK_DELAY` DB setting to Django which can be used to configure database connection health checks for Django's [persistent DB connections](https://docs.djangoproject.com/en/2.2/ref/databases/#persistent-connections).

- If it's set to `None` (default), the behavior is the same as without this change.

- Otherwise, it expects an integer with a number of seconds after which the connection should be health checked before it's reused (`0` for ""before every reuse"").

When checks are enabled, it works as follows (assuming an already existing ""persistent"" DB connection):

- Before each connection reuse, perform a connection test (eg. `SELECT 1` query in case of PostgreSQL).

- This only happens if last check was performed more than `CONN_HEALTH_CHECK_DELAY` seconds ago.

- This only happens once per request, regardless of how many DB transactions will be performed during the handling of the request.

- This only happens for ""requests"" that do use the database.

- If the check fails, close the connection and create a new one.

More info about the rationale and motivation in the [ticket 30398](https://code.djangoproject.com/ticket/30398).",suligap,None,2019-05-01T19:59:20Z,2019-05-07T09:59:52Z
11310,[WIP] Fixed #26355 -- Added API to register different expressions for operator/field combo.,Cleaner version of https://github.com/django/django/pull/6395 ,auvipy,None,2019-05-01T11:02:44Z,2020-07-22T12:53:09Z
11309,Used time.monotonic() instead of time.time() where applicable.,"`time.monotonic()` [1] available from Python 3.3:

- Nicely communicates a narrow intent of ""get a local system monotonic
  clock time"" instead of possible ""get a not necessarily accurate Unix
  time stamp because it needs to be communicated to outside of this
  process/machine"" when `time.time()` is used.

- Its result isn't affected by the system clock updates.

There are three classes of `time.time()` uses changed to
`time.monotonic()` by this change:

1. Most common is measuring time taken to run some code.

2. In case of django/db/backends/base/base.py -- setting and checking a
   ""close_at"" threshold for for persistent db connections.

[1] https://docs.python.org/3/library/time.html#time.monotonic",suligap,None,2019-04-30T21:37:27Z,2019-05-08T16:43:14Z
11308,Fixed #30409 -- Allowed using foreign key's attnames in unique/index_together and Index's fields.,"See [#30409](https://code.djangoproject.com/ticket/30409)
Adjusted model checks to allow field attname usage for `indexes`,
`index_together` and `unique_together` in model Meta class.",zeyneloz,None,2019-04-30T10:08:37Z,2019-05-01T09:53:11Z
11307,Refs #30426 -- Made security headers active in default project template,[Ticket 30426](https://code.djangoproject.com/ticket/30426),adamchainz,None,2019-04-30T09:55:43Z,2019-08-18T10:18:33Z
11306,Fixed #30408 -- Fixed crash when adding check constraints with LIKE operator on Oracle and PostgreSQL.,"The LIKE operator wildcard generated for contains, startswith, endswith and
their case-insensitive variant lookups was conflicting with parameter
interpolation on CREATE constraint statement execution.

Ideally we'd delegate parameters interpolation in DDL statements on backends
that support it but that would require backward incompatible changes to the
Index and Constraint SQL generating methods.

Thanks David Sanders for the report.",charettes,None,2019-04-30T03:33:24Z,2019-04-30T13:34:20Z
11305,Refs #27685 -- Logged unexpected Watchman autoreloader errors.,,blueyed,None,2019-04-29T21:15:46Z,2019-05-15T09:36:28Z
11303,Ignored pywatchman.SocketTimeout in Watchman autoreloader.,"These are expected with the non-blocking loop.

Only with other errors, e.g. `WatchmanError('empty watchman response')`
after killing `watchman` need to check the server status.",blueyed,None,2019-04-29T20:53:31Z,2019-05-05T07:36:16Z
11302,Fixed #30423 -- Made PasswordResetTokenGenerator's timeout extendable,"[Ticket 30423](https://code.djangoproject.com/ticket/30423)

Added a `timeout_days` class attribute to `PasswordResetTokenGenerator` which is used in place of `settings.PASSWORD_RESET_TIMEOUT_DAYS` . This enables subclasses to easily override the value.

Note: I moved and renamed the mocked version of `PasswordResetTokenGenerator` used in `auth_tests.test_tokens.TokenGeneratorTest.test_timeout` so it can be reused.",ahumeau,None,2019-04-29T10:43:43Z,2019-04-30T08:07:19Z
11301,Fixed PendingDeprecationWarning in select_for_update test.,"When Python warnings are with the -Wa command line argument, appeared
as:

    .../django/tests/select_for_update/tests.py:378: PendingDeprecationWarning: isAlive() is deprecated, use is_alive() instead
      self.assertFalse(thread.isAlive())

Thread.is_alive() has been available since Python 2.6.",jdufresne,None,2019-04-28T14:51:45Z,2019-05-09T14:02:29Z
11300,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,Improves readability and follows a consistent pattern across tests.,jdufresne,None,2019-04-28T13:21:22Z,2019-05-09T14:02:28Z
11299,Fixed #30412 -- Fixed crash when adding check constraints with OR'ed condition on Oracle and SQLite.,Ticket: [#30412](https://code.djangoproject.com/ticket/30412),cansarigol,None,2019-04-28T11:15:08Z,2019-04-30T11:59:33Z
11298,Fixed #30421 -- Allowed symmetrical intermediate table for self-referential ManyToManyField.,Ticket https://code.djangoproject.com/ticket/30421,nadege,None,2019-04-28T09:13:45Z,2019-06-21T15:50:11Z
11297,Simplified Field.contribute_to_class().,Available since fb48eb05816b1ac87d58696cdfe48be18c901f16.,jdufresne,None,2019-04-27T21:13:02Z,2019-05-09T14:02:25Z
11296,Fixed #30419 -- Favored Meta.indexes over Meta.index_together in optimization docs.,Ticket - https://code.djangoproject.com/ticket/30419,akki,None,2019-04-27T16:49:21Z,2019-05-22T06:49:31Z
11295,Fixed #20629 -- Rephrased custom user models admonition.,https://code.djangoproject.com/ticket/20629,rixx,None,2019-04-27T16:34:15Z,2019-04-30T07:50:14Z
11294,Fixed #20122 -- Made pluralize template filter return '' on invalid input.,"``pluralize`` wasn't correctly documented up until now, so I fixed that first.

https://code.djangoproject.com/ticket/20122",rixx,None,2019-04-27T16:11:05Z,2019-05-03T09:54:35Z
11293,Fixed #30395 -- Doc'd a limitation of ModelForm.Meta.widgets.,,rixx,None,2019-04-27T15:50:10Z,2019-05-17T10:55:54Z
11292,Fixed #30418 -- Added --skip-checks argument to management commands.,https://code.djangoproject.com/ticket/30418,jdufresne,None,2019-04-27T14:23:07Z,2019-05-09T14:02:22Z
11290,Fixed typo in test names.,,blueyed,None,2019-04-26T23:40:58Z,2019-04-27T07:51:05Z
11289,WIP/RFC: refactor/revisit tests/runtests,"This is required/useful to use with other test runners then, e.g.
pytest.",blueyed,None,2019-04-26T22:39:58Z,2020-09-16T18:46:29Z
11287,Fixed #30411 -- Improved display of tracebacks in technical 500 text template.,I'd also like this for curl then: https://code.djangoproject.com/ticket/1458#comment:2,blueyed,None,2019-04-26T17:44:35Z,2019-07-11T09:32:48Z
11286,Added tests for queries log in CursorDebugWrapper.executemany().,Related with #10920.,felixxm,None,2019-04-26T15:45:22Z,2019-04-29T08:38:21Z
11285,Fixed #11929 -- Make sure YAML output order is helpful,"By adopting Python 3.6+, this was already happening, but this test makes
sure we'll have no regression.

https://code.djangoproject.com/ticket/11929",rixx,None,2019-04-26T10:23:23Z,2019-05-03T08:47:34Z
11284,Fixed #28588 -- enable finding out about nonexistent permissions by s…,…uperusers.,moshe742,None,2019-04-26T08:17:05Z,2019-07-01T10:08:49Z
11283,Fixed #30351 -- Handled pre-existing permissions in proxy model permissions data migration.,"Regression in 181fb60159e54d442d3610f4afba6f066a6dac05.

This wraps the permission updating step of the migration in a transaction, so that we can handle it gracefully. It then **just** outputs a warning to the console. 

Thus: 

```
(tmp-54f72d90aa2a376) ~/Desktop/ticket_30351 $ ./manage.py migrate auth
Operations to perform:
  Apply all migrations: auth
Running migrations:
  Applying auth.0011_update_proxy_permissions...
        A problem arose migrating proxy model permissions for test_one_person to test_one_testmodel.
            Permission(s) for test_one_testmodel already existed.
            Codenames Q: (AND: ('codename__in', ['add_testmodel', 'change_testmodel', 'delete_testmodel', 'view_testmodel']))

        Ensure to audit ALL permissions for test_one_person and test_one_testmodel.
 OK
(tmp-54f72d90aa2a376) ~/Desktop/ticket_30351 $ ./manage.py migrate auth 0010_alter_group_name_max_length
Operations to perform:
  Target specific migration: 0010_alter_group_name_max_length, from auth
Running migrations:
  Rendering model states... DONE
  Unapplying auth.0011_update_proxy_permissions... OK
```

* I write to `stdout` because `stderr` doesn't put the message in the right place. 
* The reverse migration **doesn't** hit the error, because we never updated (it was rolled back) when migrating forwards. (But it would behave the same.) 

I'm not sure how much extra effort we can put in here to do clever things™. Beyond advising that users **audit** the permission (which we already did in the 2.2 release notes). I'm not sure we can safely handle all possible edge-cases. 

Happy to add more tests etc, but (again) I wasn't sure what was worth it, so I thought I'd open as-is to get feedback. (Thanks!)",carltongibson,None,2019-04-26T07:02:50Z,2019-04-27T19:08:29Z
11282,Fixed #30231 -- Fixed FilteredSelectMultiple widget verbose_name usage,"https://code.djangoproject.com/ticket/30231

I added the JS changes for updateSelectFilter made by Florian Schuler and added a Selenium test to verify the verbose_name was being showed correctly.",TeresaPartidaS,None,2019-04-25T23:48:18Z,2020-09-22T09:37:07Z
11281,Fixed #30400 -- Improved typography of user facing strings.,https://code.djangoproject.com/ticket/30400,jdufresne,None,2019-04-25T02:38:11Z,2019-07-06T17:09:34Z
11280,Fixed #30386 -- Added pk quoting for admin ForeignKey widgets,"[https://code.djangoproject.com/ticket/30386](https://code.djangoproject.com/ticket/30386)

 Refactored  `ForeignKeyRawIdWidget.label_and_url_for_value` method. It was not quoting the `pk` of related object when reversing change action url, which was causing problems if related model uses `CharField` as primary key and pk contains special characters like `_40`, `?a=b`.

Also added client side quoting for `RelatedFieldWidgetWrapper`, since url of change/delete icon should be changed whenever a new option is selected on RelatedField dropdown. 

I am not feeling that comfortable with keeping two functions doing same job both on backend and client side (`django.contrib.admin.utils.quote` and `/django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.quotePK()`.)
But it seemed less complex than passing all quoted PK s in context to template, using them for each dropdown option as html data attribute and building the url using this attribute.",zeyneloz,None,2019-04-24T23:57:42Z,2020-07-03T09:16:32Z
11279,Fixed #30397 -- Added app_label/class interpolation for names of indexes and constraints.,Ticket: [#30397](https://code.djangoproject.com/ticket/30397),cansarigol,None,2019-04-24T16:46:52Z,2019-07-08T13:20:16Z
11278,Fixed #30396 -- Added system checks for uniqueness of indexes and constraints names.,Ticket: [#30396](https://code.djangoproject.com/ticket/30396),cansarigol,None,2019-04-24T13:24:54Z,2019-05-02T07:52:10Z
11277,Refs #27753 -- Deprecated django.utils.text.unescape_entities().,"The function was undocumented and only required for compatibility with Python 2.

Use Python's html.unescape() instead -- available since Python 3.4.

https://docs.python.org/3/library/html.html#html.unescape

https://code.djangoproject.com/ticket/27753",jdufresne,None,2019-04-24T13:02:29Z,2019-05-09T14:01:55Z
11276,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,https://code.djangoproject.com/ticket/30399,jdufresne,None,2019-04-24T12:35:05Z,2019-05-09T14:02:19Z
11275,Fixed #30362 -- Noted partial indexes and constraints restrictions with abstract base classes.,Ticket [30362](https://code.djangoproject.com/ticket/30362).,felixxm,None,2019-04-24T11:00:44Z,2019-04-25T05:36:12Z
11274,Fixed #30947 -- Changed tuples to lists in model Meta options in django.contrib modules.,"The Django ""Model Meta options"" docs provide examples and generally point the reader to use lists for the `unique_together` and `ordering` options. Follow our own advice for contrib models.

More generally, lists should be used for homogeneous sequences of arbitrary lengths of which both `unique_together` and `ordering` are.

https://code.djangoproject.com/ticket/30947",jdufresne,None,2019-04-24T10:53:12Z,2019-11-05T14:13:16Z
11273,Refs #30241 -- Fixed BytesWarning emitted in test_translation tests.,"When running the Django test suite with the Python command line option `-b`, the following warnings are emitted:

    .../django/core/checks/translation.py:33: BytesWarning: str() on a bytes instance
      return [Error(E001.msg.format(tag), id=E001.id)]
    .../tests/check_framework/test_translation.py:49: BytesWarning: str() on a bytes instance
      Error(msg % tag, id='translation.E001'),
    .../django/core/checks/translation.py:42: BytesWarning: str() on a bytes instance
      for tag, _ in settings.LANGUAGES if not isinstance(tag, str) or not language_code_re.match(tag)
    .../tests/check_framework/test_translation.py:62: BytesWarning: str() on a bytes instance
      Error(msg % tag, id='translation.E002'),
    .../django/core/checks/translation.py:51: BytesWarning: str() on a bytes instance
      for tag in settings.LANGUAGES_BIDI if not isinstance(tag, str) or not language_code_re.match(tag)
    .../tests/check_framework/test_translation.py:75: BytesWarning: str() on a bytes instance
      Error(msg % tag, id='translation.E003'),

This occurs because a `bytes` object is formatted as string. Instead, format the invalid value to its repr, which is guaranteed to be a `str`.

Python docs on the `-b` command line option: https://docs.python.org/3/using/cmdline.html#cmdoption-b",jdufresne,None,2019-04-24T10:27:52Z,2019-04-24T13:33:08Z
11272,Removed redundant os.path.abspath() call.,"`os.path.realpath()` calls `os.path.abspath()` before returning:

https://github.com/python/cpython/blob/4f5a3493b534a95fbb01d593b1ffe320db6b395e/Lib/posixpath.py#L392
https://github.com/python/cpython/blob/4f5a3493b534a95fbb01d593b1ffe320db6b395e/Lib/ntpath.py#L523",jdufresne,None,2019-04-24T10:14:07Z,2019-05-09T14:02:19Z
11271,Removed unnecessary assignments immediately before a return.,"Simplifies the pattern:

```
var = <expression>
return var
```

To:

```
return <expression>
```",jdufresne,None,2019-04-24T09:54:56Z,2019-04-24T11:18:45Z
11270,Fixed #30393 -- Added validation of startapp's directory option.,https://code.djangoproject.com/ticket/30393,MyungSeKyo,None,2019-04-24T02:48:54Z,2019-04-25T07:17:40Z
11269,Simplified SessionMiddleware.process_response() a bit.,This makes it easier to follow.,blueyed,None,2019-04-22T21:44:05Z,2019-05-30T01:26:32Z
11267,Changed tuple Mate.unique_together/permissions to lists in docs.,"Currently docs for [Options.index_together](https://docs.djangoproject.com/en/dev/ref/models/options/#index-together) specifies a list of lists, while [Options.unique_together](https://docs.djangoproject.com/en/dev/ref/models/options/#unique-together) specifies tuple of tuples. It's a bit confusing when these are extremely similar conceptually. Internally, they are normalized using exactly the same routines, and both accept either lists or tuples.

In docs, we should use lists for homogeneous sequences and tuples for ""namedtuples without names"" i.e. sequences where each item has a different meaning. Because:

1. This is how we already [decided](https://groups.google.com/d/msg/django-developers/h4FSYWzMJhs/_2iVc4qgfsoJ) to do it, and most things have already been cleaned up that way, including most of the other things on the `Options` docs page (e.g. `ordering`, `get_latest_by`, `indexes`).
2. New code/docs are written that way e.g. [Options.constraints](https://docs.djangoproject.com/en/dev/ref/models/options/#django.db.models.Options.constraints).
3. That's the way [Guido intended](https://marc.info/?l=python-dev&m=107666578526990&w=2) :-)

So in example code, `unqiue_together` should be a list of lists. I didn't see the value in specifying it as ""list of lists or tuple of tuples"" (and list of tuples etc.) because it's an unnecessary complication, and it's probably best to be consistent with `index_together` docs. We've already got the checks framework to validate correct usage.

Similarly, [permissions](https://docs.djangoproject.com/en/dev/ref/models/options/#django.db.models.Options.permissions) should be a list of 2-tuples. 

One remaining item on that page which I haven't addressed is [default_permissions](https://docs.djangoproject.com/en/dev/ref/models/options/#django.db.models.Options.default_permissions). While it is documented as being a list, the default value is specified as a tuple. However, the default value in the code is actually a tuple (though it ought to be a list), and changing that value in the code potentially has backwards compatibility issues. The docs should accurately specify what the default is, so I have left that alone.

",spookylukey,None,2019-04-22T07:01:04Z,2019-04-24T08:44:24Z
11266,Extended watchman timeout for slower computers,"The watchman timeout was currently the default 1 second, causing it to timeout on slower computers.

Since the development server is not time-critical, I extended it to 5 seconds, which allows it to not fail on slower computers.",farid-fari,None,2019-04-21T20:27:33Z,2019-04-22T07:34:49Z
11265,Fixed #30349 -- Fixed QuerySet.exclude() on FilteredRelation.,"https://code.djangoproject.com/ticket/30349

Using annotated `FilteredRelations` will raise a `FieldError` when coupled with `exclude`. This is due to not passing filtered relation fields to the subquery created in `split_exclude`. 

I have rectified the issue by passing the filtered relation data to the newly created subquery.",xmeowmeowx,None,2019-04-21T12:57:28Z,2019-05-07T13:18:26Z
11264,[WIP] Fixed #28053 -- Support db_index=Index(),"Ticket: [#28053](https://code.djangoproject.com/ticket/28053)
this PR is the continuation of @mjtamlyn's [PR](https://github.com/django/django/pull/8322). First commit mostly from there. an effort to understand the subject.",cansarigol,None,2019-04-21T10:17:18Z,2020-03-02T08:07:19Z
11263,Fixed #30361 -- Increased the default timeout of watchman client to 5 seconds and made it customizable.,,Jacobkg,None,2019-04-20T19:21:50Z,2019-04-26T11:35:53Z
11262,minor corrections in docstring,,sodrooome,None,2019-04-20T18:45:34Z,2019-04-23T05:32:02Z
11261,Fixed typo in docs/internals/contributing/committing-code.txt.,,scop,None,2019-04-20T11:34:04Z,2019-04-22T07:18:28Z
11260,Fixed #30388 -- Made inspectdb generate OneToOneFields rather than ForeignKey(unique/primary_key=True).,,scop,None,2019-04-20T11:28:41Z,2019-04-25T13:51:17Z
11259,Refs #30380 -- Used cursor._executed in DatabaseOperations.last_executed_query() on MySQL.,"Regression in a41b09266dcdd01036d59d76fe926fe0386aaade.

Thanks Tobias Krönke for the report.",felixxm,None,2019-04-20T10:58:50Z,2019-04-21T10:17:12Z
11258,Fixed #30387 -- Enhanced docs CLI examples in Unit tests and Install Django on Windows.,https://code.djangoproject.com/ticket/30387,ramiro,None,2019-04-19T19:21:27Z,2019-04-23T08:04:20Z
11257,Fix old-style super call,Looks like this was missed  by #7905 when switching code to `super()`.,dsanders11,None,2019-04-19T11:10:03Z,2019-04-19T12:00:08Z
11256,Refs #25507 -- Added tests for using QuerySet.count() with a RawSQL annotation.,Fixed in 3f32154f40a855afa063095e3d091ce6be21f2c5,felixxm,None,2019-04-19T08:54:36Z,2019-04-19T09:40:24Z
11255,Fixed #30380 -- Handled bytes in MySQL backend for PyMySQL support.,"After this change we have still 870 errors in our test suite with PyMySQL.

This commit partly reverts efd8a82e268a82b3ad0be77bd5b4548c30bcb4d7.

Ticket [30380](https://code.djangoproject.com/ticket/30380).",felixxm,None,2019-04-19T08:34:05Z,2019-04-19T18:34:24Z
11254,Fixed #30385 -- Restored SearchVector(config) immutability.,"The usage of `CONCAT` introduced in 1a28dc to allow `SearchVector` to deal with non-text fields made the generated expression non-`IMMUTABLE` which prevents a functional index to be created for it.

Using a combination of `COALESCE` and `::text` makes sure the expression preserves its immutability.

Refs #29582.",charettes,None,2019-04-19T06:47:52Z,2019-04-23T13:34:38Z
11253,Refs #28762 -- Added test for aggregating over a function with ArrayField parameters.,"Fixed in d87bd29c4f8dfcdf3f4a4eb8340e6770a2416fe3.

Ticket [28762](https://code.djangoproject.com/ticket/28762).",felixxm,None,2019-04-18T10:50:51Z,2019-04-18T11:25:24Z
11252,Fixed #30362 -- Added control for unique index names.,Ticket: [#30362](https://code.djangoproject.com/ticket/30362),cansarigol,None,2019-04-18T10:18:51Z,2019-04-24T12:37:53Z
11251,Refs #28767 -- Added test for annotating Value() with empty list as an ArrayField.,"Fixed in 3af695eda24b874486ee8be7e0d729761b3bdc71.

Ticket [28767](https://code.djangoproject.com/ticket/28767).",felixxm,None,2019-04-18T09:13:25Z,2019-04-18T10:06:58Z
11250,"""default User model"" instead of ""default user""","""default user"" can be misunderstood as a default user _instance_.",ksze,None,2019-04-18T03:36:20Z,2019-04-24T05:57:13Z
11249,"More accurate terminology (""logger"" instead of ""logging handler"") in logging documentation.","A _logging handler_ should not be confused with a _logger_:

- The _logger_, not the _logging handler_, can be in a namespace;
- A _handler_ is merely assigned to one or more _loggers_, which can be in completely non-overlapping namespaces.
- The _logger_, and not the _handler_, ""catch[es] logging messages"".",ksze,None,2019-04-18T03:34:21Z,2020-01-09T14:27:35Z
11248,"More accurate terminology (""logger"" instead of ""logging handler"") in logging documentation.","A _logging handler_ should not be confused with a _logger_:

- The _logger_, not the _logging handler_, can be in a namespace;
- A _handler_ is merely assigned to one or more _loggers_, which can be in completely non-overlapping namespaces.
- The _logger_, and not the _handler_, ""catch[es] logging messages"".",ksze,None,2019-04-18T03:05:11Z,2019-04-18T03:31:30Z
11247,Fixed #30375 -- Added FOR NO KEY UPDATE support to QuerySet.select_for_update() on PostgreSQL.,"Added a no_key paremeter to select_for_update which makes SQL to compile
as ""[...] FOR NO KEY UPDATE"". This reduces lock contention in Postgres
when applying DML in rows referencing (via foreign key) a FOR UPDATE
locked row.

ticket-30375",mudetz,None,2019-04-17T15:09:14Z,2020-05-21T09:39:38Z
11246,[1.11.x] Refs #30375 -- Add NO KEY option for Postgres select_for_update,"Added a no_key paremeter to select_for_update which makes SQL to compile as ""[...] FOR NO KEY UPDATE"". This reduces lock contention in Postgres when applying DML in rows referencing (via foreign key) a FOR UPDATE locked row.",mudetz,None,2019-04-17T14:43:10Z,2019-04-17T14:58:05Z
11245,Fixed #26678 -- Doc'd that RelatedManager.add()/remove()/set() accepts the field the relation points to.,https://code.djangoproject.com/ticket/26678,rixx,None,2019-04-17T11:39:14Z,2019-05-07T08:21:46Z
11244,Fixed #30342 -- Removed a system check for LANGUAGES_BIDI setting.,"Alternative proposal to #11190 

For reviewers: This check was never part of a released version of Django. It only exists on current master and is part of what will become Django 3.0, so removing this only reinstates the behavior as it was for the last >10 years.",matthiask,None,2019-04-17T06:51:04Z,2019-04-26T09:52:39Z
11243,Updated SpatiaLite install instructions to suggest first package from recent Debian-based distributions.,,felixxm,None,2019-04-17T05:38:54Z,2019-04-17T05:57:10Z
11242,Update validators.py,,bukowa,None,2019-04-16T23:28:48Z,2019-04-16T23:49:11Z
11241,Fixed #21080 -- Ignored urls inside static files comments.,"Added comment blocks detection to prevent replacement of urls inside
css comments.",n6g7,None,2019-04-16T19:54:47Z,2020-03-17T09:24:52Z
11240,Fixed #30370 -- Added support for ssl options to postgres dbshell,,rixx,None,2019-04-16T09:54:20Z,2019-04-16T09:56:06Z
11239,Fixed #30370 -- Added dbshell support for client TLS certificates on PostgreSQL.,"Fixed #30370: Client TLS certificates and key in psql dbshell

Added support for client-side TLS connections (including mutual TLS)
 in the PostgreSQL dbshell command",oleh-mykytyuk,None,2019-04-16T09:44:54Z,2019-04-18T10:53:28Z
11238,Fixed typo in docs/ref/models/instances.txt.,,garyd203,None,2019-04-16T04:29:10Z,2019-04-16T06:26:29Z
11237,Fixed #14688 -- Showed that auto_id works in inline formsets,This patch demonstrates that https://code.djangoproject.com/ticket/14688 is no longer an issue – not sure if it should be merged or just discarded and the original ticket closed.,rixx,None,2019-04-15T19:05:13Z,2019-04-15T19:19:00Z
11236,Fixed #14808 -- Doc'd that trans and blocktrans tags don't escape translations.,https://code.djangoproject.com/ticket/14808,rixx,None,2019-04-15T17:55:48Z,2019-04-16T09:43:00Z
11235,Fixed #14009 -- Fixed custom formset validation example in docs.,https://code.djangoproject.com/ticket/14009,rixx,None,2019-04-15T17:23:46Z,2019-04-16T07:25:06Z
11234,Fixed #30368 -- Fixed prefetch_related() for GenericForeignKey when PK is also a FK.,…ts PK is also a foreign key.,v-do,None,2019-04-15T11:10:15Z,2019-04-16T07:49:17Z
11233,Fixed #30368 -- Fixed prefetch_related() for GenericForeignKey when i…,…ts PK is also a foreign key.,v-do,None,2019-04-15T06:38:56Z,2019-04-15T11:06:06Z
11232,Updated SpatiaLite install instructions to suggest first package from recent Debian-based distributions.,Rephrasing to suit current Debian distros,sudomann,None,2019-04-14T23:35:58Z,2019-04-25T05:35:42Z
11231,"Fixed #30367 -- Changed ""pip install"" to ""python -m pip install"" in docs, comments and hints.",https://code.djangoproject.com/ticket/30367,ramiro,None,2019-04-14T15:09:15Z,2020-06-25T13:14:32Z
11230,#25633: Updated Spatialite installation instructions for MacOS,"Using the latest available version from KyngChaos, as Gaia-SINS does not provide MacOS binaries anymore.",dhepper,None,2019-04-14T14:41:56Z,2019-05-17T14:23:09Z
11229,Renamed camelCaseTestMethods to snake_case_test_methods,,MarkusH,None,2019-04-14T13:02:13Z,2019-04-14T14:14:23Z
11228,Fixed #30366 -- Skipped StatReloaderTests on HFS+ filesystems.,"When on OSX Sierra or below (<=10.12 which uses HFS+) we should not adjust the reloader.SLEEP_TIME to less than 1 second.

This fixes issue https://code.djangoproject.com/ticket/30366",maerteijn,None,2019-04-14T12:46:39Z,2019-04-24T13:28:22Z
11227,WIP Ticket #29607,"This PR adds some examples to the docs of handling files and their lifecycles with FileField/models

Examples:

- [ ] set a file by passing the file path to the instance
- [ ] set a file by making a brand new file with ContentFile
- [ ] update a file by opening in a context manager, editing the file in memory then saving
- [ ] work with a large file, using the `__iter__` in a loop
- [ ] work with a large file, in chunks, using `chunks()`

See conversation at https://code.djangoproject.com/ticket/29607

",mrchrisadams,None,2019-04-14T12:46:02Z,2020-03-17T09:18:29Z
11226,Fixed #26803 -- Added --stats-only argument to makemessages,"Implemented a statistics option for `makemessages`, as per suggestion from @claudep:
https://code.djangoproject.com/ticket/26803#comment:3

It's a DRAFT pull-request, the progress is as follows:

- [x] implementation;
- [ ] exit code requirement implementation (https://code.djangoproject.com/ticket/26803#comment:4);
- [ ] tests;
- [x] docs;
- [ ] changelog.

The exit code thingie seems to be somewhat complex to implement properly, given that `msgfmt` output is localised as per system locale, and it seems there's not much that can be done but hackishly parsing the string (see http://git.savannah.gnu.org/cgit/gettext.git/tree/gettext-tools/src/msgfmt.c#n875).

This possibly can be worked around by explicitly invoking `msgfmt` with a known locale, and parsing the output, but this still makes this all too fragile, prone to break each time GNU gettext is updated.",sergeykolosov,None,2019-04-14T10:53:18Z,2020-06-01T09:26:59Z
11225,"Fixed typos in docs, comments, and exception messages.",,scop,None,2019-04-14T07:47:31Z,2019-04-20T08:06:46Z
11224,Fixed #23004 -- Hid sensitive environment parameters in debug view,,MarkusH,None,2019-04-13T17:47:20Z,2019-07-11T11:04:33Z
11223,Fixed #27910: Added a ChoiceEnum class for use in field choices,"The class can serve as a base class for user enums, supporting
translatable human-readable names, or names automatically inferred
from the enum member name.

A ChoiceIntEnum is also probided.",shaib,None,2019-04-13T17:41:01Z,2019-07-05T05:12:26Z
11222,Fixed #23521 -- Support changing model bases in migrations,"Also document how to use the new `AlterModelBases` operation to refactor a concrete model inheritance into a stand-alone model.

https://code.djangoproject.com/ticket/23521",Ian-Foote,None,2019-04-13T15:38:10Z,2020-05-12T23:02:01Z
11221,#28357 -- Prepopulated_fields doesn't work for admin.StackedInline,"This PR fixes #28357, which was caused by a broken jQuery selector.",jkhlr,None,2019-04-13T15:34:50Z,2020-08-19T19:48:37Z
11220,Fixed #27604 -- Used the cookie signer to sign message cookies.,"Fixed #27604 -- Cleans up signing of message cookies.

Replaced signature-generation code with a call to the configured cookie signer.
",craiga,None,2019-04-13T15:20:50Z,2020-01-31T10:23:52Z
11219,Corrected wording in docs/intro/overview.txt.,Changed a wording since it was a little weird in terms of sexist.,aycignl,None,2019-04-13T15:15:05Z,2019-04-14T08:05:42Z
11217,Fixed #30365 -- Fixed syntax highlighting in SQL examples.,"Sphinx interprets some ""%[a-z]"" in SQL statements as
""Literal.String.Interpol"" which lead to weird highlighting",vlt,None,2019-04-13T13:53:44Z,2019-04-23T11:14:54Z
11216,Fixed #28604 -- Prevented ManifestStaticFilesStorage from leaving intermediate files.,"Added keep_intermediate_files flag in HashedFilesMixin to allow for
different behaviours in CachedStaticFilesStorage and
ManifestStaticFilesStorage.",n6g7,None,2019-04-13T13:17:07Z,2019-06-03T11:55:45Z
11215,Fixed #6785 -- Made QuerySet.get() fetch a limited number of rows.,Fixes https://code.djangoproject.com/ticket/6785 by using the hints from Shai Berger and Anssi. Needs tests with an Oracle DB please.,amir-hadi,None,2019-04-13T13:11:02Z,2019-05-13T17:16:03Z
11214,Fixed #30350 -- Prevented recreation of migration for operations with a range object.,,apollo13,None,2019-04-13T13:04:37Z,2019-04-14T10:54:44Z
11213,Fixed #30358 -- Removed redundant assertion in FormsUtilsTestCase.test_error_dict_copy().,Ticket [30358](https://code.djangoproject.com/ticket/30358),Vaiders,None,2019-04-13T12:50:14Z,2019-04-13T16:42:17Z
11212,Fixed #28690: django.utils.http.parse_http_date two digit year check is incorrect,"https://code.djangoproject.com/ticket/28690

This PR picks up from #10749 and apply comments for using `utcnow()` instead of `today()` and `now()`.",dxvxd,None,2019-04-13T12:33:02Z,2019-09-30T07:56:55Z
11211,Fixed #30343 -- Fixed prefetch_related() for GenericForeignKey when PK of related field is UUIDField.,Ticket [30343](https://code.djangoproject.com/ticket/30343).,felixxm,None,2019-04-13T12:01:14Z,2019-04-14T08:03:26Z
11210,Fixed #25941 -- Improved error message for runtests.py when django is not on path.,"Catches the ImportError in the runtest.py and outputs an
improved message. The message directs the user to the documentation.
The steps in the tests/README.rst solve the ImportError.

Ticket: https://code.djangoproject.com/ticket/25941",ThomasAllison,None,2019-04-13T11:58:02Z,2019-04-13T16:35:02Z
11209,Fixed #30451 -- Added ASGI handler and coroutine-safety.,"This adds in an `AsgiHandler` handler class, `get_asgi_application`, and an `asgi.py` file into the default project template. It serves Django over an ASGI interface, but does not yet allow asynchronous views; `get_response` is where the context changes from asynchronous to synchronous.

It also swaps out Django's `threading`-based safety for `asgiref.local`, which provides hybrid thread- and async-task-based safety.

The goal would be to land this in `master`, and then start work on getting async through the middleware layers and down to views if they are declared as `async def`. That way we can stabilise this, make sure it's OK, and hopefully ship it in 3.0, and then see how far we can get async view handling as another PR so it's not all tied up in one big patch.

This will be squashed down to a single commit for merge.",andrewgodwin,None,2019-04-13T11:53:33Z,2019-06-20T11:35:14Z
11208,Fixed #29049 -- Added slicing notation to F expressions.,"Fixed issue https://code.djangoproject.com/ticket/29049

This is a continuation on https://github.com/django/django/pull/9670",nip3o,None,2019-04-13T11:20:19Z,2020-07-03T09:21:48Z
11207,Black formatting with default config,"Line length is 88 characters and string normalization is enabled.

```
$ cat pyproject.toml 
[tool.black]
safe = true
py36 = true
exclude = '''
/(
  migrations
  | __pycache__
)/
'''
```",hermansc,None,2019-04-13T11:20:03Z,2019-04-13T11:20:57Z
11206,Fixed #30363 -- Do not use exponential notation for small decimal num…,"…bers.

In 9cc6a60040b0f64f8ea066dd215176d4bd16621d a security patch was
introduced to prevent allocating large segments of memory when a
very large or very small decimal number was to be formatted.

As a side-effect, there was a change in formatting of small decimal
numbers even when the `decimal_pos` argument was provided, which meant
that reasonable small decimal numbers (above 1e-199) would be formatted
as `0.00`, while smaller decimal numbers (under 1e-200) would be
formatted as `1e-200`.",sjoerdjob,None,2019-04-13T10:19:38Z,2019-04-13T12:30:34Z
11205,Fixed #30325 -- Fixed inconsistent count()/exists() behavior on reverse M2M relations with custom managers.,The issue was introduced via #29725 in 1299421cadc.,rixx,None,2019-04-13T10:05:39Z,2019-04-15T11:01:12Z
11204,Fixed #30347 -- Fixed typo in docs/topics/db/aggregation.txt.,,vlt,None,2019-04-13T09:59:04Z,2019-04-13T10:35:32Z
11203,Fixed #27086 - Doc'd multithreading error while testing on MacOS.,"I ran into this in february, but only now did it occur to me to document it. 

Some clever googling (which i was unable to do, someone on IRC helped me out) will yield results like https://stackoverflow.com/questions/50168647/multiprocessing-causes-python-to-crash-and-gives-an-error-may-have-been-in-progr, but if this is an error many users will run in to, it might make sense to have it in Django's documentation. 

I'm not sure if this occurs for all users of said OSX versions, so maybe the text needs more detail in that respect.",khink,None,2019-04-13T09:47:16Z,2019-10-09T10:11:48Z
11201,Fixed #30326 -- Doc'd how to avoid persistence of F() assignment.,Ticket [#30326](https://code.djangoproject.com/ticket/30326).,laymonage,None,2019-04-13T02:24:03Z,2019-04-15T07:14:36Z
11200,Tradução como usar o Django,,fabiomelg,None,2019-04-12T21:20:49Z,2019-04-13T08:45:46Z
11199,Fixed #26813 -- ModelForm RadioSelect widget for foreign keys should not present a blank option if blank=False on the model,"Hi, this is an attempt to solve this accepted ticket that's been inactive for a long time. [#26813](https://code.djangoproject.com/ticket/26813)",metteludwig,None,2019-04-12T19:15:54Z,2020-01-29T10:55:31Z
11197,fix(autocomplete): fix while specified `to_field`,"When use ForeignKey and set `to_field`, 
the `autocomplete_fields` in admin also use `pk` in queryset yet.

Obvious, this will make some wrong filter result",zthxxx,None,2019-04-12T09:37:29Z,2019-04-12T10:12:20Z
11196,Migrations do not ignore unmanaged models (unlike syncdb),"Migrations do not ignore unmanaged models (unlike syncdb); Ticket #22331; Adding this fix to 1.11.x

This has already been fixed in version 2. Related ticket is 22331. Can we please get this into the latest stable version 1 release",jackvz,None,2019-04-12T03:04:25Z,2019-10-14T23:22:29Z
11195,Fixed #30353 -- Fixed recursion message assertion error,,mentix02,None,2019-04-11T21:12:20Z,2019-04-11T21:24:54Z
11194,Fixed #29352 -- Allowed specifying a Feed language.,"https://code.djangoproject.com/ticket/29352

This PR follows up on the abandoned one at #9879.

I am aware that there are still tests missing that should be added to `tests/syndication_tests`, but I could use some guidance on which tests to add and where.",rixx,None,2019-04-10T21:52:03Z,2019-05-06T17:54:04Z
11193,Fixed #30344 -- Converted serve static to class base views.,,tomturner,None,2019-04-09T21:48:29Z,2019-04-11T21:30:27Z
11192,Stable/2.2.x,[2.2.x] Bumped django_next_version in docs config.,vigneshpy,None,2019-04-09T17:15:01Z,2019-04-09T17:24:41Z
11191,Add a way to use properties on list_display elements,"In Django admin, you can use the property of the Model, but there is no description in the documentation.
I've added descriptions and examples
",LeeHanYeong,None,2019-04-09T16:53:39Z,2019-04-11T21:54:28Z
11190,[PoC] Based LANGUAGES_BIDI on LANGUAGES if not overridden.,,felixxm,None,2019-04-09T14:20:33Z,2019-04-23T10:02:53Z
11189,Fixed #28780 -- Allowed specyfing a token parameter displayed in password reset URLs.,"Ticket: https://code.djangoproject.com/ticket/28780

Hi guys, this is my first PR for the django project. I am looking forward towards contributing more in the future.

Please let me know if there are any issues.",xmeowmeowx,None,2019-04-09T07:59:35Z,2019-05-24T07:00:11Z
11188,Fix Mistake in Plural Translation in Persian,"In Persian language, ""ها"" is the equivalent of ""s"" in English. It's how most plural forms are made.
It should be removed when we use `verbose_name_plural`.",majid-vaghari,None,2019-04-09T07:28:16Z,2019-04-09T08:27:45Z
11187,Fixed #30341 -- Added support for the furlong unit in Distance.,"I needed support for furlongs (201.168 m) in the `/gis/measure.py` `Distance()` object.

I added this conversion to the object's units list and its documentation.",neighlyd,None,2019-04-08T18:34:54Z,2019-04-19T07:58:57Z
11186,Fixed #30321 -- Added example of changed_data to forms docs.,https://code.djangoproject.com/ticket/30321,bcfurtado,None,2019-04-08T18:02:55Z,2019-04-09T20:52:34Z
11185,Fixed #30339 -- Made Model.delete(keep_parents=True) preserves nested parent reverse relationships.,"…lationships.

Additional consideration based on this:
https://github.com/django/django/commit/b495d8e334c2487eef6282bac5dd0c1f43da71ef

Without this, info is lost on reverse relations for parents of parents for a model deletion with keep_parents=True.
",Dec-81,None,2019-04-08T10:40:34Z,2019-05-06T12:01:43Z
11184,Refs #30254 -- Added tests for Model.__hash__() inheritance.,"See https://code.djangoproject.com/ticket/30333 for more context. 

These tests pass but the first failed on 2.1. The change was a bug fix around #30254, rather than a regression. They serve as demonstrating the correct behaviour. 

",carltongibson,None,2019-04-08T10:22:29Z,2019-07-23T11:58:21Z
11183,Fixed #30338 - sitemap.xml template should not use localization,,shredding,None,2019-04-08T08:02:51Z,2019-04-08T09:05:48Z
11182,Made Model.delete(keep_parents=True) preserve *all* parent reverse re…,"…lationships.

Additional consideration based on this:
https://github.com/django/django/commit/b495d8e334c2487eef6282bac5dd0c1f43da71ef

Without this, info is lost on reverse relations for parents of parents for a model deletion with keep_parents=True.
",Dec-81,None,2019-04-06T19:56:17Z,2019-04-08T10:39:20Z
11181,"Fixed #30335, #29139 -- Fixed crash when ordering or aggregating over a nested JSONField key transforms.",Ticket: [#30335](https://code.djangoproject.com/ticket/30335),cansarigol,None,2019-04-06T13:33:59Z,2019-06-25T11:55:23Z
11180,Fixed #30328 -- Fixed crash of IntegerField.validators when limit_value in a custom validator is callable.,"The field validators MaxValueValidator and MinValueValidator are compared to the limits enforced by MySQL on IntegerField size to see if they should be added to a field's validators. Since 24cae0bedc51093b363c323af555946a8edea1a1 allowed limit_value to be a function, the comparison was raising a TypeError because it was compared to an integer.  

",scottfits,None,2019-04-06T04:57:53Z,2019-04-19T06:21:54Z
11179,Fixed #30330 -- Fixed setting of primary key to None during fast-delete.,,apollo13,None,2019-04-05T15:54:39Z,2019-04-08T19:47:01Z
11178,Give the Django main thread a distinct name while autoreloading,"No ticket for this,  but while debugging an autoreloading issue it was somewhat hard to differentiate which thread is causing which issue. Right now they are called `thread-1` and `thread-2`, can we make the thread that loads the Django app have a distinct name, i.e `django-main-thread`?",orf,None,2019-04-05T13:07:55Z,2019-04-05T14:58:03Z
11177,Fixed #30323 -- Fixed spurious autoreload failures.,"Ticket: https://code.djangoproject.com/ticket/30323

A few fixes and changes here:

1.  Loading the urlconf module can result in SyntaxErrors. We now swallow them to prevent the reloader from quitting.

2. Simplified the ensure_echo_on method

3. Simplified the stat autoreloader. The implementation is now pretty much exactly the same as the one in Flask/Werkzeug

4. The thread running Django itself is now named `django-main-thread` to help with tracebacks.",orf,None,2019-04-05T12:40:59Z,2019-04-29T10:21:36Z
11176,Refs #30323 -- Include windows specific mtime subtraction in the autoreloader,"Ticket: https://code.djangoproject.com/ticket/30323

This is just something I noticed that was missing. For consistency I would like to include it back in, even if I am not sure it is required anymore (it was added 14 years ago).",orf,None,2019-04-05T11:51:52Z,2019-04-05T14:56:43Z
11175,Fixed bidirectionality on the congrats page.,"Set the `dir` attribute of `html` tag to `""rtl""` if current language is RTL",majid-vaghari,None,2019-04-05T11:19:42Z,2019-04-05T13:08:47Z
11174,[2.1.x] Refs #30331 -- Doc'd that psycopg2 < 2.8 is required.,,felixxm,None,2019-04-05T09:44:21Z,2019-06-07T19:09:59Z
11173,Refs #27149 -- Based recursive nested subquery detection of sys.getrecursionlimit().,"@felixxm I made sure this fixed the failures you encountered on `django-docker-box` which were caused by a smaller `sys.getrecursionlimit()` value (1000).

I found out about [`RecursionError` while reading about `getrecursionlimit`](https://docs.python.org/3/library/exceptions.html#RecursionError).",charettes,None,2019-04-05T04:44:31Z,2019-04-15T13:45:22Z
11172,Fixed #30332 -- Fixed crash of ordering by expressions with params in ArrayAgg and StringAgg.,"As per title, also added a couple of scenarios for ""plain"" ordering in string_agg test.",simone6021,None,2019-04-04T21:43:27Z,2019-04-08T09:15:04Z
11171,Fixed #30331 -- Added support for psycopg2 2.8.,See `cursor.description` changes in [Psycopg 2.8](http://initd.org/psycopg/docs/cursor.html#cursor.description).,felixxm,None,2019-04-04T11:45:52Z,2019-04-05T09:06:04Z
11170,Fixed #30324 -- Forced utf-8 encoding when loading debug templates.,"Refs #28007 and #29654.

Regression in ea542a9c7239b5b665797b7c809f1aceb0b412cf and 50b8493581fea3d7137dd8db33bac7008868d23a.",pope1ni,None,2019-04-03T23:46:10Z,2019-04-05T14:45:40Z
11169,Fixed #30318 --  Added check for importability of arguments of custom error handler views.,"…mported

Thanks to Jon on Stack Overflow for reporting the issue.",alasdairnicol,None,2019-04-03T23:31:55Z,2019-04-25T09:38:50Z
11168,Fixed #30324 -- Technical_500.html Internal Unicode Error Resolving,"Ellipsis caused a Unicode error.
So the technical_500.html is generally not rendered.

In versions prior to Django 2.2, elipsis was 3 dots.

Therefore, modify elipsis to 3 dots.
Corrected the technical_500.html to render normally.",chihun-jang,None,2019-04-03T20:52:47Z,2019-04-06T03:23:54Z
11166,Fixed #30312 -- Relaxed admin check from django.contrib.sessions to SessionMiddleware subclasses.,"Instead of enforcing that `django.contrib.sessions` is an installed app, only check for the existence of a middleware deriving from `django.contrib.sessions.middleware.SessionMiddleware`.

https://code.djangoproject.com/ticket/30312",akx,None,2019-04-03T12:25:37Z,2019-05-02T14:22:22Z
11165,Fixed #30310 -- Added support for looking up HttpHeaders.headers using underscores.,Added __getitem__() to HttpHeaders.headers to include underscore-to-hyphen lookup for use in templates.,Troon,None,2019-04-03T11:25:53Z,2019-05-09T14:28:09Z
11164,Fix OneToOneField typo in query_utils,This field name in the comment wasn't correctly formatted; this makes it camel case,davidjb,None,2019-04-03T01:23:39Z,2019-04-03T06:18:54Z
11163,Fixed #30302 -- Fixed forms.model_to_dict() result if empty list of fields is passed.,called with empty fields list,belegnar,None,2019-04-02T21:46:42Z,2019-04-04T08:58:40Z
11162,Allow different response classes via `klass` param,"Adds a `klass` parameter to `render()` that lets user specify a response class other than `HttpResponse`.

- Allow any subclass of `http.HttpResponseBase`
- Default to `http.HttpResponse`
- Do a quick `issubclass()` check on the argument

Ticket: https://code.djangoproject.com/ticket/30429#ticket",bsolomon1124,None,2019-04-02T16:57:10Z,2019-05-02T11:09:07Z
11161,"Updated release process in the ""How is Django Formed?"" documentation.",,felixxm,None,2019-04-02T10:49:12Z,2019-05-24T09:07:40Z
11160,Added setup.cfg for python wheels,"Just curious to too, isn't this necessary for wheels? ",auvipy,None,2019-04-02T07:43:14Z,2019-04-02T09:05:34Z
11159,Fixed #30309 - Removed hasattr() reference in One-to-One example.,"The One-to-One example of using `hasattr` to avoid exception handling is based on the side effect of `hasattr` swallowing all exceptions.  This was pre-Python 3.2 behaviour and has been changed to only suppress AttributeErrors as explained at https://bugs.python.org/issue9666.

This PR removes the outdated reference.

Trac: https://code.djangoproject.com/ticket/30309",davidjb,None,2019-04-02T07:36:44Z,2019-04-02T13:05:12Z
11158,Fixed #30307 -- Fixed incorrect quoting of database user password when using dbshell on Oracle.,"Removed the extra backslash escape in the password componenet of the
login string for Oracle dbshell invocations. Added tests that actually
invoke the client binary for each of the supported core backends.
Updated the runshell interface to support passing additional kwargs to
subprocess.run to help facilitate testing.",msg555,None,2019-04-01T23:42:13Z,2019-05-27T02:30:28Z
11157,Fixed #13910 -- Added generator based rendering (streaming) to templates and supporting views.,Rebased and optimized https://github.com/django/django/pull/4783,pglotov,None,2019-04-01T17:38:01Z,2020-05-28T06:22:42Z
11156,Corrected tense in release notes for admin actions change,,alex,None,2019-04-01T15:25:33Z,2019-04-02T07:18:30Z
11155,"Fixed #30304 -- Added support for HttpOnly, SameSite, and Secure flags on language cookies.",https://code.djangoproject.com/ticket/30304,bluetech,None,2019-04-01T10:04:40Z,2019-04-13T16:45:35Z
11154,Fixed #30259 -- Fixed crash of admin views when properties don't have admin_order_field attribute.,"Ticket [30259](https://code.djangoproject.com/ticket/30259).

I didn't add a separate test because the original test `test_change_list_sorting_property()` is falling after adding a property to the list of fields.",felixxm,None,2019-04-01T08:38:56Z,2019-04-01T14:35:55Z
11153,Translations for 2.2.x,,claudep,None,2019-04-01T07:54:31Z,2019-04-01T10:25:45Z
11152,Fixed #29338 -- Allowed using union query in Subquery,Ticket: [#29338](https://code.djangoproject.com/ticket/29338),cansarigol,None,2019-03-31T13:29:50Z,2019-05-08T09:38:40Z
11151,Used QuerySet.bulk_create() in lookup.tests.,,janghyukjin,None,2019-03-31T12:24:42Z,2019-04-01T09:41:22Z
11150,Fixed #30302 -- Added support for empty list of fields to the model_to_dict().,Allow fields to be empty list,belegnar,None,2019-03-30T22:41:03Z,2019-04-02T18:01:41Z
11149,Fixed #30289 -- Prevented admin inlines for a ManyToManyField's implicit through model from being editable if the user only has the view permission.,https://code.djangoproject.com/ticket/30289,timgraham,None,2019-03-30T18:14:35Z,2019-03-30T22:05:13Z
11148,Refs #20010 -- Unified DatabaseOperations.last_executed_query() on Oracle with other db backends.,,felixxm,None,2019-03-30T16:13:13Z,2019-04-05T19:36:06Z
11147,Fixed #30301 -- Removed OutputWrapper.__init__()'s style_func arg.,"Unused since 533532302ae842c95cf7294ef6cd7f3e2bfaca65.
https://code.djangoproject.com/ticket/30301",timgraham,None,2019-03-30T02:11:42Z,2019-03-30T12:54:43Z
11146,Updated links to the PostgreSQL documentation.,The canonical links have changed and `/static` is no longer required.,pope1ni,None,2019-03-29T23:39:58Z,2019-03-30T07:40:56Z
11145,Fixed #30265 -- Fixed a tutorial number in Reusable App tutorial.,"In the Advanced Tutorial Docs in the Reusable Apps section, decoupling by using include is referred to tutorial 03 whereas it is mentioned in Tutorial 01.",berabhishek,None,2019-03-29T21:54:27Z,2019-03-30T01:53:04Z
11144,Optimize the check for DISALLOWED_USER_AGENTS,"Previously, this required a getattribute + getitem for each entry in `DISALLOWED_USER_AGENTS`.",bsolomon1124,None,2019-03-29T19:49:26Z,2019-03-30T13:23:01Z
11143,Optimization: only look up HTTP_USER_AGENT once,"Optimizes the check for each `DISALLOWED_USER_AGENTS`.

Previously, this required a getattribute + getitem for each entry in `DISALLOWED_USER_AGENTS`.",bsolomon1124,None,2019-03-29T19:16:05Z,2019-03-29T19:50:04Z
11142,Refs #29697 -- Added test for excluding m2m intermediary table.,"Fixed in f19a4945e1191e1696f1ad8e6cdc6f939c702728 (@charettes thanks again :star2:).

Ticket [29697](https://code.djangoproject.com/ticket/29697).",felixxm,None,2019-03-29T19:12:13Z,2019-03-30T14:08:44Z
11141,Fixed #30300 -- Allowed migrations to be loaded from directories without __init__.py files.,Addresses https://code.djangoproject.com/ticket/30300,benjyw,None,2019-03-28T20:49:53Z,2019-10-10T06:52:40Z
11140,Used extlinks for Django's source code.,,timgraham,None,2019-03-28T16:54:45Z,2019-03-29T00:33:08Z
11139,Marked protected error message for translation,,claudep,None,2019-03-28T14:34:24Z,2019-03-28T19:16:31Z
11138,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.",Ticket: [#28373](https://code.djangoproject.com/ticket/28373),cansarigol,None,2019-03-28T13:11:56Z,2019-04-08T10:55:43Z
11137,Fixed #30295 -- Fixed max_lengths.tests.MaxLengthORMTests when run in isolation.,Ticket [#30295](https://code.djangoproject.com/ticket/30295).,laymonage,None,2019-03-28T05:45:38Z,2019-03-28T13:34:25Z
11136,Refs #18726 -- Added test for excluding circular related fields with F() expression.,"Fixed in f19a4945e1191e1696f1ad8e6cdc6f939c702728. (@charettes thanks :star2: ). 

Ticket [18726](https://code.djangoproject.com/ticket/18726).",felixxm,None,2019-03-27T19:40:42Z,2019-03-28T06:11:11Z
11135,Ref #30064 -- Added other changelist's inputs into the form.,"Ticket: [#30064](https://code.djangoproject.com/ticket/30064)
PR: [#10895](https://github.com/django/django/pull/10895)",cansarigol,None,2019-03-27T12:35:56Z,2019-03-27T18:03:03Z
11134,Doc'd that HttpResponse accepts bytestrings.,,felixxm,None,2019-03-27T11:28:42Z,2019-03-28T09:00:33Z
11133,Fixed #30294 -- Allowed HttpResponse to accept memoryview objects.,Ticket [#30294](https://code.djangoproject.com/ticket/30294).,laymonage,None,2019-03-27T06:48:09Z,2019-03-29T15:31:47Z
11132,Updated spelling and RFCs in HttpOnly cookie flag docs.,Fixed documentation of the `HttpOnly` flag and only document the latest version of the RFC for cookies.,pope1ni,None,2019-03-26T23:36:21Z,2019-03-27T15:24:20Z
11131,Removed obsolete or unused javascript.,"There is quite a lot of legacy compatibility stuff or unused stuff that can be removed. Here is an initial first pass. The biggest removal is `django/contrib/admin/static/admin/js/timeparse.js` which as far as I can tell was never used, but has nonetheless sucked up effort at maintaining it.",pope1ni,None,2019-03-26T23:28:20Z,2019-03-27T21:06:19Z
11130,Fixed #28621 -- Fixed crash of annotations with OuterRef.,Ticket [28621](https://code.djangoproject.com/ticket/28621).,felixxm,None,2019-03-26T19:14:27Z,2019-03-27T07:24:23Z
11129,Fixed #28408 -- Added error message when updating with annotated expressions on joined fields.,Ticket: [#28408](https://code.djangoproject.com/ticket/28408),cansarigol,None,2019-03-26T18:15:16Z,2019-06-28T07:46:27Z
11128,Doc'd django-docs-translation and Read the Docs release steps.,,timgraham,None,2019-03-26T15:46:34Z,2019-03-27T01:54:07Z
11127,Deleted unused variable.,Deleted unused variable in js_test for nicer code.,sejd0n,None,2019-03-26T11:12:44Z,2019-03-26T17:18:07Z
11126,Fixed #99999 -- Added a shortcut function to make toast.,,Okamikaze1,None,2019-03-26T04:04:49Z,2019-03-26T04:08:32Z
11125,Refs #30278 -- Doc'd behavior of del on an unaccessed cached_property.,"Very happy for suggestions to improve the copy on this: this was the third or fourth attempt I made at it, but I still don't think it's really clear enough.",schinckel,None,2019-03-25T23:10:23Z,2019-03-30T13:29:04Z
11124,Fixed #28581 Pagination topic docs need a little restructuring,"Hello, this is my first PR. I tried to solve the ticket after considering the notes from the previous contributor. ",armansabyr,None,2019-03-25T20:21:56Z,2019-07-03T13:55:36Z
11122,Made startapp/project's overlaying error message use 'app' or 'project'.,"Current code raising error is as follows.
```
if path.exists(new_path):
    raise CommandError(""%s already exists, overlaying a ""
                       ""project or app into an existing ""
                       ""directory won't replace conflicting ""
                       ""files"" % new_path)
```

I think the error message can be improved by using `app_or_project` parameter as follows
`:param app_or_project: The string 'app' or 'project'.`
```
if path.exists(new_path):
    raise CommandError(""%s already exists, overlaying %s ""
                       ""%s into an existing ""
                       ""directory won't replace conflicting ""
                       ""files"" % (new_path, self.a_or_an, app_or_project))
```",MyungSeKyo,None,2019-03-25T09:10:34Z,2019-03-30T14:14:08Z
11121,Clarify runserver is overridden for django.contrib.staticfiles ,"In the main [static files](https://docs.djangoproject.com/en/dev/howto/static-files/#serving-static-files-during-development) documentation, the serving process is generally explained that `runserver` will automatically serve files if DEBUG is set to true.  This isn't quite the full story because it's not the _original_ `runserver` that is being used, and rather it's the one from `django.contrib.staticfiles`.  This  gets explained if you [dig deeper](https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#runserver), but it isn't clear what's happening before getting this deep.

This PR makes a clarification to the wording of this section in the docs to explain _how_ `runserver` is working its magic, and that if you have a custom `runserver` command (like I did), you need a special strategy.

Trac: https://code.djangoproject.com/ticket/30308",davidjb,None,2019-03-25T05:49:13Z,2019-04-03T19:35:38Z
11120,Improved error message related with startapp and startproject command,"Current code raising error is as follows.
```
if path.exists(new_path):
    raise CommandError(""%s already exists, overlaying a ""
                       ""project or app into an existing ""
                       ""directory won't replace conflicting ""
                       ""files"" % new_path)
```

I think the error message can be improved by using `app_or_project` parameter as follows
` :param app_or_project: The string 'app' or 'project'.`
```
if path.exists(new_path):
    raise CommandError(""%s already exists, overlaying %s ""
                       ""%s into an existing ""
                       ""directory won't replace conflicting ""
                       ""files"" % (new_path, self.a_or_an, app_or_project))
```
",MyungSeKyo,None,2019-03-25T05:32:53Z,2019-03-25T09:08:11Z
11119,Fixed #29791 -- Honor engine's autoescape attribute in render_to_string,Passed down autoescape value from Engine to Context in Engine.render_to_string.,n6g7,None,2019-03-24T21:17:05Z,2019-03-25T22:28:22Z
11118,Fixed typo in docs/releases/3.0.txt.,,felixxm,None,2019-03-24T20:34:42Z,2019-03-25T07:39:38Z
11117,"Fixed #30236 -- Made UsernameField render with autocapitalize=""none"" HTML attribute.","Fix for issue #30236
This is my first contribution, hope I did everything right :)",pmisteliac,None,2019-03-24T18:55:29Z,2019-03-29T14:30:47Z
11116,Fixed #30285 -- Fixed the domain in broken link emails being spoofable,"https://code.djangoproject.com/ticket/30285

Is a test needed?",orlnub123,None,2019-03-24T06:25:34Z,2019-03-28T09:43:55Z
11115,Fixed #27360 -- Make it easier to track down the offending models for AlreadyRegistered exceptions.,"[ticket_27360](https://code.djangoproject.com/ticket/27360)
Continue [https://github.com/django/django/pull/7423](https://github.com/django/django/pull/7423)",hramezani,None,2019-03-23T17:14:05Z,2019-03-25T22:03:20Z
11114,Doc'd a few contributing guidelines.,,timgraham,None,2019-03-23T15:09:05Z,2019-03-25T22:26:28Z
11113,Fixed #30283 -- Fixed shellcheck warnings in django_bash_completion.,"Fixes https://code.djangoproject.com/ticket/30283

This fixes all shellcheck errors except for `^-- SC2148: Tips depend on target shell and yours is unknown. Add a shebang.` because the script is meant to be sourced instead of directly run.",albertyw,None,2019-03-23T09:09:27Z,2019-03-23T15:56:45Z
11112,Removed redundant model field choices tests.,"Previous removals of gendered language also didn't refer to a specific ticket number so I decided to not open a Trac ticket for this, see e.g.

c819780d3f46b6e4e67aa135c840f78dc24468e1
f265c1ef13e6eaa75c8e1cfdaade527a1505bb5e
9af7e18f3579df18625b9eda70735790f23aeb96
4e07d93325b3989073b181e4505f2e6ed707743b",matthiask,None,2019-03-22T21:18:07Z,2019-04-24T09:14:49Z
11111, Fixed #29539 -- Allowed using aggregate functions into order_by and Meta.ordering,https://code.djangoproject.com/ticket/29539,cansarigol,None,2019-03-22T19:43:52Z,2019-03-24T09:40:48Z
11110,Fixed #26552 -- Fixed a serialized_rollback crash due to constraints ordering.,"This ended up biting me for a couple of hours. General gist is that `serialized_rollback` on testcases does not respect ordering of foreign key constraints, which causes integrity failures when running more than a single test in a test case. Wrapping in an atomic block fixes the issue.

Not sure if this really needs testing, but if so I can figure out where to add them. FWIW this ended up fixing the issue on my end.

Also reviewed the contributing guidelines and it appears a ticket for this issue has already been created so not creating another one: https://code.djangoproject.com/ticket/26552",jrpotter,None,2019-03-22T16:03:51Z,2019-12-13T11:10:52Z
11109,Fixes #30280 -- Made get_FIELD_display functions return strings again,,matthiask,None,2019-03-22T12:22:51Z,2019-03-22T21:13:59Z
11108,Use monospace font in date format docs for better readability,"Specifically, it makes it much easier to distinguish between `l` (lowercase `L`) and `I` (uppercase `I`) in the [docs for the `date` template filter](https://docs.djangoproject.com/en/2.1/ref/templates/builtins/#date).

---

### Before:
<img width=""615"" alt=""image"" src=""https://user-images.githubusercontent.com/57509/54745373-a5949a80-4bc9-11e9-8661-e2328402f658.png"">

---

### After: 
<img width=""615"" alt=""image"" src=""https://user-images.githubusercontent.com/57509/54745350-91e93400-4bc9-11e9-801e-4b159a9c78eb.png"">
",philippbosch,None,2019-03-21T10:10:39Z,2019-03-21T14:20:10Z
11107,Used QuerySet.bulk_create() in a couple of postgres tests.,Follow up to 0ce2ad9ca4623cfd6dc2515430c0ae8a1717a607.,MyungSeKyo,None,2019-03-21T07:16:16Z,2019-03-21T22:05:30Z
11106,Used QuerySet.bulk_create() in several tests.,,MyungSeKyo,None,2019-03-21T06:57:25Z,2019-03-21T07:14:19Z
11105,Fix typo in russian translation for %(from)s-%(to)s relationships,,imomaliev,None,2019-03-21T05:19:13Z,2019-03-29T09:44:53Z
11104,Fixed broken tests and comments for the security middleware.,A number of comments and some of the calls to `@override_settings()` didn't correctly prefix some of the setting names with `SECURE_`.,pope1ni,None,2019-03-20T23:40:24Z,2019-03-21T05:53:19Z
11103,Moved choices inside of a test model per coding style.,,MyungSeKyo,None,2019-03-20T09:41:17Z,2019-03-20T15:05:27Z
11102,Move ACTION_FLAG_CHOICES into LogEntry,,MyungSeKyo,None,2019-03-20T08:59:58Z,2019-03-20T09:02:14Z
11101,Move ACTION_FLAG_CHOICES into LogEntry,,MyungSeKyo,None,2019-03-20T08:56:22Z,2019-03-20T08:59:19Z
11100,Fixed #30271 -- Added the Sign database function.,Ticket [#30271](https://code.djangoproject.com/ticket/30271).,pope1ni,None,2019-03-20T08:29:40Z,2019-03-22T12:50:29Z
11099,Fixed #30257 -- Made UsernameValidators prohibit trailing newlines.,https://code.djangoproject.com/ticket/30257,rjschave,None,2019-03-20T03:46:18Z,2019-03-22T17:16:33Z
11098,Fixed #30266 -- Kept a sequence owner when altering an AutoField/BigAutoField on PostgreSQL.,"This fixes ticket [30266](https://code.djangoproject.com/ticket/30266). 

",pydolan,None,2019-03-19T19:33:45Z,2019-04-08T20:44:17Z
11097,Fixed #30264 -- Fixed crash of test_parsing_year_less_than_70() on 32-bit systems.,Ticket [30264](https://code.djangoproject.com/ticket/30264) (see https://en.wikipedia.org/wiki/Year_2038_problem).,felixxm,None,2019-03-19T17:05:31Z,2019-03-20T12:45:03Z
11096,Fixed #30259 -- Added support for admin_order_field attribute on properties in ModelAdmin.list_display.,,jtiai,None,2019-03-19T15:53:33Z,2019-03-24T20:35:10Z
11095,Fixed #27755 -- Added ModelAdmin.get_inlines() hook.,"Continue the [pr 7920](https://github.com/django/django/pull/7920), for [ticket 27755](https://code.djangoproject.com/ticket/27755).

Test, release note, and `versionadded` annotation added.",hramezani,None,2019-03-19T15:17:28Z,2019-04-17T05:34:12Z
11094,Fixed #29471 -- Added 'Vary: Cookie' to the response on invalid cookie,"Previously, when an invalid session was passed via cookie,
SessionMiddleware responded by deleting cookie, but this response
was cached without 'Vary: Cookie' header.",birthdaysgift,None,2019-03-18T15:28:30Z,2019-03-21T22:03:48Z
11093,Fixed #30263 -- Doc'd changes to form Media sorting (refs #30179).,https://code.djangoproject.com/ticket/30263,carltongibson,None,2019-03-18T14:39:17Z,2019-03-18T15:26:32Z
11092,Do not store GROUP BY clauses for Subqueries,"A Subquery in an annotation on a queryset can contains its own aggregate functions (e.g. COUNT) on the subquery's fields.  However, these subqueries do not need to be included as GROUP BY clauses in the original query.",PaulWay,None,2019-03-18T02:20:05Z,2019-03-18T04:13:11Z
11091,Fixed #28738 -- Added the GeometryDistance function.,https://code.djangoproject.com/ticket/28738,franciscouzo,None,2019-03-18T01:41:50Z,2019-03-20T16:59:11Z
11090,Adding note on ordering with nulls using F expressions in order_by (2.1.x branch),"While the `nulls_first` and `nulls_last` are documented in the F expression documentation, this is not included in the documentation on the `order_by` queryset method. It would be useful to include a note, and possibly an example, in the `order_by` method to make it easier to find.

This is the 2.1.x branch version of https://github.com/django/django/pull/11083",PaulWay,None,2019-03-18T00:12:38Z,2019-03-18T00:24:08Z
11089,Adding note on ordering with nulls using F expressions in order_by (2.1.x branch),"While the `nulls_first` and `nulls_last` are documented in the F expression documentation, this is not included in the documentation on the `order_by` queryset method. It would be useful to include a note, and possibly an example, in the `order_by` method to make it easier to find.

This is a 2.1.x branch version of https://github.com/django/django/pull/11083",PaulWay,None,2019-03-18T00:09:59Z,2019-03-18T00:11:16Z
11088,Fixed #28431 -- Added a system check for BinaryField to prevent strings defaults.,"[ticket_28431](https://code.djangoproject.com/ticket/28431).
Add system check to prevent string as the default value for `BinaryField`. based on @claudep suggestion on the [ticket](https://code.djangoproject.com/ticket/28431#comment:5).",hramezani,None,2019-03-17T20:52:14Z,2019-03-28T03:07:59Z
11087,Fixed #30191 -- Only selected referenced fields during cascade deletion. ,https://code.djangoproject.com/ticket/30191,charettes,None,2019-03-16T22:59:57Z,2019-04-17T12:40:22Z
11086,Fixed #30258 -- Adjusted postgres schema value quoting of ranges.,"https://code.djangoproject.com/ticket/30258

Thanks Tilman Koschnick for the report and patch.",charettes,None,2019-03-16T18:03:41Z,2019-03-18T08:31:23Z
11085,Fixed #30254 - allow model metaclasses to access the attribute dict in __init__,"When partitioning the attrs dict into attributes that provide contribute_to_class vs ones that don't,
the partitioning needs to be performed non-destructively so that metaclasses that inherit from
ModelBase still have access to the full set of attributes.",gasman,None,2019-03-14T17:47:04Z,2019-03-15T01:31:47Z
11083,Fixed #30253 -- Doc'd how to order nulls in QuerySet.order_by().,"While the `nulls_first` and `nulls_last` are documented in the `F` expression documentation, this is not included in the documentation on the `order_by` queryset method. It would be useful to include a note, and possibly and example, in the `order_by` method to make it easier to find.",PaulWay,None,2019-03-14T03:10:49Z,2019-03-18T15:12:31Z
11082,Fixed serializers tests per PyYAML 5.1.,"`PyYAML` changed default value of `default_flow_style` to `False` in the `5.1` release 
(see https://github.com/yaml/pyyaml/commit/507a464ce62c933bf667b2296a96ad45f0147873 and [CHANGES](https://github.com/yaml/pyyaml/blob/master/CHANGES))",felixxm,None,2019-03-13T19:13:15Z,2019-03-14T17:34:20Z
11081,Simplified test_transform()s in db_functions.math.,IMO `assertQuerysetEqual()` and lambda expressions are unnecessary.,felixxm,None,2019-03-13T17:27:34Z,2019-03-15T07:15:34Z
11080,Improved exception message checking in some tests.,,jdufresne,None,2019-03-13T13:06:58Z,2019-04-24T09:49:58Z
11079,Fixed #29810 -- Fixed crash of select_related() on FilteredRelation with empty result.,Ticket: [#29810](https://code.djangoproject.com/ticket/29810),cansarigol,None,2019-03-13T11:37:38Z,2020-09-04T12:26:18Z
11078,#16508 Virtual Field initial work,work in progress,auvipy,None,2019-03-13T05:44:49Z,2020-04-01T08:41:40Z
11077,Fixed #30249 -- Deprecated raising test client requests exceptions in tests.,"Added `SimpleTestCase.assertRequestRaises()` to assist in testing a exceptions raised during a test client request.

https://code.djangoproject.com/ticket/30249",jdufresne,None,2019-03-12T12:37:59Z,2019-04-24T09:49:44Z
11076,Fixed #30231 -- Fixed FilteredSelectMultiple widget verbose_name usage,"Changed SelectFilter initialization call to fit to call at end of SelectFilter2.js so that verbose name is used as expected for newly added elements via ""add another"" button too",FlorianSchuler,None,2019-03-11T11:05:03Z,2019-03-18T00:54:32Z
11075,Fixed #30161 -- Added how to decorate class-based views to view decorators docs.,https://code.djangoproject.com/ticket/30161,alexanderblnf,None,2019-03-11T10:19:38Z,2019-03-12T15:27:01Z
11074,Clarify deconstruct() in Custom Model Field docs,"This makes a minor change to the Custom Model Fields documentation that explains that field deconstruction is used during model migration & further explains the second example.  For a new reader, it wasn't exactly clear why one needed to write a `deconstruct()` method; the docs mentioned serialisation but omitted the purpose.

Let me know if this change is considered more than [trivial](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/submitting-patches/#typo-fixes-and-trivial-documentation-changes) and I'll open a Trac ticket.",davidjb,None,2019-03-11T03:15:19Z,2019-03-12T14:45:06Z
11073,Minimized code in try block in Client.request() to just the code required.,"Better follows PEP8 guideline:

https://legacy.python.org/dev/peps/pep-0008/#programming-recommendations

> Additionally, for all try/except clauses, limit the try clause to the absolute minimum amount of code necessary. Again, this avoids masking bugs.",jdufresne,None,2019-03-11T00:46:51Z,2019-04-24T09:50:14Z
11072,Refs #18807 -- Removed unused exception handler from Client.request().,Unused since 8bd7b598b6de1be1e3f72f3a1ee62803b1c02010.,jdufresne,None,2019-03-11T00:09:08Z,2019-04-24T09:50:13Z
11071,Simplified forms_tests.tests.test_formsets.,,felixxm,None,2019-03-10T12:27:42Z,2019-03-12T14:46:56Z
11070,Fixed #29379 -- Add autocomplete attribute to contrib.auth fields,"https://code.djangoproject.com/ticket/29379
Just a little change in [pr_9921](https://github.com/django/django/pull/9921), so tests are passed.
Do we need to add tests for it? how?",hramezani,None,2019-03-10T10:05:36Z,2019-06-07T10:44:40Z
11069,Fixed highlight language in docs.,"Replaced ""pycon"" with ""python"".",arthurio,None,2019-03-10T04:44:30Z,2019-03-10T21:14:06Z
11068,Added LazySettings._set_wrapped_settings,"This provides a single point for debugging where (wrapped) settings are
being set.",blueyed,None,2019-03-10T00:16:24Z,2020-01-03T23:40:27Z
11067,Fixed #30245 -- Added -k option to DiscoverRunner.,Ticket https://code.djangoproject.com/ticket/30245.,francoisfreitag,None,2019-03-09T14:38:45Z,2019-04-30T15:59:39Z
11066,Fixed #29706 -- Made RenameContentType._rename() save to the correct database.,https://code.djangoproject.com/ticket/29706,hramezani,None,2019-03-09T13:03:14Z,2019-06-06T10:30:04Z
11065,Fixed typo in tests/check_framework/test_translation.py comment.,,pope1ni,None,2019-03-09T09:20:24Z,2019-03-09T13:53:19Z
11064,Mistake in the documentation,"The example given in the documentation does not work.
Link for more information:
https://stackoverflow.com/questions/5682809/django-static-file-hosting-an-apache",Pujomir,None,2019-03-08T21:53:39Z,2019-03-08T22:38:32Z
11063,Fixed #30243 -- Simplified ModelAdmin.render_change_form()'s has_file_field.,https://code.djangoproject.com/ticket/30243,btknu,None,2019-03-08T18:14:13Z,2019-03-08T23:03:59Z
11062,Subquery resolving refactor and bug fixing.,"This allows the removal of a few hacks and address two tickets

- [#21703](https://code.djangoproject.com/ticket/21703) now that `OuterRef` resolution is moved to `Query` it allows it to use this construct internally when performing a `split_exclude`.
- [#30188](https://code.djangoproject.com/ticket/30188) the resolving logic push downs addresses the `AssertionError` on `set_source_expressions` but another commit was needed to address a broken reference caused by `rewrite_cols`. This method really needs to be refactored to either clear the existing inner queries annotations before performing the rewrite or reused the existing refs to prevent double work. I think this should be handled in a separate PR/ticket though.",charettes,None,2019-03-08T16:34:17Z,2019-04-05T14:06:49Z
11061,Fixed #30242 -- Removed extra space before LIMIT/OFFSET SQL.,"`SQLCompiler.as_sql()` joins each SQL clause with `' '` and limit/offset clause string is obtained from `DatabaseOperations.limit_offset_sql()`.

But, current implementation of `limit_offset_sql()` always produces a space at the beginning of its SQL string. This behavior appeared after 03da070f5cfda592a174f8c19349638656a521b2 on PR django/django#9198.

These two facts make double spaces before LIMIT clause when `as_sql()` executes and it can be reproduced easily by checking the result of:

```python
from django.contrib.auth.models import User
User.objects.values('id')[1:2].query.__str__()
```

This commit removes a space produced by `limit_offset_sql()` on both `BaseDatabaseOperations` and `oracle.DatabaseOperations`.

> **Below change was in the original commit, but discarded during a review process.**
> This commit also formats the doc string of `limit_offset_sql()` of `BaseDatabaseOperations` to make it same with other doc strings in the same class.",hangpark,None,2019-03-08T05:59:19Z,2019-03-10T05:23:49Z
11060,Fixed #30241 -- Added system checks for translation settings.,Ticket [#30241](https://code.djangoproject.com/ticket/30241).,pope1ni,None,2019-03-07T23:03:42Z,2019-03-28T20:59:15Z
11059,"Fixed #30240 -- Added SHA1, SHA224, SHA256, SHA384 and SHA512 database functions.","Ticket [#30240](https://code.djangoproject.com/ticket/30240).
Replaces PR #11006.",pope1ni,None,2019-03-07T21:41:42Z,2019-03-20T19:17:48Z
11058,Refs #30186 -- Changed MigrationRecorder.applied_migrations() to return a dict.,"Loader.applied_migrations() returns a dict instead of a set
to allow access to the applied property in the value, but retaining
the set-ish nature for comparisons in executor.py and recorder.py.",tim-schilling,None,2019-03-07T16:56:26Z,2019-03-08T00:36:56Z
11057,Fixed #30237 -- Made Authentication/SessionMiddleware and ModelBackend admin checks allow subclasses.,"Trac: https://code.djangoproject.com/ticket/30237

My first patch to Django (:heart:) so I'm still new to naming conventions, styling and utility methods which might be available. Please suggest improvements if any!",hermansc,None,2019-03-05T21:45:50Z,2019-03-15T00:36:26Z
11056,Refs #30233 Add support for InlineModelAdmin to access parent_model's…,"Refs [Ticket 30233](https://code.djangoproject.com/ticket/30233)
maybe we can add a optional `obj=None` parameter to `get_queryset` method like `has_change_permission` and It's still  backward campability.",codetalks-new,None,2019-03-04T21:31:06Z,2019-03-06T15:03:31Z
11055,Fixed #30235 --  Fixed translation of changing password message,,ghost,None,2019-03-04T11:38:43Z,2019-03-04T11:42:38Z
11054,WIP: Fixed #25872 -- Added `force_escape` argument for blocktrans template tag to force HTML escaping.,Ticket - https://code.djangoproject.com/ticket/25872,sasha0,None,2019-03-04T10:42:47Z,2020-04-01T05:55:11Z
11053,Fixed #30234 -- Disallowed non-upper settings in settings.configure().,https://code.djangoproject.com/ticket/30234,orlnub123,None,2019-03-04T01:31:46Z,2019-03-05T15:18:21Z
11052,Removed executable bit from static asset xregexp.js.,,jdufresne,None,2019-03-03T15:54:42Z,2019-03-10T00:06:47Z
11051,"Reverted ""Fixed relative paths imports per isort 4.3.5.""","This reverts commit 463fe11bc8b2d068e447c5df677e7a31c2af7e03 due to restore of relative paths sorting from `isort` < 4.3.5 in `isort` [4.3.10](https://github.com/timothycrosley/isort/releases/tag/4.3.10).

Alternatively we can add `-rr` to reverse the order of relative path imports (see 
https://github.com/jpgrayson/isort/commit/e60c651a3e7847f406c0ee8a8eb36c96bfe24cb7 and https://github.com/timothycrosley/isort/issues/417). I would prefer to restore the previous order because it seems more correct to sort from the least local  import.",felixxm,None,2019-03-03T15:38:36Z,2019-03-03T18:34:05Z
11050,Fixed #30188 -- Added exception message for subqueries which are used to be in case statement.,https://code.djangoproject.com/ticket/30188,cansarigol,None,2019-03-03T15:23:39Z,2019-03-11T09:04:15Z
11049,Fixed #30232 - Corrected error message for invalid DurationField,"The current error message for invalid DurationField says that this should be the format of durations: ""[DD] [HH:[MM:]]ss[.uuuuuu]"". But according to the actual behaviour, it should be: ""[DD] [[HH:]MM:]ss[.uuuuuu]"", because seconds are mandatory, minutes are optional, and hours are optional if minutes are provided.

Also the duration fields could have a default help_text with the requested format, because the syntax is not self-explanatory.",avas9366,None,2019-03-03T09:56:16Z,2019-03-05T00:25:28Z
11046,Fixed #6135 - Added autoescape_aware decorator,https://code.djangoproject.com/ticket/6135,SethThoburn,None,2019-03-02T23:15:54Z,2019-03-02T23:31:25Z
11044,Fixed #29459 -- Initialized form data/files with empty MultiValueDicts.,"Found this issue: https://code.djangoproject.com/ticket/29459 

Seemed pretty easy for a new contributor. Worth giving a try!",AndraIonescu,None,2019-03-02T18:14:26Z,2019-03-05T15:41:10Z
11043,Merged isinstance() calls.,,jdufresne,None,2019-03-02T02:51:19Z,2019-03-03T15:33:19Z
11042,Fixed #30227 -- Fixed crash on request without boundary in Content-Type.,https://code.djangoproject.com/ticket/30227,timgraham,None,2019-03-01T18:02:29Z,2019-03-02T15:35:57Z
11041,Refs #29408 -- Cosmetic edits for validation of related fields and lookups in model Meta.ordering.,Follow up to 440505cb2cadbe1a5b9fba246bcde6c04f51d07e.,felixxm,None,2019-03-01T16:36:07Z,2019-03-01T18:38:42Z
11040,Fixed #30229 -- Removed closure compiler polyfill from inlines.min.js,"Due to the use of `.find()` in this code, the Closure Compiler is adding a polyfill. However, `find()` is only being called on jQuery objects, so this is unnecessary. As we don't require any polyfills, I've simply
disabled this feature.

I've regenerated all the compressed files with the latest version of the Closure Compiler, but `inlines.min.js` is the only one with any changes.",djw,None,2019-03-01T13:10:38Z,2019-03-01T18:02:40Z
11039,Fixed #30189 -- Removed transaction from sqlmigrate output if database doesn't use one.,https://code.djangoproject.com/ticket/30189,Parth1811,None,2019-03-01T10:24:39Z,2019-03-07T23:28:23Z
11038,Tiny permission-related docs adjustments,I extracted these from #10636 as they should be uncontroversial.,xi,None,2019-02-28T12:54:39Z,2019-02-28T14:27:16Z
11037,Fixed #30226 -- Added BaseBackend for authentication.,"As discussed in #10636 and [on the mailinglist](https://groups.google.com/forum/#!topic/django-developers/CNmz22gEsCc):

- Added a `BaseBackend` to reduce boilerplate in when writing custom backends
- Added `User.get_user_permissions()` as a logical companion to `User.get_group_permissions()`
- Added a note about [ticket 20218](https://code.djangoproject.com/ticket/20218)",xi,None,2019-02-28T12:53:01Z,2019-06-05T12:29:47Z
11036,Minor refactor to /django/contrib/admin/static/admin/js/core.js,"Opened a ticket for this refactor 
#30223",Songyu-Wang,None,2019-02-28T05:04:02Z,2019-02-28T05:09:11Z
11035,[2.2.x] Added troubleshooting for testing on OS X High Sierra and later,I noticed that running the test suite (`./runtests.py`) was failing with an obscure-looking obj-C error. I did some digging and found that OS X High Sierra introduced some changes to their internal security model which causes `fork()` to misbehave. Adding an environment variable seemed to fix this.,tombasche,None,2019-02-28T01:31:03Z,2019-02-28T11:31:01Z
11034,Fixed #30221 -- Made label suffix of admin's read-only fields translatable.,https://code.djangoproject.com/ticket/30221,etchove,None,2019-02-27T17:02:10Z,2019-03-13T10:02:43Z
11033,Fixed #30220 -- Added support for headless mode in selenium tests.,"Both Chrome and Firefox support a new headless mode now. Besides
being faster, it also is more reliable as well as convenient since
there are no windows popping up.",codingjoe,None,2019-02-27T12:24:06Z,2019-05-17T06:54:31Z
11032,Fixed #30219 -- Added SVG logo to proect welcome page,"The previous logo used a reguar font to appear somewhat like the
official django logo. The website uses an SVG of the official logo.
With the new logo, the baseline is slightly higher. This is why the
release note claim need a smaller top margin, to have the same baseline.",codingjoe,None,2019-02-27T11:08:19Z,2019-02-27T15:16:23Z
11031,Fixed #30218 -- Fixed size of admin changelist's search button.,"The search input has a font size of 13px, the button however was
set to 14px. On certain resolutions the button would appear to small.
Furthermore the button was inconsistent with the changelist action
from button.

Before:
<img width=""63"" alt=""screen shot 2019-02-27 at 11 11 38"" src=""https://user-images.githubusercontent.com/1772890/53489070-6d99ac00-3a90-11e9-98b4-d0edd84f30b9.png"">

After:
<img width=""126"" alt=""screen shot 2019-02-27 at 13 07 19"" src=""https://user-images.githubusercontent.com/1772890/53489137-a5a0ef00-3a90-11e9-86d8-dd8d3f4ab689.png"">

",codingjoe,None,2019-02-27T10:28:58Z,2019-02-28T18:45:12Z
11030,Fixed #30158 -- Avoided unnecessary subquery group by on aggregation.,"This partially reverts dd3b470 given it's not possible to group by subqueries anymore.

Refs [#29542](https://code.djangoproject.com/ticket/29542)",charettes,None,2019-02-27T04:33:12Z,2019-03-22T07:31:42Z
11029,Fixed #30215 -- Fixed autoreloader crash for modules without __spec__.,https://code.djangoproject.com/ticket/30215,shiningfm,None,2019-02-26T18:55:12Z,2019-02-27T17:28:43Z
11028,manage.py migrate: raise error on missing migrations,"It would be very useful for authomatic deploy scripts to understand if the `./manage.py migrate` command actually migrated the changes, or encountered issues.
If there are any unreflected changes in a migration, it should be considered a hard error and exit with a non-zero code.",MrMebelMan,None,2019-02-26T18:45:14Z,2019-11-12T13:53:50Z
11027,Removed AutocompleteJsonView.paginator_class (unused).,Seealso: https://github.com/django/django/pull/11026#discussion_r,codingjoe,None,2019-02-26T16:02:28Z,2019-02-27T15:14:13Z
11025,Refs #27685 -- Removed the watchman unavailable message.,"As per [the recent discussion on the mailing list](https://groups.google.com/d/msgid/django-developers/23ecaa54-a148-4439-a16b-16937da9e934%40googlegroups.com?utm_medium=email&utm_source=footer), I strongly agree with @claudep. 

I think including this 'watchman unavailable' message was an oversight on my part and really not great UX.

This PR just removes this message. I can make a ticket if required.",orf,None,2019-02-25T22:21:18Z,2019-09-22T19:53:36Z
11024,Fixed documentation of database representation for ManyToManyField.,The number of chars depends on DB. `64` is correct only for MySQL. IMO we can simplify this paragraph and remove this information.,felixxm,None,2019-02-25T14:55:49Z,2019-02-25T19:05:54Z
11023,Fixed relative paths imports per isort 4.3.5.,See [`isort` 4.3.5](https://github.com/timothycrosley/isort/blob/master/CHANGELOG.md#435---february-24-2019---last-python-27-maintenance-release),felixxm,None,2019-02-25T10:06:24Z,2019-02-25T18:49:08Z
11022,Fixed #30208 -- Fixed login header height and alignment in the largest breakpoint.,https://code.djangoproject.com/ticket/30208,matthiask,None,2019-02-24T15:45:01Z,2019-02-26T09:41:31Z
11021,Fixed #29714 -- Allowed using ExceptionReporter subclass with AdminEmailHandler.,"https://code.djangoproject.com/ticket/29714
As suggested on https://code.djangoproject.com/ticket/25167

Next steps are to move getting cookies here https://github.com/django/django/blob/52e9c753659ffeab67149fcf26b95c10cf137c40/django/views/debug.py#L319 to a wrapper function so that they could be overridden.",nasirhjafri,None,2019-02-24T15:16:58Z,2019-09-04T07:31:03Z
11020,Refs #30179 -- Moved the topological sort functions to django.utils.,In preparation of the work going on in https://github.com/django/django/pull/11019.,matthiask,None,2019-02-24T12:09:38Z,2019-02-26T09:41:31Z
11019,Fixed #30179 -- Fixed form Media merging when pairwise merging is insufficient.,"Alternative proposal to #11010

Here's an alternative proposal to #11010 using the topological sort implementation which has already been battle-tested as part of Django's database migrations. The proposed code required quite a few changes to existing tests because it collects assets without dependencies at the top whereas the present code adds assets without dependencies at the end of existing asset lists if there are no additional dependencies. This is especially visible with the tests referencing the `js3` and `js4` files -- however, since there's no dependency between them their reordering is of no further consequence.

The topological sort uses sets, so the result of the sort isn't predictable. Because of this I added an additional ordering which ensures that assets should be generated in a repeatable manner. This is especially important for django-compressor and similar apps.

cc @gasman @codingjoe ",matthiask,None,2019-02-23T15:51:14Z,2019-02-27T22:22:49Z
11018,Doc'd the use of --noinput for test database handling.,"This patch documents the use of --noinput which can be useful in
several scenarios.",sgaist,None,2019-02-22T23:13:10Z,2019-03-06T02:11:01Z
11017,Fixed #30199 -- Safer docs for QuerySet.get_or_create().,"Clarified how get_or_create() relates to the example try/except code,
which has a race condition that get_or_create() exists in part to
prevent.

Made the warning about non-unique kwargs an explicit warning box, moved
it up in the section so more people will read it, and made it more
actionable.

Stopped advising MySQL users to lower the isolation level, and instead
explained the advantage of doing so but also the problems it may cause.
Added links to the relevant MySQL documentation.",alexbecker,None,2019-02-22T16:53:33Z,2019-05-17T10:23:11Z
11016,Refs #30207: Optimise paginator for tables with massive records,"I had a problem with Paginator class to slice huge dataset. In case of millions of record it can take 30 second to reach the last page. So I cam up with a solution to overcome this problem.

The problem is that for slicing data, current solution needs to compute whole list to render data `bottom:top`. The reason is that, current script will generate for example `SELECT ID, COL_1, ..., COL_N, ... WHERE ...` which has huge burden for database to slice the data. To overcome this problem we can instead select primary keys and do the slicing step and then fetch records that their pk are in that sliced list. Very simple but very efficient solution. I improved the performance for our project significantly using this approach. So form 30 seconds to only 2-3 seconds for 8 million records.

Tested DB: Postgres",javidanmd,None,2019-02-22T10:19:24Z,2019-06-10T17:08:54Z
11015,Optimise paginator for tables with massive records,"I had a problem with Paginator class to slice huge dataset. In case of millions of record it can take 30 second to reach the last page. So I cam up with a solution to overcome this problem.

The problem is that for slicing data, current solution needs to compute whole list to render data `bottom:top`. The reason is that, current script will generate for example `SELECT ID, COL_1, ..., COL_N, ... WHERE ...` which has huge burden for database to slice the data. To overcome this problem we can instead select primary keys and do the slicing step and then fetch records that their pk are in that sliced list. Very simple but very efficient solution. I improved the performance for our project significantly using this approach. So form 30 seconds to only 2-3 seconds for 8 million records.",javidanmd,None,2019-02-22T08:01:32Z,2019-02-22T10:13:30Z
11014,WIP: Added PyInotifyReloader,https://groups.google.com/d/topic/django-developers/Y3caNikdM6M/discussion,claudep,None,2019-02-21T20:42:00Z,2020-06-01T09:32:07Z
11013,Update code coverage guide: include PYTHONPATH,"Without this addition, coverage would die with `ImportError: cannot import name RemovedInDjango31Warning`",khink,None,2019-02-21T18:23:16Z,2019-02-22T08:16:24Z
11012,Refs #30057 -- Added more diffsettings tests,"A continuation of #10785.

I've removed the test overhaul and added the original test in a separate file and an additional test that checks if the is_overridden method shows up.

If you think the overhaul was worthwhile I can fix the style issues and add it to this PR.",orlnub123,None,2019-02-21T15:21:17Z,2019-02-26T16:03:53Z
11011,Fixed #30196 -- Made FileResponse always set Content-Disposition header.,"FileResponse currently sets the Content-Disposition header only if as_attachment is true.

Setting it explicitly to, e.g. 'inline; filename=""example.png""' in the other case would allow the browser to set a default name for that inline file in case a user attempts to download it with the 'Save image as...' option.

That filename value is also visible in the title of the tab when image is being viewed directly in Firefox (at least v56).

Created a ticket here: https://code.djangoproject.com/ticket/30196",ShingenPizza,None,2019-02-21T03:25:10Z,2019-05-17T10:07:28Z
11010,Fixed #30179: Handle Media definitions that cannot be resolved with pairwise merges,"https://code.djangoproject.com/ticket/30179

Even if we defer merges until the final asset list is ready to be produced (#30153), there will still be some valid media orderings that cannot be resolved by the strategy of merging lists into the result one by one; this is because the intermediate results are flat lists, which create implicit dependencies between list items that don't exist in the source data. These (bogus) dependencies can then be contradicted by later merges.

To avoid this, we merge all sub-lists in a single operation, building a dependency graph which (in all valid cases) should be acyclic; we follow those dependencies in reverse to establish a valid ordering.",gasman,None,2019-02-20T21:31:05Z,2019-02-25T20:06:32Z
11008,Removed an outdated comment on DefaultConnectionProxy.,"The comments made sense once (see commits 315145f7ca, ff60c5f9d) but no longer. The pertinent information is found in the docstring.",bluetech,None,2019-02-19T20:42:40Z,2019-02-20T16:30:52Z
11007,Fixed #30193 -- Avoided PostgreSQL connection health checks on initialization.,"This addressed a regression introduced by a96b901 as identified by @bluetech.

Refs [#28478](https://code.djangoproject.com/ticket/28478).",charettes,None,2019-02-19T19:48:42Z,2019-02-20T14:36:45Z
11006,"Refs #28643 -- Added SHA1, SHA224, SHA256, SHA384 and SHA512 database functions.","Ticket [#28643](https://code.djangoproject.com/ticket/28643).

I was inspired by #11004 :grin: This is not perfect and I expect a few things will blow up initially...
",pope1ni,None,2019-02-19T00:04:36Z,2019-03-08T19:24:07Z
11005,Fixed #30183 -- Added parsing of inline SQLite constraints.,,tbicr,None,2019-02-18T22:16:56Z,2019-03-13T19:50:31Z
11004,Refs #28643 -- Added MD5 database function.,Ticket [28643](https://code.djangoproject.com/ticket/28643).,felixxm,None,2019-02-18T20:44:36Z,2019-02-21T09:53:31Z
11003,Fixed #30014 -- Fixed ModelChoiceField validation when initial value is a model instance.,,etchove,None,2019-02-17T22:24:49Z,2019-10-11T12:32:41Z
11002,Fixed #30014 -- Fix disabled ModelChoiceField validation,"Fix disabled ModelChoiceField validation
when initial is a model instance",etchove,None,2019-02-17T22:01:31Z,2019-02-17T22:23:20Z
11001,Fixed #29692 -- Fixed removing ordering parts for multiline RawSQL expressions.,Ticket: [#29692](https://code.djangoproject.com/ticket/29692),cansarigol,None,2019-02-17T13:02:09Z,2019-05-03T06:53:36Z
11000,added search engine url,Add a link to search stackoverflow or a configured search engine with the error message in the HTTP-500 debugging template.,prhbrt,None,2019-02-17T11:26:27Z,2019-02-22T08:50:22Z
10999,Fixed #30141 -- Fixed parse_duration() for some negative durations.,https://code.djangoproject.com/ticket/30141,earlbread,None,2019-02-16T07:44:50Z,2019-02-24T02:01:55Z
10998,Fixed 30138 -- Allow QuerySet.bulk_create() to set pk of created objects when ignore_conflicts=True,https://code.djangoproject.com/ticket/30138,earlbread,None,2019-02-16T06:59:04Z,2020-01-02T13:48:38Z
10997,Fixed #30186 -- Made showmigrations --list display the applied datetimes at verbosity 2+.,"When verbosity is 2 or greater and listing migrations with
showmigrations, include the applied datetime in the output.",tim-schilling,None,2019-02-15T15:10:47Z,2019-03-08T13:42:01Z
10996,"Fixed #30187 -- Moved ""install Django"" command to a console box.",https://code.djangoproject.com/ticket/30187,felixxm,None,2019-02-15T13:59:58Z,2019-02-16T06:56:55Z
10995, Refs #19544 -- Ignored auto-created through additions conflicts if supported.,"https://code.djangoproject.com/ticket/19544#comment:20

This doesn't solve the issue for Oracle which doesn't support `bulk_create(ignore_conflicts)`.",charettes,None,2019-02-15T06:12:36Z,2019-10-18T06:05:55Z
10994,Made a requests test that will fail in 2028 fail 10 years later.,"Forward-port of #10993 

Fix tests in 2028, but staying in 2038 to not fail on 32-bit systems

Background:
As part of my work on reproducible builds for openSUSE, I check that software still gives identical build results in the future.
The usual offset is +15 years, because that is how long I expect some software will be used in some places.

See https://reproducible-builds.org/ on this topic.",bmwiedemann,None,2019-02-14T09:40:41Z,2019-12-10T20:01:44Z
10993,[1.11.x] Made a requests test that will fail in 2028 fail 10 years later.,"Fix tests in 2028, but staying in 2038 to not fail on 32-bit systems

Background:
As part of my work on reproducible builds for openSUSE, I check that software still gives identical build results in the future.
The usual offset is +15 years, because that is how long I expect some software will be used in some places.

See https://reproducible-builds.org/ on this topic.",bmwiedemann,None,2019-02-14T03:58:01Z,2019-02-14T14:43:49Z
10992,Removed docs of unused libgeoip1/python-gdal packages.,"Maybe libgeoip1 did something for the old version of geoip, but geoip2 tests are passing without it.
I believe python-gdal is https://pypi.org/project/GDAL/ which Django doesn't seem to use (no ""osgeo"" imports). 

(Now maybe this mention is merely to suggest other convenient libraries for use in GIS projects, but I think that's not really the place for Django's docs.)

Hopefully a GIS user can correct me if I missed something \cc @claudep @sir-sigurd 

I think `libproj-dev` may also be more than is needed. It installs a `libprojXY` as a side effect which it seems is what's required.",timgraham,None,2019-02-14T02:41:16Z,2019-02-14T14:46:52Z
10991,Fixed admin_scripts test failures on macOS.,"os.path.realpath() is required for temporary directories on macOS, where `/var` is a symlink to `/private/var`[*].

Regression in 487d904bf253de2f5633f181a168f94086bcd6cb. (See https://github.com/django/django/commit/487d904bf253de2f5633f181a168f94086bcd6cb#commitcomment-32304839)


[*]: 
```
~ $ ls -ld /var
lrwxr-xr-x@ 1 root  wheel  11 Dec 11 14:41 /var -> private/var
```",carltongibson,None,2019-02-13T19:37:33Z,2019-02-14T13:28:23Z
10990,Remove sender from update_last_login,"I can't see the attribute ""sender"" in update_last_login being used anywhere in this file nor is it returned so another object could use it.",ghost,None,2019-02-13T08:52:09Z,2019-02-20T21:25:25Z
10989,Fixed #30184 -- Removed ellipsis characters from shell output strings.,https://code.djangoproject.com/ticket/30184,danizen,None,2019-02-12T22:59:45Z,2019-02-13T18:59:45Z
10988,Honor LANG environment variable during testing,"Sets HTTP_ACCEPT_LANGUAGE header for the client request during testing. This will allow you to do:

```
$ export LANG=fr-FR
$ firefox http://127.0.0.1:8000/ - for manual testing
$ ./manage.py test  - for automated testing
```

From what I can tell it is not possible to configure the language used during testing, for all tests at once! 

Background:
In Kiwi TCMS we are using django-vinaigrette which allows some model fields to be translated in .po files and depending on how we use the values (e.g. dictionary lookup) there could be failures. My intention was to re-run the existing test suite by activating some of our most popular languages and discover all the places where the app fails. It is possible with the change in this PR.

Note: I realize that when matching strings (e.g. `self.assertContains()`) we'll have to match against the translated version. This is exactly what we need!",atodorov,None,2019-02-12T22:29:32Z,2019-02-12T23:45:03Z
10987,Fixed #25536 -- Add ptpython (prompt toolkit based shell).,"I think this (while simple) will be a nice addition to the `shell` command, `ptpython` has a lot of editor-like features and some of use use the management shell a lot",yorodm,None,2019-02-12T22:19:51Z,2019-02-13T07:23:58Z
10986,Refs #29478 -- Clarified cached_property 2.2 release note.,As requested by @graingert ,timgraham,None,2019-02-12T20:15:30Z,2019-02-12T23:35:54Z
10985,Fixed #30181 -- Made cache.get() with default work correctly on PyLibMCCache if None is cached.,This PR fixes https://code.djangoproject.com/ticket/30181,samupl,None,2019-02-12T13:17:43Z,2019-07-05T10:44:35Z
10984,Removed unneeded list() calls in enumerate() argument.,,sir-sigurd,None,2019-02-12T02:53:19Z,2019-02-12T13:32:12Z
10983,Fix for #30178 - allow oracle password to be a string-like object:,"- Provide a test case in tests/backends/oracle/tests.py
- Provide the most naive fix that could work in django/db/backends/oracle/base.py",danizen,None,2019-02-11T22:30:24Z,2019-02-13T00:53:01Z
10982,Fixed #30178 -- Allowed DATABASES password to be a lazy string.,"If ticket #30178 is taken as a simple bug fix, then this is a conservative fix.",danizen,None,2019-02-11T21:38:00Z,2019-02-11T23:47:21Z
10981,Fixed indentation in docs/topics/templates.txt.,"url: https://docs.djangoproject.com/en/2.1/topics/templates/#custom-backends

<img width=""870"" alt=""screen shot 2019-02-11 at 18 11 34"" src=""https://user-images.githubusercontent.com/433609/52593802-a434bd00-2e28-11e9-9cf4-81c0b4a9655a.png"">
",jaanauati,None,2019-02-11T21:13:43Z,2019-02-11T21:52:32Z
10980,Fixed #30178 -- Allowed DATABASES password to be a lazy string.,Please review and provide feedback.,danizen,None,2019-02-11T21:06:01Z,2019-02-11T21:34:33Z
10979,Fixed #30177 -- Fixed format_number() crash with over 200 digits.,"There are existing test failures. The incorrect patch was applied
in 1f42f82566c9d2d73aff1c42790d6b1b243f7676.

https://code.djangoproject.com/ticket/30177",timgraham,None,2019-02-11T18:48:59Z,2019-02-11T21:15:44Z
10978,Fixed #30172 -- Prevented Meta constraints from being removed in other migration operations.,https://code.djangoproject.com/ticket/30172,tbicr,None,2019-02-11T14:27:23Z,2019-03-18T08:36:20Z
10977,"Refs #30175 -- Added release notes for 2.1.7, 2.0.12, and 1.11.20 releases.",,carltongibson,None,2019-02-11T14:24:11Z,2019-02-11T14:46:38Z
10976,Fixed typo in docs/releases/2.2.txt.,"Sorry, this is a redo of #10975 re-targeted to the `master` branch!",toolness,None,2019-02-11T12:42:41Z,2019-02-11T13:54:06Z
10975,Fixed typo in docs/releases/2.2.txt.,"Just noticed this typo while reading the notes on the website... I'm not sure if this is the right branch to be committing the change to though, but I didn't see the release notes in the `master` branch.",toolness,None,2019-02-11T12:36:00Z,2019-02-11T12:43:59Z
10974,Fixed spelling mistakes in comments and tests.,"Fixed typos:

nonexistant_file -> nonexistent_file
propogates -> propagates
availabe_apps -> available_apps

Found with: https://github.com/ss18/grep-typos",ss18,None,2019-02-11T11:31:09Z,2019-02-11T20:22:54Z
10973,Fixed #30173 -- Simplified db.backends.postgresql.client.,https://code.djangoproject.com/ticket/30173,dbowring,None,2019-02-11T01:19:56Z,2019-02-13T22:31:23Z
10972,Fixed #30171 -- Made DatabaseWrapper thread sharing logic reentrant.,"Changed to use a reference counting like scheme to allow nested uses. To increment the reference count, use the method `DatabaseWrapper.inc_thread_sharing()`. To decrement it, use the method
`DatabaseWrapper.dec_thread_sharing()`. `DatabaseWrapper.allow_thread_sharing` is `True` if the reference count is greater than zero.

This change obviates the need for passing the value of `allow_thread_sharing to the constructor, so it has been removed.

Fixed the following warning during LiveServerTestCase:

```
    Exception in thread Thread-16:
    Traceback (most recent call last):
      File ""/usr/lib64/python3.7/threading.py"", line 917, in _bootstrap_inner
        self.run()
      File ""django/test/testcases.py"", line 1399, in run
        connections.close_all()
      File ""django/db/utils.py"", line 224, in close_all
        connection.close()
      File ""django/db/backends/sqlite3/base.py"", line 244, in close
        self.validate_thread_sharing()
      File ""django/db/backends/base/base.py"", line 531, in validate_thread_sharing
        % (self.alias, self._thread_ident, _thread.get_ident())
    django.db.utils.DatabaseError: DatabaseWrapper objects created in a thread can only be used in that same thread. The object with alias 'default' was created in thread id 140092344866304 and this is thread id 140091929347840.
```

https://code.djangoproject.com/ticket/30171",jdufresne,None,2019-02-10T16:42:25Z,2019-02-14T21:52:16Z
10971,Fixed typo in docs/releases/3.0.txt.,,jdufresne,None,2019-02-10T16:11:40Z,2019-02-14T21:52:20Z
10970,Fixed #30161 -- added link how to decorate class based views in the vi…,"https://code.djangoproject.com/ticket/30161

added link how to decorate class based views in the view decorators part",junngo,None,2019-02-10T14:14:04Z,2019-02-13T00:14:12Z
10969,Show the applied datetime in verbose showmigrations.,"When verbosity is 2 or greater and listing migrations with
showmigrations, include the applied datetime in the output.",tim-schilling,None,2019-02-09T18:32:51Z,2019-02-09T18:33:08Z
10968,Removed default empty content argument from HttpResponse calls.,,jdufresne,None,2019-02-09T15:44:42Z,2019-02-14T21:52:29Z
10967,Refs #15362 -- Removed obsolete workaround in file_uploads test view.,The file path must exist otherwise the call to `os.unlink()` would raise `FileNotFoundError`.,jdufresne,None,2019-02-09T15:31:02Z,2019-02-14T21:52:37Z
10966,Simplified Window.as_sql().,,sir-sigurd,None,2019-02-09T10:39:16Z,2019-02-09T13:48:01Z
10965,Removed uneeded iter() calls with generator expression as argument.,,sir-sigurd,None,2019-02-09T10:27:06Z,2019-02-09T14:22:11Z
10964,Removed unneeded list() calls in sorted() argument.,,sir-sigurd,None,2019-02-09T10:08:44Z,2019-02-12T09:32:38Z
10963,Removed some uneeded generator expressions and list comprehensions.,,sir-sigurd,None,2019-02-09T09:56:24Z,2019-02-09T14:20:28Z
10962,Confirmed support for GDAL 2.4.,I don't see any test failures on an Ubuntu 19.10 build which packages GDAL 2.4.,timgraham,None,2019-02-08T23:32:21Z,2019-10-31T21:47:33Z
10961,Simplified FileBasedCache.clear().,"In `FileBasedCache.clear()`, remove the unnecessary exists guard and instead iterate over an empty list returned by `FileBasedCache._list_cache_files()`.

In `FileBasedCache._list_cache_files()`, remove the unnecessary exists guard as `glob.glob1()` already ignores missing paths. For example:

    >>> import glob
    >>> glob.glob1('missing', '*')
    []",jdufresne,None,2019-02-08T22:24:16Z,2019-03-03T15:33:28Z
10960,Dropped support for GEOS 3.4.,,timgraham,None,2019-02-08T19:39:19Z,2019-02-09T13:41:01Z
10959,Fixed #30166 -- Dropped support for GDAL 1.11.,https://code.djangoproject.com/ticket/30166,timgraham,None,2019-02-08T15:23:01Z,2019-02-08T19:33:02Z
10958,Removed extra characters in docs header underlines.,,felixxm,None,2019-02-08T12:17:27Z,2019-02-08T20:38:36Z
10957,"Fixed #30165 -- Deprecated ugettext, ugettext_lazy, ugettext_noop, ungettext, and ungettext_lazy.",https://code.djangoproject.com/ticket/30165,jdufresne,None,2019-02-08T02:22:31Z,2019-02-08T15:43:52Z
10956,Added PositiveIntegerField support to LayerMapping.,This seems only an oversight.,gabbork,None,2019-02-07T21:31:48Z,2019-02-24T01:13:17Z
10955,Updated Oracle docs links to Oracle 18c.,,felixxm,None,2019-02-06T19:29:15Z,2019-02-07T09:00:15Z
10954,Refs #15372 -- Removed obsolete docs about manage.py setting sys.path.,"The current django-admin documentation page contains an outdated and incorrect description of what manage.py does.

[The docs say](https://docs.djangoproject.com/en/2.1/ref/django-admin/#django-admin-and-manage-py) that manage.py adds the project package to `sys.path`, but this is not true as of Django 1.4.

In versions of Django before 1.4, the manage.py script invoked logic that would add your project to `sys.path`. This code lived in [`django.core.management.setup_environ`](https://github.com/django/django/blob/1.3.7/django/core/management/__init__.py#L381).

The [changes to manage.py](https://docs.djangoproject.com/en/2.1/releases/1.4/#updated-default-project-layout-and-manage-py) and the [deprecation of this sys.path behavior]( https://docs.djangoproject.com/en/2.1/releases/1.4/#django-core-management-setup-environ) were documented in the 1.4 release notes. It looks like the logic was removed in 1.6.",chosak,None,2019-02-06T19:06:14Z,2019-02-06T20:10:20Z
10953,Fixed #30014 -- initial value cast in form.ModelChoiceField,,etchove,None,2019-02-06T16:47:06Z,2019-02-06T16:59:10Z
10952,ModelAdmin: add get_inline_classes() hook,"Hook to change ModelAdmin.inlines per request.

A cleaner hook than to copy get_inline_instances() and copy all the permission checks (which might change in the future)",maldn,None,2019-02-06T14:05:49Z,2019-02-06T14:25:05Z
10950,Removed unnecessary type() calls for class methods.,,jdufresne,None,2019-02-06T03:27:16Z,2019-02-08T15:44:10Z
10949,Used TestCase.subTest in admin_scripts invalid name tests.,,jdufresne,None,2019-02-06T02:08:11Z,2019-02-08T15:44:17Z
10948,Refs #30014 -- Doc'd how to use initial values for (Multiple)ModelChoiceField.,https://code.djangoproject.com/ticket/30014,timgraham,None,2019-02-06T01:08:54Z,2019-09-05T23:24:13Z
10947,Fixed #30160 -- Added support for LZMA and XZ templates to startapp/startproject management commands.,Ticket [#30160](https://code.djangoproject.com/ticket/30160).,pope1ni,None,2019-02-05T22:03:16Z,2019-07-31T09:38:52Z
10946,Fixed #30158 -- Stopped grouping by annotated subqueries.,"Fixed for https://code.djangoproject.com/ticket/30158#ticket

I think I need help coming up with a testcase. Not sure how to check if the unnecessary subqueries are rendered by the qs.query, but I confirmed it works for my use case and in the ticket Simon states the fix does not break existing tests. @charettes can you think of a good way to validate in the existing Django unittests?",JonnyWaffles,None,2019-02-05T21:55:40Z,2019-02-27T04:31:34Z
10945,Fixed #30159 -- Removed obsolete use of OrderedDict with Python 3.6+.,"Ticket [#30159](https://code.djangoproject.com/ticket/30159).

Follows on from https://github.com/django/django/pull/10894#issuecomment-458984351.

Use of `OrderedDict` remains in two places:

- `django.core.cache.backends.locmem` -- uses [`OrderedDict.move_to_end()`](https://docs.python.org/3/library/collections.html#collections.OrderedDict.move_to_end).
- `django.core.serializers.pyyaml` -- retain ability to serialize `OrderedDict`.

Some observations:

- We no longer need `DeclarativeFieldsMetaclass.__prepare__()` as the [class namespace is initialised as an empty ordered mapping](https://docs.python.org/3.6/reference/datamodel.html#preparing-the-class-namespace).
- We no longer need the `object_pairs_hook` parameter to [`json.loads()`](https://docs.python.org/3/library/json.html#json.loads) in `ManifestFilesMixin.load_manifest()` as `dict` is the default.
- A workaround is currently required in `django.core.serializers.pyyaml` because dictionary items are sorted by key, see yaml/pyyaml#143.
- `Query.annotations` and `Query.extra` are simplified because it is no longer necessary to instantiate an `OrderedDict` lazily.
- The unit test `queries.tests.Queries1Tests.test_ticket2902` is obsolete and is removed.",pope1ni,None,2019-02-05T20:50:29Z,2019-02-06T19:53:09Z
10944,Fixed #30157 -- Dropped support for Oracle 12.1.,Ticket [30157](https://code.djangoproject.com/ticket/30157).,felixxm,None,2019-02-05T19:07:03Z,2019-02-06T18:25:40Z
10943,"assert equal testcase for datetime, date field",,arneec,None,2019-02-05T17:00:36Z,2019-02-05T18:15:55Z
10942,Replaced manual current directory management with the subprocess cwd argument.,,jdufresne,None,2019-02-05T15:00:11Z,2019-02-08T15:44:17Z
10941,Removed redundant os.chdir() in RunInTmpDirMixin child classes.,RunInTmpDirMixin.setUp() already calls os.chdir(self.test_dir).,jdufresne,None,2019-02-05T14:46:25Z,2019-02-08T15:44:18Z
10940,Simplified temporary directory handling in AdminScriptTestCase.,"In `AdminScriptTestCase.setUp()`, use Python's `tempfile.TemporaryDirectory()` to create and destroy a temporary directory per run. This removes the need for individual tests to delete files as the entire directory will be destroyed and rebuilt between runs. The result is less state and boilerplate to manage.

For test classes that don't use the temporary directory, inherit from `SimpleTestCase` instead.",jdufresne,None,2019-02-05T14:30:16Z,2019-02-08T15:44:21Z
10939,Fixed #30153 -- Fixed incorrect form Media asset ordering after three way merge.,https://code.djangoproject.com/ticket/30153,matthiask,None,2019-02-05T14:02:21Z,2019-02-09T17:15:26Z
10938,Refs #27753 -- Favored force/smart_str() over force/smart_text().,Updated from https://github.com/django/django/pull/7913.,timgraham,None,2019-02-05T13:59:42Z,2019-02-06T19:40:28Z
10937,Removed unused branch from SymlinkExtractorTests.test_symlink().,"Unused since bb7bb379e8cd91a91336946829519d64e919a1d2. `SymlinkExtractorTests.test_dir`, which contains `SymlinkExtractorTests.symlinked_dir`, is deleted after every test.",jdufresne,None,2019-02-05T03:38:00Z,2019-02-05T13:28:45Z
10936,Removed unused RunInTmpDirMixin.rmfile().,Unused since bb7bb379e8cd91a91336946829519d64e919a1d2.,jdufresne,None,2019-02-05T02:20:40Z,2019-02-05T13:28:46Z
10935,Refs #27753 -- Removed private Python 2 compatibility APIs.,,timgraham,None,2019-02-05T01:32:01Z,2019-02-05T18:54:44Z
10934,Fixed duplicate word in docs/releases/2.0.txt.,[ci skip],blueyed,None,2019-02-04T21:07:22Z,2019-02-04T23:30:10Z
10933,Refs #27753 -- Deprecated django.utils.http urllib aliases.,Updated from https://github.com/django/django/pull/7906.,timgraham,None,2019-02-04T18:43:53Z,2019-02-04T23:53:22Z
10932,Fixed #30156 -- Dropped support for SpatiaLite 4.1 and 4.2.,https://code.djangoproject.com/ticket/30156,timgraham,None,2019-02-04T17:04:45Z,2019-02-04T19:02:18Z
10931,Fixed #30155 -- Dropped support for PostgreSQL 9.4 and PostGIS 2.1.,https://code.djangoproject.com/ticket/30155,timgraham,None,2019-02-04T16:33:08Z,2019-02-04T23:26:42Z
10930,"Simplified and corrected LOGIN_URL, LOGIN_REDIRECT_URL, and LOGOUT_REDIRECT_URL docs.",,timgraham,None,2019-02-04T15:54:38Z,2019-02-06T01:09:01Z
10929,Fixes #30154: changed default LOGIN_URL,"Fixes #30154
https://code.djangoproject.com/ticket/30154",ohlr,None,2019-02-04T15:21:28Z,2019-02-04T15:56:15Z
10928,Fixed #30154 -- Doc’d LOGIN_URL compat with i18n URLs.,https://code.djangoproject.com/ticket/30154,carltongibson,None,2019-02-04T14:38:31Z,2019-02-04T15:22:23Z
10927,Fixed #29391 -- Made postgres field's lookup respect get_db_prep_value,https://code.djangoproject.com/ticket/29391,vinayinvicible,None,2019-02-03T23:34:18Z,2019-02-09T23:39:19Z
10926,Refs #28859 -- Simplified fetch_returned_insert_id() by using int data type for binding variable on Oracle.,`cx_Oracle` accepts some Python data types for variables (see [Cursor.var](https://cx-oracle.readthedocs.io/en/latest/cursor.html?highlight=cursor.var#Cursor.var)). IMO `fetch_returned_insert_id()` is clearer with using `int` data type for binding variable. This can also be helpful for #9983.,felixxm,None,2019-02-03T18:52:34Z,2019-02-08T10:15:33Z
10925,Simplified test_cursor_var() by using str instead of Database.STRING.,,felixxm,None,2019-02-03T15:31:49Z,2019-02-12T19:10:27Z
10924,Fixed #29529 -- Allowed models.fields.FilePathField to accept a callable path.,https://code.djangoproject.com/ticket/29529,jajce,None,2019-02-03T11:30:12Z,2019-05-02T09:31:41Z
10923,Used extlinks for GitHub commits.,,timgraham,None,2019-02-01T19:44:11Z,2019-02-01T20:54:14Z
10922,Removed unused words from docs/spelling_wordlist.,,felixxm,None,2019-02-01T13:49:07Z,2019-02-02T14:37:21Z
10921,Refs #28215 -- Mark credentials as a sensitive variable,"https://code.djangoproject.com/ticket/28215#comment:3

I just noticed this in a traceback. I thought I'd fix it while I saw it.",collinanderson,None,2019-02-01T04:03:44Z,2020-03-30T10:21:04Z
10920,Fixed #30148 -- Logged COPY ... TO statements in connection.queries on PostgreSQL.,"I ran into an issue where I was running postgres commands `copy_expert()` / `copy_to()` and my queries weren't showing up on my `connection.queries` while `DEBUG=True`. I figured no one has needed this before, but I need it for my tests to pass.

https://code.djangoproject.com/ticket/30148#ticket",kingbuzzman,None,2019-01-31T21:26:47Z,2019-04-29T12:44:41Z
10919,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",https://code.djangoproject.com/ticket/30147#ticket,jdufresne,None,2019-01-31T15:13:57Z,2019-02-01T02:06:38Z
10918,Link to LoginRequiredMixin from edit views docs.,"The ""models and request.user"" section currently only mentions the login_required decorator, and not the newer LoginRequiredMixin which is easier to use.",danielroseman,None,2019-01-31T12:33:00Z,2019-01-31T23:01:54Z
10917,Fixed output of example usage of Prefetch.to_attr.,,sir-sigurd,None,2019-01-31T10:15:19Z,2019-01-31T14:09:25Z
10916,TestCase for #29393 -- Infinite loop in ExceptionReporter.get_traceback_frames,,vinayinvicible,None,2019-01-31T07:17:12Z,2019-02-03T23:40:01Z
10915,Refs #29444 -- Renamed DatabaseFeatures.can_return_id* to be generic for other columns.,Extracted from https://github.com/django/django/pull/9983.,timgraham,None,2019-01-30T20:33:54Z,2019-01-30T22:30:17Z
10914,Fixed #30004 -- Set default FILE_UPLOAD_PERMISSION to 0o644,"Updated FILE_UPLOAD_PERMISSION settings default value
to 0o644 to avoid inconsitency in file permissions.
Updated test case to test against new default value and
added documentation regarding this breaking change.",Himanshu-Lakhara,None,2019-01-30T13:13:20Z,2019-02-09T00:14:44Z
10913,Fixed E117 and F405 flake8 warnings.,,felixxm,None,2019-01-30T09:52:27Z,2019-01-30T12:06:37Z
10912,Refs #30137 -- Fixed template test on Windows.,Broken in 7785e03ba89aafbd949191f126361fb9103cb980.,timgraham,None,2019-01-29T14:39:46Z,2019-01-29T15:05:16Z
10911,Fixed typo in docs/releases/2.2.txt.,"Could have been s/tests/test/ alternatively, but this appears to be
clearer even.",blueyed,None,2019-01-29T10:19:20Z,2019-01-29T14:10:31Z
10910,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,Ticket: [#30128](https://code.djangoproject.com/ticket/30128),cansarigol,None,2019-01-28T08:12:14Z,2019-06-13T19:56:03Z
10909,Bring HTTP responses in compliance with RFC 2324 and HTCPCP 1.0,,findoslice,None,2019-01-28T05:30:16Z,2019-01-28T10:29:24Z
10908,Made logging config examples more accessible.,"Documentation update which clarifies that your project's name must be included among the loggers in order to actually catch log messages from your internal libraries.  They will not by default be caught by Django.

From the existing documentation, it appeared to me that 'django' was the catch-all logger for all log messages thrown by my application.  In fact, this is not the case.  Any log message originating from my app that isn't directly coming from a Django library is silently dropped.  In order to actually include these messages, it is necessary to include an additional entry among the loggers, indicating the app name.",theGOTOguy,None,2019-01-28T01:59:42Z,2020-03-17T10:51:06Z
10907,Fixed typo in docs/ref/request-response.txt.,,GeyseR,None,2019-01-27T20:59:04Z,2019-01-27T22:30:48Z
10906,Removed default mode='r' argument from calls to open().,"Slightly simplifies the code by using well understood defaults and establishes a common pattern across uses of `open()`.

---

Refs #23919 -- Replaced `codecs.open()` with `open()`. 

On Python 3, `open()` handles encodings.",jdufresne,None,2019-01-27T20:43:58Z,2019-02-01T02:06:38Z
10905,Refs #23919 -- Replaced codecs.open() with open().,"On Python 3, `open()` handles encodings.

https://code.djangoproject.com/ticket/23919",jdufresne,None,2019-01-27T16:48:17Z,2019-02-01T02:06:40Z
10904,Fixed #30137 -- Replaced OSError aliases with the canonical OSError.,"Starting with Python 3.3, EnvironmentError, IOError, WindowsError,
socket.error, select.error and mmap.error are aliases of OSError.

For additional details, see the Python 3.3 release notes:

https://docs.python.org/3/whatsnew/3.3.html#pep-3151-reworking-the-os-and-io-exception-hierarchy

> You don’t have to worry anymore about choosing the appropriate
> exception type between OSError, IOError, EnvironmentError,
> WindowsError, mmap.error, socket.error or select.error. All these
> exception types are now only one: OSError. The other names are kept as
> aliases for compatibility reasons.

https://code.djangoproject.com/ticket/30137",jdufresne,None,2019-01-27T01:01:52Z,2019-01-29T14:56:56Z
10903,Refs #30033 -- Doc'd change regarding apps without migrations depending on apps with migrations.,"7289874adceec46b5367ec3157cdd10c711253a0 and the addition of
`self.connection.check_constraints()` in `__exit__()` is the cause.

I described this problem on an unrelated ticket:
https://code.djangoproject.com/ticket/30055#comment:3",timgraham,None,2019-01-26T21:40:17Z,2019-02-08T23:31:13Z
10902,Refs #30055 -- Added a helpful error when SQLite is too old.,,timgraham,None,2019-01-26T21:22:02Z,2019-01-28T16:15:18Z
10901,Fixed #21039 -- Introduce AddIndexConcurrently operation for PostgreSQL,This adds a `CreateIndexConcurrently` operation to the django.contrib.postgres.operations module. This operation raises a `NotSupportedError` if you attempt to run it as part of an atomic migration. It inherits from `AddIndex` and should effectively be a drop-in replacement as long as a migration has `atomic = False` set.,dtao,None,2019-01-26T21:14:26Z,2019-07-25T12:33:57Z
10900,Added missing assert to FileBasedCacheTests.test_creates_cache_dir_if_nonexistent().,,jdufresne,None,2019-01-26T21:04:16Z,2019-01-26T21:49:24Z
10899,try set port as DEV_PORT from settings if none provided from command …,…line for dev server,yashschandra,None,2019-01-26T17:58:25Z,2019-01-26T19:33:24Z
10898,Fixed #29825 -- Fixed JS ngettext if the string is a non-plural msgid in the catalog.,,claudep,None,2019-01-26T15:48:33Z,2019-01-28T20:06:38Z
10897,Update django.po,,melikyan-a,None,2019-01-26T12:10:18Z,2019-01-26T12:19:17Z
10896,Fixed #30134 -- postfixed float variables in gis js template with `|safe`,,sassanh,None,2019-01-26T01:06:08Z,2020-06-01T08:50:47Z
10895,Fixed #30064 -- Added form to validate admin search fields query input.,Ticket: [#30064](https://code.djangoproject.com/ticket/30064),cansarigol,None,2019-01-25T23:24:31Z,2019-08-22T10:18:54Z
10894,Refs #30123 -- Kept field_params ordering in introspection on PostGIS.,See [django-docker-box build](https://travis-ci.com/orf/django-docker-box/jobs/172903078) for details.,felixxm,None,2019-01-25T20:00:55Z,2019-02-06T16:59:19Z
10893,Fixed grammar in FakePayload exception message.,,jdufresne,None,2019-01-25T14:37:51Z,2019-02-01T02:07:10Z
10892,Fixed #18707 -- Added support for the test client to return 500 responses.,https://code.djangoproject.com/ticket/18707,jdufresne,None,2019-01-25T14:01:52Z,2019-03-03T15:33:30Z
10891,Refs #28161 -- Doc'd INSTALLED_APPS requirement for ArrayField(CIText).,"https://code.djangoproject.com/ticket/28161 (PR #8453) fixed type handling for ArrayFields of CIText types. The psycopg2 array type registration requires `django.contrib.postgres` to be in `INSTALLED_APPS`, similarly to [`HStoreField`](https://docs.djangoproject.com/en/2.2/ref/contrib/postgres/fields/#django.contrib.postgres.fields.HStoreField).

Without:
```
>>> MyModel.objects.create(id=1, tags=['alpacas', 'Sheep'])
>>> m = MyModel.objects.get(pk=1)
>>> m.tags
'{alpacas,Sheep}'
```
With:
```
>>> m = MyModel.objects.get(pk=1)
>>> m.tags
['alpacas', 'Sheep']
```",rcoup,None,2019-01-24T18:07:08Z,2019-01-31T18:44:07Z
10890,Remove documentation references to deactivate-transaction-management,"Previous version was misleading because having autocommit = True
shouldn't be considered as 'Django transaction management' because
what really happens is that there is no transaction handling at all
like, for example psycopg2 docs say here
http://initd.org/psycopg/docs/connection.html#connection.autocommit",eolo999,None,2019-01-24T16:29:19Z,2019-01-29T20:51:57Z
10889,Completed test coverage for utils.text._replace_entity().,,hramezani,None,2019-01-23T20:02:54Z,2019-01-24T00:33:22Z
10888,Refs #30111 -- Fixed test cleanup in tests/postgres_tests/test_integration.py.,"Fixed ""ERROR: Step ‘Publish JUnit test result report’ failed: No test
report files were found. Configuration error?"" on Jenkins because report
files were put in tests/postgres_tests.",timgraham,None,2019-01-23T18:01:10Z,2019-01-23T18:18:05Z
10887,fix ModelChoiceField.to_python,"if `field.disabled` set to `True`, and you try to submit form initial value would be used.
In this case method to_python fails, because it tries to make a `qs.filter(pk=obj)`.
In same time `ModelChoiceField` doesn't accept pk as initial value, only object.

",caullla,None,2019-01-23T16:29:55Z,2019-01-28T23:10:53Z
10886,Refs #29714 -- Added support for SafeExceptionReporterFilter to filter sensitive cookies,https://code.djangoproject.com/ticket/29714,nasirhjafri,None,2019-01-23T10:43:23Z,2019-02-24T15:11:08Z
10885,Fixed #30123 -- Removed tuple support in DatabaseIntrospection.get_field_type().,"Ticket [#30123](https://code.djangoproject.com/ticket/30123).

Split out from #10871, targeting 3.0.

Note that this includes the commits from #10883 upon which this builds.",pope1ni,None,2019-01-22T21:57:43Z,2019-01-23T19:14:55Z
10884,Fixed #30064 -- Fixed for crash NUL (0x00) characters on PostgreSQL,https://code.djangoproject.com/ticket/30064,cansarigol,None,2019-01-22T21:55:44Z,2019-01-25T15:20:17Z
10883,Various minor simplifications to introspection.,"Split out from #10871, targeting 3.0.",pope1ni,None,2019-01-22T21:54:20Z,2019-01-23T06:00:57Z
10882,Fixed #30091 -- Documented middleware ordering requirements when using CSRF_USE_SESSIONS.,"Error views are wrapped with `@requires_csrf_token`, so SessionMiddleware must appear before any middleware that may raise an exception when using `CSRF_USE_SESSIONS`.",carltongibson,None,2019-01-22T08:57:50Z,2019-01-30T18:13:31Z
10881,Fixed #30083 -- Added model state before signals are fired,https://code.djangoproject.com/ticket/30083,nasirhjafri,None,2019-01-21T11:15:38Z,2019-07-19T10:11:51Z
10880,Fixed #30120 -- Fixed a regression in distinct aggregate SQL generation.,"https://code.djangoproject.com/ticket/30120

Refs #28658, regression introduced by bc05547cd8c1dd511c6b6a6c873a1bc63417b111.

Thanks Claude for the report.",charettes,None,2019-01-21T00:22:36Z,2019-01-21T14:24:33Z
10879,Fixed #30121 -- Made assertURLEqual() coerce reverse_lazy() URLs.,https://code.djangoproject.com/ticket/30121,jdufresne,None,2019-01-20T22:55:15Z,2019-01-25T02:28:11Z
10878,Fixed typo in migration optimizer test.,Introduced in a97845a823c86b1d6e65af70fbce64e6e747e081.,vytisb,None,2019-01-20T13:44:49Z,2019-01-21T22:35:33Z
10877,Fixed #22423 - Added support for MySQL operators on real geometries,,claudep,None,2019-01-19T22:31:59Z,2019-05-14T11:02:05Z
10876,Fixed #22423 - Added support for MySQL operators on real geometries,,claudep,None,2019-01-19T14:29:44Z,2019-01-19T14:44:24Z
10875,Refs #15902 -- Deprecated storing current language in the session.,,claudep,None,2019-01-19T08:55:01Z,2019-02-14T15:42:41Z
10874,Fixed #30108 -- Allowed adding foreign key constraints in the same statement that adds a field.,"Curiously, the `BaseDatabaseSchemaEditor` class already supported the attribute `sql_create_inline_fk`, but the only implementation that supported it was sqlite3. Moreover, this attribute was only used to create FK constraints inline during table creation, not when adding a new field to an existing table.

This introduces another attribute, `sql_add_field_inline_fk`, for creating FK constraints inline when adding fields. The sqlite3 engine supports this, and so does PostgreSQL.

It was not trivially easy to enable this functionality for table creation in PostgreSQL, as explained in a [comment on #30108](https://code.djangoproject.com/ticket/30108#comment:1):

> Unfortunately this ended up causing test failures because there are ​test models defined with a cyclic dependency. It seems that SQLite doesn't mind if you create a table with a foreign key to another table that doesn't exist yet, but PostgreSQL does.

Fortunately, creating FK constraints inline on table _creation_ is hardly critical, as the default behavior of doing so in a deferred query, thereby triggering a table scan, is effectively benign for an empty table.",dtao,None,2019-01-19T04:26:51Z,2019-01-30T01:00:30Z
10873,Remove double full stop in Watchman unavailable message,Right now it prints `Watchman unavailable: Cannot connect to the watchman service..`,orf,None,2019-01-19T00:39:50Z,2019-01-20T16:49:04Z
10872,Fixed #25624 -- Fixed autoreload crash with jinja2.ModuleLoader.,"Ticket: https://code.djangoproject.com/ticket/25624

This is really hard to test, so I went with a negative ""does not error"" case. Regarding the auto-reloader itself, we just skip reloading on dynamically generated weakref modules as there is really nothing sensible we can do with them.",orf,None,2019-01-19T00:19:36Z,2019-01-28T20:04:09Z
10871,Fixed #30115 -- Fixed SQLite introspection crash with a varchar primary key.,"Ticket [#30115](https://code.djangoproject.com/ticket/30115).

Supersedes #10863.

**Edit:** Other simplifications and clean up moved to #10883 & #10885; and ticket [#30123](https://code.djangoproject.com/ticket/30123).",pope1ni,None,2019-01-18T23:30:01Z,2019-01-23T06:01:38Z
10870,Fixed #25791 -- Made cached template loader do nothing when DEBUG is on.,"Ticket: https://code.djangoproject.com/ticket/25791

I originally implemented an autoreloader hook that attempted to clear the template cache, and while this is possible to do I feel it might be missing the point: Templates are cached in development. We can get around this by simply not caching them when `DEBUG` is `True`, which I feel is a lot cleaner and a lot simpler to implement.

~~I need to add tests, and I'm not happy with the way the autoreloader is set up. It's actually a case I did not consider when designing it: the `django.template.loaders.*` are lazy-loaded and so are not imported until a template is rendered. Which is tricky for us as we need to register a signal at *import time*, before the auto-reloader is started.~~

~~So I've put the auto-reload code inside `django.template.autoreload` even though I really feel it should belong inside `django.template.loaders.cached`, and I've triggered an import of this module from `django.template`. Which is also not nice, as this module is a kind of public API and I don't want to pollute it with `autoreload` stuff (or signal handing, if we where to use `.connect()` instead of `receiver()`).~~",orf,None,2019-01-18T23:28:39Z,2020-05-17T10:54:37Z
10869,Remove unused 'template_cache' dictionary from cached template loader,Unused since 5d8da093a974f41e08573bbe0d32d5ffeaadd0ad.,orf,None,2019-01-18T23:10:26Z,2019-01-19T14:48:51Z
10868,Reorder Parameters In UserCreationForm Widget,,JCA122204,None,2019-01-18T22:31:38Z,2019-01-18T23:41:55Z
10867,Increase test coverage for `django.utils.text.Truncator.chars()`,try to cover https://github.com/django/django/blob/709a8b861de14204f0e13c9a0fbfd61c11b3565d/django/utils/text.py#L96,hramezani,None,2019-01-18T21:16:16Z,2019-01-19T23:45:42Z
10866,Fixed #30118 -- Added support for filtering to QuerySet.count() and exists().,https://code.djangoproject.com/ticket/30118,sjoerdjob,None,2019-01-18T20:37:43Z,2019-01-18T23:36:09Z
10865,Fixed #30117 -- Fixed SchemaEditor.quote_value() test for mysqlclient 1.4.0+.,Behavior has been changed in https://github.com/PyMySQL/mysqlclient-python/commit/819688b630be850ee485d265b60cd9fa4040c07e.,felixxm,None,2019-01-18T20:02:20Z,2019-01-19T12:31:39Z
10864,Fixed #30116 -- Dropped support for Python 3.5.,https://code.djangoproject.com/ticket/30116,timgraham,None,2019-01-18T15:56:15Z,2019-01-30T15:55:03Z
10863,Fixed #30115 -- Fixed for sqlite3 get_field_type unhashable type error,https://code.djangoproject.com/ticket/30115,cansarigol,None,2019-01-18T15:01:34Z,2019-01-19T07:45:47Z
10862,Refs #29738 -- Removed module level import of django.db.migrations.writer.,"https://code.djangoproject.com/ticket/29738#comment:14

---

I wonder if this is exposing a deeper issue with `MigrationWriter.register_serializer()`. I believe this means a similar workaround is required for all `apps.py` files.",jdufresne,None,2019-01-18T05:33:02Z,2019-01-25T02:28:19Z
10861,Fixed #30111 -- Fixed AppRegistryNotReady error with django.contrib.postgres in INSTALLED_APPS.,"When contrib.postgres is in INSTALLED_APPS it triggers `from django.db.migrations.writer import MigrationWriter` import in https://github.com/django/django/blob/7185ea6902532eb195d0575d1bf1492ca9d45dea/django/contrib/postgres/apps.py#L8 which further triggered https://github.com/django/django/blob/7185ea6902532eb195d0575d1bf1492ca9d45dea/django/db/models/base.py#L99 in ModelBase Meta class.
ModelBase checks for `self.check_apps_ready()` while apps have not loaded completely yet. So an exception is raised `raise AppRegistryNotReady(""Apps aren't loaded yet."")`

Fix: I've changed `django/django/contrib/postgres/apps.py` to import MigrationWriter only when needed to avoid `check for apps ready` cycle.

https://code.djangoproject.com/ticket/30111",nasirhjafri,None,2019-01-17T21:09:36Z,2019-01-23T06:40:25Z
10860,Fixed #30107 -- Removed unused dirs variable from cache template loader keys.,"Unused since 5d8da093a974f41e08573bbe0d32d5ffeaadd0ad.
https://code.djangoproject.com/ticket/30107",timgraham,None,2019-01-17T18:33:27Z,2019-01-18T15:14:51Z
10859,Fixed typo in QuerySet.bulk_update documentation,"Looks like an accidental carry over from the pre-existing `QuerySet.bulk_create` documentation.

Introduced in #9606 which added `QuerySet.bulk_update` and this documentation for it.",daybarr,None,2019-01-17T16:16:05Z,2019-04-30T23:06:17Z
10858,Updates before branching stable/2.2.x,"To do here: 

* [x] Update man page
* [x] Remove empty sections from release notes. 

On master: 

* [x] Squash & Merge #10692 (then rebase here)

On stable/2.2.x:

* [x] Bump version number (https://github.com/carltongibson/django/commit/4699a7d52b9235324122d35f35c6680d9e74b5a9)
* [x] Bump django_next_version in sphinx config (https://github.com/carltongibson/django/commit/049018dc83290268b8e1352fab08324a652555a2)
* [x] Publish branch, Tag & release. ",carltongibson,None,2019-01-17T10:49:46Z,2019-01-17T16:18:42Z
10857,Fixed #30106 -- Made order_with_respect_to updates use QuerySet.bulk_update().,https://code.djangoproject.com/ticket/30106,charettes,None,2019-01-17T03:57:50Z,2019-01-21T22:27:41Z
10856,Refactor: single underscored both method_get_order and method_set_order,internal use encapsulation of two functions,RFV,None,2019-01-17T03:17:25Z,2019-01-17T17:33:39Z
10855,Refs #30102 -- Added comment on use of Template without placeholders in page_not_found() view.,"Closes #10841. 

>  I guess we might have to ""wontfix"" the ticket and instead add a comment about this.
",carltongibson,None,2019-01-16T10:50:00Z,2019-01-16T15:20:00Z
10854, Fixed #30044 -- Raised a FieldError on inherited field update attempts. ,https://code.djangoproject.com/ticket/30044,charettes,None,2019-01-16T05:41:33Z,2019-01-16T20:44:29Z
10853,Fixed #30027 -- Errored out on Window function usage if unsupported.,https://code.djangoproject.com/ticket/30027,charettes,None,2019-01-16T04:27:17Z,2019-02-10T21:58:21Z
10852,Optimized Oracle PKs introspection by adding get_primary_key_column(),,felixxm,None,2019-01-15T21:38:31Z,2019-01-18T15:52:31Z
10851,Made test table cleanup in OperationTestBase more robust.,"Some non-unique constraint names were added in b69f8eb04cc8762d3dfd5af5ea1fc58e3f2ebcc3 which resulted in failures depending on the order in which tests were run.
",tbicr,None,2019-01-15T17:56:29Z,2019-01-28T20:29:29Z
10850,Updated reverse generic relation examples,"I found the current example in the content types documentation slightly confusing as:

- it sets `related_query_name='bookmarks'` in the example, when it actually refers to a many to one relationship
- the example to ""do the same types of lookups manually"" differs from the one above it, which uses `related_query_name`:

  The first example is to ""get all tags belonging to bookmarks containing `django` in the url"", while the second gets 1 bookmark (matching the django project url exactly) and finds the tags that relate to that bookmark only.",asfaltboy,None,2019-01-15T16:01:12Z,2019-01-21T16:22:57Z
10849,Changed to exhaust iterator using collections.deque().,"Comparison of methods for exhausting an iterator:
```
In [1]: from collections import deque
   ...: from itertools import repeat
   ...: n = 10000
   ...: %timeit -n1000 [__ for __ in repeat(0, n)]
   ...: %timeit -n1000 for __ in repeat(0, n): pass
   ...: %timeit -n1000 list(repeat(0, n))
   ...: %timeit -n1000 deque(repeat(0, n), maxlen=0)
195 µs ± 5.2 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
74.3 µs ± 204 ns per loop (mean ± std. dev. of 7 runs, 1000 loops each)
53.2 µs ± 4.66 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
43 µs ± 428 ns per loop (mean ± std. dev. of 7 runs, 1000 loops each)
```

Follows from https://github.com/django/django/pull/10676#discussion_r247887259.",pope1ni,None,2019-01-15T13:18:07Z,2019-02-14T23:48:06Z
10848,Removed unnecessary string formatting of string values.,"In all cases, the value was already a string and so didn't require formatting.",jdufresne,None,2019-01-15T01:44:36Z,2019-01-15T02:24:54Z
10847,"Fixed ""lets"" mistakes in docs.",,davidjb,None,2019-01-14T23:55:03Z,2019-01-15T01:48:02Z
10846,Fixed #30099 -- Fixed invalid SQL when filtering a Subquery by an aggregate.,"fixed group by error in Filter by Count annotated inside Subquery

Fix for https://code.djangoproject.com/ticket/30099",nasirhjafri,None,2019-01-14T20:54:10Z,2019-01-16T19:47:11Z
10845,Relaxed assertions to fix GIS test failures on Oracle 18c.,,felixxm,None,2019-01-14T20:28:01Z,2019-01-15T07:05:56Z
10844,Raise CommandError for ./manage.py migrate,"if models have changes that are not yet reflected in a migration.

This will cause a non-zero exit code and allow to use the command to detect forgotten migrations.

The background here is that in our application we had the django-simple-history recently upgraded and that caused some changes and we need to create a migration for the historical record. We want to use `./manage.py migrate` inside CI to make sure this doesn't happen again.",atodorov,None,2019-01-14T19:57:11Z,2019-01-14T22:49:07Z
10843,A collection of trivial clean ups for database functions.,,pope1ni,None,2019-01-13T22:05:08Z,2019-01-14T18:55:47Z
10842,Fixed #30093 -- Fixed ordering of combined queryset using F expressions.,https://code.djangoproject.com/ticket/30093,sir-sigurd,None,2019-01-13T19:12:42Z,2019-01-14T15:52:44Z
10841,Refs #30102 -- Optimized the `page_not_found` view after #30070.,https://code.djangoproject.com/ticket/30102,illia-v,None,2019-01-13T17:34:13Z,2019-01-16T14:15:46Z
10840,Refs #28478 -- Fixes for preventing connections to disallowed databases.,https://code.djangoproject.com/ticket/28478#comment:13,charettes,None,2019-01-12T21:04:31Z,2019-02-19T20:38:40Z
10839,No need to check is_staff here.,"Since it's already checked in AdminSite.has_permission.

It's more intuitive when customizing AdminSite.has_permission.",yihuang,None,2019-01-12T14:48:04Z,2019-01-12T15:48:35Z
10838,Fixed #30057 -- Fixed diffsettings ignoring custom configured settings.,based on #10785,collinanderson,None,2019-01-11T21:57:16Z,2019-01-12T16:30:52Z
10837,Moved django.db.migrations.writer.SettingsReference to django.conf.,"Reduced the possibility of circular imports.
(from https://github.com/django/django/pull/10673)",timgraham,None,2019-01-11T19:21:24Z,2019-01-11T20:28:36Z
10836,Refs #30098 -- Added packages support in custom management commands.,Ticket: https://code.djangoproject.com/ticket/30098,regzon,None,2019-01-11T18:54:00Z,2019-01-16T15:32:32Z
10835,Fixed #23829 -- Made ping_google command/function use https for the sitemap URL.,"(extracted from https://github.com/django/django/pull/10651)
https://code.djangoproject.com/ticket/23829",timgraham,None,2019-01-11T15:37:15Z,2019-01-12T17:34:51Z
10834,Documented ping_google()'s ping_url argument.,,timgraham,None,2019-01-11T14:44:09Z,2019-01-11T15:03:37Z
10833, Fixed #30097 -- Made 'obj' arg of InlineModelAdmin.has_add_permission() optional.,Ticket [#30097](https://code.djangoproject.com/ticket/30097).,MaximZemskov,None,2019-01-11T12:45:29Z,2019-01-21T09:52:32Z
10832,Remove 'naturaltime' context for '(delta) ago' for Swedish.,"The Swedish version of ""1 week ago"" currently is ""1 vecka ago"", but should be ""1 vecka sedan"".

Hopefully, this is not trivial enough to be fixed without a ticket.",PetterS,None,2019-01-11T10:17:06Z,2019-01-28T22:15:04Z
10831,Update setup.py,,RDIL,None,2019-01-10T21:05:44Z,2019-01-10T21:26:25Z
10830,Added Armenian language,,claudep,None,2019-01-10T08:35:32Z,2019-01-15T09:47:30Z
10829,Fixed #12203 -- Allow ManyToManyField with through model in admin,"Depends on #8981

https://code.djangoproject.com/ticket/12203",collinanderson,None,2019-01-09T21:19:23Z,2020-07-09T11:17:00Z
10828,Fixed #30087 -- Tested error handling for empty 'default' database.,Addresses https://code.djangoproject.com/ticket/30087,benjyw,None,2019-01-09T14:01:05Z,2019-02-26T19:12:52Z
10827,Refs #28643 -- Added Reverse database function.,Ticket [#28643](https://code.djangoproject.com/ticket/28643).,pope1ni,None,2019-01-09T00:28:25Z,2019-01-12T16:24:49Z
10826,Imported FieldInfo as BaseFieldInfo in MySQL introspection backend.,A minor tweak for consistency following review in https://github.com/django/django/pull/10825#discussion_r246041951.,pope1ni,None,2019-01-08T22:48:01Z,2019-01-09T13:24:17Z
10825,Refs #23748 -- Added AutoField introspection for SQLite.,"Ticket [#23748](https://code.djangoproject.com/ticket/23748).

Rounds out the support for introspection of AutoField by adding support for SQLite.

Please refer to [my comment](https://code.djangoproject.com/ticket/23748#comment:11) on the ticket.",pope1ni,None,2019-01-07T23:22:06Z,2019-01-09T16:26:01Z
10824,Use pymysql as a drop-in replacement for MySQLdb.,Looks like pymysql is currently the best maintained MySQLdb python wrapper... I think switching to it is the best option for now :),LocutusOfBorg,None,2019-01-07T09:47:39Z,2019-01-07T10:21:58Z
10823,Refs #28939 -- Doc’d Prefetch behavior with multiple DBs.,"In a multi-database environment, it's unclear how Prefetch will behave. This clarifies that Prefetch works exactly as you'd hope it would. 

I tested this by creating two databases and then creating some dummy data in each of them. According to my tests, the `using` statement on the outer query will be used on the inner query, and if the inner and outer queries have different `using` parameters, each will be respected.",mlissner,None,2019-01-04T22:14:00Z,2020-09-17T12:26:34Z
10822,Fixed #30076 -- Added Model.get_FOO_display() even if field's choices are empty.,"When checking against `self.choices`, check against `None`.",thejcannon,None,2019-01-04T20:06:52Z,2019-02-07T15:56:42Z
10821,merge ,,allenLew1991,None,2019-01-04T05:50:23Z,2019-01-04T05:50:50Z
10820,Simplified some imports for database functions.,A few simple import clean ups. These have been extracted from #10764 which depends on the third commit here to avoid circular imports.,pope1ni,None,2019-01-03T23:07:47Z,2019-01-09T00:24:18Z
10819,Fixed typo in django/db/backends/base/features.py.,,felixxm,None,2019-01-03T18:48:59Z,2019-01-03T19:11:07Z
10818,Refs #29851 -- Fixed test_subquery_row_range_rank() crash on MariaDB 10.2+.,See [django-docker-box build](https://travis-ci.com/orf/django-docker-box/jobs/167906867) for details.,felixxm,None,2019-01-03T16:44:10Z,2019-01-03T19:19:40Z
10817,Documented purposes of mailing list links,"I noticed that there was no solid documentation on how to use the 'subscription email address'. Google seem to have hidden/taken down documentation on how these work too (the best source I found was this SO answer: https://webapps.stackexchange.com/a/15593 ) so I'm adding an explicit how-to, plus clarifying the purposes of the other links.",adamchainz,None,2019-01-02T21:25:47Z,2020-03-25T15:32:34Z
10816,Add distinct on Sum annotate,,engelolivier,None,2019-01-02T16:47:09Z,2019-02-07T23:19:33Z
10815,Fixed typo in docs/ref/migration-operations.txt.,,knaperek,None,2019-01-02T09:52:23Z,2019-01-02T22:56:26Z
10814,Pinned Pillow != 5.4.0 in test requirements.,"There's a bug that causes a test failure in forms_tests:
https://github.com/python-pillow/Pillow/pull/3501/files#r244651761.",timgraham,None,2019-01-02T00:08:56Z,2019-01-06T20:43:11Z
10813,Fixed #30071 -- Fixed error message when no default db is provided.,"In ConnectionHandler, the explicit check for the DEFAULT_DB_ALIAS
key in the databases dict came after an attempt to access that key.

If you have at least one non-default db, but no default db, no dummy
default will be created for you, and the DEFAULT_DB_ALIAS key will
not be present. Under these circumstances, calling the `databases`
property directly would give a KeyError instead of the intended
ImproperlyConfigured error.

Worse, if you tried to access a non-default db, ensure_defaults would
catch that KeyError but misinterpret it as being for the non-default
db name (which does in fact exist in the dict).

(See https://code.djangoproject.com/ticket/30071)

This change moves the explicit check before the attempt to use the key,
so that no KeyError is ever raised for DEFAULT_DB_ALIAS.  It adds
a test for this case, and also adds a test for the case where the
default db is explicitly set to an empty dict.",benjyw,None,2019-01-01T21:15:11Z,2019-02-26T19:10:29Z
10812,Used 4 space hanging indent for dictionaries.,"I would like to do a more comprehensive audit. Does anyone know of linters that detect this?

Audited with: `grep -Ir ""{[^}][^}]*,$"" django/ tests/ | grep -v ""\.json"" | grep -v ""\.js""` (suggested by @felixxm)",timgraham,None,2019-01-01T14:44:30Z,2019-01-02T23:18:33Z
10811,Fixed #30069 -- Added docstring to manage.py template.,This PR adds a module docstring to manage.py in order to prevent lint errors on new projects.,brylie,None,2018-12-31T21:27:50Z,2019-01-01T00:37:23Z
10810,"Updated a test to reflect the fact that ""import *"" isn't used in URLconfs anymore (refs #14675).",Test was added in 859fc020a7c5ce30784d6388858ffbc613ef6612.,timgraham,None,2018-12-31T14:44:36Z,2018-12-31T15:24:41Z
10809,Fixed #30070 -- Fixed content spoofing possiblity in the default 404 page.,"This issue can lead to phishing, SEO injection and other issues. More
information is available on the OWASP website:
https://www.owasp.org/index.php/Content_Spoofing

How it looks in django with the fix applied (you can use the try the
same url with any django app to see pre-fix):
https://www.etesync.com/account%20was%20not%20found%20on%20this%20server.%20This%20usually%20means%20an%20issue%20with%20your%20account%20that%20may%20lead%20to%20data%20loss!%20Please%20contact%20support%20ASAP%20at%20hacker@mail.com%20to%20fix%20your%20account%20and%20report%20that%20your%

The fix:
Remove the path from the default template so it just includes a message
without the path.

The issue has been initially reported to me about my Django app running at
www.etesync.com by Jerbi Nessim. After investigating the issue I found
that the cause is Django's default 404 handler, and wrote this fix.

https://code.djangoproject.com/ticket/30070",tasn,None,2018-12-31T12:28:36Z,2019-01-04T02:21:56Z
10808,Updated test URL patterns to use path() and re_path().,,timgraham,None,2018-12-31T01:05:04Z,2018-12-31T16:15:32Z
10807,Fix Discrepency in Max and Min Value Validators,"Classes MinValueValidator and MaxValueValidator had a discrepancy between their error message and their actual behavior.
Both classes returned false if the comparison values were equal - even though the error message said that equal values should return true.
I created 4 new classes that are explicit about which behavior the user should expect: InclusiveMaxValueValidator, InclusiveMinValueValidator, ExclusiveMaxValueValidator, ExclusiveMinValueValidator. The ""Inclusive"" validators return true if the comparison values are equal; the ""Exclusive"" validators return false if the values are equal. The error messages of these classes are consistent with their behavior.

The original MaxValueValidator and MinValueValidator classes are now shortcuts to the ""Exclusive"" validators, because that matches the behavior of these classes before this patch. It preserves backwards-compatibility, but I think this also sacrifices the intuitive understanding of how these classes should work (as ""Inclusive"" comparisons), so this could be looked at at a later date.",iamio87,None,2018-12-30T14:06:16Z,2018-12-30T19:59:57Z
10806,Renamed QuerySet.earliest()/latest() helper method.,,timgraham,None,2018-12-30T00:04:19Z,2018-12-30T16:43:42Z
10804,Fixed #30066 -- Enabled super user creation without email and password,I added a test case with no email and password for the super user which failed. later i changed the code in the models to email = None and password = None in the contrib/auth/models createsuperuser params and now the test case is passing,berabhishek,None,2018-12-29T11:02:02Z,2019-02-15T00:44:43Z
10802,Fixed #30066 -- Enabled super user creation without email and password,I added a test case with no email and password for the super user which failed. later i changed the code in the models to email = None and password = None in the contrib/auth/models createsuperuser params and now the test case is passing,berabhishek,None,2018-12-29T03:32:47Z,2018-12-29T10:58:00Z
10801,Added examples to HttpRequest.build_absolute_uri() docs.,The lack of full examples made the documentation of the return value a bit confusing.,adamchainz,None,2018-12-28T19:55:22Z,2020-07-20T10:18:26Z
10800,Fixed#30053 -- Added support to only update if condition matches in update_or_create,"**Overview**
Ticket [30053](https://code.djangoproject.com/ticket/30053).

QuerySet.update_or_create() is great since it lifts the burden of thread-safety and repeated code from the client. However, there exists some scenarios where the ""update"" logic should be hidden behind a condition. (E.g. only update if the value of a DateTimeField is less than some value). There isn't much help for clients in these scenarios, with the best solution being to copy+paste QuerySet.update_or_create() and wrap the setattr-and-save logic in a conditional (worst case being they roll their own code, which likely would lead to thread-safety issues)
The condition would most likely be a callable that accepts one argument, the gotten instance.


**Testing notes**
I've added a new parameter called condition. So if a condition query is given `update_or_create` will chain the query in the existing query set and get the object. If there is no matching object then the function will return the tupple of the object and false otherwise it will move to the next steps and update that object.

Example: 
```python
from django.db import models
from django.db.models import Q


class MyModel(models.Model):
    magic_number = models.IntegerField(default=0)
    should_be_updated = models.BooleanField(default=True)


MyModel.objects.create(magic_number=42, should_be_updated=True)
```
Now the following query will not update anything as the condition doesn't matches.
```python
MyModel.objects.filter(magic_number=42).update_or_create(condition=lambda m: m.should_be_updated),
                                                         defaults={'magic_number': 43})
```

Whereas before, the following query would have created a new object in the database
```python
MyModel.objects.filter(magic_number=42, should_be_updated=False).update_or_create(defaults={'magic_number': 43})
```
",nasirhjafri,None,2018-12-28T10:54:08Z,2019-01-09T08:12:57Z
10799,Fixed#30053 -- Added support to only update if condition matches in update_or_create,"**Overview**
Ticket [30053](https://code.djangoproject.com/ticket/30053).

QuerySet.update_or_create() is great since it lifts the burden of thread-safety and repeated code from the client. However, there exists some scenarios where the ""update"" logic should be hidden behind a condition. (E.g. only update if the value of a DateTimeField is less than some value). There isn't much help for clients in these scenarios, with the best solution being to copy+paste QuerySet.update_or_create() and wrap the setattr-and-save logic in a conditional (worst case being they roll their own code, which likely would lead to thread-safety issues)
The condition would most likely be a callable that accepts one argument, the gotten instance.


**Testing notes**
I've added a new parameter called condition. So if a condition query is given `update_or_create` will chain the query in the existing query set and get the object. If there is no matching object then the function will return the tupple of the object and false otherwise it will move to the next steps and update that object.

Example: 
```python
from django.db import models
from django.db.models import Q


class MyModel(models.Model):
    magic_number = models.IntegerField(default=0)
    should_be_updated = models.BooleanField(default=True)


MyModel.objects.create(magic_number=42, should_be_updated=True)
```
Now the following query will not update anything as the condition doesn't matches.
```python
MyModel.objects.filter(magic_number=42).update_or_create(condition=Q(should_be_updated=False),
                                                         defaults={'magic_number': 43})
```

Whereas before, the following query would have created a new object in the database
```python
MyModel.objects.filter(magic_number=42, should_be_updated=False).update_or_create(defaults={'magic_number': 43})
```
",nasirhjafri,None,2018-12-28T09:25:10Z,2018-12-28T10:49:29Z
10798,Bootstrapped Django 3.0.,(to be merged after the stable/2.2.x branch is created in mid-January following Django 2.2 alpha),timgraham,None,2018-12-28T00:37:15Z,2019-01-17T17:34:27Z
10797,Fixed #30063 -- Doc'd that Meta.unique_together may be deprecated in favor of Meta.constraints.,,tbicr,None,2018-12-27T19:45:05Z,2019-01-08T20:21:53Z
10796,Fixed #30062 -- Added support for unique conditional constraints.,"related to https://github.com/django/django/pull/10789 refactoring, so PR changes only in 
`add unique conditional constraint` commit",tbicr,None,2018-12-27T19:38:51Z,2019-01-15T15:55:52Z
10795,Refs #30033 -- Fixed schema's test_m2m_rename_field_in_target_model test failure on SQLite < 3.20.,"Mixing local test models with non-local models resulted in a referential
integrity error during tear down since the models are removed in separate
schema editor instances which each check constraints.
    
Failure appeared after 7289874adceec46b5367ec3157cdd10c711253a0.",timgraham,None,2018-12-26T16:28:47Z,2018-12-26T18:22:45Z
10794,Refs #29547 -- Skipped an unsupported partial index test on older versions of SQLite.,Follow up to e5b8626c0eb223cc3d643163882c5902c40ec972.,timgraham,None,2018-12-26T15:28:21Z,2018-12-26T16:20:17Z
10793,Fixed broken links to PyYAML page.,,chicheng,None,2018-12-26T01:20:47Z,2018-12-27T09:48:38Z
10792,Cached references retrieval of sql_flush() on SQLite and Oracle.,"The `maxsize` parameters values are kind of arbitrary now and probably need tweaking.

~~I also want to experiment with changing the SQLite cache to be per table instead of per set of tables like it is on Oracle.~~ 512 seems to be large enough to fit the 330 tables requirements of the suite.",charettes,None,2018-12-25T17:42:54Z,2018-12-26T15:27:05Z
10791,Fixed #29669 -- Allow admin method in the 'ordering' tuple of a ModelAdmin.,[ticket_29669](https://code.djangoproject.com/ticket/29669),hramezani,None,2018-12-25T10:56:45Z,2019-03-17T12:09:10Z
10790,Refs #26840 -- Adjusted SQLite connection mocking in a setup_database() test.,"The second commit is not necessary to get tests passing but should give a significant speedup of these tests.

Before on Oracle

https://djangoci.com/job/django-oracle/database=oracle12,python=python3.5/lastCompletedBuild/testReport/inspectdb.tests/InspectDBTransactionalTests/

After on Oracle

https://djangoci.com/job/pull-requests-oracle/database=oracle12,label=bionic-pr,python=python3.7/272/testReport/inspectdb.tests/InspectDBTransactionalTests/",charettes,None,2018-12-24T18:37:52Z,2018-12-24T21:10:39Z
10789,Fixed #30060 -- Moved indexes and constraints SQL generation to SchemaEditor.,"This MR contains:

- small schema refactorings
- move sql generation for condition from model.indexes to schema
- move sql generation from model.constraints to schema
- provide special methods for index/unique/primary key/foreign key/check constraints sql generation

And one contradiction (last) commit where I propose back to FK/check/unique constraint generation from template instead parts composition:
Just template a bit easier for reading than previous constraint parts generation.
Old constraints also have issues in next cases:
 1. sqlite use UNIQUE INDEX for constraint in django
 2. postgresql partial unique constraint can be created only as UNIQUE INDEX
- so this examples require using of special conditions or methods for sql generation, but it a bit easier extend schema backend just with template overriding.",tbicr,None,2018-12-24T16:09:57Z,2019-01-08T20:22:04Z
10788,Fixed #29232 - Admin filter change title,"https://code.djangoproject.com/ticket/29232

The original PR https://github.com/django/django/pull/9793 is almost done, but @dsanders11 did not finish it. I only rebased the commit on master and fixed the docs, as it is instructed by @carltongibson.

The original author created another unfinished PR https://github.com/django/django/pull/9844 to fix the ticket https://code.djangoproject.com/ticket/29282, which this PR depends on. The ticket is nevertheless fixed, as another PR https://github.com/django/django/pull/10652 took care of it.

So, this PR should be ready to be merged. Please tell me if what I am doing is helpful. Thanks",baldychristophe,None,2018-12-24T15:44:16Z,2020-05-01T09:56:03Z
10787,tutorial04 fixed an error in code part,"tutorial04 line 293, vote function should redirect with pk argument.",shahabbasi,None,2018-12-24T13:04:05Z,2018-12-25T13:47:31Z
10786,[WIP] Fixed #28236 - Adapt dj-database-url into Django,"Ticket https://code.djangoproject.com/ticket/28236

This is my implementation of https://github.com/django/django/pull/8562 version (which where I started from).
I think it is less intrusive than the other implementation, and I've implemented a totally independent package https://pypi.org/project/django-service-urls/ ([main repo](https://bitbucket.org/rsalmaso/django-service-urls/) - [github mirror](https://github.com/rsalmaso/django-service-urls)) which I currenty use in my projects from some time.

One improvement from https://github.com/django/django/pull/8562 is the EMAIL_BACKEND adapter.

Currently this wip lacks all docs, which are present in my package.",rsalmaso,None,2018-12-23T21:44:20Z,2020-09-15T11:59:41Z
10785,Fixed #30057 -- Fixed diffsettings leaving out custom default settings,The changes I've made to the tests are experimental; if something could be improved I'd love your feedback.,orlnub123,None,2018-12-23T12:07:36Z,2019-02-21T18:00:36Z
10784,Fixed #30058 -- Made SMTP EmailBackend.send_messages() return 0 for empty/error cases.,"https://code.djangoproject.com/ticket/30058

This PR ensures that SMTP EmailBackend.send_messages() always returns an integer",stebunovd,None,2018-12-23T01:08:47Z,2018-12-27T00:33:12Z
10783,Fixed #30056 -- Added SQLite support for StdDev and Variance functions.,Ticket [#30056](https://code.djangoproject.com/ticket/30056).,pope1ni,None,2018-12-22T23:20:40Z,2018-12-31T10:08:49Z
10782,Fixed #30055 -- Dropped support for SQLite < 3.8.3.,https://code.djangoproject.com/ticket/30055,timgraham,None,2018-12-22T22:03:02Z,2018-12-22T22:40:42Z
10781,Fixed #30054 -- Implemented cascaded flush on SQLite.,"This is required to maintain foreign key integrity when using the `TransactionTestCase.available_apps` feature.

Refs [#30033](https://code.djangoproject.com/ticket/30033), [#14204](https://code.djangoproject.com/ticket/14204), [#20483](https://code.djangoproject.com/ticket/20483).",charettes,None,2018-12-22T06:57:36Z,2018-12-22T22:48:52Z
10780,"Refs #29547, #29182, #29928 -- Fixed feature detection to be based on SQLite version. ",It was incorrectly based on Python's wrapper version.,charettes,None,2018-12-21T23:37:00Z,2018-12-24T18:38:40Z
10779,Refs #30033 -- Fixed contenttypes_tests failure on SQLite when run in isolation.,"Regression in 7289874adceec46b5367ec3157cdd10c711253a0.
Reported at https://github.com/django/django/pull/10744#issuecomment-448864664.",timgraham,None,2018-12-21T18:43:12Z,2018-12-22T21:00:53Z
10778,Added tests for ContentType/Group/Permission.__str__().,,timgraham,None,2018-12-21T17:19:53Z,2018-12-22T20:26:35Z
10777,Add ensure_ascii option for dumpdata command,"Without this, Unicode characters are shown like \u00f6.",yhay81,None,2018-12-21T12:31:31Z,2018-12-22T04:30:58Z
10776,Fixed #16027 -- Added app_label to ContentType.__str__().,https://code.djangoproject.com/ticket/16027,gregschmit,None,2018-12-21T07:30:42Z,2019-02-08T01:51:14Z
10775,Fixed Polish MONTH_DAY_FORMAT.,"Makes it gramatically correct (genitive instead of nominative) and
consistent with DATE_FORMAT and DATETIME_FORMAT.",wiktorkuchta,None,2018-12-20T18:50:36Z,2018-12-21T09:29:47Z
10774,add app_label identifier to ContentTypes name method,"Hi all, this is my first attempted contribution to Django. I noticed a dissimilarity in how Django handles models from different apps. In Permissions, for example, they are rendered like this:

    admin | admin :: log entry | Can add log entry

Which is great since I can distinguish between models of different apps that might have the same name. However, when looking at a ContentType it just shows the `verbose_name` of the model, like:

    log entry

So if I have two apps that have models that have the same name, then they would be indistinguishable.

A simple way to fix this behavior is to fix the `__str__()` method on the `ContentType` model. I noticed that it uses a helper `name()` method, so I decided to make the change there:

        def __str__(self):
            return self.name

        @property
        def name(self):
            model = self.model_class()
            if not model:
                return self.model
    -       return str(model._meta.verbose_name)
    +       return ""{0} :: {1}"".format(model._meta.app_label, model._meta.verbose_name)

I used the `::` separator to keep convention with the Permissions style.

Would the developers/community consider this change please?

Thanks!",gregschmit,None,2018-12-20T18:47:56Z,2018-12-20T19:26:15Z
10773,Fixed #30050 -- Fixed InlineModelAdmin.has_change_permission() being called with non-None obj during add.,https://code.djangoproject.com/ticket/30050,andreage,None,2018-12-20T17:03:45Z,2019-01-01T15:08:49Z
10772,Refs #30015 -- Added 2.1.5 release note and removed 'we' in comments.,"Follow-up from #10732 (for ticket [#30015](https://code.djangoproject.com/ticket/30015))

* Adds release note entry for v2.1.5. 

Also: 

* Adjusts docstring and test, as per review on #10732. 

Tim: I put these in as separate commits: happy to merge, squash, drop, ... as you think best. ",carltongibson,None,2018-12-20T09:07:52Z,2018-12-21T03:31:39Z
10771,Fixed #29792 -- Made GeometryField.deconstruct() handle 'extent' and 'tolerance' args.,…tions.,jtiai,None,2018-12-20T05:18:07Z,2018-12-22T09:13:09Z
10770,Fixed a typo in tutorial05,"'light' doesn't make much sense instead it should be 'right'.

I am not sure if that is intentional to *test* readers. ",forgotter,None,2018-12-20T04:43:24Z,2018-12-20T16:43:11Z
10769,Refactored loop to dictionary comprehension,"Hi,
this seemed like a trivial change that is a little easier to read.",toivomattila,None,2018-12-19T15:30:22Z,2018-12-19T23:31:48Z
10768,Added import locations to Postgres aggregates and validators docs.,,knbk,None,2018-12-19T14:07:59Z,2018-12-24T21:36:01Z
10767,Update .editorconfig,,anoop2base,None,2018-12-19T13:13:57Z,2018-12-19T13:41:58Z
10766,Update OWASP outdated links,"The OWASP links referencing documents from 2013 OWASP Top Ten
list are replaced with their 2017 counterparts.",vkaracic,None,2018-12-18T11:04:59Z,2018-12-27T15:19:29Z
10764,Refs #28643 -- Used database function compatibility mixins for aggregates.,"Ticket [#28643](https://code.djangoproject.com/ticket/28643).

A few bits of clean up surrounding some of the compatibility tweaks required for different backends.

This moves the two mixins from the newly added math function module into a separate module and changes the names to be clearer to allow for better reuse. I have also made the following changes:

- Moved duplicate code out of the `Avg` and `Sum` aggregates into a mixin.
- Fixed the `Sum` aggregate to handle `self.filter` (although we use `self._get_repr_options()`)
- Made `Avg`, `StdDev` and `Variance` aggregates handle outputs as other math functions, i.e. keep `DecimalField` accuracy.",pope1ni,None,2018-12-17T21:51:15Z,2019-06-04T07:08:06Z
10763,"Fixed #29970, #30041 -- Made ModelBase.__new__() pass attrs without contribute_to_class() to type.__new__().",https://code.djangoproject.com/ticket/29970,sir-sigurd,None,2018-12-17T21:12:11Z,2018-12-25T15:32:21Z
10762,Fixed #29851 -- Fixed crash of annotations with window expressions in Subquery.,"Ticket [29851](https://code.djangoproject.com/ticket/29851).

Calling [resolve_expression()](https://github.com/django/django/blob/1939dd49d142b65fa22eb5f85cee0d20864d3730/django/db/models/expressions.py#L238-L245
) caused multiple wrapping in `Value`.",felixxm,None,2018-12-17T19:29:11Z,2018-12-27T19:22:25Z
10761,Followed style guide for model attribute ordering.,"Django's coding style guide specifies

> The order of model inner classes and standard methods should be as
> follows (noting that these are not all required):
> 
> + All database fields
> + Custom manager attributes
> + class Meta
> + def __str__()
> + def save()
> + def get_absolute_url()
> + Any custom methods

(see here:
https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/#model-style)

However this isn't actually followed consistently throughout the
docs—specifically the position of the Meta class. This changeset
enforces the correct Meta class position.

Occasionally throughout the docs there were methods with `@classmethod`
and `@property` decorators positioned above the Meta class. I left them
as they were, as I wasn't 100% if they fell into ""any custom methods"" or
if they were special cases.",mwiens91,None,2018-12-17T19:26:15Z,2018-12-28T00:34:15Z
10760,Fixed #30020 -- Fixed reading nulls with LayerMapping.,"## Overview

Ticket [30020](https://code.djangoproject.com/ticket/30020).

Added a GDAL function wrapper to recognize if a field is either null or ""unset"".

Modified `LayerMapping` importer to import null or unset GDAL values as null. Previously, null numeric values in an input file would be set as zeroes on the destination model, and null strings would be set as empty strings.

## Testing notes

I've run the `gis_tests` suite successfully against PostGIS, Spatialite, and MySQL database backends. For each, tests succeeded with both python 2.7 / GDAL 2.2, and with python 3.6 / GDAL 2.1.

I made a small demo app [here](https://github.com/flibbertigibbet/django-layermapping-null-demo/). The demo app is in Django 1.11, and can run its tests against a separate 1.11 backport branch with the commits here cherry-picked.

The demo app repository can also run the core Django tests with Docker containers; there are branches for the different database backends. I used it to run the core GIS suite of tests against the Django master-based branch here.
",flibbertigibbet,None,2018-12-17T17:50:36Z,2019-02-08T16:09:23Z
10759,Fixed error message when no default db provided.,"In ConnectionHandler, the explicit check for the DEFAULT_DB_ALIAS
key in the databases dict came only after an attempt to lookup that key.

If you have at least one non-default db, but no default db, no dummy
default will be created for you, and the DEFAULT_DB_ALIAS key will
not be present. Under these circumstances, calling the `databases`
property directly would give a KeyError instead of the intended
ImproperlyConfigured error.

Worse, if you tried to access a non-default db, ensure_defaults would
catch that KeyError but misinterpret it as being for the non-default
db name (which does in fact exist in the dict).

This change moves the explicit check before the attempt to use the key,
so that no KeyError is ever raised for DEFAULT_DB_ALIAS.  It adds
a test for this case, and also adds a test for the case where the
default db is explicitly set to an empty dict.",benjyw,None,2018-12-16T18:29:16Z,2019-01-01T21:14:21Z
10757,Fixed #30040 -- Documentation on permissions on templates is wrong,"`can_vote` is not django standard permission expression.
so, fixed to `can_vote` to `add_vote` in permission detail expression.

related django bug report url:
https://code.djangoproject.com/ticket/30040

Thank you for my commit message reading.",2w3,None,2018-12-16T08:29:14Z,2020-02-21T06:58:25Z
10756,Fixed typo in contrib.gis variable name.,"
- ~~`django/test/client.py`~~
    - ~~Replace *""seeked""* with *""sought""* in class docstring~~
- `django/contrib/gis/db/backends/postgis/operations.py`
    - Replace the variable name *""tranform_func""* with *""transform_func""*",candypoplatte,None,2018-12-16T02:47:30Z,2018-12-17T07:41:24Z
10755,Fixed Admin CSS for .module h2 case consistency,"The h2 case is currently inconsistent between a fieldset h2 and an
admin inline h2.

* ModelAdmin.fieldsets h2s not specify case.
* TabularInline h2s use CSS's `text-transform: uppercase`.

This change moves the `text-tranform: uppercase` specificity to ensure
both uses of h2 are uppercase.

Example/Description: https://imgur.com/a/GruVgT4",adamrt,None,2018-12-15T19:39:30Z,2020-06-30T16:56:27Z
10754,Attic/multi-auth,I want create a file for Django execution on the Terminal programs.,Alchemist101010,None,2018-12-15T10:42:26Z,2019-11-08T11:04:16Z
10753,#30042 (Use of kwargs in the tutorial.),"Lines 360 and 361 above states:
""We aren't going to use this feature of Django in the tutorial.""
However, as the tutorial makes use of it, would it not be better to say: 
""kwargs are used in the URLconf in the 'polls' directory: name='index' ""

Apologies if incorrect, I am just learning Django and going through the tutorial for the first time.",JPWILSON,None,2018-12-14T23:34:22Z,2018-12-15T08:38:02Z
10752,Fixed #29928 -- Enabled deferred constraint checks on SQLite 3.20+.,Contains eb5dd93 which is also part of #10744.,charettes,None,2018-12-14T05:01:57Z,2018-12-20T16:25:38Z
10751,Fixed #30037 -- Added request arg to RemoteUserBackend.configure_user().,http://code.djangoproject.com/ticket/30037,thejcannon,None,2018-12-13T16:15:08Z,2019-01-10T01:34:38Z
10750,Fixed #30039 -- Inconsistency error after unapplying squash migration. ,https://code.djangoproject.com/ticket/30039,Shehzad-Ahmed,None,2018-12-13T08:19:09Z,2018-12-20T19:46:44Z
10749,Fixed #28690:  django.utils.http.parse_http_date two digit year check is incorrect,"https://code.djangoproject.com/ticket/28690

This PR picks up from #9214 and adds regression tests in the first commit that pass without applying the fix and adds the fix with another test-case that only passes with the fix applied.
",tameeshB,None,2018-12-13T02:17:12Z,2019-04-14T03:26:09Z
10748,Fixed #23004 -- Cleanse sensitive request.META keys from DEBUG Views,"- Fixed ticket [#23004](https://code.djangoproject.com/ticket/23004)
- Signed and sent CLA agreement
- Includes tests and documentation

This is based almost entirely on [PR 7996](https://github.com/django/django/pull/7996). There should be two differences: 
- It works with the latest version of the master branch
- It includes the test for ExceptionReporterFilter.get_safe_request_meta that was requested at the end of that PR",maxsond,None,2018-12-12T19:28:29Z,2020-01-09T10:43:08Z
10747,Fixed #30036 -- Removed unused imports in pagination example.,https://code.djangoproject.com/ticket/30036,carltongibson,None,2018-12-12T17:03:25Z,2018-12-12T17:50:00Z
10746,DisallowedHost at /admin,"Please update my pull request. I am using UBuntu 16.04 LTS

![screenshot from 2018-12-12 16-42-08](https://user-images.githubusercontent.com/44166494/49864553-e8a5db80-fe2c-11e8-96ee-36de5e3b1060.png)
",LinuxDevOpsGirl,None,2018-12-12T10:42:49Z,2018-12-12T11:14:28Z
10745, Fixed #29981 -- Fixed inline formsets with a OnetoOneField primary key that uses to_field.,"https://code.djangoproject.com/ticket/29981

When using contrib.admin to edit an inline model that fulfills the below
criterias, the model would fail to save. This would give the error
message ""Please correct the error below."" with no errors displayed.
  1. The inline model has a one-to-one relation with the parent
  2. The inline model is tied to another field than the parent pk
  3. The inline model uses the one-to-one field as its pk

This appears to have been caused by an incorrect deduction of the inline
model's pk. This deduction previously worked correctly for all cases
except for when critera 3 is met, as tested by an old regression test
from issue #11120. The code in this patch makes sure that the expected
behaviour is replicated for the above sets of criteras as well.",patriksletmo,None,2018-12-11T20:14:18Z,2019-01-01T17:06:44Z
10744,Fixed #30033 -- Conformed to the recommended table alterations procedure on SQLite.,"Tested locally on SQLite 3.26.

https://code.djangoproject.com/ticket/30033",charettes,None,2018-12-11T19:51:14Z,2018-12-21T01:54:42Z
10743,Fixed #30031 -- Added a makemigrations/squashmigrations option to omit header.,"Add makemigrations/squashmigrations option to suppress header comments

For producing more determinate migration files and reducing VCS churn when migrations are regenerated:

- `--no-header`: Do not add header comments to new migration file(s).

Fixes [#30031](https://code.djangoproject.com/ticket/30031)

Signed-off-by: Dakota Hawkins <dakotahawkins@gmail.com>

---

**TODO:**

- [x] Add `.. versionadded:: 2.2` to `django-admin.txt`
- [x] Rebase & re-push once there's a definite decision about removing the entirety of the header",dakotahawkins,None,2018-12-11T06:03:15Z,2018-12-21T03:59:15Z
10742,Fixed #30030 -- Fixed misleading error raised when a view inheriting …,"…from SingleObjectMixin is called without pk or slug

https://code.djangoproject.com/ticket/30030#ticket",MyungSeKyo,None,2018-12-11T02:36:56Z,2018-12-19T10:25:13Z
10741,Determinate migration files,"### Add makemigrations/squashmigrations options to suppress version/date
  - For producing determinate migration files and reducing VCS churn when migrations are regenerated:
     - `--no-version`: Does not write the Django version to the header comment in the generated migration file(s).
     - `--no-timestamp`: Does not write the current date and time to the header comment in the generated migration file(s).

### Generate migration dependencies in a deterministic order
  - For producing determinate migration files and reducing VCS churn when migrations are regenerated, `MigrationWriter` sorts its list of dependencies in `as_string()`.
  - Fixes [#30029](https://code.djangoproject.com/ticket/30029)",dakotahawkins,None,2018-12-10T22:15:39Z,2018-12-11T06:12:46Z
10740,Fixes #27080 -- QuerySet.use_in_migrations,"Addresses #27080 by letting model managers created using `QuerySet.as_manager()` inherit the `use_in_migrations` attribute of the queryset. This was formerly addressed by PR #7110, but it was closed due to lack of tests.",orn688,None,2018-12-10T03:47:53Z,2020-03-17T10:19:28Z
10739,Refs #28670 -- Fixed DatabaseFeatures.supports_slicing_ordering_in_compound on Oracle.,"Oracle supports slicing ordering in compound from version 12.2, because it supports `FETCH/OFFSET` syntax (see 0899d583bdb140910698d00d17f5f1abc8774b07 and 024abe5b82d95ee60cb18a77ebf841ad715467fa).",felixxm,None,2018-12-09T20:06:40Z,2018-12-10T12:56:32Z
10738,Fixed #30024 -- Made urlencode() and Client raise a TypeError when None is passed as data.,https://code.djangoproject.com/ticket/30024,jdufresne,None,2018-12-09T15:19:25Z,2019-01-25T02:28:37Z
10737,Fixed #29619 -- Raised FieldError's should include the field that caused the error,Just complete the tests for this [PR](https://github.com/django/django/pull/10284),hramezani,None,2018-12-09T14:39:19Z,2019-02-14T23:58:09Z
10736,Added missing newline to the 2.2 release docs.,,jdufresne,None,2018-12-09T14:24:37Z,2018-12-09T16:38:18Z
10735,Fixed #30023 -- Prevented SQLite schema alterations while foreign key checks are enabled.,"Prior to this change foreign key constraint references could be left pointing at tables dropped during operations simulating unsupported table alterations  because of an unexpected failure to disable foreign key constraint checks.
    
SQLite3 does not allow disabling such checks while in a transaction so they must be disabled beforehand.
",charettes,None,2018-12-08T20:02:16Z,2018-12-20T16:55:21Z
10734,Moved choices inside of test models per coding style.,moved GENDER_CHOICES as a global tuple in tests/choices/models.py to the class Person specific attribute as specified here - https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/#model-style,mentix02,None,2018-12-07T17:07:59Z,2018-12-10T14:28:50Z
10733,Fixed #29182 -- Fixed schema table alteration on SQLite 3.26+.,"SQLite 3.26 repoints foreign key constraints on table renames even when foreign_keys pragma is off which breaks every operation that requires a table rebuild to simulate unsupported ALTER TABLE statements.

Fortunately the newly introduced legacy_alter_table pragma allows one to disable this behavior and restore the previous schema editor assumptions.

Thanks to Florian Apolloner, Christoph Trassl, Chris Lamb for the report and troubleshooting assistance.",charettes,None,2018-12-07T00:57:32Z,2020-06-17T00:20:02Z
10732,Fixed #30015 -- Ensured request body is properly consumed for keep-alive connections.,"Django 2.1.4 affected.
Commit that enabled keep-alive connections https://github.com/django/django/commit/934acf1126995f6e6ccba5947ec8f7561633c27f
Bug: if you make two requests in one keep-alive connection and first request posted data that wasn't read in the view
then on second request that data will be read alongside with first line of the new request.
As a result request.method will contain ""..data from previous request...POST""

```
$ ./runtests.py 
======================================================================
FAIL: test_keep_alive_connection_clears_previous_request_data (servers.tests.LiveServerViews)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/wtf/github/django/tests/servers/tests.py"", line 127, in test_keep_alive_connection_clears_previous_request_data
    self.assertEqual(response.read(), b'POST')
AssertionError: b'{}POST' != b'POST'
```",kalekseev,None,2018-12-06T15:59:02Z,2018-12-21T01:58:37Z
10731,Fixed #30011 -- Fixed an issue with query reuse of filtered aggregates.,Thanks Taqi Abbas and Raphael Kimmig for the report.,charettes,None,2018-12-06T15:50:29Z,2018-12-06T20:12:30Z
10730,Fixed #29393 -- Prevented infinite loop in ExceptionReporter.get_traceback_frames().,https://code.djangoproject.com/ticket/29393,vinayinvicible,None,2018-12-06T13:02:54Z,2019-02-03T11:52:53Z
10729,Bumped mysqlclient requirement to >= 1.3.13.,There are test failures with older versions.,timgraham,None,2018-12-05T20:56:32Z,2018-12-06T19:49:33Z
10728,"Reverted ""Fixed #25251 -- Made data migrations available in TransactionTestCase when using --keepdb.""","This reverts commits b3b1d3d45fc066367f4fcacf0b06f72fcd00a9c6 and 9fa0d3786febf36c87ef059a39115aa1ce3326e8 due to reverse build failures, described in https://github.com/django/django/pull/10667#issuecomment-443302903, for which a solution isn't forthcoming.",timgraham,None,2018-12-05T20:30:39Z,2018-12-05T21:03:26Z
10727,[2.0.x] Refs #30013 -- Doc'd that mysqlclient 1.3.14 and later isn't supported.,,timgraham,None,2018-12-05T19:58:04Z,2018-12-05T20:49:08Z
10726,Fixed #30013 -- Fixed DatabaseOperations.last_executed_query() with mysqlclient 1.3.14+.,https://code.djangoproject.com/ticket/30013,timgraham,None,2018-12-05T18:18:19Z,2018-12-10T18:17:41Z
10725,Fixes #30010 -- Add docker-compose support,"Ticket: https://code.djangoproject.com/ticket/30010

This adds docker-compose support to Django. You can run the test suite like so:

`docker-compose run postgres`

or for specific Python/DB versions:

`PYTHON_VERSION=3.7 POSTGRES_VERSION=9.6 docker-compose run postgres`

Some thoughts/notes:

1. We need the `.env` file to be called `.env` and be at the root of the project. See here: https://github.com/docker/compose/issues/4189#issuecomment-274915631

2. ~~The django `.git` directory is *huge*. If we include it in the `.dockerignore` file then we cannot use the `bisect` stuff in `runtests`. If we don't include it then images get significantly bigger, and many builds can eat disk space. *Also*: for some reason the `.git` exclusion in dockerignore is not respected on my machine~~ **Edit: Not relevant anymore**

3. ~~I needed to include docker-specific settings under `docker/settings`. A lot of this feels like it could be de-duplicated, but at the same time it's annoyingly different (different DB hosts, different backends, backend specific config etc)~~

4. I was not sure if we want to include `wait-for-it.sh` or download it at build time. I opted for including it, but we can download it easily enough as well. The reason we need this is because when using `docker-compose run` it does not respect healthchecks, so the database may not be ready by the time the tests are running.",orf,None,2018-12-05T01:15:49Z,2019-09-27T06:57:33Z
10724,Fix #25598 -- Prefix SCRIPT_NAME to STATIC_URL and MEDIA_URL,This is a new attempt to bring in the same type of changes that [closed PR 7000](https://github.com/django/django/pull/7000) was trying to bring in. It aims to resolve [ticket 25598](https://code.djangoproject.com/ticket/25598#trac-add-comment).,jrwdunham,None,2018-12-05T01:11:34Z,2019-07-15T06:59:46Z
10723, Fixed #29968 -- Doc'd that QuerySet.bulk_update() doesn't check for duplicates.,[ticket_29968](https://code.djangoproject.com/ticket/29968),hramezani,None,2018-12-04T21:36:39Z,2019-01-09T22:54:47Z
10722,Fixed #28699 -- Update remote user doc middleware,"Update the middleware ordering requirements when
using Auth with REMOTE_USER",math-a3k,None,2018-12-04T21:25:31Z,2019-09-03T07:56:37Z
10721,Added stub release notes for 2.1.5 release.,"Scheduling 2.1.5. 

I've opted for 7th January, which just allows time around _New Year_ in case any Release Blockers come up over the holidays. 

We _could_ do it the week before, but I don't see any benefit. 

Just checking there's no problem with that. ",carltongibson,None,2018-12-04T15:03:25Z,2018-12-04T15:21:50Z
10720,changed width of select[multiple],"width is set to 20em for better UI

from this
![](https://user-images.githubusercontent.com/10515204/49415213-007dbf80-f79c-11e8-8654-230f5627b3e9.png)

to this
![](https://user-images.githubusercontent.com/10515204/49415209-fd82cf00-f79b-11e8-9a31-11264c59fa2f.png)

",ashikmeerankutty,None,2018-12-04T02:46:48Z,2018-12-07T02:37:46Z
10719,changed width of select[multiple],"width is set to 20em for better UI
from this 
![screenshot 2018-12-04 at 8 09 36 am](https://user-images.githubusercontent.com/10515204/49415351-68cca100-f79c-11e8-849a-e9c5760a3e7a.png)
to this
![screenshot 2018-12-04 at 8 09 20 am](https://user-images.githubusercontent.com/10515204/49415360-6ff3af00-f79c-11e8-8aa3-102ed1668fad.png)

",ashikmeerankutty,None,2018-12-04T02:43:24Z,2018-12-04T02:44:43Z
10718,Fixed #29895 -- Doc'd why MySQL's atomic DDL statements don't work for atomic migrations.,"Added a clarification that Atomic DDLs introduced in MySQL 8 are not supported
as atomic in migrations (they are not atomic in ""the sense of Django"")",math-a3k,None,2018-12-04T02:37:51Z,2018-12-06T21:46:14Z
10717,Fixed #30005 -- Corrected transaction.atomic example.,"The documentation of transaction.atomic includes a
misleading example which uses both the decorator and
the context-manager forms of atomic, and contradicts
the warning immediately below it about not catching
exceptions inside an atomic() block.  This commit
removes the decorator, which resolves the conflict.
https://code.djangoproject.com/ticket/30005",phoikoi,None,2018-12-04T02:26:02Z,2018-12-06T20:12:06Z
10716,Fixed #29973 -- Added compilemessages --ignore option.,https://code.djangoproject.com/ticket/29973,rsiemens,None,2018-12-03T15:57:12Z,2019-01-29T14:01:42Z
10715,Fixed #29932 -- Fixed combining compound queries with sub compound queries on SQLite and Oracle.,Ticket [29932](https://code.djangoproject.com/ticket/29932).,felixxm,None,2018-12-02T22:23:47Z,2018-12-06T21:06:53Z
10714,Used SimpleTestCase instead of unittest.TestCase in generic_views tests.,SimpleTestCase ensures no database query was issued. Used `assertRaisesMessage` to verify expected exceptions message.,francoisfreitag,None,2018-12-02T09:16:46Z,2018-12-05T08:59:48Z
10713,Fixed #30003 -- Added usable entry point in default manage.py.,,jpic,None,2018-12-01T19:07:13Z,2018-12-06T19:45:41Z
10712,Fixed #29995 -- Used higher contrast colors on debug page.,"In our technical error page in debug mode, some of the text/background
colors were not high contrast enough to meet the WCAG standards for
accessiblity (https://www.w3.org/TR/UNDERSTANDING-WCAG20/Overview.html).
This change addresses those low contrast color combinations.",zachgarwood,None,2018-11-30T19:06:15Z,2018-12-21T23:19:35Z
10711,Refs #28643 -- Skipped workaround for ATan2() on SpatiaLite 5+,"According to the [ticket](https://www.gaia-gis.it/fossil/libspatialite/tktview?name=0f72cca3a2) I filed, the bug has been fixed. The SpatiaLite home page indicates that the next version containing the fix will be 5.0.0.",pope1ni,None,2018-11-30T17:41:07Z,2018-11-30T19:32:39Z
10710,Fixed #30001 -- Marked UUIDField description for translation.,https://code.djangoproject.com/ticket/30001,nixphix,None,2018-11-30T14:54:59Z,2018-11-30T16:23:23Z
10709,Update executor.py,"While recording unapplied migrations in case of squash migrations, all of its replaces migrations are recorded to be unapplied but squash migrations itself does not record unapplied. Therefore it causes inconsistency in case, if squash migration has a parent migration. e.g below
django.db.migrations.exceptions.InconsistentMigrationHistory: Migration compliance.0007_auto_20180329_1238_squashed_0026_auto_20180815_0741 is applied before its dependency survey.0092_prospectfarmerviewlinkcompliancelink on database 'default' .

So, i simply solved it by adding one line of recording unapplied.",Shehzad-Ahmed,None,2018-11-30T13:20:31Z,2018-12-13T07:47:29Z
10707,Fixed #29984 -- Support prefetch_related() with Queryset.iterator(),https://code.djangoproject.com/ticket/29984,RaphaelKimmig,None,2018-11-29T21:13:05Z,2020-06-12T10:43:43Z
10706,Improved performance of BoundField.label_tag with lazy labels.,"For the common case of 'label' being a lazy string (created via lazy i18n
functions), the wrapped callable was being evaluated 3 times without this
patch, but just once with it.",spookylukey,None,2018-11-29T19:57:18Z,2018-11-30T05:35:46Z
10705,Used assertCountEqual() in contrib.postgres.search tests.,,timgraham,None,2018-11-29T16:16:58Z,2018-11-29T19:44:05Z
10704,Fixed #29997 -- Allow combining SearchQuerys with different configs,https://code.djangoproject.com/ticket/29997,jaap3,None,2018-11-29T10:41:23Z,2020-03-02T13:08:28Z
10703,Removed version spec from psycopg2-binary,The earliest version of psycopg2-binary is 2.7.3.2 (https://pypi.org/project/psycopg2-binary/#history) so there's no reason to specify a minimal version here.,jaap3,None,2018-11-29T08:30:39Z,2018-11-29T15:09:29Z
10702,set cache_key's max_length 128,Mysql database requires the length of the primary key to be less than 767bytes,hchenc,None,2018-11-29T04:40:34Z,2018-11-30T03:19:09Z
10701,Refs #28205 -- Corrected ModelAdmin.prepopulated_fields docs regarding when they're populated.,(see e351dbf6ee5d344a0fe73a6d05c7dcad7b1d2e9c),timgraham,None,2018-11-28T19:00:52Z,2018-11-28T20:17:44Z
10700,Do not escape unicode in jsonfield display,without this unicode characters are show like \u00f6,Bysmyyr,None,2018-11-28T11:28:20Z,2019-05-31T09:36:38Z
10699,Fixed #29991 -- Doc'd logger propagation for the default logging config.,https://code.djangoproject.com/ticket/29991,raratiru,None,2018-11-28T02:18:10Z,2018-11-30T09:05:17Z
10698,Fixed #99999 -- Added a shortcut function to make toast.,,wafa-yahyaoui-softcatalyst,None,2018-11-27T10:18:53Z,2018-11-27T10:51:38Z
10697,Switched TestCase to SimpleTestCase where possible in Django's tests.,"Crude identification methodology:
```diff
diff --git a/django/test/testcases.py b/django/test/testcases.py
index 9f549f626f..6352310991 100644
--- a/django/test/testcases.py
+++ b/django/test/testcases.py
@@ -874,8 +874,8 @@ class TransactionTestCase(SimpleTestCase):
         # Clear the queries_log so that it's less likely to overflow (a single
         # test probably won't execute 9K queries). If queries_log overflows,
         # then assertNumQueries() doesn't work.
-        for db_name in self._databases_names(include_mirrors=False):
-            connections[db_name].queries_log.clear()
+        # for db_name in self._databases_names(include_mirrors=False):
+        #     connections[db_name].queries_log.clear()
 
     @classmethod
     def _databases_names(cls, include_mirrors=True):
@@ -997,6 +997,9 @@ def connections_support_transactions():
     return all(conn.features.supports_transactions for conn in connections.all())
 
 
+_queries = False
+
+
 class TestCase(TransactionTestCase):
     """"""
     Similar to TransactionTestCase, but use `transaction.atomic()` to achieve
@@ -1040,14 +1043,22 @@ class TestCase(TransactionTestCase):
                 except Exception:
                     cls._rollback_atomics(cls.cls_atomics)
                     raise
+        global _queries
+        _queries = False
         try:
+            cls._has_test_data = True
             cls.setUpTestData()
+            if cls._has_test_data:
+                _queries = True
         except Exception:
             cls._rollback_atomics(cls.cls_atomics)
             raise
 
     @classmethod
     def tearDownClass(cls):
+        global _queries
+        if not _queries:
+            print(cls)
         if connections_support_transactions():
             cls._rollback_atomics(cls.cls_atomics)
             for conn in connections.all():
@@ -1057,6 +1068,7 @@ class TestCase(TransactionTestCase):
     @classmethod
     def setUpTestData(cls):
         """"""Load initial data for the TestCase.""""""
+        cls._has_test_data = False
         pass
 
     def _should_reload_connections(self):
@@ -1073,8 +1085,14 @@ class TestCase(TransactionTestCase):
 
         assert not self.reset_sequences, 'reset_sequences cannot be used on TestCase instances'
         self.atomics = self._enter_atomics()
+        for db_name in self._databases_names(include_mirrors=False):
+            connections[db_name].queries_log.clear()
 
     def _fixture_teardown(self):
+        global _queries
+        for db_name in self._databases_names(include_mirrors=False):
+            _queries |= bool(connections[db_name].queries_log)
+
         if not connections_support_transactions():
             return super()._fixture_teardown()
         try:
```
(and run tests with `--debug-sql`).",timgraham,None,2018-11-26T22:18:47Z,2018-11-27T15:02:37Z
10696,Fixed #29987 -- Detected unmanaged model deletions.,"This should fix the problem reported in issue #29987. This is my first contribution on the project. Therfore I have to spend some more time as expected on the tests. I have only used pytest so far
",0x68,None,2018-11-26T21:50:52Z,2018-11-30T15:31:25Z
10695,WIP: Add background async task runner,"Hi,

This PR ports background task runner from [Responder](https://github.com/kennethreitz/responder)
and [Starlette](https://github.com/encode/starlette).

Use case example

```python
from django.utils import background

@background.task
def my_task():
    # Do some work

def hello(request):
    my_task()  # Call task to execute in background

    render(request, template)
```

This is still WIP PR so please give you reviews so I can adjust things.

Thanks.",imanhodjaev,None,2018-11-26T20:02:56Z,2018-11-27T14:18:21Z
10694,Update tutorials03 to use newer format() function,"Just noticed while going through the tutorial the use of the older ""%""-style string replacement which isn't really needed anymore in newer versions of Python.",giantryansaul,None,2018-11-26T18:41:35Z,2018-11-26T19:48:23Z
10693,Updated docs for fast column creation with defaults in PostgreSQL 11.,Update documentation to reflect a change in functionality of postgres as the advice does not apply to posgres 11 and up.,ddimmich,None,2018-11-26T06:47:49Z,2018-11-26T15:14:13Z
10692,Refs #17198 -- Detected existing total ordering in admin changelist.,"Appending pk is not necessary when the currently ordered by columns are part of a non-nullable unique contraint.

----

I didn't feel creating a new ticket was required given it was heavily discussed in [#17198](https://code.djangoproject.com/ticket/17198#comment:14) but I'd be happy to fill one if deemed necessary.

I decided to tackle this because one of the project I was working on was getting a really slow `/admin/auth/user` page due to the `username, -pk` ordering and `username` was performing way faster.",charettes,None,2018-11-25T22:20:11Z,2019-01-17T17:33:06Z
10691,Fixed #29986 -- Added .format() support to ngettext_lazy strings.,https://code.djangoproject.com/ticket/29986,patrick91,None,2018-11-25T21:52:25Z,2019-05-02T08:54:54Z
10690,Fixed #29943 -- Doc'd that admin changelist may add pk to ordering.,[ticket_29943](https://code.djangoproject.com/ticket/29943),hramezani,None,2018-11-25T19:47:03Z,2019-02-13T02:35:50Z
10689,Fix typo in test utils.py,Fix typo in the documentation about test utils.py,ta7uw,None,2018-11-25T14:41:10Z,2018-11-25T19:43:26Z
10688,Adding __init__.py files to the new folders (improving documentation),Just an improvement on the How To documentation.,thierri,None,2018-11-24T21:15:54Z,2018-11-25T12:12:37Z
10687,Refs #6376 -- Added support for custom gettext domains.,"https://code.djangoproject.com/ticket/6376

This PR changes the ``LOCALE_PATHS`` setting to allow usage of custom gettext domains.",r4g3baby,None,2018-11-24T19:38:15Z,2020-06-12T10:48:53Z
10686,Fixed #29985 -- Added ModelAdmin.list_prefetch_related,"https://code.djangoproject.com/ticket/29985

This PR adds `ModelAdmin.list_prefetch_related` and `ModelAdmin.get_list_prefetch_related()`.",redodo,None,2018-11-24T16:19:14Z,2018-11-26T07:44:32Z
10685,Replaced unnecessary setUp() in the test suite.,Whether or not it was safe to switch to `setUpTestData()` was investigated locally when working on a [per-test isolation feature of `setUpTestData()`](https://github.com/charettes/django-testdata) I'm planning to discuss on django-developers in a few hours.,charettes,None,2018-11-24T02:04:49Z,2018-11-27T16:48:26Z
10684,Fixed #29983 -- Replaced os.path with pathlib.Path.,"pathlib.Path is more ""intuitive"" to use, and avoids problems with portability between Windows and not-Windows.

The trouble encountered in #29983 would not have happened if we were using pathlib.",funkybob,None,2018-11-24T01:33:48Z,2019-07-02T01:18:20Z
10683,Refs #29722 -- Added introspection of materialized views for Oracle.,Ticket [29722](https://code.djangoproject.com/ticket/29722).,felixxm,None,2018-11-23T18:57:34Z,2018-11-26T18:55:57Z
10682,Fixed typo in docs/topics/i18n/translation.txt.,Fixed import,andreage,None,2018-11-23T08:17:23Z,2018-11-23T09:13:59Z
10681,Fixed #28385 -- Fixed deserializing natural keys when primary key has a default value.,"https://code.djangoproject.com/ticket/28385
Updated from https://github.com/django/django/pull/8801.",hramezani,None,2018-11-22T21:22:51Z,2018-11-28T00:58:12Z
10680,"Fixed #29979, Refs #17337 -- Extracted AutoField field logic into a mixin and refactored AutoFields.","Ticket [#29979](https://code.djangoproject.com/ticket/29979).

The first two commits are minor tweaks noticed while developing this set of changes. The last three can be squashed together, but were left separate for reviewing purposes.",pope1ni,None,2018-11-22T21:11:38Z,2020-01-03T23:35:30Z
10679,Improved readability of translation's to_locale().,Make things a bit more explicit.,jaap3,None,2018-11-22T15:06:22Z,2020-03-02T13:10:10Z
10678,Fixed #29930 -- Allowed editing in admin with view-only inlines.,"* Uses test from patch provided by Tim Graham on ticket. 
* Skips inlines for view-only user in `_create_formsets()`

~~**Don't merge yet**. this is not 100% right: I want to test that the read-only inline is shown in the right places.~~ 
",carltongibson,None,2018-11-22T10:35:34Z,2018-12-03T15:44:23Z
10677,Fixed #29978 -- Caught GDALException in GeometryField.to_python,,claudep,None,2018-11-22T10:23:26Z,2018-11-23T08:40:30Z
10675,"Fixed #29966 -- Add test coverage for BaseHandler's ""The view didn't return an HttpResponse object."" error","[ticket_29966](https://code.djangoproject.com/ticket/29966)

It covers `FBV`:
https://github.com/django/django/blob/d5f4ce9849b062cc788988f2600359dc3c2890cb/django/core/handlers/base.py#L119

But I don't know how to test the `CBV`. I test some class-based view like this:
```
class WithoutReponse(ListView):

    def get(self, request):
        pass
```

But, when I call this view, the `callback` type is `FunctionType` and the `else` block doesn't execute.",hramezani,None,2018-11-21T16:23:24Z,2018-11-24T00:19:03Z
10674,Fixed #29974 -- Support non-truthy primary keys in bulk_update,I noticed a small oversight where a primary key with the value `0` would fail the primary key check in `bulk_save`. I've switched it to explicitly check for `None` values.,orf,None,2018-11-21T10:31:16Z,2018-11-22T09:52:17Z
10673,Fixed #29738 --  Allowed registering serializers with MigrationWriter.,https://code.djangoproject.com/ticket/29738,cansarigol,None,2018-11-20T22:28:47Z,2019-01-21T12:51:16Z
10672,Refs #24829 -- Removed TemplateResponse rendering in BaseHandler.get_response().,Obsolete since 742ea51413b3aab07c6afbfd1d52c1908ffcb510.,timgraham,None,2018-11-20T16:05:06Z,2018-11-20T16:28:04Z
10671,Tested a middleware's process_template_response() returning None.,,timgraham,None,2018-11-20T15:47:22Z,2018-11-20T20:55:14Z
10670,Removed BaseHandler.get_exception_response().,Unused since 7d1b69dbe7f72ac04d2513f0468fe2146231b286.,timgraham,None,2018-11-20T14:46:15Z,2018-11-20T15:47:09Z
10669,Changed BaseDatabaseSchemaEditor._effective_default() to staticmethod.,"Follow up to 9cac10eee49eae3bbf7bd133ba0ae931b275324c.
(suggested at https://github.com/django/django/commit/9cac10eee49eae3bbf7bd133ba0ae931b275324c#r31361230)",timgraham,None,2018-11-20T14:10:50Z,2018-11-20T23:01:23Z
10668,Added .vscode to .gitignore,"Just opening to discuss initially. 

Lots of people use VS Code now. If we ignore `.vscode` files we avoid accidental inclusion in commits, and subsequent discussion, and correction, and so on. 

We could equally add other editor and OS specific files too (this latter e.g. `.DS_Store` on macOS and so on.) 

An alternative might be to script a CI lint step checking such files aren't included. There will be other options. I'm not sure the best strategy. 

Goal: help people avoid these kind of things and/or catch them automatically.",carltongibson,None,2018-11-20T10:20:50Z,2018-11-20T14:20:11Z
10667,Refs #25251 -- Filtered out skipped tests when processing the test suite to set _next_serialized_rollback.,Reported at https://github.com/django/django/pull/7528#issuecomment-437196837.,romgar,None,2018-11-19T23:19:15Z,2018-11-30T18:54:21Z
10666,Fixed #29948 -- Update last TransactionTestCase serialized_rollback behaviour,Use the rollback setting from the last test in the fixture teardown instead of always considering that we should rollback at the end of a test suite using TransactionTestCase.,romgar,None,2018-11-19T23:12:36Z,2018-12-05T21:04:15Z
10665,Fixed typo in static files docs,"Removed the use of double quotes inside double quotes in sample code,
see PEP-8: String Quotes
(https://www.python.org/dev/peps/pep-0008/#id25)

[x] Documentation builds without errors (`make html`)",bennett39,None,2018-11-19T20:38:59Z,2018-11-20T13:24:41Z
10664,[2.0.x] Updated typing error,"1. boundfield.py
132 line, contents -> 'contents' (Ambiguity override)

2. forms.py
65 line, by -> from

3. forms.py
389 line, data -> the data

4. formsets.py
106 line, return -> Return

5. formsets.py
114 line, inlines -> in-lines

6. formsets.py
297 line, on -> of

7. django/django/db/utils.py
136 line, 
Requires additional annotation information as to whether 'database' is used as a variable.
If not variable, suggest upper case.

8. session.py
13 line & 14line, on -> onto

9. session.py
20 line, make -> makes / made

10. lookups.py
76 line, null -> None

11. lookups.py
55 line, 'search' word need big quotation mark ",djangocontributors,None,2018-11-19T10:51:34Z,2018-11-19T11:10:12Z
10662,Fixed #29964 -- Removed unused admin/related_widget_wrapper.html template.,"Closes https://code.djangoproject.com/ticket/29964

This PR removes the unused template `django/contrib/admin/templates/admin/related_widget_wrapper.html` and it's references from django.po file.",VishvajitP,None,2018-11-18T13:01:36Z,2018-11-18T16:42:49Z
10661,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,"This PR makes the change-add-delete links of the `RelatedFieldWidgetWrapper` not render when it's wrapping a hidden widget.
https://code.djangoproject.com/ticket/29961",redodo,None,2018-11-18T11:47:05Z,2018-11-20T20:55:30Z
10660,Fixed #29956 -- Allowed overriding an order field widget in formsets.,[ticket_29956](https://code.djangoproject.com/ticket/29956),hramezani,None,2018-11-17T23:16:00Z,2019-03-21T14:49:11Z
10659,Fixed #29505 -- Removed SchemaEditor's calling of callable defaults.,"Thanks Eugene Pakhomov for the suggested fix.
https://code.djangoproject.com/ticket/29505",timgraham,None,2018-11-17T21:26:01Z,2018-11-18T01:09:41Z
10658,Fixed #29738 -- Changed serializer_factory so that unserializable values can be migrated,https://code.djangoproject.com/ticket/29738,cansarigol,None,2018-11-17T15:11:58Z,2018-11-20T22:25:11Z
10657,Fixed #28766 -- Added ResolverMatch.route,https://code.djangoproject.com/ticket/28766,xavfernandez,None,2018-11-17T07:50:22Z,2018-12-07T21:07:26Z
10656,Refs #29908 -- Optimized known related objects assignment.,"Since [CPython implements a C level attrgetter(*attrs)](https://github.com/python/cpython/blob/ad65f15581173542f1d2a9968a63bee272510ce3/Modules/_operator.c#L1109-L1245) it even outperforms the most common case of a single known related object since the resulting attribute values tuple is built in C.

Note that this also restores the `_known_related_objects` key types for relationships involving a single target field.
",charettes,None,2018-11-16T23:25:54Z,2018-11-18T00:20:37Z
10655,Added test for Model._check_column_name_clashes().,"try to cover
https://github.com/django/django/blob/405ec5b9c6996bf4e5fba68a9bad76d17e146327/django/db/models/base.py#L1417",hramezani,None,2018-11-16T22:58:05Z,2018-11-17T20:24:49Z
10654,Refs #28814 -- Backport Python 3.7 compatibility to Django 1.11.x LTS,As requested in 931c60c5216bd71bc11f489e00e063331cf21f40 .,zyv,None,2018-11-16T15:54:06Z,2018-11-17T21:03:49Z
10653,Fixed #29959 -- Cached GEOS version in WKBWriter class,https://code.djangoproject.com/ticket/29959,claudep,None,2018-11-16T14:12:32Z,2018-11-22T14:31:54Z
10652,Fixed #29282 -- Prevented some admin checks from crashing with TypeError.,https://code.djangoproject.com/ticket/29282,CuriousLearner,None,2018-11-16T12:02:19Z,2018-11-21T15:40:56Z
10651,Fixed #23829 -- Added support for https scheme and site_domain in ping_google,"This PR adds optional arguments to `ping_google` to support changing to `https` scheme using `secure` option and overriding the domain of sitemaps using `site_domain`.

https://code.djangoproject.com/ticket/23829",CuriousLearner,None,2018-11-16T08:42:12Z,2019-01-11T20:13:55Z
10650,Fixed #29949 -- Refactored db introspection identifiers converters.,"Removed `DatabaseIntrospection.table_name_converter()/column_name_converter()` and
use instead `DatabaseIntrospection.identifier_converter().`

Removed `DatabaseFeatures.uppercases_column_names`.

From the list of [3rd-party database backends](https://docs.djangoproject.com/en/2.1/ref/databases/#using-a-3rd-party-database-backend) only [django-firebird](https://github.com/maxirobaina/django-firebird/blob/master/firebird/introspection.py#L53-L54) uses `table_name_converter()` and `uppercases_column_names`.

- [x] Release notes.

Ticket [29949](https://code.djangoproject.com/ticket/29949#ticket).",felixxm,None,2018-11-15T19:42:22Z,2018-11-21T08:07:22Z
10649,Used auto-numbered lists more often in documentation,"Made future documentation patch diff more readable, as lists don't need to be renumbered.

Places where the number of items is present in the introducing text have been left untouched.",francoisfreitag,None,2018-11-15T16:41:51Z,2018-11-16T16:07:59Z
10648,Complete test coverage db.models.base.refresh_from_db,"Try to cover
https://github.com/django/django/blob/e1fc07c047f8e46c2cea0120f44011fc458f1e91/django/db/models/base.py#L595",hramezani,None,2018-11-15T15:47:08Z,2018-11-15T16:38:48Z
10647,Fixed #29952 -- Lowercased all passwords in contrib.auth's auth/common-passwords.txt.gz.,https://code.djangoproject.com/ticket/29952,GeekMasher,None,2018-11-15T00:39:43Z,2018-11-15T19:11:48Z
10646,small typo in middleware docs,,vlt,None,2018-11-14T14:21:50Z,2018-11-16T09:48:14Z
10645,Fixed #29953 -- Add CSS class to column headers in tabular inlines,"https://code.djangoproject.com/ticket/29953

This PR adds a CSS class to column headers output by `TabularInline` to improve customizability of the admin interface.

The class name is formatted as `column-{{ field.name }}`, which is the same as the class name given to column headers in the change list of `ModelAdmin`.",redodo,None,2018-11-14T12:10:23Z,2018-11-22T14:48:33Z
10644,Fixed #17930 -- Allowed ORing (|) with sliced QuerySets.,https://code.djangoproject.com/ticket/17930,Ian-Foote,None,2018-11-13T21:04:56Z,2019-02-24T11:11:34Z
10643,Fixed #29915 -- Added support for values with hyphens to pattern lookups for UUIDField on backends without UUID datatype.,"Support hyphens in `iexact`, `contains`, `icontains`, `startswith`, `istartswith`, `endswith` and `iendswith` `UUIDField` filters.",Ian-Foote,None,2018-11-12T19:24:06Z,2019-11-21T15:25:48Z
10642,Fixed factual error regarding RegisterLookupMixin subclasses.,,sir-sigurd,None,2018-11-12T05:58:04Z,2018-11-12T15:22:27Z
10641,Moved duplicate author declarations to setUpTestData() in DeleteViewTests.,Moved duplicate author declarations to setUpTestData() and Removed unnecessary fetching Author instance from DB in DeleteViewTests.,MyungSeKyo,None,2018-11-12T04:26:38Z,2018-11-13T22:27:25Z
10639,Fixed #29641 -- Added support for unique constraints in Meta.constraints.,"https://code.djangoproject.com/ticket/29641
(continued from https://github.com/django/django/pull/10337)",timgraham,None,2018-11-11T01:17:41Z,2018-11-13T23:25:42Z
10638,Fixed #29641 -- Added UniqueConstraint support.,"https://code.djangoproject.com/ticket/29641
(continued from https://github.com/django/django/pull/10337)",timgraham,None,2018-11-11T01:13:26Z,2018-11-11T01:14:27Z
10637,Complete test coverage of `contrib.humanize.templatetags.humanize`,"Cover below lines:
https://github.com/django/django/blob/961f8e99850ecb334d63a943b53b3cb1180ef538/django/contrib/humanize/templatetags/humanize.py#L162
https://github.com/django/django/blob/961f8e99850ecb334d63a943b53b3cb1180ef538/django/contrib/humanize/templatetags/humanize.py#L266
https://github.com/django/django/blob/961f8e99850ecb334d63a943b53b3cb1180ef538/django/contrib/humanize/templatetags/humanize.py#L276",hramezani,None,2018-11-10T22:52:08Z,2018-11-11T00:09:38Z
10636,Some authentication changes for improving documentation,"This is about improving the documentation on authentication backends and object permissions. See also
#10600 and #10601.

This is work in progress. It is supposed to illustrate current issues and how they could be fixed.
",xi,None,2018-11-10T19:58:35Z,2019-02-28T10:57:05Z
10635,Updated different links to https and new locations.,,atombrella,None,2018-11-10T17:54:50Z,2018-11-12T20:36:00Z
10634,Update base.py,IDEs are screaming because there's nothing to raise,samomar,None,2018-11-10T17:05:27Z,2018-11-10T20:03:31Z
10633,Doc'd PermissionsMixin's usage of User.is_active and is_superuser.,effect of is_active depends on authentication backend,xi,None,2018-11-10T10:20:47Z,2018-11-12T15:44:23Z
10632,Fixed #29940 -- Recommended using the ORM rather than raw SQL.,Happy to accept input as to the best way to add better doc warnings to be explicitly clear that `raw()` is functionally defunct. ,glasnt,None,2018-11-09T21:57:54Z,2018-11-13T23:15:25Z
10631,Fixed #29936 -- Improved font customization in the admin,"Removed the hardcoded `@import 'fonts.css';` rule in the admin’s `base.css` and substituted with a `<link>` element within a new, extendable block named `adminfonts` inside the admin’s `base.html` builtin template. The result is that custom admin templates can skip the loading of the built-in admin fonts altogether and keep overriding / extending the base CSS via the `extrastyle` block.",verbosus,None,2018-11-09T21:25:59Z,2018-11-19T23:32:37Z
10630,Fixed #17210 -- Made `NullBooleanSelect` pass true/false as a GET param,https://code.djangoproject.com/ticket/17210,samitnuk,None,2018-11-09T20:54:35Z,2018-11-14T18:43:35Z
10629,Fixed #29929 -- Fixed admin view-only change form crash when using ModelAdmin.prepopulated_fields.,https://code.djangoproject.com/ticket/29929,samitnuk,None,2018-11-09T20:49:32Z,2018-11-28T22:11:46Z
10628,Removed unused variables across Django,  courtesy: http://lgtm.com,srinivasreddy,None,2018-11-09T18:18:08Z,2018-11-19T10:23:45Z
10627,Fixed #29939 -- Increased Group.name max_length to 150 characters.,"This PR increases the max_length of `django.contrib.auth` model `Group` field `name` to 191, to match recent changes to `username`, `first_name`, and `last_name` in the `User` model. ([Ticket](https://code.djangoproject.com/ticket/29939))",FlipperPA,None,2018-11-09T16:14:15Z,2019-09-27T23:44:30Z
10626,Removed unused 'tz' variable in typecast_timestamp().,Will create an issue if this patch is acceptable.,srinivasreddy,None,2018-11-09T13:28:03Z,2018-11-09T19:05:20Z
10625,Used method chaining in DateTimeShortcuts.js.,"Note: @timgraham   feel free close, if you  do not like it. 
I will add an issue if you accept.  Thanks.",srinivasreddy,None,2018-11-09T10:50:53Z,2018-11-10T03:32:22Z
10624,Fixed signing.dumps() example for Python 3.,"```
>>> signing.dumps(range(1, 20), compress=True)
...
TypeError: Object of type 'range' is not JSON serializable
```",minusf,None,2018-11-09T10:18:31Z,2018-11-09T13:20:47Z
10623,Minor Change for Model query in Django shell,In the poll application of the tutorial  of django==2.1 by querying the model like`q = Question.objects.filter(1)` will produce an array of QuerySet. If the query response is empty then the response will be an empty **<QuerySet []>** array. What i found while going through the tutorial is that author has assigned a variable `q = Question.objects.filter(pk=1)` and has called the method as `q.choice_set.all()` and other methods like `q.was_published_recently()`. But It will throw an error because **q** is an QuerySet array. We must have to call the methods by giving proper indexing. For eg: `q[0].choice_set.all()` or `q[0].was_published_recently()`.,shivanand217,None,2018-11-09T06:15:02Z,2018-11-09T16:23:20Z
10622,Fixed #29934 -- Added sqlparse as a required dependency.,https://code.djangoproject.com/ticket/29934,timgraham,None,2018-11-09T01:48:08Z,2018-11-10T00:09:47Z
10621,Fixed #29933 -- Fixed typo in docs/intro/contributing.txt.,Mentioned in ticket 29933.,mentix02,None,2018-11-08T20:33:14Z,2018-11-09T07:32:23Z
10620,Fixed #29931 -- Removed unused ValueError handling in naturalday template tag.,,hramezani,None,2018-11-08T19:05:01Z,2018-11-09T17:16:46Z
10619,Added code example for generic editing with AJAX,"An object-based FormView required redirect URL even if some models don't need them. (e. g. Comment)
If the method `get_absolute_url` or `get_success_url` doesn't exist, an `ImproperlyConfigured` error occurred, and the AJAX request fails to get a response from the server.
So define method `get_success_url` in Mixin, if the request is AJAX, return None to avoid error and if not return parent's `get_success_url`.",zzulu,None,2018-11-08T19:01:04Z,2020-04-01T05:50:52Z
10618,Moved duplicate author declarations to setUpTestData() in UpdateViewT…,…ests,MyungSeKyo,None,2018-11-08T06:51:32Z,2018-11-09T14:26:53Z
10617,Fixed #29788 -- Added support for Oracle Managed File (OMF) tablespaces.,Ticket [29788](https://code.djangoproject.com/ticket/29788).,felixxm,None,2018-11-07T15:31:07Z,2018-11-14T13:34:24Z
10616,Update ReadMe.md,"Small changes made to the read me file to increase formality: 
    - You and your were removed
    - Any contractions were expanded
    - Sentences were re-worded to cut down on ambiguity",DerekRoy,None,2018-11-07T14:45:07Z,2018-11-07T15:57:12Z
10615,Allow user-defined related_name customization,"This will allow devs to override the `get_related_name_replacements` or `get_related_query_name_replacements` method(s) on `ForeignKey` to specify custom variables to be used in the generation of the `related_name`/`related_query_name`.

For example...
```python
from django.db import models


class ShortRelatedKey(models.ForeignKey):
    def get_related_name_replacements(self, cls):
        replacements = super().get_related_name_replacements(cls)
        replacements.update({
            'short_name': cls.short_name
        })
        return replacements

""this example is kinda dumb, but this change has good uses""


class CrayonBox(models.Model):
    pass


class CrayonColor(models.Model):
    category = ShortRelatedKey(CrayonBox, related_name=""%(short_name)s"")

    class Meta:
        abstract = True


class CoolCrayonColors(CrayonColor):
    short_name = 'cools'


class WarmCrayonColors(CrayonColor):
    short_name = 'hots'
```",GravyHands,None,2018-11-07T10:37:05Z,2019-01-01T14:25:27Z
10614,Fixed #29920 -- Added a test for smart_urlquote()'s UnicodeError branch.,https://code.djangoproject.com/ticket/29920,srinivasreddy,None,2018-11-07T05:29:39Z,2018-11-09T17:39:55Z
10613,Refs #29926 -- Removed usage of gettext.translation()'s deprecated codeset parameter.,https://bugs.python.org/issue33710,timgraham,None,2018-11-07T00:38:11Z,2018-11-07T01:22:51Z
10612,Fixed Python3.7 error,"Fixed error:
File ""django/contrib/admin/widgets.py"", line 152
    '%s=%s' % (k, v) for k, v in params.items(),
    ^
SyntaxError: Generator expression must be parenthesized",denex,None,2018-11-06T17:13:39Z,2018-11-06T18:34:27Z
10611,Refs #29884 - Add tests to reproduce issue.,https://code.djangoproject.com/ticket/29884,danizen,None,2018-11-06T05:05:26Z,2018-11-07T00:04:33Z
10610,Combined multiple create() methods into a bulk_create() method,Combined multiple `create()` methods into a `bulk_create()` method,MyungSeKyo,None,2018-11-06T04:17:48Z,2018-11-07T00:32:41Z
10609,Fixed keep-alive support in manage.py runserver.,"Ticket #25619 changed the default protocol to HTTP/1.1 but did not
properly implement keep-alive. As a ""fix"" keep-alive was disabled in
ticket #28440 to prevent clients from hanging (they expect the server to
send more data if the connection is not closed and there is no content
length set).

The combination of those two fixes resulted in yet another problem:
HTTP/1.1 by default allows a client to assume that keep-alive is
supported unless the server disables it via 'Connection: close' -- see
RFC2616 8.1.2.1 for details on persistent connection negotiation. Now if
the client receives a response from Django without 'Connection: close'
and immediately sends a new request (on the same tcp connection) before
our server closes the tcp connection, it will error out at some point
because the connection does get closed a few milli seconds later.

This patch fixes the mentioned issues by always sending 'Connection:
close' if we cannot determine a content length. The code is inefficient
in the sense that it does not allow for persistent connections when
chunked responses are used, but that should not really cause any
problems (Django does not generate those) and it only affects the
development server anyways.",apollo13,None,2018-11-04T18:12:24Z,2018-11-10T12:54:46Z
10608,Replace os.listdir with os.scandir in runtests.py,Small optimization: if you're calling `os.path.is_*` on a result from `os.listdir` it's often faster (especially on Windows) to use `os.scandir()`.,orf,None,2018-11-04T14:57:05Z,2018-11-05T22:06:19Z
10607,Fixed #29917 — Adjusted MRO collection of ModelAdmin.actions.,"BC alternative for #10603. 

Adds test case for failure from https://code.djangoproject.com/ticket/29917 plus prior/existing behaviour. 

This behaviour has been untouched since https://github.com/django/django/commit/bb15cee58a43eeb0d060f8a31f9078b3406f195a, which was some time ago. ",carltongibson,None,2018-11-04T09:09:25Z,2019-07-29T09:15:32Z
10606,Fixed #29919 -- Fixed RelatedOnlyFieldListFilter crash with reverse relationships.,https://code.djangoproject.com/ticket/29919,mgrdcm,None,2018-11-04T02:46:48Z,2019-10-23T09:14:17Z
10605,Allow make_template_fragment_key() to work on FIPS systems,"Systems in ""FIPS mode"" (fips=1 kernel flag set) cannot use MD5. There's some exception for allowed use cases, but that's mostly academic in nature considering software like OpenSSL will block MD5 regardless of intended use on FIPS mode systems. This patch specifically addresses an issue encountered on a deployment of Red Hat OpenStack 13, albeit using an older Red Hat packaged version of python-django (1.8.18-1.el7ost).",1000101,None,2018-11-04T00:58:38Z,2020-07-10T08:34:32Z
10604,Removed unnecessary DatabaseOperation.savepoint_rollback_sql() on Oracle.,"As far as I can tell it's equivalent to the base method:

```python
    def savepoint_rollback_sql(self, sid):
        """"""
        Return the SQL for rolling back the given savepoint.
        """"""
        return ""ROLLBACK TO SAVEPOINT %s"" % self.quote_name(sid)
```",orf,None,2018-11-03T23:35:43Z,2018-11-05T00:01:13Z
10603,Fixed #29917 -- Stopped collecting ModelAdmin.actions from base ModelAdmins.,https://code.djangoproject.com/ticket/29917,matthiask,None,2018-11-03T16:31:09Z,2019-04-24T09:15:03Z
10602,Fixed inconsistent indentation in docs/ref/contrib/auth.txt.,,xi,None,2018-11-03T10:04:58Z,2018-11-03T15:07:44Z
10601,Fixed #20218 -- Added DefaultObjectPermissionsBackend,"Note that I did not add the new backend to the default settings, so the change is fully backwards compatible.",xi,None,2018-11-03T09:15:03Z,2018-11-14T09:52:37Z
10600,Fixed 29918: Added support for object permissions in PermissionRequiredMixin,"Currently, external apps have to ship their own mixin because the default one does not support object permissions. This PR adds a method `get_permission_object()`. This is what django-guardian
does. However, here it returns None by default for backwards compatibility (In django-guardian it falls back to `get_object()`).",xi,None,2018-11-03T08:32:34Z,2018-11-14T09:52:46Z
10599,Fixed #28991 -- Added BlankFieldListFilter admin filter,"This is a rework and improvement of the original PR
https://github.com/django/django/pull/9546 

I tried to ensure that every kind of field can support the `BlankFieldListFilter`, and not just CharField, as I suspect the original PR does.
Also, I added some documentation.",baldychristophe,None,2018-11-02T23:26:34Z,2019-12-21T17:58:53Z
10598,Increase test coverage of `django.utils.http`,"Try to cover these lines:

[https://github.com/django/django/blob/5a2dd5ec5330938e9afb77faf6ca89abf39c018c/django/utils/http.py#L167](https://github.com/django/django/blob/5a2dd5ec5330938e9afb77faf6ca89abf39c018c/django/utils/http.py#L167)
[https://github.com/django/django/blob/5a2dd5ec5330938e9afb77faf6ca89abf39c018c/django/utils/http.py#L275](https://github.com/django/django/blob/5a2dd5ec5330938e9afb77faf6ca89abf39c018c/django/utils/http.py#L275)",hramezani,None,2018-11-02T23:20:57Z,2018-11-03T15:13:28Z
10597,Fixed #28872 -- Added JSONIn lookup,"https://code.djangoproject.com/ticket/28872

We noticed this bug was still present in `master` and handled it in a way that should be supported in Django 1.11+/Postgres 9.3+. Happy to receive feedback on other ways to solve it/things we might have overlooked in the implementation.

Thanks to Jerome Leclanche for reporting and suggesting a solution.",VCAMP,None,2018-11-02T14:31:04Z,2020-05-21T06:41:07Z
10596,Fixed typo in docs/internals/contributing/writing-code/coding-style.txt.,,qwhex,None,2018-11-02T14:09:22Z,2018-11-02T14:59:13Z
10595,Fixed #29908 -- Fixed setting of foreign key after related set access if ForeignKey uses to_field.,"Thanks Carsten Fuchs for the report.

https://code.djangoproject.com/ticket/29908

This unveiled an issue with `ForeignObject` as well where related managers were causing extra queries.",charettes,None,2018-11-01T06:45:59Z,2018-11-09T01:43:39Z
10594,Add CSRF_COOKIE_SAMESITE source doc,,zwernberg,None,2018-11-01T01:52:16Z,2018-11-14T19:39:26Z
10593,Fixed #29890 -- Fixed FileSystemStorage crash if concurrent saves try to create the same directory.,https://code.djangoproject.com/ticket/29890,timgraham,None,2018-10-31T23:28:50Z,2018-11-01T00:55:38Z
10592,Fixed #22390 -- Doc'd possible server restart required in tutorial 6.,https://code.djangoproject.com/ticket/22390,timgraham,None,2018-10-31T22:56:44Z,2018-11-01T00:50:36Z
10591,Fixed #29910 -- Fix ManyToManyFields with Proxy models,https://code.djangoproject.com/ticket/29910,collinanderson,None,2018-10-31T19:35:19Z,2020-06-12T10:45:27Z
10590,Let's use a newer string formatting syntax.,"I would like to use f-strings here, but tutorial01.txt indicates we're
compatible with Python 3.5. Braces without a number has been
introduced in Python 3.1.",JulienPalard,None,2018-10-30T22:01:58Z,2018-11-26T19:48:09Z
10589,create Dockerfile,,alfuhigi,None,2018-10-30T17:59:42Z,2018-10-30T18:16:51Z
10588,create urls.py for app_template ,,alfuhigi,None,2018-10-30T17:43:17Z,2018-10-30T18:17:09Z
10587,Stable/2.1.x,"I suggest to amend the comments as follows.

1. forms / forms.py
    428 line, association -> associated
2. 500 line, 'class Form(BaseForm, metaclass=DeclarativeFieldsMetaclass):' 
    The specific standards have yet to be set.
3. form / formsets.py
    79 line, management -> manageable",djangocontributors,None,2018-10-30T13:40:49Z,2018-10-30T13:59:52Z
10586,Increase test coverage of django/views/generic/dates.py.,"Try to cover this two lines:

[https://github.com/django/django/blob/a906c9898284a9aecb5f48bdc534e9c1273864a6/django/views/generic/dates.py#L237](https://github.com/django/django/blob/a906c9898284a9aecb5f48bdc534e9c1273864a6/django/views/generic/dates.py#L237)
 [https://github.com/django/django/blob/a906c9898284a9aecb5f48bdc534e9c1273864a6/django/views/generic/dates.py#L309](https://github.com/django/django/blob/a906c9898284a9aecb5f48bdc534e9c1273864a6/django/views/generic/dates.py#L309)
",hramezani,None,2018-10-30T11:49:11Z,2018-10-30T18:50:19Z
10585,Refs #29868 -- Prevented name collisions between test constraints on Oracle.,"https://github.com/django/django/pull/10539#issuecomment-434129333

Not sure if it's a silent name truncation issue yet. I guess Oracle doesn't namespace constraint names by table name.",charettes,None,2018-10-30T03:51:05Z,2018-10-30T13:26:28Z
10584,Capitalized SecurityMiddleware headers for consistency with other headers.,"Shouldn't break anything due to HTTP headers' case insensitivity, but I believe they should be written like this for consistency's sake.",Asgavar,None,2018-10-29T22:32:15Z,2018-10-30T22:56:06Z
10583,Fixed #29903 -- Add error handling for WeekArchiveView invalid week_format,[ticket_29903](https://code.djangoproject.com/ticket/29903),hramezani,None,2018-10-29T14:59:10Z,2018-10-29T18:41:26Z
10582,adding contribution in install document,,touseefjaved007,None,2018-10-29T12:16:09Z,2018-10-29T13:33:12Z
10581,Fixed #29882 -- Added events and stored routines to MySQL's cloned test databases.,"https://code.djangoproject.com/ticket/29882, add `--routines` when cloning the test mysql db so UDFs are copied over to the clone db.",tzzh,None,2018-10-29T09:48:31Z,2018-10-29T21:48:02Z
10580,Django framework working,,diksha096,None,2018-10-29T04:49:09Z,2018-10-29T05:04:15Z
10579,Fixed #29882 - add --routines when cloning mysql,"- Added '--routines' to mysqldump when cloning for parallel test run.
- No tests provided as mysqldump is external.
- Ticket #29882 has a reference to a repository that reproduced issue and shows it is fixed.",danizen,None,2018-10-29T03:01:55Z,2018-10-29T13:59:37Z
10578,Fixed #29901 -- Allowed overriding an autocomplete/raw_id_fields/radio_fields widget with ModelAdmin.get_formset().,"https://code.djangoproject.com/ticket/29901
",javiermatos,None,2018-10-29T01:30:24Z,2018-10-31T15:18:36Z
10577,Fixed #29897 -- Adjusted auto-detector swappable MTI dependency resolution.,https://code.djangoproject.com/ticket/29897,charettes,None,2018-10-29T01:00:27Z,2018-10-29T15:57:22Z
10576,Avoid calling complex_filters when limit_choices_to is empty,"The if condition always evaluated to True by default, when no limit_choices_to option has been passed at all, because it is an empty dict `{}` by default.

Fixes the following traceback when using a lookupy QuerySet instead of a django QuerySet:

```


File ""/home/jpic/.local/lib/python3.7/site-packages/django/core/handlers/exception.py"" in inner
  34.             response = get_response(request)

File ""/home/jpic/.local/lib/python3.7/site-packages/django/core/handlers/base.py"" in _get_response
  126.                 response = self.process_exception_by_middleware(e, request)

File ""/home/jpic/.local/lib/python3.7/site-packages/django/core/handlers/base.py"" in _get_response
  124.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File ""/home/jpic/.local/lib/python3.7/site-packages/django/views/generic/base.py"" in view
  68.             return self.dispatch(request, *args, **kwargs)

File ""/home/jpic/src/crudlfap/src/crudlfap/route.py"" in dispatch
  185.         return super().dispatch(request, *args, **kwargs)

File ""/home/jpic/.local/lib/python3.7/site-packages/django/views/generic/base.py"" in dispatch
  88.         return handler(request, *args, **kwargs)

File ""/home/jpic/src/crudlfap/src/crudlfap/mixins/template.py"" in get
  18.         return self.render_to_response()

File ""/home/jpic/src/crudlfap/src/crudlfap/mixins/template.py"" in render_to_response
  30.             context=self.context,

File ""/home/jpic/src/crudlfap/src/crudlfap/factory.py"" in __getattr__
  28.             methresult = getter()

File ""/home/jpic/src/crudlfap/src/crudlfap/mixins/object.py"" in get_context
  19.         return super().get_context(**context)

File ""/home/jpic/src/crudlfap/src/crudlfap/mixins/form.py"" in get_context
  13.         context['form'] = self.form

File ""/home/jpic/src/crudlfap/src/crudlfap/factory.py"" in __getattr__
  28.             methresult = getter()

File ""/home/jpic/src/crudlfap/src/crudlfap/mixins/modelform.py"" in get_form
  23.         self.form = self.form_class(**self.form_kwargs)

File ""/home/jpic/.local/lib/python3.7/site-packages/django/forms/models.py"" in __init__
  306.             apply_limit_choices_to_to_formfield(formfield)

File ""/home/jpic/.local/lib/python3.7/site-packages/django/forms/models.py"" in apply_limit_choices_to_to_formfield
  100.             formfield.queryset = formfield.queryset.complex_filter(limit_choices_to)

Exception Type: AttributeError at /url/UserUpdateView/permission
Exception Value: 'QuerySet' object has no attribute 'complex_filter'
```

Request for comments",jpic,None,2018-10-28T17:03:07Z,2020-07-02T10:53:42Z
10575,use `or` in place of `if-else`,,karansthr,None,2018-10-28T16:52:40Z,2018-10-28T17:03:53Z
10574,push the new update,,GaussDing,None,2018-10-28T04:35:20Z,2018-10-28T04:41:39Z
10573,Fixed #29896 -- Fixed incorrect Model.save() cache relation clearing for foreign keys that use to_field.,https://code.djangoproject.com/ticket/29896,timgraham,None,2018-10-27T23:31:51Z,2018-10-29T02:54:26Z
10572,Refactor db constraint,"@timgraham here's a follow up commit to #10406 to avoid calling the constraint parsing logic if not required.

Two things I note while working and testing this patch.

1. Given we run the suite with `sqlparse` installed on CI it will be really hard to prevent inadvertently breaking the promise of a soft dependency on `sqparse` for `Meta.constraints` only. Think of backports and such.
2. There's a few instances of fragile regex parsing that could be more reliable if `sqlparse` was an hard dependency for `SQLite`. Two examples are

`get_relations`

https://github.com/django/django/blob/f892781b957f674806a227a10c58768f66a48c07/django/db/backends/sqlite3/introspection.py#L90-L146

and `alter_field`

https://github.com/django/django/blob/f892781b957f674806a227a10c58768f66a48c07/django/db/backends/sqlite3/schema.py#L91-L127

This makes me believe it could be worth making `sqlparse`  an hard dependency for the `sqlite` package in order to remove the pile of hacks we have in place. The only issue here is that `sqlite` is the default backend and developers installing Django expects it to work out of the box and wouldn't necessarily perform a `pip install Django[sqlite]` that we could declare using `extra_requires`. Given we require `pytz` to be installed because the default value of `USE_TZ = True` even if it's not strictly necessary when `USE_TZ = False` I think we could add an hard dependency to `sqlparse` as well.

Another solution would be to craft regexes instead of using `sqlparse` to introspect constraint names but I assume that would be very hard to get everything right hence why @Ian-Foote relied on `sqlparse`.

I guess we should move the discussion to the mailing list at this point?",charettes,None,2018-10-27T21:14:09Z,2018-11-10T06:18:29Z
10571,Stable/2.1.x,thats my first pull request,khodekia,None,2018-10-27T16:21:07Z,2018-10-27T16:25:59Z
10570,Fixed #28606 -- Deprecated CachedStaticFilesStorage.,https://code.djangoproject.com/ticket/28606,timgraham,None,2018-10-27T14:36:39Z,2018-10-27T18:23:59Z
10569,Fixed #20098 -- Added a check for model Meta.db_table collisions.,"This is a WIP.

On a second thought, I think it is not worth modifying `db_table` for every other test class written.

With the patch applied, the exception is of the form:

```Exception: db_table ""django_admin_logLogEntry"" was already declared by ""django.contrib.admin.models.LogEntry"" and was redeclared by ""__fake__.LogEntry""```

which makes it clear that `__fake__` module when appended in django test cases, have conflicting db_table names. I think I'd dig down where it is happening to override that portion of the code.

For now, I'm submitting this WIP PR to let the dice roll and for any suggestions.",CuriousLearner,None,2018-10-27T02:23:17Z,2018-12-24T17:21:41Z
10568,[WIP] Refs #29891 -- Add rudimentary ANSI SQL quoting to parameters in queryset.query.,"See this ticket for background: https://code.djangoproject.com/ticket/29891

This is an initial attempt to add rudimentary ANSI SQL quoting to parameters in `queryset.query`. This won't be 100% accurate, but should be an improvement over unquoted dates and strings.

I am submitting this as a work in progress to see if I'm on the right path, and get some feedback and ideas.

I'm unsure why the initial query built by `Query()` includes the `ESCAPE` clause.",FlipperPA,None,2018-10-26T20:53:18Z,2019-12-04T13:35:02Z
10567,Fixed #29864 -- Added link targets for low-level cache API.,https://code.djangoproject.com/ticket/29864,nixphix,None,2018-10-26T18:10:26Z,2018-11-15T23:46:17Z
10566,Fixed #29886 -- Fixed unaccent lookup when PostgreSQL's standard_conforming_strings option is off.,https://code.djangoproject.com/ticket/29886,jay1729,None,2018-10-26T15:21:43Z,2018-11-01T15:14:35Z
10565,Completed test coverage of views.generic.dates.MonthMixin .,try to cover [line 86-90 of views/generic/dates.py](https://github.com/django/django/blob/55b0b766fbeb2f71e68331a2e14205702f681012/django/views/generic/dates.py#L86).,hramezani,None,2018-10-26T15:20:52Z,2018-10-27T22:59:38Z
10564,Ref #29894 -- Made admin form keep readonly fields in order,[trac ticket](https://code.djangoproject.com/ticket/29894#ticket).,jannschu,None,2018-10-26T05:51:05Z,2018-11-07T15:12:52Z
10563,"Fixed #29615 -- Document diff in behaviour b/w m2m_changed for add & remove, when called multiple times.",@carltongibson Please let me know if you think we can improve the wording here to be more appropriate.,CuriousLearner,None,2018-10-25T21:08:41Z,2019-09-18T14:17:04Z
10562,Completed test coverage of views.defaults.bad_request().,cover line [94 of view/defaults.py](https://github.com/django/django/blob/76b3367035889d87ffef7a52cd44d70e30537f6f/django/views/defaults.py#L94). ,hramezani,None,2018-10-25T21:00:43Z,2018-10-26T00:03:59Z
10561,Fixed #29883 -- Add selenium hub support to runtests.py,"Ticket: https://code.djangoproject.com/ticket/29883

Successful build: https://travis-ci.com/orf/django-docker-box/builds/89214562",orf,None,2018-10-25T19:58:08Z,2018-11-03T14:30:09Z
10560,Made DatabaseFeatures.uses_savepoints default to True. ,"Removed useless check in sqlite's DatabaseWrapper._savepoint_allowed().
Obsolete since 27193ae.",timgraham,None,2018-10-25T14:24:51Z,2018-10-25T14:47:48Z
10559,Fixed #29763 -- Added support for column renaming on SQLite.,"It is feasible to use RENAME COLUMN instead of remaking the table and copying the data over for SQLite >= 3.25. Keeping the remake solution for older versions and for when the RENAME COLUMN statement isn't enough. I have implemented one way of doing it.

To test this in the CI I suggest adding a test environment with SQLite 3.25. Then we will be testing both the new and the old way making sure no new changes break it.

https://code.djangoproject.com/ticket/29763",Dunstrom,None,2018-10-25T11:29:31Z,2018-10-28T07:32:12Z
10558,Fixed #29867 -- Ensured cache.get_or_set treat None as a cacheable value,https://code.djangoproject.com/ticket/29867,phill-tornroth,None,2018-10-25T04:41:07Z,2019-09-25T07:24:41Z
10557,Fixed #29869 -- Made UUIDField.to_python() convert int values.,https://code.djangoproject.com/ticket/29869,CuriousLearner,None,2018-10-24T20:55:59Z,2018-10-25T01:39:12Z
10556,Fixed #29879 -- Added CSRF_COOKIE_HTTPONLY to CSRF AJAX docs.,"CSRF AJAX section didn't warn the users about CSRF_COOKIE_HTTPONLY setting
and so the csrf token value can't be fetched from the cookie as suggested
in the AJAX section. This commit adds the warning and updates the headings
for steps to follow if CSRF_COOKIE_HTTPONLY is enabled.",storymode7,None,2018-10-24T20:29:35Z,2018-10-25T16:08:12Z
10555,Fixed #29534 -- Made dbshell use rlwrap on Oracle if available.,Ticket [29534](https://code.djangoproject.com/ticket/29534).,felixxm,None,2018-10-24T20:04:00Z,2018-10-26T06:52:56Z
10554,Fixed #29834 -- Fixed column mismatch crash with QuerySet.values()/values_list() and order_by() on combined querysets.,Ticket: [#29834](https://code.djangoproject.com/ticket/29834),cansarigol,None,2018-10-24T14:24:45Z,2019-06-19T10:28:36Z
10553,Fixed #29834 -- Changed compiler.as_sql for combined queries that don't match columns,,cansarigol,None,2018-10-24T14:11:49Z,2018-10-24T14:12:36Z
10552,Fixed typo in unicode.txt,"Just a very small change to fix a grammatical mistake, and to be a little bit more verbose, in unicode.txt (docs)",Hypro999,None,2018-10-24T11:51:31Z,2018-10-25T00:01:20Z
10551,Ignored flake8 newly added W504 warning.,"Ignored `flake8` newly added `W504` warning.
Fixed F841 flake8 warnings in django/db/backends/postgresql/creation.py. 

`W504` is mutually exclusive with `W503` that we follow (see https://github.com/django/django/commit/2cd2d188516475ddf256e6267cd82c495fb5c430).",felixxm,None,2018-10-24T07:19:36Z,2018-10-24T18:25:13Z
10550,Improve the GeoIP test case stability,"According to Tim [here](https://github.com/orf/django-docker-box/issues/19) these tests are a pain point and often need fixing when the Maxmind database is updated on Jenkins.

In this PR I've removed the most flakey `test05_unicode_response` test. I believe this is not needed here, it was added 7 years ago and it seems to be testing [this line that no longer exists](https://github.com/django/django/commit/05e29716b4#diff-621f039c3c9707075898dc5614ec546dR61). We do not handle any encoding/decoding ourselves any more as far as I can see, and perhaps its safe to assume that the underlying `geoip2` library will not return bytes? If it does I think it's a bug in their code and not ours. 

Also with Python 3's Unicode changes it perhaps mitigates the need for this test even more.

Secondly I removed the explicit `GEOSGeometry` location check. I'm not sure if there is much point in testing the accuracy accuracy of Maxmind here, as long as it returns a `GEOSGeometry` object with a lat/long that is not 0 we can assume it works?

I left the others because they are testing wider areas and do not seem to fail.

I also renamed the tests to be more in line with the others by removing the numbering in the name, and added some `subTest`'s.

There is no ticket for this, I can create one if needed.",orf,None,2018-10-23T23:38:54Z,2018-10-24T00:52:18Z
10549,[wip] Fixed #29871 -- Allowed setting pk=None on a child model to create a copy.,https://code.djangoproject.com/ticket/29871,timgraham,None,2018-10-23T22:55:20Z,2018-11-13T23:42:32Z
10548,Fixed #29317,FIXED #10530 ,VishvajitP,None,2018-10-23T11:03:00Z,2018-10-23T11:10:17Z
10547,Refs #29877 -- Replaced http://www.diveinto.org/ with secure URL.,,jdufresne,None,2018-10-23T10:50:27Z,2018-10-23T13:12:20Z
10546,Fixed #29877 -- Replaced diveintopython3.net with diveinto.org/python3/,ticket [#29877](https://code.djangoproject.com/ticket/29877),za,None,2018-10-23T09:20:22Z,2018-10-23T10:50:58Z
10545,Completed test coverage of views.static.directory_name().,"Improve `test_index_custom_template` and increase test coverage of [directory_index](https://github.com/django/django/blob/c53af5661313079d022553b6c775e6c4f8d34927/django/views/static.py#L83).

The 'test' directory added to `tests/view_tests/media/` for covering [this line](https://github.com/django/django/blob/c53af5661313079d022553b6c775e6c4f8d34927/django/views/static.py#L99).",hramezani,None,2018-10-21T21:18:19Z,2018-10-24T00:44:27Z
10544,Fixed #29847 -- Fixed window function test failures with MySQL 8.,"Even though good databases tend to keep the result sorted by the/one
window expression and the planners are smart enough to not resort if not
required, it is not valid to rely on this.

MariaDB specifically did return whatever order it wanted, which is
completely okay. Now we sort towards the expected data for all databases.",apollo13,None,2018-10-21T18:45:10Z,2018-10-21T20:05:08Z
10543,Fixed a failing test when the source directory is on a readonly fs.,,apollo13,None,2018-10-21T17:05:53Z,2018-10-21T17:38:02Z
10542,"Remove ""encoding"" from gis tutorial.","It seems 388165ade4219aeefac1e231c1d44c51a7b62829 removed the ""encoding"" keyword from a code snippet, but the explanation of that keyword remained in the explanation below the snippet, which was confusing.",toolness,None,2018-10-21T15:26:29Z,2018-10-21T16:14:07Z
10541,Fixed #27595 -- Made ForeignKey.get_col() follow target chains.,"We were previously only following foreign relationships one level deep which
was preventing foreign keys to foreign keys from being resolved appropriately.

This was causing all sorts of weirdness such as improper database value
conversion for UUIDField on SQLite because the resolved expression's output
field's internal type was not correct.

Also added tests to make sure unlikely foreign reference cycles do not cause
recursion errors.

Refs [#24343](https://code.djangoproject.com/ticket/24343) ([PR](https://github.com/django/django/pull/4171))

Thanks oyooyo for the report and Wayne Merry for the investigation.

https://code.djangoproject.com/ticket/27595",charettes,None,2018-10-21T03:15:06Z,2018-10-22T14:48:07Z
10539, Fixed #29868 -- Retained database constraints on SQLite table rebuilds.,https://code.djangoproject.com/ticket/29868,charettes,None,2018-10-20T17:32:58Z,2018-10-30T03:19:09Z
10538,Added test case for related manager on FK to subclass model,"A test case for a problem with foreign keys on base concrete models that relate to subclass models. In this case the foreignkey is treated as a OneToOneField. 

The PR does not currently correct the problem.

If a related_name is set on the FK, it appears to correct the problem, even if the related_name is set to the same name as the default.",waynemerry,None,2018-10-19T23:01:33Z,2018-10-20T16:00:10Z
10537,Fixed #29721 -- Ensured migrations are applied and recorded atomically.,"cc @carltongibson 

Thanks @ubernostrum for helping during DjangoCon US sprints :)",CuriousLearner,None,2018-10-19T19:56:23Z,2018-10-25T01:39:49Z
10536,Fixed #29870 -- Added DurationField introspection for Oracle and PostgreSQL.,Ticket [29870](https://code.djangoproject.com/ticket/29870).,felixxm,None,2018-10-19T18:55:40Z,2018-10-21T07:08:31Z
10535,Fixed #29831 -- Added validation for makemigrations --name.," Custom migration name can only have alphabet, number and underscore.",nixphix,None,2018-10-19T14:08:26Z,2018-10-23T14:27:48Z
10534,Fixed #29835 -- Made RelatedFieldListFilter respect ModelAdmin.ordering.,Fix for [ticket 29835](https://code.djangoproject.com/ticket/29835).,hramezani,None,2018-10-19T13:45:16Z,2018-11-14T19:58:28Z
10533,Fixed template name in {% include %} exception silencing deprecation warning.,"The deprecation warning pretty much always prints ""unknown"", unless you're really unlucky and you have a context variable 'template_name', then you'll get something that is actively lying to you.",boxed,None,2018-10-19T06:57:08Z,2018-11-14T19:40:12Z
10532,Fix MONTH_DAY_FORMAT in Italian localization,"The commented format implies that the formatted string will look like `10/2006`, but the actual result is `25/Ottobre`.

The `/` looks out of place and is inconsistent with the other languages.

For example:
- in Spanish: `25 de Octubre`
- in French: `25 octobre`

So for consistency I believe Italian should look like this: `25 Ottobre`.

Previous format: `j/F`

New format: `j F`",db0company,None,2018-10-19T06:50:37Z,2018-10-20T09:09:42Z
10531,Fixed #12952 -- Made admin's model history change messages use form labels instead of field names.,"cc @carltongibson 


PS: Special Thanks to @andrewgodwin helping in resolving the issue around serializing the gettext versioned proxy objects during DjangoCon US sprints :)",CuriousLearner,None,2018-10-19T00:29:39Z,2019-06-14T18:32:58Z
10530,Fixed #29317 -- Clarified filter argument in PostgreSQL aggregate functions.,"First time contributor at DjangoCon US 2018 making a documentation change per [Issue #29317](https://code.djangoproject.com/ticket/29317#comment:6).

The discussion in that ticket thread indicated the best fix to the confusion in the existing documentation was to add this note with this link.",shalgrim,None,2018-10-18T23:46:17Z,2018-11-27T21:26:51Z
10529,Fixed #29858 -- Clarified docs regarding CSRF token header name.,https://code.djangoproject.com/ticket/29858,timgraham,None,2018-10-18T23:45:03Z,2018-10-19T23:39:48Z
10528,Fixed #29866 -- Fixed tests tear down if a system check error happens.,"Added a try except around run_checks to catch SystemCheckError so
teardown functions can be run before reraising.",jayden-arrai,None,2018-10-18T23:13:26Z,2018-10-31T15:41:10Z
10527,Fixed #29862 -- Added Volume and Weight classes to the measurements module.,https://code.djangoproject.com/ticket/29862,superDross,None,2018-10-18T21:04:08Z,2018-10-19T23:32:05Z
10526,Fixed #29830 -- Fixed loss of custom utf-8 body encoding in mails.,"When setting the encoding of a EmailMessage to Python’s email.charset.Charset the body encoding (e.g. quoted printable or base64) in the final mail was overwritten in some cases.

See the [trac ticket](https://code.djangoproject.com/ticket/29830).

Can I add documentation for this, where would this be? Or is there? This is my first contribution.",jannschu,None,2018-10-18T01:55:34Z,2018-10-23T18:28:21Z
10525,Update example Jinja2 static tag,"This change updates [the example provided](https://docs.djangoproject.com/en/2.1/topics/templates/#django.template.backends.jinja2.Jinja2) to expose `static` to the Jinja2 template engine's context.

As of e.g. [#21221](https://code.djangoproject.com/ticket/21221) the use of `django.templatetags.static.static` now seems to be the canonical way to invoke the static tag. Additionally this change makes it so the example will work when the staticfiles app isn't loaded, by prepending the path with `settings.STATIC_URL` as in https://github.com/django/django/blob/master/django/templatetags/static.py#L119.

Updated docs when rendered locally:

<img width=""684"" alt=""image"" src=""https://user-images.githubusercontent.com/654645/47123269-778ce200-d248-11e8-92c7-3d8beec57731.png"">",chosak,None,2018-10-18T00:10:31Z,2018-10-19T13:38:52Z
10524,Fixed #29774 -- Fixed django-admin shell hang on startup.,"sys.stdin.read() blocks waiting for EOF in shell.py, which will
likely never come if the user provides input on stdin via
keyboard before the shell starts. Added check for a tty, and
skip reading stdin if it's not present.

This still allows piping of code into the shell (which should
have no TTY and should have an EOF), but also doesn't cause it
to hang if multi-line input is provided.",adamwallred,None,2018-10-18T00:03:37Z,2018-10-20T00:51:19Z
10523,Fixed #29861 -- Made TimeField use auto_now/auto_now_add use timezone.now().,Ticket https://code.djangoproject.com/ticket/29861,italomg,None,2018-10-17T15:53:30Z,2018-10-17T16:08:52Z
10522,Fixed #29860 -- Allowed BaseValidator to accept a callable limit_value.,https://code.djangoproject.com/ticket/29860 ,kingbuzzman,None,2018-10-17T15:00:27Z,2019-04-04T09:02:01Z
10521,Adds the ability to pass a callable to BaseValidator,,kingbuzzman,None,2018-10-17T14:53:43Z,2018-10-17T15:01:09Z
10520,Remove outdated bad URL references,"Pretty much all web frameworks do this now, and comparing Django to old-fashioned alternatives is confusing to new developers - see https://www.reddit.com/r/django/comments/9oyntn/a_question_about_something_trivial_in_the_django/",tomdyson,None,2018-10-17T13:56:17Z,2018-10-17T14:20:19Z
10519,WIP Fixed #29843 -- Manage contenttypes and permissions using migration operations,"# Context

ticket: [#29843](https://code.djangoproject.com/ticket/29843)
mailing list: [Content types shouldn't be created on post_migrate signal](https://groups.google.com/forum/#!topic/django-developers/HDKVHrmSMdE/discussion)

related ticket for permissions: [#27489](https://code.djangoproject.com/ticket/27489)
and pull request: https://github.com/django/django/pull/7673

# Approach

- [x] `django.contrib.contenttypes`
  - [x] Use `pre_write_migration` signal instead of `post_migrate`
    - [x] Insert Create operation if `CreateModel`
    - [x] Insert Delete operation if `DeleteModel`
    - [x] Insert Rename operation if `RenameModel`
    - [x] Add latest `django.contrib.contenttypes` migration to the dependencies
  - [x] Update `post_migrate` handler to only create content types if `0001_initial` is part of the plan
- [ ] `django.contrib.auth`
  - [ ] Use `post_contenttypes_insert_operation` signal instead of `post_migrate`
    - [ ] Insert Create operation(s) if `CreateModel`
    - [ ] Insert Delete operation(s) if `DeleteModel`
    - [ ] Insert Rename operation(s) if `RenameModel`
    - [ ] Add latest `django.contrib.contenttypes` migration to the dependencies
   - [ ] Use `pre_write_migration` for alter options
    - [ ] Insert operation(s) based on `AlterModelOptions`
    - [ ] Add latest `django.contrib.contenttypes` migration to the dependencies
  - [ ] Update `post_migrate` handler to only create permissions if `0001_initial` is part of the plan

# Tests

## Scenario ideas

### Mixed bag

1. Blank app with no models nor migrations but `django.contrib.auth` and `django.contrib.contenttypes` as part of the settings
2. Add one model
3. Add one proxy model
4. Add one abstract model
5. Delete one model
6. Delete one proxy model
7. Delete one abstract model
8. Rename one model
9. Rename one proxy model
10. Rename one abstract model
11. Update default permissions for a model
12. Update permissions for a model
13. Update default permissions for a proxy model
14. Update permissions for a proxy model

### Adding contrib later in settings
1. Start without `django.contrib.auth` and `django.contrib.contenttypes` in the settings
2. Add model(s)
3. Makemigrations and migrate
4. Add `django.contrib.auth` and `django.contrib.contenttypes` to the settings
5. Migrate

### Remove `django.contrib.auth` and `django.contrib.contenttypes` from the settings
1. Add model
2. Makemigrations
3. Remove django.contrib.auth` and `django.contrib.contenttypes` from the settings
4. Migrate

### Test matching the ticket's description for permissions in `RunPython`

### Test matching the email thread about the contenttypes",arthurio,None,2018-10-17T05:10:01Z,2018-10-20T23:31:05Z
10518,Added a paragraph in docs/intro/contributing.txt.,"Here, a paragraph is required for clarity as the following command is an important part of installation and it is not clear that it is a major step if the install Django phrase is the last sentence of previous (unrelated) paragraph.",cgl,None,2018-10-16T19:44:23Z,2018-10-16T20:10:45Z
10517,Fixed #29138 -- Add ModelAdmin.autocomplete_fields support for ForeignKeys that use to_field,"Bug fix for [29138](https://code.djangoproject.com/ticket/29138); creating [PR as requested](https://code.djangoproject.com/ticket/29138#comment:10).

NOTE: one of the unit tests doesn't pass due to a DisallowedModelAdminToField error being raised; I'm not sure how to resolve this issue as I'm not familiar with `to_field_allowed`

For reference, I originally submitted this fix based on `stable/2.1.x` (see [10494](https://github.com/django/django/pull/10494)); changing the base to `master` caused too many conflicts so I'm resubmitting a new one.",ConstantinoSchillebeeckx,None,2018-10-16T18:50:36Z,2018-10-16T20:20:31Z
10516,Fixed #29852 -- Prevented infinite migrations when using SimpleLazyObject in field arguments.,Reference: https://code.djangoproject.com/ticket/29852,kingbuzzman,None,2018-10-16T14:52:00Z,2018-10-17T14:16:16Z
10515,Refs #23919 -- Removed a stray object-inheritance,,atombrella,None,2018-10-16T12:27:25Z,2018-10-16T17:39:49Z
10514,edit,,samedhaa,None,2018-10-15T20:34:35Z,2018-10-15T20:46:20Z
10513,Refs #27829 -- Warn on settings.DEFAULT_CONTENT_TYPE usage.,https://code.djangoproject.com/ticket/27829,jdufresne,None,2018-10-15T18:57:35Z,2018-11-09T13:50:48Z
10512,Fixed #29324 -- Made Settings raise ImproperlyConfigured if SECRET_KEY is accessed but not set.,https://code.djangoproject.com/ticket/29324,jdufresne,None,2018-10-14T18:08:17Z,2018-11-09T13:50:40Z
10511,Fixed #29845 -- Fixed Cast crash on MySQL when casting to DecimalField.,Ticket [29845](https://code.djangoproject.com/ticket/).,felixxm,None,2018-10-14T13:30:53Z,2018-10-15T13:58:04Z
10510,"Fix small typo, 1 arguments -> 1 argument",,taoufik07,None,2018-10-14T03:06:48Z,2018-10-14T15:20:23Z
10509,Removed unused fields from aggregation docs,,inglesp,None,2018-10-13T22:02:57Z,2018-10-14T02:47:16Z
10508,Fixed various comments in django/db/backends/oracle/base.py.,,felixxm,None,2018-10-13T13:08:26Z,2018-10-13T18:39:03Z
10507,Simplified django.utils.html.urlize().,Extracted from https://github.com/django/django/pull/10495.,timgraham,None,2018-10-12T15:51:32Z,2018-10-12T16:15:45Z
10506,Fixed #29825 -- Fixed JavaScript ngettext if msgstr is a valid msgid in the same catalog.,"Per request in https://code.djangoproject.com/ticket/29825 created a unit test that produces a similar issue to the one identified in the bug, however there is a key difference I've not resolved yet...

When the problem happens in OpenStack/Horizon, only the *1st* character of the msgstr is returned
With the unit test here, only the *2nd* character of the msgstr is returned... still a bug and likely due to the same issue, but its not an identical reproduction. 

I will continue to look at this a bit, but wanted to get a similar example uploaded somewhere that could be referenced from the ticket comments

```./runtests.py --selenium=chrome view_tests
Testing against Django installed in 'upstream/django/django' with up to 24 processes
Creating test database for alias 'default'...
Creating test database for alias 'other'...
System check identified no issues (0 silenced).
F.
======================================================================
FAIL: test_javascript_gettext (view_tests.tests.test_i18n.I18nSeleniumTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/jeremy/upstream/django/django/test/utils.py"", line 371, in inner
    return func(*args, **kwargs)
  File ""/home/jeremy/upstream/django/tests/view_tests/tests/test_i18n.py"", line 432, in test_javascript_gettext
    self.assertEqual(elem.text, ""Image"")
AssertionError: 'm' != 'Image'
- m
+ Image
```",jeremy-moffitt,None,2018-10-11T22:45:19Z,2019-01-28T17:32:38Z
10505,Refs #29826 -- Removed unused characters from urlize configuration.,"The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs [#29826](https://code.djangoproject.com/ticket/29826)).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.

Regression test in a separate commit shows existing behavior remains unchanged.",timgraham,None,2018-10-11T14:55:10Z,2018-10-12T12:14:26Z
10504,Fixed #29814 -- Added support for NoneType serialization in migrations.,"Added an exception to the TypeSerializer used when serializing values
for migrations in order to correct the previously problematic case of
serializing NoneType. NoneType can not be referenced using its name,
which it was previously. To properly reference the type, the type
function must be used, which produces the usage ""type(None)"".

https://code.djangoproject.com/ticket/29814",patriksletmo,None,2018-10-11T12:09:50Z,2018-10-11T13:22:49Z
10503,Improved deployment checklist documentation on customizing error views,Link to the 'customizing error views' section and use some more obvious language.,adamchainz,None,2018-10-11T11:47:34Z,2018-10-11T15:46:24Z
10502,Fixed #29838 -- Fixed crash when combining Q objects with __in lookups and lists.,Ticket https://code.djangoproject.com/ticket/29838#ticket,aspalding,None,2018-10-10T21:38:55Z,2018-10-17T15:55:20Z
10501,Add a gc.collect() to make GDALBandTests.test_band_data more deterministic,"I noticed some failures here as it relies on the garbage collector triggering and collecting `self.band` before the `self.assertTrue()` is ran. (At least, that's what I *think* is happening?)

I'm not sure the best way to work around this, so I added a `gc.collect()` to ensure that a garbage collection is ran (and the objects `__del__` is called).",orf,None,2018-10-10T21:12:06Z,2018-10-12T21:06:44Z
10500,Fixed #29836 -- Bumped required cx_Oracle to 6.0.,Ticket [29836](https://code.djangoproject.com/ticket/29836).,felixxm,None,2018-10-10T20:26:42Z,2018-10-11T09:43:56Z
10499,Fixed #29832 -- Updated Roboto font to v2.137.,"WOFF files pulled from Google Fonts using
https://github.com/majodev/google-webfonts-helper (select all charsets)
https://code.djangoproject.com/ticket/29832",veryhappythings,None,2018-10-10T16:02:51Z,2018-10-19T15:23:13Z
10498,Fixed #29697 -- Changed Query.trim_start for avoid removing the aux tables,Ticket: [#29697](https://code.djangoproject.com/ticket/29697),cansarigol,None,2018-10-10T09:51:43Z,2019-03-29T22:53:32Z
10497,"Fixed ""SyntaxError: Generator expression must be parenthesized"" on Python 3.7","Fixed ""SyntaxError: Generator expression must be parenthesized"" on Python 3.7",ramwin,None,2018-10-10T07:10:17Z,2018-10-15T07:22:52Z
10496,Change language style on 'Congrats' page for new installation.,"The new 'Congrats' page introduced in 2.0 uses the phrase ""_The install worked successfully! Congratulations!_"". This is a jargonistic use of the word _install_ to refer to the installation process. In most English contexts, _install_ is a verb, and the corresponding noun would be _installation_, but in the software industry the jargon of install-as-a-noun does seem to be widespread.

Dictionaries reflect this usage (e.g. [Wiktionary](https://en.wiktionary.org/wiki/install#Noun), adding the context label 'computing'), but dictionaries are just a record of how words are used, not how we would like our use of language to reflect on us. For this we need a style guide. Django doesn't have a language style guide, just one for coding style. The Guardian (I'm UK-based) Style Guide doesn't have a relevant entry for _install_ vs _installation_. I turned to manuals of style for the software industry:

> **install** You install items on a disk, not onto a disk. Don’t use install as a noun.
> — Apple Style Guide, https://help.apple.com/applestyleguide/#/apsg346ef241?sub=apdcec819bd1bd14

> Don't use install as a noun. Use installation instead.
> — Microsoft Writing Style Guide https://docs.microsoft.com/en-gb/style-guide/a-z-word-list-term-collections/i/install

There's even inconsistency in the PR that updated the 'Congrats' page. The [first commit](https://github.com/django/django/pull/8823/commits/ca0ad2f457c3a2b56ed189e1f923c7c166842e1e) in PR #8823 adds the lines

>     <meta name=""description"" content=""Congratulations! Your Django installation worked! Django is the web framework for perfectionists with deadlines."">
> — line 7

>     <h2>The install worked successfully! Congratulations!</h2>
> —line 43

The PR is titled:

> Updated the design of the 'Congrats' page for first time Django _installs_.
> — PR #8823 message

but the first commit in it has a message beginning

> A new 'Congrats' page for first time Django _installation_…
> — https://github.com/django/django/pull/8823/commits/ca0ad2f457c3a2b56ed189e1f923c7c166842e1e

Which is preferred in Django's case is probably not up to me to decide, but since this is the first thing many users will see, it's important that the way the project presents itself is considered and reasoned, rather than down to the circumstance of whichever variant was used for that particular line. I.e. use the jargon if you like, but be prepared to justify it, and if we can't, then use the more appropriate common English word.

(My own point of view is that using _install_ instead of the existing word _installation_, and the similarly-strange _amends_ (which is a noun, but has its own, quite different, meaning) instead of _amendments_ are lazy slang terms, and do not reflect well upon the user. I admit that my position is strongly opinionated.)",nimasmi,None,2018-10-09T10:21:26Z,2018-10-12T21:37:54Z
10495,Fixed #29826 -- Made urlize handle HTML angle brackets.,"This also incidentally simplifies the handling of the trail.
http://code.djangoproject.com/ticket/29826",duck-rh,None,2018-10-09T09:50:14Z,2018-10-13T12:42:19Z
10494,Fixed #29138 -- Added ModelAdmin.autocomplete_fields support for ForeignKeys that use to_field.,"Bug fix for [29138](https://code.djangoproject.com/ticket/29138); creating [PR as requested](https://code.djangoproject.com/ticket/29138#comment:10).

> **Note** I've been able to update all unit tests and create some new ones, however I haven't been able to leverage `to_field_allowed` to prevent data leaks. I've tried to implement it (see ​here), however I can't get it to play nicely with the unit tests. When uncommented, the `id_field` isn't properly being considered as to_field_allowed. I'm not familiar with this function, so could use some help troubleshooting.",ConstantinoSchillebeeckx,None,2018-10-08T18:41:52Z,2019-10-30T10:58:47Z
10493,Simplified handling of DurationField values on MySQL/MariaDB.,,sir-sigurd,None,2018-10-08T10:55:51Z,2018-10-09T14:43:09Z
10492,Completed FixedOffset test coverage.,Improve timezone utils test coverage.,hramezani,None,2018-10-07T16:45:14Z,2018-10-10T00:32:09Z
10491,Fixed postgres_tests.test_signals.OIDTests to run in isolation.,"Fixes failures:

```
======================================================================
FAIL: test_citext_cache (postgres_tests.test_signals.OIDTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "".../django/tests/postgres_tests/test_signals.py"", line 26, in test_citext_cache
    get_citext_oids(connection.alias)
  File "".../django/django/test/testcases.py"", line 82, in __exit__
    '%d. %s' % (i, query['sql']) for i, query in enumerate(self.captured_queries, start=1)
AssertionError: 1 != 0 : 1 queries executed, 0 expected
Captured queries were:
1. SELECT typarray FROM pg_type WHERE typname = 'citext'

======================================================================
FAIL: test_hstore_cache (postgres_tests.test_signals.OIDTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "".../django/tests/postgres_tests/test_signals.py"", line 22, in test_hstore_cache
    get_hstore_oids(connection.alias)
  File "".../django/django/test/testcases.py"", line 82, in __exit__
    '%d. %s' % (i, query['sql']) for i, query in enumerate(self.captured_queries, start=1)
AssertionError: 1 != 0 : 1 queries executed, 0 expected
Captured queries were:
1. SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'
```",jdufresne,None,2018-10-07T16:23:15Z,2018-11-09T13:50:54Z
10490,Simplified kwargs.pop() pattern to use keyword only arguments.,,jdufresne,None,2018-10-07T15:53:43Z,2018-10-08T19:12:34Z
10489,Refs #27795 -- Removed force_text() usage in db/models/sql/query.py.,SELECT entries should be strings or coercable to a string.,jdufresne,None,2018-10-06T17:51:57Z,2018-10-08T19:00:38Z
10488,Fixed #29829 -- Remove extra if block from `_simple_domain_name_validator`,[ticket_29829](https://code.djangoproject.com/ticket/29829),hramezani,None,2018-10-06T16:14:48Z,2018-10-10T00:50:01Z
10487,Refs #27795 -- Removed force_bytes usage from django/utils/http.py.,"`django.utils.http.urlsafe_base64_encode()` now returns a string, not a bytestring. As the docstring states, ""Encode a bytestring in base64 for use in URLs"". As URLs are represented as strings,
`urlsafe_base64_encode()` should return a string. All uses were immediately decoding the bytestring to a string anyway.

As the inverse operation, urlsafe_base64_decode() accepts a string.

---

These utility functions are documented. If you think this should go through a deprecation period, let me know and I can rework the patch to warn on use.",jdufresne,None,2018-10-06T15:43:43Z,2018-11-09T13:51:08Z
10486,Fixed #29738 -- Changed serializer_factory so that unserializable values can be migrated,I've changed my forked project branch as ticket_29738,cansarigol,None,2018-10-06T15:24:01Z,2018-11-17T15:12:40Z
10485,Emphasized that ForeignKey.on_delete doesn't create a SQL constraint.,Update fields.txt to focus on behaviour of on_delete. It could pass unnoticed.,rabbagliettiandrea,None,2018-10-06T00:27:29Z,2018-10-10T18:56:51Z
10484,Fixed #27147 -- Added bounds parameter to postgres range fields.,https://code.djangoproject.com/ticket/27147,jdufresne,None,2018-10-05T23:53:13Z,2019-01-25T02:27:03Z
10483,"Capitalized proper noun ""Python""",,jdufresne,None,2018-10-05T21:50:53Z,2018-11-09T13:51:08Z
10482,Attic/full history,PUlling,smurdock1,None,2018-10-05T02:09:42Z,2019-11-08T11:03:35Z
10481,Reused @skip(If|Unless)DBFeature throughout tests.,,jdufresne,None,2018-10-04T13:31:19Z,2018-10-05T01:02:23Z
10480,"Refs #27778 -- Removed ""The database API"" section from ""Unicode data"" docs.",Support for passing bytestrings to the database API has been removed in: 301de774c21d055e9e5a7073e5bffdb52bc71079.,jdufresne,None,2018-10-04T12:20:09Z,2018-10-05T01:02:28Z
10479,Removed unnecessary @skipUnless in HTTPSitemapTests,The app `django.contrib.sites` is always included in `INSTALLED_APPS` by the base class `SitemapTestsBase`.,jdufresne,None,2018-10-04T11:52:52Z,2018-10-05T01:02:35Z
10478,Fixed #29824 -- Added support for database exclusion constraints on PostgreSQL.,"It should be cleaned up, but here's a good first take on adding the exclude using constraint to `django.contrib.postgres`. Essentially, it's a way to enforce a unique constraint for a range, whether they're represented as a range-type, or using two fields.

https://gist.github.com/fphilipe/0a2a3d50a9f3834683bf uses two fields, and overlaps with the documentation example where cars are used to illustrate how it works.

I was lucky that `RemoveConstraint` works, as the constraint can also be removed using `DROP INDEX ...`.
https://code.djangoproject.com/ticket/29824

- [x] Introduce a way to write operators and boundaries with constants. Locally, I have something for this.
- [x] Demonstrate how to use the constraint for models that use two fields instead of a range-field
- ~~Maybe write some tests for abstract models. There's #11279 that's a necessity for this~~. ",atombrella,None,2018-10-04T09:58:52Z,2019-07-16T19:29:43Z
10477,Simplified utils.text.StreamingBuffer.,,sir-sigurd,None,2018-10-04T07:58:54Z,2018-10-04T12:31:47Z
10476,Fixed #27801 -- SUPERUSER_PASSWORD in createsuperuser,"Fix createsuperuser --no-input automation of superuser creation by reading the 
SUPERUSER_PASSWORD environment variable.",jpic,None,2018-10-04T01:18:59Z,2018-11-18T12:58:25Z
10475,Fixed #29775 -- Fixed URL converters in a nested namespaced path.,"When using an include() without namespaces of some urlpatterns
that do have an include() with namespace, the converters of the
parent include() weren't being used to convert the arguments
of reverse(). 

https://code.djangoproject.com/ticket/29775",ericbrandwein,None,2018-10-03T19:42:31Z,2018-10-04T16:06:01Z
10474,Fixed #29820 -- Removed the dummy template backend.,"The backend is undocumented. The backend is unused except for testing multiple backend scenarios. For those testing purposes, can use the Jinja2 template engine as a 2nd engine.

https://code.djangoproject.com/ticket/29820",jdufresne,None,2018-10-03T13:32:35Z,2018-11-09T13:51:03Z
10473,Removed Jinja2 dependency from admin_checks tests.,,jdufresne,None,2018-10-03T13:19:47Z,2018-10-05T01:02:42Z
10472,Fixed #29817 -- Deprecated settings.FILE_CHARSET.,https://code.djangoproject.com/ticket/29817,jdufresne,None,2018-10-03T04:56:39Z,2018-11-09T13:50:50Z
10471,Corrected docs to say that all templates are text strings.,Support for bytestring templates was removed in 3a148f958dddd97c1379081118c30fbede6b6bc4.,jdufresne,None,2018-10-03T04:03:05Z,2018-10-05T01:02:55Z
10470,Refs #27795 -- Removed force_bytes() usage in sessions.,"`SessionBase.decode()` is the inverse operation to `SessionBase.encode()`. As `SessionBase.encode()` always returns a string, `SessionBase.decode()` should always be passed a string argument. Fixed the file backend, which was the only backend still passing a bytestring.",jdufresne,None,2018-10-03T03:09:22Z,2018-10-05T01:03:03Z
10469,Refs #27795 -- Removed force_bytes() usage in MySQL backend.,"The mysqlclient cursor attribute `_last_executed` is always stored as bytes. Decode it.

TextField values are already type `str`. No need to decode.
",jdufresne,None,2018-10-03T01:45:43Z,2018-10-07T15:08:50Z
10468,Fixed #29827 -- Fixed reuse of existing test DBs with --keepdb on MySQL.,https://code.djangoproject.com/ticket/29827,sir-sigurd,None,2018-10-02T17:13:51Z,2018-10-26T04:46:35Z
10467,use setdefault for django.utils.translation.trans_real,,waketzheng,None,2018-10-02T15:58:22Z,2018-10-02T16:31:38Z
10466,Removed docs for obsolete limitations of inspectdb.,,timgraham,None,2018-10-02T15:21:06Z,2018-10-02T17:29:42Z
10465,Fixed ResourceWarning in MySQL's _clone_test_db().,"Starting with Python 3.6, the Popen destructor emits a `ResourceWarning` warning if the child process is still running.

https://docs.python.org/library/subprocess.html#popen-constructor

> Changed in version 3.6: `Popen` destructor now emits a `ResourceWarning` warning if the child process is still running.

Use the `Popen` context manager (available since Python 3.2) to ensure the subprocess is waited for.

Fixes warning of the form:

```
  /usr/lib64/python3.7/subprocess.py:839: ResourceWarning: subprocess ... is still running
```",jdufresne,None,2018-10-02T13:08:57Z,2018-10-02T14:58:49Z
10464,Refs #27795 -- Removed force_bytes() usage in admindocs.,The `source_path` in docutils can be a string. It represents either a repr like description of the source or a path to the file on disk of the source.,jdufresne,None,2018-10-02T12:55:18Z,2018-10-02T14:58:52Z
10463,Fixed #29813 -- Fixed DB operation tests to be able to run in isolation with MySQL backend.,"Checking the `supports_over_clause` requires querying the database to check if the server is MariaDB or MySQL. Therefore, can't use `SimpleTestCase`.

https://code.djangoproject.com/ticket/29813",jdufresne,None,2018-10-02T05:28:08Z,2018-10-02T12:52:41Z
10462,Simplified contrib.admin.utils.unquote().,,sir-sigurd,None,2018-10-02T04:54:32Z,2018-10-02T20:00:08Z
10461,Simplified admin.utils.quote().,,sir-sigurd,None,2018-09-30T17:03:40Z,2018-10-01T14:33:05Z
10460, Added tests for using bytearray with BinaryField and corrected docs.,,jdufresne,None,2018-09-29T17:53:56Z,2018-10-02T14:58:59Z
10459,[2.1.x] Updated translations from Transifex,,claudep,None,2018-09-29T14:04:01Z,2018-09-29T15:02:54Z
10458,Updated naturaltime translation test.,"Upcoming German translations will not differ for past and future naturaltime
translations. Using Czech language instead.",claudep,None,2018-09-29T10:13:15Z,2018-09-29T13:57:50Z
10457,Fixed #29804 -- Added 'did you mean' suggestions for unsupported lookup error.,"Modified the error message associated with FieldError so that when it
is raised because of an unsupported lookup, the error message may
suggest possible typographically similar alternatives.",Ubadub,None,2018-09-29T08:17:20Z,2018-10-03T18:04:46Z
10456,Fixed #29804 -- Added helpful 'did you mean' suggestions for FieldError,"Modified the error message associated with FieldError so that when it
is raised because of an unsupported lookup, the error message may
suggest possible typographically similar alternatives.",Ubadub,None,2018-09-29T08:14:38Z,2018-09-29T08:18:21Z
10455,Fixed #29804 -- Added helpful 'did you mean' suggestions for FieldError,"When FieldError is raised because of an unsupported lookup, the error
message may suggest possible typographically similar alternatives.",Ubadub,None,2018-09-29T07:29:38Z,2018-09-29T08:12:41Z
10453,Tested showmigrations with apps without migrations.,,timgraham,None,2018-09-28T00:26:39Z,2018-09-28T13:56:44Z
10452,Add header block,It is useful to customize header.,Alick09,None,2018-09-27T18:47:57Z,2019-04-08T10:28:11Z
10451,Fixed error message in loaddata when uncompressed fixture has dot in name.,,sir-sigurd,None,2018-09-26T18:37:58Z,2018-09-26T19:36:18Z
10450,Added test to filter on a BinaryField.,,jdufresne,None,2018-09-26T16:56:41Z,2018-09-26T18:48:39Z
10449,Fixed #29683 -- Added view permission to docs.,"Despite listing all 4 default permissions later in this section of the
docs, there was still an outdated sentence that did not account for the
recently-added view permission.

I've updated that sentence to reflect the change.",StephenOrJames,None,2018-09-26T14:39:16Z,2018-09-26T19:06:43Z
10448,Fixed #21171 -- Avoided starting a transaction when a single (or atomic queries) are executed.,"Avoid starting a transaction when only a single (or atomic queries) are executed.

I have checked the following locations:

 * `Model.save`: If there are parents involved take the safe way and use
   transactions since this should be an all or nothing operation.

   If we have no parents:

    * Signals are executed before and after the previous existing
      transaction -- they have never been part of the transaction.

    * if `force_insert` is set then only one query is executed -> atomic
      by definition and no transaction needed.

    * same applies to `force_update`.

    * If a primary key is set and no `force_*` is set Django will try an
      UPDATE and if that returns zero rows it tries an INSERT. The first
      case is completly save (single query). In the second case a
      transaction should not produce different results since the update
      query is basically a no-op then (might miss something though).

 * `QuerySet.update`: no signals issued, single query -> no transaction
    needed.

 * `Model/Collector.delete`: This one is fun due to the fact that is
    does many things at once.

    Most importantly though: It does send signals as part of the
    transaction, so for maximum backwards compatibility we need to be
    conservative.

    To ensure maximum compatibility the transaction here is removed if
    and only if the following holds true:

     * We are deleting a single instance.
     * There are no signal handlers attached to that instance.
     * There are no deletions/updates to cascade.
     * There are no parents which also need deletion.",apollo13,None,2018-09-26T12:05:00Z,2020-05-26T21:21:21Z
10447,"Fixed #29795 -- Confirmed support for PostGIS 2.5, dropped support for 2.1, 2.2.",https://code.djangoproject.com/ticket/29795,sir-sigurd,None,2018-09-26T12:04:52Z,2018-09-26T18:58:05Z
10446,Refs #28909 -- Simplifed code using unpacking generalizations.,https://code.djangoproject.com/ticket/28909,sir-sigurd,None,2018-09-26T11:03:17Z,2018-09-28T14:01:18Z
10445,Refs #27795 -- Removed force_bytes() usage in contrib/auth/handlers/modwsgi.py.,`Group.name` is a `CharField`. Can safely assume it is a text string.,jdufresne,None,2018-09-26T04:45:50Z,2018-10-02T14:59:05Z
10444,Refs #27795 -- Moved duplicate code to utility function.,Removed `force_bytes()` usage in `db/models/indexes.py`. Database tables and columns are represented as text values.,jdufresne,None,2018-09-26T03:51:18Z,2018-10-02T14:59:12Z
10443,Fixed #29782 -- Added better error message when filtering users with AnonymousUser,,ramonsaraiva,None,2018-09-25T21:19:56Z,2018-09-26T19:59:50Z
10442,Made DatabaseWrapper.oracle_version() return a full version tuple.,Due to the [comment](https://github.com/django/django/pull/10421#discussion_r220321997).,felixxm,None,2018-09-25T19:53:40Z,2018-09-26T06:51:54Z
10441,Fixed #29796 -- Added system check for STATICFILES_DIRS prefix ending with a slash.,https://code.djangoproject.com/ticket/29796,pkol,None,2018-09-25T17:19:37Z,2018-09-27T23:49:37Z
10440,"Normalized spelling of ""lowercase"" and ""lowercased"" to one word.",Spawned from #10414.,jdufresne,None,2018-09-25T12:29:26Z,2018-10-02T14:59:25Z
10439,Simplified AdminFieldExtractionMixin.get_admin_form_fields().,,sir-sigurd,None,2018-09-25T06:50:14Z,2018-09-26T12:32:33Z
10438,Removed unneeded list() calls prior to extending the list.,,sir-sigurd,None,2018-09-25T05:03:57Z,2018-09-25T15:52:08Z
10437,Extended a hook for adding extra fields to formset forms,Extended a hook for adding extra fields on to each form instance. Now it's possible to redefine extra fields within the form.,borysvorona,None,2018-09-24T23:35:28Z,2018-10-30T22:37:45Z
10436,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,,apoorvpatne10,None,2018-09-24T17:18:18Z,2018-09-25T12:55:00Z
10435,Fixed #22125 - Don't create extraneous index on autocreated through models,This patch is based on all the suggestions in https://code.djangoproject.com/ticket/22125.,tuffnatty,None,2018-09-24T11:18:23Z,2020-07-02T10:46:21Z
10434,added unique to emails. A user to an email,Emails should be unique for each user,elseagle,None,2018-09-24T11:07:00Z,2018-09-25T15:08:55Z
10433,Refs #27795 -- Removed force_bytes() usage in db/backends/base/schema.py.,Args passed to `BaseDatabaseSchemaEditor._digest()` are always type `str` (e.g. table name and columns).,jdufresne,None,2018-09-23T21:37:33Z,2018-10-02T14:59:31Z
10432,Refs #27795 -- Removed force_bytes() usage in contrib/auth/forms.py.,"Primary key values can be of different types, so first coerce to string then encode to bytes.",jdufresne,None,2018-09-23T16:46:06Z,2019-02-26T12:27:51Z
10431,Refs #27795 -- Removed force_bytes() usage in db/backends/utils.py.,It is safe for `truncate_name()` to assume the passed SQL identifier is always represented as a text string.,jdufresne,None,2018-09-23T03:38:50Z,2018-10-02T14:59:49Z
10430,Refs #29784 -- Switched to https:// links where available.,"Changed Python f-string link to use intersphinx.

Normalized docs.python.org URLs to omit the version.

https://code.djangoproject.com/ticket/29784",jdufresne,None,2018-09-23T01:35:46Z,2018-10-02T15:00:13Z
10429,Refs #27795 -- Removed force_bytes() usage in utils/_os.py.,Filesystem paths are expected to be passed as text strings.,jdufresne,None,2018-09-22T21:24:54Z,2018-10-02T15:00:22Z
10428,Refs #27795 -- Removed force_bytes() usage in contrib/staticfiles/storage.py.,https://code.djangoproject.com/ticket/27795,jdufresne,None,2018-09-22T18:59:53Z,2018-10-05T14:38:29Z
10427,Fixed #29750 -- Added View.setup() hook.,"Allows encapsulating logic in View mixins for reuse in child classes.

The standard request processing cycle is:

1. Concrete view
2. Mixins
3. Generic view

Before `init()`, it was not possible to reuse self attributes set in parent views and mixins from the concrete view, because calling the parent method generates a `HttpResponse`.

https://code.djangoproject.com/ticket/29750",francoisfreitag,None,2018-09-22T17:54:39Z,2018-12-26T10:03:35Z
10426, Fixed #29783 -- Added app label validation to showmigrations command,https://code.djangoproject.com/ticket/29783,cupjoo,None,2018-09-22T14:12:29Z,2018-10-31T00:19:51Z
10425,Clarified when QuerySet.select_for_update() locks.,Pretty sure that that's not clear to many people. At least for me and others it was not clear: https://stackoverflow.com/a/52455168/5005715,ovalseven8,None,2018-09-22T13:07:11Z,2018-10-03T19:35:45Z
10424,Fixed #29780 -- Remove User model reference and use UserModel instead in auth,Reference to ticket: https://code.djangoproject.com/ticket/29780,kingbuzzman,None,2018-09-21T15:44:52Z,2018-09-24T01:21:06Z
10423,Fixed German translation for incorrect login,"> Please enter %(username)s and password.

The translation of the above statement can confuse users to think that they failed to submit credentials at all whereas they just didn't enter correct ones.

A better variation IMHO would be the translation of the following statement:

> Please enter %(username) and valid password.",jnns,None,2018-09-21T08:40:42Z,2018-09-21T08:53:56Z
10422,command makemessages: emulate xgettext --directory option,Allow a user to specify a directory other than the current directory to search for translatable files.,terencehonles,None,2018-09-20T22:34:44Z,2018-12-05T21:00:33Z
10421,Fixed #29630 -- Fixed crash of sliced queries with multiple columns with the same name on Oracle 12.1.,"Ticket [29630](https://code.djangoproject.com/ticket/29630).

Regression in 0899d583bdb140910698d00d17f5f1abc8774b07.",felixxm,None,2018-09-20T17:47:38Z,2018-09-26T18:19:12Z
10420,Refs #29198 -- Fixed migrate --plan crash if RunSQL uses a list or tuple.,Also fixed test failures if sqlparse isn't installed.,timgraham,None,2018-09-19T19:31:57Z,2018-09-20T00:06:20Z
10419,Fixed #29772 -- Made LazyObject proxy __lt__() and __gt__().,Discussion: https://code.djangoproject.com/ticket/29772,kingbuzzman,None,2018-09-19T15:27:30Z,2018-09-19T17:56:02Z
10418,Fixed #28034 -- Updated the contributing tutorial to use an imaginary ticket.,Thanks Katy Berry for beta testing.,adamchainz,None,2018-09-19T14:36:20Z,2018-10-03T19:13:38Z
10417,Fixed #29778 -- Fixed quoting of unique index names.,"This change fixes regression introduced in PR #6643 - commit 3b429c96736b8328c40e5d77282b0d30de563c3c.
Now it is possible to create unqiue indexes for tables, whose names should be quoted.
This was supported in version 1.11 and should work according to documentation:
> If your database table name is an SQL reserved word, or contains characters that aren’t allowed in Python variable names – notably, the hyphen – that’s OK. Django quotes column and table names behind the scenes.

Regression test included.
",K0Te,None,2018-09-19T14:01:03Z,2018-09-25T20:00:20Z
10416,Fixed #29673 -- Reset URLconf at the end of request processing,"Fixes [ticket 29673](https://code.djangoproject.com/ticket/29673)

We attach a signal handler to request_finished, and reset the URLconf. Before this change, the URLconf is not reset until the start of the next request.",mthpower,None,2018-09-19T13:21:47Z,2018-10-03T09:07:17Z
10415,Fixed #29598 -- Deprecated FloatRangeField in favor of DecimalRangeField.,https://code.djangoproject.com/ticket/29598,StefanoChiodino,None,2018-09-19T13:07:45Z,2018-10-02T23:17:24Z
10414,Edited doc to remove fluff and snark,"I edited the doc to conform to the 80 character line rule. Also, copy editing on the text.
@Ian-Foote ",IgnatiusFlo,None,2018-09-19T13:06:12Z,2018-10-04T18:49:24Z
10413,Fixed #29773 -- Added words translated into korean at contrib.humanai…,"…ze.naturaltime()

https://code.djangoproject.com/ticket/29773#ticket",MyungSeKyo,None,2018-09-19T12:45:03Z,2018-09-19T12:53:11Z
10412,Added a test for `password_changed` with a custom validator,,WouldYouKindly,None,2018-09-19T11:04:43Z,2018-09-25T18:58:10Z
10411,Fixed #29758 -- Added documentation for custom error handling tests,@adamchainz ,cammil,None,2018-09-19T11:03:53Z,2018-10-01T22:35:18Z
10410,Updated contributing tutorial's virtual environment instructions.,"* `python -m venv` only works if you already use a venv, or are on a platform that violates https://www.python.org/dev/peps/pep-0394/
* you don't need to create the `~/.virtualenvs` dir - venv makes it for you
* `virtualenv` and `python3 -m venv` are two different tools that do different things in different ways: `curl -fSL https://docs.python.org/3/library/venv.html | grep virtualenv` using the term leads seems to lead some contributors to google for errors in `virtualenv` not `venv`
* ubuntu and debian have for a while patched venv so it documents how to get it working, document to follow those instructions rather than using virtualenv",graingert,None,2018-09-19T09:57:47Z,2018-09-19T19:05:31Z
10409,Refs #11964 -- Renamed a database check constraint test name.,,Ian-Foote,None,2018-09-19T08:59:08Z,2018-09-25T16:03:55Z
10408,Refs #11964 -- Changed CheckConstraint() signature to use keyword-only arguments.,"Using keyword only arguments follows the `Index.__init__` pattern signature to easen the addition of constraint options in the future.

Also renamed the `constraint` argument to `check` to better represent which part of the constraint the provided `Q` object represents.

This change will be particularily useful when we add partial constraint support because an additional `Q` object passing be required.
",Ian-Foote,None,2018-09-19T08:54:08Z,2018-10-02T15:16:30Z
10407, Refs #29641 -- Extracted reusable CheckConstraint logic into a base class.,,Ian-Foote,None,2018-09-19T08:50:50Z,2018-10-02T18:30:47Z
10406,Refs #29641 -- Refactored database schema constraint creation code.,"Add a test to ensure we set the constraint name correctly in the
database.

Update sqlite introspection to use sqlparse. This allows us to read the
actual constraint name for table check constraints and unique constraints.",Ian-Foote,None,2018-09-19T08:47:46Z,2019-02-24T11:06:25Z
10405,Fixed expressions tests when run in reverse.,Regression in e7a0a5c8b21f5ad1a0066bd0dfab84466b474e15.,felixxm,None,2018-09-18T18:39:14Z,2018-09-19T19:23:15Z
10404,Fixed #29768 -- Improved error message when an AppConfig has a typo in INSTALLED_APPS.,https://code.djangoproject.com/ticket/29768 ,knbk,None,2018-09-18T16:32:10Z,2018-09-26T21:10:13Z
10403,Fixed #29770 -- Added LinearRing.is_counterclockwise property.,https://code.djangoproject.com/ticket/29770,sir-sigurd,None,2018-09-18T13:30:28Z,2019-10-26T16:48:46Z
10402,Fixed #29767 -- Made date-related casts work on SQLite,,claudep,None,2018-09-18T12:02:22Z,2018-10-01T11:29:43Z
10401,Fixed typo,sitemaps should be sitemap in docs,philippeluickx,None,2018-09-18T10:33:27Z,2018-09-18T10:40:24Z
10400,Fixed #29765 -- MIDDLEWARE/INSTALLED_APPS order is important,,Windsooon,None,2018-09-18T05:44:22Z,2018-09-18T13:51:36Z
10399,Removed unused admin_url and root_path context variables in admindocs.,"Unused since 915ef79b08862680e82d6a772d6ead22735e9a2f and
aaf77c1676e44019abe544911ff7a06eb2690295.",timgraham,None,2018-09-17T19:39:29Z,2018-09-17T20:12:48Z
10398,[2.0.x] Added words to docs/spelling_wordlist for Ubuntu 18.04.,Backport of 8edb27b6c6d5d9e4f3ad95a91254588616854d16 from master,felixxm,None,2018-09-17T16:25:38Z,2018-09-17T17:00:28Z
10397,Simplified ListMixin.sort().,,sir-sigurd,None,2018-09-17T11:06:57Z,2018-09-17T15:07:17Z
10396,Fixed #29761 -- Confirmed support for PROJ 5.x.,https://code.djangoproject.com/ticket/29761,sir-sigurd,None,2018-09-17T05:42:55Z,2018-09-17T16:11:51Z
10395,[2.0.x] Refs #29759 -- Doc'd that cx_Oracle < 7 is required.,We should document that cx_Oracle < 7 is required for Django < 2.1.,felixxm,None,2018-09-16T19:39:27Z,2018-09-18T08:31:19Z
10394,Fixed #29738 -- Changed serializer_factory so that unserializable values can be migrated.,https://code.djangoproject.com/ticket/29738#comment:6,cansarigol,None,2018-09-16T15:06:39Z,2018-10-06T15:27:41Z
10393,Fixed #29757 -- Documented Oracle DSN and Easy Connect options,,jtiai,None,2018-09-16T11:49:46Z,2018-09-17T14:48:43Z
10392,Fixed #29759 -- Fixed crash on Oracle when fetching a returned insert id with cx_Oracle 7.,Ticket [29759](https://code.djangoproject.com/ticket/29759).,felixxm,None,2018-09-15T11:22:02Z,2018-11-21T16:04:14Z
10391,Improved utils documentation a bit,Some small tweaks to make them more readable and make sense without context.,adamchainz,None,2018-09-14T20:56:20Z,2020-07-20T10:19:15Z
10390,Fixed #29754 -- Added is_dst parameter to Trunc database functions.,"Added `is_dst` flag to ``TruncBase()`` so it can use it to resolve ambiguous (and perhaps nonexistent) datetimes.

[#29754](https://code.djangoproject.com/ticket/29754)",ahbk,None,2018-09-14T17:50:40Z,2019-03-07T15:02:19Z
10389,Fixed #29755 -- Made migrations detect changes to Meta.default_related_name.,https://code.djangoproject.com/ticket/29755,charettes,None,2018-09-14T03:34:49Z,2018-09-14T14:31:02Z
10388,Simplified expressions.tests.,,felixxm,None,2018-09-13T18:04:04Z,2018-09-18T18:39:47Z
10387,Add a test for cast between datetime and date.,"https://code.djangoproject.com/ticket/29767#ticket

While using with Annotations and Cast I realized that the casting between datetime and date with SQLite3 was kinda broken.

`Cast(""datetime_field"", DateField())` is transformed into `CAST(""datetime_field"" AS TEXT)` rather than for instance `substr(CAST(datetime_field AS TEXT),0,11)`

I was able to use extra to fix that and run the query. However I would like to fix this.

This is especially useful for my usecase where I want to GROUP BY the annotated value.",Natim,None,2018-09-13T14:41:26Z,2018-10-02T13:02:20Z
10386,Fixed #29711 -- Added a system check for uniquness of admin actions' __name__.,"https://code.djangoproject.com/ticket/29711

Nice to meet you all :)",przemub,None,2018-09-13T14:21:35Z,2019-11-27T07:00:12Z
10385,"Fixed #29719, Refs #29722 -- Added introspection for special table and view types in PostgreSQL.","Tickets [#29719](https://code.djangoproject.com/ticket/29719) & [#29722](https://code.djangoproject.com/ticket/29722).
Supersedes PR #10351. (Thanks @infinite-l00p for the initial implementation.)",pope1ni,None,2018-09-12T22:23:42Z,2018-12-17T21:30:16Z
10384,Fixed typo in search docs,Typo is live here: https://docs.djangoproject.com/en/dev/ref/contrib/postgres/search/#changing-the-search-configuration,adamzap,None,2018-09-12T21:50:34Z,2018-09-12T22:40:53Z
10383,Fixed #29752 -- Added new ALLOWED_HOSTS_EXEMPT setting.,https://code.djangoproject.com/ticket/29752,jonashaag,None,2018-09-12T13:24:03Z,2018-10-02T13:00:43Z
10382,Removed shadowing of built-in `hash` function.,,AyumuKasuga,None,2018-09-12T09:01:32Z,2018-09-13T14:11:03Z
10381,"Fixed #11154, #22270 -- Made proxy model permissions use correct content type.","# Context

Previous PR: #4681

**Ticket links**:
- Main bug: https://code.djangoproject.com/ticket/11154
- Maybe related bug: https://code.djangoproject.com/ticket/17904
- Docs: https://code.djangoproject.com/ticket/22270

# State of things before this patch

## Permissions for proxy models

They are created using the concrete model content type.

```python
# myapp/model.py
class User(models.Model):
    pass

class Student(models.Model):
    class Meta:
        proxy = True
        # Extra permissions
        permissions = (
            ('email_student', 'Can email students'),
        )

student_permission = Permission.objects.get(codename='email_student')
user_permission = Permission.objects.get(codename='add_user')

# The content type used for the permissions is the one of the concrete model
assert student_permission.content_type == user_permission.content_type

# Add the permissions to the user
user.user_permissions.add(student_permission)
user.user_permissions.add(user_permission)

# Then check if it worked as you would expect
assert user.has_perms('myapp.email_student', 'myapp.add_user') is True
```

So far everything works as expected... But now let's use a proxy model in a different app!

```python
# myotherapp/models.py
from myapp.models import User

class Teacher(User):
    class Meta:
        proxy = True

teacher_permission = Permission.objects.get(codename='add_teacher')
assert teacher_permission.content_type == user_permission.content_type

# Add the permission to the user
user.user_permissions.add(teacher_permission)

# And here is the catch...
assert user.has_perm('myotherapp.add_teacher') is True, 'Bad luck, you have to use the app_label of the concrete model'
# Instead
assert user.has_perm('myapp.add_teacher') is True
```
## Admin pages

For proxy models having a different `app_label` than the concrete model would, their admin page would not be accessible to users having the proxy model permissions because of how the permission lookup is done in `django.contrib.admin.options.py`. As mentioned in the previous example, you need to use the `app_label` of the concrete model to lookup the permission, but the admin was constructing the string with the model app_label whether or not that model was a proxy model.
```python
# myapp/admin.py
from myapp.models import Student

admin.site.register(Student)
```

```python
# myotherapp/admin.py
from myotherapp.models import Teacher


admin.site.register(Teacher)
```

```python
user.user_permissions.add(Permission.objects.get(codename='change_student'))
user.user_permissions.add(Permission.objects.get(codename='change_teacher'))
# Log the user in...
# ...
response = client.get('admin:myapp_student_changelist')
assert response.status_code == 200

response = client.get('admin:myotherapp_teacher_changelist')
assert response.status_code == 200, 'Nope, it returns 403 because of the bad permission lookup!'
```

## Existing workarounds (That I know of...)
So currently, to give users access to the `Teacher` admin page, there are 2 options:
- Create manually the permissions that will use the proxy model content type (The [gist](https://gist.github.com/magopian/7543724) mentioned in https://code.djangoproject.com/ticket/11154#comment:54)
- Make the user a superuser

# What will happen after this patch in terms of permissions?

- New permissions will be created for all the proxy models, using their own content type instead of the content type of the concrete model.
- Users with the new permissions will be able to access the admin pages of proxy models with an `app_label` different from the concrete model.

# What will stay the same?

- If you give a user the permissions of a concrete model, it doesn't give them any permission on an inheriting proxy model.

# Highlighted changes for review

- [x] Cherry-pick the changes of #4681
- [x] Describe with concrete examples how this page will affect permission creation
- [x] Update existing docs around proxy models and getting permissions by content type
- [x] Add the release notes
- [x] Write documentation to explain how the permissions are created for a model/proxy model
    - [x] Explain that permissions for a concrete model don't give permissions for a proxy model",arthurio,None,2018-09-12T05:24:27Z,2019-01-16T16:16:37Z
10380,Fixed #29724 -- Timezoned the date hierarchy tag,"The date hierarchy tag in django admin based its navigation on UTC instead of current timezone so models where ``date_hierarchy`` is a ``DateTimeField`` goes off sync with ``result_list`` (which uses current timezone).

This patch localizes navigation by instructing ``date_hierarchy`` to use ``queryset.datetimes()`` when ``date_hierarchy`` is a ``DateTimeField``.

[#29724](https://code.djangoproject.com/ticket/29724)",ahbk,None,2018-09-12T04:03:26Z,2020-02-18T17:14:46Z
10379,Fixed #29749 -- Made the migrations loader ignore files starting with a tilde or underscore.,https://code.djangoproject.com/ticket/29749,timgraham,None,2018-09-11T15:55:05Z,2018-09-11T16:51:17Z
10378,Fixed #29745 -- Based Expression equality on detailed initialization signature.,"https://code.djangoproject.com/ticket/29745

It was breaking equality checks between expressions allowing arguments to be
provided using either positional or keyword arguments.

e.g. Expression(IntegerField()) != Expression(output_field=IntegerField()).

It was particularily problematic for expressions such as Cast() where the
output_field argument is likely to be passed as a positional argument while
BaseExpression.__eq__ was expecting it to be provided as a keyword argument.

This could likely have been solved with some per-subclass introspection logic
of __init__ but relying on simple tuple comparisons is likely to be easier to
grasp and maintain.

Refs #11964, #26167.

/cc @Ian-Foote since you worked on #7517.",charettes,None,2018-09-11T04:25:57Z,2018-10-02T23:21:06Z
10377,Update INSTALL,Just a test,flowerpp,None,2018-09-10T11:17:42Z,2018-09-10T11:31:52Z
10376,Full path shown to avoid misplacing results.html,By specifying the full path rather than just the template polls/results.html (which could also be confused for a full path).,hatgit,None,2018-09-10T06:12:51Z,2018-09-10T14:11:12Z
10375,Fixed #29746 -- Fixed misleading FlatpageForm URL help text if APPEND_SLASH is disabled.,"Hijacking some existing tests since they're very tightly related, but let me know if these should have new tests.

Also not 100% sure on the implementation, but couldn't immediately see a better way.",knyghty,None,2018-09-09T11:38:36Z,2018-09-11T16:35:40Z
10374,Emphasized that TemplatesSetting must be used to override widget templates.,"This wasn't immediately obvious to me, based on the how-to for
overriding templates and the renderer documentation. Improve this by
adding a cross-reference in the former and modifying the wording of the
latter.",stephenfin,None,2018-09-08T00:07:13Z,2018-09-11T20:49:12Z
10373,Fixed #29642 -- Added check for arguments of custom error handler views.,"[Ticket](https://code.djangoproject.com/ticket/29642)

I also plan to document how to test custom error handlers as suggested on the ticket.",adamchainz,None,2018-09-07T07:40:14Z,2020-07-20T10:19:18Z
10372,Fixed #16995 -- Clarified interaction of initial and extra with model formsets.,"Clarify that if initial is longer than the number of extra forms, any
additional data will not be used when rendering forms.",sdolemelipone,None,2018-09-06T11:05:34Z,2018-09-10T19:57:11Z
10371,Bugfix: Support Python 3.7 for 1.11,"I know that 1.11 should only get security bugfixes and does not officially support python 3.7, but please consider including this two character fix into the next patch release, it would make the work of many people easier.

Bug ticket: https://code.djangoproject.com/ticket/28814

Fix for:

```
  File "".../site-packages/django/contrib/admin/widgets.py"", line 152
    '%s=%s' % (k, v) for k, v in params.items(),
    ^
SyntaxError: Generator expression must be parenthesized
```

And yes it's really only two square brackets missing!",dunkelstern,None,2018-09-06T11:02:14Z,2018-09-12T15:36:05Z
10370,Fixed #29727 -- Made nonexistent joins in F() raise FieldError.,"Fetching the value of a non-existing joined field on a model using ``F()`` does not raise an error. Instead, it is just giving the primary key of the fetched object.

This patch ensures a ``FieldError`` when last element in a name passed to ``F()`` is neither a field nor a transform.

[#29727](https://code.djangoproject.com/ticket/29727)
",ahbk,None,2018-09-06T09:07:50Z,2018-09-08T13:59:42Z
10369,Fixed #29573 -- Added link from per-item aggregation topic discussion to `annotate()` ref.,"Fixed [29573](https://code.djangoproject.com/ticket/29573)

Links for `QuerySet`, `annotate`,  `aggregate` are added.",VishvajitP,None,2018-09-05T00:35:41Z,2018-09-10T13:53:20Z
10368,Documention references a wrong widget for forms.TimeField,"The default widget for a forms.TimeField is TimeInput, yet the current documentation links to TextInput.",flh,None,2018-09-04T13:05:05Z,2018-09-04T23:18:43Z
10367,Refs #29713 -- Improved error message from translation system check.,"Ticket [#29713](https://code.djangoproject.com/ticket/29713), follow up to PR #10340.

There were a number of issues that I think needed addressing:

- Some of the documentation was sorted alphabetically as requested, some of it wasn't.
- The documentation for the check should have linked to the `LANGUAGE_CODE` [documentation](https://docs.djangoproject.com/en/stable/ref/settings/#language-code).
- The error message was far too complicated and incorrect:
  - Language tags are not solely formatted as `ll` or `ll-cc`. Django supports `zh-Hans`, for example.
  - Outputting a URL is not nice - using the `LANGUAGE_CODE` documentation is better.
  - A better link would have been: https://www.w3.org/International/articles/language-tags/
- The tests had some problems:
  - It looks as though `subTest()` was being used and then got removed before the push.
  - Not enough valid and invalid values were being tested.
- This check should probably only be applied if `USE_I18N = True`?
  - *See the `fixup!` commit. We can squash it in or scrap it if we always want to check.*

I think that there are generally other problems in Django where language code (or tag) is confused with locale, a point made [here](https://code.djangoproject.com/ticket/29712#comment:2). For example, I think ticket [#24063](https://code.djangoproject.com/ticket/24063) was implemented incorrectly - it should have extended `to_locale()`. `LANGUAGE_CODE` should follow [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) which is what Django's [documentation](https://docs.djangoproject.com/en/stable/ref/settings/#language-code) effectively asks for. I'll see if I can resolve some of these issues later.",pope1ni,None,2018-09-04T08:47:05Z,2018-09-06T11:51:30Z
10366,Fixed #29725 -- Removed unnecessary join in QuerySet.count() and exists() on a many to many relation.,https://code.djangoproject.com/ticket/29725,MyungSeKyo,None,2018-09-04T07:48:06Z,2018-10-15T15:01:58Z
10365,Fixed #29712 -- Normalized locale input in 'makemessages' managment command,"Fixes issue [29712](https://code.djangoproject.com/ticket/29712)

Continuing the work done by @MattSegal.

A user running the `makemessages` management command will not be able to use a translation locale if they do not use the exact right locale format.

Eg. Running the following command will create a locale folder `zh-cn` which will not create translations with `LANGUAGE_CODE` of `zh-cn`

`./manage.py makemessages -l zh-cn`

Whereas the following command will create a locale folder `zh_CN` which will create translations with `LANGUAGE_CODE` of `zh-cn`

`./manage.py makemessages -l zh_CN`

Along with providing a warning message, I added some code to normalise the user's input to the expected format.
```
1.
> ./manage.py makemessages -l zh-CN
Invalid locale zh-CN
processing locale zh-CN

2.
> ./manage.py makemessages -l zh-cn -l zh_cn -l ZH-CN -l ZH_CN -l zh_CN -l zh_CN -l de
Invalid locale zh-cn
Invalid locale zh_cn
Invalid locale ZH-CN
Invalid locale ZH_CN
Invalid locale zh_CN
Invalid locale zh_CN
Invalid locale de
processing locale ZH_CN
processing locale zh-cn
processing locale zh_CN
processing locale ZH-CN
processing locale zh_cn
processing locale de```
",VishvajitP,None,2018-09-03T23:21:22Z,2019-03-18T14:46:58Z
10364,Fixed #29730 -- Clarified docs for send_email() return value.,"While reading through the ""Sending emails"" documentation, I haven't really understood the return value. So, that's what I believe it means.",ovalseven8,None,2018-09-02T17:03:20Z,2018-09-11T16:25:21Z
10363,Fixed #29729 -- Updated contributing tutorial to run tests on master.,"Running the tests on master first seems a more sensible suggestion, especially since the rest of the tutorial uses a very old commit. There's already a paragraph about checking if your test failures are expected on master by comparing with djangoci.com.",adamchainz,None,2018-09-01T19:29:42Z,2020-07-20T10:19:22Z
10362,Fixed #29735 -- Updated inheritance chain of the generic DeleteView.,"Refactored BaseDeleteView and DeleteMixin. Deleted BaseDetailView
in the MRO of DeleteView because SingleObjectMixin is sufficient.",pybest,None,2018-09-01T17:55:40Z,2018-09-06T07:56:00Z
10361,Fixed #29728 -- Prevented session resaving if CSRF cookie is unchanged.,https://code.djangoproject.com/ticket/29728,nijel,None,2018-09-01T14:33:14Z,2018-09-08T16:05:40Z
10360,Refs #16470 -- Fixed typo in a FileResponse test.,"While we probably don't want Ĉontent-Length in our FileResponses
from named pipes, we definitely don't want Content-Length.",jaylett,None,2018-09-01T10:11:01Z,2018-09-02T08:45:39Z
10359,Fixed #27899 -- Added support for phrase/raw searching in SearchQuery.,https://code.djangoproject.com/ticket/27899,claudep,None,2018-09-01T09:24:48Z,2018-09-23T19:01:47Z
10358,Refs #27795 -- Removed force_text() in Model._get_FIELD_display().,`Field.choices` should be a `str` or able to be coerced to a `str`.,jdufresne,None,2018-08-31T02:35:34Z,2018-10-02T15:00:27Z
10357,Refs #29426 -- Fixed typo in docs/releases/2.2.txt.,,jschneier,None,2018-08-30T18:47:00Z,2019-12-16T05:45:39Z
10356,Refs #20910 -- Replaced snippet directive with code-block.,"Any reasons for our custom ""snippet::"" directive in the docs appear to have long passed into invalid obscurity.
I've replaced all uses with code-block, with a view to later being able to use :emphasize-lines: to further improve the docs.",funkybob,None,2018-08-30T13:38:11Z,2018-09-10T17:00:35Z
10355, Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.,https://code.djangoproject.com/ticket/29723,timgraham,None,2018-08-29T20:48:39Z,2018-09-13T13:11:12Z
10354,Refs #29689 -- Moved FilePathField choices sorting outside the loop.,https://code.djangoproject.com/ticket/29689,sir-sigurd,None,2018-08-29T04:52:46Z,2018-08-29T10:19:37Z
10353,Fixed #29718 -- Doc'd admin template collision backwards incompatibility in Django 2.1.,https://code.djangoproject.com/ticket/29718,timgraham,None,2018-08-28T12:18:12Z,2018-08-28T19:00:05Z
10352,converted all single line comments to multiple line comments,,Augustinetharakan12,None,2018-08-28T09:49:17Z,2018-08-28T11:48:21Z
10351,Fixed #29719 -- Added PostgreSQL foreign data wrapper support to inspectdb.,"On Postgres, the inspectdb command fails to list the tables imported with the foreign data wrapper.

This is due to the fact that pg_catalog.pg_class.relkind is set to 'f' while the function get_table_list
filter the relations only with 'r' and 'v'.

on line 50 the dictionary used to parse the result must also convert the 'f' (for foreign table) into 't' as done with 'r'",infinite-l00p,None,2018-08-28T09:17:21Z,2018-09-13T08:40:33Z
10350,Fix a grammar error in docs,,mwiens91,None,2018-08-28T05:27:52Z,2018-08-28T11:53:10Z
10348,Refs #27795 -- Removed force_bytes()/smart_text() from model fields.,"Can safely call `str()` on model instances for the string representation.

Values in `BinaryField` methods should be bytes or a base64-encoded string.",jdufresne,None,2018-08-28T02:19:40Z,2018-08-30T01:27:06Z
10347,Refs #29654 -- Replaced three dots with ellipsis in DB creation output strings.,,jdufresne,None,2018-08-28T01:29:36Z,2018-08-30T01:27:16Z
10346,Refs #27795 -- Removed force_bytes() usage in django/utils/cache.py.,The `iri_to_uri()` function returns a string with ASCII chars only and HTTP headers are strings.,jdufresne,None,2018-08-28T00:55:22Z,2018-08-30T01:27:19Z
10345,Fixed #29712 -- Normalize locale input in 'makemessages' managment command,"Fixes issue [29712](https://code.djangoproject.com/ticket/29712)

A user running the `makemessages` managment command will not be able to use a translation locale if they do not use the exact right locale format.

Eg. Running the following command will create a locale folder `zh-cn` which will not create translations with `LANGUAGE_CODE` of `zh-cn`

```
./manage.py makemessages -l zh-cn
```

Whereas the following command will create a locale folder `zh_CN` which will create translations with `LANGUAGE_CODE` of `zh-cn`

```
./manage.py makemessages -l zh_CN
```

Rather than providing a warning message, I added some code to normalise the user's input to the expected format.

Tested the code as follows:

```
> ./manage.py makemessages -l zh-cn -l zh_cn -l ZH-CN -l ZH_CN -l zh_CN -l de
processing locale de
processing locale zh_CN
```

Note that all the permutations of `zh-cn` are normalized to `zh_CN`",MattSegal,None,2018-08-28T00:48:01Z,2018-09-04T10:42:09Z
10344,Corrected ModelFormMixin.form_invalid() signature in docs.,,jdufresne,None,2018-08-27T22:05:29Z,2018-08-28T00:58:19Z
10343,Replaced CVE/ticket roles with extlinks.,,timgraham,None,2018-08-27T14:31:24Z,2018-08-27T14:47:58Z
10342,Fixed LayerMapping encoding in geodjango tutorial.,"GDAL >= 1.9 automatically converts latin-1-encoded strings from Shapefiles to
UTF-8.",claudep,None,2018-08-27T10:30:10Z,2018-08-28T17:03:30Z
10341,Added getattr for profilefield in order to be used as the same model,"With this function we override the standard behaviour of getattr in order to find first in the object if it has the attr and, if it is defined, find over the profilefield model.
",FJLendinez,None,2018-08-27T08:04:12Z,2018-08-27T09:38:56Z
10340,Fixed #29713 -- Added a check to warn if LANGUAGE_CODE does not use the standard language id format,"This PR adds a check to warn if the `LANGUAGE_CODE` in `settings.py` does not use the standard language id format. [Ticket 29713](https://code.djangoproject.com/ticket/29713)

- [x] included test cases
- [x] updated docs",darvid7,None,2018-08-27T04:11:19Z,2018-09-04T09:37:48Z
10339,Fixed #26001 -- Fix integer exact lookups in search_fields,https://code.djangoproject.com/ticket/26001,slurms,None,2018-08-27T03:12:54Z,2020-03-17T09:13:51Z
10338,Fixed #20581 -- Added support for deferrable unique constraints.,"This builds upon https://github.com/django/django/pull/10271, extending the `UniqueConstraint` class to support deferring constraint checks.
https://code.djangoproject.com/ticket/20581",Ian-Foote,None,2018-08-27T02:26:56Z,2020-04-30T12:25:53Z
10337,Fixed #29641 -- Added UniqueConstraint support.,@charettes I've cleaned up your branch a bit. (https://github.com/django/django/pull/10271),Ian-Foote,None,2018-08-27T00:52:50Z,2018-11-12T14:26:22Z
10336,Fixed #29667 -- Handle spaces in path converter parameters,https://code.djangoproject.com/ticket/29667,orf,None,2018-08-26T15:33:42Z,2018-09-08T12:42:23Z
10335,"Fixed #29694 -- Fixed column mismatch crash with QuerySet.values() or values_list() after combining querysets with extra() with union(), difference(), or intersection().","Regression in 0b66c3b442875627fa6daef4ac1e90900d74290b.
Ticket [29694](https://code.djangoproject.com/ticket/29694).",felixxm,None,2018-08-25T15:58:36Z,2018-08-29T08:01:18Z
10334,Respect fail_silently in django.core.mail.send_mail(),"send_mail() should respect fail_silently flag, the same way mail_admins() does.",ezaquarii,None,2018-08-24T18:30:21Z,2018-09-08T13:23:12Z
10333,Added safety check for cleaned_data when adding form errors,"Adding form errors requires that cleaned data is removed from the form. However this fails when the cleaned data doesn't exist, for example if you inject an error before rendering the form for the first time.

This patch fixes this small corner case by checking that the cleaned_data exists first, before trying to delete it.",sjtrny,None,2018-08-24T04:23:45Z,2018-09-18T18:29:26Z
10332,Fixed #29706 -- Missing using=db call in RenameContentType._rename,[Ticket #29706](https://code.djangoproject.com/ticket/29706),digismack,None,2018-08-23T16:55:49Z,2018-10-30T19:25:13Z
10331,Fixed #29705 -- Fixed ImageField RuntimeError crash for WebP files.,Ref: https://code.djangoproject.com/ticket/29705,winkidney,None,2018-08-23T06:17:58Z,2019-01-01T14:11:26Z
10330,Fixed #29703 -- Deprecated QuerySetPaginator alias.,[Ticket #29703](https://code.djangoproject.com/ticket/29703). Unused since 4406d283e13819b04556df21044089b7d119edb0.,pope1ni,None,2018-08-22T19:30:31Z,2018-08-28T06:01:27Z
10329,fix timestamp in response.delete_cookie(),"RFC 2109 states: 
> 10.1.2  Expires and Max-Age
>   Netscape's original proposal defined an Expires header that took a
>   date value in a fixed-length variant format in place of Max-Age:
>   Wdy, DD-Mon-YY HH:MM:SS GMT

The Django documentation itself states:
> expires should either be a string in the format ""Wdy, DD-Mon-YY HH:MM:SS GMT"" or a datetime.datetime object in UTC.",jnns,None,2018-08-22T10:36:11Z,2018-08-22T11:18:41Z
10328,[no review] [wip] Fixed #25513 -- Refactored the admin pagination into a public EllipsisPaginator.,"Should supersede https://github.com/django/django/pull/5866
https://code.djangoproject.com/ticket/25513",srinivasreddy,None,2018-08-22T06:11:12Z,2020-04-01T05:52:15Z
10327,Fixed #29699 -- Remove outdated redirect_authenticated_user warning,https://code.djangoproject.com/ticket/29699,brickl,None,2018-08-22T02:03:12Z,2018-08-22T14:20:13Z
10326,Fixed #29698 -- Make Model Field _check_choices handle invalid type.,Reference: https://code.djangoproject.com/ticket/29698#ticket,fmichea,None,2018-08-21T20:37:31Z,2018-08-22T13:34:00Z
10325,Refs #29654 -- Replaced three dots with ellipsis character in output strings.,,claudep,None,2018-08-21T16:30:42Z,2018-08-22T13:21:47Z
10324,Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.,Thanks Sudhanshu Mishra for the initial patch.,claudep,None,2018-08-21T14:41:33Z,2018-08-21T15:47:56Z
10323,Fixed #29696 -- Prevented BaseModelFormSet.initial_form_count()'s from treating data={} as unbound.,"Avoids repeating logic for determining a bound formset. Makes the child class behavior more consistent with the parent class behavior.

Added test `test_initial_form_count_empty_data_raises_validation_error` to show that model formsets now correctly distinguishes between unbound and `data={}`.",jdufresne,None,2018-08-21T12:04:52Z,2018-08-23T23:40:44Z
10322,Removed unused function argument from Window.as_sql().,Unused since its introduction in d549b8805053d4b064bf492ba90e90db5d7e2a6b.,felixxm,None,2018-08-20T15:35:38Z,2018-08-20T20:17:22Z
10321,Fixed #29689 -- Improved performance of FileSystemStorage.listdir() and FilePathField with os.scandir().,https://code.djangoproject.com/ticket/29689,federicobond,None,2018-08-19T23:44:14Z,2019-02-13T03:53:23Z
10320,Simplified admin checks by removing redundant `model` argument.,The `model` can always be derived from the `ModelAdmin` instance. Avoids passing duplicate data to all methods and functions.,jdufresne,None,2018-08-19T17:38:02Z,2018-08-23T23:40:47Z
10319,Fixed admin_checks tests to run in isolation.,"Running only the `admin_checks` on master results in the exception below.

Should `admin` be included in the class level `INSTALLED_APPS` instead?

```
======================================================================
ERROR: test_allows_checks_relying_on_other_modeladmins (admin_checks.tests.SystemChecksTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/jon/devel/django/django/apps/registry.py"", line 152, in get_app_config
    return self.app_configs[app_label]
KeyError: 'admin'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/jon/devel/django/tests/admin_checks/tests.py"", line 122, in test_allows_checks_relying_on_other_modeladmins
    admin.site.register(Book, MyBookAdmin)
  File ""/home/jon/devel/django/django/utils/functional.py"", line 213, in inner
    self._setup()
  File ""/home/jon/devel/django/django/contrib/admin/sites.py"", line 529, in _setup
    AdminSiteClass = import_string(apps.get_app_config('admin').default_site)
  File ""/home/jon/devel/django/django/apps/registry.py"", line 159, in get_app_config
    raise LookupError(message)
LookupError: No installed app with label 'admin'.
```

",jdufresne,None,2018-08-19T15:18:10Z,2018-08-23T23:40:51Z
10318,Fixed #29688 -- Added ModelAdmin.manager_name attribute.,"Allows customizing the manager used by `ModelAdmin.get_queryset()`.

https://code.djangoproject.com/ticket/29688",jdufresne,None,2018-08-19T02:11:16Z,2018-10-07T15:08:50Z
10317,Fixed #29682 -- Fixed admin change form crash if a view-only model's form has an extra field.,https://code.djangoproject.com/ticket/29682,timgraham,None,2018-08-18T20:20:23Z,2018-08-20T15:48:09Z
10316,Fixed #29236 -- Fixed diffsettings crash if using settings.configure().,[ticket 29236](https://code.djangoproject.com/ticket/29236),hramezani,None,2018-08-18T19:30:09Z,2018-08-20T17:17:02Z
10315,Simplified how createsuperuser tests generate passwords.,"I standardized how we get the password from the callable.

Also `test_validate_password_against_required_fields` was running against the username and the first_name (a required field) so I don't think it was ever hitting the required field part. I've now fixed that test.",jschneier,None,2018-08-18T19:18:53Z,2018-08-18T21:10:16Z
10314,Refactor TestSimpleValidators to use subtests,"I noticed that the validator tests used a rather strange way of creating multiple tests from a list of test data. We use `self.subTest()` everywhere else, so I refactored it to use that instead of dynamically creating test functions and hackily extending the `TestSimpleValidators` class.",orf,None,2018-08-18T18:28:06Z,2018-08-18T19:49:26Z
10313,Fixed #29687 -- Allowed the test client to serialize list/tuple as JSON.,"This addresses https://code.djangoproject.com/ticket/29687#ticket

I'm not sure what the standard practice is for documentation here. Particularly, this feels borderline between a bug and a feature – technically the documentation is explicit about only accepting dicts:

> If you provide `content_type` as `application/json`, a `data` dictionary is serialized using `json.dumps`.

...however when doing a Django 2.1 upgrade I found this to be unexpected, as I removed all of our explicit JSON serialisation from our test client code and expected it to work, but we use JSON arrays in some places and they didn't work.

Should I just change the documentation to read that arrays are supported too, or should I document this as changed behaviour and a new feature? If so, should I add the `versionchanged` tag? Which version should I specify?",danpalmer,None,2018-08-18T12:22:08Z,2018-08-25T16:02:39Z
10312,Fixed #29658 -- Registered model lookups in tests with a context manager.,https://code.djangoproject.com/ticket/29658,srinivasreddy,None,2018-08-18T06:50:42Z,2018-08-21T16:20:59Z
10311,Refs #29426 -- Made UUIDField render values with dashes.,"https://code.djangoproject.com/ticket/29426 

Alternative to the approach in https://github.com/django/django/pull/9972 which adds an option to enable the behavior. I don't see a need for the toggle.",timgraham,None,2018-08-17T22:49:08Z,2018-08-18T12:43:06Z
10310,Fixed #29685 -- Added a note about Queryset.explain() to the database optimization documentation,"Ticket: https://code.djangoproject.com/ticket/29685

This was actually harder to write than I imagined. Not sure if what I have come up with is good enough.",orf,None,2018-08-17T19:23:39Z,2018-08-18T13:24:09Z
10309,Refs #29015 -- Added database name to PostgreSQL database name too long exception.,"I bumped into this error a few times while upgrading a project to Django 2.1. In my case, the long database name was generated dynamically by a test. If the name had been presented, I think it would have been slightly easier to track down.",jdufresne,None,2018-08-17T01:49:52Z,2018-08-18T18:20:04Z
10308,Fixes #29681-- Support XHTML5 (XML serialization of HTML5),"Frameworks and libraries that generate html should output well-formed html that can be used for both HTML serialization (text/html) and XML serialization (application/xhtml+xml). This implies that Django should continue to output XML compatible markup even for HTML5.

This do not mean that Django need to be restricted by the XHTML-Transitional and XHTML-Strict standard. It only means that HTML5 needs to be written in a XML compatible style.",nilsfr,None,2018-08-16T22:47:40Z,2018-08-17T01:04:15Z
10307,Fixed #29704 -- Fixed manage.py test --testrunner if it isn't followed by an equals sign.,"The testrunner that is used can define and `add_arguments()` method to
specify additional commandline arguments for the `test` management
command. To make this work even when the testrunner to be used is
specified on the commandline, the `test` command prescans the
commandline for the `--testrunner` option, to call the runner's
`add_arguments()` before the actual commandline parsing happens.

Previously, this prescanning only considered options like
`--testrunner=foo`, while the actual command also accepts `--testrunner
foo`. In the latter case, additional arguments defined by the testrunner
would not be accepted.

This commit fixes this by checking for both argument styles. The
scanning is moved to a separate function for clarity, and to prepare for
possible reuse later.",matthijskooijman,None,2018-08-16T20:55:37Z,2018-08-23T14:27:35Z
10306,Fixed #29654 -- Made Truncator use ellipsis character instead of three dots. -- Test cases and .po,"Additional patch to PR #10280 

Fixed the test cases and changed the .po-files for all the translations.

Additional fixes to https://code.djangoproject.com/ticket/29654#ticket

",ovelindstrom,None,2018-08-16T13:09:43Z,2018-08-16T15:01:15Z
10305,Fixed #12738 -- Added a setting for the CSRF token name.,"Hello,
I want change csrf token input name (csrfmiddlewaretoken). But Django does not provide this. So i have added this feature to Django core.

Why am i want this?

[Wappalyzer](https://github.com/AliasIO/Wappalyzer/blob/f5a77f3453c796c66f3e597fb30edbc3e2a285c8/src/apps.json#L2471) identifies Django application with ""csrfmiddlewaretoken"" input name. ",mazlum,None,2018-08-16T12:50:12Z,2018-10-11T17:19:36Z
10304,Stable/2.1.x,,wildanupam,None,2018-08-16T11:36:42Z,2018-08-16T11:37:21Z
10303,Removed obsolete TODO in proxy_model_inheritance test.,"I just see this TODO, I think it should be available.",htkuan,None,2018-08-16T08:52:44Z,2018-08-16T13:20:40Z
10302,Refs #8936 -- Added ModelAdmin.has_view_or_change_permission(),"For reuse and consistency, move common check for ""view"" or ""change"" permission to a common function.",jdufresne,None,2018-08-16T01:46:22Z,2018-08-18T18:20:06Z
10301,Fixed #29500 -- Fixed SQLite function crashes on null values.,"Ticket [#29500](https://code.djangoproject.com/ticket/29500), supersedes PR #10121.",pope1ni,None,2018-08-16T00:36:27Z,2018-09-11T09:26:24Z
10300,Fixed #29677 -- Clarified existence of StaticFilesStorage.post_process().,https://code.djangoproject.com/ticket/29677,timgraham,None,2018-08-15T19:48:50Z,2018-08-16T08:58:04Z
10299,Fixed #29529 -- FilePathField path parameter now accepts a callable.,https://code.djangoproject.com/ticket/29529,niconoe,None,2018-08-15T06:12:16Z,2018-09-14T15:12:02Z
10298,Support JSON Structured Syntax #29662,"https://code.djangoproject.com/ticket/29662

Added Documentation and Test and changed Regex. 

First PR let me know if I missed anything else. ",CHBresser,None,2018-08-14T16:49:48Z,2018-08-14T16:57:59Z
10297,Add link 'Scaling Django' to 'Does django scale?',This refers to: https://code.djangoproject.com/ticket/29665,wilk,None,2018-08-14T09:35:42Z,2018-08-14T11:43:05Z
10296,Removed unused enumerate in django/db/models/sql/datastructures.py.,,srinivasreddy,None,2018-08-13T19:07:52Z,2018-08-14T03:53:49Z
10295,Optimized code for setting cache value in cache test,"There were inefficient uses of `set()` in `/test/cache/test.py`. 
I changed from `set()` to `set_many()`.",MyungSeKyo,None,2018-08-13T08:28:23Z,2018-08-17T02:03:26Z
10294,Fixed #29664 --Caught TypeError exception and giving out meaning full…,Fixed #29664 --Caught TypeError exception and giving out meaning full error message,emiamar,None,2018-08-13T07:48:37Z,2018-08-14T09:18:06Z
10293,Fixed #29625 -- Made Model.refresh_from_db() clear prefetch related caches.,,QinMing,None,2018-08-13T07:14:21Z,2018-08-20T16:20:36Z
10292,Stable/2.0.x,,maryamsoft,None,2018-08-13T07:01:01Z,2018-08-13T07:02:40Z
10291,Fixed #29663 -- Fixed admin change view to redirect to changelist with view permission.,https://code.djangoproject.com/ticket/29663,jdufresne,None,2018-08-12T17:17:56Z,2018-08-18T18:20:05Z
10290,Refs #27804 -- Used subTest in AdminViewPermissionsTest.,,jdufresne,None,2018-08-12T15:11:28Z,2018-08-13T02:37:21Z
10289,"Refs #29449 -- Reverted release note for ""Allowed using contrib.auth forms without installing contrib.auth."" ",UserCreationForm and UserChangeForm still need to be rewritten for a custom User model. The mentioned change was introduced with commit 3333d935d2914cd80cf31f4803821ad5c0e2a51d but reverted later with 78f502cd0bc834422c3f189e852564fe4b6459f2 - the changelog entry persisted. The forms still have issues with custom User models.,DragoonAethis,None,2018-08-11T22:59:32Z,2018-08-12T01:50:20Z
10288,Fixed #29662 -- Allowed test client to accept structured suffix JSON content types.,"Allowed the test client to recognise Content-Types like
""application/activity+json"" as indicating valid JSON.",marnanel,None,2018-08-11T20:50:33Z,2018-08-15T22:49:59Z
10287,Fixed #29408 -- Added validation of related fields and lookups in model Meta.ordering.,[ticket 29408](https://code.djangoproject.com/ticket/29408),hramezani,None,2018-08-11T19:42:57Z,2019-03-01T16:41:56Z
10286,Fixed #29646 -- Doc'd the validators that each model and form field uses.,https://code.djangoproject.com/ticket/29646,jeffyancey,None,2018-08-11T18:48:48Z,2018-08-16T21:03:28Z
10285,Fixed #29690 -- Fixed aligned <ul> positioning for RTL languages in admin.,"This is a small bugfix for RTL languages (Arabic/Persian/...).

**Before:**

![before](https://user-images.githubusercontent.com/815585/43988500-181355ec-9d4c-11e8-8e6b-95602fd3b124.png)


**After:**

![after](https://user-images.githubusercontent.com/815585/43988502-1f0cc054-9d4c-11e8-90ff-c3de8109a512.png)
",tahajahangir,None,2018-08-11T05:22:41Z,2018-08-20T14:20:31Z
10284,Fixed #29619 -- Raised FieldError's should include the field that caused the error,https://code.djangoproject.com/ticket/29619,jeffyancey,None,2018-08-11T04:36:35Z,2019-01-09T22:44:32Z
10283,Removed duplicated example,"```
>>> Article.objects.filter(publications=1)
<QuerySet [<Article: Django lets you build Web apps easily>, <Article: NASA uses Python>]>
>>> Article.objects.filter(publications=p1)
<QuerySet [<Article: Django lets you build Web apps easily>, <Article: NASA uses Python>]>
```",wilfredinni,None,2018-08-11T01:43:10Z,2018-08-11T12:43:53Z
10282,Fixed #29660 -- Fixed admin to 403 on POST to change view w/o permission.,https://code.djangoproject.com/ticket/29660,jdufresne,None,2018-08-10T21:14:20Z,2018-08-18T18:20:11Z
10281,Fixed #29637 -- Protect against unauthorized edits without breaking TabularInline formsets,See [#29637](https://code.djangoproject.com/ticket/29637),clementmangin,None,2018-08-09T15:54:31Z,2018-08-10T17:28:33Z
10280,Fixed #29654 -- Made Truncator use ellipsis character instead of three dots.,Fixes https://code.djangoproject.com/ticket/29654#ticket,debugger22,None,2018-08-09T07:57:05Z,2018-08-21T15:17:06Z
10279,Fixed #29653 -- Fixed missing related_query_name reverse accessor if GenericRelation is declared on an abstract base model.,"It was incorrectly removed when it points to a concrete model which
inherits from an abstract one.

Regression in 4ab027b9.

Thanks Lauri Kainulainen for the report.",ramiro,None,2018-08-09T01:34:12Z,2020-06-25T13:13:42Z
10278,Fixed #29024 -- Made TestContextDecorator call disable() if setUp() raises an exception.,https://code.djangoproject.com/ticket/29024,plutasnyy,None,2018-08-08T17:35:21Z,2018-08-17T20:30:27Z
10277,Fixed #29612 -- Add prefetch_related() cache invalidation for Generic Relations,"Ticket: https://code.djangoproject.com/ticket/29612

Not sure if I need documentation for this, as the current docs seem to imply that this is the case anyway.",orf,None,2018-08-07T22:09:21Z,2018-08-17T19:22:13Z
10276,Fixed #29644 -- String representation of SearchQuery gives inaccurate results,Ticket: https://code.djangoproject.com/ticket/29644,orf,None,2018-08-07T21:32:55Z,2018-08-16T08:37:00Z
10275,Fixed #29643 -- Fixed crash when combining Q objects with __in lookups and lists.,"Regression in fc6528b25ab1834be1a478b405bf8f7ec5cf860c.

Ticket [29643](https://code.djangoproject.com/ticket/29643).",felixxm,None,2018-08-07T19:27:07Z,2018-08-08T06:54:22Z
10274,Fixed #29648 -- Fixed crash when using subqueries inside datetime truncation functions.,See https://code.djangoproject.com/ticket/29648,raphaelm,None,2018-08-07T16:11:26Z,2018-08-07T21:19:31Z
10273,Fixed typo in docs/ref/templates/api.txt.,,jschneier,None,2018-08-06T23:20:28Z,2018-08-07T00:52:15Z
10272,Consolidated docs about handling a ForeignKey in custom user model manager.,,timgraham,None,2018-08-06T13:52:30Z,2018-08-06T16:42:58Z
10271,Fixed #29641 -- Added UniqueConstraint support.,"https://code.djangoproject.com/ticket/29641

/cc @atombrella @Ian-Foote ",charettes,None,2018-08-06T03:47:24Z,2018-08-29T04:53:08Z
10270,Fixed #29244 -- Prevented Paginator.count() from silencing TypeError and AttributeError.,Thanks to Tim Graham for the idea of the general approach.,jschneier,None,2018-08-06T02:53:44Z,2018-08-07T22:20:59Z
10269,Fixed #29616 -- Fixed createsuperuser for user models that don't have a password field.,https://code.djangoproject.com/ticket/29616,jschneier,None,2018-08-04T22:22:36Z,2018-08-05T18:49:55Z
10268,Add test for get_random_secret_key management utils,,hramezani,None,2018-08-04T20:26:12Z,2018-08-05T20:25:49Z
10267,Removed unnecessary str() in mail tests.,"Unnecessary since their introduction in
fa75b2cb512409116b6f1b5229d6f99074d8e452.",timgraham,None,2018-08-04T14:20:37Z,2018-08-04T14:40:19Z
10266,Improved documentation of Admin fields,"Clarify the types of values accepted, and what's allowed in `fields`.",adamchainz,None,2018-08-03T16:18:43Z,2018-08-03T22:02:12Z
10265,Refs #28584 -- Documented removal of support for SQLite < 3.7.15.,https://code.djangoproject.com/ticket/28584,timgraham,None,2018-08-03T14:46:19Z,2018-08-03T18:59:15Z
10264,Fixed #29633 -- Doc'd the geometry type for each model field.,"Link to the corresponding classes.

https://code.djangoproject.com/ticket/29633",dbrgn,None,2018-08-03T11:58:27Z,2018-08-03T16:09:28Z
10263,Fixed #29627 -- Fixed QueryDict.urlencode() crash with non-string values.,https://code.djangoproject.com/ticket/29627,timgraham,None,2018-08-02T22:04:37Z,2018-08-03T01:57:04Z
10262,Removed odd sentence in count() documentation.,"Rereading the docs today I saw this sentence. It has been there since c2e42e1c5c11b45b8136aff36065cb879d12862c , pre version 1.0, when the docs were in a much different state, with each method describing which exceptions it can raise. I think it can go now, as we don't mention the explicit exceptions for any of the other methods, plus the wording is a bit confusing, as e.g. `DatabaseError` can certainly by raised by `count()`.",adamchainz,None,2018-08-02T21:02:09Z,2019-01-11T14:56:39Z
10261,Fixed #29628 -- Made createsuperuser validate password against username and required fields.,https://code.djangoproject.com/ticket/29628,jschneier,None,2018-08-02T20:43:34Z,2018-08-04T14:01:29Z
10260,Fixed #29613 -- Fixed --keepdb on PostgreSQL if the database exists and the user can't create databases.,Ticket [29613](https://code.djangoproject.com/ticket/29613).,felixxm,None,2018-08-02T11:43:31Z,2018-08-03T08:32:29Z
10259,added Azure Pipelines hosted CI,"This proof-of-concept demonstrates Visual Studio Team Services running the Django test suite on Linux and Windows against SQLite. The files in this PR define the pipeline, and I have a testing instance of VSTS ready to connect to the Django repo.

Carlton Gibson and I have been corresponding about the feature gaps in Microsoft's CI offering with respect to big open source projects. I'm asking to stand this up as a demo working against the real Django repo in order to have more pointed conversations about what's missing, what's not as nice as Jenkins, etc. It'll run alongside the existing Jenkins infrastructure, adding one additional gate on PRs (which can be set to not required).",vtbassmatt,None,2018-08-02T11:42:10Z,2020-02-18T13:56:47Z
10258,Fixed #29626 -- Implemented delete_many() in core.cache.backends.db,https://code.djangoproject.com/ticket/29626,MyungSeKyo,None,2018-08-02T05:12:28Z,2018-11-06T02:32:49Z
10257,"Fixed #29626, #29584 -- Added optimized versions of get_many() and delete_many() for the db cache backend.","https://code.djangoproject.com/ticket/29584
https://code.djangoproject.com/ticket/29626


related PR: #10246 #10258 ",MyungSeKyo,None,2018-08-02T02:18:01Z,2018-08-17T19:58:46Z
10256,Fixed #29625 -- Expose RelatedManager._remove_prefetched_objects as p…,"…ublic method

The method currently starts with underscore, meaning it's not supposed to be accessed from the outside. But I find that sometimes I have to use this method to clear the cache, otherwise the outdated data will be returned. The new test shows a scenario where this method is useful.

See ticket https://code.djangoproject.com/ticket/29625",QinMing,None,2018-08-02T00:06:07Z,2018-08-03T16:26:17Z
10255,"Fixed #29623 -- Fixed translation failure of DurationField's ""overflow"" error message.",https://code.djangoproject.com/ticket/29623,MarkusH,None,2018-08-01T20:13:07Z,2018-08-08T10:54:27Z
10254,Misc. typos,"Found via `codespell -q 3 --skip=""*.po""`",luzpaz,None,2018-08-01T17:02:10Z,2018-08-01T20:35:10Z
10253,Fixed #29686 -- Made UserAdmin.user_change_password() pass object to has_change_permission().,https://code.djangoproject.com/ticket/29686,atodorov,None,2018-08-01T12:32:50Z,2020-09-13T20:29:11Z
10252,Fixed #29499 - Fixed race condition in QuerySet.update_or_create(),"Fixes race condition that existed when the object does not already
exist, but another process/thread creates the object before
update_or_create() does and then attempts to update the object, also
before update_or_create() saves the object. The bug meant that the
update by the other process/thread could be lost. The fix locks the row
so that the update by the other process/thread is blocked until after
update_or_create() has performed its save().",msanders-arm,None,2018-08-01T10:36:49Z,2018-08-03T15:49:32Z
10251,Translations for 2.1.x,,claudep,None,2018-08-01T09:52:50Z,2018-08-01T13:09:44Z
10250,[2.1.x] Updated translations from Transifex,"Draft PR to update translations for 2.1 

* First commit 
https://github.com/django/django/commit/2eceebad4b2db6a5564c63b4d3d40a78b49e9a6c updates all the po/mo files from Transifex. (Many changes. Best to avoid the diff.) 
* Second commit https://github.com/django/django/pull/10250/commits/1a89d5fefc2e0734fc200859e2dc74d65eb9bc7 3restores the changes to the humanize de po file from 
https://github.com/django/django/commit/78912ccd0e1fcdfe98ca85081c9eb8acb7aa1f6d, which by the look of it never made it to Transifex. (I was unable to work out how the Transifex UI maps onto the `naturaltime-past`, etc, contexts.) 
* Third commit https://github.com/django/django/pull/10250/commits/d179a8e6a3111d7c3b20619efa589da7a3a071c0 corrects an error in the id translation. (I should be able to resolve this on Transifex — **except** I can't see the `conf` resource to track it down...)

(To be squashed obviously.) 


Other errors reported updated translations were of the form: 

```
django/contrib/humanize/locale/br/LC_MESSAGES/django.po:391: a format specification for argument 'count' doesn't exist in 'msgstr[0]'
```
(6 in the same file)

I didn't quite understand this. Comparing with the same `de` translations the `{count}` variable was not needed, since it only appeared in the more-than-one case(s). ",carltongibson,None,2018-08-01T09:00:06Z,2019-02-28T08:49:03Z
10249,Refs #24733 -- Documented arguments for custom error views.,"Previously the 'exception' argument was only hinted at via the implementation of the custom views, this makes it explicit.",adamchainz,None,2018-07-31T15:06:56Z,2018-08-01T08:38:45Z
10248,Added words to docs/spelling_wordlist for Ubuntu 18.04.,,timgraham,None,2018-07-31T15:00:48Z,2018-07-31T17:00:27Z
10247,Fixed #29617 -- Fixed Template crash if template_string is lazy.,https://code.djangoproject.com/ticket/29617,dodobas,None,2018-07-31T10:14:30Z,2018-08-01T08:51:34Z
10246,Fixed #29584 -- Implemented get_many() in django.core.cache.backends.db,https://code.djangoproject.com/ticket/29584,MyungSeKyo,None,2018-07-29T07:30:11Z,2018-08-02T13:58:58Z
10245,Always open FieldFile.file on access to match documentation,,graingert,None,2018-07-28T14:49:35Z,2018-08-05T18:41:22Z
10244,Fix ensure_connection,"Related Ticket: [ https://code.djangoproject.com/ticket/24810 ]
Related PR: [ https://github.com/django/django/pull/10217 PR]

All tests passed at my local machine!",spenly,None,2018-07-28T12:11:51Z,2018-07-28T20:10:05Z
10243,Fix ensure_connection ,"Related Ticket: [ https://code.djangoproject.com/ticket/24810 ]
Related PR: [ https://github.com/django/django/pull/10217 PR]",spenly,None,2018-07-28T04:36:31Z,2018-07-28T04:36:55Z
10242,Fix ensure_connection,"Related Ticket: [ https://code.djangoproject.com/ticket/24810 ]
Related PR: [ https://github.com/django/django/pull/10217 PR]",spenly,None,2018-07-28T03:04:14Z,2018-07-28T04:37:37Z
10241,Remove some email backend duplication & comment code,Following up on some of the discussion in #10152. Just some cleanup.,jschneier,None,2018-07-27T20:57:41Z,2020-07-10T08:36:56Z
10240,Fixed #29139 -- Fixed aggregation crash when using nested KeyTransforms.,"This PR resolve [#29139](https://code.djangoproject.com/ticket/29139), which generate incorrect params in as_sql(), when using nested KeyTransform.",ddio,None,2018-07-27T14:12:40Z,2019-04-17T08:48:23Z
10239,Fix ensure_connection,"Related Ticket: https://code.djangoproject.com/ticket/24810 
Related PR: https://github.com/django/django/pull/10217",spenly,None,2018-07-27T13:57:45Z,2018-07-28T03:03:05Z
10238,Fix ensure_connection,"Related Ticket: [ https://code.djangoproject.com/ticket/24810 ] 
Related PR: [ https://github.com/django/django/pull/10217 PR]",spenly,None,2018-07-27T13:52:12Z,2018-07-27T13:56:57Z
10237,Fixed typo in ContentFile docstring.,,graingert,None,2018-07-27T13:37:27Z,2018-07-27T14:59:57Z
10236,Fix ensure_connection,"Related Ticket: [ https://code.djangoproject.com/ticket/24810 ]
Related PR: [ https://github.com/django/django/pull/10217 PR]

",spenly,None,2018-07-27T12:24:29Z,2018-07-27T13:50:06Z
10235,Fix ensure connection,"Related Ticket: [ https://code.djangoproject.com/ticket/24810 ]
Related PR: [ https://github.com/django/django/pull/10217 PR]

",spenly,None,2018-07-27T09:58:35Z,2018-07-27T12:12:39Z
10234,fix ensure_connection and add test case,"Related Ticket:  [ https://code.djangoproject.com/ticket/24810 ]
Related PR: [ https://github.com/django/django/pull/10217 PR]

",spenly,None,2018-07-27T08:57:04Z,2018-07-27T09:19:28Z
10233,Refs #29600 -- Updated django.utils.datetime_safe now that Python 2 is unsupported.,,timgraham,None,2018-07-26T21:46:24Z,2018-08-02T14:20:41Z
10232,Refs #29600 -- Added tests for some datetime_safe usage.,,timgraham,None,2018-07-26T20:43:52Z,2018-07-26T21:13:58Z
10231,Refs #29600 -- Removed datetime_safe usage in feedgenerator.,"The only effect would be if items in Atom feeds had a published date
year of < 1000.",timgraham,None,2018-07-26T20:29:31Z,2018-07-26T20:49:19Z
10230,Fixed #29595 -- Allowed using timedelta in migrations questioner.,"Refs #29600 -- Removed usage of django.utils.datetime_safe in migrations.
https://code.djangoproject.com/ticket/29595
https://code.djangoproject.com/ticket/29600",timgraham,None,2018-07-26T19:37:37Z,2018-07-27T16:20:54Z
10229,Fixed typo in Russian translations.,,nikulin,None,2018-07-26T12:46:12Z,2018-07-26T13:50:09Z
10228,Refs #29548 -- Fixed failing MariaDB 10.3 window tests.,Ticket: https://code.djangoproject.com/ticket/29548,orf,None,2018-07-25T23:46:20Z,2018-07-31T00:18:24Z
10227, Fixed #29593 -- Added QUERY_TERMS removal to v2.1 release notes.,"https://code.djangoproject.com/ticket/29593

* `QUERY_TERMS` is quite widely used. It seems fair to at least mention it's removal.  
* When working around `QUERY_TERMS` removal for django-filter (https://github.com/carltongibson/django-filter/pull/851), we used the `get_lookups()` method added in #6906. (cc @rpkilby) It's likely others will need this too. 

This PR: 

* Adds `get_lookups()` to the Lookup Registration API docs. 
* Adds note about QUERY_TERMS removal to 2.1 release notes. 
",carltongibson,None,2018-07-25T09:04:39Z,2018-07-26T15:02:12Z
10226,Refs #24424 -- Added regression tests for MTI-inheritance model removal.,"https://code.djangoproject.com/ticket/24424

The actual issue was fixed as a side effect of implementing `RemoveField`'s redution of `DeleteModel` to a `DeleteModel` in ad82900ad94ed4bbad050b9993373dafbe66b610.",charettes,None,2018-07-25T03:54:27Z,2018-07-25T16:08:14Z
10225,"Refs #29592 -- fix sqlite error when field_maps is empty, it cause copying zero columns","When `field_map` is empty, the sqlite driver will generate sql like this `INSERT INTO ""myapp_mymodel"" () SELECT  FROM ""myapp_mymodel__old""`. It raise SQL Syntax Error because there is no fields.",jauhararifin,None,2018-07-25T00:04:05Z,2018-07-25T03:24:50Z
10224,Fixed typo in docs/topics/http/urls.txt.,,minusf,None,2018-07-24T21:24:54Z,2018-07-24T22:35:59Z
10223,changed import statement for re,"only one module from re is being used, i changed the import statement and updated the module call.",Beall619,None,2018-07-24T18:05:47Z,2018-07-24T19:25:39Z
10222,"Fixed #28291, #24726 -- Fixed ArrayField with JSONField and RangeFields.","https://code.djangoproject.com/ticket/28291
https://code.djangoproject.com/ticket/24726",vinayinvicible,None,2018-07-24T15:37:19Z,2018-07-27T19:46:25Z
10221,Fixed #29589 -- Insert a new method part_page_range() for class Page in django.core.paginator.py,"Class `Pagination` have a attribute `page_range`,
it's very useful when I want to write the other page link in the html.
We only need write in html like 

```
<!-- contacts is a instance of Page class -->
{% for p in contacts.paginator.page_range %}
<li>
    <a href=""{% url 'admin_user_index' %}?&page={{ p }}"">
        {{ p }}
    </a>
</li>
{% endfor %}
```

But, when the pages is too more, for example 1000, Things are going to get scary.

So, I suggest insert a method `part_page_range()` for class Page.

For example, 
When the `contacts.paginator.num_pages` `=1000`,
and the `contacts.number` `=500`,
I can use the

```
contacts.part_page_range(5)
```

to acquire a range instance `range(498, 503)`.
I think Django will be more handy after insert this method.
",BobDu,None,2018-07-24T11:46:38Z,2018-07-28T19:20:41Z
10220,Fixed #29589 -- Insert a new method part_page_range for class Page.,"Class `Pagination` have a attribute `page_range`,
it's very useful when I want to write the other page link in the html.
We only need write in html like 

```
<!-- contacts is a instance of Page class -->
{% for p in contacts.paginator.page_range %}
<li>
    <a href=""{% url 'admin_user_index' %}?&page={{ p }}"">
        {{ p }}
    </a>
</li>
{% endfor %}
```

But, when the pages is too more, for example 1000, Things are going to get scary.

So, I suggest insert a method `part_page_range()` for class Page.

For example, 
When the `contacts.paginator.num_pages` `=1000`,
and the `contacts.number` `=500`,
I can use the

```
contacts.part_page_range(5)
```

to acquire a range instance `range(498, 503)`.
I think Django will be more handy after insert this method.
",BobDu,None,2018-07-24T11:23:30Z,2018-07-24T11:40:00Z
10219,Fixed #24336 -- Made django.conf.urls.static() ignore all absolute URLs,,claudep,None,2018-07-23T16:35:15Z,2018-07-24T07:33:54Z
10218,WIP: Fixed #29586 - Added ability to define per-app assets,,claudep,None,2018-07-23T15:28:55Z,2020-04-14T08:37:24Z
10217,fix ensure_connection,,spenly,None,2018-07-23T10:59:59Z,2018-07-23T13:52:54Z
10216,Refs #13091 -- Added test for commit=False idiom with partial unique_together validation.,"Reviewing PR #8470 for [ticket #13091](https://code.djangoproject.com/ticket/13091), I noted a missing test for the important `commit=False` idiom, with partial `unique_together` validation:  

```
if form.is_valid():    
    instance = form.save(commit=False)
    # Set some attributes...
    instance.save()
```

This PR adds a test for that case. 

(Based on Carl Meyer's longstanding assessment of that ticket.) ",carltongibson,None,2018-07-23T10:25:15Z,2018-07-25T22:39:36Z
10215,Fix ensure connection,,spenly,None,2018-07-23T05:23:24Z,2018-07-23T06:38:00Z
10214,fix django.db.backends.base.base.BaseDatabaseWrapper.ensure_conntion(),,spenly,None,2018-07-23T04:43:19Z,2018-07-23T05:12:04Z
10213,Fixed #29560 -- Added --force-color management command option.,Add `--force-color` option to management command([ticket 29560](https://code.djangoproject.com/ticket/29560)),hramezani,None,2018-07-22T17:15:08Z,2018-09-11T16:47:47Z
10212,Fixed #29576 -- Corrected the test client's HTTP_COOKIE header.,Tested add to https://github.com/django/django/pull/10200.,timgraham,None,2018-07-21T21:20:51Z,2018-07-21T22:35:57Z
10211,Fixed test_migrate_syncdb_deferred_sql_executed_with_schemaeditor() on Oracle.,Test failures introduced in 8d4ab0c41fa0c4243e7c762de6e6077bb884c048.,felixxm,None,2018-07-21T18:37:20Z,2018-07-22T06:48:24Z
10210,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,Ticket [29569](https://code.djangoproject.com/ticket/29569).,felixxm,None,2018-07-21T11:36:24Z,2018-07-25T06:00:58Z
10209,Fixed #29582 -- Fixed a crash when using SearchVector with non text-fields.,"The PostgreSQL `concat()` function handles nulls and non-text values better than
the `||` operator.

https://code.djangoproject.com/ticket/29582",charettes,None,2018-07-21T01:28:15Z,2018-07-22T01:35:04Z
10208,Improved inspectdb readability with namedtuple attributes.,,timgraham,None,2018-07-20T22:49:04Z,2018-07-20T23:58:27Z
10207,Added tests for migrate logging and error messages.,,timgraham,None,2018-07-20T21:25:49Z,2018-07-21T22:29:16Z
10206,Extracted get_search_results into a standalone function,This code is useful outside the admin too.,gavinwahl,None,2018-07-20T19:10:56Z,2018-07-21T21:23:58Z
10205,Clarify that a development server restart is needed after creating st…,"…atic files

For new users, it's not obvious that a server restart is required since static files are only collected on server restart.",m0llux,None,2018-07-20T14:23:03Z,2018-07-20T14:53:17Z
10204,HttpResponse import not required in tutorial 04 code,The HttpResponse import was not required. Hence edited.,craigdanj,None,2018-07-20T10:02:39Z,2018-07-20T10:14:43Z
10203,Fixed #29563 -- Added result streaming for QuerySet.iterator() on SQLite.,"Fixed a bug that enabled Queryset.iterator() in SQLite in contrary to
the documentation. Updated the documentation and enabled the
can_use_chunked_reads flag in SQLite.

https://code.djangoproject.com/ticket/29563

I have yet to incorporate the latest feedback from the ticket comments, but I'm opening this now to get the CI tests.",brownan,None,2018-07-20T00:35:09Z,2018-07-25T22:34:56Z
10202,Fixed #29578 - Made numberformat.format() honor forced l10n usage,Thanks Sassan Haradji for the bug report.,claudep,None,2018-07-19T18:18:03Z,2018-07-19T21:19:51Z
10201,Fixed #29570 - Added check that MEDIA_URL isn't in STATIC_URL,"The check runs only in development mode, since that is what the warning
warns about",alito,None,2018-07-19T04:31:15Z,2018-08-23T14:10:39Z
10200,Fixed #29576 -- Corrected the test client's HTTP_COOKIE header.,"This existing implementation wrongly constructs cookies into:
' sessionid=helloworld; Domain=None; expires=None; Max-Age=None; Path=/'

For the given example, this fix will correct the construction to be:
'sessionid=helloworld'",thngkaiyuan,None,2018-07-19T02:07:52Z,2018-07-21T23:28:30Z
10199,Fixed #26352 -- Made system check allow ManyToManyField to target the same model if through_fields differs.,See https://code.djangoproject.com/ticket/26352,simonw,None,2018-07-18T22:23:41Z,2019-02-05T23:10:36Z
10198,Fixed #26352 - allow m2m through same model if through_fields differs,See https://code.djangoproject.com/ticket/26352,simonw,None,2018-07-18T22:22:41Z,2018-07-18T22:23:14Z
10197,Fixed #29568 -- Removed unnecessary UPDATE queries creating child models.,Explained in details in https://code.djangoproject.com/ticket/29568,FrancoisDupayrat,None,2018-07-18T19:50:54Z,2018-07-20T12:59:16Z
10196,Fixed #29570 - Added check that MEDIA_URL isn't in STATIC_URL,"The check runs only in development mode, since that is what the warning
warns about",alito,None,2018-07-18T16:06:58Z,2018-07-19T04:07:18Z
10195,Fixed grammar in various comments and documentation.,"I searched with `grep -r -E "" (\w) \1 ""`, and ignored matches in `1.11.txt`, `1.9.txt` and `1.8.txt` (the pattern `the the` is found there).",atombrella,None,2018-07-18T11:21:28Z,2018-07-18T11:36:45Z
10194,Fixed #28540 -- Added FILE_UPLOAD_PERMISSIONS to deploymet checklist.,"This is an attempt at [Tim's suggestion](https://code.djangoproject.com/ticket/28540#comment:11) to add `FILE_UPLOAD_PERMISSIONS` to the deployment checklist. 

> ... attempt... 

Happy to take input on the wording. 🙂

",carltongibson,None,2018-07-18T10:13:16Z,2018-08-04T15:06:29Z
10193,fixed #29572 -- Use pymysql instead of mysqldb to solve the compatibility problem that python3 can't use mysqldb package.,"Use pymysql instead of mysqldb to solve the compatibility
problem that python3 can't use mysqldb package.

fixed #29572 -- Use pymysql instead of mysqldb to solve the
compatibility problem that python3 can't use mysqldb package.",BobDu,None,2018-07-18T07:04:35Z,2018-07-18T10:41:47Z
10192,Removed duplicate words in various comments.,Follow up to #10191.,felixxm,None,2018-07-18T04:15:49Z,2018-07-18T17:08:03Z
10191,Fixed a typo in the 2.1 release notes,"Straightforward, just a word duplicated by mistake I guess",mlorant,None,2018-07-17T16:00:47Z,2018-07-18T15:24:07Z
10190,Reflected force_text to str change in utils.html.escape docs,,claudep,None,2018-07-17T08:48:49Z,2018-07-18T18:20:20Z
10189,Linked two docs occurrences of utils.html.escape,,claudep,None,2018-07-17T08:43:22Z,2018-07-18T15:48:51Z
10188,docs: </topics/db/examples/one_to_one>,"Since reporter field in the example is not nullable, 

`new_article2 = Article.objects.create(headline=""Paul's story"", pub_date=date(2006, 1, 17))`

 gives error

> django.db.utils.IntegrityError: NOT NULL constraint failed: polls_article.reporter_id",Gambitier,None,2018-07-17T07:04:21Z,2018-07-19T19:49:36Z
10187,Fixed django/http/request.py docstring typo.,,francoisfreitag,None,2018-07-16T07:52:53Z,2018-07-16T08:55:59Z
10186,Fixed #29501 -- Allowed dbshell to pass options to the underlying tool.,https://code.djangoproject.com/ticket/29501,introquest,None,2018-07-16T06:44:22Z,2019-09-05T11:09:34Z
10185,Fixed #25884 -- Fixed migrate --run-syncdb when specifying an app label,"Previous behavior was to sync all unmigrated apps, and specifying an app
label would raise a CommandError.
https://code.djangoproject.com/ticket/25884",sguermond,None,2018-07-16T03:38:19Z,2018-11-14T23:49:29Z
10184,Fixed #28917 -- Fixed Paginator unordered warning for EmptyQuerySet.,"https://code.djangoproject.com/ticket/28917

Credit to @carltongibson for the idea and @weijunji
for the initial patch.",jschneier,None,2018-07-15T21:50:10Z,2018-07-16T18:51:55Z
10183,Fixed #29565 -- Fixed SyntaxError in Python 3.7,,federicobond,None,2018-07-15T02:27:37Z,2018-07-15T06:32:08Z
10182,Merge remote-tracking branch 'refs/remotes/django/master',,cnweinan,None,2018-07-14T20:49:51Z,2018-07-14T20:56:12Z
10181,Fixed #29412 -- Stopped marking slugify result as HTML safe,https://code.djangoproject.com/ticket/29412,claudep,None,2018-07-14T12:12:45Z,2018-07-21T07:34:09Z
10180,Fixed #29040 -- Used consistent stream to output database creation messages,,claudep,None,2018-07-14T10:06:41Z,2018-07-20T06:37:18Z
10179,Fixed #29412 -- Stopped marking slugify result as HTML safe,,claudep,None,2018-07-14T08:51:22Z,2018-07-14T12:11:36Z
10178, Fixed #28862 -- Disabled optimization of AlterFooTogether and RemoveField.,https://code.djangoproject.com/ticket/28862,charettes,None,2018-07-14T04:41:26Z,2018-07-19T22:06:52Z
10177,Fixed #29542 -- Fixed invalid SQL if a Subquery from the HAVING clause is used in the GROUP BY clause.,"Ticket [29542](https://code.djangoproject.com/ticket/29542).

~This will not work on Oracle because it doesn't support subqueries in a `GROUP BY` clause, it raises _""ORA-22818: subquery expressions not allowed here""_. I will send another PR that should be merged in advance with a new feature flag and additional tests.~",felixxm,None,2018-07-12T08:49:26Z,2018-07-14T10:04:46Z
10176,Allow the cache template tag to take a function that adds context data.,"Django provides template fragment caching, such as :
```
{% load cache %}
{% cache 500 sidebar %}
    .. sidebar ..
{% endcache %}
```
But the variable `sidebar` still to be passed to the template every time, otherwise the fragment is blank when the cache expires.

If the data acquisition process is time consuming, then the fragment cache is to exist in name only.

So, this RP provides another way to improve it.

It allows provide a callable object to tell module how to get data, and the function return a dict. and **only call function when cache expires**.

## Use
for example in views.py:
```
import time
def get_data(num=10):
    time.sleep(3)
    return {'nums': list(range(num))}  # return dict object

def test(request):
    return render(request, 'test.html', {'get_data': get_data})
```
and in the template:
```
{% load cache %}
{% cache 500 get_data 6 %}
    <ul>
        {% for i in nums %}
            <li> {{ i }}</li>
        {% endfor %}
    </ul>
{% endcache %}
```
",hongweipeng,None,2018-07-12T07:05:06Z,2018-09-09T08:16:43Z
10175,Fixed #28478 -- Make DiscoverRunner skip creating unused test databases.,"Here's a refined version of the patch for #28478. I opted for not including support for `databases = '__all__'` for an exact replacement of `multi_db = True` because the assertion error should make it clear from now on which action should be taken while we were previously silently leaking non-default database changes between tests.

You can test the database skipping work appropriately by testing app that don't require database interactions (e.g. `./runtests.py csrf_tests`)

~~There still a bit of work left:~~

- [x] Test the deprecation warnings.
- [x] Test disallowed database accesses on `TestCase` and `TransactionTestCase` (current only `SimpleTestCase` is tested).
- [x] Raise `ImproperlyConfigured` when `databases` contain unrecognized aliases to help with typos.
- [x] Document the deprecation and the new `databases` attribute.
- [x] Add release notes.

https://code.djangoproject.com/ticket/28478",charettes,None,2018-07-12T04:30:21Z,2019-01-11T01:05:40Z
10174,Fixed #29559 -- Fixed TransactionTestCase.reset_sequences for auto-created m2m through models.,"Properly detect whether a m2m is intermediate or not.

Open question remains whether `f.remote_field.through` can ever be `None`. Left check for safety reason for now.",sliverc,None,2018-07-11T08:23:17Z,2018-07-12T01:04:42Z
10173,Simplified BaseContext.__iter__().,,sir-sigurd,None,2018-07-11T04:33:23Z,2018-07-11T13:16:57Z
10172,Added asserts for all warnings in deprecation tests.,"When tests run with Python warnings enabled, catches warnings of the form:

```
.../django/tests/deprecation/tests.py:77: DeprecationWarning: `Deprecated.old` method should be renamed `new`.
  class Deprecated(Renamed):
.../django/tests/deprecation/tests.py:133: DeprecationWarning: `DeprecatedMixin.old` method should be renamed `new`.
  class Deprecated(DeprecatedMixin, RenamedMixin, Renamed):
.../django/tests/deprecation/tests.py:54: DeprecationWarning: `Manager.old` method should be renamed `new`.
  class Manager(metaclass=RenameManagerMethods):
.../django/tests/deprecation/tests.py:96: DeprecationWarning: `Deprecated.old` method should be renamed `new`.
  class Deprecated(metaclass=RenameManagerMethods):
```",jdufresne,None,2018-07-11T02:16:40Z,2018-07-11T13:17:16Z
10171,Fixed #20147 -- Added HttpRequest.headers.,"Original PR (with discussion included): https://github.com/django/django/pull/9925

I've rebased from master and squashed all the commits into one.",santiagobasulto,None,2018-07-10T20:56:43Z,2019-01-16T21:08:14Z
10170,Completed test coverage for django.urls.utils.get_callable().,,hramezani,None,2018-07-10T19:17:36Z,2018-07-19T20:48:24Z
10169,Fixed #29045 -- Fixed admin CSS so that select multiple elements honor the HTML size attribute.,"Multiple select controls in the Django admin pages were not honoring the
size HTML attribute. The underlying cause was a style rule for the
select element that forced the height to 30px. Fixing the issue was as
simple as introducing a new rule for the select[multiple] case.",jgbishop,None,2018-07-10T15:14:47Z,2018-07-11T00:40:21Z
10168,Removed Oracle fetchmany() and fetchall() wrappers.,Follow up to e06cab260049bb58eafdc4f60ac50a5f3759c38c.,sir-sigurd,None,2018-07-10T13:06:48Z,2018-07-10T19:41:51Z
10167,Fixed #29557 -- Added call_on_commit decorator.,Added a decorator to easily make a function only be called after at commit.,obayemi,None,2018-07-10T11:49:15Z,2018-07-11T07:59:15Z
10166,Deleted a unnecessary variable assignment in SQLCompiler.get_related_…,…selections.,atombrella,None,2018-07-10T11:20:23Z,2018-07-10T13:38:20Z
10165,Simplified HttpRequest.__iter__().,,sir-sigurd,None,2018-07-10T05:14:17Z,2018-07-10T13:14:58Z
10164,Fixed unclosed test files to avoid ResourceWarning,"When Django tests with Python warnings enabled, fixes the warning of the form:

```
.../django/tests/file_storage/tests.py:598: ResourceWarning: unclosed file <_io.BufferedReader name='...'>
  self.assertEqual(self.storage.open(name).read(), content_1)
.../django/tests/file_storage/tests.py:603: ResourceWarning: unclosed file <_io.BufferedReader name='...'>
  self.assertEqual(self.storage.open(name).read(), content_2)
```",jdufresne,None,2018-07-10T04:51:34Z,2018-08-18T18:20:16Z
10163,Fixed #29556 -- Changed 'remove_stale_contenttypes --noinput' to delete content types.,https://code.djangoproject.com/ticket/29556,jdufresne,None,2018-07-10T04:22:42Z,2018-07-10T14:41:23Z
10162,Fixed #28862 Removing a field from index_together/unique_together and from the model generates a migration that crashes,update optimizer to correctly order RemoveField after any necessary removal restraints.,jeffyancey,None,2018-07-10T01:53:09Z,2018-08-11T18:35:19Z
10161,Fixed #29549 -- Doc'd that Field.choices are enforced by model validation.,https://code.djangoproject.com/ticket/29549,timgraham,None,2018-07-09T16:44:43Z,2018-07-09T19:06:41Z
10160,Merge pull request #1 from django/master,Updates,jmcclenon,None,2018-07-09T15:42:05Z,2018-07-09T15:49:10Z
10159,Fixed #29553 -- Made test client set Content-Length header to a string rather than integer.,https://code.djangoproject.com/ticket/29553,timgraham,None,2018-07-09T14:06:26Z,2018-07-09T15:44:58Z
10158,Made test for memoryview handling in force_bytes() more strict.,,sir-sigurd,None,2018-07-09T13:19:32Z,2018-07-09T15:29:15Z
10157,A minor fix to support Python 3.7,"Previously threw a ""SyntaxError: Generator expression must be parenthesized"" as the new Python3.7 has added a small ""change in python behavior"" as documented in the python docs: https://docs.python.org/3/whatsnew/3.7.html#changes-in-python-behavior",josdyr,None,2018-07-09T10:13:44Z,2018-07-09T13:57:54Z
10156,Refs #27472 -- Fixed crash during pickling of empty GEOS point.,https://code.djangoproject.com/ticket/27472,sir-sigurd,None,2018-07-09T08:37:52Z,2018-07-09T15:49:14Z
10155,Fixed some assertTrue() that were intended to be assertEqual().,,sir-sigurd,None,2018-07-09T07:23:27Z,2018-07-09T15:29:57Z
10154,"Removed unneded str() calls prior to mark_safe(), simplified mark_safe().",,sir-sigurd,None,2018-07-09T06:32:50Z,2018-07-09T15:29:49Z
10153,Simplified force_bytes().,,sir-sigurd,None,2018-07-09T06:27:18Z,2018-07-09T16:52:19Z
10151,Add check for type of ALLOWED_HOSTS,"Python has strange behavior that is iterating over the list and over the string is done in the same way like  using `for item in str_or_list:`. This makes many bugs to happen. For example, if we set `ALLOWED_HOSTS = 'example.com'` this will perform check of the `Host:` header from a request against each character in this string, but I'm sure that there are no single character domains on the internet.",rafis,None,2018-07-08T12:38:53Z,2020-03-17T09:08:56Z
10150,Add check for type of ALLOWED_HOSTS,"Python has strange behavior that is iterating over the list and over the string is done in the same way like  using `for item in str_or_list:`. This makes many bugs to happen. For example, if we set `ALLOWED_HOSTS = 'example.com'` this will perform check of the `Host:` header from a request against each character in this string, but I'm sure that there are no single character domains on the internet.",rafis,None,2018-07-08T12:29:19Z,2018-07-08T12:38:33Z
10149,Add check for type of ALLOWED_HOSTS,"Python has strange behavior that is iterating over the list and over the string is done in the same way `for item in str_or_list:`. This makes many bugs to happen. For example, if we set `ALLOWED_HOSTS = 'example.com'` this will perform check of the `Host:` header against each character in this string, but I'm sure that there are no single character domains on the internet.",rafis,None,2018-07-08T12:19:01Z,2018-07-08T12:29:02Z
10146,Fixed #29538 -- Added support for ordering related objects by query expressions.,"Added support for ordering related objects by query expressions

https://code.djangoproject.com/ticket/29538",alexandrelaplante,None,2018-07-08T02:45:05Z,2020-06-24T10:48:57Z
10145,Fixed #29546 -- Deprecated timezone.FixedOffset in favor of datetime.timezone.,https://code.djangoproject.com/ticket/29546,sir-sigurd,None,2018-07-07T08:31:04Z,2018-07-10T04:00:38Z
10144,Fixed #29550 -- Made it easier to override pickle.dumps usages protocol.,https://code.djangoproject.com/ticket/29550,charettes,None,2018-07-06T21:58:41Z,2018-07-09T16:22:33Z
10143,"Change Spanish noun for ""sentence""","A `sentencia` is a sentence from a judge, it doesn't fit here. Either `frase` or `oración` works better.",jschneier,None,2018-07-06T20:15:07Z,2018-12-15T21:15:23Z
10142,Removed usage of 'object' variable name in docs.,"`object` is a keyword in python, despite the name of the function `get_object` we shouldn't use the variable name `object` inside the function.",morenoh149,None,2018-07-06T16:44:17Z,2018-07-07T21:13:49Z
10141,Refs #29548 -- Fixed GIS tests on MariaDB,,claudep,None,2018-07-06T16:25:15Z,2018-07-13T21:15:48Z
10140,Fixed #29547 -- Added support for partial indexes.,"- [x] Sort out unneeded casts in lookups, because they unnecessarily cause problems on PostgreSQL.
- [x] Fix the problem with `opclasses` and `IndexError` when a `lookup` is used.
- [x] More tests. Suggestions are welcomed.",atombrella,None,2018-07-06T12:17:28Z,2018-10-30T08:46:15Z
10139,fix juagment self.list_display_links is None,,zhangyi89,None,2018-07-06T09:51:01Z,2018-07-09T01:18:41Z
10138,Corrected cached_property() signature in docs.,,sir-sigurd,None,2018-07-06T09:41:22Z,2018-07-07T08:09:31Z
10137,Refs #29478 -- Doc'd how to use cached_property under the mangled name.,https://code.djangoproject.com/ticket/29478,sir-sigurd,None,2018-07-06T09:31:22Z,2018-07-09T16:43:44Z
10136,Fixed #20584 -- Fixed memcached's get_many() with single-use iterators.,"The Django cache get_many() method is supposed to accept any iterable of
cache keys as input.

However, the Memcache cache get_many() implementation will fail on iterators,
because it tries to iterate over the contents of the iterator more than once.

This change fixes the aforementioned bug by ensuring that the iterator
is consumed only once by get_many().

Thanks to Guyon Morée for the report!",cbarcenas,None,2018-07-06T09:31:16Z,2018-07-09T14:46:24Z
10135,Refs #29548 -- Fix failing tests on MariaDB,https://code.djangoproject.com/ticket/29548,orf,None,2018-07-05T22:54:37Z,2018-07-25T22:39:47Z
10134,Refs #29451 -- Fixed test_isvalid_lookup on MySQL 8+.,Ticket: https://code.djangoproject.com/ticket/29451,orf,None,2018-07-05T20:08:41Z,2018-07-06T13:06:52Z
10133,Fixed #29544 -- Fixed regex lookup on MariaDB.,"The REGEXP_LIKE fuction is currently available only in MySQL
and not in MariaDB.",nijel,None,2018-07-05T08:37:44Z,2018-09-01T14:30:21Z
10132,Refs #26608 -- Removed unneeded name attribute in window functions.,@ngnpope correctly pointed out that `name` is an unneeded attribute.,atombrella,None,2018-07-05T08:24:17Z,2019-08-01T21:58:10Z
10131,Fix typo in json_script docs,Fix typo in the documentation about `json_script` template filter from 8c709d7.,StephenOrJames,None,2018-07-04T14:53:36Z,2018-07-04T17:17:41Z
10130,Fixed #29543 -- Fixed CPointerBase.__del__() ImportError crash.,Fixes [Ticket #29543](https://code.djangoproject.com/ticket/29543),mushtaqak,None,2018-07-04T09:19:59Z,2018-11-18T01:04:52Z
10129,Fixed #29541 -- Fixed crash of Cursor.execute() when Cursor.setinputsizes() is called without arguments with cx_Oracle 6.4.,Ticket [29541](https://code.djangoproject.com/ticket/29541).,felixxm,None,2018-07-03T19:25:48Z,2018-07-04T18:13:41Z
10128,Doc'd that template variables & attributes may not start with an underscore.,,GregKaleka,None,2018-07-03T15:00:11Z,2018-07-04T00:16:53Z
10127,"Fixed #29449 -- Reverted ""Fixed #28757 -- Allowed using contrib.auth forms without installing contrib.auth.""",https://code.djangoproject.com/ticket/29449,timgraham,None,2018-07-02T22:40:28Z,2018-07-02T22:58:29Z
10126,Ticket 29379,modifying the pr: https://github.com/django/django/pull/9921 prevents tests from failing.,jeffyancey,None,2018-07-02T19:47:30Z,2018-08-11T18:35:20Z
10125,Removed unused code in django.db.backends.utils.format_number().,,timgraham,None,2018-07-02T18:11:06Z,2018-07-02T20:10:49Z
10124,Refs #28905 -- Docs for overhaul extra_requires to include more optional dependencies,"https://code.djangoproject.com/ticket/28905
",steph-pg,None,2018-07-02T17:33:17Z,2018-11-19T09:13:12Z
10123,fixes option attrs inherit in ChoiceWidget,,introquest,None,2018-07-02T14:47:24Z,2018-07-02T17:04:36Z
10122,Simplified SQLite adapter for Decimal.,,sir-sigurd,None,2018-07-01T17:35:36Z,2018-07-02T17:42:37Z
10121,Fixed #29500 -- Fixed SQLite function crashes on null values.,"https://code.djangoproject.com/ticket/29500
Test cases are pending.",srinivasreddy,None,2018-06-30T20:50:10Z,2018-08-16T00:48:06Z
10120,Fixed app order in settings for tutorial.,"I was following the tutorial and I got an error that polls.app is not an app...
So after changing the order the error disappeared.",josuablejeru,None,2018-06-30T18:03:53Z,2018-06-30T19:48:38Z
10119,Fix limit_value argument name for validators inheriting from BaseValidator,"The docs sounds like you can write

```py
MaxLengthValidator(max_value=100)
```

but it has to be

```py
MaxLengthValidator(limit_value=100)
```

as it is a subclass of `BaseValidator`.",sedrubal,None,2018-06-30T16:58:32Z,2018-06-30T22:58:36Z
10118,Removed parser.add_arguments() arguments that match the defaults.,,claudep,None,2018-06-30T16:42:06Z,2018-07-03T06:52:15Z
10116,Fixed #28540 -- Checked readability of file uploaded through TemporaryUploadedFile,,claudep,None,2018-06-30T09:13:51Z,2019-02-14T19:46:01Z
10115,"Lowercase ""web,"" per AP Style","According to the Associated Press' official style guide, the word ""web"" has been lowercase [since 2016](https://twitter.com/apstylebook/status/716279539052191746?lang=en). Let's change it here as well.",palewire,None,2018-06-30T01:30:55Z,2018-06-30T23:00:28Z
10114,get_count_queryset method for MultipleObjectMixin (ListView),"At least for MySQL backend, the .count() queries that Django generates could be slow for complex querysets (annotate). In my case, it is 0.006s for normal query compared to 16.6s for .count() query. It seems to me that more Django developers might come across this problem, so I looked into it. The main goal of this PR is to allow a separate QuerySet to be used for count queries that Paginator does. This tweak is backwards-compatible.",kukosk,None,2018-06-29T23:28:52Z,2020-09-04T08:48:55Z
10113,Fixed #29530 -- Fixed aliases ordering when chaining annotate() and filter().,Ticket [29530](https://code.djangoproject.com/ticket/29530).,felixxm,None,2018-06-29T19:24:58Z,2018-07-02T19:10:23Z
10112,Updated docs to use :file: role.,Use `file` role in reStructuredText Markup for directories and files.,bbmokhtari,None,2018-06-29T18:58:03Z,2018-08-05T23:47:46Z
10111,Fixes 29532: Make model/app urls configurable for admin,"Based on 
* Ticket: https://code.djangoproject.com/ticket/29532
* Discussion: https://groups.google.com/d/msgid/django-developers/712bbe7e-91ed-4f63-89c6-f572e2cdfc48%40googlegroups.com
* and Collin's PR https://github.com/django/django/pull/10108

",RamezIssac,None,2018-06-29T16:48:39Z,2018-07-09T14:37:55Z
10109,Fixed #29536 -- Fixed SelectFilter2.js resizing to make boxes have equal height.,,claudep,None,2018-06-29T14:24:39Z,2018-06-29T15:22:57Z
10108,making admin app & model url configurable,https://groups.google.com/d/msgid/django-developers/712bbe7e-91ed-4f63-89c6-f572e2cdfc48%40googlegroups.com,collinanderson,None,2018-06-29T14:06:01Z,2018-06-29T18:10:13Z
10107,Fixed #29535 -- Updated email.MIME* references for Python 3.,,jose-lpa,None,2018-06-29T10:27:39Z,2018-06-29T13:42:32Z
10106,Fixed #29534 -- Made dbshell use rlwrap on Oracle if available.,Design of the code is that another wrapper can easily be used and the way to wrap it can easily be modified.,danizen,None,2018-06-29T04:39:53Z,2018-10-27T00:16:59Z
10105,Fixed #29458 -- Doc'd how related_query_name affects Model._meta.get_field().,added mention of `related_query_name` to doc.,jeffyancey,None,2018-06-28T19:15:40Z,2018-08-11T18:35:56Z
10104,Fixed #29514 -- Fixed get_default_timezone()/utc equality.,https://code.djangoproject.com/ticket/29514,timgraham,None,2018-06-28T15:20:16Z,2018-07-23T14:52:20Z
10103,Refs #28814 -- Documented Python 3.7 compatibility.,,auvipy,None,2018-06-28T10:28:28Z,2019-03-03T08:03:40Z
10102,Fixed #27899 - Postgres SearchVector now supports phrase searching,"Adds to contrib.postgres.search.SearchVector a new parameter
If phrase=True is given, then phraseto_tsquery() is used so as to
support phrase searching, e.g. ""Los Angeles"" or ""Poison Ivy""",gregallensworth,None,2018-06-27T20:59:14Z,2018-09-04T15:32:38Z
10101,Fixed #29520 -- Fixed test client crash when posting bytes.,"Regression in b8a41a2872624a6d9e61308932dd81d001e31eb9.
https://code.djangoproject.com/ticket/29520",timgraham,None,2018-06-27T18:52:46Z,2018-06-28T01:42:33Z
10100,Fixed links for i18n context processor docs.,,timgraham,None,2018-06-27T18:19:02Z,2018-06-28T14:25:50Z
10099,Refs #12663 -- Removed Meta API upgrade guide.,,timgraham,None,2018-06-27T17:22:57Z,2018-06-27T18:02:50Z
10098,Preparation for Filter Expressions/Expression Filters.,"This is in preparation for https://github.com/django/django/pull/8119.

In order to make it possible to have different behaviour when an
expression is to be used _only_ in a WHERE clause, we need to have
some tag on the expression.

I think maybe we need to make the resolve_expression() accept arbitrary
kwargs - it's either that or just add for_where=False.",schinckel,None,2018-06-27T12:36:20Z,2019-08-05T00:24:32Z
10097,Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.,"This PR fixes issue 29528, and adds two new URLs to the test cases. It also removes one URL from the `valid_urls.txt` file that is invalid, and that this fix now correctly rejects.

URLs with un-escaped ""/"", ""@"" or "":"" characters in the username or password fields should be rejected. This fix replaces the `\S` set with its equivalent `[^\s]`, and then adds the above characters to the exclusion set, giving `[^\s:@/]`. ",timb07,None,2018-06-26T23:30:51Z,2018-07-23T14:30:02Z
10096,Refs #28457 -- Tweaked colors/layout of the congrats page for readability.,"These small tweaks were recommended by our CSS / accessibility expert who helped design the ""Congrats"" page, to improve readability. It slightly darkens the main text, and increases the space between the rocket exhaust and the text below it.",FlipperPA,None,2018-06-26T22:25:41Z,2019-09-27T23:43:21Z
10095,admin docs: Add TextField to the list of acceptable list_filter field types,The `list_filter` option has no problem accepting a TextField in addition to CharFields.,nikolas,None,2018-06-26T18:15:43Z,2018-06-28T13:32:37Z
10094,InspectDB cannot make SSISDB tables imports,"I am using the latest 2.x version of django, i am using a SQL 2016 Server from Microsoft and using the django pyodbc azure for connecting to the database, my problem is that i want to generate the models for the SSISDB database that is created when you generate a catalog in MSSQL but when i run the inspectdb doesnt generate the models, instead if i use one of the databases generated by me in the same server it works.  What im i missing?
![captura](https://user-images.githubusercontent.com/40607024/41925676-dde205f4-7932-11e8-9bd5-2376dcfb8e76.PNG)
![captura1](https://user-images.githubusercontent.com/40607024/41925784-345cae70-7933-11e8-9a54-5dcb36c0b13f.PNG)


",angelqb17,None,2018-06-26T16:20:54Z,2018-06-26T19:04:04Z
10093,remove a argument that is keyword parameters(have a default value equal with argument),remove a argument that is keyword parameters(have a default value equal with argument),zwfang,None,2018-06-25T14:06:45Z,2018-06-25T18:25:08Z
10092,Fixed #29523 -- Removed jQuery dependency in DateTimeShortcuts.js,,claudep,None,2018-06-25T10:28:47Z,2018-07-21T07:43:16Z
10091,Refs #29253 -- Fixed method_decorator() crash if decorator sets a new attribute.,"This fixes a regression stated in PR #9819 in this comment:
https://github.com/django/django/pull/9819#issuecomment-399437486",cjerdonek,None,2018-06-24T01:43:43Z,2018-06-27T15:46:08Z
10090,Add optional param to make_list to split a string by a delimiter.,"Update documentation.

https://code.djangoproject.com/ticket/29433

Having problems running the tests on my machine.",StefanoChiodino,None,2018-06-23T22:37:41Z,2018-07-27T20:12:46Z
10089,Fixed #29447 - Made RelatedManager.set() pass bulk argument to clear(),https://code.djangoproject.com/ticket/29447,alextatarinov,None,2018-06-23T22:14:28Z,2018-06-25T17:20:52Z
10088,Fixed #29516 -- Rephrased error message when passing incorrect kwarg to model constructor,,federicobond,None,2018-06-23T10:19:19Z,2018-08-28T18:32:07Z
10087,Fixed #29518 -- Added validation for sqlmigrate's app_label argument,https://code.djangoproject.com/ticket/29518,MyungSeKyo,None,2018-06-23T05:35:26Z,2018-06-25T14:43:13Z
10086,Refs #29506 Added validation for sqlmigrate's app_label argument,https://code.djangoproject.com/ticket/29506,MyungSeKyo,None,2018-06-23T05:20:44Z,2018-06-23T05:33:58Z
10085,Fixed #29517 -- Added support for SQLite column check constraints on positive integer fields.,https://code.djangoproject.com/ticket/29517,timgraham,None,2018-06-22T19:21:45Z,2018-06-26T01:13:45Z
10084,Refs #17419 -- Removed IE8 support in json_script example.,,timgraham,None,2018-06-22T13:48:34Z,2018-06-22T14:53:43Z
10083,Expanded docs for equals and same_as GIS lookups.,,sir-sigurd,None,2018-06-22T09:48:38Z,2018-06-22T14:20:51Z
10082,Fixed #29525 -- Allowed is_safe_url()'s allowed_hosts arg to be a string.,"https://code.djangoproject.com/ticket/29525

When `allowed_hosts` is passed in incorrectly as a string instead of as a sequence of strings like this

    >>> is_safe_url('http://good.co/evil', allowed_hosts='good.com')
    True

`is_safe_url()` will return `True` for some cases which might be exploited.

This is an attempt to fix this.",suligap,None,2018-06-22T09:36:13Z,2018-06-29T15:29:00Z
10081,Fixed #29514 -- Made get_default_timezone() use module utc instance.,"Regression in 27ca5ce19f5f184018a61611c1bc319113b1d107.

https://code.djangoproject.com/ticket/29514",carltongibson,None,2018-06-22T09:17:48Z,2018-06-28T15:30:28Z
10080,Refs #29513 -- Linked the testing docs from the multi-db topic guide.,https://code.djangoproject.com/ticket/29513,mcattarinussi,None,2018-06-21T22:21:12Z,2018-06-29T00:29:08Z
10079,Fixed #21333 -- Doc'd the & and | queryset operators.,https://code.djangoproject.com/ticket/21333,crdoconnor,None,2018-06-21T20:02:17Z,2018-06-30T00:57:08Z
10078,Updated a test example to use snake case,"Although unittest finds any method starting `test`, this is the more common style, and what Django itself uses.",adamchainz,None,2018-06-21T19:27:40Z,2018-06-22T07:06:52Z
10077,Fixed #29504 -- Clarified interpretation of integer JSONField lookups.,"As per [Ticket 29504](https://code.djangoproject.com/ticket/29504) this is an attempt to clarify the interpretation of ""integer"" keys.",ShaheedHaque,None,2018-06-21T17:27:23Z,2018-06-29T14:47:41Z
10076,Corrected location of some contenttypes_tests.,,timgraham,None,2018-06-21T16:06:19Z,2018-06-21T17:17:50Z
10075,Fixed #29511 -- Added charset to JavaScriptCatalog's Content-Type header.,https://code.djangoproject.com/ticket/29511,timgraham,None,2018-06-21T15:14:02Z,2018-06-22T13:24:05Z
10074,Removed views.i18n.null_javascript_catalog().,Unused since de40cfbe74642df1e94c131e1adaa3363173c0cf.,timgraham,None,2018-06-21T15:10:04Z,2018-06-21T15:56:48Z
10073,Fixed #29509 -- Added SpatiaLite support for covers and coveredby lookups.,https://code.djangoproject.com/ticket/29509,sir-sigurd,None,2018-06-21T09:25:01Z,2018-06-21T13:27:38Z
10072,Refs #28841 -- Added forgotten documentation for ForcePolygonCW GIS function.,,sir-sigurd,None,2018-06-21T04:33:18Z,2018-06-21T12:56:23Z
10071,Fixed #29508 -- Use import_string to import login_form in AdminSite,See https://code.djangoproject.com/ticket/29508,remilapeyre,None,2018-06-20T14:32:19Z,2018-06-21T09:59:56Z
10070,Set max_line_length for docs in .editorconfig.,,sir-sigurd,None,2018-06-20T10:55:45Z,2018-06-20T13:25:38Z
10069,Fixed #29507 -- Added Oracle support for Envelope GIS function.,https://code.djangoproject.com/ticket/29507,sir-sigurd,None,2018-06-20T10:47:26Z,2018-06-20T13:25:32Z
10068,Fixed #29467 -- Made override_settings handle errors in setting_changed signal receivers. ,"https://code.djangoproject.com/ticket/29467

Check 3 things when using `override_settings`:
1. It returns the receiver exception
   when at least one of the receivers fail.
2. It restores original settings when exception occurs.
3. It calls *every* receiver when exiting the context
   and reraises the first exception that occured.

Check that for 3 cases of exception occurance in the receiver
- exception occurs when a receiver is called with `enter=True`
- exception occurs when a receiver is called with `enter=False`
- exception occurs regardless of the `enter` keyword argument.

I've introduced 4 custom and (hopefully) unique setting names
and used them for testing.

A receiver handles those settings:
- `SETTING_BOTH` raises an error while receiving the
  signal on both entering and exiting the context manager
- `SETTING_ENTER` raises an error only on enter.
- `SETTING_EXIT` raises an error only on exit.
- `SETTING_PASS` passes without errors.

*Re: 1. It returns the receiver exception...*

Because ""errors should never pass silently"".

*Re: 2. It restores original settings when exception occurs.*

I think that's pretty obvious - that's the main pain point of #29467

*Re: 3. It calls every receiver when exiting the context...*

One of the patterns for connecting to the `setting_changed` signal is to
prepare a valid environment when the change occurs and clean it up when
the setting is restored (e.g. see `django.test.signals` module).
When an exception occurs while entering the `override_settings`
context manager we want to make sure to propagate that error,
but also it makes sense to ensure that every receiver is called when
exiting the context so that receivers have a chance to clean up after
themselves.

**Example:**

Given a list of receivers for `setting_changed` signal:
- a receiver X that fails only when passed `enter=False`,
- `django.test.signals.static_finders_changed`,
- others.

While calling e.g. `override_settings(STATIC_ROOT=new_path)`
we want to make sure that outside of that manager we not only have
restored the `STATIC_ROOT` setting after receiver X failed,
but also that we've cleared the cache for staticfiles finder.

Similar examples could be made with most of the receivers from
`django.test.signals` module.


EDIT:
I've updated the description after cfa613be5c72a7",slafs,None,2018-06-20T10:19:55Z,2018-09-15T19:54:35Z
10067,Fixed #29467 -- Ensured override_settings catches signal handler error on enter/exit.,"**WIP**: This is a sketch at [#29467](https://code.djangoproject.com/ticket/29467) to see what the issues are.

From the ticket: 

> `override_settings` context manager should be more defensive inside the ""enter"" part when the `setting_changed` signal is sent. 

So the simplest thing possible is just to wrap the `setting_changed.send()` in a `try...except..`. This is that. 

When run against PR #10020 we see the expected 3 failures from the new regression tests. 

* What's wrong with this approach? 
* Where we `pass` what should we output there? (A warning presumably.) 
* Is there any way to promote that to a test failure (for the current test only)? (Should we try to?)

@slafs Can you comment? (Ta!)",carltongibson,None,2018-06-20T09:27:41Z,2018-06-21T08:05:32Z
10066,Fixed #29501 -- Added support for ./manage.py dbshell -c SQL.,,cedric05,None,2018-06-20T03:20:12Z,2018-06-28T06:48:54Z
10065,Refs #29451 -- Fixed regex queries on MySQL 8.,"Ticket: https://code.djangoproject.com/ticket/29451

Not sure if we actually test against 8 in the CI, but it passes on my local machine ™️ ",orf,None,2018-06-19T22:41:10Z,2018-06-20T15:42:19Z
10064,Clarified sentence about removal of inline flag support in url().,"The current wording is very obscure so I changed it a bit, best could even be to [link to the issue](https://code.djangoproject.com/ticket/27648) but it looks like it's not the current practice.",mdamien,None,2018-06-19T08:53:10Z,2018-06-19T13:15:06Z
10063,Fixed #29506 -- Added validation for migrate's app_label option.,https://code.djangoproject.com/ticket/29506,claudep,None,2018-06-19T07:39:24Z,2018-06-20T20:30:18Z
10062,Refs #29449 -- Documented that auth forms expect USERNAME_FIELD to be a CharField.,"Adjusts the [docs changes from 3333d935d2914](https://github.com/django/django/commit/3333d935d2914cd80cf31f4803821ad5c0e2a51d#diff-b07fab64b491042224a7d4e823a80202L823) to state the requirement for `USERNAME_FIELD` to be a `CharField` subclass. 

",carltongibson,None,2018-06-19T07:11:37Z,2018-06-20T00:34:42Z
10061, Fixed #29506 -- Added migrate error if app is invalid,https://code.djangoproject.com/ticket/29506#ticket,MyungSeKyo,None,2018-06-19T03:57:36Z,2018-06-19T12:14:24Z
10060,Fixed #29503 -- Made __in lookup keep order of values in query.,"Regression in 86eccdc8b67728d84440a46e5bf62c78f2eddf6d.

Ticket [#29503](https://code.djangoproject.com/ticket/29503).",pope1ni,None,2018-06-18T14:20:07Z,2018-06-20T18:56:56Z
10059,Fixed #29502 -- Allowed autocomplete_fields to function with only view permission to related object,https://code.djangoproject.com/ticket/29502,carltongibson,None,2018-06-18T08:34:35Z,2018-06-19T13:10:31Z
10058,Fixed #29496 -- Fixed crash on Oracle when converting a non-unique field to primary key.,Ticket [29496](https://code.djangoproject.com/ticket/29496).,felixxm,None,2018-06-16T18:34:47Z,2018-06-17T06:51:36Z
10057,Fixed #29469 -- Added a helpful makemigrations error if app_label contains dots.,"https://code.djangoproject.com/ticket/29469

https://github.com/django/django/pull/10052",MyungSeKyo,None,2018-06-16T09:15:00Z,2018-06-16T19:18:58Z
10056,Fixed #29469 --Check invalid app name in makemigrations command,"https://github.com/django/django/pull/10052

https://code.djangoproject.com/ticket/29469",MyungSeKyo,None,2018-06-16T08:18:31Z,2018-06-16T08:44:47Z
10055,Fixed #29487 -- Account for object level permissions when calculating readonly fields,Fixed https://code.djangoproject.com/ticket/29487#comment:5,czpython,None,2018-06-15T21:08:43Z,2018-06-16T02:33:53Z
10054,Added missing quotes in ref/databases.txt.,,felixxm,None,2018-06-15T20:20:22Z,2018-06-16T10:43:14Z
10053,Fixed #29498 -- Fixed a missing pyc test file in source distribution.,https://code.djangoproject.com/ticket/29498,timgraham,None,2018-06-15T18:06:41Z,2018-06-15T21:18:04Z
10052,[2.0.x] Fixed #29469 --add error message for invalid app name to make…,"…migrations command

https://code.djangoproject.com/ticket/29469",MyungSeKyo,None,2018-06-15T04:21:23Z,2018-06-16T08:21:31Z
10051,[2.0.x] Fixed #29469 --add error message for invalid app name to makemigrations command,"…migrations command

https://code.djangoproject.com/ticket/29469",MyungSeKyo,None,2018-06-15T02:11:52Z,2018-06-15T04:17:55Z
10050,Fixed #29428 -- Fixed admin changelist crash when using a query expression without asc()/desc() in the ordering.,https://code.djangoproject.com/ticket/26257,timgraham,None,2018-06-14T18:25:37Z,2018-06-15T14:02:56Z
10049,Refs #29493 -- Doc'd that the QuerySet in lookup accepts a string.,"Document unexpected behaviour when a string is passed as an argument to the IN clause
https://code.djangoproject.com/ticket/29493",cleder,None,2018-06-14T17:09:00Z,2018-06-18T09:02:45Z
10048,Fixed #29492 -- Improved compilemessages speed with multithreading.,,claudep,None,2018-06-13T19:39:38Z,2018-06-16T09:53:40Z
10047,Support GIN operator classes and JSON path expressions,Example fixes for https://code.djangoproject.com/ticket/28077 and https://code.djangoproject.com/ticket/28928,OrangeDog,None,2018-06-13T14:33:41Z,2018-06-13T15:15:59Z
10046,implement Django 2.0 plural handling fix to Django 1.11,Implement fix from https://github.com/django/django/commit/2cbb095bec757b804e8b6d9d0930ef3c6446a591#diff-1e9839033582752049574f4b3376bfa3 to Django 1.11,aldian,None,2018-06-12T21:55:46Z,2018-06-13T01:35:24Z
10045,Fixed #29483 -- Confirmed support for GDAL 2.3.,https://code.djangoproject.com/ticket/29483,timgraham,None,2018-06-12T14:12:39Z,2018-06-12T17:35:05Z
10044,Add details about the request in the user_logged_in signal,"The current documentation about `user_logged_in` doesn't clarify whether the session has been cleared post-login or not. I have added some information there, because I searched the web on how to associate anonymous session data with the logged-in user and couldn't find anything, but in testing I realized that `user_logged_in` does exactly the right thing, so this seemed valuable to mention in the docs.",skorokithakis,None,2018-06-12T12:22:11Z,2018-06-19T13:18:15Z
10043,Restored patch_logger() for backwards compatibility,Per discussion in #9905.,jdufresne,None,2018-06-12T03:33:42Z,2018-06-12T16:38:47Z
10042,Fixed #29464 -- Silenced post-process messages in collectstatic's default verbosity.,https://code.djangoproject.com/ticket/29464,arthurspa,None,2018-06-09T22:14:33Z,2018-06-12T00:50:00Z
10041,Added test for incorrect mime-type and size in MultiPartParser.,,atombrella,None,2018-06-09T17:43:35Z,2018-06-12T18:42:21Z
10040,Fixed 'invalid escape sequence' warning in GEOSGeometryBase.from_ewkt().,,timgraham,None,2018-06-08T23:44:43Z,2018-06-09T10:05:45Z
10039,Fixed #29152 -- Allowed passing kwargs to ArgumentParser initialization in management commands.,"CommandParser now takes additional arguments to be passed on to ArgumentParser upon initialization through kwargs. Test suite passing, but regression test and pertinent documentation for this enhancement is still pending (working on it). 
I'd be glad to receive some feedback on my proposed fix.",humbertotm,None,2018-06-08T19:25:18Z,2018-06-22T13:21:17Z
10038,Dropped support for GDAL 1.9 and 1.10.,,timgraham,None,2018-06-08T19:09:25Z,2018-06-11T12:33:20Z
10037,Refs #29483 -- Relaxed WGS 84 check regex,"With GDAL 2.3, the exact string changed again.",claudep,None,2018-06-08T18:22:44Z,2018-06-09T07:20:24Z
10036,Updated GIS install instructions to use placeholders for GIS library versions.,"GEOS 3.4.2 reportedly does not work fully as expected. Bump GEOS recommended version to 3.6.2.

https://www.reddit.com/r/django/comments/8pim8i/how_do_i_request_an_edit_in_the_geodjango/",brylie,None,2018-06-08T15:58:41Z,2018-06-13T09:24:54Z
10035,Fix #29478 cached_property decorator doesn't work with mangled method…,… names,hehaha,None,2018-06-08T11:54:39Z,2018-06-08T13:06:20Z
10034,Fixed #29474 -- Simplified BaseInlineFormset.save_new().,https://code.djangoproject.com/ticket/29474,timgraham,None,2018-06-08T01:18:38Z,2018-06-08T01:44:06Z
10033,Fixed #29478 -- Added support for mangled names to cached_property.,https://code.djangoproject.com/ticket/29478,graingert,None,2018-06-07T13:04:11Z,2018-11-19T19:06:18Z
10032,[WIP] Added test for #29452.,https://code.djangoproject.com/ticket/29452,ramiro,None,2018-06-07T11:49:18Z,2018-06-08T12:29:14Z
10031,Increase test coverage of `createsuperuser` management command,,hramezani,None,2018-06-07T08:41:04Z,2018-06-08T00:45:45Z
10030,Refactored naturaltime to use a class-based formatter,,claudep,None,2018-06-07T06:24:39Z,2018-06-08T16:01:50Z
10029,[WIP] Refs #29392 -- Added command line short option `-s` for specifying setting.,"PR #9933 (for [ticket #29392](https://code.djangoproject.com/ticket/#29392)) removed the ability to use abbreviations of the shared options in commands. The key one there is `--settings`. 

Why? Because you couldn't define a command with e.g. a `--set` option, as this was getting swallowed as `--settings` by the first _pre-run_ parser. (This even though it's unambiguous to the final command parser.) 

Someone at DjangoCon (who will remain anonymous 🙂) said this was a usability back-step: in the shell they were used to doing something like `--s` and having it work. 

The example provided in the bug report struck me (and still does) as compelling. I think it was the right fix (correctness trumping convenience) but I'm opening this to discuss. 

This PR adds a short option `-s` to `--settings`. The hope is, that's the best of both worlds. 

BC Issues: 

* `makemessages` already uses `-s`. It does this for `--symlinks`. I'd argue moving it to `--settings`  is a win (`--settings` is always in use, `--symlinks` how often?) (Discuss)
* User-land commands may be using `-s`. Again, I'd probably be happy to steal that. (Discuss.) 

Other options: 

* Leave it as-is. 
* Revert the change from #9933. 

Todo to merge: 

- [ ] Update 2.1 release notes with extra changes. 
- [ ] Update `django-admin.txt` with changes to `--settings` in general and `makemessages` in particular. 
- ...anything else...?

Is this worth A) a new ticket, B) a post to Django Developers?",carltongibson,None,2018-06-06T14:07:33Z,2018-06-08T11:05:32Z
10028,Refs #29451 -- Fixed invalid SQL on PostgreSQL in queries tests.,Regression in a253a580e6f20fb7087490225538422eb6cab0bb,carltongibson,None,2018-06-06T13:44:53Z,2018-06-06T14:22:08Z
10027,Fixed #24384 -- Allowed compilemessages to continue running after nonfatal errors.,,claudep,None,2018-06-06T09:35:16Z,2018-06-13T19:28:51Z
10026,Fix typo in customizing authentication docs,"There was an ill-formed sentence that didn't make sense in the 'customizing authentication'
page for Django's authentication system.",Maktm,None,2018-06-06T00:20:59Z,2018-06-06T01:52:58Z
10025,Removed unused HttpRequest._post_parse_error attribute.,"Unused since 8f8c54f70bfa3aa8e311514297f1eeded2c32593.

While investigating [#29427](https://code.djangoproject.com/ticket/29427) I discovered this unused property. I'm not sure if `_mark_post_parse_error` is still the correct name for the function that remains.",jschneier,None,2018-06-05T20:44:06Z,2018-06-07T22:51:34Z
10024,Fixed #29419 -- Allowed permissioning of admin actions.,https://code.djangoproject.com/ticket/29419,carltongibson,None,2018-06-05T13:15:10Z,2018-06-22T07:35:06Z
10023,Fixed #29396 -- Fixed crash when using __year lookup with OuterRef.,https://code.djangoproject.com/ticket/29396,Windsooon,None,2018-06-05T09:40:27Z,2019-05-21T04:43:21Z
10022,Refs #29353 -- Removed duplicated logic in StaticFilesHandler.get_response,Thanks Sergey Fursov for spotting the issue.,claudep,None,2018-06-05T07:19:18Z,2018-06-05T11:42:03Z
10021,Refs #29451 -- Quoted MySQL column names in tests,Ticket: https://code.djangoproject.com/ticket/29451,orf,None,2018-06-04T23:34:20Z,2018-06-06T13:54:02Z
10020,Refs #29449 -- Added tests for custom user forms regression.,"As described in [#29449](https://code.djangoproject.com/ticket/29449)
those are the tests that should still pass with the recent change in
3333d935d2914c.

The regression is about assuming CharField subclass for
username field on a form. Those tests use the already existing
`CustomUserWithFK` testing model that has username field as a
foreign key to the different `Email` model.",slafs,None,2018-06-03T20:29:28Z,2018-07-02T23:15:33Z
10019,Fixed #29374 -- Order date format strings by semantic meaning,"Date formatting strings ordered similarly to the example set by the PHP documentation.

- Day
- Week
- Month
- Year
- Time
- Timezone
- Timestamp",sesh,None,2018-06-03T01:50:18Z,2018-06-04T13:37:42Z
10018,Fixed #29461 -- Fixed ogrinspect test_time_field failure on SpatiaLite.,https://code.djangoproject.com/ticket/29461,timgraham,None,2018-06-02T03:02:28Z,2018-06-02T11:34:38Z
10017,Fixed #29484 -- Removed the need to specify SPATIALITE_LIBRARY_PATH with Spatialite 4.2+.,https://code.djangoproject.com/ticket/29484,claudep,None,2018-06-01T16:27:32Z,2018-06-09T07:26:53Z
10016,[2.0.x] Bumped version for 2.0.6 release.,"Jenkins is [showing a failure for the 2.0.x branch](https://djangoci.com/job/django-2.0/lastFailedBuild/).

That doesn't look right. I'm just using this to verify. ",carltongibson,None,2018-06-01T09:51:24Z,2018-06-01T15:07:48Z
10015,Minor correction in outputting-csv.txt,A typo in the docs,shubhamdipt,None,2018-06-01T09:48:23Z,2018-06-01T10:13:42Z
10014,Fixed #29460 -- Added support for GEOS 3.6.,https://code.djangoproject.com/ticket/29460,timgraham,None,2018-05-31T13:58:33Z,2018-05-31T15:36:06Z
10013,File extension method,"Why not? Sometimes I want to use file extension for some checks. I think it will be better if method will be native.
(it's only scratch now)",fobiasmog,None,2018-05-31T10:33:36Z,2018-07-27T21:28:14Z
10012,Refs #29416 -- Fixed GeoExpressionsTests.test_multiple_annotation() failure on MySQL 5.7.,"Failure introduced in b6e48f514ebe4e31b76e1750e043d4f296e645dc.

Ticket [29416](https://code.djangoproject.com/ticket/29416#comment:17).",felixxm,None,2018-05-30T20:24:54Z,2018-05-31T16:47:56Z
10011,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,,qq55912192,None,2018-05-30T16:58:26Z,2018-05-31T02:20:07Z
10010,Fixed #29430 -- Clarified send_mail()'s fail_silently docs.,"Fix for https://code.djangoproject.com/ticket/29430

Documentation for ```fail_silently``` was slightly confusing and needed rewording. The following change should clarify what the boolean option's purpose is.",zubhav,None,2018-05-30T10:45:38Z,2018-06-02T15:10:24Z
10009,Fixed #29457 -- Allowed spaces between augment separator and augments…,"… in template filter

https://code.djangoproject.com/ticket/29457",MyungSeKyo,None,2018-05-30T08:43:48Z,2018-05-30T09:12:00Z
10008,Doc'd how to set SPATIALITE_LIBRARY_PATH for Debian Buster/Ubuntu 18.04.,"On Debian buster/testing and Ubuntu 18.04, I've found that `SPATIALITE_LIBRARY_PATH = 'mod_spatialite'` doesn't work.

I've been successfully using `SPATIALITE_LIBRARY_PATH = '/usr/lib/x86_64-linux-gnu/mod_spatialite.so'`, so I'm adding this note to the docs here.",nikolas,None,2018-05-29T16:51:21Z,2018-06-13T14:22:02Z
10007,Fixed #29462 -- Fixed ogrinspect test failures with GDAL 2.2.,"In the version that gives `srid=-1`, `layer.srs` in https://github.com/django/django/blob/5008d59a2a8b9df09737fc05c9e343146a348a90/django/contrib/gis/utils/ogrinspect.py#L218-L227
is
```
GEOGCS[""GCS_WGS_1984"",
    DATUM[""WGS_1984"",
        SPHEROID[""WGS_84"",6378137,298.257223563]],
    PRIMEM[""Greenwich"",0],
    UNIT[""Degree"",0.017453292519943295]]
```
In the new version, it's:
```
GEOGCS[""GCS_WGS_1984"",
    DATUM[""WGS_1984"",
        SPHEROID[""WGS_84"",6378137,298.257223563]],
    PRIMEM[""Greenwich"",0],
    UNIT[""Degree"",0.017453292519943295],
    AUTHORITY[""EPSG"",""4326""]]
```
I guess we might check GIS library release notes for something relevant.",timgraham,None,2018-05-29T15:54:49Z,2018-06-02T02:32:40Z
10006,Relaxed a GDAL raster test.,The exact metadata depends on the GDAL version.,timgraham,None,2018-05-29T15:48:04Z,2018-05-30T01:40:05Z
10005,Refs #14357 -- Deprecated Meta.ordering affecting GROUP BY queries.,https://code.djangoproject.com/ticket/14357,ramiro,None,2018-05-29T12:55:20Z,2020-06-25T13:13:36Z
10004,Fixed #29385 -- Made Admindocs ModelDetailView show model properties.,"Included the fix from PR #9929, and added the appropriate unit test for it. Documentation still missing as I am not quite sure what to add about this enhancement that is not already covered in [The Django admin documentation generator](https://docs.djangoproject.com/en/2.0/ref/contrib/admin/admindocs/). Will be glad to continue documenting with a bit of orientation as to how to proceed.  ",humbertotm,None,2018-05-29T03:48:08Z,2018-06-04T01:21:46Z
10003,Refs #28748 -- Reallowed lazy model field choices.,Regression in 3aa9ab39cce6b2a27d6334ad0148c8f37b6f5986.,timgraham,None,2018-05-28T15:03:14Z,2018-05-30T01:43:46Z
10002,Forgotten snippet in `mysite/urls.py` added,"Without the step I added in a new snippet nothing was working, since `path('polls/', include('polls.urls')),` wasn't there, hence Django was unaware of `urlpatterns` inside `polls/urls.py`.",Jihadik,None,2018-05-28T14:46:45Z,2018-05-28T15:10:08Z
10001,Fixed #10827 -- Ensured ContentTypes are created before permission creation,https://code.djangoproject.com/ticket/10827,claudep,None,2018-05-28T14:21:10Z,2018-06-04T06:48:33Z
10000,Added 'caches' to django.core.cache.__all__.,https://code.djangoproject.com/ticket/29452,wdxfairy,None,2018-05-28T12:01:10Z,2018-05-28T13:15:15Z
9999,Fixed wrong signature for HttpResponse.set_signed_cookie,"The `HttpResponse.set_signed_cookie` method has a wrong signature for the `httpOnly` parameter. In the source code, it's `False` just like `HttpResponse.set_cookie` but the documentation says it's `True`

Quoting the [documentation:](https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpResponse.set_signed_cookie)

`HttpResponse.set_signed_cookie(key, value, salt='', max_age=None, expires=None, path='/', domain=None, secure=None, httponly=True)`

>     Like set_cookie(), but cryptographic signing the cookie before setting it. Use in conjunction with HttpRequest.get_signed_cookie(). You can use the optional salt argument for added key strength, but you will need to remember to pass it to the corresponding HttpRequest.get_signed_cookie() call.

This code is from the latest master:

```python
def set_signed_cookie(self, key, value, salt='', **kwargs):
    value = signing.get_cookie_signer(salt=key + salt).sign(value)
    return self.set_cookie(key, value, **kwargs)
```
The only optional argument here is `salt`

This pull request provides a simple patch to fix that.
",danidee10,None,2018-05-27T20:08:11Z,2018-05-27T20:50:30Z
9998,Fixed #29359 -- Removed docs for obsolete ExceptionMiddleware.,"The docs contained a reference to the class django.middleware.exception.ExceptionMiddleware. This class was introduced in 05c888ffb843. It was removed in 7d1b69dbe7, but the documentation remained.",dhepper,None,2018-05-27T13:01:53Z,2018-05-27T17:26:42Z
9997,Fixed #29452 -- Fixed setting charset of .pot files,"Fixed setting charset of .pot files generated using makemessages
command.",bartoszgrabski,None,2018-05-27T12:22:41Z,2018-06-12T02:05:17Z
9996,Fixed #28892 -- Removed fixed height for navbar in admin,"Replaced the fixed height for the navigation in the admin
with flex to allow handling of more dynamic content while
still remaining vertically centered.",sheins,None,2018-05-27T12:04:03Z,2018-05-30T01:52:52Z
9995,Fixed #29230 -- Don't skip delayed Prefetch objects unless they've been run,https://code.djangoproject.com/ticket/29230,czpython,None,2018-05-27T11:50:53Z,2018-05-28T07:08:55Z
9994,Removed unused variables in BaseHandler,These variables are no longer used since the introduction of new-style middleware in Django 1.10,dhepper,None,2018-05-27T10:25:39Z,2018-05-27T15:21:27Z
9993,"Fixed #26819 -- Fixed BaseModelFormSet.validate_unique() ""unhashable type: list"" crash.","Ticket: https://code.djangoproject.com/ticket/26819 and also initial closed PR about same issue: https://github.com/django/django/pull/7094.

Used suggestions from previous work:
* ​https://github.com/django/django/pull/7094#issuecomment-251481149
* ​https://github.com/django/django/pull/7094#issuecomment-239900389

I used this line to run single test
`./runtests.py  model_forms.tests.TestInlineFormSet`",demonno,None,2018-05-27T10:24:39Z,2018-07-30T21:11:07Z
9992,Fixed #28077 -- Added PostgreSQL opclasses to Index,Continued from https://github.com/django/django/pull/9332.,Ian-Foote,None,2018-05-27T09:26:31Z,2018-08-06T16:00:36Z
9991,Validate the scheme in a separate method of URLValidator,"This allows subclassing URLValidator to do fancier types of validation
such as regex matching, etc.

----

Use case: in [django-oauth-toolkit](https://github.com/jazzband/django-oauth-toolkit), the list of allowed schemes is dynamic. This trivial change allows DOT to subclass URLValidator rather than having to reimplement it entirely.",jleclanche,None,2018-05-26T22:07:03Z,2020-03-20T09:19:15Z
9990,Fixed #29019 -- Warn the user about M2M fields being defined in REQUIRED_FIELDS,Please see https://code.djangoproject.com/ticket/29019#comment:5 for a full explanation of the issue.,lnagel,None,2018-05-26T14:48:02Z,2018-08-06T13:30:10Z
9989,Fixed #29448 -- Added a management command for creating management commands.,Includes refactoring the management template to allow for more than just app and project,glasnt,None,2018-05-26T14:07:58Z,2018-06-08T07:40:08Z
9988,Fixed #29432 -- Allowed passing an integer to the slice template filter.,https://code.djangoproject.com/ticket/29432,ryabtsev,None,2018-05-26T14:03:04Z,2018-05-27T00:56:51Z
9987,Refs #27098 -- Removed unused introspection queries.,"The code using these queries was removed in 578711c31052625cc87319cf1c46662c14d75ce9

Thanks Ian Foote for finding this.",MarkusH,None,2018-05-26T13:55:51Z,2018-05-26T14:30:41Z
9986,Fix typo in 2.0 release notes,,Ian-Foote,None,2018-05-26T13:21:31Z,2018-05-26T13:28:44Z
9985,Fixed #23869 -- Made ModelAdmin.get_deleted_objects() use has_delete_permission() for permissions checking.,"Instead of checking user.has_perm get_deleted_objects checks
has_delete_permission.",milkomeda,None,2018-05-26T13:02:51Z,2018-06-15T14:55:00Z
9984,Fixed #28944 - allow select_for_update(of) in values() queries,,holvianssi,None,2018-05-26T12:21:50Z,2018-07-13T14:49:37Z
9983,Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.,"Ticket [#29444](https://code.djangoproject.com/ticket/29444)

Currently the PK is hardcoded as the only retuning object which is not necessary and currently blocking [#27452](https://code.djangoproject.com/ticket/27452).

### Side note:

**This change should be fully backwards compatible.** I am aware that this fix allows adding database defaults to all backends but MySQL. This is why **I want to keep this an undocumented API** for now.
People will find out about it anyways.

You can implement a database default as follows:

```python
class Default:
    """"""
    Expression for ``DEFAULT``.

    In an insert query this will return the database default.
    """"""

    def as_sql(self, compiler, connection):
        return connection.ops.pk_default_value(), []


class MyModel(models.Model):
    my_uuid_with_db_default = models.UUIDField(default=Default)
```

If you have a default set for your column in the database, it will return that instead of trying to set null.
You no longer need to call `refresh_from_db` or any other strange thing.",codingjoe,None,2018-05-26T12:06:33Z,2019-09-10T22:01:08Z
9982,Fixed #29440 -- Document where the `bulk` argument applies in RelatedManager,,jlaine,None,2018-05-26T10:19:38Z,2018-06-09T09:11:03Z
9981,Fixed #29416 -- Removed unnecesary subquery from GROUP BY clause on MySQL when using a RawSQL annotation.,"Ticket [29416](https://code.djangoproject.com/ticket/29416).
Regression in 1d070d027c218285b66c0bde8079034b33a87f11.",felixxm,None,2018-05-26T10:19:09Z,2018-05-28T08:32:17Z
9980,Fixed #29423 -- Documented Field.value_from_object().,https://code.djangoproject.com/ticket/29423,srinivasreddy,None,2018-05-25T15:24:32Z,2018-05-26T02:03:06Z
9979,Fixed #29400: Allow @register.filter on already-decorated functions,"`inspect.getfullargspec` is being passed the function, but if that function is decorated, `inspect.getfullargspec` [does not read `__wrapped__` attributes as of Python 3.4](https://docs.python.org/3/library/inspect.html#inspect.getfullargspec).

The function object is checked for a _decorated_function attribute, but that's not always present. 

`inspect.unwrap` will get the original function for the call to `inspect.getfullargspec`, though.",ryanmrubin,None,2018-05-24T22:59:40Z,2018-05-25T16:38:12Z
9978,Update 'Configuring applications' to reflect actual django usage,,graingert,None,2018-05-24T16:24:20Z,2018-05-25T15:04:20Z
9977,Documented DeletionMixin.delete() method,,claudep,None,2018-05-24T07:57:56Z,2018-05-25T06:41:10Z
9976,Added reference to SuccessMessageMixin from generic editing views docs,,claudep,None,2018-05-24T07:19:21Z,2018-05-25T19:29:29Z
9975,Fixed #29000 -- Fixed RenameModel's renaming of a M2M column when run after RenameField.,"'delay' was being erroneously set to True for some edge cases - when multiple migrations renaming a combination of fieldnames/modelnames were run together.
https://code.djangoproject.com/ticket/29000",jeffyancey,None,2018-05-23T20:07:46Z,2018-06-15T16:08:05Z
9974,Refs #29324 -- Fixed SECRET_KEY validation when using settings.configure().,"Regression in b3cffde5559c4fa97625512d7ec41a674be26076.
https://code.djangoproject.com/ticket/29324#comment:5",timgraham,None,2018-05-22T19:17:38Z,2018-05-31T13:47:59Z
9973,Fixed #29301 -- Management command arguments override Django common arguments,,davidfstr,None,2018-05-22T07:43:20Z,2018-05-28T10:00:19Z
9972,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,https://code.djangoproject.com/ticket/29426,mackong,None,2018-05-22T07:38:55Z,2018-08-18T14:16:23Z
9971,Fixed #29301 -- Added custom help formatter to BaseCommand class,This partially reverts c3055242c81812278ebdc93dd109f30d2cbd1610.,claudep,None,2018-05-21T09:36:52Z,2018-06-06T17:18:01Z
9970,Fixed #29419 -- Added release notes about ModelAdmin.get_actions change.,"Refs https://code.djangoproject.com/ticket/29419

Added release notes about changing `ModelAdmin.get_actions` behavior.
It will return empty OrderedDict if requests hasn't `""change""` permission.
",hirokiky,None,2018-05-20T07:26:27Z,2018-05-21T17:13:32Z
9969,Fixed #29421 -- Improved Romanian locale formats,,mateesville,None,2018-05-20T06:28:03Z,2018-05-20T15:36:59Z
9968,Fixed #29198  --  Added `--plan` option to migrate command.,"## Summary
Initial Stab at the ticket #29198 (https://code.djangoproject.com/ticket/29198)

## Highlights
- Show the planned migrations in the order they will be applied with each of the operations in the order they will be applied. 
- Ensure that we respect the direction of the migration when describing the operation (i.e backwards and forwards)
- If an operation in the reverse migration plan is irreversible, say so (with warning text style). See Fig 3
- Try to describe SQL and Python operations with a little bit of detail.

#### Fig 1: Forwards
![image](https://user-images.githubusercontent.com/174766/40270503-bf81e230-5b5c-11e8-9057-1f05c568498b.png)

#### Fig 2: Backwards
![image](https://user-images.githubusercontent.com/174766/40270369-314dc5c6-5b5a-11e8-8b3e-1647bf44f2d5.png)

#### Fig 3: Backwards with Warning
![image](https://user-images.githubusercontent.com/174766/40270375-407181c8-5b5a-11e8-9d94-511aa204933c.png)",cgdeboer,None,2018-05-19T15:56:30Z,2018-08-03T19:51:10Z
9967,Added help for common 404 error in tutorial 1.,"It seems to be very common for people following the tutorial to get a
404 when they try and open their first page because they go to the root
path rather than /polls/. This adds a help box to point them in the
right direction.",danielroseman,None,2018-05-19T13:24:43Z,2018-05-24T07:17:36Z
9966,Fixed #29417 -- Corrected two admin page titles for view-only users.,"The Changelist and 'View object' views still contained the word 'change'
in their title and header.",ramiro,None,2018-05-19T01:21:57Z,2018-08-09T18:54:17Z
9965,Fixed #29415 -- Fixed detection of custom URL converters in included patterns.,"As described in https://code.djangoproject.com/ticket/29415

Main changes made:

- Push converters from parent sections onto namespace url resolvers when reverse()'ing
- Add converters from the base url pattern to sub-urls for included urlpatterns
- Add tests for reversing custom url converters",Xaroth,None,2018-05-18T14:43:34Z,2018-09-20T14:32:41Z
9964,Fixed #29413 -- Prevented evaluation of QuerySet.get_or_create()/update_or_create() defaults unless needed.,https://code.djangoproject.com/ticket/29413,POD666,None,2018-05-18T08:02:09Z,2018-07-17T02:08:44Z
9963,Fixed #29414 -- Restored form inputs on admin inlines when the user doesn't have the change permission.,https://code.djangoproject.com/ticket/29414,czpython,None,2018-05-18T02:14:25Z,2018-05-19T00:16:41Z
9962,Bootstrapped Django 2.2.,(to be merged after the stable/2.1.x branch is created in following Django 2.1 alpha),timgraham,None,2018-05-17T14:38:05Z,2018-12-28T00:18:17Z
9961,Added test for createsuperuser's handling of KeyboardInterrupt.,"Add tests for @timgraham [comment](https://github.com/django/django/pull/8908#issuecomment-361022861) on [PR](https://github.com/django/django/pull/8908).

New tests are base on the  [PR](https://github.com/django/django/pull/8908) changes. 
",hramezani,None,2018-05-17T14:32:22Z,2018-05-27T23:44:22Z
9960,Fixed #28539 -- Doc'd that runserver strips underscores.,…                                                                                           Documentation was added regarding the fact that the name of headers was stripped by all underscores by :djadmin:. Ref #28539,eliinal,None,2018-05-17T11:37:20Z,2018-06-08T18:06:50Z
9959,Fixed #29410 -- Added project urls to setup.py,"Added URLs relevant to the Django project to the setup.py file. These URLs will
show up in the sidebar of the Django PyPI page.",phildini,None,2018-05-16T18:06:39Z,2018-05-17T02:31:12Z
9958,Removed old and out of date comment about PUT,,anxodio,None,2018-05-16T11:37:33Z,2018-05-16T14:10:51Z
9957,Don't Make Migrations For Trivial (Non-DB-related) Changes to Models,"## Summary
Currently, changing non-db-related fields l(i.e `verbose_name`, `editable`, `help_text`) result in detected migrations that create an `AlterField` database migration action. This migration action does not impact the database; it's extra code that probably doesn't need to be generated.

## Details
- exclude non-db field attributes when detecting changes to fields in migrations. Excluding `""verbose_name"", ""blank"", ""editable"", ""help_text""`
- add tests to ensure no migrations detected for changes in those attributes.
- updated one test that expects a migration count of **1** for adding a `blank=True` attribute. Changed that to a `null=True` (even though that may be trivial for M2M, idk)

> NOTE: long time consumer of django (10+ years), first contribution.",cgdeboer,None,2018-05-15T19:13:31Z,2018-05-16T00:51:05Z
9956,Add missing word to deprecation warning text,Just a missing word!,mozz100,None,2018-05-15T17:38:33Z,2018-05-16T08:06:37Z
9955,Fixed #28743 -- Clarified instructions on running system checks in deployment environment.,#**28743** clarified the meaning of _deployment server_.,antonmoeriksson,None,2018-05-15T09:56:36Z,2018-05-15T12:10:25Z
9954,Update http.py,use string package to generate 'char_set' content,moas,None,2018-05-15T09:49:24Z,2018-05-15T10:10:24Z
9953,Fixed #29406 -- Added support for Referrer-Policy header.,"Might be worth following up with a decorator to specify the header on a per-view basis, but getting it site-wide via `SecurityMiddleware` is enough for now, I think.",ubernostrum,None,2018-05-14T20:49:23Z,2019-08-31T12:52:13Z
9952,Fixed #29405 - Documented dependecies in contribuiting tutorial,https://code.djangoproject.com/ticket/29405,daonb,None,2018-05-14T19:26:27Z,2018-05-14T23:05:29Z
9951,Update base.html,,daugirdask,None,2018-05-14T17:54:56Z,2018-05-14T23:05:55Z
9950,Fixed #29398 -- Doc'd that cascade deletion doesn't call delete() of related models.,,tomlinsj,None,2018-05-14T16:29:32Z,2018-05-18T22:45:03Z
9949,Refs #28834 -- Moved ancestor field cached value fallback to related fields descriptor.,"This is a follow-up to https://github.com/django/django/pull/9380
Related to this bug https://code.djangoproject.com/ticket/28834

The idea is to keep the fields cache mixin as generic as possible and instead have any prefetch logic on the respective descriptors.",czpython,None,2018-05-14T15:04:02Z,2018-05-15T11:24:55Z
9948,Fixed #29381 -- Moved logic up to auth.base_user to allow re-use.,"https://code.djangoproject.com/ticket/29381

Moved `update_last_login` and created `AnonymousBaseUser` for `AnonymousUser`.

When creating `User` based on `AbstractBaseUser` and not using `contrib.auth`, I have experienced reusability with these so this is just a suggestion idea as discussed in ticket #29381. 

I have only run `contrib.auth` tests for this.",sagarchalise,None,2018-05-14T12:53:49Z,2020-04-01T05:52:55Z
9947,Refs #29131 -- Fixed space handling in ArrayField's item_invalid message.,https://code.djangoproject.com/ticket/29131,hramezani,None,2018-05-13T18:58:31Z,2018-05-13T21:57:29Z
9946,Fixed #29401 -- Updated admin's jQuery to 3.3.1,https://code.djangoproject.com/ticket/29401,tnir,None,2018-05-13T09:48:32Z,2018-05-14T02:44:21Z
9945,Moved to_language() to django.utils.translation.,Follow up to 1b7d524cfa7b7834af26c99407af66be6813938d.,timgraham,None,2018-05-12T17:53:38Z,2018-05-12T19:03:43Z
9944,Move `to_locale` to `django/utils/translation/__init__.py`,"Move `to_locale` to `django/utils/translation/__init__.py`, and remove it from tran_real.py and trans_null.py",hramezani,None,2018-05-12T16:47:29Z,2018-05-12T17:32:31Z
9943,Consolidated duplicate to_locale() implementations.,Follow up to ac59ec8f1a34ea0e82bdb3c77422694e8016e0a7.,timgraham,None,2018-05-12T16:40:48Z,2018-05-12T17:32:43Z
9942,Alphabetized imports in various docs.,Follow-up of d97cce34096043b019e818a7fb98c0f9f073704c and 7d3fe36c626a3268413eb86d37920f132eb4a54f.,felixxm,None,2018-05-11T13:35:09Z,2018-05-12T17:46:29Z
9941,Fixed #29480 -- Made MySQL backend retrieve constraint columns in their defined order.,,graingert,None,2018-05-11T10:04:51Z,2018-07-27T12:54:58Z
9940,Fixed #23718 -- Made TEST['MIRROR'] use the same connection as the mirrored database.,https://code.djangoproject.com/ticket/23718,timgraham,None,2018-05-11T01:02:41Z,2018-05-22T19:56:45Z
9939,Increase `django/utils/translation/trans_null.py` test coverage.,,hramezani,None,2018-05-10T19:50:44Z,2018-05-12T15:41:54Z
9938,Replaced TOKEN_* constants by TokenType enums,,claudep,None,2018-05-10T13:45:23Z,2018-05-10T15:52:07Z
9937,Updated OpenLayersWidget to use OpenLayers 4.6.5.,,claudep,None,2018-05-10T10:16:39Z,2018-05-10T14:25:42Z
9936,Restore user.backend when loading from session,"Having `user.backend` available only during the login request isn't that useful.
This standardises access to the value, without requiring knowledge of sessions.",OrangeDog,None,2018-05-09T13:15:26Z,2018-08-03T22:07:40Z
9935,Fixed #29389 -- Made Paginator reject non-integer page numbers of type float.,"- Is a remark in release notes needed? On one side it's just a bug fix, on the other one the behavior of the Paginator changes.
- Another option: we could also accept floats that can be converted to int without any loss of precision (i.e. 2.0 would be accepted). I didn't took this route to keep things straightforward (the exception is called `PageNotAnInteger`), but others may disagree. ",niconoe,None,2018-05-09T10:33:15Z,2018-05-09T13:54:14Z
9934,Fixed #29380 -- Added support for QuerySet.select_for_update()'s nowait and skip_locked options on MySQL 8+.,https://code.djangoproject.com/ticket/29380,aeltawela,None,2018-05-09T00:18:17Z,2018-05-20T19:43:53Z
9933,Fixed #29392 -- Disallowed use of abbreviated forms of --settings and --pythonpath management command options.,"https://code.djangoproject.com/ticket/29392

Test failure output:

```
======================================================================
FAIL: test_ambiguous_arguments (user_commands.tests.CommandRunTests)
----------------------------------------------------------------------
```
```python
Traceback (most recent call last):
  File ""./django/tests/user_commands/tests.py"", line 241, in test_ambiguous_arguments
    self.assertNoOutput(err)
  File ""./django/tests/admin_scripts/tests.py"", line 187, in assertNoOutput
    self.assertEqual(len(stream), 0, ""Stream should be empty: actually contains '%s'"" % stream)
AssertionError: 1646 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File ""./django/django/core/management/__init__.py"", line 204, in fetch_command
    app_name = commands[subcommand]
KeyError: 'config'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""./manage.py"", line 15, in <module>
    execute_from_command_line(sys.argv)
  File ""./django/django/core/management/__init__.py"", line 381, in execute_from_command_line
    utility.execute()
  File ""./django/django/core/management/__init__.py"", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File ""./django/django/core/management/__init__.py"", line 211, in fetch_command
    settings.INSTALLED_APPS
  File ""./django/django/conf/__init__.py"", line 57, in __getattr__
    self._setup(name)
  File ""./django/django/conf/__init__.py"", line 44, in _setup
    self._wrapped = Settings(settings_module)
  File ""./django/django/conf/__init__.py"", line 107, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File ""/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/__init__.py"", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File ""<frozen importlib._bootstrap>"", line 978, in _gcd_import
  File ""<frozen importlib._bootstrap>"", line 961, in _find_and_load
  File ""<frozen importlib._bootstrap>"", line 948, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'foo'
```",rpkilby,None,2018-05-08T18:55:41Z,2018-05-15T02:49:30Z
9932,Fixed #29390 -- Fixed trans_null.ngettext() for values of -1.,fix for [ticket_29390](https://code.djangoproject.com/ticket/29390),hramezani,None,2018-05-08T14:20:43Z,2018-05-09T13:21:17Z
9931,Refs #29350 -- Fixed 'invalid escape sequence' warning in SQLite introspection.,,timgraham,None,2018-05-08T02:25:08Z,2018-05-08T14:42:33Z
9930,Replaced context by comment in 2 humanize strings,,claudep,None,2018-05-07T16:37:05Z,2018-05-09T07:48:24Z
9929,Fixed #29385 -- Made ModelDetailView show model properties.,https://code.djangoproject.com/ticket/29385,bkaluza,None,2018-05-07T11:18:55Z,2018-05-29T06:52:21Z
9928,Fixed #21408 — German Translation for “3 days ago”,"The problem:
“3 days ago” should translate to “vor 3 Tagen” in German, while “3 days” translates to “3 Tage”. #21408 describes that django always translated to “Tage”, even when the dative “Tagen” was correct. The same applies to months (“Monate”/“Monaten”) and years (“Jahre”/“Jahren”).

The solution:
Let `timesince` caller provide the string dict to use for the time-related strings.",claudep,None,2018-05-07T07:32:18Z,2018-05-10T13:58:23Z
9927,Fix import order in postgres fields documentation,,hramezani,None,2018-05-06T16:56:10Z,2018-05-07T11:46:31Z
9926,Add simple tests for postgres ArrayField,,hramezani,None,2018-05-06T16:28:50Z,2018-05-06T16:47:31Z
9925,Fixed #20147 -- Added request.headers.,"Hello 👋! My first PR, so please double check my code 😁.

#### Background

Django’s primary deployment platform is [WSGI](https://www.python.org/dev/peps/pep-3333/). WSGI uses an [`environ`](https://www.python.org/dev/peps/pep-3333/#environ-variables) dictionary similarly to CGI, which converts all headers to uppercase, replaces dashes with underscores and prepends `HTTP_`. For example, if the client sends the header `If-None-Match`, WSGI would store it in `environ` as `HTTP_IF_NONE_MATCH`.

This makes the process of accessing familiar headers a little bit more cumbersome. The ticket #20147 proposes making original headers more easily accesible.

#### Proposed Solution

My solution is simple. Now `requests` has a `headers` attribute which is an immutable, case-insensitive dictionary with the original names of the headers. I decided `request.headers` because is the most intuitive way of thinking about it, and case insensitive because HTTP specifies so: _""Field names are case-insensitive""_ (see [RFC](https://tools.ietf.org/html/rfc2616#page-31)). Example of proposed solution:

```python
def my_view(request):
    if 'Accept' in request.headers or 'referer' in request.headers:
        pass
    cache_control = request.get('Cache-Control', None)
    accept_encoding = request.headers['Accept-Encoding']
    connection = request.headers.get('connection')  # case insensitive
```

#### Implementation details

I looked for ""inspiration"" (😬) in [Werkzeug](https://github.com/pallets/werkzeug) (the wsgi framework behind Flask). They implement an [`EnvironHeaders`](https://github.com/pallets/werkzeug/blob/43fe889fe5a8c495c41ec28658f67c1f7b23e2cd/werkzeug/datastructures.py#L1326) which receives the `environ` dict and transforms headers to the original format (assuming title case). But, I didn't implement the dictionary features in my `EnvironHeaders`. Instead I separated it into another data structure `ImmutableCaseInsensitiveDict` inspired by requests'  [CaseInsensitiveDict](https://github.com/requests/requests/blob/239ee194318e0b88d6a7b292ec4b68451ceefe68/requests/structures.py#L15) (more ""inspiration"" 😅).

#### Design Decisions

A few design decisions that I arbitrarily made and are obviously subject to discussion:

* As mentioned above, separated `EnvironHeaders` from the underlying data structure because we might be able to reuse it later.
* I didn't modify the current way the framework uses headers. For example, `GZipMiddleware` is still accessing `request.META`. It wouldn't be hard to trace down all the headers being accessed through `request.META` and change them to `request.headers`, but I figured I could create **many** merge conflicts by doing so. So please advice.
* I updated the docs accordingly, but didn't indicate any preference or recommendation of one over the other. 

I repeat, this is my first PR, so comments, suggestion, criticism are welcome.",santiagobasulto,None,2018-05-05T22:03:53Z,2018-07-10T20:10:09Z
9924,Raise outer exception when failing to close a cursor after an error,just apply the patch in [ticker 29257](https://code.djangoproject.com/ticket/29257).,hramezani,None,2018-05-05T17:35:15Z,2018-05-05T18:26:18Z
9923,Fixed #28913 -- Fixed error handling when MIGRATIONS_MODULES has a missing top-level package,"When specifying a custom migration module package for an app in
the MIGRATIONS_MODULES setting, if the top-level package does not
exist, added relevant error handling so an informative
error message is displayed to the user while trying to make
migrations.

Signed-off-by: Sanket Saurav <sanketsaurav@gmail.com>",sanketsaurav,None,2018-05-05T11:47:51Z,2018-05-05T22:49:35Z
9922,Added example to conditional aggregation docs.,,vidyarani-dg,None,2018-05-05T00:53:56Z,2018-11-17T20:46:39Z
9921,Fixed #29379 -- Add autocomplete attribute to contrib.auth fields,https://code.djangoproject.com/ticket/29379,chicheng,None,2018-05-04T07:56:20Z,2019-03-20T07:09:03Z
9920,Fixed #28462 -- Decreased memory usage with ModelAdmin.list_editable.,"New PR related to https://github.com/django/django/pull/9820#issuecomment-386203216

Based on the bug https://code.djangoproject.com/ticket/28462",AdamDonna,None,2018-05-03T14:04:38Z,2018-07-17T02:14:41Z
9919,Fixed #29370 -- Added choices to LogEntry.action_flag field.,"I kept things as simple as possible, keeping constants out of the `LogEntry` class so we don't break the API and documentation.",niconoe,None,2018-05-03T12:35:26Z,2018-05-07T16:31:54Z
9918,Fixed #29373 -- Added long_description in setup.py.,"As per [Tim's comment on ticket](https://code.djangoproject.com/ticket/29373#comment:8). 

Uploaded to TestPyPI for preview: https://test.pypi.org/project/Django-TestPyPI-Upload/",carltongibson,None,2018-05-03T09:50:54Z,2018-05-07T15:11:30Z
9917,Refs #29358 -- Corrected wording in primary key check message.,,carltongibson,None,2018-05-03T09:35:22Z,2018-05-03T13:28:41Z
9916,Update tutorial05.txt,,2miksyn,None,2018-05-03T09:31:36Z,2018-05-04T11:52:40Z
9915,Use double quotation marks for csrf form element,Make it in line with other form elements output by django.,chicheng,None,2018-05-03T04:51:58Z,2018-05-03T06:57:19Z
9914,Fixed #29375 - Remove empty form action attribute,https://code.djangoproject.com/ticket/29375,chicheng,None,2018-05-02T07:19:34Z,2018-05-02T13:20:05Z
9913,Fixed #29376 -- Added admin `show_save_and_add_another` context variable.,ticket - https://code.djangoproject.com/ticket/29376#ticket,mihasK,None,2018-05-01T18:14:04Z,2019-08-30T09:43:29Z
9912,Fixed #29359 -- Updated Middleware Documentation for deprecated ExceptionMiddleware,"Fixes [#29359](https://code.djangoproject.com/ticket/29359)

Updated the middleware documentation with a section for ""Deprecated middleware"" and moved ExceptionMiddleware under it. ",swang96,None,2018-04-30T20:16:09Z,2018-05-01T01:57:07Z
9911,Fixed #29358 -- Added a system check to prohibit models with more than one primary key.,Add a system check to prohibit models with more than one primary_key field([ticket_29358](https://code.djangoproject.com/ticket/29358)),hramezani,None,2018-04-30T17:38:52Z,2018-05-03T07:08:30Z
9910,Fixed #29360 -- Removed Fabric examples in docs.,https://code.djangoproject.com/ticket/29360,srinivasreddy,None,2018-04-29T23:49:44Z,2018-04-30T14:58:55Z
9909,Fixed #29372 -- linebreaksbr and linebreaks can not work in template filters,,zhengxiaowai,None,2018-04-29T16:26:18Z,2018-05-02T13:45:10Z
9908,Fixed #29369 -- Added mention of #django-dev IRC channel,"Added the mention of the #django-dev IRC channel in the ""Join the django-developers mailing list..."" section of the [Contributing to Django](https://docs.djangoproject.com/en/dev/internals/contributing/) page, which includes the hyperlink reference to the channel at the bottom of the source file.

https://code.djangoproject.com/ticket/29369",PhrydRhys,None,2018-04-28T23:38:56Z,2018-04-29T01:00:51Z
9907,Fixed #29351 --  Doc'd that ModelAdmin.prepopulated_fields removes stop words.,"Fixes [#29351](https://code.djangoproject.com/ticket/29351)

Updated the docs to include the fact that ModelAdmin.prepopulated_fields removes stop words. The list of stop words that are removed has also been added.",kellyhogan,None,2018-04-28T23:19:49Z,2018-05-03T01:33:28Z
9906,"Fixed #29369 -- Added #django-dev IRC channel to ""Contributing to Django""","Added mention of in the #django-dev IRC channel in the ""Join the django-developers mailing list..."" section of the [Contributing to Django](https://docs.djangoproject.com/en/dev/internals/contributing/) page.

Also created the hyperlink reference to the channel at the bottom of the source file.

https://code.djangoproject.com/ticket/29369",PhrydRhys,None,2018-04-28T22:02:17Z,2018-04-28T23:21:18Z
9905,Replaced django.test.utils.patch_logger() with assertLogs().,,claudep,None,2018-04-28T13:24:44Z,2018-06-12T03:59:57Z
9904,Fixed #29363 -- Added SimpleTestCase.assertWarnsMessage().,,ellmetha,None,2018-04-27T22:41:10Z,2018-05-09T16:09:32Z
9903,"Refs #28859 -- Fixed ""no data found"" exception handling with cx_Oracle 6.3+.","https://code.djangoproject.com/ticket/28859
Behavior changed in cx_Oracle 6.3.",felixxm,None,2018-04-27T20:46:27Z,2018-04-28T17:40:12Z
9902,Fixed #29367 -- Fixed model state on objects with a primary key created with QuerySet.bulk_create().,"Instance of models with manually set primary_key persisted with
bulk_create would not update the state `adding` and `db` attributes.

See: ticket 29367
",oesgalha,None,2018-04-27T17:34:49Z,2018-04-27T22:20:21Z
9901,Fixed #29353 -- Made StaticFilesHandler return a 404 response when settings.DEBUG is False,,claudep,None,2018-04-25T08:39:41Z,2018-04-27T07:26:34Z
9900,Fixed #28687 -- Added a 'Not Empty' option to admin's related filter.,https://code.djangoproject.com/ticket/28687,hramezani,None,2018-04-24T18:48:17Z,2018-08-18T20:40:49Z
9899,Fixed #29350 -- Allowed SQLite pk introspection to work with formats besides double quotes.,"The `get_primary_key_column()` method in the `sqlite3` backend only expects a field with quotation. The solution is to make the capture group focus on the first word, regardless of whether or not it has quotation.

There are no existing test cases, so I've added those as well.

- Fix get_primary_key_column() method
- Add relevant models and test cases.",ztroop,None,2018-04-23T22:58:34Z,2018-05-08T02:38:46Z
9898,Fixed typos in docs/topics/auth/passwords.txt.,,adamth,None,2018-04-23T07:21:41Z,2018-04-23T11:37:27Z
9897,Add Marathi(mr) translations for month names,Add missing translations for month names in Marathi.,kunalgrover05,None,2018-04-23T05:28:05Z,2018-04-23T10:14:23Z
9896,Refs #29131 -- Made ArrayField error messages index from 1 instead of 0.,Indexing from 1 instead of 0 in postgres array_field error messages. ticket [29131](https://code.djangoproject.com/ticket/29131),hramezani,None,2018-04-22T19:58:24Z,2018-05-13T18:57:32Z
9895,Fix cls.name tuple error,"sometimes `cls.name` returns tuple and `importlib` module throw error

`Traceback (most recent call last):
  File ""manage.py"", line 15, in <module>
    execute_from_command_line(sys.argv)
  File ""C:\ProgramData\Anaconda3\envs\django\lib\site-packages\django\core\management\__init__.py"", line 371, in execute_from_command_line
    utility.execute()
  File ""C:\ProgramData\Anaconda3\envs\django\lib\site-packages\django\core\management\__init__.py"", line 347, in execute
    django.setup()
  File ""C:\ProgramData\Anaconda3\envs\django\lib\site-packages\django\__init__.py"", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File ""C:\ProgramData\Anaconda3\envs\django\lib\site-packages\django\apps\registry.py"", line 89, in populate
    app_config = AppConfig.create(entry)
  File ""C:\ProgramData\Anaconda3\envs\django\lib\site-packages\django\apps\config.py"", line 143, in create
    app_module = import_module(app_name)
  File ""C:\ProgramData\Anaconda3\envs\django\lib\importlib\__init__.py"", line 117, in import_module
    if name.startswith('.'):
AttributeError: 'tuple' object has no attribute 'startswith'`",FKLC,None,2018-04-22T09:29:19Z,2018-04-23T16:03:30Z
9894,Fixed #29295 -- Fixed management command crash when using subparsers.,"I applied  @timgraham  [diff](https://code.djangoproject.com/attachment/ticket/29295/29295.diff), and added tests for it.",hramezani,None,2018-04-21T18:37:59Z,2018-07-11T21:49:54Z
9893,Fixed #29349 -- Doc'd the default behavior of router.allow_relation().,Issue: https://code.djangoproject.com/ticket/29349,srfilipek,None,2018-04-21T13:45:12Z,2018-04-24T01:13:49Z
9892,Refs #28312 -- Added an optimized __bool__() to ModelChoiceIterator.,"COUNT is more expensive than a simple EXISTS query, use the latter when
possible.

Refs [#28312](https://code.djangoproject.com/ticket/28312)",francoisfreitag,None,2018-04-21T00:34:10Z,2018-04-23T17:29:28Z
9891,Fixed #28312 -- Made ModelChoiceIterator __len__ more memory-efficient,"Instead of loading all QuerySet results in memory, simply count the
number of entries. It adds an extra query when list() or tuple() is
called on the choices (because both call `__len__` then `__iter__`), but
uses less memory since the QuerySet results won't be cached. In most
cases, the choices will only be iterated onto, meaning that `__len__`
won't be called and only one query is executed.

https://code.djangoproject.com/ticket/28312",francoisfreitag,None,2018-04-21T00:05:28Z,2018-04-23T17:08:59Z
9890,Fixed #28973 -- Silenced Copying/Linking messages in collectstatic default verbosity,,claudep,None,2018-04-20T18:21:19Z,2018-04-24T06:40:57Z
9889,Fixed #29341 -- Automatically Set 'request.current_app' for all Request,[](https://code.djangoproject.com/ticket/29341#ticket),luoxzhg,None,2018-04-20T03:48:06Z,2018-04-20T06:34:00Z
9888,Fixed #29339 -- Added result caching to RawQuerySet.,https://code.djangoproject.com/ticket/29339,timgraham,None,2018-04-19T15:39:22Z,2018-04-19T16:30:06Z
9887,Fixed #29337 -- Added  __len__() & __bool__() to RawQuerySet.,"This PR adds support for `__len__` & `__bool__` in `RawQuerySet`

Ticket: https://code.djangoproject.com/ticket/29337
This PR has a dependency on https://github.com/django/django/pull/9151",uadnan,None,2018-04-19T10:13:58Z,2018-04-19T17:04:48Z
9886,Clarified wording in tutorial text.,I'm not a native speaker but the following sentence doesn't sound right. I checked with [this site](http://www.reverso.net/spell-checker/english-spelling-grammar/) and made a minor correction. CMIIW.,burhanloey,None,2018-04-19T08:09:06Z,2018-04-19T12:00:14Z
9885,Refs #23890 -- Removed numpy deprecation warning silencing.,Obsolete since numpy 1.12.0.,timgraham,None,2018-04-19T02:12:46Z,2018-04-19T02:43:10Z
9884,Fixed 29336 -- Added docs for circular template inheritance.,Deals with: https://code.djangoproject.com/ticket/29336,Adrian-Turjak,None,2018-04-18T05:06:53Z,2020-03-13T05:58:26Z
9883,Fixed a GeoIP2 test failure with the latest GeoIP2 database.,,timgraham,None,2018-04-18T01:09:10Z,2018-04-18T01:30:13Z
9882,Fixed #29334 -- Updated pypi.python.org URLs to pypi.org.,https://code.djangoproject.com/ticket/29334,brettcannon,None,2018-04-17T22:21:48Z,2018-04-18T22:12:22Z
9881,Simplified DatabaseOperations.cache_key_culling_sql() by using LIMIT/OFFSET SQL on Oracle.,,felixxm,None,2018-04-16T20:07:02Z,2018-04-17T19:30:42Z
9880,"Fixed #29174, #29175 -- Doc'd that f-strings and JavaScript template strings can't be translated.","https://code.djangoproject.com/ticket/29174
https://code.djangoproject.com/ticket/29175",timgraham,None,2018-04-16T17:44:13Z,2018-04-18T14:47:14Z
9879,Fixed #29352 -- Allowed specifying a Feed language different from settings.LANGUAGE_CODE.,https://code.djangoproject.com/ticket/29352,phenelleevolio,None,2018-04-16T17:01:13Z,2018-09-14T15:14:18Z
9878,Fixed #29330 -- Fixed crash when pickling BaseExpression.,https://code.djangoproject.com/ticket/29330,millerdev,None,2018-04-16T13:33:04Z,2018-04-16T14:38:22Z
9877,Fixes a grammatical error in docs/topics/i18n/translation.txt,"This changes a comma to a semicolon where two independent clauses were connected under the topic of pluralization. See [here](https://writing.wisc.edu/Handbook/Semicolons.html) for reference.

Apologies for maybe the most pedantic pull request I've ever sent.",sayhiben,None,2018-04-15T19:03:50Z,2018-04-15T21:07:01Z
9876,Fixed #29324 -- Made Settings raise ImproperlyConfigured on SECRET_KEY access; not in init.,https://code.djangoproject.com/ticket/29324,jdufresne,None,2018-04-13T21:05:36Z,2018-08-18T18:20:18Z
9875,Fixed #29274 -- Increased the number of common passwords from 1k to 20k.,"https://code.djangoproject.com/ticket/29274  
Updated the list of common passwords that's used for CommonPasswordValidator so that it listed the 20000 most common passwords instead of 1000.",jfushada,None,2018-04-13T21:05:10Z,2018-04-16T15:24:57Z
9874,Fixed #29322 -- Made admin check all ModelAdmin fieldsets for duplicates.,"Duplicate fields were only detected if they were in the same fieldset.

http://code.djangoproject.com/ticket/29322",matthiask,None,2018-04-13T11:57:32Z,2019-11-29T08:01:24Z
9873,Fixed #29320 -- Added an exception when an annotation alias matches a ForeignKey attname.,https://code.djangoproject.com/ticket/29320,fjsj,None,2018-04-12T18:10:05Z,2018-04-13T01:36:50Z
9872,"Fixed #29286 -- Fixed column mismatch crash with QuerySet.values() or values_list() after combining an annotated and unannotated queryset with union(), difference(), or intersection().","https://code.djangoproject.com/ticket/29286

Regression in a0c03c62a8ac586e5be5b21393c925afa581efaf.",felixxm,None,2018-04-12T09:15:01Z,2018-04-13T11:09:59Z
9871,Fixed #29301 -- Reordered management command arguments for --help output,"…to prioritize command-specific arguments

Trac ticket: https://code.djangoproject.com/ticket/29301",davidfstr,None,2018-04-11T02:53:17Z,2018-04-12T03:12:05Z
9870,Update INSTALL,test,Panwb,None,2018-04-11T01:14:28Z,2018-04-11T02:47:25Z
9869,Fixed #29313 -- Added examples for using F() with nulls_first/last .,"https://code.djangoproject.com/ticket/29313#ticket

This adds documentation to F() expressions about how to use them in order to sort with nulls last.
",drd0013,None,2018-04-11T00:17:31Z,2018-04-20T00:07:40Z
9868,Fixed #29695 -- Added system checks for admin's app dependencies and TEMPLATES setting.,"- Add the following to AdminSite checks:

 * admin.E403: A DjangoTemplates instance must be configured in TEMPLATES
 * admin.E404: context_processors.messages must be enabled in DjangoTemplates
 * admin.E405: django.contrib.auth must be in INSTALLED_APPS
 * admin.E406: django.contrib.messages must be in INSTALLED_APPS
 * admin.E407: django.contrib.sessions must be in INSTALLED_APPS
 * admin.E408: AuthenticationMiddleware must be in MIDDLEWARE
 * admin.E409: MessageMiddleware must be in MIDDLEWARE.

- Improve the error message of admin.E402 (auth context processor needed in Django
  Templates if default auth backed is used).

- Updated the documentation and tests accordingly.

As a side-effect, two tests needed tweaking:

 * migrations.test_commands.tests.test_migrate_with_system_checks
    Left a note for the maintainer because admin checks are triggered without the
    admin app installed

 * admin_scripts.tests.ManageCheck.test_complex_app.

This is motivated by https://github.com/django/django/pull/9682",math-a3k,None,2018-04-10T09:08:28Z,2018-08-20T21:57:47Z
9867,Fixed #28312 -- Reused ModelChoiceIterator's queryset,"Reusing the ModelChoiceIterator queryset results, instead of issuing a
new query whenever the ModelChoiceIterator instance is evaluated
(through `__len__`, `__iter__` or `__bool__`), is the only way to guarantee
results consistency across calls to the choices attribute of a
ChoiceField instance. If the QuerySet results were to change, there
could be mismatches, for example between the choices count and the
actual number of choices offered to the user.

Ticket: https://code.djangoproject.com/ticket/28312

See https://groups.google.com/forum/#!topic/django-developers/7UZyY0IX5aw for a more detailed description.",francoisfreitag,None,2018-04-10T01:36:28Z,2018-04-11T03:53:38Z
9866,Fixed #29193 -- Fixed extra FK drops when altering unique fields.,https://code.djangoproject.com/ticket/29193,jmbowman,None,2018-04-09T17:45:22Z,2018-04-12T03:37:43Z
9865,Fixed #29307 -- Fixed inspectdb import paths for django.contrib.postgres fields,Thanks @erindy for the report.,alasdairnicol,None,2018-04-09T16:53:19Z,2018-04-10T13:59:11Z
9864,Fixed #29306 -- Prevented template variable lookups from intiatiating a class.,https://code.djangoproject.com/ticket/29306#comment:2,luoxzhg,None,2018-04-09T16:25:46Z,2018-04-14T01:47:11Z
9863,Refs #28062 -- Doc'd PostgreSQL server-side cursors as a backwards incompatible change.,https://code.djangoproject.com/ticket/28062#comment:14,timgraham,None,2018-04-09T15:51:10Z,2018-04-10T17:26:55Z
9862,Fixed typos in docs/topics/db/examples/many_to_one.txt and docs/topics/db/managers.txt.,spelling mistake correct,luoxzhg,None,2018-04-09T09:55:51Z,2018-04-12T02:43:53Z
9861,Fixed #29296 -- Fix handling of callable object views in admindocs,"See https://code.djangoproject.com/ticket/29296

I'm not sure how you normally handle backports, but a backported version of this commit can be found here:
https://github.com/PaulSD/django/commit/b2128a2afa14c64b39a5fae1f9a63b2959c4f752",PaulSD,None,2018-04-08T18:06:18Z,2018-04-12T17:34:48Z
9860,Fixed #27863 -- Added support for the SameSite cookie flag,"https://code.djangoproject.com/ticket/27863
(rebased from #8380)
",alex,None,2018-04-07T20:00:08Z,2020-07-06T05:23:49Z
9859,allow overriding INTERNAL_RESET_URL_TOKEN and INTERNAL_RESET_SESSION_…,"…TOKEN on PasswordResetConfirmView

https://code.djangoproject.com/ticket/29300",bukowa,None,2018-04-07T19:24:23Z,2018-04-07T19:29:24Z
9858,new comment,just for learning goal,SFill,None,2018-04-07T16:18:51Z,2018-04-07T16:25:43Z
9857,Updated contributing docs for some latest practices.,,timgraham,None,2018-04-06T17:31:39Z,2018-04-07T01:48:13Z
9856,Fixed #29289 -- Clarified comment regarding what data is hashed to generate PasswordResetTokenGenerator tokens.,https://code.djangoproject.com/ticket/29289,timgraham,None,2018-04-05T14:14:46Z,2018-04-06T15:06:36Z
9855,Fixed #29248 -- Renamed field-box CSS class to fieldBox,https://code.djangoproject.com/ticket/29248,faheel,None,2018-04-05T09:50:49Z,2018-04-05T15:02:14Z
9854,Fixed reference to nonexistent __between lookup.,This just appears to be a mistake introduced when the `__time` lookup was added.,danielroseman,None,2018-04-04T13:14:19Z,2018-04-04T13:46:11Z
9853,Fixed #29288 -- Made {% widthratio %} assign to a variable if an exception occurs.,…when requested if arguments cause an exception,JirkaV,None,2018-04-04T08:38:07Z,2018-04-04T18:03:17Z
9852,Refs #28577 -- Added check for HStoreField to prevent mutable default.,https://code.djangoproject.com/ticket/28577,timgraham,None,2018-04-03T13:30:58Z,2018-04-03T15:13:01Z
9851,Added test for non-matching passwords in AdminPasswordChangeForm.,"I was tempted to remove `if password1 and password2:` in some of the auth forms; shouldn't this be handled already in `clean`? There's a missing call to `super().clean()` in `AuthenticationForm.clean`. The code is quite old, so probably a lot of things have changed in the meantime.

I changed some instances of `assertTrue` and `assertFalse` to `assertIs`, but only for form validation checks.

",atombrella,None,2018-04-03T07:17:52Z,2018-04-08T10:05:54Z
9850,"Fixed #29284 -- Made ImageField render with accept=""image/*""' HTML attribute.",This pr is for this ticket: https://code.djangoproject.com/ticket/29284,safu9,None,2018-04-03T03:10:47Z,2018-04-05T04:14:14Z
9849,Refs #27308 -- Fixed BytesWarnings in admin_views tests.,"As `HttpResponse.content` is a bytes object, make comparisons using bytes.

Fixes warning:

```
.../django/tests/admin_views/test_templatetags.py:46: BytesWarning: str() on a bytes instance
  content = str(response.content)
```",jdufresne,None,2018-04-02T20:53:19Z,2018-04-03T14:20:44Z
9848,"Refs #27025 -- Fixed ""invalid escape sequence"" warning in migrations tests.","Fixes warning:

```
.../django/tests/migrations/test_loader.py:526: DeprecationWarning: invalid escape sequence \w
  ""Couldn't import '\w+.migrations.0001_initial' as it appears ""
```",jdufresne,None,2018-04-02T20:39:43Z,2018-04-03T13:58:52Z
9847,Fixed #29278 -- Doc'd that a context manager can't be used with FileResponse.,Warn users not to open a file in a context manager with FileResponse,Windsooon,None,2018-04-02T15:52:10Z,2018-04-04T14:19:38Z
9846,Removed unused regexes in django.core.management.templates.,"I checked these variables are not used within project nor mentioned in docs.
After remove them I reinstalled django and tested.

I think this is trivial change, so I send this PR directly.",desigrammer,None,2018-04-02T08:01:41Z,2018-04-03T03:52:53Z
9844,Fixed #29282 -- Made admin checks handle TypeError,https://code.djangoproject.com/ticket/29282,dsanders11,None,2018-04-01T14:05:51Z,2018-11-15T22:38:29Z
9843,Fixed #29226 -- Doc'd modify_settings() ordering considerations for Python < 3.6.,"Am pretty sure that the docs were wrong about using pure strings instead of lists for append/prepend. They are iterated as lists of strings.

Can squash all this as requested, just wanted to hear back firstly, if the changes are pleasing.

https://code.djangoproject.com/ticket/29226

Takes over for #9842",benjaoming,None,2018-03-31T23:50:46Z,2018-08-25T14:26:02Z
9842,Fixed #29226 - Documentation updates for modify_settings,"Am pretty sure that the docs were wrong about using pure strings instead of lists for append/prepend. They are iterated as lists of strings.

Added as a 1.11 update since its LTS - should I retarget?

Can squash all this as requested, just wanted to hear back firstly, if the changes are pleasing.

https://code.djangoproject.com/ticket/29226",benjaoming,None,2018-03-31T13:54:29Z,2018-03-31T23:51:26Z
9841,Update documentation - translation.txt,Clarified last sentence.,wimfeijen,None,2018-03-31T10:16:14Z,2018-03-31T23:33:49Z
9840,Fix a bug: template-variable-lookup call a callable object before evaluating all the variable.,"Fix a bug: template-variable-lookup call a callable object before evaluating all the variable.

for example:
```
    def a():  return ""Hi""
    a.b = ""Far""

    from django.template import Template, Context
    t = Template(""{{ a.b }}"")
    t.render(Context({""a"": a}))
```
It will print string_if_invalid, i.e., empty string .

After correct, it can print the right value ""Far""",luoxzhg,None,2018-03-31T04:21:12Z,2018-04-09T14:55:41Z
9839,Fixed #16470 -- Allowed FileResponse to auto-set some Content headers.,,claudep,None,2018-03-30T17:42:09Z,2018-05-23T07:39:36Z
9838,Fixed #29273 -- Prevented unwanted selection of empty choice in multiple-choice widgets,https://code.djangoproject.com/ticket/29273,claudep,None,2018-03-30T10:04:52Z,2018-04-02T16:28:53Z
9837,"Fixed #29275 -- Print ""(actual errors: none)"" instead of ""(actual errors: )"" in assertFormError.",https://code.djangoproject.com/ticket/29275,lamby,None,2018-03-30T08:47:59Z,2018-04-01T07:19:35Z
9836,Fixed links to Sphinx docs.,dependent on https://github.com/sphinx-doc/sphinx/pull/4801,timgraham,None,2018-03-29T17:47:34Z,2018-03-30T19:00:31Z
9835,Fixed #29251 -- Added bytes to str conversion in LPad/RPad database functions on MySQL.,https://code.djangoproject.com/ticket/29251,felixxm,None,2018-03-29T17:10:16Z,2018-04-03T16:24:44Z
9834,Fixed #29279 -- Added renderer argument to ModelForm.,,dcwatson,None,2018-03-29T14:09:45Z,2018-04-01T01:22:40Z
9833,Fixed #29270 -- Fixed UserChangeForm crash if password field is excluded.,https://code.djangoproject.com/ticket/29270,JanMalte,None,2018-03-29T09:37:50Z,2018-04-02T06:53:59Z
9832,Added tests for combining Q objects with non-Q objects.,,atombrella,None,2018-03-29T08:04:00Z,2018-03-29T18:30:52Z
9831,Fixed #29265 -- Removed the suggestion to hardcode static URLs.,https://code.djangoproject.com/ticket/29265,timgraham,None,2018-03-28T15:16:29Z,2018-03-28T16:36:33Z
9830,Replaced 'python -Wall' with 'python -Wa'.,"As the Python 3.7 docs says:
https://docs.python.org/3.7/using/cmdline.html#cmdoption-w

The non abbreviate form of running with warnings is: ``-Walways`` ",chimeno,None,2018-03-28T08:17:32Z,2018-03-28T17:25:03Z
9829,Fixed #29245 -- Detected field renames with preserved db_column.,https://code.djangoproject.com/ticket/29245,charettes,None,2018-03-28T05:00:38Z,2018-03-28T17:24:13Z
9828,settings.py: SCHEMA field (merged),"allow to set connection schema in settings.py

FIXME: pattern ""sql query"" % param is bad practice and allows SQL Injection. It can be exploied in this example:
'SCHEMA': 'MYSCHEMA; DROP DATABASE'
But who in clear mind will set this schema?",kai3341,None,2018-03-27T17:26:24Z,2018-03-27T17:30:06Z
9827,Fixed #29148 -- Doc'd how to use get_or_create() with Q objects.,"Related to ticket [#29148](https://code.djangoproject.com/ticket/29148) 

Adds an example illustrating the use of `Q` objects in the `get_cor_create` section of the `QuerySet` reference.

Let me know if the explanation along the example should be more detailed.
",qagren,None,2018-03-27T05:52:27Z,2018-03-28T15:15:52Z
9826,settings.py: SCHEMA,"allow to set connection schema in settings.py

FIXME: pattern ""sql query"" % param is a bad practice and allows SQL Injection. It can be exploied in this example:
'SCHEMA': 'MYSCHEMA; DROP DATABASE'
But who in clear mind will set this schema in _his_ settings.py file?",kai3341,None,2018-03-26T21:17:28Z,2018-04-03T16:52:52Z
9825,Fixed #29261 -- Documented the reason for LICENSE.python.,"Added an expanatory note to the top of LICENSE.python, describing why
it's included.

Added documentation in the Django general FAQ to clarify that Django
is BSD licensed, but includes LICENSE.python for compliance when
backporting/modifying parts of the Python standard library.",ubernostrum,None,2018-03-26T01:46:12Z,2018-06-30T00:25:24Z
9824,Fixed #29258 -- Added type checking for login()'s backend argument.,"Fixes https://code.djangoproject.com/ticket/29258

Raised a  **TypeError** when the type of backend passed to `contrib.auth.login` is invalid. Provides better error messaging.",iabeer,None,2018-03-25T15:09:52Z,2018-03-28T14:41:49Z
9823,Increase `get_admin_log` and `static` templatetags test coverage,Increase `get_admin_log` and `static` templatetags test coverage,hramezani,None,2018-03-25T13:04:44Z,2018-03-26T17:55:28Z
9822,Increased test coverage for various template tags.,,atombrella,None,2018-03-24T20:27:43Z,2018-03-25T06:55:55Z
9821,Added example of pagination to `ListView` docs,"This PR is based on discussion in closed https://github.com/django/django/pull/9817 - I made a new PR because there were some issues with the fork I did for that PR.

Creating this PR without a ticket as it's a small addition to example in the docs; I will add a ticket if needed.

I think it's a good idea to have this addition because:

- The example given in pagination docs does not work for ListView, even though it appears as if it should work, and fails in a non-obvious way that does not give a good direction to investigate or debug.

- Most of the code in MultipleObjectMixin has to do with pagination, so the biggest 'value add' and the reason to use ListView is that it provides pagination, for other things it provides it would be trivial to roll your own CBV that adds a queryset to `get_context_data()`.

- Pagination is an important feature because unpaginated list can easily lead to poor performance of the view for end-user and also slow down the database and therefore slow down response times for all other concurrent users.",akulakov,None,2018-03-24T16:54:50Z,2018-03-26T16:42:02Z
9820,Fixed #28462 -- ModelAdmin.list_editable unusably slow and memory intensive with large datasets,"The last week we have a very big problem with the ram memory use in production environment (upgrading django 1.8.6 to 1.11.11) due to we use the change list feature to edit from the admin list view. Specifically, we have the environment deploy in heroku and we can see that when we update, in the list view edit, the consumption of memory increases a lot.

To solve this and solve the concurrency problem, any user add, delete or modify any object and the queryset change, I propose this fix, based on the following report data:

On a new project (django master branch), i have created 70000 django user and i will do changes for the field is_active from the list view with the actual code and my fix:

- Current code 10 django user per page: 
  Used memory start django view: 2659.57376 MB
  Used memory end django view: 2726.084608 MB
  Duration: 2.40997576713562 Seconds

- My fixes 10 django user per page:
  Used memory start django view: 2658.127872 MB 
  Used memory end django view: 2659.897344 MB
  Duration: 0.23535895347595215 Seconds

We can see that the duration and the memory consumption is less, the current code was 66.5MB and now 1.8MB

Now i created a new model, Person that only contains a user field, name field and enabled flag field and created 70000 instances and 10 objects per page:

- Current code:
  Used memory start django view: 3647.332352 MB
  Used memory end django view: 3693.91616 MB
  Duration: 0.9450168609619141 Seconds

- My fix:
  Used memory start django view: 3645.042688 MB
  Used memory end django view: 3646.287872 MB
  Duration: 0.2078557014465332 Seconds

In this case, the differences is less that the previous scenario, but still be big: 46.5MB vs 1.24MB and 0.9 seconds vs 0.2 seconds.

The next scenario is the same that the previous one but i added two new fields to Person, a date and a datetime fields:

- Current code:
  Used memory start django view: 3658.46528 MB
  Used memory end django view: 3713.82272 MB
  Duration: 1.3507213592529297 Seconds

- My fix:
  Used memory start django view: 3651.788672 MB
  Used memory end django view: 3652.894592 MB
  Duration: 0.18996572494506836 Seconds

In this case, the difference is greater than the previous scenario: 53.3MB vs 1.1MB and 1.3 seconds vs 0.2 seconds.

And, for the last case, i added a lot of fields to Person, in total 48 fields:

- Current code:
  Used memory start django view: 3712.872448 MB
  Used memory end django view: 3902.38208 MB
  Duration: 9.224681615829468 Seconds

- My dfix:
  Used memory start django view: 3794.28992 MB
  Used memory end django view: 3795.444992 MB
  Duration: 0.274524450302124 Seconds

In this case the differences are too much: 189.5MB vs 1.15MB and 9.2 seconds vs 0.3 seconds.

By last, in the case of our real project, described in the comments of the tracker bug, i have the following results (in this case, for django 1.11.11):

- Current code:
  Memory before: 3824.101888 MB
  Memory after: 4163.365376 MB
  Spend time: 7.39866995811 Seconds

- My fix: 
  Used memory start django view: 3825.412352 MB
  Used memory end django view: 3827.190016 MB
  Duration: 0.119446992874 Seconds

We had problems with the production environment because the memory ram consumption caused our system to be much slower than normal.
 
Based in the bug https://code.djangoproject.com/ticket/28462
  
",rubgombar1,None,2018-03-24T14:19:55Z,2018-05-08T07:10:52Z
9819,Fixed #29253 -- Made method_decorator(list) copy attributes.,This resolves the following ticket: https://code.djangoproject.com/ticket/29253,cjerdonek,None,2018-03-24T05:34:00Z,2018-06-24T01:44:25Z
9818,Fixed #29249 -- Added option to dumpdata with unicode,"Added the flag `--alow-unicode` to `dumpdata` managemet comment to prevent the
serializers from escaping unicode data.

PR adds support for JSON and YAML serializers.",hakib,None,2018-03-23T13:11:41Z,2020-04-13T11:07:49Z
9817,added note on page object context name in pagination docs,"Creating this PR without a ticket as it's only one simple paragraph, fairly straightforward.

I will add a ticket if needed.

I think it's a good idea to have this note because:
- in pagination doc page `contacts` is a page object, but in a `ListView`, normally `contacts` would be a queryset, and page object would be `page_obj`, and there's no setting to change its name.
- if this code is used as-is, there is no error, just some expected attributes would be missing, showing up as blanks on the page, so it's not obvious how to investigate or what the issue is
- IIRC GCBVs are the preferred way to do views so it would be good to have 'pagination' doc page provide an easy, direct note on how to handle them in the template
- other alternative would be to link to the ListView docs but the only example of pagination there is under 'how to combine ListView with SingleObjectMixin', which is more of a corner case, while this note applies in general to `ListView` and `MultipleObjectMixin`.
",akulakov,None,2018-03-22T22:04:38Z,2018-03-24T16:23:14Z
9816,Fixed #29251 -- Added CharField converter to the MySQL backend.,"https://code.djangoproject.com/ticket/29251

I'm not convinced that this is the best solution, but I haven't found a better way to solve this issue.",felixxm,None,2018-03-22T18:22:50Z,2018-03-31T09:52:39Z
9815,Fixed #29250 -- Added 'django_version' context to startapp/project docs.,"The reference documentation for management commands `startapp` and `startproject` (see https://docs.djangoproject.com/en/2.0/ref/django-admin/#startapp and https://docs.djangoproject.com/en/2.0/ref/django-admin/#startproject) omits a useful context variable, 'django_version'.

This PR illuminates use of 'django_version' when rendering app and project template files.",grahamu,None,2018-03-22T16:52:19Z,2018-03-23T01:37:10Z
9814,Add app_name to auth/urls.py,"Since Django 2.0 you need to specify app_name to use namespace, without app_name you cannot use namespace in project urls.py.

https://docs.djangoproject.com/en/2.0/topics/http/urls/#url-namespaces-and-included-urlconfs

**When it's missing?**
Simple example, in your app_name/app_name/urls.py set auth.urls, then in template try to use it from another app - you gonna need declared namespace to acccess it. And you cannot set namespace if there is no app_name.

",Boquete,None,2018-03-22T14:40:03Z,2018-03-22T15:11:07Z
9813,Fixed #29247 -- Allowed blank model field choice to be defined in nested choices.,"While sifting through the source code to understand the internals for a package I'm making, I stumbled upon what looked like a bug.

These lines right here:
```py
named_groups = isinstance(choices[0][1], (list, tuple))
blank_defined = not named_groups and any(choice in ('', None) for choice, __ in choices)
```
And indeed a bug it was.

The problem was that, had you defined your choices first with a group and then later on a choice that defined the blank value, the current implementation would skip right over it! So you would end up with having both the default blank value and the one you've defined, which doesn't look very pretty.

![picture](https://user-images.githubusercontent.com/30984274/37772917-39e232e8-2ded-11e8-9767-e3aa5bf98a66.png)

This pull request is my solution.

It gets rid of the group checking entirely as the documentation quotes that they are ""used for organizational purposes"", so it wouldn't make sense to check them, even if one did get named as either '' or None, which also addresses the issue in #23098 that those lines were put in there for in the first place.",orlnub123,None,2018-03-22T13:24:40Z,2018-04-20T15:25:20Z
9812,Fixed #29236 -- Fixed diffsettings crash when using settings.configure().,"Fixing https://code.djangoproject.com/ticket/29236 
**_Note_**: Tests to be added.",ChrsMark,None,2018-03-22T09:19:26Z,2018-08-18T20:53:53Z
9811,Fixed #29403 -- Fixed storing too large values in PyLibMCCache.,"This issue was previosly reported as a test failure five years ago, in issue #19914. Sadly the approach taken to fix it then was simply to paper over the exception in the test case, instead of handling it in the cache backend. This meant that for actual users of the code the issue remained even though the test no longer failed. This PR removes the papering-over and fixes the bug.
https://code.djangoproject.com/ticket/29403",ghost,None,2018-03-22T07:20:00Z,2018-08-23T15:17:12Z
9810,Update order of import statements to reflect code,"It's small, but the docs currently depict the mysite/urls.py import statements in the opposite order of how they appear in the code.

As this appears to be a trivial change, I have not created a corresponding Trac ticket. Thank you!",meli-lewis,None,2018-03-22T00:49:32Z,2018-03-22T17:47:04Z
9809,Refs #29147 --- Added JSONField serialization tests.,Demonstrates why the proposal in the ticket isn't acceptable.,timgraham,None,2018-03-21T23:20:42Z,2018-03-22T00:32:07Z
9808,Refs #28643 -- Added Repeat database function.,https://code.djangoproject.com/ticket/28643,felixxm,None,2018-03-21T17:56:19Z,2018-04-03T17:36:44Z
9807,Fixed too many parentheses in inspect unique_together output.,Regression in c76d87427d70f6c91ab855ed688828aa982720d2.,timgraham,None,2018-03-21T14:40:02Z,2018-03-21T15:22:32Z
9806,Clarified docs about week numbering,,alasdairnicol,None,2018-03-21T13:37:06Z,2018-03-22T00:00:40Z
9805,Increased test coverage for i18n template tags.,"The chunk starting with this is tricky to write tests for. I suppose it'd involve mocking. I introduce new files for template tags that didn't have one; it seems to be the convention that each template tag has a devoted file. 

```
except (KeyError, ValueError): 
    if nested:
```",atombrella,None,2018-03-21T07:21:11Z,2018-03-22T14:21:42Z
9804,Fixed #29243 -- Improved efficiency of migration graph algorithm.,Trac ticket: https://code.djangoproject.com/ticket/29243,monoidal,None,2018-03-21T00:22:46Z,2018-09-10T15:27:13Z
9803,Refs #23919 -- Removed obsolete comments about u'' prefixes.,,timgraham,None,2018-03-20T23:52:57Z,2018-03-21T12:15:11Z
9802,Fixed #28718 -- Allowed password reset if a user's current password doesn't use an enabled hasher.,"Regression in aeb1389442d0f9669edf6660b747fd10693b63a7.
Reverted changes to is_password_usable() from
703c266682be39f7153498ad0d8031231f12ee79 and documentation changes from
92f48680dbd2e02f2b33f6ad0e35b7d337889fb2.",timgraham,None,2018-03-20T21:32:23Z,2018-03-22T14:23:32Z
9801,Fixed #29147 -- Made JSONField.to_python() parse value as JSON.,https://code.djangoproject.com/ticket/29147,kingbuzzman,None,2018-03-20T18:58:36Z,2018-03-21T23:42:55Z
9800,Fixed #26291 -- Allowed loaddata to handle forward references in natural_key fixtures.,See #6221.,inglesp,None,2018-03-18T13:37:38Z,2018-03-20T16:16:25Z
9799,Extracted functions from Deserializer.,"This is preparation for handling forward references.

See #6221.",inglesp,None,2018-03-18T13:37:34Z,2018-03-20T16:14:10Z
9798,Refs #28643 -- Added LPad and RPad database functions.,https://code.djangoproject.com/ticket/28643,felixxm,None,2018-03-18T13:22:06Z,2018-03-20T20:35:30Z
9797,Fixed #29173 -- Documented that Model.save() doesn't refresh fields from the database.,"Add documentation for [issue_29173](https://code.djangoproject.com/ticket/29173).
I am not an English native. it would be appreciated if you help to improve this documentation",hramezani,None,2018-03-17T20:31:57Z,2018-03-19T12:27:18Z
9796,"Fixed #29229 -- Fixed column mismatch crash when combining two annotated values_list() querysets with union(), difference(), or intersection().",https://code.djangoproject.com/ticket/29229,AmrAnwar,None,2018-03-17T12:44:23Z,2019-08-14T15:21:42Z
9795,Fixed #29229 -- Added compiler.query.annotation & extra in the condition,"if there is any note, just tell me and I'll fix it
thanks",AmrAnwar,None,2018-03-17T10:32:27Z,2018-03-17T12:31:51Z
9794,Removed args in Index.clone.,"The constructor does not accept list-arguments, and the `deconstruct`-method always returns the empty tuple.",atombrella,None,2018-03-17T09:52:31Z,2018-03-18T07:15:36Z
9793,Fixed #29232 -- Added title option for admin filter when providing field name,https://code.djangoproject.com/ticket/29232,dsanders11,None,2018-03-17T02:46:00Z,2019-07-05T12:01:09Z
9792,Removed DatabaseFeatures.can_introspect_null.,The only known usage is in the unmaintained django-pymssql project.,timgraham,None,2018-03-16T14:26:42Z,2018-03-16T16:07:28Z
9791,ORM update,,mithlesh4257,None,2018-03-15T22:08:51Z,2018-03-15T22:09:02Z
9790,Fixed hanging indentation in various code.,,felixxm,None,2018-03-15T21:53:44Z,2018-03-16T09:55:02Z
9789,Fixed #23406 -- Allowed migrations to be loaded from .pyc files.,"Revamp of the original #9718 PR that used a setting. Now automatically loads .pyc files and traps for any ImportError caused by ""bad magic number"" to display a more helpful message. I think a similar approach may be helpful in the DjangoTemplates backend, which loads templatetags modules and may experience similar errors, but it's not really in the scope of this ticket.",dcwatson,None,2018-03-15T19:37:53Z,2018-03-26T14:12:19Z
9788,get_model for ModelForm,"I create a model and then I create a Model

class Foo(models.Model):
    name = models.CharField(_(""Name""), max_length=128)
    def __str__(self):
        return self.name

class FooForm(ModelForm):
    class Meta:
        model = Foo
        fields = ['name']
and so in views.py it is easy to manipulate objects from modelform (using view or not). 
as apps.get_model returns the model, I would like to return the modelForm like this

object_class = apps.get_model(app_name, object_name) #works
object_form_class = apps.get_model(app_name, '%sForm' % object_name) # doesn't work

 ",Foxugly,None,2018-03-15T17:01:58Z,2018-03-15T17:12:06Z
9787,Refs #29155 -- Fixed LookupTests.test_pattern_lookups_with_substr() crash on Oracle.,"Test introduced in feb683c4c2c5ecfb61e4cb490c3e357450c0c0e8 revealed unexpected behavior on Oracle, that allows to concatenate `NULL` with strings (see [29222](https://code.djangoproject.com/ticket/29222)).",felixxm,None,2018-03-15T10:37:26Z,2018-03-15T13:56:41Z
9786,Fixed #29221 -- Corrected admin's autocomplete widget to add a space after custom classes.,"Put space between the `admin-autocomplete` CSS class and the preceding classes 

Fixes ticket_29221",citxx,None,2018-03-14T22:58:26Z,2018-03-15T14:55:34Z
9785,"Auth: change user_passes_test func, new arg arg_position add","https://code.djangoproject.com/ticket/29220
I had problems Add my decorations user_passes_test functions, because decorator _wrapped_view assume, the first arg is the `request` var parameter, when i call user_passes_test from a view into a class, that not work, it take the arg `self` look like a arg `request`

example:
`@user_passes_test(role_client_check)`
   `def index(self, request):`

Fatal error: Class don't have attribute user.

The next new change work for Django 1.11
but i see that Django 2.X file, doesn't change a lot

Now i can call the auth:
`@user_passes_test(role_client_check, arg_position=0)`
   `def index(self, request):`

`arg_position` can be specific when the first argument isn't ""request""
`arg_position` is a integer with the position of request on view function

I created my own user_passes_test function to solve this feature.",olopezdeveloper,None,2018-03-14T20:51:19Z,2018-03-15T12:55:49Z
9784,Fixed #29219 -- Made admin filters use processed params rather than request.GET.,https://code.djangoproject.com/ticket/29219,dsanders11,None,2018-03-14T18:11:35Z,2018-03-15T15:33:20Z
9783,"Fixed #27392 -- Removed ""Tests that"", ""Ensures that"", etc from test docstrings.","Remove ""Tests that"", ""Ensures that"", etc  from test docstrings ",bhaveshpraveen,None,2018-03-14T17:50:58Z,2018-03-17T20:14:16Z
9782,Fixed #29200 -- Fixed label rendering when using RadioSelect and CheckboxSelectMultiple with MultiWidget.,https://code.djangoproject.com/ticket/29200,timgraham,None,2018-03-14T15:41:05Z,2018-03-15T13:54:31Z
9781,Moved SchemaLoggingTest to tests/schema.,,timgraham,None,2018-03-14T14:21:26Z,2018-03-14T14:47:13Z
9780,Fixed #29206 -- Fixed PasswordResetConfirmView crash when the URL contains a non-UUID where one is expected.,https://code.djangoproject.com/ticket/29206,MattBlack85,None,2018-03-14T09:41:04Z,2018-03-23T10:04:05Z
9779,Add silent failure of divisibleby filter,"Hi,
I understand the community guideline but this simple change did not seem significant enough to warrant a ticket.
If a field can be null and blank, having the value (which would be None) divided by a divisor would show an error, but I think it might be a good decision to make the filter fail silently by returning  an empty string.",ChHeYo,None,2018-03-14T00:15:34Z,2018-04-01T00:55:19Z
9778,Changed es_MX's THOUSAND_SEPARATOR to a comma,,elcone,None,2018-03-13T16:11:50Z,2018-03-13T16:48:12Z
9777,Fixed #21408 — German Translation for “3 days ago”,"The problem:
“3 days ago” should translate to “vor 3 Tagen” in German, while “3 days” translates to “3 Tage”. [#21408](https://code.djangoproject.com/ticket/21408) describes that django always translated to “Tage”, even when the dative “Tagen” was correct. The same applies to months (“Monate”/“Monaten”) and years (“Jahre”/“Jahren”).

The solution:
* Let `timesince` call `npgettext_lazy` instead of `ngettext_lazy`. 
* Let the humanize function pass the translation context `naturaltime` to `timesince`.
* Add the three new translations to the corresponding `.po` file, and recompile the `.mo` file.
* Add a regression test.",mxmerz,None,2018-03-13T15:31:23Z,2018-05-07T10:07:22Z
9776,Changed es_MX's THOUSAND_SEPARATOR to a comma.,"Added ', ' and removed '\xa0'",elcone,None,2018-03-12T19:40:43Z,2018-03-13T02:08:03Z
9775,Fixed #29213 -- Fixed autocomplete widget's translations for zh-hans/zh-hant.,"Since `zh-cn` and `zh-tw` has been removed from i18n support, [this line](https://github.com/django/django/blob/3c71fb3909d4fdf6691712dfe84d7b7b8e9fcc35/django/contrib/admin/widgets.py#L374) should be updated to make sure js media files for `zh-hans` and `zh-hant` really work.",dzhuang,None,2018-03-12T16:58:30Z,2018-03-13T15:22:49Z
9774,Fixed #29212 -- Documented redirect loop if @permission_required used with redirect_authenticated_user.,Ticket [#29212](https://code.djangoproject.com/ticket/29212).,pope1ni,None,2018-03-12T15:53:48Z,2018-06-15T09:30:27Z
9773,corrections in widget docs,,vlt,None,2018-03-11T19:41:48Z,2018-11-16T09:47:41Z
9772,Fixed #29209 -- Fixed Cast() with TextField on MySQL.,https://code.djangoproject.com/ticket/29209,sir-sigurd,None,2018-03-11T17:07:17Z,2018-03-13T03:14:14Z
9771, Refs #29004 -- Optimized InspectDBTransactionalTests.test_include_views() by specifying database tables.,https://code.djangoproject.com/ticket/29004,felixxm,None,2018-03-11T12:29:12Z,2018-03-12T16:15:31Z
9770,Removed UploadedFile.DEFAULT_CHUNK_SIZE as it's inherited from File.,,sir-sigurd,None,2018-03-10T13:07:46Z,2018-03-12T13:14:10Z
9769,Used cached_property for File.size.,,sir-sigurd,None,2018-03-10T12:27:11Z,2018-03-12T13:10:44Z
9768,Fixed #29199 -- Fixed crash when database user password contains @ sign on Oracle.,https://code.djangoproject.com/ticket/29199,felixxm,None,2018-03-09T16:12:17Z,2018-03-13T18:07:11Z
9767,Fixed #29184 -- Made TabularInline respect model form's Meta.labels and help_texts.,Providing a ModelForm for admin.TabularInline will have any `Meta.labels` or `Meta.help_texts` overrides for read-only fields ignored.,hramezani,None,2018-03-08T22:22:58Z,2018-03-18T01:14:56Z
9766,Remove colon,This colon is wrong here,ovalseven8,None,2018-03-08T17:32:08Z,2018-04-09T07:58:15Z
9765,Fixed #29195 -- Fixed Exists.output_field resolution on single-valued queries.,"The `Subquery` class which `Exists` inherits from defaulted to using single-valued querie's field if no `output_field` was explicitly specified on initialization which was bypassing the `Exists.output_field` defined at the class level.

Moving `Subquery`'s dynamic `output_field` resolution to `_resolve_output_field` should make sure the fallback logic is only performed if required.

Thanks Oli Warner for the detailed report.

https://code.djangoproject.com/ticket/29195",charettes,None,2018-03-08T07:21:29Z,2018-03-08T19:08:02Z
9764,Skip session save and cookie delete for 500 responses,Don't change session or cookie if you has 500 status code. If there is an session loading exception then the cookie is deleted.,kvspb,None,2018-03-07T21:54:00Z,2018-03-28T17:05:56Z
9763,Fixed #29188 -- Fixed size changing in ContentFile after string writing.,https://code.djangoproject.com/ticket/29188,web-maker,None,2018-03-07T21:28:59Z,2018-03-08T19:37:17Z
9762,Fixed #29155 -- Fixed crash when database functions are used with pattern lookups.,https://code.djangoproject.com/ticket/29155,felixxm,None,2018-03-07T20:03:42Z,2018-03-14T09:00:37Z
9761,"Used console directive in ""Writing documentation"".",,royzwambag,None,2018-03-07T11:05:22Z,2018-03-07T21:19:22Z
9760,Fix #28943 -- Stop enforcing get_context_data(),"For when {{ view }} is enough, in cases with 2 children below
TemplateView.",jpic,None,2018-03-06T23:30:53Z,2018-03-07T00:05:40Z
9759,"Simplified Contains, StartsWith, and EndsWith lookups.",,felixxm,None,2018-03-06T21:14:51Z,2018-03-07T19:14:02Z
9758,Add pass statement,,srinivasreddy,None,2018-03-06T20:20:35Z,2018-03-15T15:39:04Z
9757,Fixed #29192. Corrected the documentation to state that fields in an …,…abstract base model class can be overridden by the inheriting class,kevinlee05,None,2018-03-06T18:33:59Z,2018-03-06T18:46:21Z
9756,Fixed #29192 -- Updated docs on abstract base models,"According to the release notes, this was changed in 1.10, so I guess we should backport this change to 1.10, 1.11 and 2.0.",rfleschenberg,None,2018-03-06T16:29:47Z,2018-03-08T12:07:27Z
9755,Fixed #29192 -- Corrected docs regarding overriding fields from abstract base classes.,"The issue https://code.djangoproject.com/ticket/29192 says that it's actually possible to override fields of abstract base classes.

Someone on IRC even said it's possible to remove fields using `field = None`. Is that true/recommended?

The nice thing is that you can now make fields of User required that are not required by default. For example:
```
from django.contrib.auth.models import AbstractUser

class User(AbstractUser):
    email = models.EmailField(_('email address'), blank=False)
```",ovalseven8,None,2018-03-06T16:19:31Z,2018-03-13T17:56:43Z
9754,Apply minor fix to Design your URLs section in overview.txt,"This PR attempts to apply a minor fix to the ""Design your URLs"" section in overview.txt to improve the section's clarity. ",jblang94,None,2018-03-05T22:05:33Z,2018-03-07T15:55:29Z
9753,Fixed #29165 -- Clarified how to load initial data with migrations.,https://code.djangoproject.com/ticket/29165,timgraham,None,2018-03-05T15:56:36Z,2018-03-08T15:58:49Z
9752,Minor fixes to improve install.txt's clarity,This PR contains some minor fixes which attempt to improve install.txt's clarity.,jblang94,None,2018-03-05T06:25:50Z,2018-03-05T15:36:52Z
9751,Update models.py,Because User is an AbstractUser the required fields are the same.,ovalseven8,None,2018-03-04T17:48:20Z,2018-03-04T20:24:37Z
9750,Fixed #29148 -- Explain how to use QuerySet.get_or_create() with Q objects,https://code.djangoproject.com/ticket/29148,hpfn,None,2018-03-04T16:52:35Z,2018-10-16T17:34:55Z
9749,Fixed #28981 -- Raise a GeoIP2Exception if path is specified but no valid database can be found.,https://code.djangoproject.com/ticket/28981,web-maker,None,2018-03-03T21:51:02Z,2018-03-05T17:56:24Z
9748,Fixed #3006 -- Can now filter querysets on generic foreign key fields,,ryselis,None,2018-03-03T19:42:13Z,2018-04-19T01:02:05Z
9747,Report model violating AutoField constraint,This is immensely helpful when cleaning up `models` created by `inspectdb`. ,Almad,None,2018-03-03T14:13:48Z,2018-03-03T18:22:01Z
9746,test,test,sazia-afrin,None,2018-03-03T06:33:04Z,2018-03-03T06:50:42Z
9745,Condensed code in django.forms.widgets,,blueyed,None,2018-03-02T21:43:08Z,2018-03-04T16:45:52Z
9744,doc: fix typo: s/if/is,[ci skip],blueyed,None,2018-03-02T19:07:06Z,2018-03-02T20:41:22Z
9743,[RFC] Keep ModelAdmin's JS/CSS before form's,"The changes in https://code.djangoproject.com/ticket/28377 (https://github.com/django/django/pull/8667) might cause
unexpected ordering with django-autocomplete-light on an admin page that
also includes a date selector widget.

The reason for this is that the date widget includes
`'admin/js/vendor/jquery/jquery.js'`, which is also included in the
Admin's media already, and then everything before it gets prepended.

Simplified version:

    admin_media = ['jquery.js']
    form_media = ['app/jquery.init.js', 'jquery.js', 'calendar.js']
    merged = ['app/jquery.init.js', 'jquery.js', 'calendar.js']

This causes a JavaScript error, since `app/jquery.init.js` has no jQuery
available.

A solution to this might be to keep the admin's media separate from the
form's media, which this PR tries to do.",blueyed,None,2018-03-02T18:53:41Z,2019-09-17T21:30:59Z
9742,Fixed #29180 -- Fixed a regression where migrations already in the plan were readded.,https://code.djangoproject.com/ticket/29180,collinanderson,None,2018-03-02T15:34:50Z,2018-03-09T13:40:30Z
9741,WIP: 29177 - ForeignKeys on Unmanaged models get those serialized into migrations,"Trac ticket: https://code.djangoproject.com/ticket/29177

Marking as work in progress because it's just a sketch right now, and will need rebasing & tidying up. I've left comments saying as much in the code, so those at least will need to go :)

Specific questions I have:
- how do I verify that the addition of the FK into the migration state won't try to create constraints/indexes? I suspect that's maybe what the `AddField` on `test_unmanaged_model_fk_to_managed_model` might try and do?
- is it *correct* that an FK from an unmanaged model to a managed model leads to a different series of operations (`CreateModel, CreateModel, AddField`) than a FK from an unmanaged model to another unmanaged model (`CreateModel, CreateModel`)?
- I feel like *adding* an FK to an existing unmanaged model ought to do *something* (`test_adding_an_fk_to_an_unmanaged_model`) so that the serialized field is available in subsequent migrations, even if it's a no-op. But it doesn't seem to, given the way I've used `self.get_changes` ... so maybe I've used it wrong?
",kezabelle,None,2018-03-02T09:38:10Z,2020-01-09T14:37:07Z
9740,Fixed #29176 -- Fixed User.normalize_username() crash if username isn't a string.,"https://code.djangoproject.com/ticket/29176
If you use an other type for username than CharField, unicodedata.normalize will fail.",cmehay,None,2018-03-01T14:48:08Z,2018-03-02T17:14:38Z
9739,Refs #28459 -- Improved performance of time difference expressions on MySQL.,"https://code.djangoproject.com/ticket/28459

Before:
```
%timeit bool(TestModel.objects.values_list(models.ExpressionWrapper(models.F('time') - models.F('time'), output_field=models.DurationField())))
35.4 ms ± 901 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```

After:
```
%timeit bool(TestModel.objects.values_list(models.ExpressionWrapper(models.F('time') - models.F('time'), output_field=models.DurationField())))
30 ms ± 810 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2018-03-01T09:46:47Z,2018-03-05T11:11:26Z
9738,Fixed #29172 -- Fixed crash with Window expression in a subquery.,[Ticket](https://code.djangoproject.com/ticket/29172#ticket),tricoder42,None,2018-03-01T07:56:43Z,2018-03-01T15:52:22Z
9737,Eliminated the need to modify a model forms test when new test files are added.,,timgraham,None,2018-02-28T15:35:54Z,2018-02-28T17:38:28Z
9736,Refs #27728 -- Made cosmetic edits to admin template tag template overriding.,Follow up to https://github.com/django/django/pull/7840.,timgraham,None,2018-02-28T12:21:49Z,2018-03-01T17:59:18Z
9735,Moved yesno filter test to its own file.,,hramezani,None,2018-02-27T20:05:38Z,2018-07-27T21:15:01Z
9734,Fixed #29166 -- Fixed crash in When() expression with a list argument.,https://code.djangoproject.com/ticket/29166,felixxm,None,2018-02-27T19:37:55Z,2018-02-28T17:06:04Z
9733,Fixed buggy regex in URL dispatcher docs,"I think we need to escape `-` in `[\w-_]`, otherwise it is interpreted as a range:

```
django.core.exceptions.ImproperlyConfigured: ""^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/(?P<slug>[\w-_]+)/$"" is not a valid regular expression: bad character range \w-_ at position 59
```

Furthermore, `\w` already matches `_`, so we can just remove that.",rfleschenberg,None,2018-02-26T14:45:46Z,2018-02-27T01:00:15Z
9732,Refs #28909 -- Simplifed code using unpacking generalizations.,,felixxm,None,2018-02-25T20:31:40Z,2018-03-17T19:55:08Z
9731,Refs #24791 -- Made PostgreSQL's nodb connection use first PostgresSQL db when 'postgres' db isn't available.,https://code.djangoproject.com/ticket/24791,felixxm,None,2018-02-25T19:35:49Z,2018-04-06T19:35:22Z
9730,Removed unnecessary setdefault from CheckRegistry.register().,,felixxm,None,2018-02-25T17:28:00Z,2018-02-26T16:32:13Z
9729,Stable/2.0.x,,whh0306,None,2018-02-25T15:55:18Z,2018-02-25T16:48:32Z
9728,Fixed #29161 -- Removed BCryptPasswordHasher from PASSWORD_HASHERS.,https://code.djangoproject.com/ticket/29161,timgraham,None,2018-02-24T15:25:10Z,2018-02-26T14:05:26Z
9727,"Removed ""Remove any old versions of Django"" install instructions. ",They are obsolete given the prevalence of pip.,srinivasreddy,None,2018-02-24T09:22:52Z,2018-02-27T01:40:29Z
9726,Fixed #29159 -- Made ModelChoiceIterator reuse QuerySet result cache ,"When `__len__` is called (e.g. when casting to list or tuple), the
QuerySet is evaluated and the result cache populated. `iterator()`
should not be called on the `QuerySet` after that, it would reset the
result cache and trigger a second query.

https://code.djangoproject.com/ticket/29159",francoisfreitag,None,2018-02-24T06:49:34Z,2018-03-01T22:42:29Z
9725,Fixed #29158 -- Prevented ModelChoiceIterator crash when checking choices' length,"Now the `queryset` property systematically calls `.all()` on the
`QuerySet` or `Manager` when set. That avoids calling `.all()` in the
`__iter__` method, preventing a duplicate query when choices are cast to
a `list` and there's a `prefetch_related()`.

The duplicate query generated when there are no `prefetch_related` will
be removed with [ticket 29159](https://code.djangoproject.com/ticket/29159).

Ticket: https://code.djangoproject.com/ticket/29158",francoisfreitag,None,2018-02-24T06:40:52Z,2018-03-01T19:41:16Z
9724,Removed using argument from admin's get_deleted_objects().,The first commit adds a test for the `IndexError` branch in the second commit which would otherwise be untested.,timgraham,None,2018-02-23T18:20:41Z,2018-02-24T14:50:49Z
9723,Fixed #29154 -- Corrected examples in pluralize template filter docstring and added tests.,Fix `pluralize` template filter and add some tests.,hramezani,None,2018-02-23T17:20:43Z,2018-02-23T19:49:18Z
9722,Fixed #29142 -- Fixed crash when OuterRef is used with an operator.,https://code.djangoproject.com/ticket/29142,schinckel,None,2018-02-23T07:44:23Z,2018-02-23T23:25:18Z
9721,Fixed #27991 -- Add obj arg to InlineModelAdmin.has_add_permission().,"Thanks Vladimir Ivanov for the initial patch.

https://code.djangoproject.com/ticket/27991",jdufresne,None,2018-02-23T04:34:26Z,2018-04-13T20:19:40Z
9720,Added back-quotes around argument obj in admin docs.,,jdufresne,None,2018-02-22T14:09:49Z,2018-04-03T13:58:52Z
9719,Removed unused opts argument from admin's get_deleted_objects().,Unused since e12b3199d0c01694ca6b09add5e0f27cadffc8ad.,timgraham,None,2018-02-21T18:34:14Z,2018-02-21T19:10:51Z
9718,Fixed #23406 -- added a MIGRATIONS_INCLUDE_PYC setting,"…to allow loading compiled migrations. Based on the patch from jdetaeye in the ticket, but with a setting to control the behavior, documentation, and tests.",dcwatson,None,2018-02-21T17:31:57Z,2018-03-15T17:13:04Z
9717,Fixed cast numeric values of Oracle backend for Python 3,"Fixed cast numeric values of Oracle backend for Python 3.
Error raises if ""precision"" is None and ""scale"" is None.",pikhovkin,None,2018-02-21T10:53:32Z,2018-02-21T11:17:06Z
9716,Used a CSS positioning in tutorial 6 that doesn't differ across browsers.,"Otherwise, in FireFox, the <html> and <body> elements take just as much height as is needed for the content, i.e. the unordered list of questions. So the image appears not at the bottom of the browser window, but the bottom of the <body> element, which is surprising when you follow the tutorial.
Please test in your environment as well.",rogererens,None,2018-02-21T10:25:27Z,2018-02-21T17:07:25Z
9715,Fixed #29112 -- Allowed using QuerySet.update() to update specific keys in nested JSONField.,"Specific keys can be updated within a nested JSONField  by specifying
the path and new value as arguments to the update() method, just like
the syntax used in Lookups.
https://code.djangoproject.com/ticket/29112",priyanshsaxena,None,2018-02-21T09:26:31Z,2020-07-05T12:22:55Z
9714,Updated project template to use single quotes where appropriate.,"I didn't file a ticket for this, it seems a trivial change since the style guide says to use single quotes where possible. But I am also new to django contribution, so I might be missing something (I couldn't find any relevant discussions).",DOsinga,None,2018-02-20T18:50:49Z,2018-02-20T23:52:29Z
9713,Ref 17664 -- Adding tests around smartif behavior,"No behavior has changed. This patch just includes several tests around this existing behavior now, and no documentation has been changed because these tests (I believe) accurately reflect what the documentation says. See ticket for reference (https://code.djangoproject.com/ticket/17664)

",raiderrobert,None,2018-02-20T18:45:23Z,2020-04-22T10:00:49Z
9712,Fixed #29132 -- Avoided connecting update_last_login() handler if User.last_login isn't a field.,https://code.djangoproject.com/ticket/29132,marazmiki,None,2018-02-20T13:55:35Z,2018-02-21T16:04:26Z
9711,Fixed cast numeric values of Oracle backend for Python 3,"Fixed cast numeric values of Oracle backend for Python 3.
Error raises if ""precision"" is None and ""scale"" is None.",pikhovkin,None,2018-02-20T13:25:18Z,2018-02-21T08:29:33Z
9710,Fixed #29146 -- Readded ^ and $ inadvertently removed from re_path() examples.,https://code.djangoproject.com/ticket/29146,artberryx,None,2018-02-20T10:12:13Z,2018-02-21T02:31:31Z
9709,Fixed #29144 -- Made untranslated strings for territorial language variants use translations from the generic language variant.,"Added missing fallback tracking to DjangoTranslation.merge function to fix fallback handling for sparse territorial message catalogs.

Related ticket: https://code.djangoproject.com/ticket/29144",patrys,None,2018-02-19T18:17:05Z,2018-03-03T17:35:03Z
9708,Fixed #29143 - IntConverter does not accept negative integers,"Fixed IntConverter to accept negative integers as well. Modified corresponding tests and added self to AUTHORS.

Ticket link - https://code.djangoproject.com/ticket/29143",ashishnitinpatil,None,2018-02-19T15:53:56Z,2018-02-19T15:57:50Z
9707,Fixed #29140 -- Fixed crash when email body is None,"When testing whether a payload has long lines or not,
the code crashed trying to call method ""splitlines"",
even though users might have attached a file.

So my solution was to simply say it doesn't have long
lines.  Python core mail library would perfectly accept
a payload=None.",wm3ndez,None,2018-02-19T13:45:27Z,2020-04-01T13:03:33Z
9706,Fixed #29141 -- Corrected BCryptPasswordHasher's docstring about truncation.,"BCrypt truncates at 72 bytes and not at 72 characters. Let's be clear
about that.",MarkusH,None,2018-02-18T13:23:36Z,2018-02-26T17:43:35Z
9705,Fixed #29135 -- Prevented get_object/list_or_404() from hiding AttributeError raised by QuerySet filtering.,https://code.djangoproject.com/ticket/29135,dizballanze,None,2018-02-17T08:38:53Z,2018-02-19T16:19:02Z
9704,Removed redundant lookup name in register_lookup() calls.,"Without this, the lookup_name of each transform isn't tested.",timgraham,None,2018-02-16T19:24:07Z,2018-02-19T18:12:21Z
9703,Fixed #28398 -- Add 'Did you mean' suggestions to manage.py,"Ticket: https://code.djangoproject.com/ticket/28398

With this the output from `manage.py rnserver` would be:

```
Unknown command 'rnserver'. Did you mean runserver?
Type 'manage.py help' for usage.
```",orf,None,2018-02-16T18:18:31Z,2018-02-21T14:04:56Z
9702,Quoted field names in cache db backend SQL.,"For example 'value' is reserved keyword for Firebird RDBMS https://firebird.org/ .
So database backend for firebird djfirebirdsql  https://github.com/nakagami/djfirebirdsql raise error.

I think 'value' and other fields should be quoted.",nakagami,None,2018-02-16T00:25:16Z,2018-03-14T02:46:41Z
9701,Fixed #29133 -- Fixed call_command() crash if a required option is passed in options.,…via **options,atomic77,None,2018-02-15T05:44:37Z,2018-03-02T17:25:09Z
9700, Made cosmetic edits to contrib.admin.filters.,,timgraham,None,2018-02-14T17:01:53Z,2018-02-14T18:40:32Z
9699,Removed AuthenticationForm.get_user_id().,Unused since aab3a418ac9293bb4abd7670f65d930cb0426d58.,timgraham,None,2018-02-14T16:14:28Z,2018-02-15T00:09:12Z
9698,Fixed #29126 -- Doc'd the behavior of QuerySet.update_or_create() with manually specified pks.,https://code.djangoproject.com/ticket/29126,timgraham,None,2018-02-14T15:06:29Z,2018-02-15T18:38:09Z
9697,Fixed #29024 -- TestContextDecorator exits even if setUp fails in tests,Thanks to Anthony King for reporting the bug,sshahbaj,None,2018-02-13T21:06:47Z,2018-04-20T15:02:43Z
9696,Stable/2.0.x,test,WilliamPring,None,2018-02-13T02:14:38Z,2018-02-13T02:16:47Z
9695,Fixed #24607 -- Serialized natural keys in multi-table inheritance models.,"Fixed from https://github.com/django/django/pull/8370, test from 74a575eb7296fb04e1fc2bd4e3f68dee3c66ee0a.",timgraham,None,2018-02-12T19:47:12Z,2018-02-13T02:44:02Z
9694,Fixed #29125 -- Made Q.deconstruct() deterministic with multiple keyword arguments.,https://code.djangoproject.com/ticket/29125,timgraham,None,2018-02-12T19:26:57Z,2018-02-13T01:50:44Z
9693,Added a test for Client.generic() data coercion.,"The smart_str() call (now force_bytes()) added in
e73838b6ddcc7b37c03f9eee04fa6e6a283fedb3 is otherwise untested.",timgraham,None,2018-02-12T16:01:12Z,2018-02-12T18:13:49Z
9692,Corrected doc'd type of some parameters from string to str.,,timgraham,None,2018-02-12T14:19:19Z,2018-02-12T14:38:31Z
9691,Fixed #28171 -- Added an exception if Form's empty_permitted and use_required_attribute arguments conflict.,https://code.djangoproject.com/ticket/28171,hpfn,None,2018-02-12T12:51:50Z,2018-02-22T11:56:48Z
9690,Fixed #24270 -- Scoped bash completion reference to source distribution.,"https://code.djangoproject.com/ticket/24270 :`django_bash_completion` is not part of the Wheel.

Tim's suggestion: 

> ...the best route might be to clarify the documentation to say that the script is included in the ""source distribution""...

c.f. https://code.djangoproject.com/ticket/21511: `wontfix`: not something we want to install to `PATH`",carltongibson,None,2018-02-12T10:03:59Z,2018-02-12T14:44:32Z
9689,Fixed typo in tests/one_to_one/tests.py,,Snow-Poijio,None,2018-02-12T09:10:48Z,2018-02-12T13:44:50Z
9688,Fixed #22449 -- Colorized output of test results,"Hi,

Here is code with tests and documentation for colorizing output of the `manage.py test` command.

Some features:

-  highlighting tracebacks if pygments library is available
-  highlighting SQL queries if pygments library is available and `manage.py test` command was invoked with `--debug-sql` argument
-  highlighting with corresponding colors based on the used pallete (dark or light)
-  can be switched off with `--no-color` argument
-  switching off automatically if the terminal doesn't support colors

Few screenshots:

![image](https://user-images.githubusercontent.com/952028/36074020-df039d82-0f4a-11e8-9a95-781977f0ffd1.png)

![image](https://user-images.githubusercontent.com/952028/36074013-d6cd5c0c-0f4a-11e8-84bf-8c67762883d1.png)",dizballanze,None,2018-02-11T13:45:23Z,2018-03-04T17:38:30Z
9687,Translation improved for Latvian Language,"Латвийский - made in Latvia as a country, Латышский - Latvian language",scheratan-projects,None,2018-02-11T13:43:04Z,2018-02-11T16:43:26Z
9686,Refs #27795 -- Removed force_bytes() in django.test.client where possible.,"The regression test in the first commit fails if `.encode().decode('iso-8859-1')` is removed.

The `data = force_bytes(data, settings.DEFAULT_CHARSET)` line was added in e73838b6ddcc7b37c03f9eee04fa6e6a283fedb3. I'm not sure that it's useless but no tests are failing.",timgraham,None,2018-02-11T01:54:30Z,2018-02-12T17:38:42Z
9685,"Added tests for utils.html.urlize() (in particular, lazy strings were untested).",,timgraham,None,2018-02-10T16:55:13Z,2018-02-10T20:46:03Z
9684,Refs #27795 -- Removed force_text() usage in django/test/testcases.py.,,jdufresne,None,2018-02-10T15:22:03Z,2018-02-11T15:55:55Z
9683,Refs #27795 -- Removed force_bytes() usage in django/template/loaders/cached.py.,,jdufresne,None,2018-02-10T15:13:12Z,2018-02-11T15:55:55Z
9682,[doc] Update Templates topic,Add warning about leaving the DjangoTemplates engine in TEMPLATES when using jinja2 for using the admin (as mentioned by @timgraham in the mailing list),math-a3k,None,2018-02-10T06:54:13Z,2018-04-12T13:36:41Z
9681,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,,jdufresne,None,2018-02-10T00:42:20Z,2018-02-11T15:55:55Z
9680,Fixed #29103 -- Fixed SchemaEditor.quote_value() for unicode strings on MySQL.,https://code.djangoproject.com/ticket/29103,claudep,None,2018-02-09T15:06:24Z,2018-03-17T21:26:36Z
9679,Removed unnecessary psycopg2-binary version from requirements.,`psycopg2-binary` version starts with 2.7.3.2.,felixxm,None,2018-02-09T12:38:41Z,2018-02-09T16:57:35Z
9678,Removal of the colloquial phrase in the translation into Polish,,ad-m,None,2018-02-09T09:36:51Z,2018-02-09T09:41:50Z
9677,Switched test requirement to new psycopg2-binary package.,,timgraham,None,2018-02-09T00:19:31Z,2018-02-09T01:23:01Z
9676,Fixed typo in docs/ref/models/querysets.txt.,,sir-sigurd,None,2018-02-08T08:35:26Z,2018-02-08T09:34:01Z
9675,Added csrf default for axios.js,,ghost,None,2018-02-08T08:20:29Z,2018-02-08T12:57:25Z
9673,Fixed #29048 -- Added **extra_context arg to as_vendor methods in database functions.,"Added the required argument to as_sqlite, as_mysql, as_oracle and
as_postgresql methods in classes directly or indirectly derived from
class Func.",priyanshsaxena,None,2018-02-08T07:13:25Z,2018-08-23T18:26:06Z
9672,Refs #27795 -- Removed force_bytes/text() usage in tests.,,timgraham,None,2018-02-07T15:44:45Z,2018-02-07T19:20:20Z
9671,Fixed #29118 -- Fixed crash with QuerySet.order_by(Exists(...)).,"The `resolve_expression` method in `BaseExpression` supports both calls with keyword arguments and positional arguments in practice. This commit makes sure the Exists class supports positional arguments.

(EDIT: Filed a ticket on [trac](https://code.djangoproject.com/ticket/29118#ticket))",rtpg,None,2018-02-07T03:10:03Z,2018-02-11T00:00:51Z
9670,Fixed #29049 -- Added slicing notation to F expressions.,"F expressions on string-based fields and arrays can now use standard
python slicing-notation. Added a new class SlicableF that handles
identification of slicable fields. Step-argument is not supported.
Added unit-tests and documentation, with an entry in release-notes.",priyanshsaxena,None,2018-02-06T21:47:39Z,2019-04-23T12:50:23Z
9669,Renamed the allow_sliced_subqueries database feature to allow_sliced_subqueries_with_in.,"After 0899d583bdb140910698d00d17f5f1abc8774b07, this database feature is false only on MySQL, which doesn't support sliced subqueries only with `IN/ALL/ANY/SOME`.",felixxm,None,2018-02-06T18:00:56Z,2018-02-07T09:49:37Z
9668,Fixed #29116 -- Fixed OpenLayersWidget deserialization ignoring the widget map's SRID.,https://code.djangoproject.com/ticket/29116,claudep,None,2018-02-06T10:53:50Z,2018-04-02T16:29:17Z
9667,"Fixed #28833 -- Prevented CacheMiddleware from caching responses with ""Cache-Control: private"".",https://code.djangoproject.com/ticket/28833,shangdahao,None,2018-02-06T05:58:41Z,2018-02-06T15:28:02Z
9665,Refs #28814 -- Fixed migrations crash with namespace packages on Python 3.7.,Due to https://bugs.python.org/issue32303.,timgraham,None,2018-02-05T18:29:43Z,2018-02-06T13:06:15Z
9664,Fixed #29106 -- Made DiscoverRunner display selected test tags.,"Fixed #29106 -- manage.py test displays tags that are in use

Ticket: https://code.djangoproject.com/ticket/29106

I was writing test for this, but wasn't sure how do I grab something that is printed on console. Neither I was able to attach a debugger (as can be done in py.test) when the test fails in unittest. If someone can provide me a pointer, I'll take this forward.",CuriousLearner,None,2018-02-05T17:44:28Z,2018-02-13T18:25:27Z
9663,Fixed #29113 -- Simplified django.forms.formsets.all_valid() and clarified docstring.,https://code.djangoproject.com/ticket/29113,timgraham,None,2018-02-05T14:46:51Z,2018-02-05T15:29:41Z
9662,Refs #28814 -- Imported from collections.abc to fix Python 3.7 deprecation warning.,"In Python 3.7, there is a warning that the abstract bases in collections.abc will no longer be accessible through the regular collections module in Python 3.8.
https://bugs.python.org/issue25988",rhettinger,None,2018-02-05T08:07:40Z,2018-02-05T16:42:48Z
9661,Made prefetch_related tests use assertCountEqual for unordered sequences.,,jdufresne,None,2018-02-04T20:28:33Z,2018-02-09T02:21:20Z
9660,Fixed #29108 -- Fixed crash in aggregation of distinct+ordered+sliced querysets.,"Regression in 4acae21846f6212aa992763e587c7e201828d7b0.
https://code.djangoproject.com/ticket/29108",charettes,None,2018-02-04T05:35:05Z,2018-02-08T15:04:30Z
9659,Fixed #29069 -- Ensure static file serving sends the request_finished signal,"Ticket: https://code.djangoproject.com/ticket/29069

This is just exploring what a fix would look like, and seeing if all the tests pass with the proposed changes. There could be wider implications of this, so not sure if we really should do this or not.",orf,None,2018-02-04T01:53:27Z,2020-04-03T14:02:44Z
9658,Fixed #29107 -- Doc'd that ModelForm doesn't actually inherit from Form.,https://code.djangoproject.com/ticket/29107,timgraham,None,2018-02-03T20:15:57Z,2018-02-08T15:10:33Z
9657,Refs #28723 -- Fixed stale prefetch_related cache after add/remove.,Regression in 514b2c989a948e3c59bda0da0c9427acf643cf5b.,jdufresne,None,2018-02-03T17:30:44Z,2018-02-09T02:21:22Z
9656,Fixed #29109 -- Fixed display of auto-generated datetime/time input in admin form for Thai locale.,"As DateTimeShortcut.js does not support %f, formats with %f are deprioritized.",whs,None,2018-02-03T08:56:50Z,2018-02-10T21:05:42Z
9655,rebase,,hemlatabhatt,None,2018-02-02T15:44:24Z,2018-02-02T15:47:25Z
9654,Refs #27795 -- Replaced force_bytes() usage in django.core.signing,,auvipy,None,2018-02-02T08:55:38Z,2019-03-03T08:04:07Z
9653,Refs #27795 -- Replaced force_bytes() usage in django.http,@jdufresne could you review,auvipy,None,2018-02-02T08:03:58Z,2018-04-29T17:14:12Z
9652,Refs #27795 -- Replaced force_bytes() usage in django.core.cache.,,jdufresne,None,2018-02-02T04:25:57Z,2018-02-09T02:21:28Z
9651,Simplified aggregation.tests.,,felixxm,None,2018-02-01T21:18:19Z,2018-02-02T11:28:21Z
9650,make import form classes more consistent,,auvipy,None,2018-02-01T20:44:19Z,2019-06-11T07:17:59Z
9649,Fixed imports per isort 4.3.0.,,felixxm,None,2018-02-01T08:01:22Z,2018-02-01T13:51:27Z
9648,Refs #27795 -- Replaced force_text/bytes with decode/encode in password hashers.,"The inputs, outputs, and bytes/str boundaries for password hashers are well defined. Allows for explicit use of `.encode()`/`.decode()`.

Use 'ascii' encoding for the string representation of hashes.",jdufresne,None,2018-02-01T02:27:47Z,2018-02-02T03:23:47Z
9647,Fixed #29094 -- Fixed crash when entering an invalid uuid in ModelAdmin.raw_id_fields.,"Regression in 2f9861d823620da7ecb291a8f005f53da12b1e89.
https://code.djangoproject.com/ticket/29094",timgraham,None,2018-01-31T18:52:24Z,2018-02-01T13:56:57Z
9646,Removed unnecessary copy/paste comment in DatabaseWrapper.check_constraints() on SQLite and MySQL backends.,Copied from `BaseDatabaseWrapper.check_constraints()`.,felixxm,None,2018-01-31T18:30:27Z,2018-02-01T07:25:52Z
9645,Fixed #29082 -- Made test Client appropriately encode JSON.,"https://code.djangoproject.com/ticket/29082
(continued from https://github.com/django/django/pull/9636)",NDevox,None,2018-01-31T16:41:28Z,2018-02-06T23:57:45Z
9644,[doc] Backend Config section in GIS Installation,Add Backeng Configuration section in the Installation documentation of GeoDjango (as suggested by @timgraham),math-a3k,None,2018-01-31T04:40:16Z,2018-01-31T17:09:27Z
9643,Removed unused argument from private API popen_wrapper(),Unused since introduction in 7fca4416c7f7ce66d528f0d1ad829cf3b8290b89.,jdufresne,None,2018-01-31T03:49:08Z,2018-02-01T04:23:11Z
9642,Refs #27795 -- Replaced force_text() usage in django.core.management,"As `Popen.communicate()` always returns bytes, replace with explicit calls to `.decode()`.

Coerce all values using `str()` before passing to `ArgumentParser.parse_args()`.

https://code.djangoproject.com/ticket/27795",jdufresne,None,2018-01-31T03:16:26Z,2018-02-01T04:23:17Z
9641,[2.0.x] Fixed #29071 -- Fixed contrib.auth.authenticate() crash if a backend doesn't accept a request but a later one does.,"Regression in a3ba2662cdaa36183fdfb8a26dfa157e26fca76a.
https://code.djangoproject.com/ticket/29071",timgraham,None,2018-01-31T00:50:28Z,2018-01-31T14:19:09Z
9640,Fixed #29091 -- Fixed makemigrations crash if migration directory doesn't have __init__.py.,"Regression in aadd3aeb2ba3153e35bd805c80c901f289a6f333.
https://code.djangoproject.com/ticket/29091",timgraham,None,2018-01-30T23:31:52Z,2018-01-31T14:59:01Z
9639,Added tests for SelectDateWidget.value_from_datadict().,,timgraham,None,2018-01-30T18:45:09Z,2018-01-30T23:10:37Z
9638,Fixed #29089 -- Avoided redundant date parsing in SelectDateWidget.format_value().,https://code.djangoproject.com/ticket/29089,timgraham,None,2018-01-30T16:45:06Z,2018-01-30T23:11:10Z
9637,Refs #29086 -- Doc'd how to detect bytestring mistakes.,https://code.djangoproject.com/ticket/29086,timgraham,None,2018-01-30T15:59:57Z,2018-01-31T00:59:10Z
9636,Fixes #29082 -- Encodes JSON appropriately in the test Client.,"Added option to switch the encoder if desired - although it has been pointed out that we could just subclass the Client instead.

Worth noting there are no additional tests for the PUT, PATCH and DELETE methods right now.

I am happy to add these I just don't have time _right now_, maybe tonight.

For now I'd like to get this reviewed to see if there is anything else we need to change.",NDevox,None,2018-01-30T15:37:37Z,2018-01-31T16:54:13Z
9635,Fixed #29090 -- Updated Hungarian time formats to use ':' instead of '.'.,"It's about time notation in Hungary, we use officially ':' instead of '.' among hour, minute and second. Also added the leading zeroes to hour. This one is not official, just some standardization. 
I can't provide tests yet, but probably some expert eyes are enough to check.",danieltatraivertis,None,2018-01-30T15:23:14Z,2018-02-01T01:03:28Z
9634,Attic/boulder oracle sprint,,007gzs,None,2018-01-30T11:03:48Z,2019-11-08T10:57:08Z
9633,Added test for Apps.get_models() when models_ready=False.,"Tim changed some instances of `assertTrue` and `assertFalse` in another PR that just added a couple of tests, so I suppose it's fine to do this also here.

I tried also to write a test for this, but it's a bit more tricky.
```
if not require_ready and app_config.models is None: 
    app_config.import_models()
```",atombrella,None,2018-01-30T10:13:58Z,2018-01-30T17:36:03Z
9632,Fixed #29036 -- Change SelectDateWidget's empty value,https://code.djangoproject.com/ticket/29036,ziima,None,2018-01-30T09:43:25Z,2018-02-01T11:56:14Z
9630,"Disambiguated ""settings"" in SpatiaLite note.",,math-a3k,None,2018-01-30T01:14:29Z,2018-01-31T17:41:20Z
9629,"Fixed #29081 -- Clarified QuerySet.select_related() docs regarding ""hitting the database"".",https://code.djangoproject.com/ticket/29081,timgraham,None,2018-01-29T15:19:19Z,2018-01-29T17:39:09Z
9628,Corrected an explanation in tutorial 5.,The Question is both created and checked in the shell - the Admin site is not used here.,Cito,None,2018-01-29T15:16:07Z,2018-01-29T21:26:59Z
9627,Fixed #29066 -- Allowed negating query expressions.,http://code.djangoproject.com/ticket/29066,priyanshsaxena,None,2018-01-28T10:32:16Z,2018-01-31T16:28:20Z
9626,Fixed #29076 -- Made Model.refresh_from_db() clear cached relationships even if the related id doesn't change.,https://code.djangoproject.com/ticket/29076,jdufresne,None,2018-01-27T17:26:37Z,2018-02-01T04:23:20Z
9625,"resepct settings file for ATOMIC_REQUESTS, AUTOCOMMIT, and CONN_MAX_AGE","Fix for [#29073](https://code.djangoproject.com/ticket/29073#ticket), respecting the settings for `ATOMIC_REQUESTS`, `AUTOCOMMIT`, and `CONN_MAX_AGE`.",larkost,None,2018-01-26T23:00:07Z,2018-01-27T00:05:06Z
9624,Fixed #28988 -- Fixed queries when a GenericRelation is used with multi-table inheritance.,"Replaced the deepcopy of private fields copied to child classes in
multi-table inheritance by copy_for_child(). The default implementation
for `GenericForeignKey` is just a deepcopy. For `GenericRelation` it
disables the reverse relation by setting `related_name` and
`related_query_name`.",robwa,None,2018-01-26T10:54:32Z,2018-03-13T07:17:50Z
9623,"Fixed #29067 -- Fixed use of .values_list(..., flat=True) combined with .annotate().",https://code.djangoproject.com/ticket/29067,jdufresne,None,2018-01-26T04:59:52Z,2018-02-01T04:23:28Z
9622,Refs #28643 -- Added math database functions.,"Added ACOS, ASIN, ATAN, ATAN2, CEILING, COS, COT, DEGREES, EXP,
FLOOR, LOG, MOD, PI, POWER, RADIANS, ROUND, SIN, SQRT, TAN
ABS was added according to the commit by onkruid. 
Any suggestion is welcome!",JunyiJ,None,2018-01-26T00:48:20Z,2018-07-05T15:12:35Z
9621,Fixed 29059 -- Made ChoiceWidget.optgroups() group non-grouped choices in null group.,https://code.djangoproject.com/ticket/29059,gautamabhishek46,None,2018-01-25T21:14:52Z,2018-02-16T18:55:55Z
9620,Fixed #29054 -- Fixed a regression where a queryset that annotates with geometry objects crashes.,"https://code.djangoproject.com/ticket/29054

Regression in 19b2dfd1bfe7fd716dd3d8bfa5f972070d83b42f.",felixxm,None,2018-01-25T20:44:44Z,2018-01-27T10:12:52Z
9619,Fixed #29065 -- Made django.core.validators only load Pillow if needed.,https://code.djangoproject.com/ticket/29065,collinanderson,None,2018-01-25T20:11:51Z,2018-01-30T14:42:24Z
9618,Fixed #29060 -- Made {% firstof %} assign '' to the asvar if all inputs are false.,https://code.djangoproject.com/ticket/29060,rgammans,None,2018-01-25T12:18:26Z,2018-01-25T19:17:52Z
9617,Fixed #28748 -- Re-allowed lazy values in model field choices,"Ticket: https://code.djangoproject.com/ticket/28748

I think there's also a use case for `bytes`, at least in the actual value part of the tuple.

I'm not sure if we should try to resolve the promise to make sure it coerces to `str`, `bytes` or a non-iterable thing? That seems like a lot of efforts and I don't think that's worth it. What do you think?",francoisfreitag,None,2018-01-25T04:56:26Z,2018-01-27T14:40:14Z
9616,Fixed #29055 -- Doc'd that escapejs doesn't make template literals safe.,https://code.djangoproject.com/ticket/29055,timgraham,None,2018-01-24T19:11:56Z,2018-01-27T14:41:19Z
9615,Fixed #25790 -- Added option to disable column sort in admin changelist.,"Ticket: https://code.djangoproject.com/ticket/25790

Updates #9538, which [Jenkins was failing, running old code](https://github.com/django/django/pull/9538#issuecomment-359206852). Not at all sure why. Can't reproduce locally. Thus, seeing what happens with a fresh PR. 

Needs to be squashed. (Can we do that when merging?) 
Commit message: 

```
Fixed #25790 -- Added option to disable column sort in admin changelist.
```",carltongibson,None,2018-01-24T09:25:56Z,2019-07-29T09:15:30Z
9614,Short circuit get_all_permissions if the user is_superuser,"The **_has_perm_** and **_has_module_perms_** methods should not need to **_get_all_permissions_** for a user if they are a superuser. If the developer needs a list of all the permissions, the **_get_permissions_** method still returns a list of all the permissions.",dschow,None,2018-01-23T06:19:06Z,2018-01-23T06:51:56Z
9613,Fixed #29047 -- Use expressions as arguments to Substr in test_substr_with_ex…,…pressions,danielhones,None,2018-01-23T04:52:03Z,2018-01-24T13:42:23Z
9612,Refs #11487 -- Removed redundant test_long_string() on Oracle.,Redundant with `model_regress.tests.ModelTests.test_long_textfield()` since 3ede430b9a94e3c2aed64d2cf898920635bdf4ae.,felixxm,None,2018-01-22T19:43:36Z,2018-01-23T13:56:00Z
9611,Refs #21221 -- Deprecated staticfiles and admin_static template tag libraries.,,jdufresne,None,2018-01-21T22:46:03Z,2018-02-01T04:23:42Z
9610,Fixed #28784 -- Clarified how migrate --fake works.,https://code.djangoproject.com/ticket/28784,senthilcodr,None,2018-01-21T19:29:31Z,2018-01-24T20:25:48Z
9609,"Fixed #9475 -- Allowed add(), create(), etc for m2m with through","Updated Fix for https://code.djangoproject.com/ticket/9475 -- allow add(), create(), etc for m2m with through",astandley,None,2018-01-21T19:18:33Z,2019-01-15T15:23:30Z
9608,Fixed #28889 -- Disabled submit buttons on admin form submission to prevent double submission,https://code.djangoproject.com/ticket/28889,kb0304,None,2018-01-21T15:13:20Z,2018-08-20T17:20:39Z
9607,"Refs #29041 -- Corrected typo ""mulitple"" to ""multiple"".",,jdufresne,None,2018-01-21T01:06:02Z,2018-01-21T13:56:59Z
9606,Fixed #23646 -- Added QuerySet.bulk_update() to update many models efficiently.,"Ticket: https://code.djangoproject.com/ticket/23646

ToDo:

- [x] Add tests for things like JSONField, ArrayField, GIS fields etc",orf,None,2018-01-20T16:32:22Z,2018-09-18T21:36:35Z
9605,Fixed #29041 -- Changed SelectMultiple widget's multiple attribute to HTML5 boolean syntax.,https://code.djangoproject.com/ticket/29041,jdufresne,None,2018-01-20T15:30:38Z,2018-01-20T18:19:56Z
9604,Removed leftover text from the makemigrations docs.,"This text should have been removed in the following commit:
e0910dcc9283cd8f782cb97836c291f6f395f3f0",cjerdonek,None,2018-01-20T04:21:07Z,2018-01-20T15:44:10Z
9603,Fixed #23718 -- Fixed DB alias TEST['MIRROR'] setting.,Ticket #23718 -> https://code.djangoproject.com/ticket/23718,IlianIliev,None,2018-01-19T09:21:13Z,2018-05-22T19:56:12Z
9602,Fixed #29038 -- Removed closing slash from HTML void tags.,https://code.djangoproject.com/ticket/29038,jdufresne,None,2018-01-19T05:08:46Z,2018-01-21T13:56:59Z
9601,Fixed #29032 -- Fixed an example of using expressions in QuerySet.values().,https://code.djangoproject.com/ticket/29032,felixxm,None,2018-01-18T21:17:40Z,2018-01-19T07:56:04Z
9600,Fixed #29015 -- Added an exception if the PostgreSQL database name is too long.,"PostgreSQL imposes a limit of 63 bytes for all identifiers by default.
Added a 'NotSupportedError' if the NAME value in settings.DATABASES
is longer than 63 characters.
Uses 'len' method instead of 'sys.getsizeof' for getting the size.",priyanshsaxena,None,2018-01-18T18:19:28Z,2018-04-28T03:10:07Z
9599,Added error-message for too long PostgreSQL database name,"PostgreSQL imposes a limit of 63 bytes for all identifiers by default.
Added a 'NotSupportedError' if the NAME value in settings.DATABASES
is longer than 63 characters.
Uses 'len' method instead of 'sys.getsizeof' for getting the size.",priyanshsaxena,None,2018-01-18T17:49:11Z,2018-01-18T18:28:37Z
9598,Added exception raise when form_class not defined in FormMixin,"Not having a form_class defined in FormView and parents will cause an Exception with a nonsensical error message and trace about NoneType not being callable.

This will check if form_class is defined, and raise ImproperlyConfigured Exception with a accurate error message for the user to define form_class or override get_form_class()",T-101,None,2018-01-18T14:29:09Z,2018-03-20T19:11:02Z
9597,Defined immutable queryset/query attributes at the class level.,"Adam and Sergey, since you both worked on speeding up the ORM internals I wanted to know what you think of the following changes.

Defining immutable default attrs at the class level has the benefit of faster `__init__`, faster `self.__dict__.copy()` during `clone()` and reduced memory usage.

This seems to speed up simple and moderately complex queryset/query cloning locally but it's hard to get an accurate picture. We should really try to bring back https://github.com/django/djangobench back to life.",charettes,None,2018-01-18T06:07:50Z,2018-01-19T15:40:41Z
9596,Removed passing default argument of current TZ to make_aware/make_naive.,"When the `timezone` argument is not passed `make_aware()`/`make_naive()`, it defaults to `get_current_timezone()`. Simplify the calling code by relying on this default.

There were additional case that I did not alter because the calling code would reuse the `get_current_timezone()` value.",jdufresne,None,2018-01-18T04:21:29Z,2018-01-20T18:19:59Z
9595,Removed unnecessary .replace(microsecond=0) in SplitDateTimeWidget.,The microseconds are handled by the `TimeInput` subwidget.,jdufresne,None,2018-01-18T03:53:35Z,2018-01-20T18:20:00Z
9594,Refs #20487 -- Added test for querying mixed case fields with common related model.,https://code.djangoproject.com/ticket/20487,felixxm,None,2018-01-17T20:03:27Z,2018-01-20T19:48:45Z
9593,"Replaced ""trunk"" with ""master branch"" in docs.",,timgraham,None,2018-01-17T16:44:08Z,2018-01-18T21:54:57Z
9592,Add missing closing quotation marks,,PeterW-LWL,None,2018-01-17T05:53:38Z,2018-01-17T10:55:42Z
9591,Doc'd the latest state of the Jenkins pull request builders.,,timgraham,None,2018-01-16T02:39:50Z,2018-01-17T14:13:44Z
9590,Added a few tests for django.core.mail.backends.smtp.EmailBackend.,,atombrella,None,2018-01-15T13:54:12Z,2018-01-15T19:01:57Z
9589,Added a couple of tests for collectstatic.,,atombrella,None,2018-01-15T12:21:57Z,2018-01-15T19:02:10Z
9588,Improve error message in generic detail view,Add a message to give a hint to the developer to check the URLconf.,vpoulailleau,None,2018-01-15T12:03:34Z,2018-01-17T16:24:10Z
9587,Fixed #28838 -- Fixed crash on Model.save() after annotate.,https://code.djangoproject.com/ticket/28838,shangdahao,None,2018-01-14T03:20:45Z,2018-01-26T10:21:20Z
9586,Fixed #28881 -- Documented that CommonPasswordValidator assumes lowercase,"Ticket: #28881 
Refs #9414 
Documented in Django's documentation that CommonPasswordValidator assumes reference set of common passwords to be in lowercase. Custom files of common passwords should be preprocessed to lowercase. ",klu17,None,2018-01-14T00:11:42Z,2018-01-15T15:37:19Z
9585,Fixed #29016 -- Prevent undesired nullification of foreign keys on foreign key deletion,https://code.djangoproject.com/ticket/29016,Nimn,None,2018-01-13T12:13:02Z,2018-01-13T19:03:55Z
9584,Removed unused query log clearing in bulk_create tests.,Left over after 32ac067a6ddca465cd94fc7ee35bfe54a675979b.,timgraham,None,2018-01-12T23:20:55Z,2018-01-12T23:44:40Z
9583,"Refs #28643 -- Added Ord, Chr, Left, and Right database functions",This is my first time contributing.  I appreciate advice and guidance.,bobort,None,2018-01-12T23:20:07Z,2018-02-23T15:23:23Z
9582,Removed Query.split_exclude()'s unused prefix argument.,Unused since b4492a8ca4a7ae4daa3a6b03c3d7a845fad74931,felixxm,None,2018-01-12T22:20:39Z,2018-01-14T13:26:07Z
9581,ModelBackend object permissions fallback to model permissions,"This is for the issue:

https://code.djangoproject.com/ticket/20218

and the discussion:

https://groups.google.com/forum/#!topic/django-developers/MLWfvPPVwDk",doganmeh,None,2018-01-12T21:50:17Z,2018-07-21T22:16:39Z
9580,Fixed #29017 -- Updated BaseCommand.leave_locale_alone doc per refs #24073.,https://code.djangoproject.com/ticket/29017,timgraham,None,2018-01-12T19:19:50Z,2018-01-12T23:34:02Z
9579,Added a test for django.forms.formsets.all_valid().,,timgraham,None,2018-01-12T14:58:31Z,2018-01-12T18:23:23Z
9578,Fixed #28996 -- Simplified some boolean constructs and removed trivial continue statements.,https://code.djangoproject.com/ticket/28996,timgraham,None,2018-01-12T14:23:36Z,2018-01-12T18:43:53Z
9577,Refs #28643 -- Added Abs function,Ticket: [#28643](https://code.djangoproject.com/ticket/28643),onkruid,None,2018-01-12T14:19:12Z,2018-03-16T23:26:19Z
9576,Fix directory order in MANIFEST.in,Simple edit of the tutorial about reusability. The provided MANIFEST.in contains typos about the inclusion order of the directories `static` and `templates`.,Meseira,None,2018-01-12T14:02:28Z,2018-01-12T16:44:25Z
9575,"Fixed #28959 -- Fixed 'No, take me back' button on admin's inline popup.","https://code.djangoproject.com/ticket/28959
",jschneier,None,2018-01-12T02:44:23Z,2018-03-16T01:13:39Z
9574,Fixed #29013 -- Localize django's first page message,"Ticket: https://code.djangoproject.com/ticket/29013

```
You are seeing this page because DEBUG=True is in your settings file and you have not configured any URLs.
```
to  
```
このページは、settingsファイルに DEBUG=True が含まれ、まだURLが何も設定されていないため表示されています。
```",nnsnodnb,None,2018-01-12T00:55:47Z,2018-01-12T01:14:14Z
9573,Removed note in tutorial about bypassing manage.py.,"This isn't something I would recommend, even for non-beginners.",timgraham,None,2018-01-11T17:04:01Z,2018-01-12T00:12:05Z
9572,Change shell launch from django-admin to manage.py,"At this point in the tutorial, project has not configured django-admin to launch commands. Launching the shell through django-admin will produce an error. Launching the shell through manage.py will yield same result, without requiring student to backtrack and configure django-admin. Configuring django-admin is beyond the scope of this tutorial.",Demo318,None,2018-01-11T16:24:06Z,2018-01-23T23:31:59Z
9571,Refs #29006 -- Simplified handling of SNaN values in DecimalField.validate().,,sir-sigurd,None,2018-01-11T11:03:31Z,2018-01-11T12:06:51Z
9570,"Fixed #28885 -- Allowed footer of ""Congratulations!"" page to expand according to the height of content.",https://code.djangoproject.com/ticket/28885,h-chauhan,None,2018-01-11T05:40:54Z,2018-01-13T00:55:48Z
9569,Update .gitignore,,Mahndran,None,2018-01-11T04:15:05Z,2018-01-11T09:28:53Z
9568,Stable/2.0.x,"I very like Django, use it at my projects, hope Django to support  asynchronous networking,and support  long polling, WebSockets! Thanks!",toop,None,2018-01-11T03:01:40Z,2018-01-11T03:10:22Z
9567,Fixed #29006 -- Fixed DecimalField.clean() crash on sNaN values.,https://code.djangoproject.com/ticket/29006,timgraham,None,2018-01-11T00:08:39Z,2018-01-11T02:01:12Z
9566,Updated HttpRequest.build_absolute_uri() tests to use subTest().,,timgraham,None,2018-01-10T16:04:25Z,2018-01-10T17:03:56Z
9565,Fixed #28638 -- Made allowed_hosts a required argument of is_safe_url().,https://code.djangoproject.com/ticket/28638,jdufresne,None,2018-01-10T14:51:45Z,2018-01-20T18:20:07Z
9564,Fixed a GeoIP2 test failure with the latest GeoIP2 database.,,timgraham,None,2018-01-10T14:40:02Z,2018-01-10T15:20:08Z
9563,Completed test coverage for ModelDetailView.,,atombrella,None,2018-01-10T14:25:22Z,2018-01-12T09:14:30Z
9562,Added DatabaseFeatures.is_postgresql_9_5 to avoid repetition.,,timgraham,None,2018-01-09T19:09:35Z,2018-01-10T00:37:09Z
9561,Unified construction of WITH SQL in contrib.postgres.indexes.,,timgraham,None,2018-01-09T18:51:40Z,2018-01-10T19:59:19Z
9560,Fixed #28960 -- Added GEOSGeometry.buffer_with_style().,"Ticket: https://code.djangoproject.com/ticket/28960

Possible improvement, for which I could not find a place:
```
/// End cap styles
enum EndCapStyle {

    /// Specifies a round line buffer end cap style.
    CAP_ROUND=1,

    /// Specifies a flat line buffer end cap style.
    CAP_FLAT=2,

    /// Specifies a square line buffer end cap style.
    CAP_SQUARE=3
};

/// Join styles
enum JoinStyle {
    
    /// Specifies a round join style.
    JOIN_ROUND=1,
    
    /// Specifies a mitre join style.
    JOIN_MITRE=2,
    
    /// Specifies a bevel join style.
    JOIN_BEVEL=3
};
```
Source: https://github.com/OSGeo/geos/blob/master/include/geos/operation/buffer/BufferParameters.h#L62",stkrp,None,2018-01-09T16:35:02Z,2018-02-11T01:25:22Z
9559,Fixed #29004 -- Added inspectdb --include-views option.,https://code.djangoproject.com/ticket/29004,bquinn,None,2018-01-09T16:16:56Z,2018-01-28T00:34:11Z
9558,Fixed #29002 -- Corrected cached template loader docs about when it's automatically enabled.,https://code.djangoproject.com/ticket/29002,timgraham,None,2018-01-09T14:37:51Z,2018-01-11T11:48:35Z
9557,Fixed #29001 -- Prevented hstore/citext support from being dropped in low memory situations.,"The postgres hstore integration breaks if this weakref is ever garbage collected.
https://code.djangoproject.com/ticket/29001",rklyne,None,2018-01-09T11:50:06Z,2018-01-10T13:41:32Z
9556,Stable/1.11.x,"django\views\generic\edit.py

```python
# line 166
class ProcessFormView(View):
    """"""
    A mixin that renders a form on GET and processes it on POST.
    """"""
    def get(self, request, *args, **kwargs):
        """"""
        Handles GET requests and instantiates a blank version of the form.
        """"""
        # I have add **kwargs to update get_context_data() func.
        return self.render_to_response(self.get_context_data(**kwargs))
        # return self.render_to_response(self.get_context_data())
```
This is my first request fix, please figure out if there is any question whatever in way or others.",MiracleYoung,None,2018-01-09T08:06:55Z,2018-01-09T13:22:20Z
9555,Fixed #28977 -- Changed local memory cache to use LRU-eviction policy.,"The previous locmem cache eviction policy was psuedo-random. Now that
Django requires Python 3.4 or greater, the collections.OrderedDict can
be used to impelement an LRU-eviction policy. These changes do the
following:

1. Add a failing test to validate LRU-eviction.
2. Update the locmem backend to evict keys in LRU-order.
3. Update locmem cache tests regarding locking.
4. Remove RWLock in utils/synch.py as it is no longer used.

LRU-eviction is a well-regarded policy but turns every read into a kind
of write to the cache: cache keys are moved to the first position in the
OrderedDict when they are retrieved. The previous implementation used a
special RWLock which permitted multiple readers while prioritizing a
single writer. LRU turns all accesses into writes, effectively removing
the utility of the RWLock. In its place, threading.RLock is used, which
has the added benefit of being re-entrant and so simplifying the
implementation.
https://code.djangoproject.com/ticket/28977",grantjenks,None,2018-01-08T21:46:02Z,2018-01-24T20:42:22Z
9554,Fixed #28016 -- Made createsuperuser validate --username input.,"when I create the superuser with `--username` and the user already exists, command results in: 
`django.db.utils.IntegrityError: UNIQUE constraint failed: auth_user.username`
and there is no username uniqueness checking in this state. and same behavior when I create the superuser with `--username` and `--noinput`.",hramezani,None,2018-01-08T20:10:46Z,2018-01-09T15:44:33Z
9553,Moved HttpResponse.set_cookie() tests to an appropriate location.,,timgraham,None,2018-01-08T16:31:58Z,2018-01-08T17:18:54Z
9552,Fixed #28857 -- Fixed Cast function on PostgreSQL for complex expressions.,https://code.djangoproject.com/ticket/28857,SShayashi,None,2018-01-08T13:22:15Z,2018-01-17T15:02:49Z
9551,Updated various link in docs to use HTTPS.,,felixxm,None,2018-01-06T21:13:34Z,2018-01-07T13:29:14Z
9550,Updated coverage.py link in docs to use https.,,jdufresne,None,2018-01-06T17:57:29Z,2018-01-20T18:20:10Z
9549,Fixed #28842 -- Added support for ForcePolygonCW function on SpatiaLite.,https://code.djangoproject.com/ticket/28842,sir-sigurd,None,2018-01-06T15:47:37Z,2018-01-07T05:41:40Z
9548,Refs #17476 -- Removed obsolete simplification of timezone names in cache key generation.,"`tzname()` of correctly implemented `tzinfo` subclass must return string: https://docs.python.org/3/library/datetime.html#datetime.tzinfo.tzname.

```
In [190]: class CustomTZ(datetime.tzinfo):
     ...:     def tzname(self, dt):
     ...:         return b'bytes'
     ...: 

In [191]: datetime.datetime(1, 1, 1, tzinfo=CustomTZ()).tzname()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-191-1f9927218b78> in <module>()
----> 1 datetime.datetime(1, 1, 1, tzinfo=CustomTZ()).tzname()

TypeError: tzinfo.tzname() must return None or a string, not 'bytes'
```
Reverted 3367913c3db97a15b64f03646ac2c4486a77376f and more.",sir-sigurd,None,2018-01-06T13:59:52Z,2018-03-10T12:30:38Z
9547,Update import reverse function import code in tutorial,"Change from ""django.urls import reverse"" to ""from django.core.urlresolvers import reverse"" in tutorial 5.",fmaker,None,2018-01-06T06:48:11Z,2018-01-06T10:51:53Z
9546,Fixed #28991 -- Added new BlankFieldListFilter admin filter.,https://code.djangoproject.com/ticket/28991  ,jonashaag,None,2018-01-05T22:54:15Z,2018-11-14T22:26:00Z
9545,Simplified django.utils.feedgenerator.rfc3339_date().,,sir-sigurd,None,2018-01-05T11:28:26Z,2018-01-05T15:41:14Z
9544,Simplified django.utils.feedgenerator.rfc2822_date() by using email.utils.format_date().,,sir-sigurd,None,2018-01-05T10:52:21Z,2018-01-05T15:41:27Z
9543,Refs #28643 -- Added NullIf database function.,,atombrella,None,2018-01-04T22:26:04Z,2019-08-14T09:34:42Z
9542,Refs #28459 -- Improved performance of duration expressions on SQLite.,"https://code.djangoproject.com/ticket/28459

Before:
```
%timeit for x in Date.objects.annotate(d=models.ExpressionWrapper(models.F('date') + models.F('duration'), models.DateTimeField())).values_list('d'): pass
591 ms ± 21.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```
After:
```
%timeit for x in Date.objects.annotate(d=models.ExpressionWrapper(models.F('date') + models.F('duration'), models.DateTimeField())).values_list('d'): pass
390 ms ± 2.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```",sir-sigurd,None,2018-01-04T21:06:34Z,2018-01-04T22:17:26Z
9541,Reorganized test_runner test apps.,discussed in https://github.com/django/django/pull/9405,timgraham,None,2018-01-04T19:53:54Z,2018-01-04T22:15:15Z
9540,Fixed #28989 -- Fixed HttpResponse.delete_cookie() for cookies that use __Secure/Host prefixes.,"Most browsers ignore the Set-Cookie header if the cookie name starts with
__Host- or __Secure- if it does not use the flags required by each prefix.

This change will set the secure flag in delete_cookie on matching cookie
names, which will enable deleting cookies with those protected prefixes.",alvinlindstam,None,2018-01-04T18:39:04Z,2018-01-08T19:36:10Z
9539,Refs #28643 -- Implemented the SQL replace function.,,atombrella,None,2018-01-04T14:20:52Z,2018-01-18T09:13:56Z
9538,Fixed #25790 -- Added option to disable column sort in admin changelist.,https://code.djangoproject.com/ticket/25790,ramiro,None,2018-01-04T03:47:05Z,2020-06-25T13:13:36Z
9537,Fixed #28982 -- Simplified code with and/or.,https://code.djangoproject.com/ticket/28982,timgraham,None,2018-01-04T01:17:35Z,2018-01-09T10:59:31Z
9536,Simplified core.serializers.sort_dependencies() a bit.,Follow up to acc8dd4142ec81def9a73507120c0262ba6b1264.,sir-sigurd,None,2018-01-03T22:18:15Z,2018-01-04T05:14:00Z
9535,"Fixed #28859 -- Made Oracle backend raise DatabaseError if ""no data found"" exception is hidden by the Oracle OCI library.",https://code.djangoproject.com/ticket/28859,felixxm,None,2018-01-03T20:20:51Z,2018-01-06T17:53:56Z
9534,Documenation: include example of get_FOO_display for choices,"It is easy to miss in the middle of the paragraph below the examples. With this, we show how, then explain why.",FlipperPA,None,2018-01-03T19:52:40Z,2018-01-16T16:11:53Z
9533,Added documentation for User.has_usable_password method,,martinvol,None,2018-01-03T18:19:46Z,2018-01-27T16:30:23Z
9532,Fixed #28984 -- Made assorted code simplifications.,https://code.djangoproject.com/ticket/28984,timgraham,None,2018-01-03T18:03:14Z,2018-01-03T18:24:07Z
9531,Fixed #28985 -- Removed unneeded None checks before hasattr().,https://code.djangoproject.com/ticket/28985,timgraham,None,2018-01-03T17:25:12Z,2018-01-03T17:48:49Z
9530,Fixed #28986 -- Prevented boolean values in admin list display from being formatted with thousand separator.,https://code.djangoproject.com/ticket/28986,jonashaag,None,2018-01-03T17:05:58Z,2018-01-03T23:33:26Z
9529,Fixed #28442 - Fixed nested OuterRefs on primary key,"Avoid exception in AutoField get_prep_value when value is an OuterRef.
https://code.djangoproject.com/ticket/28442",sliverc,None,2018-01-03T15:47:56Z,2018-05-22T14:45:58Z
9528, Fixed #28811 -- fixes KeyError when combining regular and group by-annotations,https://code.djangoproject.com/ticket/28811,RobinRamael,None,2018-01-03T10:55:53Z,2018-01-03T14:12:51Z
9527,Added an app_name to django.contrib.auth.urls.,"We cannot use this urls.py file because of Django 2.0
We need to put app_name label into this files according to you.
Thanks",mertgunay,None,2018-01-02T23:48:03Z,2018-01-03T01:02:44Z
9526,Fixed #28902 -- Fixed password_validators_help_text_html() double escaping.,Fixes https://code.djangoproject.com/ticket/28902,alvinlindstam,None,2018-01-02T21:52:59Z,2018-01-03T00:51:07Z
9525,Updated README file,Found some grammatical mistakes and hyperlinked the links.,mithlesh4257,None,2018-01-02T21:18:41Z,2018-01-02T22:59:15Z
9524,Removed unused model argument to DeferredAttribute.__init__().,Unused since a8a81aae20a81e012fddc24f3ede556501af64a2.,felixxm,None,2018-01-02T21:08:10Z,2018-01-02T22:54:11Z
9523,refactor _findall function,,srinivasreddy,None,2018-01-02T17:50:44Z,2018-01-29T09:58:47Z
9522,Refactor a small function,,srinivasreddy,None,2018-01-02T17:32:30Z,2018-01-08T23:32:27Z
9521,Refactor while loop,,srinivasreddy,None,2018-01-02T17:17:45Z,2018-01-02T17:21:15Z
9520,Fixed #28950 -- Fixed ArrayField.has_changed() for empty values.,https://code.djangoproject.com/ticket/28950,vinayinvicible,None,2018-01-02T16:49:13Z,2019-01-25T19:44:51Z
9519,Refactor a test case,,srinivasreddy,None,2018-01-02T16:38:48Z,2018-01-02T16:47:18Z
9518,[WIP] Fixes 28975 -- Allows to skip create extension statement for postgis,"Background: https://code.djangoproject.com/ticket/28975

This patch check for the result of `SELECT installed_version FROM pg_available_extensions WHERE name ='postgis';` - if it returns something, the function simply returns since we dont want to create the extension then - however if it doesnt return anything the expected behaivor of autocreating the extension is executed.

Allows for a bit more freedom when running the migration with a non-superuser db user. However it will still raise:
```
django.db.utils.ProgrammingError: permission denied to create extension ""postgis""
HINT:  Must be superuser to create this extension.
```

..if the extension does not exist, and the user is not a superuser.

* [x] logic
* [x] docs
* [ ] tests
* [ ] ready to merge
",sphrak,None,2018-01-02T12:44:04Z,2018-03-17T23:32:42Z
9517,Fixed #28867 -- Added system checks for model property name that clashes with foreign key id accessor.,https://code.djangoproject.com/ticket/28867,shangdahao,None,2018-01-02T10:33:48Z,2018-01-04T00:07:50Z
9516,Fix help text for `name` arg of `startapp` management command,,philippbosch,None,2018-01-01T12:45:18Z,2018-01-02T08:40:17Z
9515,Fixed #28976 -- allow override template_name from urls.py kwargs,https://code.djangoproject.com/ticket/28976,zetaab,None,2018-01-01T10:59:03Z,2018-01-01T15:47:55Z
9514,Updated Python license for 2018.,"TO DO:

- [x] Wait to the next year (100% done, depends on timezone)
- [ ] Merge!

:octocat:",m1guelpf,None,2018-01-01T00:01:03Z,2018-01-05T19:26:26Z
9513,Fixed #28974 -- Made refresh_from_db() hint routers about its instance.,https://code.djangoproject.com/ticket/28974,charettes,None,2017-12-31T02:40:17Z,2018-01-02T14:43:22Z
9512,Fixed #28918 -- Fixed Model.refresh_from_db() for instances hidden by the default manager.,https://code.djangoproject.com/ticket/28918,timgraham,None,2017-12-30T21:13:36Z,2017-12-30T23:00:45Z
9511,Refs #23919 -- Removed obsolete __init__.py files in management command directories.,"Since we're Python 3 now, these __init__.py files aren't really needed.",mvasilkov,None,2017-12-30T19:24:42Z,2018-04-25T11:13:35Z
9509,Refs #28459 -- Used default date converter on SQLite for better performance.,"https://code.djangoproject.com/ticket/28459

See https://docs.python.org/3/library/sqlite3.html#default-adapters-and-converters.

Before:
```
%timeit for x in TestModel.objects.values_list('date'): pass
83.3 ms ± 829 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
%timeit for x in TestModel.objects.values_list('date'): pass
40.7 ms ± 613 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-12-29T09:24:01Z,2017-12-29T15:13:48Z
9508,Required mysqlclient >= 1.3.7 in db.backends.mysql.base.,Follow up to ad9390bba27cb41da92f734db4d0e36ef3dfc58f.,sir-sigurd,None,2017-12-29T08:10:58Z,2017-12-29T18:23:20Z
9507,fix 'NoneType' object has no attribute 'is_relation' bug,fix 'NoneType' object has no attribute 'is_relation' bug,HeatonHuang,None,2017-12-29T03:50:09Z,2017-12-29T09:33:53Z
9506,Moved generic_inlineformset_factory tests to a separate file.,,timgraham,None,2017-12-28T20:45:40Z,2017-12-28T22:17:50Z
9505,Removed unnecessary trailing commas and spaces in various code.,,felixxm,None,2017-12-28T18:36:45Z,2017-12-28T20:08:15Z
9504,[Typo] Fix (in Django/Conf/global_settings.py),situations -> possible scenarios,ghost,None,2017-12-28T17:11:00Z,2017-12-28T18:05:56Z
9503,[Typo] Docs Typo Fix,"[Typo] format changed as custom format in docs/ref/settings.txt

Old version:
`A full Python path to a Python package that contains format definitions for`

Fixed version:
`A full Python path to a Python package that contains custom format definitions for`",ghost,None,2017-12-28T16:14:13Z,2017-12-28T16:57:43Z
9502,Linked GIS functions docs to corresponding MySQL docs.,,sir-sigurd,None,2017-12-28T09:22:24Z,2017-12-28T15:45:33Z
9501,Removed unnecessary parentheses and change double quote to single quote in model check messages.,,shangdahao,None,2017-12-28T02:45:41Z,2017-12-29T16:03:53Z
9500,Fixed #28117 -- Added a helpful message in loaddata when psycopg2 can't load a fixture due to NUL(0x00) characters.,https://code.djangoproject.com/ticket/28117,srinivasreddy,None,2017-12-28T00:24:27Z,2017-12-30T18:03:53Z
9499,Fixed #28965 -- Update cookie date format to follow RFC 7231.,https://code.djangoproject.com/ticket/28965,ogonkov,None,2017-12-27T21:53:48Z,2018-01-02T17:03:59Z
9498,"Fixed #28858 -- Removed unnecessary ""else"" statements.","Opinions on this patch are welcome. I'm not sure if it's an improvement.
https://code.djangoproject.com/ticket/28858",timgraham,None,2017-12-27T18:34:55Z,2018-02-23T18:50:26Z
9497,Fixed #28967 -- Prevented Cast to FloatField from rounding to integer on MySQL.,https://code.djangoproject.com/ticket/28967,sir-sigurd,None,2017-12-27T18:17:12Z,2017-12-28T02:46:53Z
9496,Fixed #28966 -- Doc'd that the uuid URL path converter requires dashes.,https://code.djangoproject.com/ticket/28966,timgraham,None,2017-12-27T16:12:26Z,2017-12-27T17:23:49Z
9495,Deleted unused order_by-variable assignment in QuerySet._earliest_or_…,"…latest

All three branches re-assign it. Seems to have been unused since its introduction in ad4a8acdb55a80a6a6dec60724b22abed0025399",atombrella,None,2017-12-27T11:32:58Z,2017-12-27T14:44:02Z
9494,Refs #28459 -- Improved performance of loading DurationField on SQLite and MySQL.,"https://code.djangoproject.com/ticket/28459

Before:
```
%timeit for x in DurationModel.objects.values_list('d'): pass
168 ms ± 678 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
%timeit for x in DurationModel.objects.values_list('d'): pass
23.1 ms ± 243 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-12-27T07:26:20Z,2017-12-27T17:53:19Z
9493,Fixed #28930 -- Simplified code with any() and all().,https://code.djangoproject.com/ticket/28930,srinivasreddy,None,2017-12-26T18:46:06Z,2017-12-27T02:17:19Z
9492,Fixed #28963 -- Raised minimum Sphinx version.,,ramiro,None,2017-12-25T17:19:30Z,2017-12-25T22:21:45Z
9491,Fixed #28958 -- Fixed admin changelist crash when using a query expression in the page's ordering.,https://code.djangoproject.com/ticket/28958,felixxm,None,2017-12-25T14:52:34Z,2017-12-27T17:39:07Z
9490,Refs #28958 -- Added a test for ModelAdmin with query expressions in ordering.,https://code.djangoproject.com/ticket/28958,felixxm,None,2017-12-25T14:12:13Z,2017-12-27T18:51:21Z
9489,Improve performance of floatformat template filter by using lru_cache,"I noticed this block of code was quite expensive and could be cached quite easily.

Before:
```python
In [1]: from django.template.defaultfilters import floatformat
In [2]: f = 1 / 3
In [3]: %timeit floatformat(f)
19.4 µs ± 2.2 µs per loop (mean ± std. dev. of 7 runs, 100000 loops each)
```

After:
```python
In [3]: %timeit floatformat(f)
11.7 µs ± 167 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
```

Not major, but it adds up if this method is called repeatedly.",orf,None,2017-12-24T15:26:13Z,2018-08-09T23:22:45Z
9488,Used Decimal.scaleb() in backends.utils.format_number() and DecimalField.widget_attrs() to improve performance.,,felixxm,None,2017-12-23T18:31:48Z,2017-12-30T17:05:59Z
9487,Fixed #28944 -- Fixed crash when chaining values()/values_list() after QuerySet.select_for_update(of=()).,"https://code.djangoproject.com/ticket/28944

The select_for_update(of=(...)) features utilizes the klass_info helper
data structure. In the cases where values()/values_list() were used,
klass_info wasn't created. This makes sure it exists in these cases as
well.",bluetech,None,2017-12-23T10:40:56Z,2018-01-08T13:33:44Z
9486,Refs #28459 -- Improved performance of loading DecimalField on SQLite.,"https://code.djangoproject.com/ticket/28459

Before:
```
In [2]: %timeit for x in DecimalModel.objects.values_list('d'): pass
128 ms ± 531 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)

In [3]: %timeit for x in DecimalModel.objects.values_list(models.F('d') + 1): pass
39.5 ms ± 542 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```

After:
```
In [2]: %timeit for x in DecimalModel.objects.values_list('d'): pass
31.8 ms ± 490 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)

In [3]: %timeit for x in DecimalModel.objects.values_list(models.F('d') + 1): pass
20.3 ms ± 579 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-12-23T10:27:53Z,2017-12-27T01:12:53Z
9485,Fixed #28956 -- Updated admin's jQuery to 3.2.1.,https://code.djangoproject.com/ticket/28956,timgraham,None,2017-12-21T23:57:02Z,2017-12-26T15:48:59Z
9484,Used datetime.timezone.utc instead of pytz.utc for better performance.,"Before:
```
In [2]: %timeit django.utils.timezone.now()
2.77 µs ± 57.8 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
```
After:
```
In [2]: %timeit django.utils.timezone.now()
937 ns ± 5.35 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
```",sir-sigurd,None,2017-12-21T16:42:26Z,2018-06-22T18:35:41Z
9483,Fixed #28594 -- Removed Jython docs and specific code,Thanks Andrey Martyanov for the report.,claudep,None,2017-12-21T15:36:48Z,2017-12-23T09:28:11Z
9482,Fixed #28941 -- Fixed crash in testserver command startup.,https://code.djangoproject.com/ticket/28941,timgraham,None,2017-12-20T18:25:13Z,2017-12-20T20:29:54Z
9481,Fixed #28947 -- Fixed crash when coercing a translatable URL pattern to str.,"Refs https://code.djangoproject.com/ticket/28947

I'm unsure where to put regression tests for those, any recommendations?",tiltec,None,2017-12-19T22:52:35Z,2017-12-21T01:57:19Z
9480,Fixed #27398 -- Ignore order of query string params in assertRedirects,"Both url and expected url are normalized so any differences in the
ordering of the query string parameters doesn't make the test fail.

https://code.djangoproject.com/ticket/27398",jieter,None,2017-12-19T19:18:55Z,2018-06-29T09:47:32Z
9479,Fixed #28917 Remove paginator's unordered queryset warning for a .none() queryset ,https://code.djangoproject.com/ticket/28917,weijunji,None,2017-12-19T15:15:57Z,2018-07-16T08:12:32Z
9478,Adjusted timezone.now() docs regarding obtaining time in the current time zone.,Follow up to ff1e7b4eb43737bf2752197036663cee58922317.,sir-sigurd,None,2017-12-19T08:22:23Z,2017-12-20T15:45:51Z
9477,Fixed #25277 -- Restored test dependency to the original python-memcached.,https://code.djangoproject.com/ticket/25277,timgraham,None,2017-12-19T00:35:33Z,2017-12-19T01:24:10Z
9476,Fixed #28937 -- Allowed BinaryField to be editable=True.,https://code.djangoproject.com/ticket/28937,cameroncurry,None,2017-12-18T20:40:55Z,2017-12-22T23:20:52Z
9475,Fixed #28938 -- Clarified Python compatibility in tutorial,"Made it clear that uses of Python 3.4 and older must use another
version of Django.",dhepper,None,2017-12-18T14:13:19Z,2017-12-18T19:13:02Z
9474,Fixed #28929 -- Fixed wrong example for QUnit,"Fixed #28929 https://code.djangoproject.com/ticket/28929
Fixed wrong example for QUnit",weijunji,None,2017-12-18T13:44:10Z,2017-12-18T19:49:01Z
9473,Fixed #28934 -- Prevented Cast from truncating microseconds on Oracle.,"https://code.djangoproject.com/ticket/28934

`test_cast_from_python_to_datetime` should fail on SQLite (see https://github.com/django/django/pull/9460).",felixxm,None,2017-12-17T15:42:12Z,2017-12-20T21:04:29Z
9472,Upgraded mysqlclient requirement to 1.3.7,It was bumped to 1.3.7 in 2514e044a7fce58176c4e79eec298f3d8f70e89b.,berkerpeksag,None,2017-12-17T15:38:45Z,2017-12-22T13:52:39Z
9471,Update qunit.css,Removed extra spaces. Made code more Structured.,mithlesh4257,None,2017-12-17T05:30:11Z,2017-12-18T19:52:21Z
9470,Simplified and improved performance of floatformat filter.,,felixxm,None,2017-12-16T14:39:34Z,2017-12-19T18:37:27Z
9469,Fixed #28933 -- Improved the efficiency of ModelAdmin.date_hierarchy queries.,"[Ticket](https://code.djangoproject.com/ticket/28933#ticket)

The predicate generated by date_hierarchy makes it very difficult for databases to optimize the query.

The following date hierarchy:
```
/admin/app/model?created__year=2017&created__month=12&created__day=16
```

Will generate the following where clause (PostgreSql):
```
WHERE created between '2017-01-01' and '2017-31-12' and EXTRACT('month', created) = 12 and EXTRACT('day', created) = 16
```

The query above will not be able to utilize range based indexes on the date hierarchy column - on big tables this has a significant performance impact.

The current implementation of date hierarchy is relying on the ""default"" filtering mechinizem used by Django Admin. **I propose implementing custom filtering for Django Admin that will better utilize it's hierarchical nature and make it more database ""friendly"".**

Instead of the query above the date hierarchy would generate the following predicates for different levels of the heirarchy:
```
/admin/app/model?created__year=2017&created__month=12&created__day=16 
WHERE created >= '2017-12-16' and created < '2017-12-17'
```
```
/admin/app/model?created__year=2017&created__month=12
WHERE created >= '2017-12-01' and created < '2018-01-01'
```
```
/admin/app/model?created__year=2017
WHERE created >= '2017-01-01' and created < '2018-01-01'
```

Please let me know if this is acceptable.",hakib,None,2017-12-16T13:31:54Z,2018-02-15T00:48:42Z
9468,Fixed #28932 -- Prevented Oracle from truncating trailing zeros in the fractional part of DecimalField.,https://code.djangoproject.com/ticket/28932,sir-sigurd,None,2017-12-16T08:52:10Z,2017-12-20T16:57:37Z
9467,fixed #28946 - login.css padding fix,"https://code.djangoproject.com/ticket/28946

this simply looks better and matches the mobile resolution settings",kakulukia,None,2017-12-16T08:06:38Z,2017-12-29T16:14:57Z
9466,Removed unused Oracle DatabaseOperations.date_interval_sql().,Unused since 5ca82e710e2f92b8c5114492205c8764918407d3.,sir-sigurd,None,2017-12-16T05:48:37Z,2017-12-16T18:59:40Z
9465,Fixed #28931 -- Modified related_name and related_query_name for group and user_permissions.,"modify related_name and related_query_name for group and user_permissions to contain dynamic app_label and class in their value when inherited by different classes
https://code.djangoproject.com/ticket/28931",SaitejaP,None,2017-12-16T03:22:55Z,2017-12-19T03:29:50Z
9464,Update shell.py,Not having globals() here prevents people from using python manage.py shell < script.py. More details can be found in https://stackoverflow.com/questions/47748824/very-weird-issue-with-import,snyff,None,2017-12-14T13:54:06Z,2018-03-16T23:27:39Z
9463,Fixed #28926 -- Avoided loss of precision of big DurationField values on SQLite and MySQL.,https://code.djangoproject.com/ticket/28926,sir-sigurd,None,2017-12-14T08:41:31Z,2017-12-29T02:40:10Z
9462,Fixed #28925 -- Made durations-only expressions work on SQLite and MySQL.,https://code.djangoproject.com/ticket/28925,sir-sigurd,None,2017-12-14T07:31:40Z,2018-04-27T15:16:29Z
9461,Fixed #28923 -- TypeError: 'set' object is not reversible,"Ticket [#28923](https://code.djangoproject.com/ticket/28923)

Conversion to `list type` of the `list_2` used in the `reversed`",ebar0n,None,2017-12-14T04:44:44Z,2017-12-15T20:31:07Z
9460,Fixed #28727 -- Fixed Cast crash on SQlite when casting a Python date/datetime to Date/DateTimeField.,https://code.djangoproject.com/ticket/28727,felixxm,None,2017-12-13T23:14:57Z,2017-12-19T18:55:54Z
9459,Refs #23941 -- Removed unwanted rounding of DecimalField annotations on SQLite.,https://code.djangoproject.com/ticket/23941,sir-sigurd,None,2017-12-13T18:48:33Z,2017-12-22T01:56:48Z
9458,Stable/1.11.x,,EvilBone,None,2017-12-13T03:37:23Z,2017-12-13T04:26:03Z
9457,Fixed #28915 -- Prevented SQLite from truncating trailing zeros in the fractional part of DecimalField.,"https://code.djangoproject.com/ticket/28915

This reverts commit a146b65628e702a9a3ed5be21542ca45366fbb29 as it
introduces regression described in #28915.
This also adds test for that regression.",sir-sigurd,None,2017-12-12T15:29:48Z,2017-12-13T08:29:51Z
9456,Simplified SQLite converter for bool type.,,sir-sigurd,None,2017-12-12T14:02:04Z,2017-12-13T03:58:02Z
9455,Refs #28909 -- Simplifed code using unpacking generalizations.,"Ticket [#28909](https://code.djangoproject.com/ticket/28909).

Here are a few more for the (function) call case that I missed.

https://docs.python.org/3.5/whatsnew/3.5.html#whatsnew-pep-448",pope1ni,None,2017-12-11T12:29:05Z,2017-12-22T10:23:44Z
9454,Fixed #28912 -- Fixed EmailMessage.message() to exclude an empty To field.,https://code.djangoproject.com/ticket/28912,jdufresne,None,2017-12-09T04:03:37Z,2018-01-20T18:20:11Z
9453,Fixed #28898 -- Corrected admin check to allow a OneToOneField in ModelAdmin.autocomplete_fields.,https://code.djangoproject.com/ticket/28898,fenrrir,None,2017-12-08T19:57:27Z,2017-12-13T07:39:28Z
9452,Fixed #28908 -- Allowed ArrayField lookups on ArrayAgg annotations.,https://code.djangoproject.com/ticket/28908,sir-sigurd,None,2017-12-08T19:20:38Z,2017-12-30T21:44:08Z
9451, Fixed #28909 -- Use unpacking generalizations added in Python 3.5,Ticket [#28909](https://code.djangoproject.com/ticket/28909).,pope1ni,None,2017-12-08T16:24:16Z,2017-12-11T12:08:46Z
9450,Make session loading in cached_db engine more DRY,"**No changes to the behavior**, this is purely a **code cleanup** change removing copy&pasted logic from cached_db session engine.",knaperek,None,2017-12-08T10:24:08Z,2017-12-12T07:43:08Z
9449,Refs #27849 -- Removed empty Q() hack in filtered Aggregate.as_sql().,"This required allowing WhereNode to be provided as When(condition).

This was made possible by cf12257db23fa248c89a3da3f718aa01a50ca659.",charettes,None,2017-12-08T05:47:08Z,2017-12-08T16:36:08Z
9448,Improved performance of loading DateTimeField on Oracle and MySQL.,,sir-sigurd,None,2017-12-08T05:45:30Z,2017-12-08T15:05:31Z
9447,Simplified widgets.Select._choice_has_empty_value().,,sir-sigurd,None,2017-12-08T03:15:53Z,2017-12-08T14:46:08Z
9446,Fixed #28906 -- Removed unnecessary bool() calls.,https://code.djangoproject.com/ticket/28906,timgraham,None,2017-12-07T19:49:48Z,2017-12-07T22:13:15Z
9445,Fixed #28907 -- Removed unnecessary if statements.,https://code.djangoproject.com/ticket/28907,timgraham,None,2017-12-07T17:51:49Z,2017-12-07T22:12:06Z
9444,Fixed typo in autocomplete field function documentation,Just noticed this is probably the wrong function in the docs.,MightySCollins,None,2017-12-07T15:27:14Z,2017-12-07T15:52:47Z
9443,Fixed #28903 - Changed license-file key to license_file,https://wheel.readthedocs.io/en/stable/#including-the-license-in-the-generated-wheel-file,jaap3,None,2017-12-07T14:42:58Z,2017-12-07T15:51:51Z
9442,Fixed leaky logger in NonDjangoTemplatesDebugViewTests.,"```
...................................................................................Forbidden (Permission denied): /raises403/
Not Found: /raises404/
................ss.................................................................................................................
```",pope1ni,None,2017-12-07T12:21:49Z,2017-12-11T14:41:49Z
9441,Refs #23919 -- Prefer use of super().__init__(...),Python 3 dropped support for old-style classes so we should be able to use super() in more cases.,pope1ni,None,2017-12-07T12:14:35Z,2017-12-07T14:19:07Z
9440,Fixed #28905 - Added optional dependencies to extra_requires,"https://code.djangoproject.com/ticket/28905

Make it easier to install Django including optional dependencies (like pyscopg2, Pillow etc.) with the correct minimum version by using, i.e.:

    pip install Django[postgresql,images]",jaap3,None,2017-12-07T09:20:49Z,2018-11-19T02:02:16Z
9439,Fix import classes in conditional aggregation part,,meloie,None,2017-12-07T09:17:01Z,2017-12-07T13:57:39Z
9438,Fixed #28646 -- Postgres migration fails with error '_like index already exists',https://code.djangoproject.com/ticket/28646,r3m0t,None,2017-12-06T21:27:14Z,2018-08-23T15:10:55Z
9437,Fixed #28893 -- Removed unnecessary dict.items() calls.,https://code.djangoproject.com/ticket/28893,timgraham,None,2017-12-06T19:25:41Z,2017-12-06T22:18:04Z
9436,Simplified BaseModelAdmin.lookup_allowed() a bit.,,sir-sigurd,None,2017-12-06T19:07:02Z,2017-12-06T19:47:23Z
9435, Fixed #28896 -- Fixed filtering GeometryField with None.,https://code.djangoproject.com/ticket/28896,sir-sigurd,None,2017-12-06T11:08:42Z,2017-12-13T03:57:56Z
9434,Update trove classifiers to indicate Python 3 Only.,Now that Django 2.0+ only supports Python 3 we can categorise it as such on PyPI.,pope1ni,None,2017-12-06T10:00:04Z,2017-12-07T12:05:51Z
9433,[WIP] Fix #28646 -- postgres migration issue,https://code.djangoproject.com/ticket/28646,r3m0t,None,2017-12-05T22:35:00Z,2017-12-06T21:26:36Z
9432,[1.11.x] Refs #28856 -- Fixed caching of a GenericForeignKey pointing to a model that uses more than one level of MTI.,https://code.djangoproject.com/ticket/28856,morganwahl,None,2017-12-05T21:56:01Z,2018-01-12T15:43:56Z
9431,Fixed #28886 -- Updated prefix for example django.contrib.auth.urls URLs.,https://code.djangoproject.com/ticket/28886,timgraham,None,2017-12-05T20:05:12Z,2017-12-06T14:23:53Z
9430,Fix PT-BR translation error,"The word `'filename'` was incorrectly translated as `arquivo` instead of `nome do arquivo`. This produced a confusing error message when the user tries to upload a file whose name exceeds the limit.

I fixed the stable/1.7.x branch, but this change should be cherry picked on later versions too. Please, consider doing so as soon as possible.

Thanks!

update: The error messages on isort, docs, flake8, pull-request-javascript, and pull-requests-trusty seem to be unrelated to this change.",edwardoliveira,None,2017-12-05T19:35:20Z,2017-12-06T17:30:35Z
9429,Fixed #28883 -- Doc'd that the uuid URL path converter matches only lowercase letters,.https://code.djangoproject.com/ticket/28883,timgraham,None,2017-12-05T18:07:50Z,2017-12-06T14:16:40Z
9428,Fixed #28894 -- Fixed functools.partial() serialization for migrations.,"Ticket [#28894](https://code.djangoproject.com/ticket/28894).

",pope1ni,None,2017-12-05T17:42:46Z,2017-12-07T12:04:59Z
9427,Fixed #28891 -- Document the loader argument of Origin().,https://code.djangoproject.com/ticket/28891,dracos,None,2017-12-05T17:10:29Z,2017-12-07T17:19:59Z
9426,Fixed #28890 -- Fixed whitespace regression in multiwidget rendering.,Ticket [#28890](https://code.djangoproject.com/ticket/28890).,pope1ni,None,2017-12-05T14:48:18Z,2017-12-07T12:06:05Z
9425,Fixed #28889 -- Prevented double submission on admin pages by disabling submit buttons.,https://code.djangoproject.com/ticket/28889,msaelices,None,2017-12-05T11:22:05Z,2018-01-05T18:55:00Z
9424,"Fixed #26974, #28887, #28990, #29614 -- Added support for B-Tree, Hash and SP-Gist indexes; BrinIndex autosummarize parameter.","Tickets [#26974](https://code.djangoproject.com/ticket/26974), [#28887](https://code.djangoproject.com/ticket/28887), [#28990](https://code.djangoproject.com/ticket/28990) & [#29614](https://code.djangoproject.com/ticket/29614).

This should round out the support for PostgreSQL indexes in Django.

There are a few small bits of refactoring to pave the way for the additional index types. I've also added some version checks to `create_sql()` for `BrinIndex` and `GinIndex`.

A few things for some consideration:

- [x] Can we somehow add support for `fillfactor` to `django.db.models.indexes.Index`?
  - _Perhaps we will be forced to add `django.contrib.postgres.indexes.BtreeIndex`..._
- [x] ~~Is there some way we can refactor out the option handling? It's not very DRY...~~
- [x] ~~Should there be better validation of the options? e.g. `fillfactor` is an integer between 10 and 100.~~
- [x] Tests still need adding for the feature flag checking.
  - ~~_Perhaps we should add a `check_supported()` method to `django.db.models.indexes.Index`?_~~
  
  
  
  ",pope1ni,None,2017-12-05T10:15:55Z,2018-08-02T20:21:35Z
9423,Docs partition_by typo fix,"Hi,

A quick fix w/o a ticket.",idlesign,None,2017-12-05T08:10:54Z,2017-12-05T13:39:57Z
9422,Fixed #28877 -- Make patterns in |ordinal more localizable,"https://code.djangoproject.com/ticket/28877

Mark the whole pattern (e.g. `{value}th`) as translatable, instead of just this suffix, so that languages not using suffixes for ordinals can use this tag.

Some context is added to each translatable string. Languages using different suffix rules than English may find this useful. This could solve some of the problems mentioned in #[15156](https://code.djangoproject.com/ticket/15156).",uranusjr,None,2017-12-05T04:53:11Z,2017-12-06T15:21:32Z
9421,Fixed #28884 -- Fixed crash in renames of fields of tables referenced by m2ms on SQlite.,"https://code.djangoproject.com/ticket/28884

Introspected database constraints instead of relying on `_meta.related_objects` to determine whether or not a table or a column is referenced on rename operations.

This has the side effect of ignoring both ``db_constraint=False`` and virtual fields such as ``GenericRelation`` which are not backend by database level constraints and thus shouldn't prevent the rename operations from being performed in a transaction.

This also highlighted false negatives in the existing schema and migrations tests where `_meta.related_objects` was not appropriately populated.",charettes,None,2017-12-05T01:43:56Z,2017-12-22T21:10:47Z
9420,Fixed #28883 -- Fixed regex for uuid url converter to support upper case as per RFC4122,"Fix for bug #28883:
https://code.djangoproject.com/ticket/28883",daniel-leicht,None,2017-12-05T01:08:26Z,2017-12-05T18:08:41Z
9419,setuptools metadata for required python version,"The Django 2.0 .tar.gz sdist  was released to PyPI without the **Requires Python** metadata necessary to prevent pip from downloading it on Python 2.7 interpreter.  Brace yourselves for thousands of users complaining that `pip install django` breaks with an `ImportError` in `functools`.  

This fixes master, but you may want to update the existing 2.0 distribution with the metadata for "">=3.4"" as well.  ",wimglenn,None,2017-12-04T17:47:39Z,2018-08-30T01:06:41Z
9418,Fixed #28873 -- Used dict.setdefault() to set model and form field defaults.,https://code.djangoproject.com/ticket/28873,timgraham,None,2017-12-04T15:57:15Z,2017-12-04T19:04:56Z
9417,Update default_urlconf.html,"change from ""http"" to ""https"" for more secure",peterparkers,None,2017-12-04T12:53:58Z,2017-12-04T13:20:49Z
9416,Fixed typo in docs/topics/testing/advanced.txt.,,sir-sigurd,None,2017-12-04T08:35:27Z,2017-12-04T09:29:30Z
9415,Fixed #28882 -- Fixed bug with saving disabled MultiValueField,"https://code.djangoproject.com/ticket/28882

The initial value for **disabled** MultiValueField is compressed, which means it's not iterable. On the other side is the MultiValueField validator which expects the value to be list/tuple. Providing decompressed initial value for multi-value fields satisfies the validator.

I am still not convinced whether silencing AttributeError is a good decision, but I am checking whether the widget has `decompress` method because of two reasons:
- Default widget for MultiValueField is TextInput, which does not have this method.
- MultiWidget enforces any children classes to have `decompress` method, but docstring of MultiValueField only suggests to use that widget.
",avalanchy,None,2017-12-04T08:35:06Z,2018-01-07T16:53:28Z
9414,Fixed #28881 -- Modify CommonPasswordValidator to be case-insensitive,,nicois,None,2017-12-04T05:02:42Z,2017-12-06T15:46:23Z
9413,Fixed #28878 -- Added python_requires in setup.py and a warning for older pips that don't recognize it.,"https://code.djangoproject.com/ticket/28878

- Added the ""python_requires"" key to setup(), so pip knows not to try installing on incompatible Pythons.
- Added a more useful error for users with an old version of pip, which does not know about python_requires.

Note that this patch is against Django 2.1 - when backported, `python_requires` should instead be set to `>=3.4` so Django 2.0 can be installed on that version.

Having this or a similar patch in a released version will give Python2 users with old pip a useful error on `pip install django`, and that's the best we can do for them.  However, for upgrading pip to be useful, we also need to set the `python_requires` metadata on Django 2.0.0 - probably a job for @timgraham?",Zac-HD,None,2017-12-03T23:31:57Z,2018-06-21T03:09:37Z
9412,Fixed #28876 -- Fixed class-based model indexes and constraints names for models with quoted db_table.,https://code.djangoproject.com/ticket/28876,felixxm,None,2017-12-03T21:13:39Z,2017-12-05T21:33:20Z
9411,Fixed #28874 -- Prevented double escaping of errors on hidden fields,"This PR should also be backported to 1.11 and 2.0.
If I understood everything correctly, I should create separate PRs for this, is it right? 

https://code.djangoproject.com/ticket/28874",daniilr,None,2017-12-03T19:07:29Z,2017-12-11T12:30:48Z
9410,Fixed #28870 -- Added support for functools.partialmethod serialization in migrations.,https://code.djangoproject.com/ticket/28870,sir-sigurd,None,2017-12-03T15:13:36Z,2017-12-07T01:49:37Z
9409,Fixed #28748: Made CharField choices' check stricter.,"A malformed choices structure would pass the Django system checks, but trigger an exception when attempting to migrate the field.
```python
class Model(models.Model):
    field = models.CharField(max_length=1, [
        'knights', [
            ['G', 'Galahad'],
            ['L', 'Lancelot', 'Du Lac'],
        ],
    ])
```


Ticket: https://code.djangoproject.com/ticket/28748",francoisfreitag,None,2017-12-02T23:55:15Z,2018-01-24T19:23:33Z
9408,"""fewer"" is used for countable things","""less"" is used for singular mass nouns, like money or water",davidszotten,None,2017-12-02T18:41:02Z,2017-12-04T13:55:41Z
9407,Refs #15902 -- Made set_language() view always set the current language in a cookie,The plan is to later deprecate/remove storing the language in the session.,claudep,None,2017-12-02T12:03:18Z,2019-01-19T08:00:46Z
9406,"Fixed #28871 -- Fixed initialization of autocomplete widgets in ""Add another"" inlines.",https://code.djangoproject.com/ticket/28871,timgraham,None,2017-12-02T01:55:51Z,2017-12-02T03:42:22Z
9405,Fixed #28869 -- Made tagged test classes and methods inherit tags from parents.,https://code.djangoproject.com/ticket/28869,WillAyd,None,2017-12-01T16:06:05Z,2018-01-09T02:34:52Z
9404,Fixed #28866 -- Made InlineAdminFormSet include InlineModelAdmin's Media before its formset's Media.,"This provides better backwards compatibility following refs #28377.
https://code.djangoproject.com/ticket/28866",clincher,None,2017-11-30T20:20:07Z,2017-12-01T14:02:21Z
9403,Fixed #28868 -- Added tip about PR links in tickets.,,ramiro,None,2017-11-30T18:11:33Z,2017-12-01T10:08:49Z
9402,Fixed #28865 -- Updated .py from .pyc calculation.,"Made code in the autoreloader be compatible with Python 3.
https://code.djangoproject.com/ticket/28865",ramiro,None,2017-11-30T12:08:54Z,2017-12-19T03:41:39Z
9401,Trivial: Pythonify get_max_age cache util function,"Just a trivial code cleanup lowering the indentation, making it shorter and more Pythonic.",knaperek,None,2017-11-30T10:10:15Z,2017-12-04T13:57:56Z
9400,Fixed #28863 -- Fixed filter on annotation that contains Q.,https://code.djangoproject.com/ticket/28863,sir-sigurd,None,2017-11-30T08:49:45Z,2017-12-02T11:43:12Z
9399,Fixed #28403 -- Added missing formats in FORMAT_MODULE_PATH docs.,"added DATE_INPUT_FORMATS and
DATETIME_INPUT_FORMATS to FORMAT_MODULE_PATH settings example",Ashaba,None,2017-11-30T08:44:05Z,2018-01-24T19:48:58Z
9398,Fixed #28860 -- Removed unnecessary len() calls.,https://code.djangoproject.com/ticket/28860,timgraham,None,2017-11-29T16:59:11Z,2017-12-04T15:52:46Z
9397,Ticket 27704,,mehdipourfar,None,2017-11-29T12:03:50Z,2017-12-27T15:05:30Z
9396,[1.11.x] Fixed #28856 -- Fixed an issue with caching of coerced gfk pointing to mti model.,"https://code.djangoproject.com/ticket/28856

See #9395 for the patch against master.",charettes,None,2017-11-29T06:18:09Z,2017-11-30T16:02:11Z
9395,Fixed #28856 -- Fixed an issue with caching of coerced gfk pointing to mti model.,https://code.djangoproject.com/ticket/28856,charettes,None,2017-11-29T06:16:19Z,2017-11-30T15:29:55Z
9394,Fixed #28853 -- Updated uses of .cursor() to use as a context manager,https://code.djangoproject.com/ticket/28853#ticket,jdufresne,None,2017-11-28T13:28:53Z,2018-01-20T18:20:13Z
9393,Stable/1.11.x,,escape11,None,2017-11-28T00:13:37Z,2017-11-28T00:28:58Z
9392,Remove unnecessary list comprehensions in django.db.models.sql module,"Tuple accepts a generator, and using a list comprehension is wasteful here.

FYI there is an amazing flake8 plugin called `flake8-comprehensions` that can detect when you should be using a comprehension and when it's wasteful. These are the only instances it found in Django currently.",orf,None,2017-11-27T20:46:47Z,2017-11-27T21:13:28Z
9391,Fixed #28404 -- showing empty value for empty strings in Django admin,,geranazavr555,None,2017-11-27T09:15:09Z,2020-09-01T16:04:14Z
9390,[1.11.x] Fixed #28404 -- Shows empty_value_display in case of empty string in …,…Django admin,geranazavr555,None,2017-11-27T08:18:44Z,2017-11-27T09:15:49Z
9389,Fixed #28849 -- Fixed referenced table and column rename on SQLite.,https://code.djangoproject.com/ticket/28849,charettes,None,2017-11-27T03:42:07Z,2017-12-02T03:13:23Z
9388,Fixed #28848 -- Fixed NULLS FIRST emulation with filtered subquery.,"See https://code.djangoproject.com/ticket/28848

I'm sure there are more elegant solutions than the use of ``.count()``, but as far as I see they'd all 
* require quite a lot duplicate code in as_mysql and as_sqlite
* or are in theory backwards-incompatible because they require a new keyword argument to as_sql that currently takes arbitrary keyword arguments as additional context

Happy for feedback!",raphaelm,None,2017-11-26T16:39:31Z,2017-11-27T18:00:07Z
9387,Fixed #28841 -- Renamed ForceRHR to ForcePolygonCW.,https://code.djangoproject.com/ticket/28841,sir-sigurd,None,2017-11-25T02:56:36Z,2017-12-28T02:46:28Z
9386,Fixed #28638 allowed hosts from settings in is_safe_url,,domandinho,None,2017-11-25T00:02:22Z,2018-01-10T16:29:53Z
9385,Fixed #14642 -- Fixed generic inline formsets crash when using save_as_new=True.,https://code.djangoproject.com/ticket/14642,r3m0t,None,2017-11-24T15:51:53Z,2017-12-30T17:05:12Z
9384,Fixed #28773 -- Forced pot files to use UNIX-style newlines,Thanks Hendy Irawan for the analysis and report.,claudep,None,2017-11-24T13:50:10Z,2018-11-25T19:37:39Z
9383, Fixed #25817 -- Made RenameField repoint to_field/to_fields references. ,"https://code.djangoproject.com/ticket/25817

This is still missing tests for `ForeignObject` multiple `to_fields` and still causes SQLite to crash (probably because of the table rebuild).",charettes,None,2017-11-24T08:09:45Z,2017-12-30T21:46:27Z
9382,Used bytes.hex() and bytes.fromhex() in postgis.pgraster to simplify.,That was missed in 93cdd07e8fb08d7bb3f1e4a7117aa9d0d76581cd.,sir-sigurd,None,2017-11-23T16:39:53Z,2017-11-24T13:21:33Z
9381, Fixed #28837 -- Fixed test client crash if an exception with more than one arg is raised.,"In case the exception instance accept more than one positional parameter
test client was failing to re-raise it.

Fix borrowed from `six.reraise` implementation",ticosax,None,2017-11-23T16:19:59Z,2017-11-29T01:18:13Z
9380,Fixed #28834 -- Followed ancestor links on field cache lookup failure.,https://code.djangoproject.com/ticket/28834,charettes,None,2017-11-23T07:17:14Z,2017-11-29T06:30:35Z
9379,Used bytes.hex() and bytes.fromhex() to simplify.,,sir-sigurd,None,2017-11-23T03:23:48Z,2017-11-23T14:30:28Z
9378,Removed unused words from docs/spelling_wordlist.,,felixxm,None,2017-11-22T22:07:44Z,2019-02-02T14:37:51Z
9377,#28830 added list_to_queryset function,,ahmetkotan,None,2017-11-22T12:30:23Z,2017-11-22T13:55:18Z
9376,Fixed #28828 -- Improved performance of HttpRequest.build_absolute_uri().,"A fix for https://code.djangoproject.com/ticket/28828.

In cases where a lot of URLs are generated, the performance of it is suboptimal. 
It calls self.get_host() several times. That function does a lot of work that isn't needed more than once.
It calls urljoin() even on the trivial case of absolute paths (which is the most common case). urljoin is quite expensive as well.
My patch fixes these by using a cached_property for the scheme://host part and by just concatenating the current scheme/host with the location when the location is absolute, doesn't change the host, and doesn't contain '.' or '..'. The last can be implemented in there, but that will just complicate the code I think, for again, a not very common case.
",gcbirzan,None,2017-11-22T11:30:02Z,2018-01-10T19:39:14Z
9375,use signer in session signing,,graingert,None,2017-11-22T10:55:18Z,2017-12-07T17:50:57Z
9374,Fix typo on ‘Paths in asset definitions’ document,Changed `contib` to `contrib`.,lqez,None,2017-11-22T06:44:14Z,2017-11-22T12:48:33Z
9373,Fixed #28731 -- Error message for empty Q() in When expression,"Creating a Case(When(...)) expression that has an empty Q() object now
leads to an explicit exception message rather than hitting invalid SQL.",timmartin,None,2017-11-21T21:37:34Z,2017-12-26T16:09:45Z
9372,Removed unneeded handling of metadata tables in SpatialiteSchemaEditor.,"Changes in metadata tables are already handled by DiscardGeometryColumn()
and RecoverGeometryColumn().",sir-sigurd,None,2017-11-21T15:09:35Z,2017-11-21T19:22:21Z
9371,Clarify where the list of admins is read from,"For some reason I assumed that the admins were the _super users_, not a setting, and was confused that my logger did not work. I ended up finding help here: https://stackoverflow.com/a/18136491/867720

For your consideration. Thanks!

(Whoops, my commit message is terribly phrased...)",FMCorz,None,2017-11-21T10:22:00Z,2017-11-22T09:10:37Z
9370,Fixed #28820 -- Eliminated an extra query with QuerySet.update() on proxy models.,Ticket: https://code.djangoproject.com/ticket/28820,vonafor,None,2017-11-20T15:58:12Z,2018-03-20T08:59:28Z
9369,Fixed #28820 -- Fixed model comparison in add_update_values,,vonafor,None,2017-11-20T15:30:56Z,2017-11-20T15:56:39Z
9368,Fixed #29178 -- Made Index.fields accept a tuple.,One should really promote the use of tuples rather than lists to avoid creepy side effects.,zauddelig,None,2017-11-20T13:32:27Z,2018-03-08T15:56:56Z
9367,Fixed #28791 -- Allowed commands that don't require settings to work if the DJANGO_SETTINGS_MODULE doesn't exist.,"This is a fix for https://code.djangoproject.com/ticket/28791
Safely catching for ImportError and ModuleNotFoundError. Now the core commands are being executed normally. I ran the tests.
Please let me know if I should make more changes.",geekodour,None,2017-11-20T07:11:48Z,2017-12-07T19:56:35Z
9366,Update djangojs.po,Just found a small typo while I developed an application in German.,saschalalala,None,2017-11-19T19:46:49Z,2017-11-19T20:46:03Z
9365,Fixed #28817 -- Made QuerySet.iterator() use server-side cursors on PostgreSQL after values() and values_list().,https://code.djangoproject.com/ticket/28817,dodobas,None,2017-11-19T15:16:02Z,2017-11-21T15:52:07Z
9364,"Fixed #28804 -- Fixed ""Unknown system variable 'transaction_isolation'"" on MariaDB.",https://code.djangoproject.com/ticket/28804,timgraham,None,2017-11-18T12:47:38Z,2017-11-20T15:09:09Z
9363,Fixed #28815 - Update docs for correct location of ExtractYear,https://code.djangoproject.com/ticket/28815,benjaoming,None,2017-11-17T21:39:57Z,2017-11-17T22:30:22Z
9362,Refs #28814 -- Fixed test_runner failure on Python 3.7.,Due to https://bugs.python.org/issue30399.,timgraham,None,2017-11-17T21:15:27Z,2017-11-17T22:13:54Z
9361,Fixed #28813 -- Do not insert when there are no columns,Ticket https://code.djangoproject.com/ticket/28813,cecedille1,None,2017-11-17T18:32:11Z,2017-11-21T14:23:45Z
9360,Fixed #27629 -- Fixed bug where allow_relation() is never called,"Modified the behavior surrounding router.allow_relation checks within
the related_descriptors module. It will now always resolve the
instance and value database if needed and then always call the
relation check.

https://code.djangoproject.com/ticket/27629",srfilipek,None,2017-11-17T14:26:29Z,2018-05-11T00:42:45Z
9359,Fixed #28810 -- Use the Python 3-esque str.format logging formatting style over '%'.,,lamby,None,2017-11-17T07:11:05Z,2017-11-19T00:15:09Z
9358,Fixed #28796 -- Doc'd backwards incompatibility when reverse() receives bytestring args/kwargs.,"Due to 301de774c21d055e9e5a7073e5bffdb52bc71079.
https://code.djangoproject.com/ticket/28796",timgraham,None,2017-11-15T23:18:03Z,2017-11-16T14:51:48Z
9357,Fixed #26184 -- Allowed using any lookups in ModelAdmin.search_fields.,"Updated from https://github.com/django/django/pull/8704
https://code.djangoproject.com/ticket/26184",timgraham,None,2017-11-15T20:11:01Z,2017-11-21T18:32:06Z
9356,[2.0.x] Disabled test_exact_sliced_queryset_limit_one_offset on Oracle.,This required slicing on subquery with equal operator.,felixxm,None,2017-11-15T17:51:55Z,2017-11-15T20:19:52Z
9355," Fixed #28798 -- Removed unused django.utils.dates.WEEKDAYS_REV, MONTHS_3_REV.",https://code.djangoproject.com/ticket/28798,lamby,None,2017-11-15T12:21:35Z,2017-11-18T00:00:22Z
9354,Fixed #28757 -- Allow using forms of contrib.auth without installing contrib.auth,"https://code.djangoproject.com/ticket/28757

This seems that, it's not very easy to write a regression test, I have try this:

```
class UserCreationFormTest(TestDataMixin, TestCase):
    #....
    @modify_settings(INSTALLED_APPS={'remove': 'django.contrib.auth'})
    @modify_settings(INSTALLED_APPS={'append': 'auth_tests'})
    @override_settings(AUTH_USER_MODEL='auth_tests.ExtensionUser')
    def test_import_without_auth_app(self):
        with mock.patch.dict(sys.modules, sys.modules):
            del sys.modules['django.contrib.auth.models']
            del sys.modules['django.contrib.auth.forms']
            try:
                from django.contrib.auth.forms import UserCreationForm
            except RuntimeError as e:
                self.fail(e)

```

This test will produce the error below as I do manually in a demo project which remove 'django.contrib.auth' from INSTALLED_APPS ,

> RuntimeError: Model class django.contrib.auth.models.Permission doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

 but this will make other tests fail.

Any suggestion is very thankful. Or you can make a new PR if you want.",shangdahao,None,2017-11-15T06:30:08Z,2018-01-05T20:07:05Z
9353,Fixed #29945 -- Moved contrib.postgres uninstallation logic to the app config.,As discussed in https://github.com/django/django/pull/9291#issuecomment-344451163.,charettes,None,2017-11-15T02:05:36Z,2018-11-12T16:15:49Z
9352,Fixed #28794 -- Fixed tx_isolation deprecation warning on MySQL 5.7.20+.,"https://code.djangoproject.com/ticket/28794

I checked locally that `backends.mysql.tests.IsolationLevelTests` passes on MySQL 5.7.20.",sir-sigurd,None,2017-11-14T17:18:06Z,2017-11-14T20:42:02Z
9351,Fixed #28755 -- Made check_for_language() include apps' locale directories.,Ticket: https://code.djangoproject.com/ticket/28755,ChillarAnand,None,2017-11-14T16:03:58Z,2018-02-21T02:57:38Z
9350,Fixed #28795 -- Removed 'not in' checks and used dict.setdefault().,https://code.djangoproject.com/ticket/28795,timgraham,None,2017-11-13T21:22:54Z,2017-11-21T18:31:54Z
9349,Stable/2.0.x,,abc985,None,2017-11-13T04:13:07Z,2017-11-13T04:13:32Z
9348,Used BaseSimpleSerializer for serializing str and bytes in migrations.,Follow up to c716fe87821df00f9f03ecc761c914d1682591a2.,sir-sigurd,None,2017-11-12T18:39:30Z,2017-11-13T19:41:08Z
9347,Update html.py,,abc985,None,2017-11-12T14:11:16Z,2017-11-12T14:11:21Z
9346,Simplified choices iterators in tests.model_fields.models.,,sir-sigurd,None,2017-11-12T14:04:26Z,2017-11-13T18:31:41Z
9345,Fixed #28792 -- Fixed index name truncation of namespaced tables.,"Refs #27458, #27843.",charettes,None,2017-11-12T01:59:27Z,2017-11-15T02:53:56Z
9344,Simplified Field.get_choices().,,sir-sigurd,None,2017-11-11T19:43:56Z,2017-11-12T01:42:51Z
9343,Removed unneeded iter() call in IfNode.nodelist.,,sir-sigurd,None,2017-11-11T16:42:34Z,2017-11-12T01:43:10Z
9342,Provide option to run certain test classes not in parallel,This is this PR's ticket: https://code.djangoproject.com/ticket/28790,tuky,None,2017-11-10T18:05:46Z,2017-11-20T20:14:56Z
9341,"Fixes #28782, WIP: Template variable lookup on non-mappings with a __getitem__ method.","see [#28782](https://code.djangoproject.com/ticket/28782) regarding the initial problem.

the solution comes among other changes:

- introduces a `utils.typing`
  - see bd3fdf7f0feba86ab99f3e4830b56df432e55e7d's commit message for rationale
  - the registration of a `numpy.ndarray` as `Sequence` is essential here
- i couldn't resist to get rid of calls to deprecated functions in `inspect` (0b325977ee7867b024efc452c97637e89e2d46d0)
  - i could move that to another pr and amend a modernization of the remaining use within the project

so far, this implementation works against all test in `template_tests`, i'll look into the other tests if the approach is approved.

i also looked into a refactoring that bases `template.context.BaseContext` on `collections.ChainMap` and it looks promising regarding a simpler code. but this would require more effort for which i have no time atm and isn't necessary in the scope here. however, i'd highly recommend to modernize this part.",funkyfuture,None,2017-11-10T14:28:47Z,2018-02-23T15:38:05Z
9340,"Fixed #28781 -- Added QuerySet.values()/values_list() support for union(), difference(), and intersection().",https://code.djangoproject.com/ticket/28781,felixxm,None,2017-11-09T21:49:08Z,2017-11-12T13:37:55Z
9339,Fixed #28785 -- Made makemigrations print a warning if a migration file is deleted.,"This change would provide a fix for ticket 28785
See the ticket for more details.
Scenario:
1. App is migrated
2. Delete all the migrations file
3. Create migrations using `manage.py makemigrations`
4. Apply migrations using `manage.py migrate` 

At step 4 this will print no change and nothing will happen but we should've updated the django_migrations table and reflect the warning log.

Error message would something like as below,

WARNING: Inconsistent migrations
   App 'CoreApp':
        '0002_room_me'

 ",sonus21,None,2017-11-09T17:28:34Z,2019-07-09T10:33:45Z
9338,Fixed #28835 -- Made development server shutdown on SIGTERM.,"Hi, I've run into an issue where shutting down django devserver in a container (e.g. in kubernetes/openshift environment) doesn't work well. The original report is at [1].

Explanation:
* kubernetes/openshift send SIGTERM to PID 1 in the container when shutting the container down.
* If `manage.py runserver` is an entrypoint, it gets executed as PID 1 in container.
* Linux kernel won't propagate SIGTERM to any process that is PID 1 (in or outside of container) if it doesn't have a handler installed for this signal.

The implication of this is that the container with django devserver will not do ""soft"" shutdown on SIGTERM and Kubernetes/Openshift will wait for timeout and kill the container with SIGKILL. Therefore the container will keep hanging and occupying system resources during the whole timeout.

Even though I understand that people should only use devserver for development and not for deployment, I think it's quite common to first make the container working with devserver for development and then consider Gunicorn or similar solution when moving from early stage of the project. IOW, I think this would really be beneficial for people using Kubernetes like environments to develop/deploy Django apps.

Thanks for considering!

[1] https://github.com/sclorg/s2i-python-container/issues/93",bkabrda,None,2017-11-09T13:40:32Z,2019-04-23T13:58:13Z
9337,Fixed #28780 -- Added customization for INTERNAL_RESET_URL_TOKEN,https://code.djangoproject.com/ticket/28780,timgivois,None,2017-11-09T00:46:58Z,2019-03-20T15:02:28Z
9336,[WIP] Fixed #28788 -- Added Model.clean_<fieldname>().,https://code.djangoproject.com/ticket/28788,jonashaag,None,2017-11-08T23:00:04Z,2018-07-27T21:24:32Z
9335,Fixed #28786 -- Doc'd middleware ordering considerations due to CommonMiddleware setting Content-Length.,https://code.djangoproject.com/ticket/28786,timgraham,None,2017-11-08T15:08:26Z,2017-11-14T17:55:20Z
9334,Update docstring in is_language_prefix_patterns_used,,andreif,None,2017-11-08T07:46:07Z,2017-11-08T12:50:52Z
9333,Refs #28593 -- Updated old class names in comments following URL routing changes.,,andreif,None,2017-11-08T07:39:03Z,2017-11-08T16:05:44Z
9332,Fixes #28783: Added support for custom operator class for indexes,https://code.djangoproject.com/ticket/28783,vinayinvicible,None,2017-11-07T21:48:55Z,2018-06-29T21:27:21Z
9331,Fixed #28777 -- Clarified the docs for admin.register's args.,https://code.djangoproject.com/ticket/28777,timgraham,None,2017-11-07T03:55:40Z,2017-11-10T02:22:13Z
9330,Fixed #28778 -- Added few lines about using setup.py in the `Writing your first patch for Django` documentation.,"Added the lines needed to install django using the setup.py script.
here is the link to the ticket: https://code.djangoproject.com/ticket/28778#comment:1",geekodour,None,2017-11-07T01:33:55Z,2017-11-07T02:57:43Z
9329,Refs #28518 -- Improved performance of assigning values to GeometryFields.,"https://code.djangoproject.com/ticket/28518

Before:
```
In [2]: %timeit for x in City.objects.all()[:1000]: pass
106 ms ± 802 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [2]: %timeit for x in City.objects.all()[:1000]: pass
81.8 ms ± 595 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-11-06T18:43:49Z,2017-11-07T14:50:50Z
9328,Fixed #28769 -- Replaced 'x if x else y' with 'x or y'.,https://code.djangoproject.com/ticket/28769,timgraham,None,2017-11-06T15:27:46Z,2017-11-07T14:38:28Z
9327,Fixed #28770 -- Warned that quoting a placeholder in a raw SQL string can lead to SQL injection.,https://code.djangoproject.com/ticket/28770,timgraham,None,2017-11-04T23:16:36Z,2017-11-08T16:07:12Z
9326,Fixed #28765 -- Clarified docs about what types the __in lookup accepts.,https://code.djangoproject.com/ticket/28765,timgraham,None,2017-11-04T00:29:20Z,2017-11-06T18:14:45Z
9325,Fixed #28768 -- Added Slovak char map for Javascript slug generation.,added slovak unicode character map,oko-x,None,2017-11-03T12:30:42Z,2017-11-03T13:44:44Z
9324,Clarified error message if sqlplarse isn't installed.,"I was unclear that sqlparse was a package that I needed to install (since it raises ImproperlyConfigured and not ImportError) until I did some web searches. Added ""package"" to error message to clarify it so people can look on PyPI.

I apologize if this pull request is out of order - I looked at the contributor guidelines and it seemed like it was within the range of requests that can be done without a ticket.",nickrsan,None,2017-11-03T03:32:05Z,2017-11-03T14:09:47Z
9323,Fixed #28766 -- Added ResolverMatch.route.,"This adds the ""route"" attribute to ResolverMatch, which is set if
the new django.urls.path function is used to define URL patterns.

Track ticket: https://code.djangoproject.com/ticket/28766",beniwohli,None,2017-11-02T16:37:24Z,2018-11-17T23:10:44Z
9322,Fix #28762: make array literals hashable,https://code.djangoproject.com/ticket/28762,r3m0t,None,2017-11-01T23:51:30Z,2019-04-18T10:52:43Z
9321,Fixed #28754 - Fixed validation of 0.x.x.x when x!=0 addresses,https://code.djangoproject.com/ticket/28754,timgivois,None,2017-11-01T20:20:47Z,2017-11-08T21:55:42Z
9320,Fixed #28761 -- Documented how an inline formset's prefix works.,"Docs Improvement for ticket [#28761](https://code.djangoproject.com/ticket/28761).

Existing docs for InlineFormset doesn't mention the default assignment of child model's `related_name` as formset's `prefix.`",JayWelborn,None,2017-11-01T19:46:09Z,2018-01-13T21:40:10Z
9319,"Refs #17448, #28632 -- Fixes related to usage of raw SQL with GIS.","https://code.djangoproject.com/ticket/17448
https://code.djangoproject.com/ticket/28632

@claudep, I'm not sure if I should restore possibility to select geometry fields without select formatting on Postgres, because it's slower than selecting as `bytea` by 10%.",sir-sigurd,None,2017-11-01T13:47:14Z,2017-11-06T17:46:32Z
9318,Fixed #28763 -- Allow SessionStore's to be easily overridden to make dynamic the session cookie age,https://code.djangoproject.com/ticket/28763,jherencia,None,2017-11-01T12:27:44Z,2019-05-20T07:20:56Z
9317,Refs #23919 -- Replaced doc references to django.utils.http.urlquote() and urlquote_plus() with standard library alternatives.,Follow up to fee42fd99ee470528858c2ccb3621135c30ec262.,timgraham,None,2017-10-31T15:33:16Z,2017-11-01T15:11:31Z
9316,Fixed minor spelling mistakes,,Rajesh-Veeranki,None,2017-10-31T14:04:44Z,2017-10-31T14:21:02Z
9315,Fixed #28758 -- Fixed RangeMax/MinValueValidators crash with infinite ranges.,"* Specify range type in existing validators test definitions
* Add `NumericRange` min/max validator tests for infinite ranges
* Add `DateRange` min/max validator tests inc. for infinite ranges

Full description given at https://code.djangoproject.com/ticket/28758.",myii,None,2017-10-31T05:30:03Z,2017-12-08T01:21:24Z
9314,Fixed #28514 -- Clarifed docs about idempotence of RelatedManager.add(),- Added signals documentation on ``add()`` for the many-to-many topic.,jezeniel,None,2017-10-30T21:13:41Z,2018-03-21T01:42:34Z
9313,Grammar fixes,,scop,None,2017-10-30T19:32:31Z,2017-10-31T05:22:57Z
9312,Refs #23919 -- Updated references to urllib.quote() to Python 3 location.,,scop,None,2017-10-30T19:32:00Z,2017-10-31T21:03:46Z
9311,Fixed #28760 -- Removed DummyCache's unnecessary get/set/delete_many().,"Realized that `DummyCache.set_many` wasn't updated for the returning the list of failing keys. Looking closer I realized its `*_many` implementations were unnecessary as the `BaseCache` implementation will suffice, and it ends up doing key validation by calling the underlying single methods.

I added tests that fail until this change is made.",adamchainz,None,2017-10-30T12:35:26Z,2020-07-20T10:19:29Z
9310,Some 2.0 release note tweaks,Just a few tweaks I noticed while reading through.,adamchainz,None,2017-10-30T10:48:15Z,2020-07-20T10:19:34Z
9309,Fixed #23816 -- Allowed specifying default defered fields in model Meta.,"Implemented new feature that allow to define fields which will be deferred for reading.
Added new parameter to fields - ""defer"". By default this param is equal False.Before executing query the fields which have defer=True will be marked as deferred
Example:
```
class Sub(Super):
    is_super = models.BooleanField(default=False, defer=True)
    len = models.IntegerField(default=2)
```

This logic is equal to Sub.objects.defer(""is_super"").get()",denys-tarykin,None,2017-10-30T10:34:35Z,2020-02-20T09:40:36Z
9308,Fixed #28645 -- AuthenticationForm's inactive user error isn't raised when using ModelBackend,"[Ticket 28645
](https://code.djangoproject.com/ticket/28645)

[Ticket 28751](https://code.djangoproject.com/ticket/28751) is related to ticket 28645, so I make a second commit for ticket 28751 in this pull request.",shangdahao,None,2017-10-30T08:21:31Z,2017-11-08T15:00:36Z
9307,Used get_invalid_login_error() in AdminAuthenticationForm,,seungwon-kang,None,2017-10-29T17:20:22Z,2017-10-29T17:42:16Z
9306,Fixed #28750 -- Allowed models to define Meta.manager_inheritance_from_future for backwards compatibility.,"For the sake of easier backward compatibility to Django 1.11, this restores the `manager_inheritance_from_future` option of `Model.Meta`.

This addresses https://code.djangoproject.com/ticket/28750.

~To encourage its removal, it now raises a `RemovedInDjango30Warning`. This wasn't discussed on the ticket. If I've made a mistake there, I'll be happy to correct it.~ *Reverted.*",meshy,None,2017-10-29T12:32:55Z,2017-10-31T20:49:10Z
9305,Fixed #28742 -- Fixed AttributeError crash when assigning None to cached reverse relations.,https://code.djangoproject.com/ticket/28742,czpython,None,2017-10-29T11:02:07Z,2017-10-30T18:24:53Z
9304,[WIP] Fixed #28606 -- Deprecate CachedStaticFilesStorage.,"I added the deprecation to `CachedStaticFilesStorage`.

Ticket URL is https://code.djangoproject.com/ticket/28606.
Thanks.",massa142,None,2017-10-29T07:16:42Z,2017-10-29T08:14:40Z
9303,Fixed #28714 -- Add system checks for invalid model field names in Indexes,"https://code.djangoproject.com/ticket/28714

When using makemigration with indexes on class Meta in the Model Django don't check whether the field name in fields parameter exists on Model. It will raise FieldDoesNotExist when run migrate.

I added a system check to make sure the model field name in indexes must be a valid field.



",shangdahao,None,2017-10-28T16:05:36Z,2017-12-28T01:09:07Z
9302,Refs #21927 -- Removed docs for include()'s instance_namespace parameter.,This parameter and the associated 3-tuple pattern were removed in https://github.com/django/django/commit/ad393beeb71e8774e4bf9ad842b97022e50f1231 .,solarissmoke,None,2017-10-28T04:14:57Z,2019-11-26T15:36:47Z
9301,Subquery support for PosgteSQL’s ArrayField’s „in” lookups,https://code.djangoproject.com/ticket/28749#ticket,mpasternak,None,2017-10-27T22:31:58Z,2017-11-01T19:24:58Z
9300,Fixed #28749 -- Added subquery support for PostgreSQL’s ArrayField 'in' lookup,https://code.djangoproject.com/ticket/28749#ticket,mpasternak,None,2017-10-27T22:22:00Z,2017-11-01T19:31:19Z
9299,Fixed #28542 -- Fixed deletion of primary key constraint if the new field is unique.,"https://code.djangoproject.com/ticket/28542

When applying an alter field migration operation, if the field is no
longer a primary key the primary key constraint is removed. Previously
the constraint was being deleted as a side effect of removing a
unique constraint, but this is not effective if the new field definition
is unique but not primary key.",timmartin,None,2017-10-27T19:09:02Z,2019-07-03T14:01:42Z
9298,Fixed #28585 -- Calculated multipart context variable from admin forms,https://code.djangoproject.com/ticket/28585,claudep,None,2017-10-27T18:53:55Z,2017-11-08T08:24:56Z
9297,"Fixed #28131 -- Corrected examples of using attribute lookups on the ""perms"" template variable.","https://code.djangoproject.com/ticket/28131

I felt it would be of very limited usefulness to also specify that ``{{ perms.foo }}`` will actually output all permissions the user has in the module ``foo`` as text. But I can add that in if I'm wrong.",botondus,None,2017-10-27T17:10:52Z,2017-10-28T16:41:09Z
9296,Fixed #14218 -- Added iteration behavior to Paginator.,"## Fixes
No open ticket.

## Motivation
I went to use the `Paginator` in a context where I just wanted batches of objects out of a queryset, rather than needing to get a particular page out of the queryset. I ended up expressing it like this:
```python
paginator = Paginator(queryset, 200)
for page_number in paginator.page_range:
  do_stuff_to(paginator.page(page_number))
```
This seemed clumsy, so I went looking to see if there was an `__iter__` method on `Paginator`, which there wasn't. Given that it's a small amount of code and a simple change, I implemented it.",tstirrat15,None,2017-10-27T11:10:04Z,2019-10-02T15:43:19Z
9295,Fixed #29734 -- Added option to sort message strings for translations by msgid.,Ticket [#29734](https://code.djangoproject.com/ticket/29734),kosmos342,None,2017-10-27T10:16:41Z,2018-09-08T15:09:54Z
9294,Fixed #28747 -- Fixed unclosed quotes in example with list of compiled RegExps,Ticket: https://code.djangoproject.com/ticket/28747,duartefq,None,2017-10-26T20:41:05Z,2017-10-27T01:48:32Z
9293,Fixed #28747 -- Fixed unclosed quotes in example with list of compiled RegExps,Ticket: https://code.djangoproject.com/ticket/28747,duartefq,None,2017-10-26T20:21:58Z,2017-10-26T20:41:25Z
9292,Refs #28457 -- Updated the colors of the 'Congrats' page for WCAG AA compliance.,"First: the new ""It works"" page is great. Love the design, the messaging, the whole thing. Fantastic. I noticed, however, that it does not meet WCAG accessibility standards in regards to contrast. These values are as close to the original as I could get while reaching WCAG AA compliance.

Also, I didn't touch it here, since it was a bit out-of-scope, but I think .next-step and .next-step H5 are no longer needed in the CSS.",tbaxter-18f,None,2017-10-26T19:17:37Z,2017-10-28T11:57:28Z
9291,Fixed #28702 -- Made query lookups for CIText fields use citext.,"I couldn't find the reporter's email, I think the credit should be given to him. There's no test for the field type change to delete the index. 

I'm unsure if mixing `contrib.postgres` into the regular PostgreSQL backend is a good idea, but I couldn't really think of any other solution without introducing lots of new changes.",atombrella,None,2017-10-26T17:47:10Z,2017-12-02T10:35:17Z
9290,Fixed #28205 - Doc'd that ModelAdmin.prepopulated_fields only works on empty forms.,https://code.djangoproject.com/ticket/28205,botondus,None,2017-10-26T17:18:45Z,2017-10-28T17:29:13Z
9289,Used subTest() in timezones tests,,kimle,None,2017-10-25T20:01:07Z,2018-07-27T20:52:13Z
9288,Fixed #28741 -- Removed unnecessary leading dot from cross-domain cookie examples.,https://code.djangoproject.com/ticket/28741,timgraham,None,2017-10-25T19:00:42Z,2017-11-01T15:06:35Z
9287,Fixed #28689 -- Fixed unquoted table names in Subquery SQL when using OuterRef.,"https://code.djangoproject.com/ticket/28689

Regression in f48bc7c3dbd204eefb3c19016b1e4906ac26bee3.",felixxm,None,2017-10-25T18:40:44Z,2017-10-25T19:53:14Z
9286,Fixed #28231 -- Doc'd that QuerySet.bulk_create() casts objs to a list.,https://code.djangoproject.com/ticket/28231,botondus,None,2017-10-25T18:03:41Z,2018-01-13T00:56:17Z
9285,Clarify {% cache %} tag's handling of arguments,https://code.djangoproject.com/ticket/28737,tomaratyn,None,2017-10-25T15:59:17Z,2017-10-25T16:47:33Z
9284,Fixed #28395 -- Doc'd that QuerySet.first() can affect aggregation queries.,,botondus,None,2017-10-25T15:02:18Z,2017-10-25T23:02:44Z
9283,Fixed #28745 -- Added first and last page links to paginator docs example.,It would be good for the pagination example template to include first page and last page links. This seems to be more in line with the current convention / best practices for pagination behavior across the web.,SamMorrowDrums,None,2017-10-25T11:10:17Z,2017-11-02T00:23:43Z
9282,Fixed #28740 -- Added 'continent_code' and 'continent_name' in GeoIP2.city() dict.,"Maxmind data supplies continent information as part of both the free and paid database sets, and has for a very long time.

This isn't accessible from the GeoIP2 city dict, despite it being available.",xfxf,None,2017-10-25T08:38:15Z,2017-10-25T14:26:57Z
9281,Fixed #28739 -- Fixed get_fixed_timezone() for negative timedeltas.,"(Fix requires Python 3.2+ or 2.7+; should be suitable 
for any Django version as far back as 1.8.)",medmunds,None,2017-10-24T19:49:48Z,2017-10-25T01:47:53Z
9280,Fixed #28737 -- Clarified {% cache %} tag's handling of arguments.,https://code.djangoproject.com/ticket/28737,timgraham,None,2017-10-24T17:28:38Z,2017-10-25T19:35:16Z
9279,Fixed #28735 -- Fixed typo in django/views/templates/default_urlconf.html.,Per https://code.djangoproject.com/ticket/28735,shacker,None,2017-10-24T08:08:14Z,2017-10-24T15:35:16Z
9278,"Add --interface-opts argument to ""manage.py shell""","This PR adds a command-line argument to `manage.py shell` called ""--interface-opts"", which enables users to provide a string of additional command-line options to be passed along to the interactive interpreter when the interpreter is not ""python"".

For example, to start ipython with a classic prompt, with no ""confirm-on-exit"" behavior:
`python manage.py shell --interface ipython --interface-opts '--no-confirm-exit --simple-prompt --classic'`

Open to feedback and suggestions.",gbrener,None,2017-10-24T02:06:35Z,2017-10-24T14:51:18Z
9277,Fixed #28734  -- Added --password option to createsuperuser management command.,"Add `--password` option to createsuperuser management command.
it is a useful option when you want to create superuser in non intractive mode. for example when you want to create a default superuser with a default password. 
https://code.djangoproject.com/ticket/28734",hramezani,None,2017-10-23T19:44:54Z,2017-10-25T15:43:34Z
9276,Fixed #28718 -- Allowed password reset if a user's current password doesn't use an enabled hasher.,"[#28718](https://code.djangoproject.com/ticket/28718)

> Currently the built in django password reset system requires that you have an active account and that your password can be compared to by an enabled hasher. 
I think that this is in error, as you are about to reset the password to something new (hence resetting it) and the standard process of password resetting requires an email confirmation. I can see no way in which this is able to be abused by a malicious 3rd party. If I'm mistaken here then feel free to correct me.
I propose that the system is changed to just require that the user is active and that their password is not marked disabled as per the UNUSABLE_PASSWORD_PREFIX.",levidyrek,None,2017-10-23T18:52:18Z,2018-03-20T21:34:31Z
9275,Allowed update() sliced QuerySets.,"Implemented for convenience, this will run as two queries as it needs to fetch the pk's from the original filter, and then uses those to perform the update in the second query.",rsayers,None,2017-10-23T16:41:35Z,2017-10-24T14:24:58Z
9274,minor fix in Extract class,,raul-jr3,None,2017-10-23T13:50:05Z,2017-11-05T09:16:24Z
9273,fix '本页结果未空' typo,未 -> 为,the5fire,None,2017-10-23T05:22:38Z,2017-10-23T10:22:28Z
9271,Refs #14807 -- Removed unneeded mark_safe call,,claudep,None,2017-10-22T10:11:56Z,2017-10-22T19:27:56Z
9270,Fixed #28544 -- Made unlocalize template filter behave like {% localize off %} tag.,Thanks Beda Kosata for the report.,claudep,None,2017-10-22T09:47:08Z,2017-11-07T19:49:59Z
9269,Refs #25253 Adding get_non_migration_fields() and utilizing it to det…,"…ect real migration changes

This is my attempt at this patch. Please review the approach taken here to see if it's suitable. I will make changes or try different approaches based on the feedback. ",ishunyu,None,2017-10-22T03:45:32Z,2017-10-22T18:16:46Z
9268,Fixed #28693 -- Fixed DisallowedHost crash in CsrfViewMiddleware when an HTTPS request has an invalid host.,https://code.djangoproject.com/ticket/28693,r3m0t,None,2017-10-22T00:08:34Z,2018-02-15T01:46:57Z
9267,Fixed #28730 -- Fixed loss of precision for large integer literals in templates.,Thanks Fraser Nevett for the report.,claudep,None,2017-10-21T10:27:12Z,2017-10-21T15:21:48Z
9266,Flake8 comprehensions,"The `tuple()` construct is about 5-6 slower than `()`. I don't know the speedup for list-comprehensions, but it should also be somewhat faster.

The warnings are found by flake8-comprehensions, C407 is ignored, I tried to replace it and broke the tests. I think it was discussed previously if this should be included as part of the flake8 test. https://github.com/django/django/commit/0d74c41981687598d3fa0a7eb9712ce4c387ca19 replaced the dict-calls with a literal.",atombrella,None,2017-10-21T08:35:39Z,2017-10-23T21:31:34Z
9265,Show table name psycopg2,"Recently in [a question in stackoverflow](https://stackoverflow.com/questions/46661147/missing-table-name-in-integrityerror-django-orm) an user asked if would be possible if when an integrity error appear the table name of that exception could be show, so after looking for a while in DatabaseErrorWrapper.__exit__ method I add to the exception the table name like this:

```
if exc_value.diag.table_name:
	argument, tb_name = exc_value.args + (""In the table '%s'"" % exc_value.diag.table_name,)
	dj_exc_value = dj_exc_type(argument + tb_name)
else:
	dj_exc_value = dj_exc_type(*exc_value.args)
```

`dj_exc_value = dj_exc_type(a) # Line 86 \django\db\utils.py`

So my question, is this viable, could be implemented?",mauriciocm9,None,2017-10-21T00:00:06Z,2017-12-29T00:22:16Z
9264,Removed reimports in various code.,"Unused since 578ac17f814f21648484a1d846413398e92f8808, 046ffa483ed63faae7b31e7e2cf618f88a3312ba, and 95ca01f9995ef72c6bbe9bba477781b46cf573b4.",felixxm,None,2017-10-20T20:20:09Z,2017-10-21T12:05:49Z
9263,Make Github recognize the LICENSE,,Skeen,None,2017-10-20T09:55:30Z,2017-12-28T00:29:28Z
9262,Fix to allow using Exists as the then clause of Case When statements,"This change allows the usage of `Exists` as the ""then"" clause of `Case(When(...))` statements.  Prior to this change, attempting to do so would yield a ""2 arguments expected, 6 arguments received"" exception.  This is due to the fact that most of the subquery (and subquery derived classes) have the same args to `resolve_expression`, and then sometimes pass them by kwargs, and other times by args.  Changing the signature of `resolve_expression` for `Exists` to allow either fixes this issue.  You can see this behavior in the added unittest `CaseThenSubqueryTests.test_exists`, which fails as described before the rest of the patch is added.",sfoster3,None,2017-10-19T16:57:59Z,2017-10-19T18:36:40Z
9261,Ticket 23816  Implemented  default deferred fields,"Implemented new feature that allow to define fields which will be deferred for reading. 
Added new parameter to fields - ""defer"". By default this param is equal False.Before executing query the fields which have `defer=True` will be marked as `deferred` 
Example:
```
class Sub(Super):
    is_super = models.BooleanField(default=False, defer=True)
    len = models.IntegerField(default=2)
```
This logic is equal to `Sub.objects.defer(""is_super"").get()`",denys-tarykin,None,2017-10-19T10:45:39Z,2017-11-16T09:38:27Z
9260,Fixed #28712 -- Add option attributes to ChoiceWidget.,"The django.forms.ChoiceWidget and all its subclasses such as django.forms.Select now optionally accept a parameter `opt_attrs` which applies a dictionary of attributes to the `option` HTML nodes generated by the widget. This is similar to how the existing `attrs` parameter works. Developers can use this to style options if they so desire.

https://code.djangoproject.com/ticket/28712",StephenSwat,None,2017-10-18T20:30:05Z,2018-03-08T15:53:42Z
9259,"Fixed #28723 -- RelatedManager.get_prefetch_queryset returns ""wrong"" cache_name",https://code.djangoproject.com/ticket/28723,mwhansen,None,2017-10-18T19:08:04Z,2017-11-02T14:32:24Z
9258,Refs #28721 -- Added test for variations of 'inf'/'infinity' as a template variable names.,https://code.djangoproject.com/ticket/28721,levidyrek,None,2017-10-18T18:11:01Z,2017-10-22T00:55:27Z
9257,Ticket#23816. Implemented 'default_deferred_fields',"Implemented new feature that allow to define fields which will be deferred for reading. 
The `default_deferred_fields` property must be defined in the model's meta-class and contains a tuple of fields. The fields from this list will be marked as `deferred` before executing query 
Example:
```
class Sub(Super):
    is_super = models.BooleanField(default=False)
    len = models.IntegerField(default=2)

    class Meta:
        default_deferred_fields = ('is_super',)
```
",denys-tarykin,None,2017-10-18T14:39:04Z,2017-11-16T09:38:37Z
9256,Fixed #28722 -- Made QuerySet.reverse() affect nulls_first/nulls_last.,https://code.djangoproject.com/ticket/28722#ticket,r3m0t,None,2017-10-18T13:33:02Z,2017-10-22T01:23:50Z
9255,Fixed #28719 -- Added a helpful exception if MultipleObjectTemplateResponseMixin doesn't generate any template names.,https://code.djangoproject.com/ticket/28719,bjornkri,None,2017-10-17T14:01:42Z,2017-11-08T00:04:55Z
9254,Fix typo in queryset prefetch_related docs,These are obviously just mistakenly repeated words; it is ok in the paragraph above.,knaperek,None,2017-10-17T13:36:30Z,2017-10-17T14:07:21Z
9253,Fixed #28720 -- Added 'HttpRequest.get_full_path_info',,jonashaag,None,2017-10-17T13:23:46Z,2017-11-07T20:58:06Z
9252,Typo fix,,simonw,None,2017-10-17T11:20:48Z,2017-10-17T12:03:15Z
9251,Fix results of conditional aggregation,"Unless I'm mistaken, 'gold' should be zero as there are no clients with `account_type=Client.GOLD`.",jamesbeith,None,2017-10-17T08:52:38Z,2017-10-17T12:39:39Z
9250,Refs #28010 -- Allowed reverse related fields in SELECT FOR UPDATE .. OF,"This is a continuation of Ran Benita's (@bluetech) pull request #9043.

It adds back the 'reverse' key required to `klass_info` that removed in #9081, and also adds a unit test to make sure the two features can work together.",achidlow,None,2017-10-17T03:31:09Z,2017-10-31T08:01:17Z
9249,"Fixed ""older browser may"" typo.",,DrMeers,None,2017-10-17T02:23:33Z,2017-10-17T12:09:36Z
9248,Fixed #28636 -- Allowed customizing of translation fallback,"Introduction of a new setting LANGUAGE_FALLBACK, which allows controlling the fallback language of Django's translation module. It falls back to LANGUAGE_CODE if not set, ensuring backward compatibility.

Thanks Claude Paroz for the analysis and Dhia Abbasi for the good ideas.",denisiko,None,2017-10-16T16:08:00Z,2020-06-04T08:03:02Z
9247,Fixed #28497 -- Restored the ability to use sliced QuerySets with __exact.,https://code.djangoproject.com/ticket/28497,timgraham,None,2017-10-16T15:27:36Z,2017-10-16T20:07:51Z
9246,Corrected messages middleware comment grammar,Minor edit of the grammar in a comment on the messages middleware. Too many uses of the word 'not'.,putsjoe,None,2017-10-16T12:17:52Z,2017-10-18T15:42:20Z
9245,Fixed #28655 -- Added more examples for customizing widgets in a form.,https://code.djangoproject.com/ticket/28655,yudori,None,2017-10-15T21:04:10Z,2018-03-07T21:58:56Z
9244,Doc,,Giftlin,None,2017-10-14T19:06:36Z,2017-10-14T23:55:14Z
9243,Refs #28710 -- Simplified l10n format test,,claudep,None,2017-10-14T18:49:31Z,2017-10-14T19:09:33Z
9242,Fixed #28713 -- Prevented ModelBackend.get_all_permissions() from mutating get_user_permissions().,As get_user_permissions() returns a mutable object get_all_permissions() must return (and stores it's own cache) a new object (set) that copies the elements returned from get_user_permissions().,kaszubowski,None,2017-10-14T17:18:42Z,2017-10-15T00:47:50Z
9241,Refs #19295 -- Doc'd that ManifestStaticFilesStorage doesn't work with runserver --insecure.,Clarify that `runserver --insecure` doesn't work with either `ManifestStaticFilesStorage` or `CachedStaticFilesStorage`.,kronion,None,2017-10-14T14:21:49Z,2017-10-19T01:10:40Z
9240,Fixed #28711 -- Fixed unordered_list template filter with lazy translations.,"I wasn't sure how to check for ""is it a `str` or a lazy `str`"", so I reverted the `isinstance` check to what it was before https://github.com/django/django/commit/b3660d28f3422a33a84de7a7ccad404b3135a1a8, with the addition of an explicit check for generator expressions.

If someone can suggest a better way to check for stringy values, I'm happy to implement it.",jonashaag,None,2017-10-14T09:35:10Z,2017-10-19T00:03:41Z
9239,Fixed #28575 -- Made RelatedObjectDoesNotExist classes pickable.,"This ended up easier than I thought @timgraham, sorry for stealing the remaining work from you @rmtobin!",charettes,None,2017-10-13T18:13:59Z,2017-10-19T03:29:43Z
9238,#28005: Normalize usage of terms 'argument' and 'parameter',"https://code.djangoproject.com/ticket/28005

Closes original PR #8923.

Corrected most misuses based on these patterns:

- ""``<param>`` argument(s)"" -> ""``<param>`` parameter(s)""
- ""argument(s) ``<param>``"" -> ""parameter(s) ``<param>``""",levidyrek,None,2017-10-13T17:03:05Z,2017-10-24T17:44:43Z
9237,Fixed #28710 -- Fixed the Basque DATE_FORMAT string,Thanks Eneko Illarramendi for the report and initial patch.,claudep,None,2017-10-13T16:41:27Z,2017-10-13T17:50:04Z
9236,Improved performance of utils.html.escape().,"There is no ticket for this, I can make one if needed. I'm not sure about the procedure for general speed improvements.

I saw some small performance gains that could be made with the `escape` function. Using multiple `replace` calls adds function call overhead, as well as creating up to 4 intermediate strings that are not used and just garbage collected. Using `itertools.chain` in `keep_lazy` means we don't have to construct two lists from `args` and `kwargs`, concatenate them into a third list and then just iterate over them.

All this adds up to a whopping ~1 µs speed gain per call!",orf,None,2017-10-13T01:14:21Z,2017-11-28T01:13:45Z
9235,Fixed #17419 -- Added json_script template filter.,https://code.djangoproject.com/ticket/17419,jonashaag,None,2017-10-12T19:00:46Z,2018-02-08T00:10:54Z
9234,Refs #28643 -- Reorganized database functions docs.,https://code.djangoproject.com/ticket/28643,felixxm,None,2017-10-12T17:26:09Z,2017-10-13T16:21:11Z
9233,Refs #28440 -- Fixed server connection closing test on macOS.,"Re: https://groups.google.com/d/msg/django-developers/zsfgCudRnFI/KrZKkj0dBAAJ

On MacOS w/ Python 3.5 it does indeed throw RemoteDisconnected. Given the strange non-deterministic issue on Windows and the different exceptions thrown varying by platform and python version perhaps we could just remove this test. As I understand it we always close the connection in the dev server after a request, so it's perhaps a bit odd to have a test for something that is the default and we don't implement.",orf,None,2017-10-12T15:19:32Z,2017-10-14T17:24:34Z
9232,Fixed #28708 -- Added constants to detect the Python version.,https://code.djangoproject.com/ticket/28708,timgraham,None,2017-10-12T15:11:21Z,2017-10-16T12:24:14Z
9231,Fixed #28706 -- Moved AuthenticationForm error to a method for reuse.,https://code.djangoproject.com/ticket/28706,jdufresne,None,2017-10-12T04:47:38Z,2017-10-23T14:02:33Z
9230,Fixed #28703 -- Deterministically construct the URL regex for admin's app_index view.,"It is possible to query the endpoints that your Django app provides.

    from django.core import urlresolvers
    urlresolvers.get_resolver()

One can then walk that tree to enumerate each of the regex patterns that went into constructing it.

The regex pattern that is constructed for an endpoint is not stable. For instance, in my project I have seen it construct each of the following:

^admin/^(?P<app_label>social_django|authtoken|queues|jobs|files|users|clusters|appps|auth|vdcs)/$
^admin/^(?P<app_label>social_django|auth|users|vdcs|appps|jobs|queues|authtoken|clusters|files)/$
^admin/^(?P<app_label>authtoken|appps|social_django|clusters|users|queues|jobs|vdcs|auth|files)/$
^admin/^(?P<app_label>authtoken|appps|social_django|clusters|users|queues|vdcs|jobs|auth|files)/$

This precludes the use of patterns in unit tests.

Make the construction of the patterns stable so that subsequent walks of the tree will be consistent.",erikbryant,None,2017-10-11T20:28:56Z,2017-11-02T18:44:29Z
9229,Fixes #28077: Added support for custom operator class for indexes,,vinayinvicible,None,2017-10-11T17:32:10Z,2017-11-07T21:46:14Z
9228,Added test for FlatPage.__str__().,,atombrella,None,2017-10-11T15:09:37Z,2017-10-12T14:05:06Z
9227,Refs #28643 -- Reorganized database functions.,,felixxm,None,2017-10-11T14:58:49Z,2017-10-13T19:23:45Z
9226,Fix #28698: Show template origin in TemplateSyntaxError,,jonashaag,None,2017-10-11T12:02:55Z,2017-11-29T00:13:05Z
9225,"Fix invalid field reference in ""choices""","In the topics/db/models document Field options, the second element of choices is shown using ModelChoiceField.
Since choices uses ChoiceField, ModelChoiceField has been modified to ChoiceField.",LeeHanYeong,None,2017-10-11T11:44:12Z,2017-10-13T15:11:14Z
9224,Fixed #28695 -- Allowed models to use __init_subclass__().,,jwygoda,None,2017-10-10T18:16:57Z,2017-10-14T02:48:50Z
9223,Refs #24031 -- Added test for Case and When constructor arguments.,"I'm not sure `Case.copy` is needed anymore; I don't get any test failures if I delete it. Experiments with bisecting weren't really fruitful to find out when it became obsolete.

`Case` with only a default argument is supported, and there's currently no test coverage for it. I think it'd be better to raise a `ValueError` for this in the constructor.",atombrella,None,2017-10-10T11:02:09Z,2017-10-24T09:48:22Z
9222,Refs #28373: TIME_ZONE value in DATABASES settings is not used for date lookup,"Greetings, here is the ticket of the issue:
https://code.djangoproject.com/ticket/28373
I create a test case and everything works fine on my computer, please take a look.",messfish,None,2017-10-10T05:50:27Z,2017-10-20T17:22:35Z
9221,test,,sweep3092,None,2017-10-10T01:40:30Z,2017-10-10T01:42:44Z
9220,"Refs #28643 -- Added LTrim, RTrim, and Trim database functions.",https://code.djangoproject.com/ticket/28643,felixxm,None,2017-10-09T20:36:22Z,2018-03-15T19:58:31Z
9219,Fixed #28688 -- Made admin's URLify.js skip removal of English words if non-ASCII chars are present.,"As suggested in a comment of the ticket https://code.djangoproject.com/ticket/28688, I've implemented a solution where the remove word list in urlify.js is simply skipped if the string contains a unicode character.",saevarom,None,2017-10-09T10:43:35Z,2017-10-12T17:13:04Z
9218,Added tests for abstract Combinable methods.,,atombrella,None,2017-10-08T19:08:35Z,2017-10-09T16:15:41Z
9217,"Fixed #27392 -- Remove ""Tests that"", ""Ensures that"", etc. from test d…",…ocstrings,pengstro,None,2017-10-08T18:46:04Z,2017-10-21T12:46:13Z
9216,update docs/ref/templates/api.txt,Add some content to put off some confusion between 'django.template.Template' and the result of 'django.template.loader.get_template',luoxzhg,None,2017-10-08T15:24:00Z,2017-10-30T08:06:33Z
9215,Fixed #28685 -- Added buttom margin to fix flotation issue,"The CSS class `x` to clear the multi select2 input did have a
different hight than the selected options. This resulted in a
floation error, where an option could be oddly displaced.

This patch also decresed the horizontal margin.",codingjoe,None,2017-10-08T12:42:56Z,2017-10-09T21:09:54Z
9214,Fixed #28690 django.utils.http.parse_http_date two digit year check is incorrect,https://code.djangoproject.com/ticket/28690  ,Baguage,None,2017-10-08T00:25:03Z,2019-07-05T11:40:01Z
9213,Fixed #28690 django.utils.http.parse_http_date two digit year check is incorrect,,Baguage,None,2017-10-07T21:43:58Z,2017-10-07T22:20:32Z
9212,Fixed a race condition problem in migrations howto.,"edited howto chapter ""Migrations that add unique fields"", how they are split to 3 migrations.

* The first commit will fix the mentioned race condition. It is also more similar to a normal migration  that only value `None` is replaced by the default value, not overwritten if an existing field is migrated to `null=False`.

* The second commit requires a discussion if it should be also applied:
  + pros: This method is easier memorable, linear without jumping back and forth. Model migrations are created automatically. Only the data migration is edited.
  - cons: It the problem was recognized late, this method requires to delete the migration file, not to edit it. That is controversial.

    > If you have created an invalid migration yet for that field then remove it. It will be replaced by three smaller migrations.

  The migrations are finally the same, only the steps differs.
  Number of non empty lines in howto is the same, but most of it is descriptive now and can be massively simplified, eventually by removing the two file snippets that are created automatically now.

My texts require language adjustment, please.",hynekcer,None,2017-10-07T21:24:53Z,2020-03-17T10:28:58Z
9211,Fixed #28690 django.utils.http.parse_http_date two digit year check is incorrect,,Baguage,None,2017-10-07T21:21:18Z,2017-10-07T21:37:32Z
9210,"Fixed #27392 -- Remove ""Tests that"", ""Ensures that"", etc. from test docstings",I am re-working on this [PR 8648](https://github.com/django/django/pull/8648).,za,None,2017-10-07T10:33:24Z,2017-12-27T23:54:05Z
9209,Make postgres search examples less sterotyped,,simonw,None,2017-10-06T19:45:28Z,2017-11-21T21:18:48Z
9208,Updated link to Tox documentation in tox.ini.,,atombrella,None,2017-10-06T08:20:55Z,2017-10-06T13:02:17Z
9207,Refs #24254 -- Removed unnecessary a SQL AS clause in SQLCompiler.as_sql().,"Aliasing table with SQL `AS` clause is incorrect on Oracle and unnecessary on other backends. Currently this code is unreachable on Oracle, but will use it after #9204.",felixxm,None,2017-10-05T18:55:26Z,2017-10-06T16:57:04Z
9206,Used or removed untested __iter__() methods in template tags.,,timgraham,None,2017-10-05T15:55:23Z,2017-10-12T21:05:37Z
9205,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,"Just follow the tutorial ""Writing your first patch for Django"" to create a pull request.",sheltont,None,2017-10-05T14:06:55Z,2019-12-29T12:22:56Z
9204,Fixed #28670 -- Added FETCH/OFFSET support on Oracle.,https://code.djangoproject.com/ticket/28670,felixxm,None,2017-10-04T19:06:35Z,2017-10-09T16:07:53Z
9203,Documentation for extending UserCreationForm doesn't work with UserAdmin,"https://code.djangoproject.com/ticket/28667

Greetings, here is my first pull request on django. I made this document change to let me be familiar with the contribution process. Please let me know if there is something wrong with my pull request.",messfish,None,2017-10-04T16:41:26Z,2017-10-05T20:50:04Z
9202,Fixed #28680 -- Doc'd Func.__init__()'s **extra and as_sql()'s **extra_context aren't escaped.,https://code.djangoproject.com/ticket/28680,timgraham,None,2017-10-04T15:12:05Z,2017-11-01T15:53:30Z
9201,Passed ignore_failures as a kwarg for readability in template tags.,Also removed unused VariableDoesNotExist catching where failures are ignored.,timgraham,None,2017-10-04T13:26:57Z,2017-10-04T13:52:01Z
9200,Utils(autoreload): check if stdin exists before using it,"It could happen that the django process runs in some environment where the stdin has been closed before launching the child. Without this check the process crashes because the stdin is None

This is the error I get for instance:
```
  File ""/~/.virtualenvs/my/lib/python3.6/site-packages/django/utils/autoreload.py"", line 256, in ensure_echo_on
    if fd.isatty():
AttributeError: 'NoneType' object has no attribute 'isatty'
```
",LeoIannacone,None,2017-10-04T10:52:38Z,2017-11-11T00:58:24Z
9199,Refs #28584 -- Removed unused DatabaseFeatures.can_share_in_memory_db.,,timgraham,None,2017-10-04T00:21:39Z,2017-10-04T00:45:53Z
9198,Refs #28670 -- Moved LIMIT/OFFSET SQL to DatabaseOperations.limit_offset_sql().,"https://code.djangoproject.com/ticket/28670

I think this small hook should be added before the Oracle patch.",felixxm,None,2017-10-03T19:15:56Z,2017-10-04T18:26:00Z
9197,Fixed #28679 -- Made urlencode decode provided bytes.,"[Ticket 28679](https://code.djangoproject.com/ticket/28679)

I think this fix should be backported to Django 2.0.",francoisfreitag,None,2017-10-03T18:22:20Z,2019-05-17T15:44:51Z
9196,Fixed #28613 -- Doc'd the return value for GenericForeignKey when the related object is deleted.,https://code.djangoproject.com/ticket/28613,Symphoria,None,2017-10-03T17:27:37Z,2017-10-20T19:33:29Z
9195,Fixed #28674 -- Removed unused check in QuerySet._batched_insert().,https://code.djangoproject.com/ticket/28674,timgraham,None,2017-10-03T14:49:03Z,2017-10-03T23:59:17Z
9194,Fixed #28675 -- Removed always True variable in SQLInsertCompiler.execute_sql() check.,Unused since 7deb25b8dd5aa1ed02b5e30cbc67cd1fb0c3d6e6.,timgraham,None,2017-10-03T14:07:40Z,2017-10-03T14:32:18Z
9193,Made register.tag a decorator for echo template tag in testtags.py,,atombrella,None,2017-10-03T12:03:24Z,2017-10-03T14:27:27Z
9192,Fixed #28668 -- Support ignoring conflicts with bulk_create(),"[Ticket](https://code.djangoproject.com/ticket/28668)

Not sure about the API for this one, passing in the string 'ignore' seemed good as a first stab.

It's a bit tricky to implement, as some backends (mysql, sqlite) need to add a statement or two after the `INSERT` statement, but Postgres needs to add it after the `VALUES` but *before* the `RETURNING`. 

I hope this is the right place to implement this. I was going to add a custom per-backend `SQLInsertCompiler` that handles this, but it seemed overkill.",orf,None,2017-10-02T23:52:39Z,2018-08-03T22:12:43Z
9191,Updated Python license for 2017.,,josephlin55555,None,2017-10-02T21:00:20Z,2017-10-03T13:16:37Z
9190,Added missing tests for ForLoop template tag.,"I'm not sure if it's possible to get a hit for these two lines in `ForLoop`.

```
    except VariableDoesNotExist: 
        values = []
``` ",atombrella,None,2017-10-02T14:39:23Z,2017-10-05T15:50:12Z
9189,Added missing tests for autoescape template tag.,,atombrella,None,2017-10-02T08:56:24Z,2017-10-02T15:43:13Z
9188,Fixed #28659 -- Fixed LayerMapping crash with null geometry and unique.,https://code.djangoproject.com/ticket/28659,melvyn-sopacua,None,2017-10-02T05:55:09Z,2018-07-27T21:05:12Z
9187,Update resolvers.py,simply removed a bunch of space,Orengutan,None,2017-10-01T22:26:47Z,2017-10-01T22:57:09Z
9186,Fixed #28665 -- Raised NotSupported instead of NotImplementedError per PEP 249.,"https://code.djangoproject.com/ticket/28665

This disambiguate not implemented from not supported features. Inspired by https://github.com/django/django/pull/9174/files#r142004482. (#9174)",charettes,None,2017-10-01T18:23:10Z,2017-10-06T16:47:09Z
9185,Fixed #28628 --Replaced '\d' in regexes with [0-9] for more strict matching.,"In Python2 and Python3 '\d' in regular expression matches to different patterns. To avoid errors, '\d' was replaced with [0-9].",JunyiJ,None,2017-10-01T14:42:18Z,2018-03-20T17:07:35Z
9184,Fixed #28662 -- Silence invalid argument errors in join template-filter.,https://code.djangoproject.com/ticket/28662,atombrella,None,2017-10-01T08:31:49Z,2017-10-20T14:10:36Z
9183,Fixed #28663 -- Add a check for likely incorrectly migrated django.urls.path() routes.,https://code.djangoproject.com/ticket/28663,lamby,None,2017-10-01T08:19:52Z,2017-11-07T16:39:59Z
9182,Refs #23919 - Removed unneeded float()/int() calls.,https://code.djangoproject.com/ticket/23919,felixxm,None,2017-10-01T07:50:21Z,2017-10-02T17:57:49Z
9181,Fixed #28613 - Added Documentation for Generic Foreign Key,Added Documentation that GenericForeignKey returns None when referring to nonexistent pk,Symphoria,None,2017-10-01T07:34:27Z,2017-10-03T17:26:03Z
9180,Fixed incorrect integer division in DeletionTests.test_large_delete_related.,,felixxm,None,2017-10-01T07:03:17Z,2017-10-02T17:56:36Z
9179,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in urls/resolvers.py.",,jdufresne,None,2017-10-01T00:13:09Z,2017-10-04T04:37:21Z
9178,Fixed #28596 -- Fixed QuerySet.bulk_create() and cascade deletion crash on Oracle when using more than 65535 parameters.,https://code.djangoproject.com/ticket/28596,felixxm,None,2017-09-30T13:13:48Z,2017-10-05T16:53:26Z
9177,Fixed #28636 -- Added optional parameter support_all_languages in translation,Modification in order to be able to get a user's language preference that's listed in django's available languages (`LANG_INFO`) rather than in `settings.LANGUAGES`.,denisiko,None,2017-09-30T13:02:20Z,2018-03-28T21:26:16Z
9176,Fixed #28660 -- Remove CryptPasswordHasher.,See https://code.djangoproject.com/ticket/28660.,UmanShahzad,None,2017-09-30T12:29:49Z,2017-09-30T18:20:35Z
9175,Fix #28659 for stable/1.11.x,"Currently don't have the time to fix it for other branches. But perhaps later in the week.

See commit messages and ticket for more info.",melvyn-sopacua,None,2017-09-30T07:49:50Z,2017-10-02T05:36:21Z
9174,Fixed #28658 -- Moved DISTINCT handling to the Aggregate base class.,"This is still missing documentation and tests for MySQL and Oracle `unsupported_distinct_aggregates`.

- [x] Documentation adjustments and release notes.
- [x] Tests MySQL and Oracle `NotSupported`.
- [x] Test `distinct=True` and `filter=Q(...)` repr.

@orf you might be interested in that since you initially worked on #8324.

### PostgreSQL

> `aggregate_name (DISTINCT expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ]`

https://www.postgresql.org/docs/current/static/sql-expressions.html#SYNTAX-AGGREGATES

### SQLite

>  In any aggregate function that takes a single argument, that argument can be preceded by the keyword DISTINCT.

https://sqlite.org/lang_aggfunc.html

### MySQL

https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html

### Oracle

https://docs.oracle.com/database/121/SQLRF/functions003.htm",charettes,None,2017-09-30T01:42:33Z,2019-01-10T07:35:24Z
9173,Fixed #28622 -- Allowed specifying password reset token expiration in number of seconds.,"can set PASSWORD_RESET_TIMEOUT using seconds, so it can be expired within a day.

changing making token to use seconds instead of days. 

It should be backward compatible, because PASSWORD_RESET_TIMEOUT_DAYS can still be used. Old tokens generated should be checked without problems.",ZachLiuGIS,None,2017-09-29T20:19:18Z,2020-01-22T09:35:31Z
9172,Fixed #27979 -- Made MySQL raise IntegrityError when saving negative numbers in PositiveInteger fields.,https://code.djangoproject.com/ticket/27979,timgraham,None,2017-09-29T19:02:38Z,2017-09-29T23:12:58Z
9171,Fixed #28584 -- Dropped support for SQLite < 3.7.15.,https://code.djangoproject.com/ticket/28584,timgraham,None,2017-09-29T18:22:37Z,2017-10-03T14:42:24Z
9170,Fixed #28654 -- Dropped support for SpatiaLite 4.0.,https://code.djangoproject.com/ticket/28654,timgraham,None,2017-09-29T17:47:14Z,2017-09-30T18:13:24Z
9169,Fixed #28653 -- Added required argument 'on_delete' to example in docs,,xorg,None,2017-09-29T15:11:02Z,2017-09-29T15:38:29Z
9168,[1.11.x]Fixed #28648 -- Corrected 'chaining filters' example in docs,,xorg,None,2017-09-29T14:19:52Z,2017-09-29T14:20:55Z
9167,Fixed #28648 -- Corrected 'chaining filters' example in docs,,xorg,None,2017-09-29T14:07:26Z,2017-09-29T14:31:50Z
9166,Refs #27067 -- Removed string_concat in django.utils.translation.__all__.,Undefined since 87d2240e6cc594a3bf28dfdb2ec023c54fb76ff7.,felixxm,None,2017-09-29T13:30:25Z,2017-09-29T14:32:33Z
9165,Fixed #28651 -- Fixed typo in docs/ref/contrib/postgres/fields.txt.,https://code.djangoproject.com/ticket/28651,michael-k,None,2017-09-29T07:42:16Z,2017-09-29T13:36:31Z
9164,Refs #28492 -- Defined aggregates output_field at the class level.,Those were missed by 08654a99bbdd09049d682ae57cc94241534b29f0.,charettes,None,2017-09-29T04:39:22Z,2017-09-29T12:34:33Z
9163,Fixed #28650 -- Add TruncWeek to truncate to monday of week,https://code.djangoproject.com/ticket/28650,ljodal,None,2017-09-28T21:41:51Z,2018-01-27T15:20:53Z
9162,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,https://code.djangoproject.com/ticket/28649,ljodal,None,2017-09-28T21:23:28Z,2018-08-18T19:38:47Z
9161,Completed test coverage for BasePasswordHasher.,,atombrella,None,2017-09-28T19:58:58Z,2017-10-02T13:24:53Z
9160,Refs#28628--abolished use of '\d' in regex,'\d' has different matching rules in Python2 and Python3.,JunyiJ,None,2017-09-28T16:05:22Z,2017-10-20T14:00:32Z
9159,Refs #28628 -- abolished use of '\d' in regexes,"Replaced the '\d' with [0-9] in regular expressions to avoid errors
due to different python versions (Python 3 matches '\d' with any
character with unicode category. Thanks James Bennett for report.",JunyiJ,None,2017-09-28T14:51:32Z,2017-09-28T15:40:31Z
9158,Merged hash() calls.,,felixxm,None,2017-09-28T14:47:02Z,2017-09-29T05:45:16Z
9157,Removed unneeded call to __init__ in classes that don't inherit.,,atombrella,None,2017-09-28T09:52:30Z,2017-09-28T10:00:27Z
9156,Simplified various __eq__() methods.,,atombrella,None,2017-09-27T21:31:32Z,2017-09-28T13:36:29Z
9155,Refs #28628 -- abolished use of '\d' in regexes,"Replaced the '\d' with [0-9] in regular expressions to avoid errors
due to different python versions (Python 3 matches '\d' with any
character with unicode category. Thanks James Bennett to report.",JunyiJ,None,2017-09-27T21:16:40Z,2017-09-28T14:45:18Z
9154,Added missing tests for AnonymousUser methods and properties.,It seems better to use `SimpleTestCase` for these tests; as a result I moved the existing properties test into this new class. An assert for `get_group_permissions` was added to the properties-test. ,atombrella,None,2017-09-27T20:14:11Z,2017-09-28T17:48:16Z
9153,Added a test for RequestSite.__str__.,,atombrella,None,2017-09-27T15:23:21Z,2017-09-28T13:16:41Z
9152,Added cleanup for an introspection test.,,timgraham,None,2017-09-27T13:54:05Z,2017-10-10T12:11:56Z
9151,Fixed #28600 -- Added prefetch_related() support to RawQuerySet.,"This PR adds

- Results caching support in `RawQuerySet`
- Prefetch related support in `RawQuerySet`

Ticket: https://code.djangoproject.com/ticket/28600",uadnan,None,2017-09-27T08:25:51Z,2018-04-19T18:30:07Z
9150,Update django.po,this -> 此,szuprefix,None,2017-09-27T07:44:30Z,2017-09-27T11:58:59Z
9149,Completed test coverage for default filters,"There's a still a miss for `join` for the silent fallback (I couldn't find something that'd match), and a partial miss `if args` in `stringfilter`.",atombrella,None,2017-09-27T07:26:30Z,2017-09-30T22:34:52Z
9148,Updated Basque (eu) locale formats.,"Previous formats were not properly escaped resulting in an Exception that breaks the Django i18n
module: ""The format for date objects may not contain time-related format specifiers (found 'e').""
This commit solves the escaping problem and updates the formats.",eillarra,None,2017-09-26T17:59:50Z,2017-10-17T15:34:47Z
9147,Test,,jonashaag,None,2017-09-26T10:25:44Z,2017-09-26T12:10:04Z
9146,27795 backport,,jonashaag,None,2017-09-26T10:24:07Z,2017-09-26T10:24:52Z
9145,Fixed #28635 -- Fixed admin's preserved filters if the URL contains non-ASCII characters.,The ticket is [#28635](https://code.djangoproject.com/ticket/28635),a8568730,None,2017-09-26T07:18:26Z,2018-02-23T23:42:38Z
9144,Added a test for PermWrapper.__iter__,,atombrella,None,2017-09-25T19:00:40Z,2017-09-27T17:27:57Z
9143,Added a test for pbkdf2 default digest algorithm.,"I'm not sure if `called_once_with` is the preferred way, or if this is also fine. I checked the coverage report, and got a hit for the fallback `digest` algorithm.",atombrella,None,2017-09-25T18:43:30Z,2017-09-27T14:52:55Z
9142,Fixed #28620. Clear boundfield cached value after setting up inline foreign key field,,DmitriySelischev,None,2017-09-25T15:57:25Z,2017-09-29T13:33:02Z
9141,Refs #28248 -- Clarified the precision of PASSWORD_RESET_TIMEOUT_DAYS.,https://code.djangoproject.com/ticket/28248,timgraham,None,2017-09-25T15:16:06Z,2017-10-12T18:58:26Z
9140,Fixed JS linter error,Regression introduced in 1f3dfd783d.,claudep,None,2017-09-24T15:53:17Z,2017-09-24T16:10:12Z
9139,Fixed #28629 -- Made tree.Node instances hashable.,https://code.djangoproject.com/ticket/28629,felixxm,None,2017-09-24T14:08:51Z,2017-09-29T05:44:15Z
9138,Clarified StrIndex docs example.,"StrIndex code example in database-functions.txt now shows the name of the first author for explicitly show that the first author does not have ""Smith"".",miguel550,None,2017-09-24T04:00:56Z,2017-09-27T13:29:00Z
9137,Fixed #28627 -- Added slug converter to some path() examples in docs.,https://code.djangoproject.com/ticket/28627,Niduroki,None,2017-09-23T18:21:44Z,2017-09-25T17:06:12Z
9136,Merged startswith() calls.,,felixxm,None,2017-09-23T09:47:07Z,2017-09-25T19:04:09Z
9135,Fixed #28626 -- Dropped support for PostgreSQL 9.3.,https://code.djangoproject.com/ticket/28626,timgraham,None,2017-09-22T19:04:40Z,2017-09-27T16:56:51Z
9134,Fixed #27857 -- Dropped support for Python 3.4.,https://code.djangoproject.com/ticket/27857,timgraham,None,2017-09-22T18:48:14Z,2018-04-13T15:30:21Z
9133,Fixed #28625 -- Clarify documentation of DATABASES.TIME_ZONE setting,There are two settings called TIME_ZONE; make it clear the documentation of the DATABASES one is not describing the general one.,jribbens,None,2017-09-22T17:17:14Z,2017-09-28T14:18:22Z
9131,Refs #28535 -- Add rebase option in makemigrations command,"Hi! I added `--rebase` option for `makemigrations` command.
Usage is like this:

```
$ ls snippets/migrations/
0001_initial.py            0002_snippet_created_at.py 0002_snippet_updated_at.py __init__.py
$ python manage.py makemigrations --rebase -v 3
Rebasing snippets
  Branch 0002_snippet_updated_at
    - Add field updated_at to snippet
  Branch 0002_snippet_created_at
    - Add field created_at to snippet

Rebasing will only work if the operations printed above do not conflict
with each other (working on different fields or models)
Do you want to rebase these migration branches? [y/N] y

Created new rebase migrations:
  - /Users/a14737/PycharmProjects/django-book/tutorial/blog/snippets/migrations/0003_snippet_created_at.py
$ ls snippets/migrations/
0001_initial.py            0002_snippet_updated_at.py 0003_snippet_created_at.py __init__.py
```

Ticket URL is https://code.djangoproject.com/ticket/28535.
Thanks.",c-bata,None,2017-09-22T14:20:22Z,2020-03-27T18:31:30Z
9130,Removed unused eof argument to BoundaryIter._find_boundary().,Unused since its introduction in d725cc9734272f867d41f7236235c28b3931a1b2.,felixxm,None,2017-09-22T13:46:59Z,2017-09-23T05:01:50Z
9129,Added a test for TranslatableFile.__eq__,,atombrella,None,2017-09-22T13:21:25Z,2017-09-25T14:40:51Z
9128,Refs #28593 -- Made URLResolver._populate() more resilient to signal interrupts.,"The _populate() method sets a flag to prevent infinite recursion in case a
urlconf includes itself. The flag is a threadlocal to [avoid a race
condition][1] where one thread sets the flag and another checks it, then
proceeds to access data that's supposed to be populated (e.g. _reverse_dict)
but isn't yet.

The potential still exists for a thread to set the threadlocal, then be
interrupted by a signal such as SIGALRM and raise before resetting the
threadlocal flag. In this scenario, subsequent calls to _populate() in the
same thread will short-circuit erroneously.

The bulk of the method was already wrapped in a try/finally in df41b5a, but
since a signal interrupt can occur at any line executed by the interpreter,
this moves up the try to ensure threadlocal gets reset.

[1]: https://groups.google.com/d/msg/django-developers/D_bIeinKHjE/4NmVQUJqAgAJ",dtao,None,2017-09-22T12:45:27Z,2017-09-22T14:47:39Z
9127,Expanded Postgres.app GDAL instructions on Mac.,When using Postgres.app and the libraries are still not found (using the default settings currently described in the documentation),vnagendra,None,2017-09-22T10:42:14Z,2018-01-05T15:33:52Z
9126,Fixed #28198 -- Prevented model attributes from overriding deferred fields.,"Attributes from parent classes will not overload attributes in child classes. During model creation process, attributes which are dublicated in parent and child classes will be removed. That attributes will restored for all parent classes after model creation process",denys-tarykin,None,2017-09-22T09:22:12Z,2020-01-29T08:34:38Z
9125,bug#28198. Fixed attributes which are duplicated in parent and child classes ,bug#28198. Fixed attributes. Now all attributes which are in parent and child classes will be removed from first one during child initialization,denys-tarykin,None,2017-09-22T08:55:08Z,2017-09-22T08:56:50Z
9124,Fixed #28624 -- Added attribute allow_duplicate to manytomany field,added attribute which surpresses unique constraint,motu55,None,2017-09-21T13:10:53Z,2017-09-25T13:17:59Z
9123,bug#28198. Fixed attributes.,bug#28198. Fixed attributes. Now all attributes which are in parent and child classes will be removed from first one during child initialization,denys-tarykin,None,2017-09-21T12:06:06Z,2017-09-21T12:26:24Z
9122,"Fixed #27710 -- Made Model.save() invalidate cached, stale relations after a primary key assignment.",https://code.djangoproject.com/ticket/27710,czpython,None,2017-09-21T04:27:52Z,2017-11-09T18:51:24Z
9121,[LtreeExtension] class for creating an 'ltree' extension in Postgres,"This is a small pull request for creating an `ltree` extension in Postgres.  We use this code in our project, so I wanted to submit it as a PR to Django, so that it could be part of the framework.

I did a search on Trac, but didn't find any tickets when searching `ltree`.  I hope that my PR finds you well.

Thanks,
Aaron",aaronlelevier,None,2017-09-21T01:06:09Z,2017-09-21T01:21:16Z
9120,Fixed #18620 -- Made ContentTypes shortcut view prefer current site if available.,"https://code.djangoproject.com/ticket/18620

Initial patch: https://github.com/django/django/pull/203/

I had to adapt an existing test because the proposed solution will always use an absolute url if one is available. The previous solution would always use one only if the sites framework was not installed.",czpython,None,2017-09-20T16:27:59Z,2018-06-21T17:40:17Z
9119,Added a checks test for valid i18n patterns.,,timgraham,None,2017-09-20T14:35:27Z,2017-09-22T18:58:01Z
9118,bug#28198. Fixed attributes. Now all attributes which are in parent a…,bug#28198. Fixed attributes. Now all attributes which are in parent and child classes will be removed from first one during child initialization,denys-tarykin,None,2017-09-20T14:09:50Z,2017-11-16T09:39:51Z
9117,创建用户默认可以登录admin站点,,grusirna,None,2017-09-20T08:33:37Z,2017-09-20T13:45:25Z
9116,Fixed #28642 -- Add LRU cache to parse_accept_lang_header,"https://code.djangoproject.com/ticket/28642#ticket

`parse_accept_lang_header` seems to be an ideal candidate for an `lru_cache`.",orf,None,2017-09-19T22:17:36Z,2018-08-09T23:18:47Z
9115,Added test for too large input to django.utils.http.base36_to_int.,,atombrella,None,2017-09-19T21:46:26Z,2017-09-21T14:21:03Z
9114,Avoid collecting discarded content in temporary list,,ticosax,None,2017-09-19T20:31:23Z,2017-09-20T13:50:15Z
9113,[RFC] admin: changeform view: handle ValidationErrors,"This patch handles ValidationErrors coming from `save_model` or
`save_related`.

This is useful for e.g. django-fsm, where a transition method might
throw this.
An alternative approach would be to hook into the form's validation
(`is_valid`), but this is not as straight forward and it seems like a
good behavior to handle ValidationErrors here, instead of letting them
bubble up and typically causing a 500 for the admin page.

Ref: https://github.com/kmmbvnr/django-fsm/issues/120

TODO:
- [x] ticket (https://code.djangoproject.com/ticket/28619)
- [ ] (fix?) tests",blueyed,None,2017-09-19T18:37:57Z,2017-10-05T16:20:51Z
9112,Fixed #27846 -- clear all cached reverse relationships on refresh_from_db(),https://code.djangoproject.com/ticket/27846,czpython,None,2017-09-19T17:55:16Z,2017-10-12T21:25:38Z
9111,Fixed #28508 -- Changed the foreground colors to black on error pages,"Fixes:
https://code.djangoproject.com/ticket/28508",stfnsn,None,2017-09-19T14:29:39Z,2017-09-21T14:23:24Z
9110,Fixed #28617 -- Made ogrinspect output pep8 compliant,This PR fixes some E305 and E203 violations in the output of the `ogrinspect` command. It also adds a test for the `--mapping` option.,tschorr,None,2017-09-19T11:32:25Z,2017-09-21T01:16:40Z
9109,Refs #14370 -- Fixed typo in ModelAdmin.autocomplete_fields docs.,"Finished incomplete sentense in `autocomplete_fields`
documenation.

Ref #6385
Ref #14370

As suggested by @GeyseR in
https://github.com/django/django/pull/6385#pullrequestreview-63555932

Thx :)",codingjoe,None,2017-09-19T09:26:52Z,2017-09-19T13:18:17Z
9108,Add missing word in cache documentation.,"The word be is missing from the following sentence:

> By default, the existing cache value will **be** incremented or decremented by 1.",kanet77,None,2017-09-19T05:38:12Z,2017-09-19T10:52:02Z
9107,Fixed #28576 -- Added color interpretation method to GDALBand.,Adds color interpretation method to GDALBand. [Ticket](https://code.djangoproject.com/ticket/28576),ndalton12,None,2017-09-19T00:54:46Z,2017-09-21T16:05:31Z
9106,Increase test coverage for db/backends/base/operations.py.,,atombrella,None,2017-09-18T19:17:16Z,2017-10-01T08:00:23Z
9105,Refs #28334 -- Fixed crash in hstore/citext oid caching when testing.,Reported in https://github.com/django/django/pull/8686#issuecomment-330273596.,timgraham,None,2017-09-18T18:32:54Z,2017-09-19T12:35:34Z
9104,bug#28198. Fixed logic that set default value for deferred fields,"All deferred fields were skipped during model initialization process, even they have default value ",denys-tarykin,None,2017-09-18T11:10:42Z,2017-09-21T12:03:01Z
9103,Added a link in README.rst for people new to IRC.,,kataria101,None,2017-09-18T10:01:01Z,2017-10-24T18:18:14Z
9102,Fixed #28610 -- Used test skipping instead of conditional discovery in serializers test.,,claudep,None,2017-09-18T08:08:52Z,2017-09-18T17:47:25Z
9101,[1.11.x] Fixed #28609 -- Add REQUEST_URI to dev server,"Pass original request URI in the environment from the development server
WSGIRequestHandler so that WSGI middleware which need access it can be
applied in WSGI_APPLICATION.",jaylynch,None,2017-09-18T07:29:16Z,2017-09-28T01:06:07Z
9100,Fixed #28488 -- Allowed error handlers to access CSRF tokens.,"This should fix ticket 28488. The main issue was that error handlers could access CSRF tokens and not run through `process_view`. The patch just masks the problem by ensuring that the handling already happens in `process_request`. All in all this means (for stable CSRF operations) that csrf middleware should come relatively early in the middleware chain -- but I think this is the best we can do.

Needs backport to at least 1.11",apollo13,None,2017-09-17T20:28:05Z,2017-09-20T20:42:53Z
9099,Fixed #28608 -- Allowed UserCreationForm and UserChangeForm to work with custom user models.,fixes https://code.djangoproject.com/ticket/28608#no1,romulocollopy,None,2017-09-17T20:18:00Z,2017-12-29T00:22:28Z
9098,use get_user_model in UserCreateForm and UserChangeForm,fixes https://code.djangoproject.com/ticket/28608#no1,romulocollopy,None,2017-09-17T19:37:45Z,2017-09-17T20:13:39Z
9097,Change default value of has_bulk_insert to True,Does the change need to be documented in the release notes?,atombrella,None,2017-09-17T07:42:31Z,2017-09-18T12:34:17Z
9096,Fixed #28597 -- Fixed crash with the name of a model's autogenerated primary key in an Index's fields.,https://code.djangoproject.com/ticket/28597,felixxm,None,2017-09-17T07:25:11Z,2017-09-22T10:40:52Z
9095,Update README.rst,test case,liumj0305,None,2017-09-17T07:18:00Z,2017-09-17T07:21:56Z
9094,Fixed #28603 -- Corrected comment in collectstatic's collect(),"Fixes:
https://code.djangoproject.com/ticket/28603",edmorley,None,2017-09-16T22:30:53Z,2017-09-29T10:45:48Z
9093,Fixed #28602 - file watch based autoreload for Windows,Currently utils/autoreload.py has implementation for inotify based file system watcher. On Windows it scans all files for changes every 1 second which takes a lot of CPU. Windows provides file system watching API (FindFirstChangeNotification) which does the same thing as inotify on Linux. Django should take advantage of the API to make autoreload more efficient.,adamsowa,None,2017-09-16T10:17:25Z,2019-01-18T22:29:35Z
9092,Fixed #28602 - file watch based autoreload for Windows,Currently utils/autoreload.py has implementation for inotify based file system watcher. On Windows it scans all files for changes every 1 second which takes a lot of CPU. Windows provides file system watching API (FindFirstChangeNotification) which does the same thing as inotify on Linux. Django should take advantage of the API to make autoreload more efficient.,adamsowa,None,2017-09-16T10:10:43Z,2017-09-16T10:13:23Z
9091,Fixed #28602 -  file watch based autoreload implementation for Windows,Currently utils/autoreload.py has implementation for inotify based file system watcher. On Windows it scans all files for changes every 1 second which takes a lot of CPU. Windows provides file system watching API (FindFirstChangeNotification) which does the same thing as inotify on Linux. Django should take advantage of the API to make autoreload more efficient.,adamsowa,None,2017-09-16T09:54:47Z,2017-09-16T10:02:50Z
9090,Removed unneeded StdDev.convert_value() and Variance.convert_value().,This seems unneeded since its introduction in f59fd15c4928caf3dfcbd50f6ab47be409a43b01.,sir-sigurd,None,2017-09-16T09:49:04Z,2017-09-16T20:31:41Z
9089,Simplified Count.convert_value() and RegrCount.convert_value().,,sir-sigurd,None,2017-09-16T09:32:42Z,2017-09-16T20:31:45Z
9088,Refs #8408 -- Added EstimatedCountPaginator.,"**RFC, please discuss**

This PR implements a paginator which takes advantage of Postgres and mysql's ability to estimate the amount of rows in a table.
Even as early as 1 million rows, SQL count operations can become slow and the Django administration unexplicably slows down. It becomes unusable within a couple of magnitudes.
This is basically a different way to approach [8408](https://code.djangoproject.com/ticket/8408), which has a `no_count` PR in #8858.

Notes:

* Only postgres and mysql are supported; I have no idea how to do it with other engines (and I don't think it's necessary, this is best-effort after all).
* MySQL is completely untested. I rewrote a postgres version I'm currently using in production.
* Estimations can be off by a lot! I've seen discrepancies of up to 3-4% on postgres.
* This is obviously only meant to be used on QuerySets. It will fail gracefully if given a non-queryset object though.
* No tests/docs yet (and I would welcome help writing those). I'd like input on whether this is an acceptable approach to be merged first.
* Is `django.core.paginator` an ok place for this to live? It's where I would expect it, but the module doesn't do db stuff in general.",jleclanche,None,2017-09-15T23:11:09Z,2020-07-10T08:24:30Z
9087,Fixed #28601 -- Prevented cache.get_or_set() from caching None if default is a callable that returns None.,"https://code.djangoproject.com/ticket/28601

In 82be474 the change was made to allow None as a default value passed to
BaseCache.get_or_set. In case the default value of None is used, it is not
stored in the cache. This still left open the possibility that default could
be a callable that *returns* None, in which case it *would* be stored in the
cache.

    # This scenario works as expected.
    cache.get_or_set('foo', None)  # None
    cache.get_or_set('foo', 5)  # 5
    cache.get('foo')  # 5

    # This scenario seems wrong.
    cache.get_or_set('bar', lambda: None)  # None
    cache.get_or_set('bar', 5)  # None :(
    cache.get('bar')  # None :(

This change updates the logic for BaseCache.get_or_set so that if default is
None or *returns* None, the default value is not cached.",dtao,None,2017-09-15T21:31:20Z,2017-10-10T13:42:49Z
9086,Refs #28595 -- Added a hook to add execute wrappers for database queries.,"This is a (probably better) alternative to #9078, using an API inspired by middleware as suggested by @akaariai ",shaib,None,2017-09-15T17:30:32Z,2017-09-21T16:13:10Z
9085,Added a test for QuerySet.select_related() reverse caching.,Taken from #9081 ,ticosax,None,2017-09-15T14:29:02Z,2017-09-21T18:41:52Z
9084,Removed unnecessary check in SQLCompiler.get_related_selections().,,timgraham,None,2017-09-15T12:39:28Z,2017-09-15T13:21:40Z
9083,Refs #24031 -- Added test for When.__repr__,,atombrella,None,2017-09-14T22:16:27Z,2017-09-15T10:13:39Z
9082,"Fixed #29007 -- Fixed DecimalValidator crash on NaN, SNan, Inf, and Infinity values.",https://code.djangoproject.com/ticket/29007,bfabio,None,2017-09-14T14:26:04Z,2018-01-11T08:01:08Z
9081,Fixed #27332 -- Added FilteredRelation API for conditional join (ON clause) support.,Rebased version of #7560,ticosax,None,2017-09-14T13:03:14Z,2017-09-22T15:53:18Z
9080,Added a test for mixing args and kwargs in reverse().,,timgraham,None,2017-09-14T11:04:55Z,2017-09-22T18:58:12Z
9079,Fixed Dutch translations in tests.,Per @sjoerdjob's comment at https://github.com/django/django/pull/7482#discussion_r129953561.,timgraham,None,2017-09-14T10:51:48Z,2017-09-14T12:26:48Z
9078,Refs #28595 -- Added execute hooks for database queries,"This implements the core feature of execute hooks. The next steps are making some standard hooks available, and reimplementing some existing features (e.g. `assertNumQueries()`) in a simpler, more straightforward way based on this.

I have strong doubts about the documentation included here -- It's complete, but could be phrased much better. Also, I couldn't find a proper place to add it to, so I put it in a separate file -- but I'm really not sure about that either.",shaib,None,2017-09-14T01:34:20Z,2017-09-15T18:32:16Z
9077,Fixed #28575 -- Added a qualified name to dynamic exceptions in models,This adds a custom metaclass for dynamically created exceptions attached to models on creation. It also adds a pickling function and registers it with the pickler dispatch table for the custom metaclass.,rmtobin,None,2017-09-14T01:29:29Z,2017-10-13T13:16:10Z
9076,Fixed #28575 - Added a custom metaclass for exceptions to ensure they are pickleable,This adds a custom metaclass for dynamically created exceptions attached to models on creation. It also adds a pickling function and registers it with the pickler dispatch table for the custom metaclass.,rmtobin,None,2017-09-14T01:00:33Z,2017-09-14T01:19:25Z
9075,Remove unnecessary parens.,,felixxm,None,2017-09-13T19:46:23Z,2017-09-14T19:49:23Z
9074,Refs #28593 -- Moved django.conf.urls.include() to django.urls().,"The old location remains for backwards compatibility. Documentation
will be updated separately along with the rest of the URL routing changes.",timgraham,None,2017-09-13T19:45:13Z,2017-09-13T20:49:24Z
9073,Merged isinstance() calls.,,felixxm,None,2017-09-13T18:05:16Z,2017-09-13T19:21:12Z
9072,Refs #28593 -- Documented DEP 0201: Simplified routing syntax. ,"Recreating #7542, since I'd removed my `django` repo as part of a tidy up.

TODO:

- [x] Bring up to date with master.
- [x] Address inline comments from @sjoerdjob - lots of obvious fixes there.
- [x] ""Documentation for url() shouldn't be removed -- as far as I know, there's no plan to deprecate it. It should be as valid alternative (i.e. error messages should mention ""path() or url()"" not just "" path()"") shouldn't it?""
- [x] Documentation for path() and the type converters is missing.
- [x]  Release note are missing.

",tomchristie,None,2017-09-13T11:36:47Z,2017-09-21T08:46:58Z
9070,Refs #28459 -- Improved performance of loading models from DB.,"https://code.djangoproject.com/ticket/28459

```
class TestModel(models.Model):
    field1 = models.IntegerField(null=True)
    field2 = models.IntegerField(null=True)
    field3 = models.IntegerField(null=True)
    field4 = models.IntegerField(null=True)
    field5 = models.IntegerField(null=True)
```
`TestModel.objects.count() == 20000`, values for all fields `is None`.

Before:
```
In [7]: %timeit for x in TestModel.objects.all(): pass
163 ms ± 1.41 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```

After:
```
In [7]: %timeit for x in TestModel.objects.all(): pass
143 ms ± 1.07 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-09-13T09:01:01Z,2020-03-20T09:24:55Z
9069,Refs #27090 -- Added real database sequence introspection,,felixxm,None,2017-09-12T20:18:52Z,2017-09-13T18:25:35Z
9068,Fixed #28591 -- Added an error message for createsuperuser --username= (blank).,"when we run `./manage.py createsuperuser   --username=`, super user does not create and no error print in console",hramezani,None,2017-09-12T19:13:31Z,2017-10-10T02:07:17Z
9067,repair margin of p.file-upload,,a-roomana,None,2017-09-12T18:55:32Z,2017-10-20T14:54:31Z
9066,Update change_form.html,"replace ' by "" in url of forms.css",a-roomana,None,2017-09-12T18:38:33Z,2017-09-12T22:46:08Z
9065,Refs #28569 -- Fixed gis_tests.inspectapp.tests.OGRInspectTest.test_time_field.,,sir-sigurd,None,2017-09-12T17:21:49Z,2017-09-12T18:13:33Z
9063,Fixed #28589 -- Removed readonly/uneditable fields from SQL query in admin save,"Created get_update_fields() on ModelAdmin and pass it as an argument to
.save() in save_model on ModelAdmin
https://code.djangoproject.com/ticket/28589",FingalP,None,2017-09-12T12:16:43Z,2018-04-20T15:10:02Z
9062,Used sqlite3.Connection.load_extension() instead of query execution for SpatiaLite loading.,,sir-sigurd,None,2017-09-12T03:32:03Z,2017-09-12T14:43:22Z
9061,[1.11.x] Fixed #27895 -- Fixed test client response.json crash with non-ASCII characters on Python 2.,Based on Aniruddha Maru's patch (ticket #27895).,bfabio,None,2017-09-11T10:07:51Z,2017-09-11T14:35:31Z
9060,Fixed #28547 -- Doc'd encoded URLs in redirect() function,https://code.djangoproject.com/ticket/28547,JakeBar,None,2017-09-11T06:40:59Z,2017-10-06T16:58:41Z
9059,Removed django.contrib.gis.geometry.backend.,"The layer of indirection is unchanged and undocumented
since its introduction in ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8.",timgraham,None,2017-09-11T03:07:10Z,2017-09-12T14:11:40Z
9058,Added Test case for ticket #28567,"[#28567](https://code.djangoproject.com/ticket/28567)

Setlang will not redirect to `/admin/` if `prefix_default_language=False`",raratiru,None,2017-09-10T20:38:41Z,2017-10-28T23:24:22Z
9057,Removed unnecessary parens in _get_app_label_and_model_name().,,felixxm,None,2017-09-10T19:35:22Z,2017-09-12T18:39:36Z
9056,Fixed #28570 -- Avoided setting SRID in GEOSGeometry.clone().,"https://code.djangoproject.com/ticket/28570

This requires at least GEOS 3.3.1, I think it's OK to set it as minimum version, but I'm not sure if change `3.3` to `3.3.1` here https://github.com/django/django/blob/a599ae6018f748f66e774604d12989911ea09d33/docs/ref/contrib/gis/install/geolibs.txt#L11
would look good. Actually I think we could fully drop support for 3.3.",sir-sigurd,None,2017-09-10T18:58:06Z,2017-09-11T18:10:22Z
9055,Fixed #28560 -- Fixed ordered queries using the values()/values_list() with distinct().,https://code.djangoproject.com/ticket/28560,felixxm,None,2017-09-10T17:06:10Z,2017-11-14T20:26:50Z
9054,Fixed #28392 -- Fixed GIS's WKT regex to match large scientific notation numbers.,"https://code.djangoproject.com/ticket/28392

Thanks Greg Larmore for report and initial patch.",sir-sigurd,None,2017-09-10T17:03:11Z,2017-09-12T02:40:51Z
9053,Fixed #28574 -- Add Queryset.explain() method,"[Ticket](https://code.djangoproject.com/ticket/28574)

```python
>> qs = Tag.objects.filter(name='test').all()
>> print(qs.explain())
Seq Scan on queries_tag  (cost=0.00..23.00 rows=5 width=50)
  Filter: ((name)::text = 'test'::text)
>> print(qs.explain(verbose=True))
Seq Scan on public.queries_tag  (cost=0.00..23.00 rows=5 width=50) (actual time=0.054..0.054 rows=0 loops=1)
  Output: id, name, parent_id, category_id
  Filter: ((queries_tag.name)::text = 'test'::text)
  Rows Removed by Filter: 5
Planning time: 0.382 ms
Execution time: 0.189 ms
>> print(qs.explain(verbose=True, format='json'))
[{'Execution Time': 0.177, 'Triggers': [], 'Planning Time': 0.419, 'Plan': {'Actual Loops': 1, 'Filter': ""((queries_tag.name)::text = 'test'::text)"", 'Node Type': 'Seq Scan', 'Rows Removed by Filter': 5, 'Alias': 'queries_tag', 'Output': ['id', 'name', 'parent_id', 'category_id'], 'Actual Startup Time': 0.067, 'Actual Total Time': 0.067, 'Relation Name': 'queries_tag', 'Parallel Aware': False, 'Plan Rows': 5, 'Plan Width': 50, 'Actual Rows': 0, 'Total Cost': 23.0, 'Schema': 'public', 'Startup Cost': 0.0}}]
```

I need to add docs, but I hope the general implementation is OK with regards to modifying the `operations` and `features` db-backend files, and their interaction with the compiler/queryset/query etc.",orf,None,2017-09-10T14:36:14Z,2018-04-19T16:00:44Z
9052,Fixed #28581 -- Pagination topic docs restructuring,https://code.djangoproject.com/ticket/28581,luto,None,2017-09-10T10:12:23Z,2018-12-31T18:13:27Z
9051,Fixed #28579 -- Doc'd upgrade effort expectations for Django 2.0.,https://code.djangoproject.com/ticket/28579,timgraham,None,2017-09-09T18:02:45Z,2017-09-11T13:07:20Z
9050,Fixed #28571 -- Added a prompt to bypass password validation in createsuperuser.,[Ticket](https://code.djangoproject.com/ticket/28571),orf,None,2017-09-09T17:22:58Z,2018-08-09T23:22:14Z
9049,Refs #24928 -- Added introspection support for PostgreSQL RangeField,,claudep,None,2017-09-09T16:34:25Z,2017-09-09T20:04:33Z
9048,Fixed #28578 -- Renamed DatabaseCreation number arguments to suffix.,https://code.djangoproject.com/ticket/28578,jdufresne,None,2017-09-09T14:53:14Z,2017-09-19T03:24:39Z
9047,Fixed some comments referring to a nonexistent TestClient class.,"""TestClient"" confusing!",luoxzhg,None,2017-09-09T14:14:00Z,2017-09-09T15:52:06Z
9046,Refs #24928 -- Added introspection support for PostgreSQL JSONField,,claudep,None,2017-09-09T12:42:24Z,2017-09-09T16:34:49Z
9045,Fixed spelling -- spherical mercator -> Spherical Mercator.,,sir-sigurd,None,2017-09-09T11:25:22Z,2017-09-09T13:54:16Z
9044,Fixed #25961 -- Removed handling of thread-non-safe GEOS functions.,"https://code.djangoproject.com/ticket/25961

This PR contains only changes from https://github.com/django/django/pull/5849 that remove handling of thread-non-safe functions without further refactoring.",sir-sigurd,None,2017-09-09T08:55:41Z,2017-09-09T15:11:07Z
9043,Refs #28010 -- Allowed reverse related fields in select_for_update(of=(...)).,"Previously, reverse related fields (OneToOneFields in this case) were
not matched correctly and thus effectively excluded, even though they
are allowed in select_related().

Reverse OneToOne fields are normally followed using a LEFT JOIN, which
are not allowed in SELECT FOR UPDATE. Thus, in order to use this
support, it is necessary to force an INNER JOIN, as is demonstrated in
the test.

Thanks to Adam Chidlow for the report and suggested fix.",bluetech,None,2017-09-08T11:19:45Z,2017-10-17T13:28:12Z
9042,Simplified GEOSFuncFactory.,,sir-sigurd,None,2017-09-08T09:14:59Z,2017-09-08T14:40:48Z
9041,Fixed reference to JavaScriptCatalog view in documentation.,`javascript_catalog` was removed in Django 2.,solarissmoke,None,2017-09-08T04:20:19Z,2019-11-26T15:36:48Z
9040,Fixed #28546 -- Fixed translation's to_locale() with langauge subtags.,"Updated from https://github.com/django/django/pull/8995.
http://code.djangoproject.com/ticket/28546",timgraham,None,2017-09-07T13:40:46Z,2017-09-08T18:12:23Z
9039,[WIP] Refs #14357 -- Deprecated Meta.ordering affecting values().annotate() queries.,"I think it's working but I haven't check the test failures in detail.
https://code.djangoproject.com/ticket/14357",timgraham,None,2017-09-07T01:48:49Z,2018-08-06T21:16:56Z
9038,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""","This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda.
try/except performs better.

https://code.djangoproject.com/ticket/27818",timgraham,None,2017-09-06T19:24:51Z,2018-01-03T22:28:25Z
9037,Replaced usage of django.utils.functional.curry() with partial() and partialmethod().,,sir-sigurd,None,2017-09-06T15:50:19Z,2017-09-06T18:18:46Z
9036,[RFC] Used operators for properties when possible.,"I'm not sure if it worsen readability, but if so, it still could be considered for properties that are used frequently, because operators works a bit faster.",sir-sigurd,None,2017-09-06T07:46:09Z,2017-10-07T12:29:04Z
9035,Removed unneeded __init__() methods.,,sir-sigurd,None,2017-09-06T05:04:18Z,2017-09-07T12:20:06Z
9034,Replaced @cached_property with class attributes when possible.,,sir-sigurd,None,2017-09-06T04:44:29Z,2017-09-06T14:42:06Z
9033,Used list instead of deque in prefetch_related_objects().,`deque` is not needed here since algorithm doesn't need FIFO.,sir-sigurd,None,2017-09-06T04:03:14Z,2017-09-06T12:14:19Z
9032,"Fixed #28501 -- Fixed the problem ""python -m django runserver"" crashes.","Fixed the problem that ""python -m django runserver"" crashes when autoreloader is enabled.

https://code.djangoproject.com/ticket/28501",ymyzk,None,2017-09-05T21:58:36Z,2017-11-06T16:20:47Z
9031,Replaced get_pointer_arr() with usage of GEOM_PTR for simplicity.,,sir-sigurd,None,2017-09-05T16:59:12Z,2017-09-06T12:11:27Z
9030,Typo fix in docstrings.,,BurkovBA,None,2017-09-05T15:35:13Z,2017-09-05T19:28:38Z
9029,Used dict comprehensions in BaseMemcachedCache.get_many() and set_many() for better readability.,,sir-sigurd,None,2017-09-05T12:43:10Z,2017-09-05T13:17:47Z
9028,Removed useless __init__-call in PostgreSQL DatabaseWrapper,,atombrella,None,2017-09-05T12:35:23Z,2017-09-07T19:51:36Z
9027,Simplified admin.widgets.url_params_from_lookup_dict().,,sir-sigurd,None,2017-09-05T11:25:26Z,2017-09-05T13:48:31Z
9026,Fixed #28569 -- Corrected get_layer_by_name prototype to skip error checking,"Ticket [#28569](https://code.djangoproject.com/ticket/28569).

This is a follow up of https://github.com/django/django/pull/9006#pullrequestreview-60309807.",pope1ni,None,2017-09-04T20:15:09Z,2017-10-05T12:46:52Z
9025,Added tests for BooleanField/NullBooleanField's check constraints on Oracle.,,felixxm,None,2017-09-04T20:08:09Z,2017-09-05T07:25:19Z
9024,Fixed #28561 -- Removed inaccurate docs about QuerySet.order_by() and joins.,"As of ccbba98131ace3beb43790c65e8f4eee94e9631c, both examples don't use a join.",timgraham,None,2017-09-04T20:02:05Z,2017-09-06T23:22:12Z
9022,Fixed #28568 -- NameError in Database Functions' ref,https://code.djangoproject.com/ticket/28568,michael-k,None,2017-09-04T16:02:59Z,2017-09-04T21:19:14Z
9021,Fixed #28566 -- Added full file path matching to collectstatic ignore patterns.,https://code.djangoproject.com/ticket/28566,yellowcap,None,2017-09-04T13:48:24Z,2018-07-13T20:48:20Z
9020,Removed redundant white-space in docs/releases/1.10.txt,"I noticed this while porting a project to Django 1.10:

![screenshot from 2017-09-04 15 19 23](https://user-images.githubusercontent.com/26338/30026196-82c0386c-9184-11e7-8a81-1a9482a54657.png)

I've built docs locally to test the change.",berkerpeksag,None,2017-09-04T12:20:18Z,2017-09-04T12:46:18Z
9019,Fixed #28555 -- Made CharField convert whitespace-only values to the empty_value when strip is enabled.,https://code.djangoproject.com/ticket/28555,jschneier,None,2017-09-03T23:36:40Z,2018-05-20T22:04:19Z
9018,Unified NullBooleanField's and BooleanField's check constraints on Oracle.,See https://github.com/django/django/pull/9016#issuecomment-326822713.,felixxm,None,2017-09-03T18:31:44Z,2017-09-05T09:17:45Z
9017,Changed EmpytResultSet import in django/db/models/sql/query.py.,See 46509cf13dbf049f75077981c29ef2c60b5a96ab.,felixxm,None,2017-09-03T13:35:46Z,2017-09-03T17:33:30Z
9016,Refs #23130 -- Allowed BooleanField to be null=True,"https://code.djangoproject.com/ticket/23130

Picks up were @timgraham left off in https://github.com/django/django/pull/8467

refs:
- https://github.com/django/django/pull/3025
- https://code.djangoproject.com/ticket/22282
- https://code.djangoproject.com/ticket/26168
- https://code.djangoproject.com/ticket/22282

details:
- `BooleanField` model field can take `null=True`
- ~`NullBooleanField` is now just `BooleanField(null=True)`~
- depreciates `NullBooleanField` (this decision was made in @timgraham's PR)
- ~normalizes boolean type casting, and incorporates `distutils.util.strtobool`~
- ~collects all the different boolean casting special cases into a single file `django/utils/typecasting.py`~

still TODO:
- [x] there's at least a dozen tests failing <<< resolved
- [x] determine if this is a large enough PR to get added to [AUTHORS](https://github.com/django/django/blob/master/AUTHORS) ^_^ <<< call: no. the PR is much simpler without the `typecasting.py` change
- [ ] check for `NullBooleanField` isinstance calls to turn into `null=True`
- ~`typecasting.py` entrypoint functions need better names~
- ~evaluate `typecasting.py` `nullable=[ True | False ]` handling~
- ~add a few more cases to `test_typecasting.py`~
",lynncyrin,None,2017-09-03T09:05:10Z,2018-03-16T16:55:16Z
9015,Fixed #28562 -- Fixed DecimalValidator handling of positive exponent scientific notation.,"I have 1 failing test which I don't understand.  In that test it checks that `1+E2` with a `max_digits=2` doesn't raise. But `1+E2` is 100, what am I missing?",jschneier,None,2017-09-03T05:11:04Z,2017-09-27T14:53:57Z
9014,Bootstrapped Django 2.1.,"(to be merged after the stable/2.0.x branch is created in mid-September following Django 1.11 alpha)

todo: increase PBKDF2 iterations ([discussion](https://groups.google.com/d/topic/django-developers/Qab-hRG-SKs/discussion))",timgraham,None,2017-09-03T00:43:56Z,2018-12-27T23:52:37Z
9013,Moved select_sql in SQLCompiler.get_extra_select() to improve performance.,,felixxm,None,2017-09-02T20:09:48Z,2017-09-03T14:09:58Z
9012,Update django.po,fixed a typo.,rick68,None,2017-09-02T16:39:39Z,2017-09-02T16:56:41Z
9010,Fixed class name in docs/releases/1.10.txt,"The 'content_type' and 'content_params' attributes were added
to the 'HttpRequest' class.

See 6f1318734f0f3b6e62b782b0251a4e676e542e0b for details.",berkerpeksag,None,2017-09-02T10:43:09Z,2017-09-02T23:52:15Z
9009,Fixed typo in docs/releases/1.10.txt,"CharField does have an attribute named 'min_length', not 'minlength'.",berkerpeksag,None,2017-09-02T10:26:43Z,2017-09-02T12:46:48Z
9008,Fixed typo in docs/releases/1.10.txt,"The 'collectstatic' command doesn't have an option named '--ignore_patterns'.
It should be '--ignore' instead.",berkerpeksag,None,2017-09-02T10:19:41Z,2017-09-02T23:52:39Z
9007,Fixed #28559 -- Removed obsolete OGRException.,"Ticket [#28559](https://code.djangoproject.com/ticket/28559).

This was kept for backwards compatibility when merged with ``GDALException`` for Django 1.8 where the release notes said it ""should not be used any longer"". It is also undocumented. Removal with a major version bump to 2.0 would be a good time to clean this up.",pope1ni,None,2017-09-02T08:15:39Z,2017-09-03T05:42:42Z
9006,Fixed #28558 -- Simplified code to remove OGRIndexError,"Ticket [#28558](https://code.djangoproject.com/ticket/28558).

In addition there are some other minor related cleanups, a fix for an index bounds checking error and improvements to exception messages. I've kept things in separate commits for ease of reviewing.

Let me know if anything need to be split up into a different pull request or any extra tests need adding.

The added test which is the exact equivalent to the one added in 197b1878105504b5ac7e399e1f52a6093c88baa3 still seems to work if I revert 12809e160995eb617fe394c75e5b9f3211c056ff so I'm not sure if there is something else that has changed with exception handling in the template engine lookup code. ",pope1ni,None,2017-09-02T07:49:43Z,2017-09-04T12:45:51Z
9005,Fixed test modifying data created in setUpTestData,,francoisfreitag,None,2017-09-02T00:52:04Z,2017-09-02T01:43:42Z
9004,Fixed #28557 -- Fixed ForeignKey/OneToOneField/ManyToManyField argument name in docs.,https://code.djangoproject.com/ticket/28557,timgraham,None,2017-09-01T17:47:50Z,2017-09-02T00:55:47Z
9003,[1.11.x] Fixed #26522 -- Fixed a nondeterministic AssertionError in QuerySet combining.,"Thanks Andrew Brown for the test case.

Backport of 9bbb6e2d2536c4ac20dc13a94c1f80494e51f8d9 from master",timgraham,None,2017-09-01T17:24:44Z,2017-09-01T20:41:23Z
9002,[1.11.x] Fixed #28550 -- Restored contrib.auth's login() and logout() views' respect of positional arguments.,"Added old login() and logout() views signature arguments back and add
them to kwargs to be passed to LoginView() and LogoutView()
https://code.djangoproject.com/ticket/28550",ZachLiuGIS,None,2017-09-01T13:13:00Z,2017-09-03T16:05:19Z
9001,"Fixed #28423 -- Updated index docs for JSONField, HStoreField and Arr…","…ayField

Would it be considerable to backport this to 1.11? Both `GinIndex` and the class-based indexes were introduced in that release.

https://code.djangoproject.com/ticket/28423",atombrella,None,2017-09-01T11:53:06Z,2017-10-09T16:50:56Z
9000,Remove extra space from start of naturaltime Thai translation.,,perry,None,2017-09-01T06:28:40Z,2017-09-01T12:11:19Z
8999,Suggested LoginView rather than @login_required as an alternative to authenticate().,"This note was added in 1.8, but doesn't seem to have ever been true. `authenticate` is the main way to check a set of credentials, as recommended under ""How to log a user in"" further down this page. `login_required` isn't at all comparable and doesn't replace it in any way whatsoever.",danielroseman,None,2017-08-31T09:27:05Z,2017-10-25T16:02:27Z
8998,Removed useless itertools.chain() call in ChoiceWidget.optgroups().,,sir-sigurd,None,2017-08-31T05:03:21Z,2017-10-03T01:58:19Z
8997,Simplified Options._get_fields() a bit.,,sir-sigurd,None,2017-08-31T04:53:38Z,2017-08-31T11:17:26Z
8996,Fixed #28500 -- Fixed crash in FileBasedCache._is_expired() if the cache file is empty.,https://code.djangoproject.com/ticket/28500,caleblogan,None,2017-08-31T04:32:08Z,2017-09-04T00:37:32Z
8995,Fixed #28546 -- Fixed translation's to_locale() with langauge subtags.,"Added statement to check for subtags and return correct formatting. The statement to get correct locale with 'sr-latn' did not allow the subtags to be formatted properly. I added an if statement to catch the subtags.
I also added to the 'to_locale' test to check for proper subtag formatting.
https://code.djangoproject.com/ticket/28546",bwh91,None,2017-08-31T02:32:56Z,2017-09-07T14:16:55Z
8994,Fixed #28549 -- Fixed QuerySet.defer() with super and subclass fields.,"Previously, deferring on multiple fields (in different classes) did not
properly omit the superclass' defered field; we were iterating the
fields from SubClass._meta.fields as well as SuperClass._meta.fields,
and only deferred one of those.

Changed to iterate .local_fields only, so we do the correct filtering.

Thanks to Simon Charette for the suggested fix.",jk-ozlabs,None,2017-08-31T01:21:26Z,2017-08-31T13:51:58Z
8993,"[1.11.x] Fixed #27998, #28543 -- Restored logging of ManyToManyField changes in admin's object history.","And prevented ManyToManyField initial data in model forms from being affected
by subsequent model changes.

Regression in 56a55566a791a11420fe96f745b7489e756fc931.

(Less invasive version of https://github.com/django/django/pull/8992 for backporting).",timgraham,None,2017-08-30T17:30:03Z,2017-08-31T14:13:34Z
8992,Fixed #28543 -- Prevented ManyToManyField.value_from_object() from being lazy.,"Previously, it was a QuerySet which could reevaluate to a new value if the
model's data changes. This is inconsistent with other Field.value_from_object()
methods.

This allows reverting the fix in the admin for refs #27998.

https://code.djangoproject.com/ticket/28543",timgraham,None,2017-08-30T14:20:32Z,2017-08-31T13:34:52Z
8991,Fixed #28548 -- Removed 'middlewares' from docs,,Jkrzy,None,2017-08-30T01:37:37Z,2017-08-30T10:25:51Z
8990,Fixed #15522 -- Added ModelAdmin.delete_queryset().,https://code.djangoproject.com/ticket/15522,vangelou,None,2017-08-29T14:22:09Z,2018-01-06T00:31:09Z
8989,Fixed #28534 -- Make sure changing JSONField in forms always trigger change,https://code.djangoproject.com/ticket/28534,shangdahao,None,2017-08-29T06:21:20Z,2017-11-12T01:02:16Z
8988,Fixed #28534 -- Changing JSONField in forms always trigger change,https://code.djangoproject.com/ticket/28534,shangdahao,None,2017-08-29T04:47:45Z,2017-08-29T08:29:51Z
8987,Used c_byte instead of c_char in django.contrib.gis.geos.prototypes to simplify.,,sir-sigurd,None,2017-08-29T04:17:34Z,2017-08-30T01:00:56Z
8986,Fixed #28530 -- Stopped SelectDateWidget from localizing years in select box,https://code.djangoproject.com/ticket/28530,caleblogan,None,2017-08-29T01:53:11Z,2017-08-29T18:56:08Z
8985,[1.11.x] Fixed #28487 -- Fixed runserver crash with non-Unicode system encodings on Python 2 + Windows.,"Here is a better, far more conservative fix.

I've replaced the `force_bytes` call with a decode/encode chain that does the inverse of `force_bytes`, which is what was intended originally when I understood the encoding parameter to be a source encoding.

The unit test I've added is a bit contrived.  It tests that the reencoding is occurring correctly, but a bytestring can't actually be inserted into the environment without getting deep into the weeds of Windows internals.   I think the test I have here covers what needs to be covered, but I am open to suggestions on how it could be improved.
",mrogaski,None,2017-08-28T16:57:49Z,2017-08-31T12:00:32Z
8984,Added a Form method to output a series of <td>'s.,I missed this function and I think it will be useful for everybody.,hmikihth,None,2017-08-28T09:10:05Z,2017-08-28T22:18:15Z
8983,Fixed #26344 -- EmailMessage: don't ignore alternatives when it has attachments,https://code.djangoproject.com/ticket/26344,TigorC,None,2017-08-28T04:32:35Z,2017-09-04T12:46:56Z
8982,Fixed #28536 -- Removed old JS cross-browser utilities,,claudep,None,2017-08-26T16:20:32Z,2017-08-28T18:32:38Z
8981,"Fixed #9475 -- Allowed RelatedManager.add(), create(), etc. for m2m with a through model.",https://code.djangoproject.com/ticket/9475,collinanderson,None,2017-08-26T15:13:55Z,2019-01-16T04:38:03Z
8980,Fixed #28552 -- Dropped support for MySQL 5.5.,https://code.djangoproject.com/ticket/28552,timgraham,None,2017-08-26T14:49:11Z,2017-09-25T19:31:22Z
8979,Added Media.__repr__().,This makes it easier to debug MediaOrderConflictWarnings.,collinanderson,None,2017-08-26T14:35:02Z,2017-08-27T01:18:13Z
8978,Fixed #28507 -- Added __eq__ feature to ValidationError,,caleblogan,None,2017-08-26T00:11:31Z,2020-07-22T06:10:54Z
8977,Refs #27869 -- Omitted field kwargs from GinIndex.deconstruct() if they're None.,,atombrella,None,2017-08-25T20:38:39Z,2017-08-26T14:33:57Z
8976,Refs #25809 -- Omitted pages_per_range from BrinIndex.deconstruct() if it's None.,,atombrella,None,2017-08-25T20:38:23Z,2017-08-26T14:34:36Z
8975,Refs #11278 -- Clarified RelatedManager differences between reverse one-to-many and many-to-many relations.,"There's an inconsistency of the `set` method between [RelatedManager](https://github.com/django/django/blob/stable/1.11.x/django/db/models/fields/related_descriptors.py#L706) and [ManyRelatedManager](https://github.com/django/django/blob/stable/1.11.x/django/db/models/fields/related_descriptors.py#L972), which should be at least documented, I suppose.

This cost me some time of re-reading the docs and wondering ""What's wrong with my PKs?"".",theoden-dd,None,2017-08-25T18:51:07Z,2018-03-21T00:43:40Z
8974,Fixed #28050 -- Included template name in TemplateSyntaxError.,https://code.djangoproject.com/ticket/28050,rogeremasse,None,2017-08-25T18:37:38Z,2018-07-27T20:15:05Z
8973,Fixed #28529 -- Fixed VariableDoesNotExist warnings in admin templates.,,ziima,None,2017-08-25T09:50:26Z,2018-08-06T21:27:59Z
8972,Simplified migrations.state.ProjectState.__eq__().,,sir-sigurd,None,2017-08-25T08:53:59Z,2017-08-25T17:01:11Z
8971,Refs #28518 -- Improved performance of loading geometries from DB.,"https://code.djangoproject.com/ticket/28518

Before:
```
In [3]: %timeit for x in City.objects.values_list('point')[:1000]: pass
49.5 ms ± 367 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [4]: %timeit for x in City.objects.values_list('point')[:1000]: pass
32.1 ms ± 1.54 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-25T08:40:34Z,2017-09-05T14:09:34Z
8970,Fixed #28034 -- Updated Contributing tutorial w/ #5851 implementation,"Mirrored existing format with a few small additions/changes.

Included a note about building the docs at the example's point in Django's history. Specifically, sphinx<1.6 is required before f370bfb10878918eae8db9985e0856949fa65d3a.",Jkrzy,None,2017-08-25T05:02:38Z,2017-09-06T23:11:07Z
8969,[1.11.x] Fixed #28487 -- Fixed force_bytes() decoding of non-unicode strings.,"No different than the patch from @jjkalucki, but I added an appropriate regression test.
https://code.djangoproject.com/ticket/28487",mrogaski,None,2017-08-24T21:11:38Z,2017-08-29T19:05:48Z
8968,Removed lone usage of jQuery in admin's calendar.js.,Not sure if this is tested or needs a test at all.,claudep,None,2017-08-24T20:00:34Z,2017-08-26T16:01:46Z
8967,Used sets for CheckRegistry.registered_checks and deployment_checks.,,sir-sigurd,None,2017-08-24T09:46:57Z,2017-08-24T15:24:47Z
8966,Refs #15739 -- Simplified aliasing of RedirectView methods.,Is there any practical difference between this and the original implementation from 62f37c69b075a5d11b5fddc6c59b4f4b418ba358?,timgraham,None,2017-08-23T19:27:21Z,2017-08-24T13:22:02Z
8965,Fixed #27796 -- Prevented middleware being loaded twice with runserver,Thanks Tim Graham for the review.,claudep,None,2017-08-23T18:35:24Z,2017-08-23T21:06:53Z
8964,Fixed #28513 -- Added POST request support to LogoutView.,https://code.djangoproject.com/ticket/28513,shangdahao,None,2017-08-23T13:32:50Z,2017-08-24T13:11:17Z
8963,Fixed #28525 -- Documented GDAL and GeoIP exceptions.,"[Ticket #28525](https://code.djangoproject.com/ticket/28525)

There are a couple of other commits to make the documentation more consistent between packages.",pope1ni,None,2017-08-23T13:18:13Z,2017-09-03T05:42:08Z
8962,Used frozenset instead of dict for GeoIP2.cache_options for simplicity.,,sir-sigurd,None,2017-08-23T13:14:50Z,2017-08-23T15:50:35Z
8961,"Fixed #28524, Refs #24857 -- Fixed program name in management commands.","[Ticket #28524](https://code.djangoproject.com/ticket/28524)

This may need more work depending on what is decided with regard to the issues raised in the ticket.",pope1ni,None,2017-08-23T12:58:43Z,2017-08-31T14:22:27Z
8960,"Simplified iterative_dfs(), ancestors() and descendants() of migrations.graph.Node.",,sir-sigurd,None,2017-08-23T08:15:36Z,2017-08-24T02:17:34Z
8959,Used OrderedDict.fromkeys() to initialize OrderedDict with None values.,,sir-sigurd,None,2017-08-23T08:00:17Z,2017-08-23T15:41:57Z
8958,Fixed #28517 -- Don't raise PermissionDenied for collected models without delete permission,https://code.djangoproject.com/ticket/28517,czpython,None,2017-08-23T00:12:15Z,2018-01-05T00:44:16Z
8957,Fixed #28520 -- Added --start-at/after options to Django's test suite.,,knbk,None,2017-08-22T23:42:02Z,2019-05-27T05:17:51Z
8956,Fixed #28518 -- Improved performance of loading geometries from DB.,"https://code.djangoproject.com/ticket/28518

Before:
```
In [2]: %timeit for x in City.objects.values_list('point')[:1000]: pass
64.4 ms ± 644 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [3]: %timeit for x in City.objects.values_list('point')[:1000]: pass
49.8 ms ± 957 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```

Benchmarks are provided for PostgreSQL, will provide them for other backends if needed.",sir-sigurd,None,2017-08-22T20:24:32Z,2017-08-24T18:48:49Z
8955,Refs #27804 -- Use subTest() in ModelAdmin action logging tests.,"The first commit fixes a copy-paste error in the test case, the second tweaks it to use `subTest()` and check the action flag when fetching from `LogEntry`.",pope1ni,None,2017-08-22T12:38:03Z,2017-09-04T08:18:37Z
8954,Fixed bad indent in remove_stale_contenttypes.,It is unnecessary for ``content_type_display`` to be constructed from ``ct_info`` in every loop iteration.,pope1ni,None,2017-08-22T12:31:47Z,2017-08-22T13:13:02Z
8953,Fixed #28514 -- Clarified docs regarding idempotence of RelatedManager.add(),https://code.djangoproject.com/ticket/28514,jackattack24,None,2017-08-22T04:21:22Z,2017-10-12T17:44:24Z
8952,Refs #27804 -- Use subTest() in syndication_tests and template_backends.,,atombrella,None,2017-08-21T19:53:07Z,2017-09-04T07:08:03Z
8951,Refs #28502 -- Complemented stringformat tuple handling/test,,claudep,None,2017-08-21T19:32:16Z,2017-08-22T16:29:52Z
8950,[1.11.x] Fixed #28498 -- Added support for cx_Oracle 6.,"- Fixed implicit `Decimal` to `float` conversion when `input_size` is not specified for `Decimal` parameters (fixes `db_functions.tests.FunctionTests.test_greatest_decimal_filter`, `db_functions.tests.FunctionTests.test_least_decimal_filter`, `expressions_case.tests.CaseExpressionTests.test_update_decimal` failures on Python 2).
- Used `encoding`, `nencoding` parameters of `cx_Oracle.connect()` to specify `CHAR` and `NCHAR` encoding (fixes `backends.tests.BackendTestCase.test_unicode_password` failures on Python 2).",felixxm,None,2017-08-21T19:11:19Z,2017-08-23T08:03:58Z
8949,Changed direct user model import with get_user_model method.,"It's better to show good practice in docs, isn't it?",hendrikschneider,None,2017-08-21T12:12:44Z,2017-12-28T22:38:51Z
8948,Django -> django when styled as a logo with font.,"This was pointed out at DjangoCon US.

Not creating a Trac ticket as this is a ""typo fix or trivial documentation change.""",FlipperPA,None,2017-08-20T22:18:39Z,2017-08-21T06:07:18Z
8947,Fixed #28510 -- Added json response to technical_500_response,"Better handling technical 500 views, when client waits json response. ",vanadium23,None,2017-08-20T19:04:17Z,2018-03-17T17:02:51Z
8946,Removed postgresql_psycopg2.version.,`postgresql.version` doesn't exist since 29ea9714ee23525000dd8bdb7a9aafb2147de8c7.,felixxm,None,2017-08-20T19:03:56Z,2017-08-21T16:43:58Z
8945,Removed redundant backticks in docs/releases/1.8.txt,I noticed this while porting a project to Django 1.8. You can see the rendered version at https://docs.djangoproject.com/en/1.8/releases/1.8/#old-unordered-list-syntax,berkerpeksag,None,2017-08-20T13:26:29Z,2017-08-21T10:16:11Z
8944,Refs #23919 - Remove Jython and pypy workarounds,"[Ticket](https://code.djangoproject.com/ticket/23919)

Seeing as Django currently doesn't support Jython or PyPy we should perhaps also remove references them to from the documentation?",orf,None,2017-08-20T13:04:51Z,2018-08-09T23:22:03Z
8943,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,,vmanikes,None,2017-08-20T01:14:01Z,2017-08-21T09:07:20Z
8942,Fixed #27701 - Document staticfiles runserver bypassing of middleware,,Jkrzy,None,2017-08-18T22:04:57Z,2017-08-31T01:31:34Z
8941,Fixed #28367 -- Doc'd how to override management commands.,Included ``warning`` block as there is currently no notification if duplicate management command modules exist.,Jkrzy,None,2017-08-18T21:00:13Z,2017-09-02T20:39:26Z
8940,[WIP] Ref #21429 Added output logger to BaseCommand,"Ref: https://code.djangoproject.com/ticket/21429

WIP
I added a logger to BaseCommand. I need to add tests for the new loggers. Would love feedback to improve this PR. :)",jkang8,None,2017-08-18T20:54:08Z,2019-07-14T03:38:24Z
8939,Fixed #27796 -- Prevented middleware being loaded twice with runserver,https://code.djangoproject.com/ticket/27796,claudep,None,2017-08-18T19:23:25Z,2017-08-23T18:35:46Z
8938,Stable/1.11.x,"fix db conflicts  mysql - postgis   

```
def allow_migrate(self, db, app_label, **hints):

    try:
        db_app_mapping = settings.DB_APPS_MAPPING.get(app_label, DEFAULT_DB_ALIAS)
        #if database are mapped and database check your mapped database ,
        if db_app_mapping != db:
            return False
    except AttributeError:
        pass

    for router in self.routers:
        try:
            method = router.allow_migrate
        except AttributeError:
            # If the router doesn't have a method, skip to the next one.
            continue

        allow = method(db, app_label, **hints)

        if allow is not None:
            return allow
    return True
```",Cubillosxy,None,2017-08-18T19:15:07Z,2017-08-20T12:33:17Z
8937,Use dict.update in django/db/backends/mysql/base.py:data_types,"A fairly rudimentary way of testing this was just copying the `_data_types` variable, and running `timeit` on both ways.

After:
```
In [5]: %timeit _data_types.update({'DateTimeField': 'datetime(6)', 'TimeField': 'time(6)'})
233 ns ± 6.68 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
```

Before:
```
In [8]: %timeit dict(_data_types, DateTimeField='datetime(6)', TimeField='time(6)')
760 ns ± 10.2 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
```",atombrella,None,2017-08-18T15:33:03Z,2017-08-18T23:10:08Z
8936,Add keepdb docs to testing speedup section,,morenoh149,None,2017-08-18T14:27:09Z,2017-08-22T14:26:01Z
8935,Refs #28459 -- Improved performance of SQLCompiler.apply_converters().,"https://code.djangoproject.com/ticket/28459

Before:
```
In [3]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values_list('v'): pass
176 ms ± 725 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [6]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values('v'): pass
257 ms ± 2.18 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```
After:
```
In [3]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values_list('v'): pass
170 ms ± 1.25 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [5]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values('v'): pass
224 ms ± 1.88 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```",sir-sigurd,None,2017-08-18T10:52:41Z,2017-08-24T02:14:10Z
8934,Refs #28459 -- Improved performance of FlatValuesListIterable.,"https://code.djangoproject.com/ticket/28459
Before:
```
In [3]: %timeit -n 100 for x in City.objects.values_list('id', flat=True): pass
61.2 ms ± 719 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)
```
After:
```
In [30]: %timeit -n 100 for x in City.objects.values_list('id', flat=True): pass
58.8 ms ± 514 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)
```",sir-sigurd,None,2017-08-18T10:00:06Z,2018-01-26T05:36:42Z
8933, Add Count() subqueries,"It is Exists() subquery:
https://docs.djangoproject.com/en/1.11/_modules/django/db/models/expressions/#Exists
Why not add Count() subquery?
Is it possible count objects in subquery - aggreagation and count don't return queryset.",TonyRehley,None,2017-08-18T09:27:21Z,2017-08-18T11:43:32Z
8932,Fixed #28306 -- Improved test coverage for django.utils.lorem_ipsum.,"Original code by Idan Melamed.

Added my name and Idans to the authors list",luiscberrocal,None,2017-08-18T00:48:26Z,2017-09-02T20:11:47Z
8931,Fixed #28337 -- assertRedirects correctly replays requests,"Refactored django.test.clients.py:Client so that 'extra' parameters
passed into requests are stored so they can be accessed in the future.
This because useful in assertRedirects when the original request has
follow=False and the call to assertRedirects has
fetch_direct_response=True.

The problem with reported in the ticket is that under certain conditions
assertRedirect will replay the request with different parameters than
originally specified. The conditions necessary for this to occur are
passing follow=False to the original client.get and also passing 'extra'
parameters that will be interpreted as HTTP header's. Assert redirect
makes an assumption that it is possible to exactly recreate the original
request with the information that is available.

To properly recreate the the original request it would be necessary to
pass ALL method parameters AND all of the kwarg parameters that were
originally passed in. This would require storing the 'extras' in the
Client (django.test.client.py) so they could be acccessed in
assertRedrrects and properly replayed.

I believe this is the proper solution because it removes the assumptions
present when assertRedirect attempts to recreate the request. Although
this is a corner case, it is certainly acceptable for django users to
utilize the infinite space that is HTTP headers and provide varrying
logic depending on the values present. The downside of this
implementation is that it bloats the Client by requiring it to store the
extra parameters passed in. These extra parameters will rarely be used
but I believe the tradeoff of adding properties to Client and
potentially increasing memory footprint are small enough to warrant this
change.",patjenk,None,2017-08-18T00:22:13Z,2019-10-18T05:41:36Z
8930,Fixed #28577 -- Added checks for ArrayField and JSONField to prevent mutable defaults.,"https://code.djangoproject.com/ticket/28577

This PR includes a new system check inside ArrayField to prevent `default=[]`. More precisely, any `default` that's not callable.

[Django docs say](https://docs.djangoproject.com/en/1.11/ref/contrib/postgres/fields/#django.contrib.postgres.fields.ArrayField): ""Incorrectly using `default=[]` creates a mutable default that is shared between all instances of `ArrayField`""

This new check is another layer of protection against this subtle bug.

**If core developers are interested in more checks like this one, I'm willing to work on this. My idea is to go through the docs checking for warning words and try to implement checks to prevent the problems. Let me know!**",fjsj,None,2017-08-17T23:33:08Z,2018-03-08T16:26:16Z
8929,Fixed #28050 - Added template path to TemplateSyntaxError exception.,"Adjust template exception test to account for template path. 

Here's an example technical_500.html render with the duplication removed:

<img width=""1603"" alt=""template-syntax-error"" src=""https://user-images.githubusercontent.com/17954825/29437395-1fd4d8e8-8365-11e7-8d00-8acd200fb69b.png"">
Remove redundant template path and line number in technical_500.html.",rogeremasse,None,2017-08-17T23:00:46Z,2017-08-26T13:12:53Z
8928,[WIP] Refs #28477 --  Strip unused annotations from count queries,[Ticket](https://code.djangoproject.com/ticket/28477),orf,None,2017-08-17T22:22:00Z,2020-01-27T12:39:55Z
8927,Fixed #28082 -- Made BaseDateListView pass context from get_dated_items() to subclasses.,Thanks @leon-matthews for your started work. I just added proper tests.,ssassi,None,2017-08-17T22:04:47Z,2017-09-04T15:10:27Z
8926,Fixed #28493 -- Made migrations autodetector find dependencies for model renaming.,https://code.djangoproject.com/ticket/28493,jsatt,None,2017-08-17T21:42:22Z,2017-09-08T04:20:17Z
8925,Fixed #27515 -- Made AuthenticationForm's username field use the max_length from the model field.,"so that `max_length` respects the max length of the user model being used, rather than using a hardcoded value of 254.

Thanks Ramin Farajpour Cami for reporting.",RevolutionTech,None,2017-08-17T21:37:38Z,2017-10-20T15:34:09Z
8924,BigAutoField as new default in 2.0,"This pull request uses bigints (`BigAutoField`) as the new default for auto created primary keys in Django applications. 

- New applications will use `BigAutoField` by default, instead of `AutoField`. 
- `SmallAutoField` is introduced, and `AutoField` is aliased to it, for later deprecation. 
- Migration path is to warn about the expensive migration, and guide the user to hardcode their models to the new `SmallAutoField`, if desired (and to the release notes). 

Discussed at length with @andrewgodwin, and paired with him on this. 

Tests are all passing locally. ",ken-reitz,None,2017-08-17T21:26:48Z,2019-09-18T12:10:26Z
8923,Draft of #28005 -- Normalized usage of terms 'argument' and 'parameter' , Normalized usage of terms 'argument' and 'parameter' on docs,lachilles,None,2017-08-17T20:15:49Z,2017-10-13T22:58:56Z
8922,Fixed #28504 -- Refactored alter field method to add hooks and reduce complexity,This adds hooks into the alter field method so backends can override/augment the actions that occur for an alter field schema change. This also reduces the cyclomatic complexity of this method from 84 to 44.,rmtobin,None,2017-08-17T19:34:40Z,2018-03-14T21:28:44Z
8921,Removed unneeded iter() calls.,,sir-sigurd,None,2017-08-17T19:24:21Z,2017-08-24T02:14:54Z
8920,Fixed #28332 - Fixed example of multi-inheritence,https://code.djangoproject.com/ticket/28332,jsatt,None,2017-08-17T18:12:03Z,2017-09-02T21:37:40Z
8919,Serialize Enum migrations by name,#NAME?,dpatterson-aio,None,2017-08-17T16:39:41Z,2018-04-05T12:56:24Z
8918,Fixed typo in documented number of logging filters.,"Django provides: `CallbackFilter`, `RequireDebugFalse` and `RequireDebugTrue` --> three log filters",adrienbrunet,None,2017-08-17T16:09:22Z,2017-08-22T07:12:23Z
8917,"Removed useless hasattr(check, 'tags') in CheckRegistry.",It was needed only to pass tests because registered checks weren't properly mocked.,sir-sigurd,None,2017-08-17T14:48:45Z,2017-08-22T01:28:24Z
8916,Simplified usage of sets in MigrationAutodetector.,,sir-sigurd,None,2017-08-17T10:58:16Z,2017-08-22T20:28:08Z
8915,Removed unused reference in docs/ref/utils.txt.,Unused since f6acd1d271122d66de8061e75ae26137ddf02658.,sir-sigurd,None,2017-08-16T13:52:42Z,2017-08-16T17:46:27Z
8914,Fixed #28502 -- Made stringformat template filter accept tuples,https://code.djangoproject.com/ticket/28502,srinivasreddy,None,2017-08-16T12:28:56Z,2017-08-21T19:32:49Z
8913,Fixed #28498 -- Fixed test database creation with cx_Oracle 6.,https://code.djangoproject.com/ticket/28498,felixxm,None,2017-08-15T15:10:29Z,2017-08-21T11:13:14Z
8912,Simplified RelatedPopulator.populate().,,sir-sigurd,None,2017-08-15T11:04:09Z,2017-08-15T14:09:45Z
8911,Avoided creation of temporary set in Query.append_annotation_mask().,,sir-sigurd,None,2017-08-15T09:57:29Z,2017-08-15T14:09:29Z
8910,Simplified generation of result in Query.get_aggregation().,,sir-sigurd,None,2017-08-15T09:36:03Z,2017-08-15T14:10:30Z
8909,fix grammar in release note 2.0.txt,`be able run` to `be able to run`,darjeeling,None,2017-08-15T08:10:00Z,2017-08-15T13:41:49Z
8908,Fixed #28044 -- Unified the logic for createsupeuser's interactive and --noinput modes.,https://code.djangoproject.com/ticket/28044,dohvis,None,2017-08-15T08:06:22Z,2018-05-29T12:41:33Z
8907,Removed useless condition in QuerySet.resolve_expression().,,sir-sigurd,None,2017-08-15T06:22:36Z,2017-08-15T14:10:11Z
8906,Fixed #17985 -- Added documentation for ModelAdmin.lookup_allowed(),https://code.djangoproject.com/ticket/17985,DrMeers,None,2017-08-15T00:49:35Z,2017-09-02T18:10:06Z
8905,Fixed #28375 -- Fixed KeyError raised on reverse prefetch of a model with OneToOne primary key to non-pk field,https://code.djangoproject.com/ticket/28375,czpython,None,2017-08-14T21:29:50Z,2017-08-21T21:33:08Z
8904,Fixed #17985 -- documented the ModelAdmin.lookup_allowed method.,"-- dependent on patch for #22569, which in turn is dependent on #28496",DrMeers,None,2017-08-14T12:03:09Z,2017-08-22T18:20:30Z
8903,Fixed #28496 -- Added ModelAdmin.get_changelist_instance().,,DrMeers,None,2017-08-14T10:54:31Z,2017-08-22T12:38:46Z
8902,Fixed #28495 -- Converted GDAL Feature.fields to strings,,claudep,None,2017-08-14T09:34:10Z,2017-08-15T17:32:42Z
8901,Fixed #27931 -- Add explanation for clarifing  meaning of django catch-all logger,"https://code.djangoproject.com/ticket/27931
",dohvis,None,2017-08-14T06:32:23Z,2017-08-23T02:41:29Z
8900,Clarified Concat example in docs.,"Fixed example in documentation:
- Use TextField instead of CharField as it's stated above it should be,
- Readjusted indentation to make clearer the output_field is argument to Concat() and not annotate()
- Use [] instead of () in Values to make it a bit easier to read with less brackets all over the place",mhindery,None,2017-08-13T13:26:40Z,2017-08-14T18:57:51Z
8899,[1.11.x] Fixed #28451 -- Fixed regression in Oracle sequence naming,"Backport of 99c7a18f4edf84d3b2bbddd3dfc7c3287bc8fa23 from master,
with additional migration script & release notes.",kgrinberg,None,2017-08-13T06:25:15Z,2017-08-22T21:41:26Z
8898,Fixed #28451 -- Restored pre-Django 1.11 Oracle sequence/trigger naming.,"Fixed regression introduced in 69b7d4b1 (#27458) that broke sequence
and trigger name generation (relevant when use_returning_into=False).",kgrinberg,None,2017-08-13T06:24:04Z,2017-08-22T20:09:42Z
8897,Fixed #28490 -- Allow model descriptors that return None in ModelAdmin,"Fixes https://code.djangoproject.com/ticket/28490, which contains a more in-depth description of the issue and the fix.

Allows Descriptors that sometimes return `None` that are model attributes to be referenced in a ModelAdmin's `list_display`.",hrichards,None,2017-08-13T04:55:46Z,2017-10-03T21:09:37Z
8896,Corrected YearComparisonLookup.get_bound() signature.,,srinivasreddy,None,2017-08-12T16:36:28Z,2017-09-04T15:13:10Z
8895,Fixed #23546 -- Added kwargs support for CursorWrapper.callproc() on Oracle.,https://code.djangoproject.com/ticket/23546,felixxm,None,2017-08-12T13:16:08Z,2017-08-12T19:08:30Z
8894,Update README.rst,test cases,1786078681,None,2017-08-11T17:37:29Z,2017-08-11T17:45:50Z
8893,Fixed #28252 -- Doc'd default file extensions for makemessages,https://code.djangoproject.com/ticket/28252,joncasdam,None,2017-08-11T15:05:02Z,2017-08-11T19:22:11Z
8892,Removed outdated comment in Query.build_filter().,,sir-sigurd,None,2017-08-11T11:03:24Z,2017-08-11T13:24:15Z
8891,Simplified calculation of used joins in Query.build_filter().,,sir-sigurd,None,2017-08-11T10:53:02Z,2017-08-11T14:47:40Z
8890,Removed uneeded DecimalComparisonLookup.,Uneeded since c3c6c92d769d44a98299c462c48a9599c0172e91.,sir-sigurd,None,2017-08-11T07:58:40Z,2017-08-11T13:46:16Z
8889,Replaced typecast_decimal() with decimal.Decimal().,,sir-sigurd,None,2017-08-11T06:22:23Z,2017-08-11T13:24:25Z
8888,"Hide ""delete_selected"" action from actions if has_delete_permission is False","Hi, guys!

Today I found some little problem in django admin.

I have model:
```Python
class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date published')
```
And I have admin-class:
```Python
class QuestionAdmin(admin.ModelAdmin):
    def has_delete_permission(self, request, obj=None):
        return False
```

If I open any object `Question` I don't see button ""Delete"".

But if I open list with objects `Question` in: http://localhost:8000/admin/polls/question/
I see group actions select with item ""Delete selected questions""...

If I select some `Question` objects, select item ""Delete selected questions"" in group actions and click ""Go"" I see page with this message:
`403 Forbidden`

I think this is not good - why we give opportunity for select group action if we don't have permissions for this action?!

This PR about this.",itcrab,None,2017-08-10T19:51:37Z,2017-08-11T22:22:36Z
8887,Fixed #23766 - Doc'd CursorWrapper.callproc().,https://code.djangoproject.com/ticket/23766,felixxm,None,2017-08-10T19:08:11Z,2017-08-10T20:24:56Z
8885,Make consistent the @cached_property code sample,Small improvement for the documentation!,bryanhelmig,None,2017-08-10T15:54:42Z,2017-08-14T16:01:44Z
8884,Fixed #27855 -- Updated docs for Python 3.4 support in Django 2.0.,https://code.djangoproject.com/ticket/27855,timgraham,None,2017-08-10T13:30:05Z,2017-08-11T15:18:41Z
8883,Fixed #28421 -- Split some long FormSet tests and made other cosmetic cleanups.,Do you think I should split all the tests like this?,Windsooon,None,2017-08-10T09:46:14Z,2017-08-11T22:14:15Z
8882,Refs #28459 -- Made Oracle get_db_converters() return converter for empty strings only when it's needed.,"https://code.djangoproject.com/ticket/28459

Before:
```
In [4]: %timeit for x in Test.objects.values_list('id'): pass
82.4 ms ± 995 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [2]: %timeit for x in Test.objects.values_list('id'): pass
48.9 ms ± 1.21 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-10T08:26:34Z,2017-08-10T15:29:02Z
8881,Refs #18247 -- Fixed filtering on CombinedExpression(output_field=DecimalField()) annotation on SQLite.,,sir-sigurd,None,2017-08-10T06:50:06Z,2017-08-11T02:52:51Z
8880,Fixed #28485 -- Made ExceptionReporter.get_traceback_frames() include frames without source code.,"https://code.djangoproject.com/ticket/28485

So far we are silently dropping any stack frames that don't offer access to source code snippets, for whatever reason.  Actually having these frames included would be valuable, since they may still contain function names, file names and line numbers.",gagern,None,2017-08-10T01:14:41Z,2017-08-13T00:56:32Z
8879,Refs #4518 -- Removed handling of empty strings in typecast_decimal().,"Reverts 6fc10f50b0c9b877fffcad4893056cb91fa66b4f.
It's not clear if the original change was ever needed, but it seems unneeded now.",sir-sigurd,None,2017-08-09T19:26:08Z,2017-08-10T04:29:48Z
8878,Refs #28459 -- Improved performance of loading DecimalField on SQLite.,"https://code.djangoproject.com/ticket/28459

Before:
```
In [5]: %timeit for x in Test.objects.values_list('decimal'): pass
150 ms ± 1.76 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [6]: %timeit for x in Test.objects.values_list(models.F('decimal') + 1): pass
123 ms ± 1.08 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [2]: %timeit for x in Test.objects.values_list('decimal'): pass
28.8 ms ± 1.05 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [3]: %timeit for x in Test.objects.values_list(models.F('decimal') + 1): pass
84.6 ms ± 541 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-09T18:24:07Z,2017-08-10T19:36:59Z
8877,Simplified Float/DecimalField.validate() with math.isfinite().,,srinivasreddy,None,2017-08-09T17:22:33Z,2017-08-10T03:46:13Z
8876,Simplified SQLite converter for bool type.,,sir-sigurd,None,2017-08-09T16:13:14Z,2017-08-10T04:29:45Z
8875,Fix argument name in call_command docstring,"In `django.core.management.call_command`, the docstring says «`name` may be a string or a command object.» but the argument name is actually `command_name`.",borfast,None,2017-08-09T14:48:25Z,2017-08-11T18:41:10Z
8874,Fixed typo in docs/releases/2.0.txt.,"fast_update -> fastupdate

Docs: https://github.com/django/django/blob/831358f23d545b8dba017c6b26bd295ba9f6c17d/django/contrib/postgres/indexes.py#L37",lancelote,None,2017-08-09T12:43:48Z,2017-08-09T18:48:37Z
8873,Fixed #28479 -- Doc'd that transactions doesn't revert model state,"Unless it is manually reverted, model will remain in a inconsistent state whenever a transaction rollback happens.

https://code.djangoproject.com/ticket/28479",joncasdam,None,2017-08-09T10:14:31Z,2017-09-04T19:43:29Z
8872,Fixed #28492 -- Allowed defining expressions' default output_field as a class attribute.,https://code.djangoproject.com/ticket/28492,charettes,None,2017-08-08T17:53:40Z,2017-09-11T17:56:12Z
8871,Refs #28459 -- Improved performance of sql.compiler.cursor_iter().,"https://code.djangoproject.com/ticket/28459

Before:
```
In [6]: %timeit for x in City.objects.values_list('id'): pass
67.2 ms ± 1.03 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [6]: %timeit for x in City.objects.values_list('id'): pass
58 ms ± 580 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-08T15:54:48Z,2017-08-08T18:08:28Z
8870,Fixed #28474 -- Made DurationField raise ValidationError for inputs that raised OverflowError.,https://code.djangoproject.com/ticket/28474,srinivasreddy,None,2017-08-08T15:03:04Z,2017-10-26T01:44:58Z
8869,Stable/1.11.x,稳定的,chengjin888,None,2017-08-08T13:55:18Z,2017-08-08T13:59:02Z
8868,"Refs #7070 -- Improved test for extra(), values(), distinct() and ordering() altogether.","Tested that extra select that appears in select clause only because of distinct() and
order_by() doesn't appear in result values.

This assures that slicing is performed here: https://github.com/django/django/blob/master/django/db/models/sql/compiler.py#L1397.

",sir-sigurd,None,2017-08-08T13:00:53Z,2017-08-08T18:40:37Z
8867,Refs #28459 -- Improved performance of ValuesIterable.,"https://code.djangoproject.com/ticket/28459

Before:
```
In [6]: %timeit -n 10 for x in City.objects.values('id', 'b'): pass
212 ms ± 4.3 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [5]: %timeit for x in City.objects.values('id', 'b'): pass
151 ms ± 850 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-08T06:11:44Z,2017-08-08T13:07:51Z
8866,test pr,just test pr,kommmy,None,2017-08-08T03:21:54Z,2017-08-08T03:56:54Z
8865,Added missing final newline in faq/index.txt,"This is the only non > 79 characters problem (`D001`) that `doc8` reported.

There are quite a lot of those `D001` warnings, otherwise I'd be tempted to suggest introducing `doc8` in the test suite.",atombrella,None,2017-08-07T21:27:40Z,2017-08-08T07:45:29Z
8864,Refs #23766 -- Added tests for CursorWrapper.callproc().,https://code.djangoproject.com/ticket/23766,felixxm,None,2017-08-07T20:09:10Z,2017-08-08T20:13:50Z
8863,Fixed #28471 -- Clarified that Meta.indexes is preferred to index_together.,https://code.djangoproject.com/ticket/28471,abhilashr1,None,2017-08-07T20:00:33Z,2017-08-08T13:48:35Z
8862,Remove unnecessary else clause in SelectDateWidget.id_for_label().,,srinivasreddy,None,2017-08-07T18:09:27Z,2017-08-08T12:20:34Z
8861,Fixed #28472 -- Optimized jQuery selector in actions.js,"Refactored a selector in jQuery to use a single handler for the
'on change' event. This speeds up page loading time.",bc500,None,2017-08-07T14:53:34Z,2017-08-08T12:58:18Z
8860,Removed unnecessary else clause in TemplateStrings.get_template().,,srinivasreddy,None,2017-08-07T07:04:17Z,2017-08-07T16:40:21Z
8859,Removed unnecessary assignment in FormatStylePlaceholderCursor._fix_for_params().,Obsolete since fae56427e1987ff8c8bd24d6331007f9c53e7abc.,srinivasreddy,None,2017-08-07T06:54:36Z,2017-08-07T14:15:22Z
8858,Fixed #8408 -- Allowed disabling count query on admin changelist.,,bettsmatt,None,2017-08-07T04:49:57Z,2019-06-12T13:40:04Z
8857,Refs #28470 instructions for installing prerequisite memcache bindings,https://code.djangoproject.com/ticket/28470,jnp1961,None,2017-08-07T03:14:37Z,2017-08-11T21:02:48Z
8856,Fixed #22569 -- Allowed ModelAdmin.lookup_allowed() to respect get_list_filter().,https://code.djangoproject.com/ticket/22569,DrMeers,None,2017-08-07T03:04:19Z,2018-06-30T10:20:24Z
8855,[WIP] Fixed #28469 -- Added missing HttpResponse subclasses,[ticket](https://code.djangoproject.com/ticket/28469),adamchainz,None,2017-08-06T20:56:01Z,2020-07-20T10:19:42Z
8854,Refs #28459 -- Improved performance of BaseExpression.convert_value().,"https://code.djangoproject.com/ticket/28459

Before:
```
In [2]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values_list('v'): pass
262 ms ± 3.42 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
In [3]: %timeit for x in City.objects.annotate(v=models.Value('1', output_field=models.TextField())).values_list('v'): pass
243 ms ± 3.77 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```
After:
```
In [2]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values_list('v'): pass
191 ms ± 2.08 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
In [3]: %timeit for x in City.objects.annotate(v=models.Value('1', output_field=models.TextField())).values_list('v'): pass
65.6 ms ± 878 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-05T18:54:32Z,2018-04-13T15:23:55Z
8853,Refs #18392 -- Changed default MySQL connection charset to utf8mb4,,claudep,None,2017-08-05T13:55:10Z,2018-07-24T08:33:34Z
8852,Fixed #15648 -- Allowed QuerySet.values_list() to return a namedtuple.,"https://code.djangoproject.com/ticket/15648

I'm not sure if there is consensus on API, but I decided to push it forward.
I'm not sure also if the current way of naming expressions is OK and if should support expressions with `named=True` at all.",sir-sigurd,None,2017-08-04T11:49:00Z,2017-09-07T01:13:11Z
8851,Refs #28459 -- Optimized ModelState instantiation.,"https://code.djangoproject.com/ticket/28459

Before:
```
In [5]: %timeit PersonSkill()
8.9 µs ± 13 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
In [2]: %timeit for x in PersonSkill.objects.all(): pass
83 ms ± 628 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
# skill is None for all objects
In [13]: %timeit for x in PersonSkill.objects.select_related('skill'): pass
111 ms ± 446 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
# skill is not None for all objects
In [10]: %timeit for x in PersonSkill.objects.select_related('skill'): pass
187 ms ± 735 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```

After:
```
In [18]: %timeit PersonSkill()
8.54 µs ± 23.8 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
In [10]: %timeit for x in PersonSkill.objects.all(): pass
75.1 ms ± 825 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
# skill is None for all objects
In [5]: %timeit for x in PersonSkill.objects.select_related('skill'): pass
108 ms ± 342 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
# skill is not None for all objects
In [7]: %timeit for x in PersonSkill.objects.select_related('skill'): pass
178 ms ± 817 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-04T06:26:43Z,2017-08-12T00:52:28Z
8850,Fixed #28465 -- Unified index SQL creation in DatabaseSchemaEditor,https://code.djangoproject.com/ticket/28465,claudep,None,2017-08-03T21:38:12Z,2017-08-08T15:39:34Z
8849,Refs #28459 -- Improved performance of SQLCompiler.results_iter().,"https://code.djangoproject.com/ticket/28459

Before:
```
In [3]: %timeit for x in City.objects.values_list('id'): pass
74 ms ± 1.45 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [2]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values_list('v'): pass
343 ms ± 2.62 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```
After:
```
In [4]: %timeit for x in City.objects.values_list('id'): pass
69.1 ms ± 744 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [3]: %timeit for x in City.objects.annotate(v=models.Value(1, output_field=models.IntegerField())).values_list('v'): pass
264 ms ± 3.26 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```",sir-sigurd,None,2017-08-03T19:19:42Z,2017-08-08T04:11:33Z
8847,Removed unused _combine() node argument from various combinable classes.,Unused since f59fd15c4928caf3dfcbd50f6ab47be409a43b01 (`Combinable`) and since its introduction in 2d877da85526bad0dad7fd6b1d56b1f924c0116a (`SearchVectorCombinable` / `SearchQueryCombinable` / `SearchQuery`).,felixxm,None,2017-08-02T20:14:27Z,2017-08-03T11:24:43Z
8846,Fixed #28461 -- Allowed createsuperuser to work with a ForeignKey in REQUIRED_FIELDS.,https://code.djangoproject.com/ticket/28461,ookami-kb,None,2017-08-02T19:24:14Z,2017-08-03T12:26:00Z
8845,Refs #28459 -- Improved performance of select_related() when model is prefetched from its parent.,"https://code.djangoproject.com/ticket/28459

Before:
```
In [2]: %timeit for x in Human.objects.select_related('person'): pass
196 ms ± 2.05 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```

After:
```
In [2]: %timeit for x in Human.objects.select_related('person'): pass
186 ms ± 1.59 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",sir-sigurd,None,2017-08-02T07:42:31Z,2017-08-08T04:11:29Z
8844,Simplified check that pk is fetched in RawQuerySet.__iter__().,,sir-sigurd,None,2017-08-01T21:07:17Z,2017-08-02T13:17:32Z
8843,Refs #28459 -- Improved performance of Model.from_db() when fields are deferred.,"Before:
```
In [3]: %timeit for x in City.objects.only('id'): pass               
1.07 s ± 10.1 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```
After:
```
In [2]: %timeit for x in City.objects.only('id'): pass
961 ms ± 5.68 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
```

@timgraham, probably I'll create few more PRs to improve QuerySet performance, so I'm not sure if I should create ticket for the each one or shoud I rename [#28459](https://code.djangoproject.com/ticket/28459) to be more general and reference it.",sir-sigurd,None,2017-08-01T20:33:06Z,2017-08-02T13:17:47Z
8842,Removed unused DatabaseOperations.last_insert_id() on PostgreSQL.,Unused since 9eb2afddfa0165d69f3e506122c2aa2b68618591.,felixxm,None,2017-08-01T19:20:32Z,2017-08-02T06:33:14Z
8841,[1.11.x] Fixed #28441 -- Fixed GEOS version parsing with a commit hash at the end.,Less invasive than https://github.com/django/django/pull/8817 so as to minimize the chance of a problem on a stable branch.,timgraham,None,2017-08-01T19:17:26Z,2017-08-31T16:43:11Z
8840,Fixed #28454 -- Simplify use of Query.setup_joins() by returning a named tuple,"Define a namedtuple to represent the output of the setup_joins
function, then change uses of this function to use the names
declared in the tuple rather than unpacking all values into
local variables.

This has the side effect of making variable names more consistent
throughout the ORM, especially ``field`` vs ``final_field``. It also
changes the behaviour of the ``_setup_joins()`` private function
to return a tuple of the result of ``Query.setup_joins()`` and
the alias to be used.",MatthewWilkes,None,2017-08-01T14:44:09Z,2017-08-01T18:44:11Z
8839,Refs #7697 -- Tested escaping of safe strings in the technical 500 debug view.,"Tests were omitted in the original commit: a56a226241f5808b2eaf1e4b5a155d35047b8a06
https://code.djangoproject.com/ticket/7697",timgraham,None,2017-08-01T14:30:19Z,2017-08-02T19:57:01Z
8838,Added hint to runtest's parallel option for pdb.,[ci skip],blueyed,None,2017-08-01T13:51:34Z,2017-08-01T19:27:17Z
8837,"Fixed #28462 -- Changed admin ""POSTed bulk-edit data"" to use ChangeList qs.","This was changed in 917cc288a3 to use the model admin queryset, instead
of the ChangeList's `result_list`, but it seems to be more appropriate
to use the ChangeList's queryset here instead, like it is done in
`changelist_view` in general.",blueyed,None,2017-08-01T11:03:00Z,2018-01-05T19:08:32Z
8836,Refs #28370 -- Moved out deprecation warning out of loop as it gravely worsen performance.,,sir-sigurd,None,2017-08-01T10:15:34Z,2017-08-01T14:27:37Z
8835,Fixed #28459 -- Improved performance of ValuesListIterable.,"Before:
```
In [2]: %timeit for x in City.objects.values_list('id'): pass
106 ms ± 2.88 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [3]: %timeit for x in City.objects.values_list('id', 'id'): pass
124 ms ± 846 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
After:
```
In [2]: %timeit for x in City.objects.values_list('id'): pass
77.7 ms ± 1.49 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
In [3]: %timeit for x in City.objects.values_list('id', 'id'): pass
95.9 ms ± 1.71 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```
https://code.djangoproject.com/ticket/28459",sir-sigurd,None,2017-08-01T08:18:01Z,2017-08-01T19:31:49Z
8834,Refs #5046 -- Tested the 'unicode hint' in the technical 500 debug view.,https://code.djangoproject.com/ticket/5046#comment:8,timgraham,None,2017-07-31T22:33:57Z,2017-08-02T19:33:45Z
8833,Fixed #28456 -- Allowed customizing Model pickling by overriding __getstate__().,https://code.djangoproject.com/ticket/28456,Nerlin,None,2017-07-31T22:04:12Z,2017-08-11T19:27:26Z
8832,Removed unneeded usage of escape filter in templates.,|escape has no effect when autoescaping is enabled.,timgraham,None,2017-07-31T21:59:49Z,2017-08-01T14:52:37Z
8831,Fixed #27985 -- Fixed query generated for __exact=value when get_prep_value() converts value to None.,https://code.djangoproject.com/ticket/27985,sir-sigurd,None,2017-07-31T18:31:57Z,2017-08-01T04:10:19Z
8830,Removed unneeded TruncBase.arity.,Uneeded since its introduction in 2a4af0ea43512370764303d35bc5309f8abce666.,sir-sigurd,None,2017-07-31T08:48:34Z,2017-07-31T14:26:48Z
8829,Update deprecation.txt,,gam-phon,None,2017-07-31T07:22:17Z,2017-07-31T09:14:07Z
8828,Avoided creation of temporary lists for obtaining first item.,,sir-sigurd,None,2017-07-30T23:02:49Z,2017-07-31T15:04:44Z
8827,Fixed #28453 -- Made __exact=None lookup use transforms.,https://code.djangoproject.com/ticket/28453,sir-sigurd,None,2017-07-30T20:03:41Z,2017-07-31T17:51:01Z
8826,Fixed #28456 - Using __getstate__ in Model.__reduce__,"Current `Model.__reduce__` implementation does not allow developer to specify what model attributes should not be pickled. Even if developer override `__reduce__` method and delete some keys from `__dict__` before completing `Model.__reduce__`, restoring values back to `__dict__` leads to restoring them to data that would be pickled, because `Model.__reduce__` method is currently using original `__dict__` object instead of its copy.

```python
class MyModel(Model):
    def __init__(self, *args, **kwargs):
        self.service_obj = UnpickleableService()  # some service that shouldn't be pickled, just for example
        super().__init__(*args, **kwargs)

    def __reduce__(self):
        service_obj = self.__dict__.pop(""service_obj"")
        reduce = super().__reduce__()
        # we must return service_obj to __dict__ for using in other methods
        self.__dict__['service_obj'] = service_obj
        # this obj now added to results of __reduce__ method too
        return reduce
```

The other way may be copying data from derived class after `__reduce__` call and then delete unnecessary keys but if we have several mixins used in model that can add such attributes then each mixin must specify that his special attributes must not be pickled and all they will copy data. That's too difficult and even leads to execution slowdown. 

[Pickle docs](https://docs.python.org/3/library/pickle.html#pickling-class-instances) says that `__getstate__` method can be introduced for determining how object must be pickled. At the moment defining `__getstate__` in derived class is not affecting results of `Model.__reduce__` at all what differs from what said in pickle docs. So, we can create base implementation of that method in `Model` class that will return copy of current model data in `__dict__` attr, so now other developers can override this method and specify what must be pickled and what must not.

For example, we have model with some inner logic that adds model attribute that cannot be pickled:
```python
class MyModel(Model):
    def __init__(self, *args, **kwargs):
        self.service_obj = UnpickleableService()
        super().__init__(*args, **kwargs)
```

With current implementation we can't *simply* define that attribute `service_obj` shouldn't be pickled. With new implementation we can override `__getstate__` method and delete 'service_obj' key from data that returned from super method:

```python
class MyModel(Model):
    def __init__(self, *args, **kwargs):
        self.service_obj = UnpickleableService()
        super().__init__(*args, **kwargs)
   
    def __getstate__(self):
        data = super().__getstate__()
        del data['service_obj']
        return data
```
",Nerlin,None,2017-07-30T14:58:04Z,2017-07-31T22:07:25Z
8825,Refs 23919 -- Add maxsize=None to lru_cache calls,"Part of the Python 3 cleanup. Any function with no arguments that's decorated with `lru_cache` should have `maxsize` set to `None`. This is because without it every call requires the acquisition of a lock and more memory. On my machine calls with `maxsize=None` are over twice as fast than calls with no `maxsize` set.

I also noticed that `parse_accept_lang_header` in `trans_real.py` would be good candidate for an `lru_cache`, as long as it could be converted to return a tuple rather than a mutable list.",orf,None,2017-07-29T23:55:09Z,2018-08-09T23:21:25Z
8824,Avoided creation of temporary sets.,,sir-sigurd,None,2017-07-28T22:26:26Z,2017-07-30T13:17:54Z
8823,Fixed #28457 -- Updated the design of the 'Congrats' page for first time Django installs.,Developed by Timothy Allen and Chad Whitman of The Wharton School with shepherding from Aymeric Augustin and Collin Anderson.,FlipperPA,None,2017-07-28T20:16:30Z,2017-08-07T21:56:45Z
8822,remove python2 specific code,"This code does not harm, but why keep the maintenance burden?",srinivasreddy,None,2017-07-28T17:58:50Z,2017-07-28T18:13:19Z
8821,remove lru_cache module,"We are not supporting Python 2 anymore, why keep this module?

",srinivasreddy,None,2017-07-28T17:46:13Z,2017-07-28T18:16:32Z
8820,Fixed #28440 -- Disabled keep-alive in runserver.,"[Ticket](https://code.djangoproject.com/ticket/28440)

If you use the built in http.server module and don't send a `content-length` in your response and use `connection: keep-alive` then the server will hang until the client times out.

This MR disables the keep-alive functionality. A better fix might be to detect these conditions and close the connection only if required, but I'm not sure how to do this correctly.

Edit: I think I've found a way...",orf,None,2017-07-28T14:29:46Z,2018-08-09T23:21:19Z
8819,Fixed #27685 -- Added watchman support to the autoreloader.,"[Ticket](https://code.djangoproject.com/ticket/27685)

The ticket is about adding support for watchman to the autoreloader, but a lot of Aymeric's points rang true - especially about a complete rewrite rather than a bit-by-bit refactor. There are a few other related tickets to do with the autoreloader that would require some re-engineering before they could be got right.

This MR does a big cleanup of the autoreloader code, which ends up to be half the size, be (i hope) a lot less hairy and have some interesting features. 

Firstly, it implements two signals (`autoreload_started` and `file_changed`) that allow other parts of Django and perhaps even third party apps to customize what files are watched and offer custom handing when a file is changed. This is used to implement the `i18n` translations reset code, which currently lives in the autoreload code (and IMO really should not). Users of the signal are given the auto-reload instance which has a `watch` method, which accepts a `glob` argument, e.g:

`autoreloader.watch('some_directory/', '**/*.html')`

Secondly the autoreload code is split into two classes, a `BaseReloader` and a concrete `StatReloader`. In the future this can be used to add support for watchman or any other algorithm for detecting changes - it just needs to implement a `yield_changes` function that yields the paths of files that have changed.

It also changes the behaviour slightly: the current implementation replaces `.pyc` files with `.py`, but I'm not sure this is still valid. It assumes that `.py` files live next to `.pyc` files, which in Python 3 and `__pycache__` directories may not be true. So I removed the code that handled that, as well as Jython-specific stuff.

It doesn't currently include support for catching SyntaxErrors, which I kept out in case anyone had a good idea of how to do a clean implementation of it. The current code (to quote Aymeric) is 'horrific'. It also doesn't include the `ensure_echo_on` code, which was a ticket that was added a long time ago. It has no tests and perhaps it's not required any more?",orf,None,2017-07-27T20:13:50Z,2019-02-05T10:40:00Z
8818,Prevented query_utils.refs_expression() from looking for empty string in annotations map.,,sir-sigurd,None,2017-07-27T18:36:33Z,2017-07-28T13:15:04Z
8817,Fixed #28441 -- Fixed GEOS version parsing with a commit hash at the end.,https://code.djangoproject.com/ticket/28441,timgraham,None,2017-07-27T17:55:30Z,2017-08-02T13:47:34Z
8816,Allowed database backends to specify data types for Cast().,See [comment](https://github.com/django/django/pull/8758#discussion_r129144614).,felixxm,None,2017-07-26T16:36:17Z,2017-07-27T12:42:56Z
8815,Removed unused SpatialOperations.from_wkb.,Unused since its introduction in ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8.,timgraham,None,2017-07-26T13:24:10Z,2017-07-27T00:03:47Z
8814,Used != operator in writing-migrations.txt,,berkerpeksag,None,2017-07-26T12:54:14Z,2017-07-26T14:55:29Z
8813,Fixed #28437 -- Added support of complex geometry expressions in GIS lookups.,https://code.djangoproject.com/ticket/28437,sir-sigurd,None,2017-07-26T11:41:24Z,2017-07-27T12:28:14Z
8812,Fixed #28436 -- Added support for distance lookups on MySQL.,https://code.djangoproject.com/ticket/28436,sir-sigurd,None,2017-07-26T07:54:02Z,2017-07-26T17:07:10Z
8811,Fixed #23242 -- Added ModelAdmin.approximate_date_hierarchy.,"Updated from https://github.com/django/django/pull/5213
https://code.djangoproject.com/ticket/23242",AlexProfi,None,2017-07-25T22:15:07Z,2017-08-10T19:40:05Z
8810,Fixed #23242 -- Added ModelAdmin.approximate_date_hierarchy.,"Hello its duplicate of https://github.com/django/django/pull/5213/files

It's very useful thing to faster view change list with date hierarchy control for large databases",AlexProfi,None,2017-07-25T21:14:25Z,2017-07-25T22:43:12Z
8809,fix #28421 delete extra tests,"I think 
https://github.com/django/django/blob/master/tests/forms_tests/tests/test_formsets.py#L220
already test this output.",Windsooon,None,2017-07-25T10:19:27Z,2017-08-09T15:35:15Z
8808,Fixed #28433 -- Made GEOSGeometry.__eq__() work correctly with non-canonical EWKT string.,https://code.djangoproject.com/ticket/28433,sir-sigurd,None,2017-07-25T09:15:29Z,2017-07-26T17:07:06Z
8807,Removed references to add_to_query().,Its support was removed in d3f00bd5706b35961390d3814dd7e322ead3a9a3.,sir-sigurd,None,2017-07-25T07:41:19Z,2017-07-25T17:35:51Z
8806,Fixed #28358 -- Added LazyObject.__getattribute__() to mimic better the wrapped.,https://code.djangoproject.com/ticket/28358,sir-sigurd,None,2017-07-25T07:04:06Z,2020-03-25T10:14:17Z
8805,Stable/1.11.x,,lijian7,None,2017-07-25T06:44:03Z,2017-07-25T06:45:46Z
8804,Refs #28413 -- Doc'd that the ROOT_URLCONF can't be namespaced.,,timgraham,None,2017-07-24T22:38:01Z,2017-07-25T21:35:22Z
8803,Fixed #27994 -- Documented ManifestFilesMixin.,https://code.djangoproject.com/ticket/27994,theodesp,None,2017-07-24T22:08:07Z,2018-11-01T15:15:14Z
8802, Fixed #28432 -- Made GIS distance lookups use Distance function to decrease code redundancy.,https://code.djangoproject.com/ticket/28432,sir-sigurd,None,2017-07-24T10:38:06Z,2017-07-25T21:06:54Z
8801,Fixed #28385 -- Avoided ignoring natural keys when primary key has a default value.,"## Ticket

https://code.djangoproject.com/ticket/28385

## Bug space

When a models primary key has default set, and a fixture is loaded that does not have a pk attribute, then the serialisation code will refuse to update the existing instance and instead try to create a new record in the db.

When the primary key attribute has a default value - such as models using UUID primary keys - the model will fill the pk attribute with that at instantiation time, and the check in build_instance will see that default value and refuse to goto the database to fetch the existing instance.

This is against the expectations set in the docs, that when the model/manager implement the natural keys interfaces and the primary key is omitted, the framework will update the existing instance when deserialising.

(c) reporter Daniel Knell

## How to reproduce

1. Create the same model like [there](https://github.com/django/django/pull/8801/files#diff-2cf99154fd579c9e2d2ee0945f90ef4bR26).

2. Make `loaddata` fixtures flow like [there](https://github.com/django/django/pull/8801/files#diff-79e3f82c439838acf1377e2ec7e1342bR79).

We expect, that if `loaddata` dictionary has no `pk`, it will get object by `natural key` and update object, but it raises:

```
django.db.utils.IntegrityError: Problem installing fixture 'filename.json': 
Could not load app.Model(pk=<pk_number>): UNIQUE constraint failed: app_model.some_field
```
## Why it happens 

1. [Deserializer](https://github.com/django/django/blob/master/django/core/serializers/python.py#L98) flow does not provide `pk` for objects without it.
2. `Deserializer` try to get `pk` from `natural_key` in [build_instance](https://github.com/django/django/blob/master/django/core/serializers/base.py#L215) method.
3. But this method create new model object with default `pk` before implement point `2` [there](https://github.com/django/django/blob/master/django/core/serializers/base.py#L222).

Again: when model is created, we can get `pk` of this model (because `pk` has default value).
Question: how we can get model's `pk` by `natural key` from model without `pk`, if we create one instance before with default `pk`?

## Solution

I got `build_instance` logic and move it to previous level within [Deserializer](https://github.com/DmytryiStriletskyi/django/blob/8d2564a2805f2ebe48a9e5194b5c678f016f4e59/django/core/serializers/python.py#L79) to suitable place.

If it seems okay, we can go ahead and rewrite logic for [that](https://github.com/django/django/blob/d0f59054d0c4b2291a4e0e94ec00537f98a4ab50/django/core/serializers/xml_serializer.py#L213). Also, we can change `build_instance` logic for this two cases instead of touch serializers flow. 

It was not possible to use `TDD`. May add tests in last commit.
Thank you for paying attention.",dmytrostriletskyi,None,2017-07-23T22:38:36Z,2018-07-27T21:17:56Z
8800,Refs #24996 -- Removed unused BaseDatabaseFeatures.supports_select_related.,Unused since 0c7633178fa9410f102e4708cef979b873bccb76.,felixxm,None,2017-07-23T11:23:45Z,2017-07-24T20:07:15Z
8799,Fixed #28420 -- Doc'd 'is' comparison restrictions for User.is_authenticated/anonymous.,"Added a note to the `django.contrib.auth` documentation to notify users
that `is` comparisons on CallableBool are not allowed. Note was added
to the `is_authenticated` property, as the section for `is_anonymous`
already recommends using `is_authenticated`.",GeoTob,None,2017-07-22T20:51:42Z,2017-07-24T17:45:25Z
8798,Fixed DatabaseFeatures.has_case_insensitive_like on MySQL and Oracle.,Incorrect since its introduction in 20bab2cf9d02a5c6477d8aac066a635986e0d3f3.,felixxm,None,2017-07-22T19:04:12Z,2017-07-24T20:05:32Z
8797,Ref #23919 -- Replaced some os.path usages with pathlib.Path.,"This continues cleaning up some `os.path` usages. I believe none of these changes break any public API's.

[Ticket](https://code.djangoproject.com/ticket/23919)",orf,None,2017-07-21T20:34:30Z,2018-04-20T08:15:53Z
8796,Improved test coverage for django.apps.,Separated this commit from #8126,desecho,None,2017-07-21T13:48:28Z,2017-07-24T14:49:26Z
8795,Refs #23919 -- Use Pathlib in the compress contrib.admin script.,"Re [23919](https://code.djangoproject.com/ticket/23919), this is a small cleanup to use `pathlib` over `os.path` functions in the compress bin script.",orf,None,2017-07-21T12:36:40Z,2017-07-22T11:22:47Z
8794,Rearranged PR #8227 -- Added missing tests in models.py.,"As discussed in PR #8227, these additions are proposed test additions in models.py.",gsilvapt,None,2017-07-21T01:45:13Z,2017-07-21T10:24:34Z
8793,Don't rely on the order of dictionary iteration within Func.__repr__,"Ref #8759

As per [this comment](https://github.com/django/django/pull/8352#discussion_r128457812), I cannot add tests for the new `filter` argument as the order of the values returned is not always going to be the same.

This MR just sorts by the key for simplicity.",orf,None,2017-07-20T20:11:34Z,2017-07-21T10:37:40Z
8792,Fixed #28418 -- Fixed queryset crash when using a GenericRelation to a proxy model.,"Fixes [#28418](https://code.djangoproject.com/ticket/28418). When building a join path for a field, use the concrete model defined for the field so proxy models do not incorrectly cause an ancestor lookup.",rmtobin,None,2017-07-20T18:16:41Z,2017-07-21T22:21:14Z
8791,Added BaseSpatialField.get_db_prep_value() to simplify.,`BaseSpatialField.get_db_prep_value()` supersedes `BaseSpatialField.get_db_prep_save()` and `Geometry.get_db_prep_value()`.,sir-sigurd,None,2017-07-20T17:37:38Z,2017-07-20T18:40:50Z
8790,Fixed #28415 -- Clarified what characters ASCIIUsernameValidator and UnicodeUsernameValidator accept.,https://code.djangoproject.com/ticket/28415,timgraham,None,2017-07-20T17:04:56Z,2017-07-27T12:42:18Z
8789,Removed unneeded check in GeometryField.from_db_value().,It's unneeded since 6f43b2b8a55d72d1e8e04163ff0c2091cf6b8ce5.,sir-sigurd,None,2017-07-20T09:58:47Z,2017-07-20T12:48:28Z
8788,Removed unused models.DecimalField._format().,It's unused since b3b71a0922334c70bbc646a4873010f808196671.,sir-sigurd,None,2017-07-20T05:17:53Z,2017-07-20T13:03:27Z
8787,Fixed typo (speroid -> spheroid) in error message of DistanceLookupBase.,,sir-sigurd,None,2017-07-19T16:04:58Z,2017-07-19T19:03:27Z
8786,Exclude the files created in __pycache__ directory,,srinivasreddy,None,2017-07-19T15:50:32Z,2017-07-27T18:01:41Z
8785,"Stopped use SRID in __eq__() and __hash__() of PostGISAdapter, since EWKB contains SRID.",,sir-sigurd,None,2017-07-19T13:03:30Z,2017-07-19T14:14:44Z
8784,Fixed #28414 -- Fixed ClearableFileInput render as subwidget of MultiWidget,https://code.djangoproject.com/ticket/28414,seroy,None,2017-07-19T12:54:10Z,2017-07-19T19:38:40Z
8783,Simplified handling of params of GIS lookups.,,sir-sigurd,None,2017-07-19T06:17:14Z,2017-07-20T16:52:45Z
8782,Added test for the case when lhs of raster lookup has index specified and rhs hasn't.,Related to #8750.,sir-sigurd,None,2017-07-19T05:51:06Z,2017-07-20T13:39:52Z
8781,Fixed #28411 -- Used cx_Oracle.Cursor.outputtypehandler instead of _rowfactory() on Oracle.,https://code.djangoproject.com/ticket/28411,felixxm,None,2017-07-18T17:28:38Z,2017-07-19T06:43:32Z
8780,Removed redundant lookup values in RasterFieldTest.test_all_gis_lookups_with_rasters.,"These values produce already tested lookups and prevent another ones from being tested.

I'm not sure if it's really worth to add asserts.",sir-sigurd,None,2017-07-18T17:23:55Z,2017-07-19T05:55:35Z
8779,Fixed RasterFieldTest.test_all_gis_lookups_with_rasters.,That test was made no-op in 378cf689d8772d917f642a80967ab8a2332eb41c.,sir-sigurd,None,2017-07-18T10:00:53Z,2017-07-18T12:51:36Z
8778,Removed unused branch in GISLookup.process_band_indices().,This branch is unused since `process_band_indices()` is called only with `only_lhs=True` or when `len(self.rhs) > 1`.,sir-sigurd,None,2017-07-18T07:09:16Z,2017-07-18T09:37:25Z
8777,"Removed unneeded checks for hasattr(self.rhs, 'get_compiler') in django/db/models/lookups.py.",These checks are unneeded since 9ae4362becbde31dc9cc31ae0b1db969e7007431.,sir-sigurd,None,2017-07-18T04:28:45Z,2017-07-18T12:51:45Z
8776,[WIP] Fixes #28404 -- Show empty_value for empty strings,Fixes https://code.djangoproject.com/ticket/28404,markkohdev,None,2017-07-17T19:56:35Z,2018-02-07T10:07:00Z
8775,Fixed 403 link in docs/ref/contrib/gis/install/spatialite.txt.,https://www.gaia-gis.it/gaia-sins/libspatialite-sources/ = 403 Forbidden,BobHarper1,None,2017-07-17T15:20:35Z,2017-07-17T16:26:12Z
8774,Added the ability to set an ImageFileField with bytes.,I found that I deal with image bytes quite often from pasting an image into the browser or from reading a profile picture from LDAP. Most fields work like properties where you can directly set the value. I added this functionality for the FileField with bytes.,justengel,None,2017-07-17T13:10:16Z,2017-07-17T13:31:39Z
8773,Fixed#27468: Move utils.crypto.salted_hmac() from SHA1 toward SHA256,@timgraham  May be a settings variable to enable SHA256?,srinivasreddy,None,2017-07-16T11:17:12Z,2020-02-04T12:50:26Z
8772,Simplified GIS Funcs by using GeoFuncMixin.geo_field.,,sir-sigurd,None,2017-07-15T10:07:07Z,2017-07-15T12:26:24Z
8771,Created a dedicated test directory for FilePathField tests.,,srinivasreddy,None,2017-07-15T08:05:48Z,2017-07-17T23:15:32Z
8770,Fixed #28407 -- Added inspectdb support for db column comments.,"user can set help_text_format when create model from db by inspectdb .
help_text whill set by help_text_format .
if not set help_text_format models have no help_text param
Updated proposal from https://github.com/django/django/pull/8738.
",007gzs,None,2017-07-15T06:34:40Z,2017-10-25T15:18:57Z
8769,"Fixed #28399 -- Fixed QuerySet.count() for union(), difference(), and intersection() queries.",,apollo13,None,2017-07-14T16:13:13Z,2017-07-15T13:26:09Z
8768,Fixed #28397 -- Removed DjangoRuntimeWarning.,https://code.djangoproject.com/ticket/28397,timgraham,None,2017-07-14T14:14:10Z,2017-07-14T16:33:28Z
8767,Removed unused enter/exit methods of MySQL's CursorWrapper.,Unused since their introduction in e1d839237f7ce38ef078b7f09cc3a1aeaacc02f0.,timgraham,None,2017-07-14T12:41:35Z,2017-07-17T17:16:36Z
8766,Simplified __getattr__() of Oracle and MySQL cursor wrappers.,,sir-sigurd,None,2017-07-14T09:39:00Z,2017-07-14T13:17:46Z
8765,Replaced Oracle CursorIterator with generator expression.,,sir-sigurd,None,2017-07-14T09:19:47Z,2017-07-14T13:18:14Z
8764,Fix typo in doc,"In paragraph:

> Each of your views should use only mixins or views from one of the groups of generic class-based views: detail, list, editing and date

Replace ""date"" with ""update""",mhsekhavat,None,2017-07-13T23:33:47Z,2017-07-14T21:47:02Z
8763,Fixed #28264 -- Made FilePathField sort files and directories when recursive=True.,Fixes https://code.djangoproject.com/ticket/28264,srinivasreddy,None,2017-07-13T18:54:05Z,2017-07-29T19:07:54Z
8762,Fixed #28394 -- Removed BaseExpression._output_field.,https://code.djangoproject.com/ticket/28394,sir-sigurd,None,2017-07-13T18:38:05Z,2017-07-15T04:44:24Z
8761,Fixed #28387 -- Fixed has_changed() for disabled form fields that subclass it.,Fixes https://code.djangoproject.com/ticket/28387,srinivasreddy,None,2017-07-13T14:57:57Z,2017-07-17T10:08:30Z
8760,Fixed #28393 -- Added a helpful exception for invalid AutoField/IntegerField values.,"When a large model is updated and saved with invalid values, it produces a traceback deep within the ORM, with no clue which field assignment caused the error. Developers are faced with tracebacks like:

```
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/base.py"", line 953, in _do_update
    return filtered._update(values) > 0
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/query.py"", line 661, in _update
    return query.get_compiler(self.db).execute_sql(CURSOR)
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/sql/compiler.py"", line 1191, in execute_sql
    cursor = super(SQLUpdateCompiler, self).execute_sql(result_type)
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/sql/compiler.py"", line 863, in execute_sql
    sql, params = self.as_sql()
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/sql/compiler.py"", line 1157, in as_sql
    val = field.get_db_prep_save(val, connection=self.connection)
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/fields/__init__.py"", line 766, in get_db_prep_save
    prepared=False)
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/fields/__init__.py"", line 758, in get_db_prep_value
    value = self.get_prep_value(value)
  File ""/Users/diederik/Sites/virtualenvs/test/lib/python3.6/site-packages/django/db/models/fields/__init__.py"", line 1853, in get_prep_value
    self.name, repr(value)
   TypeError: int() argument must be a string, a bytes-like object or a number, not 'tuple'
```

This change displays the field name which makes spotting errors a lot easier.

For example, it shows:

    TypeError: remote_id: expected string or a number, not (39468135737,)

Trac issue: https://code.djangoproject.com/ticket/28393",vdboor,None,2017-07-13T12:06:19Z,2019-08-05T09:37:17Z
8759,Refactored Func.__repr__().,,felixxm,None,2017-07-13T11:23:07Z,2017-07-17T14:12:17Z
8758,Fixed #28371 -- Fixed Cast() with CharField if max_length argument isn't provided.,https://code.djangoproject.com/ticket/28391,felixxm,None,2017-07-13T08:07:20Z,2017-07-27T17:37:29Z
8757,Removed unneeded index check in LineString._set_single() as index is already checked in __getitem__().,Unneeded since its introduction in 66e1670efae34d721e374788e4c3f8b5fe5fa481.,sir-sigurd,None,2017-07-13T06:59:22Z,2017-07-13T17:15:45Z
8756,Expression compiling and copy cleanups.,"This is a follow up of https://github.com/django/django/pull/8705#issuecomment-313191581.

The first two commits should still be worth merging.",charettes,None,2017-07-13T06:55:22Z,2017-07-21T12:32:09Z
8755,Removed unused ListMixin._checkindex() correct kwarg.,Unused since its introduction in 66e1670efae34d721e374788e4c3f8b5fe5fa481.,sir-sigurd,None,2017-07-13T06:42:21Z,2017-07-13T17:15:54Z
8754,Fixed #28391 -- Fixed Cast() with CharField and max_length on MySQL.,https://code.djangoproject.com/ticket/28391,felixxm,None,2017-07-13T05:07:55Z,2017-07-17T19:13:17Z
8753,Simplified GEOSCoordSeq._checkindex().,,sir-sigurd,None,2017-07-13T04:46:28Z,2017-07-13T17:15:26Z
8752,Fixed #26688 -- Fixed HTTP request logging inconsistencies.,https://code.djangoproject.com/ticket/26688,solarissmoke,None,2017-07-13T04:10:56Z,2018-05-05T04:24:19Z
8751,Fixed #28349 -- Doc'd how to upgrade Django from LTS to LTS.,https://code.djangoproject.com/ticket/28349,ManoloBrn,None,2017-07-13T00:25:37Z,2017-07-24T17:33:31Z
8750,Removed unused code in GISLookup.process_band_indices().,Unused since its introduction in bbfad84dd980a97174c3b061a3d1b5f1373c380d.,timgraham,None,2017-07-12T21:29:16Z,2017-07-19T18:43:19Z
8749,Removed GeometryField.get_distance(); a GeoQuerySet leftover.,Follow up to a0d166306fbdc41f49e6fadf4ec84b17eb147daa.,timgraham,None,2017-07-12T21:08:42Z,2017-07-13T01:23:31Z
8748,Refs #25588 -- Removed obsolete bits of RasterField support.,Unused since bbfad84dd980a97174c3b061a3d1b5f1373c380d.,timgraham,None,2017-07-12T19:26:27Z,2017-07-20T14:48:47Z
8747,Fixed #28392 -- Fixed GIS's WKT regex to match large scientific notation numbers.,"The regex filters out large numbers e.g. ""SRID=4326;POINT (0.0 1.0e+10)"" giving:
ValueError: Problem installing fixture './temp.json': String or unicode input unrecognized as WKT EWKT, and HEXEWKB.

Ticket: https://code.djangoproject.com/ticket/28392",larmoreg,None,2017-07-12T19:22:44Z,2017-09-05T13:11:26Z
8746,Refs #28020 -- Removed accidentally left GeometryCollection.json.,,sir-sigurd,None,2017-07-12T17:46:39Z,2017-07-13T04:46:59Z
8745,Fixed #28316: to_field_name handled properly on ModelChoiceFields,"The form `initial` state should also reflect the `to_field_name` on a previously setup `ModelChoiceField`.

Also, please be less OCD on the PEP8 enforced newlines.",karolyi,None,2017-07-12T17:32:03Z,2018-07-30T21:07:39Z
8744,Made LineString.__iter__() return iter() from internal GEOSCoordSeq both for simplicity and performance.,,sir-sigurd,None,2017-07-12T15:15:20Z,2017-07-12T18:13:06Z
8743,Update tutorial03.txt,"Add a tip, put off a doubt about template.render() method",luoxzhg,None,2017-07-12T10:33:26Z,2017-07-19T14:56:25Z
8742,Fixed #28389 -- Fixed pickling of LazyObject on Python 2 when wrapped has no __reduce__().,https://code.djangoproject.com/ticket/28389,sir-sigurd,None,2017-07-12T10:29:11Z,2017-07-13T04:47:07Z
8741,"Fixed #28379 -- AccessMixin will not redirect authenticated user to login page, but raise Permissiondenied instead","`AccessMixin` has been changed so that authenticated users will not be redirected to the login url. Instead, `Permissiondenied` will be raised. This means that the value of `AccessMixin.raise_exception` is only relevant for the workflow of unauthenticated users.

Ticket: https://code.djangoproject.com/ticket/28379",dyve,None,2017-07-12T10:11:25Z,2018-11-21T19:45:34Z
8740,Ticket 28379,Changed the behavior of AccessMixin so that authenticated users will always raise the exceptions regardless of what raise_exception says. Redirecting an authenticated user to the login page does not make any sense.,dyve,None,2017-07-12T08:46:10Z,2017-07-12T09:11:51Z
8739,Refs #23919 -- Removed LazyObject.__getstate__() needed only on Python 2.,,sir-sigurd,None,2017-07-12T08:18:06Z,2017-07-19T10:42:24Z
8738,add column_comment to Field help_text when in inspectdb with mysql,add column_comment to Field help_text when in inspectdb with mysql,007gzs,None,2017-07-12T07:16:41Z,2017-07-13T02:56:45Z
8737,Fixed #28174 -- Fixed crash in runserver's autoreload with Python 2 on Windows with non-str environment variables.,"Ensure that all environment values are str objects to avoid a TypeError.  

Ticket: https://code.djangoproject.com/ticket/28174",mrogaski,None,2017-07-12T05:12:18Z,2017-08-22T20:59:12Z
8736,Fixed #21076 -- Store hashes of session keys in backends,"Added the ability to store a one-way hash of the session key instead of storing it as plain-text in the backend to improve security. This is particularly beneficial if a malicious actor only gains access to a read-only version of the backend or an unencrypted backend backup. Further discussion can be found on the [django-developers Google group](https://groups.google.com/forum/#!topic/django-developers/XMZXYBGQDZU).

The [Trac ticket](https://code.djangoproject.com/ticket/21076) mentioned the ability to turn this feature off since some installs rely upon shared backend stores to handle authentication across applications. I added the SESSION_STORE_KEY_HASH global setting to allow developers to disable this behavior if desired.

Some design considerations:

- Ensure we don't break current user sessions
- Use a fast hashing algorithm to have minimal performance impact
- Store the hashing function used so that we can change the function used gracefully if needed
- Expose an API method to hash the key
- Support this functionality in all backends (except the cookie backend)

An area of concern:
- If a developer currently accesses a Session through the `objects` manager, they'll need to update their code to hash the key before querying via the `session_key` or `pk` fields. For instance,

```py
Session.objects.get(session_key=session_key)
```
would now need to be:

```py
Session.objects.get(session_key=get_session_key_hash(session_key))
```

Is there a better way to address this shortcoming?",chris-griffin,None,2017-07-12T02:34:39Z,2020-07-03T07:58:24Z
8735,Fixed #28352 -- Corrected QuerySet.values_list() return type in docs examples.,https://code.djangoproject.com/ticket/28352,Irindu,None,2017-07-11T17:06:18Z,2017-07-11T18:15:18Z
8734,Fixed #28386 -- Made operations within non-atomic migrations honor the operation's atomic flag when migrating backwards.,"Non-atomic migrations added in [#25833](https://code.djangoproject.com/ticket/25833) (PR #5745) allowed for individual operations to be marked atomic. This works properly in the forward direction but fails when moving backwards.

Ticket for this bug: [#28386](https://code.djangoproject.com/ticket/28386)",egrim,None,2017-07-11T16:44:49Z,2017-08-11T00:18:18Z
8733,Fixed #28694 -- Made slugify() remove redundant underscores and dashes.,Improvement in the slugify for treatment of underscore and dash,elinaldosoft,None,2017-07-11T14:45:06Z,2020-01-03T14:04:55Z
8732,Fixed #28352 -- Corrected QuerySet.values_list() return type in docs examples.,"Issue #28352 fixed the values_list() return types in line numbers 685, 673,650,647,640 and 637",Irindu,None,2017-07-11T14:32:45Z,2017-07-11T17:28:34Z
8731,Made assertions in invalid_models_tests consistent,"Use the short `self.assertEqual(field.check(), [...])` pattern everywhere.

As per feedback on #8147 (some time ago).",adamchainz,None,2017-07-11T09:12:03Z,2020-07-20T10:20:02Z
8730,Fixed #28383 -- Made NumPoints GIS function return None for non-LINESTRING geometries on MySQL.,https://code.djangoproject.com/ticket/28383,sir-sigurd,None,2017-07-11T05:47:19Z,2017-07-12T08:16:58Z
8729,Fixed rendering of form errors in test client login template.,Forms don't have a `has_errors` property - this was removed in previous versions of Django.,solarissmoke,None,2017-07-11T05:40:21Z,2017-07-11T11:55:09Z
8728,Increasing more length to the name of the group,"Hello django @django

This pull request only have one change for increasing more length to the name of the group from 80 to 100

This change is for support one name more long

This changed fixed https://github.com/WeblateOrg/weblate/issues/1549


",JesusZapata,None,2017-07-10T23:41:49Z,2017-07-11T13:04:47Z
8727,Update name of topics/db/queries link on index page,"The `<h1>` on `<topics/db/queries>` is ""Making queries"" but the name of the link on the index page is executing queries. I think the link name should match the `<h1>` it links to.",tomleo,None,2017-07-10T21:31:45Z,2017-07-11T12:15:14Z
8726,Inconsistent caching of Site object by SiteManager,"Handles Site object caching in SiteManager's get_current method in case of tenant schemas application, as in this case caching Site object based just Site ID is not enough.",rjdp,None,2017-07-10T19:54:24Z,2017-07-10T20:34:55Z
8725,Fixed #28380 -- Excluded null geometries in SpatiaLite geometry lookups.,"Checking return values for some geometry comparison functions as the value `-1` means that one of the passed values was NULL.

Ticket: https://code.djangoproject.com/ticket/28380#ticket

Original PR: https://github.com/django/django/pull/8722",constantinius,None,2017-07-10T14:55:13Z,2017-08-24T12:50:04Z
8724,Fixed minor typo in comment,s/langauge/language,jaap3,None,2017-07-10T13:53:53Z,2017-07-11T07:58:52Z
8723,Fixed typo.,,evereux,None,2017-07-10T11:25:57Z,2017-07-10T12:18:24Z
8722,Fixed #28380 -- Handled -1 return value of Spatialite geometry functions on NULL parameters.,"Checking return values for some geometry comparison functions as the value `-1` means that one of the passed values was NULL.

Ticket: https://code.djangoproject.com/ticket/28380#ticket",constantinius,None,2017-07-10T10:19:50Z,2017-07-10T14:51:19Z
8721,"Fixed #28378 -- Fixed union(), and difference() when combining with queryset raising EmptyResultSet exception.",https://code.djangoproject.com/ticket/28378,felixxm,None,2017-07-09T12:18:40Z,2017-07-10T18:45:58Z
8720,Add HttpRequest.get_client_ip() method.,Method detects client ip address by ``HTTP_X_FORWARDED_FOR`` and ``REMOTE_ADDR`` headers.,mixkorshun,None,2017-07-08T21:32:06Z,2017-07-11T16:19:26Z
8719,Refs #23919 -- Reference only Python 3+ in bash completion utility.,"As Python 2 is not supported anymore, the binary shouldn't be referenced. I was tempted to change the minor version, but I don't think there's a final decision on 3.5 or 3.4 as the least supported minor version.",atombrella,None,2017-07-08T19:07:14Z,2017-07-10T12:54:53Z
8718,Added a test for QuerySet.update() with an invalid field.,,timgraham,None,2017-07-07T17:03:07Z,2017-07-08T12:02:34Z
8717,Removed useless hasattr in UpdateQuery._setup_query().,,timgraham,None,2017-07-07T15:49:34Z,2017-07-08T12:12:49Z
8716,Fixed #20880 -- Split QuerySet._clone() to _clone() and _chain() and Query.clone() to clone() and chain().,https://code.djangoproject.com/ticket/20880,timgraham,None,2017-07-07T14:27:05Z,2017-07-31T19:56:01Z
8715,Refs #27804 -- Used subTest() in urlpatterns_reverse tests.,,knbk,None,2017-07-07T14:02:10Z,2017-07-10T13:48:33Z
8714,Fix #28373 -- Uses the DatabaseWrapper timezone_name instead of 'UTC',"I opened this ticket https://code.djangoproject.com/ticket/28373 (master has a similar fix)

As you can see, datetimes are converted from 'UTC' to the required tz regardless of the database specific TIME_ZONE setting.

It is also my opinion that this conversion is not required if both tz are equal. To be discussed.

I haven't written a test case yet, I mainly wanted to bring this to the experts attention.

",vtalpaert,None,2017-07-07T13:30:42Z,2019-03-19T14:33:46Z
8713,Fixed #28382 -- Prevented BaseExpression._output_field from being set if _resolve_output_field() fails.,https://code.djangoproject.com/ticket/28382,sir-sigurd,None,2017-07-07T07:33:09Z,2017-07-12T08:16:50Z
8712,Removed unused OrderWrt.deconstruct().,,timgraham,None,2017-07-06T21:19:34Z,2017-07-07T11:48:44Z
8711,Fixed #28361 -- Fixed possible time-related failure in was_published_recently() tutorial test.,"Make it time independent on all systems, as described here: https://code.djangoproject.com/ticket/28361",martonbognar,None,2017-07-06T19:20:28Z,2017-07-06T22:23:50Z
8710,Fixed #28369 -- Added ModelAdmin hooks for reversing URLs.,https://code.djangoproject.com/ticket/28369#ticket,yeago,None,2017-07-06T19:18:44Z,2020-09-04T09:25:46Z
8709,Fixed #28370 -- Deprecated the context arg of Field.from_db_value() and Expression.convert_value().,"Unused since a0d166306fbdc41f49e6fadf4ec84b17eb147daa
https://code.djangoproject.com/ticket/28370",timgraham,None,2017-07-06T17:49:44Z,2017-07-21T00:33:23Z
8708,Removed unused Query.clone() memo kwarg.,Unused since 23ca3a01940c63942885df4709712cebf4df79ec.,timgraham,None,2017-07-06T17:09:29Z,2017-07-07T13:30:06Z
8707,Fixed #28365 -- Unified date_interval_sql() return value with similar methods.,https://code.djangoproject.com/ticket/28365,felixxm,None,2017-07-05T17:26:56Z,2017-07-06T11:41:59Z
8706,Fixed #28364 -- Removed redundant table joins in get_relations() on Oracle.,https://code.djangoproject.com/ticket/28364,felixxm,None,2017-07-05T11:42:43Z,2017-07-06T11:42:51Z
8705,Fixed #28353 -- Fixed some GIS functions when queryset is evaluated more than once.,https://code.djangoproject.com/ticket/28353,sir-sigurd,None,2017-07-05T11:38:27Z,2017-09-11T16:39:06Z
8704,Fixed #26184 -- Allowed custom lookups and transforms in ModelAdmin.search_fields.,"Adds `!` operator to `search_fields` allowing for specification of custom lookups.

https://code.djangoproject.com/ticket/26184",nazarewk,None,2017-07-05T11:02:11Z,2017-11-15T20:12:10Z
8703,Fixed #28360 -- Fixed crash of test runner with --debug-sql on fail/error in subTest.,https://code.djangoproject.com/ticket/28360,sir-sigurd,None,2017-07-05T09:03:57Z,2017-07-07T07:31:58Z
8702,"Made changes in topic ""Saving ForeignKey and ManyToManyField fields""","In topic [Saving ForeignKey and ManyToManyField fields](https://docs.djangoproject.com/en/1.11/topics/db/queries/#saving-foreignkey-and-manytomanyfield-fields) we are using Entry and Blog classes of the model.py (""blog.models"") but only importing Entry from blog.models which will give an error after executing 
`cheese_blog = Blog.objects.get(name=""Cheddar Talk"")`",Tusharmalik,None,2017-07-04T21:57:30Z,2017-07-05T02:23:48Z
8701,Updated humanize translation catalog es_AR,"like in the ticket https://code.djangoproject.com/ticket/21415  but for the Argentina translation case. 
",TheCraftsmen,None,2017-07-04T15:22:34Z,2017-07-05T12:38:58Z
8700,Updated humanize translation catalog es_AR,Is similar to the ticket https://code.djangoproject.com/ticket/21415 but for the Argentina translation case,TheCraftsmen,None,2017-07-04T13:33:23Z,2017-07-04T15:17:30Z
8699,Removed obsolete comment about IntegerField introspection on Oracle.,Obsolete since e9d12bae1e59e51738c11c492c620f56f96106bf.,felixxm,None,2017-07-04T12:51:44Z,2017-07-05T05:02:33Z
8698,Fix #28359: Redirect requests that do not match SECURE_SSL_HOST,https://code.djangoproject.com/ticket/28359,matthiask,None,2017-07-04T09:13:20Z,2020-01-31T08:50:19Z
8697,[1.11.x] Fixed #28355 -- Fixed widget rendering of non-ASCII date/time formats on Python 2.,https://code.djangoproject.com/ticket/28355,timgraham,None,2017-07-03T14:20:35Z,2017-07-06T12:04:23Z
8696,Fixed #28356 -- Fix serializer DateField/DateTimeField,"When we serializer one DateTimeField/DateField we need to check if
it was a datetime/date object, if not, try to parse it before and
raise an Exception in case of invalid format.
https://code.djangoproject.com/ticket/28356",HermogenesBatista,None,2017-07-02T15:44:28Z,2017-07-03T13:35:04Z
8695,Fixed #28321 -- Prevented FormSet.full_clean() from adding errors from deleted forms.,https://code.djangoproject.com/ticket/28321,Windsooon,None,2017-07-01T13:40:59Z,2017-07-24T22:55:42Z
8694,Fixed #28126 -- Added GistIndex to contrib.postgres.,"Thanks to Marc Tamlyn for the initial patch.

Follow up on #8303 I added the `BtreeGistExtension` and support for `fillfactor` and `buffering` plus schema tests.",atombrella,None,2017-07-01T13:25:17Z,2017-09-05T05:40:58Z
8693,Refs #27804 -- Used subTest() in dateparse tests.,"As referenced in code reviews for https://github.com/django/django/pull/8354, using `subTest` is preferable to repeated assertions, because it reduces the noise within the test, but also does not stop testing after a single failure.

This PR just makes changes where there are more than a couple of repeated assertions. I'm happy to increase the scope to other test modules, if approved.",schinckel,None,2017-07-01T07:11:13Z,2017-07-03T21:08:59Z
8692,"Fixed #28305 -- Fixed ""Cannot change column 'x': used in a foreign key constraint"" crash on MySQL with a sequence of AlterField operations.",https://code.djangoproject.com/ticket/28305,timgraham,None,2017-06-30T18:54:01Z,2017-12-02T00:48:36Z
8691,Fixed #28350 -- Fixed UnboundLocalError crash in RenameField with nonexistent field.,Raise a `FieldDoesntExist` with details about the missing field instead.,charettes,None,2017-06-30T12:40:11Z,2017-06-30T17:10:30Z
8690,Fixed #28348 - Tests fail if xgettext utility is not on system path,See ticket [#28348](https://code.djangoproject.com/ticket/28348),egrim,None,2017-06-29T21:33:59Z,2017-06-30T01:00:39Z
8689,Removed unused prototypes for deprecated GEOS functions.,,sir-sigurd,None,2017-06-29T18:14:12Z,2017-07-07T07:32:02Z
8688,Fixed #27670 -- Prevented shell crash on error in .pythonrc.,"This more-or-less matches the behaviour of CPython.

There's one unnecessary line from Django's code in the printed
traceback, but eliminating this requires a lot of poking around into the
internals of the traceback module.",inglesp,None,2017-06-29T11:31:35Z,2017-07-06T12:17:53Z
8687,Fixed #28345 -- Applied limit_choices_to during ModelForm.__init__().,"`field_for_model()` now has an additional keyword argument, `apply_limit_choices_to`, allowing it to continue to be used to create form fields dynamically after `ModelForm.__init__()` is called.

<https://code.djangoproject.com/ticket/28345>",jdufresne,None,2017-06-29T03:41:14Z,2017-07-14T22:21:56Z
8686,Fixed #28334 -- Added LRU cache for hstore/citext oids,Ticket [28334](https://code.djangoproject.com/ticket/28334),exslim,None,2017-06-28T13:15:55Z,2017-09-18T18:33:51Z
8685,Removed obsolete Query.tables attribute.,"As query.alias_map is an OrderedDict, it's not needed any more.

Refs #26522",holvianssi,None,2017-06-28T06:28:44Z,2017-06-29T16:22:21Z
8684,Fixed #28343 -- Add an OS chooser for docs command line examples.,"Stopped suggesting usage of Git Shell on Windows. Using it doesn't
actually make things simpler, e.g. it isn't compatible with Python's
venv (already shipped with Python >= 3.5) so a special case directing
Windows users to install virtualenv was needed anyway.

Add a custom `console` Sphinx directive which provides a better,
multi-platform UI for CLI examples on the HTML output. Use it where
applicable.

Fixes #28343.",ramiro,None,2017-06-28T03:59:16Z,2020-06-25T13:13:36Z
8683,Fixes 28336 - removes extra : character in middleware docs in docs/re…,"…fs/settings.txt

Closes ticket [28336](https://code.djangoproject.com/ticket/28336). Tests passed and the change was reflected when I looked at the edited page in my browser (Chrome). ",lgh2,None,2017-06-28T01:26:27Z,2017-06-28T01:41:11Z
8682,Fixed #27449 -- Added get_supported_language_variant to public API,"* Added `django.utils.translation.trans_real.get_supported_language_variant`
to the public API in `django.utils.translation`.
* Added unit tests for the original function which were lacking. 
* Added documentation and updated the doc string to match.",ssangervasi,None,2017-06-27T23:54:13Z,2018-02-26T18:30:06Z
8681,Fixed #28342 -- Fixed PyLibMCCache error handling,https://code.djangoproject.com/ticket/28342,julianandrews,None,2017-06-27T22:17:21Z,2018-08-23T15:17:44Z
8680,Fixed #28277 -- Added validation of QuerySet.annotate() and aggregate() args.,https://code.djangoproject.com/ticket/28277,felixxm,None,2017-06-27T12:00:48Z,2017-06-29T16:33:58Z
8679,Fixed #22229 -- Added primary key validation to BaseModelFormSet._construct_form().,<https://code.djangoproject.com/ticket/22229>,jdufresne,None,2017-06-27T03:22:51Z,2017-07-14T22:21:56Z
8678,Fixed #14204 -- Added support for SQLite foreign key constraints.,"https://code.djangoproject.com/ticket/14204

Updated from https://github.com/claudep/django/commit/15ceb2cc05262fe5f24f16cc31367fe6b5b698c1",timgraham,None,2017-06-26T23:12:48Z,2017-07-11T13:50:48Z
8677,Fixed reference to GEOSGeometry class on GIS tutorial page.,,sir-sigurd,None,2017-06-26T18:45:08Z,2017-06-27T13:20:06Z
8676,Fixed #27964 -- Made MySQL backend raise exception if spatial transformation is needed for query.,https://code.djangoproject.com/ticket/27964,sir-sigurd,None,2017-06-26T12:06:13Z,2017-06-27T13:20:06Z
8675,Refs #23919 -- Stopped inheriting from object to define new style classes.,,felixxm,None,2017-06-25T20:33:19Z,2017-06-26T14:46:27Z
8674,Fixed #28294 -- Documented request/args/kwargs attributes of class-based views.,https://code.djangoproject.com/ticket/28294,mvasiliou,None,2017-06-25T19:18:27Z,2017-06-28T14:01:31Z
8673,Fixed #26257 -- Added support for expressions in model's Meta.ordering,https://code.djangoproject.com/ticket/26257,DimaKudosh,None,2017-06-25T18:36:14Z,2017-09-05T23:32:33Z
8672,"Removed unnecessary, empty parentheses in class definitions.",,jdufresne,None,2017-06-24T14:23:45Z,2017-06-26T20:58:11Z
8671,Fixed #28331 -- Added ContextMixin.extra_context to allowing passing context in as_view().,https://code.djangoproject.com/ticket/28331,browniebroke,None,2017-06-23T19:49:57Z,2017-07-06T14:34:55Z
8670,Fixed #28201 -- Added null chars validator to CharField and TextField,"Added default null characters validation to CharField and TextField in
order to avoid raising errors on database layer. Added tests for both
fields.",alejandrozf,None,2017-06-23T15:16:16Z,2018-04-13T16:07:16Z
8669,Fixed #28201 -- Added null chars validator to CharField and TextField,"Added default null characters validation to CharField and TextField in
order to avoid raising errors on database layer. Added tests for both
fields.",alejandrozf,None,2017-06-22T20:26:30Z,2018-01-23T14:12:27Z
8668,Fixed #11557 -- Added support for a list of fields in Meta.get_latest_by and QuerySet.earliest()/latest().,"Ticket: https://code.djangoproject.com/ticket/11557

The `field_name` keyword argument is not used. Even the [Django doc is specifying the field name as a positional argument](https://docs.djangoproject.com/en/1.11/ref/models/querysets/#django.db.models.query.QuerySet.latest). Same for the tests, which only specify the field name as a positional argument. I think it can be deprecated.

If `get_latest_by` is defined as a string (`get_latest_by = 'pub_date'`), having Django transform it to a tuple avoids changes in existing projects and is more tolerant for new users. I don't see much value in deprecating that notation, except for consistency with `ordering`.
",francoisfreitag,None,2017-06-21T23:17:49Z,2017-09-06T00:36:08Z
8667,Fixed #28377 -- Retain media asset order while merging.,"Merge two media file lists while keeping the order of the elements.
Previously elements form the second list where append if they are not
already in the first list. As the result the order of assets could
be inverted.

This patch fixed this issue and ensure a consistent order or assets
unless there are two lists in a reversed order. Those cases will now
raise a warning.

Ref https://code.djangoproject.com/ticket/14370
Ref #6385

This changes is required to avoid disabling `jQuery.noConflict` in
future Django versions, see https://github.com/django/django/pull/6385#issuecomment-306452627",codingjoe,None,2017-06-21T13:23:31Z,2018-03-02T19:30:09Z
8666,Fixed #28329 -- Fixed Cast() with Big/Small/Positive/PositiveSmallIntegerField on MySQL.,https://code.djangoproject.com/ticket/28329,felixxm,None,2017-06-21T05:14:17Z,2017-06-21T15:56:41Z
8665,Fixed #28330 -- Prevented passing positional arguments to an Index.,,felixxm,None,2017-06-20T19:50:31Z,2017-06-27T18:06:02Z
8664,Doc'd the need to remove default ordering on Subquery aggregates.,,r3m0t,None,2017-06-20T18:02:49Z,2017-08-05T14:56:29Z
8663,Fixed typo in docs/ref/request-response.txt.,,aruseni,None,2017-06-20T14:18:18Z,2017-06-20T15:22:27Z
8662,Fixed #28327 -- Removed contradictory description of mod_wsgi docs.,https://code.djangoproject.com/ticket/28327,timgraham,None,2017-06-20T09:16:38Z,2017-06-20T11:47:49Z
8661,Fixed #21961 -- added support for database level on delete cascade,"Ticket https://code.djangoproject.com/ticket/21961

General Approach:
- I've added a `models.DB_CASCADE` option for `on_delete`. Its essentially, `DO_NOTHING`, but the ForeignKey field sets a flag that affects the sql strings in `/backends/base/schemas`.

Caveats for `models.DB_CASCADE` :
- does not support on_delete signals
- will not cascade delete multiple inherited tables as expected
- will not trigger CASCADE on another model. E.g. Model A points to model B, via -
 DB_CASCADE. Model B points to model C, via CASCADE. A will cascade delete B, B will django delete C, but deleting A will not delete C!
- ManyToMany with db level cascade delete will require manually defining a through table and setting the ForeignKeys as DB_CASCADE

Existing Packages:
- I originally proof of concept'd this as a postgres only external package https://github.com/NickStefan/django-db-cascade. I think we can actually support Postgres, MySQL, and even SQLite. With that scope, I believe its better as part of django.

Other relevant tickets if we wish to support SQLite ON DELETE CASCADE
- we'd need to enable `PRAGMA foreign_keys = 1`
- ticket: https://code.djangoproject.com/ticket/14204
- thread: https://groups.google.com/forum/#!topic/django-developers/_NpZ9K4hpv0 . 
- I'd be happy to do something related, but I wasn't sure where we could parameterize the option of setting the SQLite foreign key functionality. `settings.DATABASES.OPTIONS[""PRAGMA_foreign_keys""]` has been suggested, but is that an appropriate use of the that dictionary? We'd have to pop off that kwarg before passing it to the Database connection.",NickStefan,None,2017-06-20T00:55:32Z,2020-10-02T15:27:00Z
8660,Fixed #28324 -- Made feedgenerators write feeds with deterministically ordered attributes.,"Updated from https://github.com/django/django/pull/8044.
https://code.djangoproject.com/ticket/28324",timgraham,None,2017-06-19T22:54:08Z,2017-06-20T10:01:40Z
8659,Fixed #28323 -- Removed unneeded normalize() in timezone.localtime() and make_naive().,https://code.djangoproject.com/ticket/28323,timgraham,None,2017-06-19T22:06:32Z,2017-06-20T11:36:31Z
8658,Complete test coverage for django/utils/lorem_ipsum.py,continued from https://github.com/django/django/pull/8642,idanmel,None,2017-06-19T20:59:08Z,2017-09-04T13:08:37Z
8657,Fixed #28322 -- Added dbshell support for client TLS certs on MySQL.,"Add support for client-side TLS certificates in the MySQL dbshell
command.

Manually tested that this works with a live MySQL database (Google Cloud SQL).",paultiplady,None,2017-06-19T20:07:35Z,2017-06-19T22:11:25Z
8656,Improved test coverage for django.contrib.admin.,Continued from https://github.com/django/django/pull/7994.,timgraham,None,2017-06-19T19:48:29Z,2017-06-19T21:41:46Z
8655,Refs #27858 -- Fixed typo in MigrationRecorder.applied_migrations() comment.,,felixxm,None,2017-06-19T17:47:42Z,2017-06-20T19:03:19Z
8654,Update README.rst,test case ,lijie3721,None,2017-06-18T07:01:29Z,2017-06-18T10:30:27Z
8653,Refs #27539: Fixed typo in TransactionTestCase._pre_setup() comment.,,francoisfreitag,None,2017-06-18T03:44:25Z,2017-06-19T01:24:21Z
8652,Fixed #18485 -- Doc'd behavior of PostgreSQL when manually setting AutoField.,Ticket: https://code.djangoproject.com/ticket/18485.,francoisfreitag,None,2017-06-18T03:34:04Z,2017-06-19T13:25:50Z
8651,Master,,akluthra,None,2017-06-17T00:39:43Z,2017-06-17T00:43:20Z
8650,Fixed #28316 -- Fixed ModelChoiceField with to_field_name pointing to non-primary key.,https://code.djangoproject.com/ticket/28316,karolyi,None,2017-06-16T20:46:12Z,2017-07-12T15:12:09Z
8649,Fixed #28312 -- Fixed incorrect caching of ModelChoiceIterator.__len__().,https://code.djangoproject.com/ticket/28312,timgraham,None,2017-06-16T16:29:41Z,2017-06-17T21:21:25Z
8648,"Fixed #27392 -- Remove ""Tests that"", ""Ensures that"", etc. from test docstings",,roman-dmytriv,None,2017-06-16T01:47:34Z,2017-10-20T17:16:17Z
8647,Fixed #28313 -- Added model name max length check of 100 characters in contrib.contentttypes.,https://code.djangoproject.com/ticket/28313,mick88,None,2017-06-15T20:46:23Z,2017-06-26T22:31:26Z
8646,Fixed #28176 -- Restored the uncasted option value in ChoiceWidget template context.,"The first commit is from https://github.com/django/django/pull/8639.
The second commit is the approach John suggested in https://github.com/django/django/pull/8639#issuecomment-308612817.
The third commit reverts parts of the second commit to what I think is a simpler approach.",timgraham,None,2017-06-15T15:47:43Z,2017-06-17T22:39:43Z
8645,Fixed #28304 -- Kept SafeData type for pgettext-translated strings,,claudep,None,2017-06-15T06:48:56Z,2017-06-15T19:02:23Z
8644,Refs #24423 -- Reintroduced wrongly-deleted i18n tests,"Looks like 97c1931c4f610e80053430d0297d51e1bed1e7ae deleted a bunch of
tests not related to tag tests.",claudep,None,2017-06-14T21:01:24Z,2017-06-15T06:30:02Z
8643,Refs #25809 -- Removed BrinIndex.__repr__().,"In retrospect, implementing a `__repr__()` for index subclasses doesn't
seem worthwhile.

(discussed in https://github.com/django/django/pull/7950#discussion_r119955225)",timgraham,None,2017-06-14T20:39:18Z,2017-06-18T06:31:02Z
8642,Complete test coverage for django/utils/lorem_ipsum.py,Fixed import sort,idanmel,None,2017-06-14T18:17:15Z,2017-06-19T20:03:02Z
8641,Complete test coverage for django/utils/lorem_ipsum.py,,idanmel,None,2017-06-14T17:26:41Z,2017-06-14T18:08:23Z
8640,Fixed #28297 -- Fixed join in an annotate().filter().annotate().filter() query.,[Ticket](https://code.djangoproject.com/ticket/28297),rennomarcus,None,2017-06-14T12:51:34Z,2018-02-12T20:11:07Z
8639,Fixed #28303 -- Prevented localization of attribute values in the DTL attrs.html widget template.,https://code.djangoproject.com/ticket/28303,timgraham,None,2017-06-14T11:28:57Z,2017-06-17T12:12:20Z
8638,Refs #28307: Better startapp template,"I filed a ticket regarding this pull request, where I explained the motivations of the patch I propose: https://code.djangoproject.com/ticket/28307

I hope to have done everything right.

Kind regards,
Mark",mcagl,None,2017-06-13T22:03:04Z,2017-06-13T23:32:01Z
8637,Added tel input type to admin CSS.,,felixxm,None,2017-06-13T19:03:21Z,2017-06-14T04:14:25Z
8636,Added JS unit tests for contrib.admin's URLify.js.,"As directed in #8624, this pull request contains a handful of unit tests for contrib.admin's URLify.js. All tests are passing as they cover base behavior of URLify.js which is not altered by the proposed modifications in #8624.

Comment and test name strings have been updated per the code review in #8624 and the test docstring [Coding Style](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/#python-style).",monotonee,None,2017-06-13T18:16:53Z,2017-06-13T18:53:16Z
8635,Separate authorisation from authentication,,lsaffre,None,2017-06-13T15:15:47Z,2017-06-13T16:03:47Z
8634,Fixed #28300 -- Allowed GDALRaster objects to use the vsimem filesystem.,https://code.djangoproject.com/ticket/28300,yellowcap,None,2017-06-13T11:33:28Z,2017-06-16T16:09:05Z
8633,Fixed #28319 -- Made TextField with choices use a Select widget.,https://code.djangoproject.com/ticket/28319,maciej-jaworski,None,2017-06-12T18:20:41Z,2017-06-17T13:11:37Z
8632,Refs #23853 -- Updated sql.query.Query.join() docstring.,Follow up to ab89414f40db1598364a7fe4cfac1766cacd2668.,timgraham,None,2017-06-12T16:52:56Z,2017-06-13T18:18:14Z
8631,WIP: #28297 Resolve Same queryset result in two different queries on ORM,[Ticket](https://code.djangoproject.com/ticket/28297),orf,None,2017-06-12T16:47:54Z,2018-08-09T23:20:05Z
8629,"Fixed #28293 -- Fixed union(), intersection(), and difference() when combining with an EmptyQuerySet.",https://code.djangoproject.com/ticket/28293,felixxm,None,2017-06-11T12:43:28Z,2017-06-13T06:17:32Z
8628,Fixed #28298 -- Prevented a primary key alteration from adding a foreign key constraint if db_constraint=False.,https://code.djangoproject.com/ticket/28298,jschneier,None,2017-06-11T03:28:45Z,2017-06-23T01:57:56Z
8627,Fixed #17379 -- Removed management commands deactivation of the locale.,https://code.djangoproject.com/ticket/17379,claudep,None,2017-06-10T21:45:03Z,2018-05-13T08:22:27Z
8626,Fixed #26362 -- Update the inherited id field of an object when its ancestor changes,https://code.djangoproject.com/ticket/26362,czpython,None,2017-06-10T17:23:48Z,2017-08-20T12:14:18Z
8625,Allow complex template structure for related object links,"When overriding `admin/related_widget_wrapper.html` the Javascript associated to button handling is too restrictive on the DOM structure.
This change allows to have complex siblings as buttons (for a boostrap theme for example).",SebCorbin,None,2017-06-10T12:11:08Z,2017-08-12T12:57:09Z
8624,Fixed #28295 - Removed trailing hyphens from ModelAdmin.prepopulated_fields,"The JavaScript responsible for generating the output of ModelAdmin.prepopulated_fields would sometimes leave a trailing hyphen in the returned string. A single, extra operation was added to urlify.js to ensure that the resulting output will no longer end with a hyphen.",monotonee,None,2017-06-10T02:09:37Z,2017-06-13T19:37:03Z
8623,Fixed #27967 -- Fixed KeyError in admin's inline form with inherited non-editable pk.,https://code.djangoproject.com/ticket/27967,czpython,None,2017-06-10T01:01:52Z,2017-06-13T09:19:40Z
8622,Refs #23919 -- Removed support for broken Model.__str__() in Model.__repr__().,Returning invalid bytestrings in `__str__()` is unlikely in Python 3.,timgraham,None,2017-06-09T17:43:53Z,2017-06-11T19:52:25Z
8621,"Refs #23919 -- Replaced stray super(ClassName, self) with super().","I found these while working on #8352. I'm not sure if py3 cleanups need a specific ticket, but I thought I would clean them up anyway.",orf,None,2017-06-09T17:30:58Z,2017-06-11T19:41:03Z
8620,[WIP] Fixed #20581 -- Added class based index Unique and UniqueDeferred.,"`UniqueDeferred` can be used to create a deferred unique constraint. For class based unique constraints to integrate with model forms, a new `Index.get_unique_checks()` was added to communicate to the model which fields should be considered during unique validation.

<https://code.djangoproject.com/ticket/20581>",jdufresne,None,2017-06-09T01:37:56Z,2017-06-26T20:58:11Z
8619,Refs: #28291 - Failing testcase for ArrayField(JSONField()),"This PR is just an example failing testcase, and isn't meant to be merged.

Added a failing testcase for #28291.

Using `ArrayField(JSONField())` causes a sql error on saving:
```
psycopg2.ProgrammingError: column ""field"" is of type jsonb[] but expression is of type text[]
LINE 1: ...""postgres_tests_jsonarraymodel"" (""field"") VALUES (ARRAY['{""a...
```
",Naddiseo,None,2017-06-08T20:30:29Z,2017-06-09T16:55:27Z
8618,Fixed #28284 -- Prevented Paginator's unordered object list warning from evaluating a QuerySet.,Ref: [#28284](https://code.djangoproject.com/ticket/28284),orf,None,2017-06-08T16:29:54Z,2017-06-15T18:36:54Z
8617,Removed unused Query.query_terms,,claudep,None,2017-06-08T16:23:15Z,2017-06-08T18:33:17Z
8616,Fixed #28288 -- Allowed passing papsz options to GDALRaster initiation.,,yellowcap,None,2017-06-08T10:56:25Z,2017-06-08T17:07:38Z
8615,Refs #25240 -- Added ExtractWeek examples.,Missing examples for `week` lookup.,atombrella,None,2017-06-08T08:48:03Z,2017-06-10T08:03:27Z
8614,Fixed #28241 -- Added dotted path support to module_has_submodule,"[Ticket 28241](https://code.djangoproject.com/ticket/28241)

Enables module_has_submodule and autodiscover_modules to accept dotted paths.

Replaces #8611 which included support for python 2 (and therefore Django 1.8 to 1.11)

Note: I included an empty __init__.py in the dummy module I added for tests even if unnecessary in python 3 as there are still __init__.py files everywhere.",tkhyn,None,2017-06-07T19:44:38Z,2017-06-08T18:34:21Z
8613,Fixed #28282 ---  Fixed class-based model indexes to always name indexes on non-abstract models.,"<https://code.djangoproject.com/ticket/28282>

I also considered:

```python
if not abstract:
```

As well as removing the `if` entirely. Why not always name indexes, even on abstract models? Looking for feedback on the intended design and approach here.",jdufresne,None,2017-06-07T14:15:50Z,2017-06-26T20:58:11Z
8612,Fixed #28280 -- Prevented numberformat.format() from formatting large/tiny floats in scientific notation.,"This fix takes into account float values that gets represented in scientific notation.

Please see https://code.djangoproject.com/ticket/28280",wil,None,2017-06-07T09:52:03Z,2019-06-06T11:43:36Z
8611,[1.11.x] Fixed #28241 -- Added dotted path support to module_has_submodule,"[Ticket 28241](https://code.djangoproject.com/ticket/28241)

Enables module_has_submodule and autodiscover_modules to accept dotted paths.

Patching against 1.11.x, also works in 1.10.x and 1.8.x under python 2 and python 3. Comments welcome.",tkhyn,None,2017-06-07T02:16:54Z,2017-06-07T19:46:30Z
8610,Fixed #26818 -- Responsive CSS for admin,"[Ticket #26818](https://code.djangoproject.com/ticket/26818)

Discussion in [Django Developers Group](https://groups.google.com/forum/#!msg/django-developers/U3my09CEpuo/YlpCs370AQAJ).

Few notes:
- CSS changes only. Flexbox layout are now [supported](http://caniuse.com/#search=flexbox) by all major mobile browsers; It means we can do a lot of tricky things without changing markup
- Responsive stylesheet is declared inside `{% block responsive %}` (any suggestions for better naming?) for two reasons:
    1. to be after RTL file (because `responsive.css` has some overrides)
    2. to allow third-party apps to override or inherit it

### Live Demo
URL: http://demo.elky.me/
Credentials: demo / demo

Feedback and contribution are welcome.",elky,None,2017-06-06T17:28:57Z,2017-09-16T23:11:20Z
8609,Simplified naming of tutorial's test methods/docstrings.,,timgraham,None,2017-06-06T15:51:57Z,2017-06-07T13:47:38Z
8608,Fixed #28165 -- Support non-lower case allowed_extensions for FileExtensionValidator,Reworked version of #8456 as requested by @timgraham ( https://github.com/django/django/pull/8456#issuecomment-306309756 ),153957,None,2017-06-06T08:59:41Z,2017-06-07T21:09:30Z
8607,Refs #20483 -- Removed unneeded column from _foreign_key_constraints() on Oracle.,,felixxm,None,2017-06-06T08:13:15Z,2017-06-06T13:11:08Z
8606,Fixed #28278 -- Fixed invalid HTML for a required AdminFileWidget.,Error inside clearable_file_input.html,kakulukia,None,2017-06-05T20:18:41Z,2017-06-06T19:57:29Z
8605,Refs #21286 -- Reenabled serializer tests with date/datetime pk model,,claudep,None,2017-06-05T17:01:16Z,2017-06-05T19:37:38Z
8604,Replaced Model._get_pk_val() with pk property.,The pk property was introduced after _get_pk_val() and many places weren't simplified.,timgraham,None,2017-06-05T16:36:39Z,2017-06-05T19:20:44Z
8603,Refs #27795 -- Removed force_text() usage in serialization framework,,claudep,None,2017-06-05T10:40:50Z,2017-06-05T16:35:14Z
8602,Fixed typo in ChoiceField documentation.,Added in 81c3967e554716dbb5c86ebc390fd07389c39c2e.,adamchainz,None,2017-06-05T06:08:56Z,2020-07-20T10:20:07Z
8601,[1.11.x] Fixed #28269 -- Made Model._meta._property_names ignore AttributeErrors,"[Ticket](https://code.djangoproject.com/ticket/28269)

1.11 version of #8599",adamchainz,None,2017-06-04T22:15:45Z,2017-06-09T07:02:41Z
8600,Fixed #26651 -- Kept original file suffix in TemporaryUploadedFile name,https://code.djangoproject.com/ticket/26651,claudep,None,2017-06-04T22:07:58Z,2017-06-05T16:56:57Z
8599,Fixed #28269 -- Made Model._meta._property_names ignore AttributeErrors,[Ticket](https://code.djangoproject.com/ticket/28269),adamchainz,None,2017-06-04T22:00:55Z,2017-06-09T07:02:35Z
8598,Fixed #28262 -- Fixed DisallowedModelAdminLookup error raised when filtering by a forward relationship field from a reverse relationship.,https://code.djangoproject.com/ticket/28262,czpython,None,2017-06-04T18:20:22Z,2017-06-05T15:44:05Z
8597,Fixed #28271 -- Ensure the ajax technical_500_response has utf-8 encoding,https://code.djangoproject.com/ticket/28271,last-partizan,None,2017-06-04T15:04:53Z,2017-06-05T18:43:41Z
8596,Fixed #28202 -- Fixed FieldListFilter.get_queryset() crash on invalid input.,"https://code.djangoproject.com/ticket/28202

No new tests have been added because a test for this was added in https://github.com/django/django/commit/30241385d538a9d6abb89ff9f74dfd5a424c7a87
but it didn't alter the `list_filter` attribute of the `Thing` admin. So the filter was ignored and thus the exception not raised.

Test can be found in https://github.com/django/django/blob/master/tests/admin_views/tests.py#L635

My initial approach was to alter `get_prep_value` on the `AutoField` class to call `to_python` and raise a `ValidationError` like the others (datefield, etc..) but this would be a breaking change.",czpython,None,2017-06-03T22:24:44Z,2017-06-06T13:02:44Z
8595,"Refs #27308, #27753 -- Removed obsolete cookie test mixing bytes with str","Python 3 `SimpleCookie` treats all values as strings. Passing a bytes object coerces to the repr value.

From the [Python docs](https://docs.python.org/3/library/http.cookies.html#http.cookies.SimpleCookie):

> This class derives from BaseCookie and overrides value_decode() and value_encode() to be the identity and str() respectively.

Example:

```python
>>> from http.cookies import SimpleCookie
>>> c = SimpleCookie()
>>> c['test'] = b""\xf0""
>>> c
<SimpleCookie: test=""b'\\xf0'"">
```

Fixes warning of the form:

```
test_decode_2 (httpwrappers.tests.CookieTests) ... /usr/lib64/python3.6/http/cookies.py:634: BytesWarning: str() on a bytes instance
  strval = str(val)
```",jdufresne,None,2017-06-03T21:42:31Z,2017-06-26T20:58:15Z
8594,Closed all resources after use in tests/servers/tests.py.,"Fixes warnings of the form:

```
ResourceWarning: unclosed <socket.socket [closed] fd=6, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>
```",jdufresne,None,2017-06-03T21:25:56Z,2017-06-26T20:58:14Z
8593,Removed unused django.contrib.gis.shortcuts.render_to_text(),Unused since its introduction in 79e68c225b926302ebb29c808dda8afa49856f5c.,timgraham,None,2017-06-03T17:17:06Z,2017-06-04T01:03:37Z
8592,Refs #28192 -- Made MultiValueField/ComboField fields argument required as documented.,Discussed in https://github.com/django/django/pull/8490.,timgraham,None,2017-06-03T13:28:13Z,2017-06-03T14:15:52Z
8591,Factored shared Inline/ModelAdmin.get_fields() logic into BaseModelAdmin.,BaseModelAdmin.get_fields() was previously unused/untested.,timgraham,None,2017-06-03T13:01:29Z,2017-06-07T21:11:08Z
8590,Refs #28192 -- Fixed documentation of ChoiceField choices requirement,,claudep,None,2017-06-03T07:52:45Z,2017-06-03T14:18:28Z
8589,Fixed #28257 -- Confirmed support for GDAL 2.2.,,claudep,None,2017-06-02T18:50:39Z,2017-06-07T19:27:51Z
8588,Fixed admin_views IntegrityError test failure.,Regression in 38a5a23c327ab1c816dc56864002ecc66cac4a48.,timgraham,None,2017-06-02T18:41:52Z,2017-06-09T13:33:39Z
8587,Removed useless hasattr() checks in ModelAdmin checks.,"These attributes are defined on BaseModelAdmin and thus should always
be there.",timgraham,None,2017-06-02T18:06:42Z,2017-06-02T20:08:59Z
8586,Fixed #28266 -- Fixed typo in docs/ref/models/instances.txt.,"The from_db example didn't work - creating a new instance called new, then referring to instance. Needed to be one or the other.",datakid,None,2017-06-02T01:08:45Z,2017-06-02T13:17:16Z
8585,Removed pk hardcoding in admin_views tests.,,timgraham,None,2017-06-02T00:45:46Z,2017-06-02T14:01:48Z
8584,Fixed #28265 -- Prevented renderer warning on widgets.render() with **kwargs,,jdufresne,None,2017-06-02T00:40:21Z,2017-06-03T19:55:33Z
8583,Sorted imports per isort 4.2.9,,timgraham,None,2017-06-01T17:00:26Z,2017-06-01T17:24:29Z
8582,Fixed imports per isort.,Fixed imports per `isort==4.2.8`.,felixxm,None,2017-06-01T12:40:22Z,2017-06-01T17:32:33Z
8581,Fixed #28260 -- Allowed customizing the test tablespace initial and autoextend size on Oracle.,https://code.djangoproject.com/ticket/28260,felixxm,None,2017-06-01T05:36:07Z,2017-06-02T16:36:41Z
8580,Fixed #28261 -- fix oracle slicing problem,"Background: I want to get the paging use slicing after ordering, if offset=20 and limit=10, code should be :`Computer.objects.select_related().order_by('-installed_agent')[20: 30].values_list('id', flat=True)`
 
But look:
```
In [27]: list(Computer.objects.select_related().order_by('-installed_agent')[20: 30].values_list('id', flat=True))
Out[27]: [1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 3221]
 
In [28]: list(Computer.objects.select_related().order_by('-installed_agent')[10: 20].values_list('id', flat=True))
Out[28]: [1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 3221]
 ```
If array[20: 30] and array[10: 20] return the same result,the result of the paging is wrong, why this?
 
 
Now django automatically generated sql for ""Computer.objects.select_related().order_by('-installed_agent')[20: 30].values_list('id', flat=True)"" is:
```
SELECT *
  FROM (SELECT ""_SUB"".*, ROWNUM AS ""_RN""
          FROM (SELECT ""OM_COMPUTER"".""ID"" AS Col1
                  FROM ""OM_COMPUTER""
                 ORDER BY ""OM_COMPUTER"".""INSTALLED_AGENT"" DESC) ""_SUB""
         WHERE ROWNUM <= 30)
WHERE ""_RN"" > 20
 ```
If the generate sql like this:
```
SELECT SUB2.*
  FROM (SELECT SUB1.*, ROWNUM AS ""_RN""
          FROM (SELECT ""OM_COMPUTER"".""ID"" AS COL1
                  FROM ""OM_COMPUTER""
                 ORDER BY ""OM_COMPUTER"".""INSTALLED_AGENT"" DESC) SUB1) SUB2
WHERE ""_RN"" <= 30
   AND ""_RN"" > 20
```
Then the result of the paging is right.

test:
```
In [3]: list(Computer.objects.select_related().order_by('-installed_agent')[:10].values_list('id', flat=True))
Out[3]: [8148, 7042, 7666, 6027, 6029, 8160, 8161, 8164, 8165, 8171]
 
In [5]: list(Computer.objects.select_related().order_by('-installed_agent')[10 :20].values_list('id', flat=True))
Out[5]: [8173, 8174, 8175, 8176, 8177, 8180, 8181, 8186, 8187, 4397]
 
In [6]: list(Computer.objects.select_related().order_by('-installed_agent')[20 :30].values_list('id', flat=True))
Out[6]: [4408, 4419, 4430, 4441, 4458, 8087, 8090, 8091, 8093, 8096]

In [10]: list(Computer.objects.select_related().order_by('-installed_agent')[10 :].values_list('id', flat=True))
Out[10]: 
[8173,
 8174,
 8175,
...
]

In [7]: str(Computer.objects.select_related().order_by('-installed_agent')[:10].values_list('id', flat=True).query)
Out[7]: 'SELECT ""__SUB"".* FROM (SELECT ""_SUB"".*,ROWNUM AS ""_RN"" FROM (SELECT ""OM_COMPUTER"".""ID"" AS Col1 FROM ""OM_COMPUTER"" ORDER BY ""OM_COMPUTER"".""INSTALLED_AGENT"" DESC) ""_SUB"") ""__SUB"" WHERE ""_RN"" <= 10 AND ""_RN"" > 0'
 
In [8]: str(Computer.objects.select_related().order_by('-installed_agent')[10 :].values_list('id', flat=True).query)
Out[8]: 'SELECT ""__SUB"".* FROM (SELECT ""_SUB"".*,ROWNUM AS ""_RN"" FROM (SELECT ""OM_COMPUTER"".""ID"" AS Col1 FROM ""OM_COMPUTER"" ORDER BY ""OM_COMPUTER"".""INSTALLED_AGENT"" DESC) ""_SUB"") ""__SUB"" WHERE ""_RN"" > 10'
 
In [9]: str(Computer.objects.select_related().order_by('-installed_agent')[20 :30].values_list('id', flat=True).query)
Out[9]: 'SELECT ""__SUB"".* FROM (SELECT ""_SUB"".*,ROWNUM AS ""_RN"" FROM (SELECT ""OM_COMPUTER"".""ID"" AS Col1 FROM ""OM_COMPUTER"" ORDER BY ""OM_COMPUTER"".""INSTALLED_AGENT"" DESC) ""_SUB"") ""__SUB"" WHERE ""_RN"" <= 30 AND ""_RN"" > 20'
 ```
works good.",belongwqz,None,2017-06-01T05:23:18Z,2017-06-01T08:16:16Z
8579,Increased initial and autoextend size of the Oracle tablespaces datafiles used for tests.,"Tablespace datafile autoextend can be time-consuming, therefore I propose to increase initial and autoextend size to more reasonable values.",felixxm,None,2017-05-31T15:36:58Z,2017-06-01T05:37:36Z
8578,Stable/1.10.x,,resplend,None,2017-05-31T13:53:49Z,2017-05-31T13:57:30Z
8576,Fixed #28258 -- Optimized Oracle introspection by using LISTAGG.,,felixxm,None,2017-05-31T12:02:53Z,2017-06-02T15:03:01Z
8575,Fixed #26755 -- Allowed test_middleware_classes_headers to work if Django source isn't writable.,https://code.djangoproject.com/ticket/26755,lamby,None,2017-05-30T21:54:57Z,2017-06-01T06:41:20Z
8574,Fixed ``call_command`` example in the docs,,rfleschenberg,None,2017-05-30T19:53:32Z,2017-05-30T21:32:27Z
8573,Fixed gis_tests.geoapp with incorrect geodetic coordinates.,"The latitude coordinates exceed -90, 90 bounds.",felixxm,None,2017-05-30T07:09:55Z,2017-05-30T15:34:36Z
8572,Fixed #28199 -- Fixed Subquery generating unnecessary/invalid CAST.,https://code.djangoproject.com/ticket/28199,timgraham,None,2017-05-29T18:53:19Z,2017-05-30T10:40:54Z
8571,Fixed #28204 -- Fixed MultipleObjectMixin.paginate_queryset() crash on Python 2 if InvalidPage message contains non-ASCII.,https://code.djangoproject.com/ticket/28204,timgraham,None,2017-05-29T13:52:56Z,2017-05-29T14:13:02Z
8570,Fixed #19580 -- Made nullable relations work consistently,Rebased the previous PR https://github.com/django/django/pull/7098/ with the master here. Modified the release text. The tests fail when I remove any newly added line. Please review and suggest any changes. ,Rajesh-Veeranki,None,2017-05-29T07:13:25Z,2019-09-18T14:54:07Z
8569,Refs #23804 -- Improved value validation in GDALRaster.geotransform setter.,As noted during review of #8432.,adamchainz,None,2017-05-29T07:12:01Z,2017-05-30T15:23:12Z
8568,Use cached_property on Request instead of LazyObject,"Many people run into issues with the LazyObject approach to providing 'request.user'.

I've put together this PoC to show it could more efficiently be replaced with a cached_property instead.

More efficient because the code to add request.user is only run once, at startup, which then ""monkey patches"" HttpRequest to have this property.

Currently some quirky tests are failing, but not to do with auth directly.",funkybob,None,2017-05-29T00:30:47Z,2017-06-14T00:02:06Z
8567,"Fixed #28233 -- Used a simpler example in the aggregation ""cheat sheet"" docs.",https://code.djangoproject.com/ticket/28233,Rajesh-Veeranki,None,2017-05-28T17:50:55Z,2017-06-07T13:44:18Z
8566,DRY'd startapp and startproject management commands,Noticed this duplication and lack of test coverage whilst reading the code.,adamchainz,None,2017-05-28T10:54:40Z,2017-05-30T15:22:37Z
8565,Fixed #28242: Moved ImageField extension validation to forms,"Image extension validation, first added in #21548 broke existing applications that strip file extension from uploaded files.

This patch move the validation from model to forms, which cause the validation to not run against form initial value.",whs,None,2017-05-28T07:11:59Z,2017-06-01T14:45:18Z
8564,Update django conf locale az translation,,munisisazade,None,2017-05-27T22:55:47Z,2017-05-27T23:13:13Z
8563,Fixed #28249 -- Removed unnecessary dict.keys() calls.,"`iter(dict)` is equivalent to `iter(dict.keys())`. Fixed all code to simply act on the dictionary. Provides simpler, more concise syntax and avoids the extra function call in Django.

Inspired by Lennart Regebro's PyCon 2017 presentation ""Prehistoric Patterns in Python"". Available at:

<https://www.youtube.com/watch?v=V5-JH23Vk0I>",jdufresne,None,2017-05-27T22:19:26Z,2017-06-01T23:52:16Z
8562,Fixed #28236 - Integrate dj-database-url into Django ,"Ticket: [#28236](https://code.djangoproject.com/ticket/28236)

This PR integrates dj-database-url into Django, allowing users to configure their caches and databases via URLs:

```python
# settings.py
from django.conf.service_url import configure_db, configure_cache, register_db_backend

register_db_backend('customDB', 'my.custom.db.adapter')
register_cache_backend('customCache', 'my.custom.cache.adapter')

# These values would come from environment variables rater than be hard-coded like this

DATABASES = {
    'default': configure_db('postgres://user:password@localhost/myDb?sslmode=verify-full'),
    'sqlite': configure_db('sqlite://:memory:'),
    'custom': configure_db('customDB://10.10.10.10/something?else=1')
}

CACHES = {
    'default': confgure_cache('memcached://127.0.0.1:11211'),
    'file': configure_cache('file:///tmp/cache'),
    'custom': configure_db('customCache://10.10.10.10/something?else=1')
}

```

It's extensible, allowing third party adapters to plug in and extend the parsing. It does this by using a `config_from_url` static method to the base cache adapters and DB wrappers, which allows subclasses to adapt the result - i.e mysql parses some options from the querystring into specific configuration options.

The test suite is copied/adapted from dj-database-url as are a lot of the quirks parsing, so thanks to @kennethreitz for those.

To-Do:
- [ ] Documentation
- [ ] More full-suite tests, ensuring the resulting config actually *works*
- [ ] Add support for easy overriding config options via kwargs",orf,None,2017-05-27T21:55:59Z,2020-07-08T05:21:07Z
8561,Fixed dict_keys to list comparison that always evaluated as False.,"In Python 3, `dict.keys()` does not return a list, it returns a dict_keys. Comparison to a list will always evaluate as False. This can be verified with the REPL:

```python
>>> {'a': 1}.keys() == ['a']
False
```

Changed to coerce the dict to a list for comparison.",jdufresne,None,2017-05-27T21:22:25Z,2017-06-01T23:52:17Z
8560,Fixed #28248 -- Fixed password reset tokens being valid for 1 day longer than PASSWORD_RESET_TIMEOUT_DAYS.,https://code.djangoproject.com/ticket/28248,timgraham,None,2017-05-27T20:31:47Z,2017-09-22T19:34:50Z
8559,Corrected REPL example in docs for Python 3,"In Python 3, dict.keys() does not return a list, it returns dict_keys.
Further, Form.fields is an OrderedDict so it would be odict_keys. Coerce
the fields to a list in the example so the output is correct.",jdufresne,None,2017-05-27T20:16:53Z,2017-06-01T23:52:15Z
8558,Refs #28181 -- Corrected detection of GDAL 2.1 on Windows.,Follow up to a404f75f92971634c76330f3742261d33ccecca1.,timgraham,None,2017-05-27T17:23:16Z,2017-05-30T13:40:03Z
8557,Fixed #26823 - Connect the update_last_login function only when model contains last_login field.,"cc @timgraham 

Unfortunately, I was unable to make the test fail before moving the connection to the ready() function, because reloading the django.contrib.auth.models module triggers a lot of errors everywhere.",LEW21,None,2017-05-27T12:33:05Z,2017-05-29T21:57:15Z
8556,Update tutorial03.txt,"Fix a wrong template.render() call.
`        return HttpResponse(template.render(context, request))`
`        return HttpResponse(template.render(context))`",luoxzhg,None,2017-05-27T10:44:07Z,2017-05-27T11:07:10Z
8555,Fixed #28247 - Don't require last_login property on custom user models,,LEW21,None,2017-05-27T10:40:54Z,2017-05-27T12:33:26Z
8554,Аdd url preprocessor (as an idea to use template strings syntax in urls),"This pull request adds UrlPreprocessor to django.
UrlPreprocessor is a small wrapper around the standard ``url`` function, that lets you use template strings syntax in url definitions.
It makes you code clearer and helps you to avoid regular expression duplication.
Preprocessor that defines the standard function ``url`` has an empty dict as template context. In this case it is just a dummy wrapper around the old ``url`` function, so it won't have any side effects on definitions in other projects.
Additionally, some useful regexps are defined in variable ``DEFAULT_URL_CONTEXT``.",vmstarchenko,None,2017-05-27T07:35:25Z,2017-05-27T12:08:45Z
8553,"Stable/1.11.x I got a errorat at the begining of the Django tutorial, name 'HttpResponse' is not defined","I am learning Django via the tutorial. And When I create the 'polls' app I got a error.
I have made the changes to mysite/urls.py and polls/urls.py exactly as they demonstrate and I have run the server command: python3 manage.py runserver.
And I got the following error:

> Internal Server Error: /polls/
Traceback (most recent call last):
  File ""/usr/local/lib/python3.5/dist-packages/django/core/handlers/exception.py"", line 41, in inner
    response = get_response(request)
  File ""/usr/local/lib/python3.5/dist-packages/django/core/handlers/base.py"", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File ""/usr/local/lib/python3.5/dist-packages/django/core/handlers/base.py"", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File ""/home/demon/mycode/mysite/polls/views.py"", line 5, in index
    return HttpResponse(""Hello, world. You're at the polls index."")
NameError: name 'HttpResponse' is not defined
",const7,None,2017-05-27T02:44:23Z,2017-05-27T02:53:23Z
8552,Fix `manage.py` file command line execution,"Today I'm tutoring somebody as they're following the Django tutorial. As they navigated the docs they tried a `manage.py` command which returned a `bash: manage.py: command not found` error.

This commit updates the docs so `manage.py` is always run.",Matt-Deacalion,None,2017-05-26T09:16:18Z,2017-05-27T10:29:30Z
8551,Fixed #28239 in 1.10 -- Small documentation error,,fp4code,None,2017-05-25T16:24:27Z,2017-05-25T16:33:07Z
8550,Fixed #28239 in 1.11 -- Small documentation error,,fp4code,None,2017-05-25T16:23:39Z,2017-05-25T16:32:39Z
8549,Fixed #28239 in master -- Small documentation error,,fp4code,None,2017-05-25T16:23:02Z,2017-05-25T17:18:01Z
8548,Update libgdal.py for OSGeo4Win compatibility.,"This fixes an issue that was preventing GeoDjango from working on Windows machines with the version of  OSGeo4Win that is linked to in the docs. 

Ticket for reference:
https://code.djangoproject.com/ticket/28237",astarrh,None,2017-05-25T16:06:20Z,2017-05-27T12:16:32Z
8547,Fixed typo at advanced testing docs,"Hi!
This PR adds slash character to code comment at [Controlling creation order for test databases](https://docs.djangoproject.com/en/1.11/topics/testing/advanced/#controlling-creation-order-for-test-databases) section of Advanced testing docs.",dveselov,None,2017-05-25T09:16:58Z,2017-06-02T08:08:13Z
8546,Refs #16870 -- Doc'd that CSRF protection requires the Referer header.,"As requested in https://code.djangoproject.com/ticket/16870#comment:10
Discussed in https://groups.google.com/forum/#!topic/django-developers/ntkKUEr4sTM

Django forms break due strict referrer checking if `<meta name=""referrer"" content=""no-referrer"">` is used on the form page. Documented this behavior as a warning on docs/ref/csrf.txt and on
`csrf_failure` message if `DEBUG=True`.

I didn't suggested in docs the use of ""origin-when-cross-origin"" instead of ""no-referrer"" because some browsers (like [old Safari versions](https://bugs.webkit.org/show_bug.cgi?id=154588)) default to no-referrer if the [new spec](https://html.spec.whatwg.org/multipage/semantics.html#meta-referrer) values are used.

If messages can be improved somehow, please let me know.",fjsj,None,2017-05-24T23:46:22Z,2017-06-22T16:13:49Z
8545,Fixed #28224 - Use more specific exception testing in Django's tests,,Rajesh-Veeranki,None,2017-05-24T19:39:52Z,2017-05-25T12:19:02Z
8544,Fix typo in contrib/admin/actions.py,This PR fixes a typo of docstring in delete_selected method.,fujiyuu75,None,2017-05-24T18:26:15Z,2017-05-25T09:54:52Z
8543,Simplified schema.tests with assertForeignKeyExists()/assertForeignKeyNotExists().,As requested in [comment](https://github.com/django/django/pull/8140#discussion_r118139935) (see #8140).,felixxm,None,2017-05-24T11:05:17Z,2017-05-24T14:45:28Z
8542,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,,ghost,None,2017-05-24T07:15:28Z,2017-05-24T11:49:02Z
8541,Make RegexValidator's inverse_match logic clearer.,"The current logic dealing with the `inverse_match` flag is unnecessarily confusing, in my opinion. This change makes it easier to understand.",ghedsouza,None,2017-05-23T23:53:30Z,2017-05-25T18:19:20Z
8540,Fixed #28231 -- bulk_create: no conversion of objs to list,"Current implementation of QuerySet.bulk_create forcibly converts the iterable of objects to create(the `objs` parameter) to a list, regardless of the `batch_size` parameter. This uses newly created `utils.functional.batches` function to split objects into multiple batches with a max size of `batch_size` before iterating over the entire thing.

Some noteworthy changes:
1. This does have the caveat of splitting to batches before partitioning according to pk availability, so it has the chance of increasing the number of actually performed queries, each having less than batch_size objects. If desired, this may be mitigated by testing the type of objs or providing a default-off flag. In that case, more documentation is required.

2. Additionally, it now seems `_batched_insert` is unused (as most of it's functionality in now in batch_create), so I also suggest removing it.

3. To avoid the change of interface of bulk_batch_size (although it isn't used often), we can either add a parameter or move utils.functional.batches to QuerySet and make it a function dedicated to yielding batches, similarly to how [Collector.get_del_batches](https://github.com/django/django/blob/master/django/db/models/deletion.py#L155) is.

https://code.djangoproject.com/ticket/28231",nirizr,None,2017-05-23T21:22:48Z,2017-06-07T21:07:25Z
8539,Don't fail if `self.object` is not defined and keep searching for the…,… templates,piranna,None,2017-05-23T20:06:48Z,2017-06-05T19:04:30Z
8538,"ValueError when running ""makemigrations"" or ""migrate"" Stable/1.9.x","When i try to migrate or makemigrations i get this error: 
````
ValueError: ModelState.fields cannot refer to a model class - ""regiao.to"" does. Use a string reference instead.
````
It is strange because i don't have any to='something' parameter.

I'm not copying my models.py here because it's more than 2000 lines.

I'm using django 1.9 and these packages:
(and django-adminactions incorporated in the project without pip for translation porpouses)
````
Django==1.9
# pyKML==0.1.0
pymysql==0.6.1
wheel==0.22.0
openpyxl==1.8.3
unidecode==0.04.14
requests==2.3.0
gpxpy==0.9.8
geocoder==1.10.1 # git+https://github.com/DenisCarriere/geocoder.git#egg=geocoder
suds==0.4
gunicorn==19.4.5
newrelic==2.52.0.40
MySQL-python==1.2.5
dj-static==0.0.6
dj-database-url==0.3.0
restless==2.0.1
sqlparse==0.1.15
darts.util.lru==0.5
redis==2.7.6
mock==1.3.0
django-solo==1.1.0
django-test-without-migrations==0.4
django-nested-admin
django-modeladmin-reorder==0.2
django-rosetta

six==1.10.0
ratelim==0.1.6
argparse==1.2.1
click==6.3
decorator==4.0.9
funcsigs==0.4
pbr==1.8.1

xlsxwriter
xmltodict

numpy
````

Has anyone ever had an error like this?
",vitorcunha1995,None,2017-05-23T14:12:21Z,2017-05-23T14:44:27Z
8537,Fixed #28232 -- Made raster metadata readable and writable.,"Metadata is now accessible and editable on GDALRaster and GDALBand objects.
https://code.djangoproject.com/ticket/28232",yellowcap,None,2017-05-23T13:59:38Z,2017-06-07T15:48:33Z
8536,"Fixed #28229 -- Proper value of ""next"" template variable in LoginView","If LoginView was accessed directly, and ""next"" parameter is
specified neither in query string, nor in POST request body,
it shouldn't be replaced with the default REDIRECT_LOGIN_URL in
the template context. Otherwise it's not that easy to distinguish
that scenario from the one when user was redirected to this page
inside the template.

Meanwhile ""next"" is still replaced by an empty string if the URL is not
considered safe according to is_safe_url(), as it worked previously.",east825,None,2017-05-22T23:53:50Z,2017-06-14T09:52:05Z
8535,Refs #27859 -- Added DatabaseWrapper.display_name.,,felixxm,None,2017-05-22T17:35:43Z,2017-05-23T13:13:11Z
8534,Fixed #28212 -- Allowed customizing the port that LiveServerTestCase uses.,"This PR is based on ticket 28212. It allows the caller to specify which port
LiveServerTestCase listens on. This is useful in situations where you have to
expose ports before runtime (e.g. docker containers), which makes binding to
port 0 unusable.",coredumperror,None,2017-05-22T17:23:13Z,2017-05-30T22:40:31Z
8533,Refs #28207 -- Fixed contrib.auth.authenticate() if 'backend' is in the credentials.,"The Django Python Social Auth app passes `'backend'` as keyword argument
to `authenticate` [1], where it then causes a `TypeError`:

> TypeError: _authenticate_with_backend() got multiple values for argument 'backend'

This is a regression caused in https://github.com/django/django/commit/3008f30f.

Traceback:

    …
    File ""…/app/app.py"", line 375, in validate
      user = oauth2_user = request.backend.do_auth(attrs['access_token'])
    File ""…/Vcs/social-core/social_core/utils.py"", line 252, in wrapper
      return func(*args, **kwargs)
    File ""…/Vcs/social-core/social_core/backends/oauth.py"", line 409, in do_auth
      return self.strategy.authenticate(*args, **kwargs)
    File ""…/Vcs/social-app-django/social_django/strategy.py"", line 115, in authenticate
      return authenticate(*args, **kwargs)
    File ""…/Vcs/django/django/contrib/auth/__init__.py"", line 70, in authenticate
      user = _authenticate_with_backend(backend, backend_path, request, **credentials)
    TypeError: _authenticate_with_backend() got multiple values for argument 'backend'

1: https://github.com/python-social-auth/social-app-django/blob/b956d3f47aa01247258e8294a13cc806f15a5a6e/social_django/strategy.py#L111-L115",blueyed,None,2017-05-22T16:01:34Z,2017-05-22T17:06:39Z
8532,[1.11.x] Fixed #28230 -- Allowed DjangoJsonEncoder to serialize CallableBool.,,vinayinvicible,None,2017-05-22T15:26:06Z,2017-05-23T05:19:26Z
8531,Fixed #27999 -- Added test client support for HTTP 307 and 308 redirects.,"For [#27999](https://code.djangoproject.com/ticket/27999)

Not sure about the `getattr()` inside `_handle_redirects`, the other way to do this would be to pass in the method explicitly from each callsite. ",orf,None,2017-05-22T10:51:55Z,2018-02-06T15:28:30Z
8530,"Two changes to Writing your first Django app, part 5.",I was revisiting the tutorial for the first time in a while and a couple of small things jumped out at me.,erictheise,None,2017-05-22T00:43:18Z,2017-06-06T16:16:54Z
8529,Refs #16850 -- Removed obsolete simplejson support  in JSON serializer.,cpython's json version is 2.0.9 so this line is never used.,timgraham,None,2017-05-21T01:51:45Z,2017-05-21T02:09:16Z
8528,Fixed #24747 -- Allowed transforms in QuerySet.order_by(),"This is a PR to fix #24747, and other related tickets. It allows order_by to include results of arbitrary transforms.

This works by making setup_joins understand transforms and return an additional value that converts a fiel object to something the SQL compiler can understand that takes the transforms into account.

Practically, this allows order_by and distinct on JSONField, HStoreField and ArrayField.",MatthewWilkes,None,2017-05-20T22:11:52Z,2018-02-11T00:35:32Z
8527,Fixed #28226 -- Removed obsolete use of ''.join() pattern.,"Fixes [#28226](https://code.djangoproject.com/ticket/28226).

I removed all references of `.join()` with static arguments and replaced them with concatenation.

There is one largeish statement that's a bit big, but otherwise I think they look better. I also fixed up two cases of `map` and `filter` with generator expressions, I can leave those out and move them as a different MR as it's a bit out of scope.",orf,None,2017-05-20T21:38:05Z,2018-01-05T17:23:40Z
8526,Fixed #28227 -- Allowed importing BaseRangeField and RangeWidget from contrib.postgres.forms.,Fixes https://code.djangoproject.com/ticket/28227,orf,None,2017-05-20T21:08:44Z,2018-08-09T23:19:38Z
8525,Updated various links in docs to avoid redirects.,,claudep,None,2017-05-20T15:53:09Z,2017-05-22T17:30:04Z
8524,Fixed #28221 -- Fixed plural fallback translations in JavaScriptCatalog view,Thanks Waldemar Kornewald for the report and initial patch.,claudep,None,2017-05-20T11:32:03Z,2017-05-25T20:48:27Z
8523,Made migration docs use single quotes consistently.,,alimony,None,2017-05-20T09:58:12Z,2017-05-22T16:06:50Z
8522,Point Dive into Python links to python3 site,"The old site handles python2, and is thus no longer relevant for Django.
Also I pointed the search path links to the proper sections.",mbeijen,None,2017-05-19T21:18:31Z,2017-05-20T13:32:36Z
8521,Fixed #18332 - generic function for db version,"I took the old patch from https://code.djangoproject.com/ticket/18332 and brushed it up a bit. To the original SQLite implementation I added PostgreSQL, MySQL and Oracle implementations.

We also no longer return a `namedtuple` but a `dict` instead because it feels more in line with the rest of Django.

The thing I'm unsure about is if it would not be better to have the 'vendor' be the 'vendor' and a 'type' that can indicate the type. For instance for MySQL there is MySQL and MariaDB with each their own version numbering schemes.

-----

This provides an option `get_backend_info()` that allows you to retrieve the
database type (vendor) and version, as a tuple.

    >>> from django.db import connection
    >>> connection.backend_info()
    {'vendor': 'postgresql', 'version': (9, 6, 2)}
",mbeijen,None,2017-05-19T21:01:22Z,2019-06-06T11:44:41Z
8520,Fixed #28226: Replaced obsolete use of join() with concatenation.,,ubernostrum,None,2017-05-19T18:54:49Z,2017-05-21T01:40:50Z
8519,Fixed #28210 -- Fixed Model._state.adding on MTI parent model after saving child model.,https://code.djangoproject.com/ticket/28210,timgraham,None,2017-05-19T16:48:09Z,2017-05-20T01:11:30Z
8518,Fixed #28222 - Allow non-field model property attributes in defaults passed update_or_create()/get_or_create(),"Allow the `defaults` argument to `update_or_create()`/`get_or_create()` to contain property attributes. The added tests further demonstrate the issue. 

For context, in 1.11 the `defaults` argument passed to `update_or_create()` and `get_or_create()` is validated and non-fields are reported as `FieldErrors` (introduced by #7255). There is an exception made for `pk` (added in #7338) but I believe it should apply to all `_meta._property_names` for the creation behavior to be consistent with `Model.create` and better backwards compatibility.

One thing to note @francoisfreitag, if `self.model._meta._property_names` always has `pk` then the param test can be made simpler by not checking for `pk` explicitly. 

https://code.djangoproject.com/ticket/28222

",amykyta,None,2017-05-19T11:28:24Z,2017-05-27T17:01:53Z
8517,Fixed #28211 -- Stopped combining Q objects if either side is falsey.,"Perhaps a good workaround for [#28211](https://code.djangoproject.com/ticket/28211) is to just not OR/AND Q objects unless each side is truthy.

`Q() | Q(x=1)` can be reduced down to `Q(x=1)`, and `Q() & Q(x=1)` can be reduced to just `Q(x=1)` (as far as I can tell?), so we could just reduce both these cases down to `Q(x=1)` in the `Q._combine()` function.",orf,None,2017-05-18T18:07:02Z,2017-05-27T17:02:57Z
8516,Made JavaScriptCatalogHonor honor plural number.,,claudep,None,2017-05-18T13:03:39Z,2017-05-20T11:25:12Z
8515,Fix docs build with Sphinx 1.6,"I was the author of sphinx-doc/sphinx#3666, which broke Sphinx docs build. This pull request should fix the build errors and warnings.

With it, #8514 should be also not needed.",mitya57,None,2017-05-17T10:46:11Z,2017-07-25T09:48:29Z
8514,Pin Sphinx version to fix docs build,Seems that the next version of Sphinx breaks the doc build by removing `SmartyPantsHTMLTranslator`. This pins to the last version that worked until someone can modify the code.,jschneier,None,2017-05-17T05:03:09Z,2017-05-17T15:40:37Z
8513,Fixed #28102 -- Add example for DIRS in TemplatesSetting,"Add example to put the full path for DIRS in TemplatesSetting

Ticket: https://code.djangoproject.com/ticket/28102",Windsooon,None,2017-05-17T03:19:32Z,2017-06-05T21:26:49Z
8512,Stable/1.7.x,"হ্যালো আমি উবুন্টু ১৪ Django setup করতে পারছি না। আপনাদের official document গত দুই বছর কোন হালনাগাদ করেন নাই!


hello i am not able to install Django into ubuntu 14 32 bit but fail. now i need a update installation quick start to setup this 1st time into my system :) ",sarkartanzil,None,2017-05-16T23:41:05Z,2017-05-16T23:51:28Z
8511,Fixed #28206 -- Fixed RawQuerySet.resolve_model_init_order() to handle features.uppercases_column_names.,Ticket [28206](https://code.djangoproject.com/ticket/28206).,felixxm,None,2017-05-16T18:59:42Z,2017-05-18T17:14:09Z
8510,Fixed #28221 -- Fixed plural fallback translations in JavaScriptCatalog view,"We've hit a bug where our translators changed a translation in the English djangojs.po files and suddenly all other languages' translations were overridden with the English (i.e. fallback) translation.
https://code.djangoproject.com/ticket/28221",wkornewald,None,2017-05-16T17:18:28Z,2017-05-22T16:13:18Z
8509,Fixed #28209 Fixed year out of range bug in generic date view mixins.,"Added exception handling to YearMixin and MonthMixin in generic.dates
to return 404 when trying to browse years greater than 5 digits since
datetime module will throw an year out of range ValueError.",aditbiswas1,None,2017-05-15T19:49:25Z,2017-05-30T17:32:49Z
8508,Fixed #28209 Fixed year out of range bug in generic date view mixins.,"Added exception handling to YearMixin and MonthMixin in generic.dates
to return 404 when trying to browse years greater than 5 digits since
datetime module will throw an year out of range ValueError.",aditbiswas1,None,2017-05-15T19:02:42Z,2017-05-15T19:47:40Z
8507,Refs #27996 -- Skipped RandomUUID test on PostgreSQL 9.3.,https://code.djangoproject.com/ticket/27996,timgraham,None,2017-05-15T13:08:59Z,2017-05-15T13:26:43Z
8506,Add comment to `cached_property` decorator.,"This line is doing something very clever but also quite odd and not necessarily obvious at first glance, so it deserves a comment.",adamalton,None,2017-05-15T11:33:27Z,2017-05-15T13:15:25Z
8505,Fixed #28207 -- Fixed contrib.auth.authenticate() if multiple auth backends don't accept a request.,"The easiest fix would be to just copy the contents of `credentials` at the top of the loop, but I think it is worthwhile breaking out a helper function.

IMHO the loop's body is complicated enough to warrant a new function, aligns the Single Responsibility Principle and avoids introducing an arguably ugly dictionary copy.

",sztamas,None,2017-05-14T22:46:34Z,2017-05-15T12:15:42Z
8504,Update inspectdb.py,,realsby,None,2017-05-14T21:25:52Z,2017-05-14T21:42:28Z
8503,Fixed #28203 -- Ignored initial connection configuration queries in assertNumQueries,Ticket: https://code.djangoproject.com/ticket/28203,francoisfreitag,None,2017-05-14T20:04:01Z,2017-05-18T16:44:19Z
8502,Fix - Django stores empty files when it's used with S3Boto3Storage or S3BotoStorage,"[We been using Amazon S3 to store Django site's static and media files](https://www.caktusgroup.com/blog/2014/11/10/Using-Amazon-S3-to-store-your-Django-sites-static-and-media-files/) for years now, and when we upgraded to Django 1.11 we started to see some empty files.

We debugged the issue and it seems that `StaticFilesStorage` is trying to re-save the file without resetting its pointer which led to an empty file.

This could be solved on `S3Boto3Storage` level, but from the attached image you can see that Django is storing multiple versions of the same file which is another related issue. ![multiple versions of base.css with different hashnames](https://cloud.githubusercontent.com/assets/493669/26035982/2a3c0f26-38de-11e7-9ee7-7d52953d1378.png)
",awartani,None,2017-05-14T16:54:14Z,2017-10-20T17:18:49Z
8501,Refs #28196 -- Removed mentions of bytestrings for EmailMessage,,claudep,None,2017-05-13T21:02:43Z,2017-05-14T17:47:56Z
8500,Create PULL_REQUEST_TEMPLATE.md for 1.11.x,"This is to ensure all PRs are made to a high quality. Apologies for not using git: this repo takes quite a while to clone :P
Essentially exactly the same as #8499 but for the up-to-date branch.
I think this will help the community and enforce high code standards.",monkeyboy2805,None,2017-05-13T17:46:41Z,2017-05-13T21:25:46Z
8499,Create PULL_REQUEST_TEMPLATE.md for master,This is to ensure all PRs are made to a high quality. Apologies for not using git: this repo takes quite a while to clone :P,monkeyboy2805,None,2017-05-13T17:43:57Z,2017-05-13T21:27:54Z
8498,Refs #27859 -- Refactored BaseDatabaseValidation to use check_field_type().,As requested in [comment](https://github.com/django/django/pull/8471/files#r116343787) (see #8471).,felixxm,None,2017-05-13T11:01:26Z,2017-05-14T16:35:27Z
8497,Fixed typo in zh_Hans transalation,,sciooga,None,2017-05-13T07:47:24Z,2017-05-13T13:29:07Z
8496,Do not touch hash-designated files which already exist at the destination storage,"It seems a little silly that, even though local file copies are used to avoid the need to fetch files from remote destinations, files still get replaced even when they already exist.

In example, a remote storage implementation like S3 gets queried for the file, the file gets removed, and then replaced. With the boto3 library, this means touching the file initially (HEAD), a second request to DELETE the file, and yet a third to PUT the new file. Since filenames for hashed files are computed based on the contents of the files, this seems like an unnecessary 3 requests for every time a single static file get processed. 

Since a matching hash provides file integrity verification, I propose that the logic for copying hash-designated files be skipped all together.

Ticket available here - https://code.djangoproject.com/ticket/28200",michalkrupa,None,2017-05-12T21:21:56Z,2017-05-13T02:29:55Z
8495,Fixed #28197 -- Fixed introspection of index field ordering on PostgreSQL.,https://code.djangoproject.com/ticket/28197,Mactory,None,2017-05-12T16:02:45Z,2017-05-15T12:59:25Z
8494,Added documentation for OSMWidget.default_lat and OSMWidget.default_lon,As discussed with @timgraham in #8492.,dbrgn,None,2017-05-12T15:25:34Z,2017-05-14T00:18:10Z
8493,Simplified test for OSMWidget.default_lon/lat.,The original assertions were added in https://github.com/django/django/pull/2072. They don't make much sense to me.,timgraham,None,2017-05-12T13:49:47Z,2017-05-14T17:33:51Z
8492,Fixed #28195 -- Make OSMWidget zoom level configurable,https://code.djangoproject.com/ticket/28195,dbrgn,None,2017-05-12T12:42:35Z,2017-05-14T20:22:14Z
8491,Fixed #27899 -- Added phrase search query for postgres full text search,https://code.djangoproject.com/ticket/27899,andriisoldatenko,None,2017-05-11T18:56:40Z,2018-09-14T18:13:40Z
8490,Fixed #28192 -- Prevented positional parameters for most form field types.,http://code.djangoproject.com/ticket/28192,claudep,None,2017-05-11T18:09:42Z,2017-06-03T15:48:17Z
8489,Fixed #28188 -- Fixed crash when pickling model fields.,"Regression in d2a26c1a90e837777dabdf3d67ceec4d2a70fb86.

Thanks Adam Alton for the report and test, and Adam Johnson for
suggesting the fix.",timgraham,None,2017-05-11T15:59:58Z,2017-05-12T01:05:17Z
8488,Fixed #28056 - Reverse migration for model rename with cross-app ForeignKey fails,"During the renaming of model. To maintain the migration state of related field it is necessary to include AlterField migration.

Ticket: https://code.djangoproject.com/ticket/28056",gaurav8297,None,2017-05-11T11:47:44Z,2017-07-27T18:02:22Z
8487,Fixed #28275 -- Added more hooks to SchemaEditor._alter_field().,"Note: As annoying as the latter is, the streamlining is kinda required
to have the model everywhere as opposed to just the table name.",apollo13,None,2017-05-11T08:36:14Z,2017-06-06T15:08:40Z
8486,Fixed #28170 -- Fixed file_move_safe() crash when moving files to a CIFS mount.,https://code.djangoproject.com/ticket/28170,djackson-saa,None,2017-05-10T15:30:44Z,2017-06-01T11:42:09Z
8485,Decreased max_length for char fields unless absolutely needed.,,apollo13,None,2017-05-10T14:57:01Z,2017-05-10T15:33:46Z
8484,Fixed db backend discovery in tests.,Not all database backends have dots in them at all ;) Regex also seemed a bit like overkill,apollo13,None,2017-05-10T12:34:06Z,2017-05-10T18:08:53Z
8483,Fixed #28190 -- Clarifed how include/extends treat template names.,"I feel it is worth re-iterating that the example is using an absolute path and folks should prefix ""./"" if the template being referenced is in the same directory as the template that is referencing it.

https://code.djangoproject.com/ticket/28190",gitanupam,None,2017-05-10T07:45:38Z,2017-06-03T12:17:19Z
8482,[1.11.x] Refs #28160 -- Skipped a GeoManager test if not using a GIS database backend.,The test errors if GDAL isn't installed.,timgraham,None,2017-05-09T13:36:20Z,2017-05-09T14:05:11Z
8481,Fixed #28188 - fixed model field pickling.,"Regression in d2a26c1a90e837777dabdf3d67ceec4d2a70fb86

https://code.djangoproject.com/ticket/28188",adamalton,None,2017-05-09T12:53:59Z,2017-05-15T09:46:59Z
8480,Fix model field pickling,This fixes https://code.djangoproject.com/ticket/28188,adamalton,None,2017-05-09T12:51:53Z,2017-05-09T12:53:27Z
8479,Refs #27795 -- Replaced force_text() with str() in contrib.messages,,claudep,None,2017-05-09T07:12:37Z,2017-05-10T20:41:35Z
8478,Refs #22397 -- Removed model in test cleanup,Fixes an issue when running tests with `--keepdb`,MarkusH,None,2017-05-08T22:58:30Z,2017-05-09T09:31:34Z
8477,Fixed #28184 -- Allowed passing a callable storage to FileField.,"Adds the ability to pass a callable as the storage param of FileField, and testing for this new ability

See [ticket 28184](https://code.djangoproject.com/ticket/28184#ticket) for details.

Signed-off-by: miigotu <miigotu@gmail.com>",miigotu,None,2017-05-08T21:51:55Z,2020-04-08T12:15:23Z
8476,Fixed #28144 -- Added FileSystemStorage.OS_OPEN_FLAGS to allow customization.,"Moves the flags passed to `os.open` in `FileSystemStorage._save` to a class attribute, `FileSystemStorage. OS_OPEN_FLAGS`. Enables subclassers to control the flags.

See [ticket 28144](https://code.djangoproject.com/ticket/28144) for details.",jonprindiville,None,2017-05-08T19:34:08Z,2018-06-29T20:16:08Z
8475,Renamed django.views.i18n test cases,,claudep,None,2017-05-08T16:21:33Z,2017-05-08T17:30:42Z
8474,Fixed #28181 -- Added detection for GDAL 2.1 and 2.0.,https://code.djangoproject.com/ticket/28181,timgraham,None,2017-05-08T14:32:22Z,2017-05-08T15:01:19Z
8473,Fixed #28178 -- Changed contrib.gis to raise ImproperlyConfigured if gdal isn't installed.,https://code.djangoproject.com/ticket/28178,timgraham,None,2017-05-08T14:02:52Z,2017-05-08T16:26:43Z
8472,Fixed #28180 -- Numbered queries in assertNumQueries() failure output.,,claudep,None,2017-05-08T07:54:47Z,2017-05-20T13:28:34Z
8471,Fixed #27859 -- Ignored db_index for TextField/BinaryField on Oracle and MySQL.,Ticket [27859](https://code.djangoproject.com/ticket/27859).,felixxm,None,2017-05-08T07:01:57Z,2017-05-23T15:03:46Z
8470,Fixed #13091 — Performs unique together check if any constraint field presented in form,"This is probably just a part of solution:
- it makes appear hidden fields (non-presented in form) in an error message which may be undesirable
- generic relation fields should probably refer to `content_object` in a message (see 6243e9b). This may be confusing to user, because ""this Content type, Object id and Foo already exists"" error doesn't help at all.

Both of them can be fixed by filtering them out in a message, but Model doesn't really know if they are presented in the form for real.",byashimov,None,2017-05-07T17:01:32Z,2018-07-25T21:02:29Z
8469,Adding new shortcut to get object if exist else return None,Adding a new shortcut in shortcuts.py to get an object or None in case that object does not exist.,nauman3128,None,2017-05-07T06:37:42Z,2017-05-07T08:17:02Z
8468,Fixed #28104 -- Prevented @condition decorator from setting ETag/Last-Modified headers for non-safe requests.,https://code.djangoproject.com/ticket/28104,jschneier,None,2017-05-07T02:47:27Z,2017-06-06T19:37:47Z
8467,Fixed #29227 -- Allowed BooleanField to be null=True.,https://code.djangoproject.com/ticket/29227,timgraham,None,2017-05-06T18:43:20Z,2018-03-20T17:35:11Z
8466,Fixed #28148 -- Documented ImageField behaviour change,Since 1.11 images names are validated.,xrmx,None,2017-05-06T17:24:35Z,2017-05-11T23:39:50Z
8465,Fixed #28175 -- Fixed __in lookups on a foreign key when using the foreign key's parent model as the lookup value.,https://code.djangoproject.com/ticket/28175,timgraham,None,2017-05-05T17:43:38Z,2017-05-05T22:35:12Z
8464,Added comments to contrib.sitemaps.index() view.,"Really minor comments and newlines to indicate original authors' intentions and give the code a bit of structure.

Wasted a whole workday, sorting out, how sitemaps work. Want to help make it more explicit.",BurkovBA,None,2017-05-05T16:01:16Z,2017-05-28T00:50:35Z
8463,Fixed reference to wrong number of args in the docs,"`widget` is easy to overlook, too, since it comes after the example block.",hop,None,2017-05-05T14:39:05Z,2017-05-08T09:59:21Z
8462,Fixed a misleading sentence in the docs,The `widget` argument is below an example box and not obvious to find.,hop,None,2017-05-05T12:23:09Z,2017-05-05T14:34:15Z
8461,Made runtests.py run gis_tests only when using a GIS database backend.,"This eases other changes like refs #28160 (https://github.com/django/django/pull/8451). Otherwise, if GDAL isn't installed, it's difficult to prevent a GDAL exception when running Django's test suite for non-GIS databases.",timgraham,None,2017-05-04T14:40:04Z,2017-05-05T00:46:34Z
8460,Fixed broken links to Oracle docs.,,felixxm,None,2017-05-04T11:35:11Z,2017-05-04T16:01:47Z
8459,Note regarding multi-table inheritance field names,"The warning raised in this case (models.E006) is a bit obscure, so a note in the docs seems appropriate.

For reference, the error message is

    The field 'restaurant' clashes with the field 'restaurant' from model 'mymodel.Place'.
",gregplaysguitar,None,2017-05-04T04:50:44Z,2017-06-03T13:49:45Z
8458,Fixed #28166 -- Fixed Model _state.db on parent MTI object after saving child object.,https://code.djangoproject.com/ticket/28166,timgraham,None,2017-05-03T14:42:32Z,2017-05-03T16:31:31Z
8457,Fixed #28167 -- Fixed cache backend's SessionStore.exists() if session_key is None,https://code.djangoproject.com/ticket/28167,timgraham,None,2017-05-03T14:10:30Z,2017-05-03T16:58:16Z
8456,Fixed #28165 -- Allow FileExtensionValidator's allowed_extensions to be given in non-lower case,"Trac ticket: [#28165](https://code.djangoproject.com/ticket/28165)

Format the allowed_extensions to lower case, since that is also done to the value.name to be validated.
And enable equality when allowed extensions are not provided in the same order.
Also add additional test cases.
",153957,None,2017-05-03T10:13:18Z,2017-06-06T09:04:11Z
8455,Fixed #28164 -- Improved float conversions in DecimalField.to_python,,claudep,None,2017-05-03T09:42:30Z,2017-05-09T07:32:28Z
8454,Fixed broken link to QUnit docs.,,felixxm,None,2017-05-03T06:47:42Z,2017-05-03T11:34:39Z
8453,Fixed #28161 -- Converted arrays of citext to the correct Python datatype.,https://code.djangoproject.com/ticket/28161,charettes,None,2017-05-03T05:28:06Z,2017-05-04T13:35:33Z
8452,Fixed #28163 -- Made AUTH_PASSWORD_VALIDATORS in startproject setting fit in under 80 cols.,"This is the only change needed to make most people's settings.py PEP8 compliant
https://code.djangoproject.com/ticket/28163
",yoniLavi,None,2017-05-03T02:57:58Z,2017-05-03T12:04:57Z
8451,Fixed #28160 -- Prevented hiding GDAL exceptions.,https://code.djangoproject.com/ticket/28160,timgraham,None,2017-05-03T02:33:11Z,2017-05-05T06:11:29Z
8450,Fixed #28157 -- Fixed choice ordering in form fields with grouped and non-grouped options.,https://code.djangoproject.com/ticket/28157,timgraham,None,2017-05-02T17:20:08Z,2017-05-03T11:22:09Z
8449,Add WEEKDAY support into queries,"Adding WEEKDAY into queries functionality. Now you can use __week_day_index for querying based on weekday. Python native datetime has weekday function. Now you can easily can write queries like 

```
current_time = datetime.utcnow()
temp = MyModel.objects.get(time__week_day_index=current_time.weekday())
```
  ",alimohammad1995,None,2017-05-02T11:44:55Z,2017-05-31T23:40:53Z
8448,Fixed #28159 -- Fixed crash in BaseInlineFormSet._construct_form() when using save_as_new.,See TRAC: https://code.djangoproject.com/ticket/28159,kavdev,None,2017-05-02T00:05:17Z,2017-05-03T15:05:26Z
8447,Fixed #28095 -- Doc'd Widget.build_attrs() signature change in Django 1.11.,https://code.djangoproject.com/ticket/28095,killerbat00,None,2017-05-01T21:12:51Z,2017-05-06T18:47:00Z
8446,Fixes bug causing 404 response due to Greek translation error,"The **Greek** translation of the *help_text* in *password* field of **UserChangeForm** class (file: contrib/auth/forms.py), causes a 404 error when trying to change the password of a user, when following the available link.
By the way, I fixed a small typo, also!",ioagel,None,2017-05-01T17:39:40Z,2017-05-02T06:00:31Z
8445,Fixed #28081 -- Make conditional_content_removal() compliant with RFC…,…7230.,joaosilva22,None,2017-05-01T11:33:02Z,2017-05-09T18:55:05Z
8444,Fixes #28085 -- Added plural forms header to EN po file.,Ticket: https://code.djangoproject.com/ticket/28085,ChillarAnand,None,2017-05-01T09:05:55Z,2017-05-05T21:07:56Z
8443,Fixed #28095 -- Document Widget.build_attrs() and its signature change,"Document the Widget.build_attrs() method in the Widget documentation. Also update
1.11 release note to document the change in the method signature to
Widget.build_attrs() in 1.11 that removes kwargs.

The documentation builds without warnings or errors.",killerbat00,None,2017-04-30T21:14:27Z,2017-05-01T21:12:14Z
8442,Fixed #28142 -- Prevented is_safe_url from crashing when provided an invalid IPv6 URL.,"As per https://code.djangoproject.com/ticket/28142

Please let me know if this doesn't actually match the requirements or if a separate test is needed for this.",UmanShahzad,None,2017-04-29T23:17:43Z,2017-09-30T12:17:47Z
8441,Fixed #28107 -- Disabled grouping of selected primary keys for unmanaged models.,"The grouping caused an issue with database views as PostgreSQL's query planer
isn't smart enough to introspect primary keys through views. Django doesn't
support database views but documents that unmanaged models should be used to
query them.

Thanks powderflask for the detailed report and investigation.",charettes,None,2017-04-29T19:13:13Z,2017-05-12T00:17:20Z
8440,Refs #27795 -- Reworked get_or_create test erroneously mixing bytes and str.,"As `CharField.to_python()` now always calls str(), assigning a bytes object to a CharField is no longer correct usage. Doing so results in a  runtime warning:

```
django/db/models/fields/__init__.py:1061: BytesWarning: str() on a bytes instance
```

To rework the test, use a unique constraint violation to trigger the database error instead.

Warning introduced in commit 301de774c21d055e9e5a7073e5bffdb52bc71079.",jdufresne,None,2017-04-29T18:36:33Z,2017-05-27T18:29:23Z
8439,Fixed #28105 -- Prevent illegal dict construction in BaseGeometryWidget.,,dyve,None,2017-04-29T13:39:59Z,2017-07-12T05:59:52Z
8438,Fixed typo in docs/topics/auth/default.txt.,Login -> LoginView,shinriyo,None,2017-04-29T08:49:16Z,2017-04-29T11:00:33Z
8437,Easier way to populate test databases for parallel tests,"https://code.djangoproject.com/ticket/28153#ticket

 Although Django makes very easy for one to extend django.test.runner.DiscoverRunner , it's setup_databases() does too much.

Currently, it

    creates all the test databases (for single thread unit tests)
    duplicates all the test databases (in case of parallel unit tests) 

In case I am running not running tests in parallel, I can just populate the DB after running unit tests without any issues.

But if I care about my time and want to run tests in parallel, I can either:

a) populate my data after setup_databases() is executed, once for each thread of the parallel tests, which is slow
b) get my hands dirty and reimplement setup_databases()

I propose (and I am sending the code to do so) a better solution. We just have to break setup_databases() in 3 functions:

DiscoverRunner.prepare_databases()
DiscoverRunner.populate_databases() # noop by default
DiscoverRunner.duplicate_databases_if_necessary()

The idea is quite simple: in order to be backward compatible, setup_databases() , will still exist but only call three functions above in that order.

The first function will create all the test databases necessary for non parallel tests to run.

populate_databases() , which should be a no op, can be overwritten by the user who extends django.test.runner.DiscoverRunner so his/her data can be populated

Afterwards, all the test DBs are copied as many times as necessary in case parallel tests are run via DiscoverRunner.duplicate_databases_if_necessary()

I believe this change on Django will have no downside, will be backward compatible and help people who needs to populate real data on the DB for their tests.",marcosdiez,None,2017-04-29T00:21:02Z,2017-05-03T01:02:52Z
8436,Fixed #28152 -- Changed SetSerializer to serialize to set literals.,"Creating this PR to resolve the discussion in #8432. The discussion revealed that the migration serializer renders sets as `set([...])`. When searching for code that could be converted to use set literals or set comprehension, these auto-generated code fragments surfaced.

<https://code.djangoproject.com/ticket/28152>",jdufresne,None,2017-04-28T23:40:29Z,2017-05-27T18:29:25Z
8434,Fixed #28147 -- Fixed loss of parent pk in child model when saving child after parent.,Fix for https://code.djangoproject.com/ticket/28147#ticket,ErwinJunge,None,2017-04-28T09:48:06Z,2018-07-21T21:58:08Z
8433,"Revert ""Refs #20939 -- Moved subquery ordering clearing optimization to the __in lookup.""","This reverts commit e62ea0bb9cbb54c1eef848871fe3eab2bad268dc.

This ended up breaking multi-column __in lookups and _meta.order_wrt on Oracle.

Looks like I somehow didn't run #8417 against Oracle... I have an idea of how to fix this but in the mean time I want to avoid making Oracle CI unusable.",charettes,None,2017-04-28T05:36:07Z,2017-04-28T13:31:39Z
8432,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",<https://code.djangoproject.com/ticket/23968>,jdufresne,None,2017-04-28T04:17:07Z,2017-06-01T23:52:15Z
8431,Refs #16187 -- Stopped compiling query compilers during lookup rhs processing.,"Lookup [right hand side processing was compiling query compilers](https://github.com/django/django/blob/620e9dd31a2146d70de740f96a8cb9a6db054fc7/django/db/models/lookups.py#L92-L99) which [happened to work by chance](https://github.com/django/django/blob/620e9dd31a2146d70de740f96a8cb9a6db054fc7/django/db/models/sql/compiler.py#L379) as [`SQLCompiler` defines a `as_sql()`](https://github.com/django/django/blob/620e9dd31a2146d70de740f96a8cb9a6db054fc7/django/db/models/sql/compiler.py#L408) method with two optional parameters albeit it doesn't expect the same type of arguments.

I'm not sure how I can write a regression test for this as `SQLCompiler.as_sql()` first parameter `with_limits` was being passed a `compiler` object which always evaluated to a truthy value just like the default and a `connection` as the second argument which only had incidence on column aliases.

I figured that out when working on #8418 and wondering why `with_col_aliases` was a connection instance.",charettes,None,2017-04-28T01:45:48Z,2017-05-01T04:42:24Z
8430,Fixed #28062 -- Allowed PostgreSQL users to disable server-side cursors,"Ticket: https://code.djangoproject.com/ticket/28062

When a connection pooler is set up in transaction pooling mode, queries
relying on server-side cursors will fail. There was no way for users to
disable the use of server-side cursors.

This commit allows to opt-in for server-side cursors on a per-query
basis and to manage server-side cursors usage per-database.

The ticket suggests to allow three values for `chunked_fetch`:
- `None`: Use the database setting
- `False`: Do not use a server-side cursors
- `True`: Force the use of a server-side cursors.

IMHO, `None` is not necessary. I prefer the simpler scheme where:
- the use of server-side cursors is disabled for a connection if the setting is `False`.
- when the setting is `True`, then users and library code can opt-out by using `chunked_fetch=False`.

I believe auto opt-in server-side cursors is acceptable, since it's a memory improvement in most case. The issue here is that server-side cursors cannot be used with transaction pooling, which is global to a connection. Setting `ENABLE_SERVER_SIDE_CURSORS` to `False` for the whole connection makes sense and should disable the use of server-side cursors regardless of the `chunked_fetch` kwarg.

For use cases where server-side cursors are not desirable, the user / library-code can now turn them off explicitly using `chunked_fetch=False`.

Am I missing a use case?",francoisfreitag,None,2017-04-27T17:32:51Z,2017-05-06T16:10:58Z
8429,Removed obsolete django.test.utils.strip_quotes().,Django's test runners no longer discover doctests.,timgraham,None,2017-04-27T16:46:23Z,2017-04-28T00:32:17Z
8428,Replaced django.utils.getargspec() with inspect.getfullargspec().,Required for #8410,alexallah,None,2017-04-27T16:40:52Z,2017-04-28T00:42:50Z
8427,Refs #6767 -- Added test for fetching decimal values without rounding error on Oracle.,,felixxm,None,2017-04-27T15:44:41Z,2017-04-28T04:08:51Z
8426,"Fixed #28130 -- Fixed formset min_num validation with initial, unchanged forms.","Regression in f5c6295797b8332134fd89e0209a18a1d1d45e0c.
https://code.djangoproject.com/ticket/28130",timgraham,None,2017-04-27T15:43:38Z,2017-04-28T13:33:04Z
8425,Moved WidgetTestCase to django.test.testcases.,It'll be used in other test modules (e.g. https://github.com/django/django/pull/8401).,timgraham,None,2017-04-27T14:04:58Z,2017-05-01T12:11:45Z
8424,Refs #23919 -- Removed unused django.test.utils.str_prefix(),Unused since 289fc1bfa54af563d17549ade8d77553711453a1,timgraham,None,2017-04-27T12:33:48Z,2017-04-27T14:07:02Z
8423,Refs #27795 -- Kept format setting type in Javascript and JSON i18n views,,claudep,None,2017-04-27T08:55:30Z,2017-05-08T17:47:42Z
8422,Refs #23919 -- Removed force_text() in Python deserializer needed only on Python 2.,,claudep,None,2017-04-27T07:41:53Z,2017-04-27T12:06:54Z
8421,Refs #27795 -- Replaced force_text() with str() in feed generators,,claudep,None,2017-04-27T07:32:30Z,2017-04-27T07:51:32Z
8420,Fixed #28138 -- Used output type handler instead of numbersAsStrings on Oracle ​cursor.,Ticket [28138](https://code.djangoproject.com/ticket/28138).,felixxm,None,2017-04-27T06:50:08Z,2017-04-28T14:32:06Z
8419,Replaced set |= operator with update() to avoid unneeded temporary set,,jdufresne,None,2017-04-27T05:02:26Z,2017-04-28T00:53:00Z
8418,Fixed #24254 -- Fixed queries using the __in lookup with querysets using distinct() and order_by().,https://code.djangoproject.com/ticket/24254,charettes,None,2017-04-27T04:51:14Z,2017-05-12T01:53:02Z
8417,Refs #20939 -- Moved subquery ordering clearing optimization to the _in lookup.,"@timgraham I'm working on making `sql.Query` completely implement the Expression API so we can remove a lot of the boiler plate in `expression.Subquery` and it made me realize some changes I made in c9159a082ebe41a1f735f8d01720e746fb43c41e should have been made in `In.process_rhs()` instead.

It only makes sense to clear ordering of a queryset when it's used in a `__in` lookup.

Sorry for the back and forth here. This should settle, `#20939`'s case :)",charettes,None,2017-04-27T03:28:58Z,2017-04-27T22:42:42Z
8416,Converted sessions_tests to use assertIs() rather than assertTrue/False().,,timgraham,None,2017-04-27T01:14:13Z,2017-05-04T00:21:42Z
8415,Fixed #28137 -- Deprecated HttpRequest.xreadlines().,,jschneier,None,2017-04-26T18:33:03Z,2019-01-17T17:38:53Z
8414,Fixed #28135 -- Refactored simplify_regex(),"While using Django REST Framework's Schema generator, I found out they're using simplify_regex(); however, current version has a few shortcomings: for instance, patterns
```python
r'^(?P<a>(?:\w+|\d+))'
r'^(?P<a>\w+(?#comment))'
r'^\b(?P<a>\w+)\b'
```

currently produce (respectively):
```python
'/(P<a><var>)'
'/(P<a>\\w+<var>)'
'/\\b<a>\\b'
```

when they should all simply produce:
```python
'/<a>'
```

This pull request features a faster simplify_regex() which also now supports patterns with:

* all capturing and non-capturing groups
* backreferences
* comments
* flags
* look ahead/behind
* yes-pattern
* special sequences

Performance gains:

```
In [1]: %%timeit
    ...: simplify_regex(pattern)
    ...:
10000 loops, best of 3: 38.9 µs per loop

In [2]: %%timeit
    ...: simplify_regex_orig(pattern)
    ...:
10000 loops, best of 3: 54.4 µs per loop
```
https://code.djangoproject.com/ticket/28135",Kronuz,None,2017-04-26T16:22:03Z,2017-10-12T20:49:30Z
8413,Refs #20094 -- Removed obsolete tests/utils_tests/test_itercompat.py,The is_iterator() function was removed in 2456ffa42c33d63b54579eae0f5b9cf2a8cd3714.,timgraham,None,2017-04-26T14:30:12Z,2017-04-26T14:54:30Z
8412,Replaced temporary lists used for passing arguments with iterables.,This looked like a straightforward cleanup to me but let me know if you think I should also create a Trac ticket.,jdufresne,None,2017-04-26T13:22:21Z,2017-04-28T00:53:03Z
8411,Replaced unneeded *arguments with simple positional arguments.,,jdufresne,None,2017-04-26T13:10:35Z,2017-04-28T00:53:05Z
8410,Fixed #28129 -- Allowed custom template tags to use keyword-only arguments.,"### [Ticket 28129](https://code.djangoproject.com/ticket/28129)

# Problem

Example tag with a keyword-only argument
```python
@register.simple_tag(takes_context=True)
def my_tag(context, arg1, *, kwarg2='n/a'):
    return ''
```
Html code
```html
<div>bla bla bla</div>
{% my_tag 'arg_1_value' kwarg_2='kwarg_value' %}
```

Result
`django.template.exceptions.TemplateSyntaxError: 'my_tag' received unexpected keyword argument 'kwarg_2'`

# Proposed solution
Update `django.utils.inspect.getargspec` to support keyword only argument.
Alternatively, the whole `django.utils.inspect.getargspec` could be replaced with native  ​[inspect.getfullargspec()](https://docs.python.org/3/library/inspect.html#inspect.getfullargspec)",alexallah,None,2017-04-26T05:09:27Z,2017-05-11T14:09:45Z
8409,Refs #23919 -- Removed Python 2 proxied methods on File.,"I noticed this when looking at 98ee57e343206ef553de78b22be5e9a6dacb5060 again. Both `xreadlines` and `softspace` used to exist on file objects but were removed in Python 3. From taking a critical look at what counts as a file I'd say `.newlines` is close but I have left it for now, these 2 should be non-controversial.",jschneier,None,2017-04-26T02:33:18Z,2017-04-26T18:44:08Z
8408,Fixed #28127 -- Allowed UserCreationForm's password validation to check all user fields.,"* UserCreationForm runs password validation against full user instance,
  checking all fields in the form, not just the username",jambonrose,None,2017-04-25T20:58:16Z,2017-06-28T18:50:41Z
8407,Fixed #28074 -- Doc'd template-based widget rendering changes for contrib.gis.,https://code.djangoproject.com/ticket/28074,timgraham,None,2017-04-25T16:41:15Z,2017-04-26T13:46:10Z
8406,Fixed #28125 -- Clarified 1.11 release note about Template.render() prohibiting non-dict context.,https://code.djangoproject.com/ticket/28125,timgraham,None,2017-04-25T16:26:39Z,2017-04-26T13:41:09Z
8405,[WIP] Close #28126. Add Gist index,"This PR adds the GIST index for PostGIS

ref: https://code.djangoproject.com/ticket/28126#ticket",fcurella,None,2017-04-25T16:22:23Z,2017-04-25T17:45:11Z
8404,"Clarified ""newly-introduced features"" in the supported versions policy.","Some confusion in https://code.djangoproject.com/ticket/28121#comment:9 about what ""newly-introduced"" means.",timgraham,None,2017-04-25T15:53:43Z,2017-04-26T13:49:19Z
8403,Fixed #28122 -- Fixed crash when overriding views.static.directory_index()'s template.,https://code.djangoproject.com/ticket/28122,timgraham,None,2017-04-25T12:46:39Z,2017-04-25T15:01:41Z
8402,Added test for reraising backend-specific database exceptions.,,felixxm,None,2017-04-25T04:49:14Z,2017-04-25T06:05:04Z
8401,Fixed #28040 -- Updated SplitArrayWidget to use template-based widget rendering.,https://code.djangoproject.com/ticket/28040,timgraham,None,2017-04-25T00:02:22Z,2017-04-29T23:08:17Z
8400,Fixed #28120 -- Checked that CharField.max_length is not a boolean.,"Previously if max_length=True/False ""python manage.py makemigrations""
was succeeding and ""python manage.py migrate"" returned SQL errors.",cpina,None,2017-04-24T15:04:14Z,2017-04-24T22:49:32Z
8399,CharField check: returns an error if max_length is a boolean.,"Previously if max_length=True/False ""python manage.py makemigrations""
was succeeding and ""python manage.py migrate"" returned SQL errors.",cpina,None,2017-04-24T15:00:52Z,2017-04-24T15:03:18Z
8398,"Renamed ""Mac OS X"" to ""macOS"" in docs.","Apples operating system has been rebranded to **macOS** since Sierra; the Django documentation identified it as Mac OS X, OS X or even Mac OSX. This trivial PR harmonizes that and uses **macOS** everywhere.

See also https://meta.stackoverflow.com/questions/348077/rename-osx-to-macos?cb=1",mbeijen,None,2017-04-23T20:09:25Z,2020-06-22T15:54:53Z
8397,"Refs #23919 -- Used ""raise from"" instead of __cause__ in reraising backend-specific database exceptions.",,felixxm,None,2017-04-23T18:42:06Z,2017-04-25T06:30:30Z
8396,Fixed #28116 -- Used error code filtering in PostgreSQL test database creation.,Ticket [28116](https://code.djangoproject.com/ticket/28116).,felixxm,None,2017-04-23T17:22:04Z,2017-04-25T04:02:42Z
8395,Refs #27090 -- Added real database sequence introspection,,claudep,None,2017-04-23T17:17:31Z,2017-09-13T18:26:23Z
8394,Fixed #27434 -- Doc'd how to raise a model validation error for a field not in a model form.,https://code.djangoproject.com/ticket/27434,matthiask,None,2017-04-23T10:56:38Z,2019-04-24T09:15:10Z
8393,Refs #20939 -- Removed the Query._forced_pk hack.,,charettes,None,2017-04-23T05:37:54Z,2017-04-26T04:03:58Z
8392,Fixed #28101 -- Fixed incorrect queries for __in lookups involving ForeignKey.to_field.,"This fixes an issue with nested __in lookups on related fields relying on the `to_field` option.
https://code.djangoproject.com/ticket/28101",charettes,None,2017-04-22T21:42:48Z,2017-04-23T05:09:14Z
8391,Fixed #28115 -- Fixed IP address validation in geoip2 module.,,claudep,None,2017-04-22T14:47:49Z,2017-04-22T18:12:29Z
8390,Refs #27795 -- Replaced many force_text() with str().,,claudep,None,2017-04-21T18:09:22Z,2017-04-28T04:19:28Z
8389,Removed unneeded is True|False from bool expressions in widgets.py.,,jdufresne,None,2017-04-21T14:17:38Z,2017-04-21T16:51:54Z
8388,Refs #27795 -- Removed unneeded force_text calls in widgets.py.,,jdufresne,None,2017-04-21T14:05:50Z,2017-04-22T15:38:07Z
8387,Update staff_member_required ...,"... to reflect true staff membership

coming from https://github.com/django-ckeditor/django-ckeditor/issues/385#issuecomment-296197805

The problem is, a user with `is_superuser = True` but `is_staff = False` will not pass the `staff_member_required` decorator, however he should because as a superuser, he'll have all permissions.",karolyi,None,2017-04-21T14:03:49Z,2017-04-22T20:53:54Z
8386,Fixed #28046 -- Added the db_tablespace parameter to class-based indexes.,Ticket [28046](https://code.djangoproject.com/ticket/28046).,felixxm,None,2017-04-21T09:27:57Z,2017-06-27T19:15:16Z
8385,Fixed #28075 -- Prevented ChoiceWidget from localizing option values.,https://code.djangoproject.com/ticket/28075,jdufresne,None,2017-04-21T05:43:35Z,2017-04-22T15:38:08Z
8384,Updated Oracle docs links to Oracle 12c.,,felixxm,None,2017-04-21T05:07:47Z,2017-04-21T14:04:19Z
8383,Fixed #28109 -- Adjusted stacklevel of warnings raised when paginating unordered querysets.,Refs #26290.,charettes,None,2017-04-21T02:50:19Z,2017-04-22T18:10:20Z
8382,Fixed #28103 -- Added quarter extract and exposed it through quarter lookup.,https://code.djangoproject.com/ticket/28103,atombrella,None,2017-04-20T21:41:27Z,2017-06-10T08:03:51Z
8381,Stopped highlighting some code blocks in the docs,,MarkusH,None,2017-04-20T14:02:17Z,2017-04-20T19:14:24Z
8380,Fixed #27863 -- Added support for the SameSite cookie flag.,Resolving https://code.djangoproject.com/ticket/27863,kravietz,None,2017-04-20T12:24:52Z,2018-04-07T20:32:54Z
8379,Removed nonexistent methods from File's docs.,"The description of the documentation refers to ``size`` while the
method signature refers to ``num_bytes``. The former is in line with
the general Python signature for files.

There is also a [read method](https://github.com/django/django/blob/master/django/test/client.py#L63) on the undocumented ``FakePayload`` that uses it in its method signature. I could rename that as well if we wanted.",jschneier,None,2017-04-19T18:55:33Z,2017-04-26T00:15:32Z
8378,Fixed #28100 -- Removed link in UserChangeForm.password's translatable help_text.,,claudep,None,2017-04-19T17:57:02Z,2017-04-22T13:40:57Z
8377,Fixed #28089 -- Removed requirement to implement get_short_name() and get_full_name() in AbstractBaseUser subclasses.,From subclasses of AbstractBaseUser,jschneier,None,2017-04-19T17:05:49Z,2020-01-11T06:24:29Z
8376,Fixed #28097 -- Fixed layout of ReadOnlyPasswordHashWidget.,https://code.djangoproject.com/ticket/28097,timgraham,None,2017-04-19T13:25:39Z,2017-04-19T17:00:00Z
8375,Fix a typo in django.db.transaction.Atomic's docstring,,argsno,None,2017-04-19T12:50:29Z,2017-04-19T14:36:07Z
8374,Fixed #28096 -- Allowed prefetch calls with ModelIterable subclasses,Regression in 7ec330eeb96d0874949eacb8ed1bbb97e11807e1.,claudep,None,2017-04-19T08:27:23Z,2017-04-19T17:34:25Z
8373,Fixed #28112 --  Added 'time_zone' in GeoIP2.city() dict.,The geolocation wrapper does not forward the time zone field from the geoip2 libary.,relseah,None,2017-04-19T04:54:41Z,2017-05-23T01:07:14Z
8372,[1.11.x] Fixed #28091 -- Re-raised original exception when closing cursor cleanup fails,Ticket: https://code.djangoproject.com/ticket/28091,francoisfreitag,None,2017-04-18T19:16:17Z,2018-09-06T11:29:42Z
8371,[1.11.x] Fixed #28091 -- Re-raise original exception when closing cursor cleanup fails,,francoisfreitag,None,2017-04-18T18:26:10Z,2017-04-18T19:13:47Z
8370,Fixed #24607 -- Serialized natural keys in multi-table inheritance models.,"I slightly reworked @jpmelos earlier PR #7231 to hopefully avoid the problem with spurious migrations.  When a parent link is being promoted as a pk, I don't modify that field, but I take note of the promotion in the inheriting model's _meta (well, Options actually, but that ends up the same).  Then a field is always serialized if it has been promoted, even if it is marked `serialize=False`",denys-duchier,None,2017-04-18T13:51:03Z,2018-02-12T19:49:49Z
8369,Removed unused DatabaseIntrospection._name_to_index() from Oracle backend.,,felixxm,None,2017-04-18T10:12:17Z,2017-04-18T12:18:24Z
8368,Refs #28066 -- Fixed nondeterministic ordering test failure in sessions_tests.,,felixxm,None,2017-04-18T09:16:11Z,2017-04-18T15:57:34Z
8367,small typo in docs :black_nib:,small typo in django-admin docs.,mnm364,None,2017-04-18T00:23:48Z,2017-04-18T02:11:53Z
8366,Corrected a typo in def lazy,"Changed ""memoized"" to ""memorized""",alxhghs,None,2017-04-17T20:30:19Z,2017-04-17T20:38:54Z
8365,Refs #22654 -- Add additional tests and remove release notes,See @timgraham's comments on #8312.,raphaelm,None,2017-04-17T12:47:18Z,2017-05-05T22:45:08Z
8364,Fixed #28082 -- Made BaseDateListView pass all context to subclasses.,"Pass the `extra_content` from `get_dated_items()` as kwargs into `get_context_data()` to allow users access to it.

`BaseDateListView.get()` currently modifies the context *after* calling `get_context_data()`, which prevents users from access those data in their base classes. I ran into this suprising quirk  when I wanted to access the current month in my MonthArchiveView subclass's `get_context_data()`.

(To *really* tidy things up, we could have all instances `get_dated_items()` return a single dictionary that we pass to `get_context_data` as kwargs, but I am a realist on occasion...)",leon-matthews,None,2017-04-16T23:42:00Z,2017-06-13T16:20:50Z
8363,Fixed #28059 -- Restored CSS classes in <ul> of widgets that use multiple_input.html.,https://code.djangoproject.com/ticket/28059,timgraham,None,2017-04-15T17:59:13Z,2017-04-20T15:11:04Z
8362,Fixed #28058 -- Restored empty BoundFields evaluating to True.,https://code.djangoproject.com/ticket/28058,timgraham,None,2017-04-15T17:05:33Z,2017-04-17T12:59:09Z
8361,Refs #27795 -- Removed unneeded force_text calls from the Oracle backend.,,felixxm,None,2017-04-15T14:17:35Z,2017-04-17T12:22:57Z
8360,Refs #27777 -- Improved documentation and added test,"* Added versionchanged annotation and amended release notes
* Added regression test for FieldFile.open()

Those changes address the comments from PR 8310, i.e.
https://github.com/django/django/pull/8310#discussion_r110381234
https://github.com/django/django/pull/8310#discussion_r110379769
",ingokloecker,None,2017-04-15T10:50:58Z,2017-06-01T01:20:15Z
8359,Added content_type filtering in Permission querying example.,"Earlier permission was fetched on basis of codename

but in django permission is based on content type and code name

so if permission with same codename is there for multiple models

it will error out",nauman3128,None,2017-04-14T20:52:44Z,2017-04-26T17:28:07Z
8358,Fixed #27161 -- Fixed validation of ArrayField with choices,"Changed SimpleArrayField.to_python() to call clean() instead of
to_python() on each array item. If base_field form is TypedChoiceField
clean() will coerce the value to the right type.",dekkers,None,2017-04-14T18:30:45Z,2017-06-13T23:13:09Z
8357,"Change ""Development Status"" classifier to ""Mature""",Django has been around for long enough that I don't think anyone would question its maturity. [PyPI classifiers are listed here.](https://pypi.python.org/pypi?%3Aaction=list_classifiers),singingwolfboy,None,2017-04-14T17:47:37Z,2017-04-14T18:43:23Z
8356,"Fixed #28079 -- Restored ""No POST data"" (rather than an empty table) in HTML debug page.",https://code.djangoproject.com/ticket/28079,timgraham,None,2017-04-14T12:52:38Z,2017-04-15T13:22:00Z
8355,Refs #28024 -- Optimized LineString.__init__() by avoiding superfluous index and dimension checks.,"https://code.djangoproject.com/ticket/28024
Benchmark:
`python -mtimeit -s ""from django.contrib.gis.geos import LineString"" ""LineString([(x, x) for x in range(1000)])""`
31.4 msec => 13.3 msec per loop",sir-sigurd,None,2017-04-13T06:34:44Z,2017-04-13T12:46:32Z
8354,Fixed #28076 -- Added support for PostgreSQL's interval format to parse_duration().,https://code.djangoproject.com/ticket/28076,schinckel,None,2017-04-13T02:04:05Z,2017-07-04T00:19:16Z
8353,Fixed #28066 -- Made sure sessions are loaded before a cycle_key,https://code.djangoproject.com/ticket/28066,InvalidInterrupt,None,2017-04-12T20:50:35Z,2017-04-18T02:28:11Z
8352,Fixed #27849 -- Added filtering support to aggregates.,"Re: #8306, this MR is an initial stab at supporting `.filter` and `.exclude` on any `Aggregate`.

We do this in two ways: in the case of postgres we use the SQL 2003 FILTER syntax: `AGG(field) FILTER (WHERE ...)`, and on other databases we emulate this with `AGG(CASE ... THEN field ELSE NULL)`. [This is currently only supported in Postgres](http://modern-sql.com/feature/filter).

The reason for supporting both, despite being functionally equivalent, is that [the postgres syntax is faster](https://github.com/django/django/pull/8306#issuecomment-292769619).

I'm pretty sure the implementation might make someone more knowledgeable about django aggregates sick, but I think it's a good initial draft. It's slightly tricky because while the `CASE` syntax is nested within the aggregate the `FILTER` syntax appears outside, so I think we need a custom `AggregateFilter` expression to handle these two types.

Code quality is poor, I just wanted to use this as a proof of concept to spur a discussion about how (or even if) to best support this.

Made up example use-case.

```python
one_week_ago = timezone.now().date() - timedelta(days=7)

Mailboxes.objects.annotate(
   read_emails=Count('emails').filter(unread=False),
   unread_emails=Count('emails').filter(unread=True),
   recent_emails=Count('emails').filter(received_date__lt=one_week_ago)
)
```",orf,None,2017-04-12T16:55:28Z,2018-08-09T23:19:32Z
8351,Fixed docs regarding MySQL support of Length GIS function.,,sir-sigurd,None,2017-04-11T17:25:04Z,2017-04-13T12:46:51Z
8350,Fixed typo in docs/ref/contrib/gis/functions.txt.,,sir-sigurd,None,2017-04-11T17:07:59Z,2017-04-16T16:20:59Z
8349,Fixed #28067 -- Clarified __str__() return type when using python_2_unicode_compatible().,https://code.djangoproject.com/ticket/28067,timgraham,None,2017-04-11T17:00:34Z,2017-04-14T12:06:04Z
8348,Fixed outdated TIME_FORMAT in docs/ref/templates/builtins.txt.,The default format has been changed as of 22bfc45.,hop,None,2017-04-11T14:53:30Z,2017-04-11T16:30:59Z
8347,Fixed #28069 -- Moved setup_test_environment() warning in tutorial 5.,Updated for 17e661641ddaf8266e7430d83cfb2039abc55df7.,timgraham,None,2017-04-11T12:38:06Z,2017-04-12T12:47:30Z
8346,Fixed docs after change from DatabaseError to NotSupportedError,"in select_for_update() (054a44d6f0, PR #8341).",bluetech,None,2017-04-11T09:47:19Z,2017-04-11T15:52:54Z
8345,Refs #25406 -- Removed exception hiding in MySQL test database creati…,…on during `--keepdb`.,felixxm,None,2017-04-11T08:45:13Z,2017-04-13T18:21:20Z
8344,Fixed #28064 -- Fixed MultiValueDict's MultiValueDictKeyError double-quoting key names.,"Since 89319850 a MultiValueDictError message has looked like:

    >>> MultiValueDict()['key']
    # ...
    django.utils.datastructures.MultiValueDictKeyError: ""'key'""

There's an extra pair of ""s compared with the same message from
KeyError:

    >>> {}['key']
    #...
    KeyError: 'key'

This is because the missing key was passed through repr() before
being passed as a parameter to MultiValueDictError, which inherits
from KeyError. This simply removes the repr(), causing the error
message above to lose the ""s and match the message from KeyError.

https://code.djangoproject.com/ticket/28064",petedmarsh,None,2017-04-10T20:11:43Z,2017-04-11T16:44:52Z
8343,Fixed #28039 -- Fixed crash in BaseGeometryWidget.subwidgets().,https://code.djangoproject.com/ticket/28039,timgraham,None,2017-04-10T16:24:00Z,2017-04-20T15:37:00Z
8342,Fixed #28047 -- Fixed QuerySet.filter() crash when it uses the name of a OneToOneField pk.,"Regression in 1bc249c2a67c24fcd28436c85388eff1d826e305.

https://code.djangoproject.com/ticket/28047",timgraham,None,2017-04-10T13:53:31Z,2017-04-10T15:59:21Z
8341,Used NotSupportedError instead of DatabaseError in SQLCompiler.as_sql().,See [comments](https://github.com/django/django/pull/8330/files/6cdee8eeabb3586a8990bdfbfa8d1cb8ae31d10e#r110550238).,felixxm,None,2017-04-10T06:56:01Z,2017-04-10T17:51:06Z
8340,Prevent late registration of models.,@timgraham here's what I had in mind. There's a couple of migration tests failures that would require adjustments but I'm pretty sure they could work with `isolated_apps`.,charettes,None,2017-04-10T01:56:28Z,2018-11-07T04:48:02Z
8339,Removed duplicate lines in slugify().,,jdufresne,None,2017-04-09T01:31:22Z,2017-04-22T15:38:09Z
8338,Fixed #28008 -- Removed getElementsByClassName() in debug view template.,"I have used querySelectorAll to replace getElementsByClassName().
https://code.djangoproject.com/ticket/28008",gautamabhishek46,None,2017-04-08T20:39:13Z,2017-04-14T12:12:15Z
8337,Change a few assertQuerysetEqual to assertSequenceEqual,,collinanderson,None,2017-04-08T19:51:34Z,2017-04-10T12:59:30Z
8336,Fixed #27953 -- Make default __str__ contain pk,https://code.djangoproject.com/ticket/27953,collinanderson,None,2017-04-08T18:39:43Z,2017-06-09T18:41:41Z
8335,Refs #26605 -- Isolated a migrations state test.,,timgraham,None,2017-04-08T15:45:06Z,2017-04-10T12:13:51Z
8334,Fixed typo in docs/topic/db/search.txt,Replaced Actor with Author,pauloxnet,None,2017-04-08T09:35:27Z,2017-04-08T11:26:16Z
8333,Fixed #28015 -- Added makemessages --add-location=full|file|never option,"https://code.djangoproject.com/ticket/28015

Added the handling of this option, the unit tests on its behaviors and
documentation.",lingxiaoyang,None,2017-04-07T17:55:51Z,2017-05-22T13:25:47Z
8332,Fixed #28050: Added Template path to TemplateSyntaxError exception message.,[Ticket](https://code.djangoproject.com/ticket/28050),kapilgarg1996,None,2017-04-07T17:02:53Z,2017-06-13T17:40:56Z
8331,Added tests to increase coverage of createsuperuser,"Those three tests increase the coverage of `django/contrib/auth/management/commands/createsuperuser.py` so that only the `KeyboardInterrupt` exception handling is not covered. 

This should help refactor `createsuperuser` in https://code.djangoproject.com/ticket/28044",slafs,None,2017-04-07T15:09:02Z,2018-05-26T08:29:08Z
8330,Fixed #28010 - Added support for SELECT...FOR UPDATE OF,"https://code.djangoproject.com/ticket/28010

Implements `select_for_update(of_self=True)`, meaning only rows of the base model are locked, rather than all selected rows.

This is a feature for Postgres and Oracle. I did not test on Oracle, since I do not have access to that. But I made sure that the query is good when `select_for_update_of_column = True` (as in the Oracle backend).",bluetech,None,2017-04-07T14:21:31Z,2017-06-29T20:00:16Z
8329,Fixed #28052 -- Prevented dropping Meta.indexes when changing db_index to False.,https://code.djangoproject.com/ticket/28052,MarkusH,None,2017-04-07T13:55:46Z,2017-05-01T16:21:34Z
8328,Fixed #28051 -- Made migrations respect Index's name argument.,Thanks Marc Tamlyn for the report.,MarkusH,None,2017-04-07T12:44:57Z,2017-04-07T22:37:40Z
8327,Fixed #13677 -- Propagated database choice from ModelFormSet queryset to ModelForm's choices.,"Moved the patch by @dgouldin to current Django.

Ticket link: https://code.djangoproject.com/ticket/13677",rixx,None,2017-04-07T11:37:30Z,2020-06-12T10:50:46Z
8326,Fixed #27881 -- Added diffsettings --output option.,"References https://github.com/django/django/pull/8113.

Ticket https://code.djangoproject.com/ticket/27881",harisibrahimkv,None,2017-04-07T11:18:46Z,2017-05-27T13:19:55Z
8325,Refs #26605 -- Added migrations state test for a swappable model inheriting an abstract model inheriting concrete model.,"The actual bug has been fixed on the master branch (and 1.10.x)
by the manager state refactor.

The test was adapted to master from PR #6847",ingokloecker,None,2017-04-07T10:57:44Z,2017-04-07T20:34:27Z
8324,Add DistinctAggregate and refactor aggregates to use it.,Split out from #8308,orf,None,2017-04-07T10:25:41Z,2018-08-09T23:19:24Z
8323,Fixed #28042 -- Fixed crash when using a two-tuple in EmailMessage's attachments arg.,https://code.djangoproject.com/ticket/28042,kalombos,None,2017-04-07T10:25:35Z,2017-04-07T22:21:39Z
8322,[WIP] Fixed #28053 -- Support db_index=Index(),"WIP PR for expanding `db_index` to allow explicitly setting an index. It moves the responsibility for the indexes on a field to the field. This is also a step towards allowing a field type to define a default index type (e.g. for JSON or HStore fields, and for GIS).

TODO:
- [ ] Allow (for PG at least) [ops classes](https://www.postgresql.org/docs/9.5/static/indexes-opclass.html) when creating an index, so the Like index can be explicitly added. This can probably be done with an expression after #8056 is complete. **At present the logic for creating the like index (named `_like`) is there, but it creates a plan btree index!**
- [ ] Handle MySQL ForeignKey special case
- [ ] Possibly also fix #8118 - relates to `TextField` not having indexes on MySQL (or Oracle?) when indexed.
- [x] Handle Postgres Like indexes naming properly - maybe allow passing a max_length to an index?
- [ ] Possibly also address [this ticket](https://code.djangoproject.com/ticket/24082) about `unique=True` and indexes on PG text fields
- [ ] Some other tests need `clone_model` adding to fix things
- [x] Handle legacy index names (see also #8329)
- [ ] Change to using `Index.set_name_from_model()` (i.e. short index names) in both cases, and update all the tests where names change.
- [ ] More tests for changing values of `db_index`, especially changing from one kind of index to another
- [ ] Docs (including documenting change to `SchemaEditor.add_field`)

Questions:
- Should we be more careful about setting `Index.fields()`? Do we need to verify that it only affects this field, or that no fields should be permitted on init when it's a `db_index`? How does this fit with indexes taking expressions?

Backwards incompatible changes:
- `SchemaEditor.add_field` now takes the `to_model` in the signature. This could possibly be handled more carefully, and the `to_model` is not *always* necessary, only when an index changes, so the code could be crafted to make `to_model` optional except where necessary for backwards compatibility reasons. I'm not sure it's worth it though.",mjtamlyn,None,2017-04-07T10:01:00Z,2019-04-21T07:10:20Z
8321,Remove unnecessary check for __deepcopy__ argument,"The implementation for `QueryDict..__depcopy__` accepts an optional `memo` argument and check that it is not `None`. However, according to https://docs.python.org/3.6/library/copy.html the memo argument is mandatory and you're guaranteed to always get a dict (the `copy.deepcopy` stdlib function takes care of ensuring this) so the check is redundant.",dmoisset,None,2017-04-07T09:09:26Z,2017-04-07T13:13:58Z
8320,Fixed #28037 -- Clarified that QueryDict.items()/values() are generators.,"This updates the documentation to clarify that the `items` and `values` methods of `QueryDict` are actually generators, not lists as the doc example seemed to imply, nor dict views as the doc text seemed to imply.
https://code.djangoproject.com/ticket/28037",dmoisset,None,2017-04-07T08:34:03Z,2017-04-27T01:07:31Z
8319,Fixed #27644 -- Doc'd FileSystemStorage.get_created_time().,"Clarify that the creation time of the file is returned on Windows only.

https://code.djangoproject.com/ticket/27644",ingokloecker,None,2017-04-07T07:45:53Z,2017-04-26T17:55:58Z
8318,Removed more GeoQuerySet leftovers.,Follow up to a0d166306fbdc41f49e6fadf4ec84b17eb147daa.,sir-sigurd,None,2017-04-07T04:33:56Z,2017-04-07T12:02:48Z
8317,Fixed #28038 -- Restored casting to text of builtin lookups on PostgreSQL.,"https://code.djangoproject.com/ticket/28038
This ended up breaking code using __icontains's implicit cast to ::text on ArrayField.

Thanks Peter J. Farrell for the report.",charettes,None,2017-04-07T00:39:25Z,2017-04-07T20:48:59Z
8316,Fixed #27947 -- Doc'd that model Field.error_messages often don't propagate to forms.,https://code.djangoproject.com/ticket/27947,taaviteska,None,2017-04-06T16:14:57Z,2017-04-10T18:24:44Z
8315,Fixed #28043 -- Stopped AddIndex.state_forwards mutating shared state,,Ian-Foote,None,2017-04-06T16:06:38Z,2018-08-26T22:11:49Z
8314,Refs #21729 -- Add test to show 21729 is fixed,,raphaelm,None,2017-04-06T15:58:01Z,2017-04-07T10:27:13Z
8313,Fixed #28041 -- Added prefix matching for PostgreSQL full text search.,"Hi,

I took a stab at putting together something for https://code.djangoproject.com/ticket/28041
I do however, think it is horrendous and I'm not a fan of the way I'm combining `Lexeme`s",joetsoi,None,2017-04-06T15:52:50Z,2020-03-17T09:20:29Z
8312,Fixed #22654 -- Broken decimal validation,see https://code.djangoproject.com/ticket/22654,raphaelm,None,2017-04-06T15:36:00Z,2017-04-17T12:47:42Z
8311,Fixed #27161 -- Fixed form validation when an ArrayField's base_field has choices.,,romulorosa,None,2017-04-06T14:33:04Z,2017-09-28T15:18:08Z
8310,Fixed #27777 -- Made File.open() work with the with statement,"Made File.open() (and its overrides in File subclasses) return
self, so that it can be used similar to Python's open() with
the with statement.

https://code.djangoproject.com/ticket/27777",ingokloecker,None,2017-04-06T13:49:06Z,2017-04-07T15:53:45Z
8309,Fixed #27833 -- Allowed QuerySet.prefetch_related() to avoid the max query parameter limitation of SQLite.,"prefetch_related used to fail with SQLite when used with 1000 parent records

see https://code.djangoproject.com/ticket/27833",raphaelm,None,2017-04-06T13:39:02Z,2020-01-03T13:39:02Z
8308,Support distinct keyword in Postgres JSONBAgg,"This PR adds support for a distinct argument to JSONBAgg. As there are a number of aggregations that support this I made a base class and switched the relevant aggregations to using it.

Other aggregations like `BitAnd`, `BitOr` etc support `DISTINCT` as well, but it seems somewhat redundant to add them (I think?).",orf,None,2017-04-06T13:19:51Z,2018-08-09T23:19:18Z
8307,Fixed #28048 -- Allowed generic date views to use related fields as date_field.,This PR tries to resolve a small issue on the date generic views. On the date generic views right now you cannot specify as a date_field a related field (you get FieldDoesNotExist). ,lefterisnik,None,2017-04-06T13:15:44Z,2019-06-06T11:45:37Z
8306,Fixed #27849: Add support for filtering postgres aggregates,"This adds support for filtering on all Postgres aggregates using the `FILTER (WHERE ...)` syntax.

I thought it would be best to make it a bit queryset-like, as in you can do `.filter()` and `.exclude()` on all Postgres aggregates, like so: `SomeModel.objects.annotate(x=ArrayAgg('y').filter(y__z=1)`.

Under the hood this just converts the keywords to `Q()` objects, but it feels a lot nicer than passing them in manually. They also support chaining.

I'm at the DjangoCon sprints if anyone wishes to comment in person about this 👍

Edit: I've added some tests specifically for the ArrayAgg aggregate, but I'd like some feedback about the implementation before I commit to writing more tests + documentation etc.

I'm also not entirely sure how I would go about writing the tests, should I write the same tests for every postgres aggregate?",orf,None,2017-04-06T10:51:30Z,2017-06-13T21:51:15Z
8305,Fixed #28032 -- Added Paginator.get_page().,"Moved boilerplate from docs to a utility function.
https://code.djangoproject.com/ticket/28032",sjlehtin,None,2017-04-06T10:34:58Z,2017-09-06T18:36:18Z
8304,Fixed #27991 -- Add 'obj' kwarg to InlineModelAdmin.has_add_permission(),https://code.djangoproject.com/ticket/27991,icu0755,None,2017-04-06T10:34:51Z,2018-02-23T11:53:13Z
8303,Fixed #28126 -- Added GiST Index to contrib.postgres.,"We can already create them on spatial fields, but they are generally useful for other fields such as hstore.

https://www.postgresql.org/docs/9.5/static/gist-examples.html
https://code.djangoproject.com/ticket/28126",mjtamlyn,None,2017-04-06T10:01:37Z,2017-07-01T23:17:33Z
8302,fixed a typo,removed a comma,kristjanr,None,2017-04-06T01:09:52Z,2017-04-06T21:03:12Z
8301,Fixed #28031 -- Removed notes about old uWSGI/sentry versions.,"This applies to Trac ticket #28031 at https://code.djangoproject.com/ticket/28031#ticket

The warning about old versions of uWSGI in Debian and Ubuntu only applies to old
versions of Debian and Ubuntu. I've added a note about which versions ship old
packages and which versions ship new packages. This is to avoid making people
think they must compile uWSGI from source in situations where they might not
actually need to.

Debian 8 having a newer uWSGI is documented at:
 https://packages.debian.org/jessie/uwsgi

Ubuntu 14.04 having a newer uWSGI is documented at:
 http://packages.ubuntu.com/trusty/uwsgi",RichardBarrell,None,2017-04-05T21:31:33Z,2017-04-06T13:33:32Z
8300,Fixed #28024 -- Improved GEOSCoordSeq performance by avoiding superfluous checks.,https://code.djangoproject.com/ticket/28024,sir-sigurd,None,2017-04-05T14:45:37Z,2017-04-11T17:29:08Z
8299,Fixed #27730: Added note about block tag context,"block tag cannot use variables of child template defined outside the tag.

[Ticket Link](https://code.djangoproject.com/ticket/27730)",kapilgarg1996,None,2017-04-05T14:14:02Z,2017-04-26T18:54:58Z
8298,Fix a typo in the documentation of QuerySet.intersection,Closes https://code.djangoproject.com/ticket/28025,debugger22,None,2017-04-05T10:03:05Z,2017-04-05T11:23:40Z
8297,Fixed #28020 -- Made GEOSGeometry.json use OGRGeometry.json for better performance.,https://code.djangoproject.com/ticket/28020,sir-sigurd,None,2017-04-05T08:21:50Z,2017-04-05T15:43:23Z
8296,Fixed #27998 -- Made ManyToManyField changes logged in admin's object history.,"Added call to form.has_changed() in ModelAdmin._changeform_view() before
self.save_related() is called. This ensures querysets in form.initial
are evaluated before m2m field changes are committed.
ModelAdmin.changelist_view() already checks form.has_changed() first so
no change required.",ljsjl,None,2017-04-05T04:18:07Z,2017-08-31T01:34:12Z
8295,Fixed #28017 -- Allowed customizing PasswordResetTokenGenerator's secret.,,jannh,None,2017-04-04T19:00:48Z,2017-05-26T11:37:37Z
8294,Fixed #28001: Updated Comment about context popping in ForNode.render(),https://code.djangoproject.com/ticket/28001,kapilgarg1996,None,2017-04-04T16:45:38Z,2017-04-06T23:04:30Z
8293,Fixed #28016 -- Fixed createsuperuser's validation of fields provided as command options.,"Fixed validation when using createsuperuser with fields inputted by
non-interactive options, like --username or --email without the
--noinput parameter.",ricardosasilva,None,2017-04-04T08:35:33Z,2017-07-11T16:21:31Z
8292,Removed Oracle NULL workaround in AreaField.,Unused since 1b1ea63f6a4784e213c059c69beccaea20bc1a92.,sir-sigurd,None,2017-04-03T19:39:32Z,2017-04-04T03:34:18Z
8291,Fixed #28006 -- Allowed D to be used with lookups on Distance annotation.,https://code.djangoproject.com/ticket/28006,sir-sigurd,None,2017-04-03T17:19:18Z,2017-04-07T04:57:50Z
8290,Refs #12410 -- Added LineLocatePoint function to the summary table.,https://code.djangoproject.com/ticket/12410,sir-sigurd,None,2017-04-03T06:03:54Z,2017-04-03T12:24:06Z
8289,Fixed typos in docs/howto/static-files/index.txt.,"While working on https://code.djangoproject.com/ticket/27325 I found some errors in the documentation.
Default value for view in `django.conf.urls.static.static` is `django.views.static.serve`.",AleksejManaev,None,2017-04-02T22:09:54Z,2017-04-03T12:13:49Z
8288,Fixed #18394 -- Added error for invalid JavaScriptCatalog packages.,https://code.djangoproject.com/ticket/18394,claudep,None,2017-04-02T18:17:26Z,2017-06-06T16:06:04Z
8287,Fixed #27573 -- Made Distance return raw value on MySQL when used on geodetic coordinates.,https://code.djangoproject.com/ticket/27573,sir-sigurd,None,2017-04-02T12:21:01Z,2017-04-03T05:23:11Z
8286,Fixed #11854 -- Added Azimuth GIS function.,https://code.djangoproject.com/ticket/11854,sir-sigurd,None,2017-04-02T11:42:15Z,2017-04-03T05:23:15Z
8285,Removed implied default from strore_(true|false) argparse arguments,"The argparse module automatically sets the default value for store_true
and store_false arguments to its opposite. It is redundant to specify it
explicitly.

See Python documentation for more details:

https://docs.python.org/3/library/argparse.html#action",jdufresne,None,2017-04-01T22:22:57Z,2017-04-22T15:38:11Z
8284,Fixed #27655 -- Added some guidelines to the coding style docs.,"I'm going to leave this open for a little while and add other things that I came across as I do reviews.
https://code.djangoproject.com/ticket/27655",timgraham,None,2017-04-01T19:44:57Z,2017-06-12T19:39:12Z
8283,Fixed #12410 -- Added LineLocatePoint GIS function.,https://code.djangoproject.com/ticket/12410,sir-sigurd,None,2017-04-01T16:24:22Z,2017-04-01T19:10:39Z
8282,Fixed #28007 -- Moved debug templates on the filesystem,https://code.djangoproject.com/ticket/28007,claudep,None,2017-04-01T15:34:58Z,2017-04-12T16:07:02Z
8281,Fixed #27848 -- Prevented crash when attaching a .eml file to a message,Thanks Sébastien Ramage for the report.,claudep,None,2017-04-01T13:11:18Z,2017-04-01T16:55:30Z
8279,Fixed #28004 -- Doc'd how to create migrations for an app without a migrations directory.,https://code.djangoproject.com/ticket/28004,timgraham,None,2017-03-31T23:12:08Z,2017-04-01T18:43:40Z
8278,Fixed #27928 -- Avoided SET/DROP DEFAULT unless a field changes from null to non-null.,[Ticket #27928](https://code.djangoproject.com/ticket/27928).,charettes,None,2017-03-31T22:47:24Z,2017-04-02T20:38:51Z
8277,[WIP] Added filter field to the right column for FilteredSelectMultiple wid…,"…get. Refs #24179.

I have added the new feature. It's currently for 1.8 version. Please see if the functionality is correct and I will update it for the master branch.  Please don't review the code itself. It will need refactoring after the functionality is confirmed.",desecho,None,2017-03-31T21:40:49Z,2017-04-02T01:18:04Z
8276,"Fixed #26967 -- Added support for AsGeoJSON, GeoHash and IsValid functions on MySQL.",https://code.djangoproject.com/ticket/26967,sir-sigurd,None,2017-03-31T21:04:24Z,2017-04-01T17:49:23Z
8275,Fixed #28003 -- Doc'ed what auto-created parent_links o2o look like.,[Ticket #28003](https://code.djangoproject.com/ticket/28003),charettes,None,2017-03-31T19:04:07Z,2017-04-02T01:21:16Z
8274,Fixed #25874 -- Made GEOSGeometry read SRID from GeoJSON input.,https://code.djangoproject.com/ticket/25874,sir-sigurd,None,2017-03-31T17:46:50Z,2017-04-01T20:15:58Z
8273,Fixed #28001 -- Removed obsolete context popping in ForNode.render().,"Unneeded since 3bbebd06adc36f31877a9c0af6c20c5b5a71a900.
https://code.djangoproject.com/ticket/28001",timgraham,None,2017-03-31T16:41:01Z,2017-04-01T12:30:27Z
8272,Refs #27834 -- Removed Value-wrapping behaviour from StrIndex,As reported in https://github.com/django/django/pull/8089#issuecomment-290352513.,adamchainz,None,2017-03-31T14:23:40Z,2017-04-10T12:15:42Z
8271,Fixed #27989,Submitting a patch for ticket #27989,gautamabhishek46,None,2017-03-31T11:21:39Z,2017-03-31T12:09:25Z
8270,Fixed #27974: Resolved Templates should stay constant during one rendering cycle.,"[Patch Info](https://code.djangoproject.com/ticket/27974#comment:1)

To make resolved templates constant, it is necessary to store them in some location which won't be effected during nodes' rendering. So render_context.dicts[0] stores the resolved templates.",kapilgarg1996,None,2017-03-30T23:43:09Z,2017-04-04T02:29:40Z
8269,German typo,"""voraus"" instead of ""vorraus""",nerdoc,None,2017-03-30T19:01:07Z,2017-04-01T20:31:14Z
8268,Refs #26445 -- Used app config to lookup user model in _create_user.,"I rebased from masted and finished patch [6578](https://github.com/django/django/pull/6578).

Original description:

""Ticket [comment](https://code.djangoproject.com/ticket/26445#comment:3).

Even though the UserManager is available to the user model in
migrations, one cannot use create_superuser() or create_user() due to
them using the attached model to set the password.

Since model managers used in migrations will _ALWAYS_ refer to their
current implementation and will have to work with the migration state
model and the ""real"" model, using the global app_registry to lookup
the user model is not a problem.""",felixxm,None,2017-03-30T18:55:52Z,2020-03-11T06:48:44Z
8267,Fixed #17962 -- Added ModelAdmin.get_deleted_objects().,"This commit adds a get_delete_selected() method to the ModelAdmin to allow increased control over permissions for deleting objects from the admin interface as well as format of the deletable objects returned.  By default the method just calls the get_deleted_objects() function from `contrib.admin.utils`.

",rebkwok,None,2017-03-30T09:37:07Z,2018-02-25T02:00:46Z
8266,Fixed #27993 -- Fixed model form default fallback for SelectMultiple.,"https://code.djangoproject.com/ticket/27993
Impossible to clear an ArrayField with a forms.MultipleChoiceField",heathervm,None,2017-03-30T02:47:55Z,2017-03-31T14:10:09Z
8265,Fixed #27996 - Added crypto extension and function to contrib.postgres,"Added CryptoExtension (pgcrypto) extension and RandomUUID
(GEN_RANDOM_UUID) function to contrib.postgres

Ticket [#27996](https://code.djangoproject.com/ticket/27996)",pauloxnet,None,2017-03-29T21:57:56Z,2017-04-26T00:41:15Z
8264,Reworked isvalid lookup using IsValid function to decrease code redundancy.,,sir-sigurd,None,2017-03-29T05:47:42Z,2017-03-29T14:29:01Z
8263,Fixed #25873 -- Made GEOSGeometry handle srid parameter in the more predictable way.,https://code.djangoproject.com/ticket/25873,sir-sigurd,None,2017-03-29T05:39:01Z,2017-03-30T14:56:08Z
8262,Fixed #27989 -- Preserved empty QueryDicts for form's data/files args.,"This avoids empty QueryDicts being replaced by normal dictionaries because of their evaluation to False.

[Ticket #27989](https://code.djangoproject.com/ticket/27989)",stefanw,None,2017-03-28T17:12:21Z,2017-04-01T23:05:30Z
8261,Fixed #27970 -- Allowed QuerySet.in_bulk() to fetch on fields besides primary key.,https://code.djangoproject.com/ticket/27970,knyghty,None,2017-03-28T16:02:42Z,2017-07-21T13:14:36Z
8260,Fixed #27972 -- Made BaseSpatialField.geodetic use SpatialReference.geographic.,https://code.djangoproject.com/ticket/27972,sir-sigurd,None,2017-03-28T12:51:47Z,2017-04-08T08:53:47Z
8259,Fixed #27987 -- Added default colors in debug view stylesheet,,xlotlu,None,2017-03-28T11:54:41Z,2017-03-28T12:55:17Z
8258,Fixed #25414 -- Fixed QuerySet.annotate() with pk in values() on MySQL.,Ticket [25414](https://code.djangoproject.com/ticket/25414).,felixxm,None,2017-03-28T11:31:24Z,2017-03-29T04:48:09Z
8257,Used assertRaisesMessage() to test Django's error messages.,"As requested in #8251 a separate PR to replace `self.assertRaises` with `self.assertRaisesMessage`.

`self.assertRaisesRegex` is not used anywhere in the testsuite, so instead of replacing everything (which takes time), I've introduced it in a few places.

`IntegrityError`, `DatabaseError`, `DoesNotExist` will be ignored.",atombrella,None,2017-03-28T09:17:41Z,2017-07-31T05:37:10Z
8256,"Fixed #27942 -- Fixed admin's inlines.js indiscriminately adds ""add"" buttons to all tables in inlines","Fixed [#27942](https://code.djangoproject.com/ticket/27942)

The bat behavior occurs when we are using a custom field that is rendered with a table inside of an admin tabular-inline. 

Text taken form original [issue's description](https://code.djangoproject.com/ticket/27942) 

> For example, if you have some custom field like ​https://github.com/django-recurrence/django-recurrence uses and try to use it in a tabular inline, the result will be that there is an extra add button appended inside the custom field widget.


",aaboffill,None,2017-03-27T13:40:30Z,2017-03-30T14:39:59Z
8255,Fixed #27978 -- Allow loaddata to read data from stdin,"Dont sure, what about license in repository from ticket.
I take idea and some code from https://github.com/squareweave/django-loaddata-stdin",Kulikovpavel,None,2017-03-26T19:32:21Z,2017-05-27T00:15:31Z
8254,Refs #18247 -- Fixed filtering on decimal result of Least and Greatest on sqlite.,,sir-sigurd,None,2017-03-26T18:33:00Z,2017-03-29T17:32:39Z
8253,Refs #27736 -- Used decorators for GIS lookup registration.,,sir-sigurd,None,2017-03-25T19:45:34Z,2017-03-28T07:49:11Z
8252,Remove initial attribute from data migration examples,"I don't know why these were marked as initial in
db97a8849519a3933bf4abd2184efd68ebc21965. @akulakov?

The example is of a fairly normal data migration, not something that
would want to fake with the inital model.",stefanor,None,2017-03-25T18:04:34Z,2017-03-26T12:40:37Z
8251,Refs #23919 -- Removed misc. Python 2 comments and code.,I also added  a missing test for a conflicting alias.,atombrella,None,2017-03-25T17:42:05Z,2017-03-27T19:30:24Z
8250,Removed GISLookup._check_geo_field.,Unused since a0d166306fbdc41f49e6fadf4ec84b17eb147daa.,sir-sigurd,None,2017-03-25T16:49:42Z,2017-03-25T17:57:54Z
8249,Removed some broken (and unused) links in docs.,,sir-sigurd,None,2017-03-25T15:21:17Z,2017-03-25T17:57:58Z
8248,Fixed #27954 -- Allowed keyboard interrupt to abort queries in PostgreSQL dbshell.,"When running `dbshell` on a postgres database, CTRL-C will exit the shell with a `KeyboardInterrupt`, instead of being handled by the `psql` process.

I've written a patch that will temporarily override the SIGINT handler in order to fix this.",csinchok,None,2017-03-24T22:04:07Z,2017-04-02T01:01:09Z
8247,Fixed #21160 -- Fixed QuerySet.in_bulk() crash on SQLite when requesting more than 999 ids.,"Ticket [21160](https://code.djangoproject.com/ticket/21160).

Thanks Andrei Picus and Anssi Kääriäinen for the initial patch.",felixxm,None,2017-03-24T19:47:26Z,2017-03-27T16:44:16Z
8246,"Update ""Migrations that add unique fields""",Specified to add import in the instructions and added `updated_fields` into save call.,pauloxnet,None,2017-03-24T17:16:29Z,2017-03-27T18:07:12Z
8245,Fixed #27325 -- Offer a solution for static file serving suitable for production use.,https://code.djangoproject.com/ticket/27325,AleksejManaev,None,2017-03-24T07:16:41Z,2017-07-24T21:14:04Z
8244,Refs #25759 -- Fixed some GIS Funcs if different database backends are used.,,sir-sigurd,None,2017-03-24T05:03:00Z,2017-03-29T17:32:33Z
8243,Fixed #27981 -- Doc'd date/time filter localization change from refs #25758.,Refs #25758.,claudep,None,2017-03-23T18:36:25Z,2017-04-17T09:45:13Z
8242,Fixed #27603 -- Fixed AsKML when queryset is evaluated more than once.,https://code.djangoproject.com/ticket/27603,sir-sigurd,None,2017-03-23T18:28:39Z,2017-03-24T03:52:43Z
8241,Refs #21160 -- Replaced DatabaseFeatures.supports_1000_query_parameters by a DatabaseFeatures.max_query_params.,"Ticket [21160](https://code.djangoproject.com/ticket/21160).
",felixxm,None,2017-03-23T18:17:37Z,2017-03-24T17:38:02Z
8240,Simplified handling of expressions in StatAggregate.,,sir-sigurd,None,2017-03-23T16:32:38Z,2017-03-23T17:35:07Z
8239,Fixed #25718 -- Made a JSONField lookup value of None match keys that have a null value.,"It's my follow up on #5617.
In general it provides an ability to use ``None`` in queries if querying is applied to some key inside value of ``JSONBField``.

Thank you!",Stranger6667,None,2017-03-23T13:16:04Z,2018-04-04T15:25:26Z
8238,Filtered relation rebase + select_related support,"This PR is here to get full test coverage and offer code for @ticosax 

I built the feature on top of https://github.com/django/django/pull/7560, I did a rebase on master and added select_related support. The feature works now in a way where we allow one to select_related() to the filtered relation. I'm happy with this approach, as it allows one to express queries that were impossible or weird to construct before.

This can be also used as basis for something like:
```
Author.objects.custom_relation(
    'avg_book_price',
    queryset=Book.objects.values('author_id').annotate(avg=Avg('price')),
    connector=Q(pk=avg_book_price__author_id)
)
```
that is, run Django querysets as subqueries. We could add a shortcut for this in form of:
```
Author.objects.annotate(
    avg_book_price=Avg('books__price', use_subquery=True
)
```
which we currently lack, and which would be handy to have.

In short, I like this a lot.",holvianssi,None,2017-03-23T09:55:36Z,2017-08-12T12:59:50Z
8237,Removed redundant Value wraps in Substr function.,,sir-sigurd,None,2017-03-23T04:10:00Z,2017-03-23T16:42:49Z
8236,Fixed #27952 -- Added translation hint for RegexValidator error message.,https://code.djangoproject.com/ticket/27952,sajattack,None,2017-03-22T20:02:22Z,2017-03-23T15:11:02Z
8235,"Refs #27556, refs #27488 -- Updated list of backends that support isvalid lookup.","https://code.djangoproject.com/ticket/27488
https://code.djangoproject.com/ticket/27556",sir-sigurd,None,2017-03-22T17:57:12Z,2017-03-23T17:35:13Z
8234,Fixed #28071 -- ExtendsNode history initialized with context origin,"When including a partial template with a block that has been extended, where the extension employs {{ block.super }}, the render phase occurs twice on the child-most extension of the included template because the history is tracking the context's origin instead of the extending node's origin.",jdzero,None,2017-03-22T16:09:06Z,2017-11-02T13:57:09Z
8233,Fixed #27956 -- Fixed display of errors in an {% extends %} child.,https://code.djangoproject.com/ticket/27956,timgraham,None,2017-03-22T15:21:44Z,2017-03-25T12:22:37Z
8232,Fixed #27975 -- Fixed crash if ModelChoiceField's queryset=None.,"This commit fixes a regression in the ability to use `queryset=None` on `ModelChoiceField` and later set the QuerySet in the form's `__init__` method.

https://code.djangoproject.com/ticket/27975",jamesbeith,None,2017-03-22T05:41:23Z,2017-03-23T23:47:53Z
8231,Linked GIS QuerySet API docs to corresponding PostGIS docs.,,sir-sigurd,None,2017-03-22T04:17:06Z,2017-03-22T16:37:58Z
8230,Fixed #27973 -- Fixed GeoJSON representation of LinearRing and custom GEOSGeometry subclasses.,https://code.djangoproject.com/ticket/27973,sir-sigurd,None,2017-03-22T02:49:50Z,2017-03-29T17:26:56Z
8229,Fixed #27969 -- Fixed models.Field.formfield() setting 'disabled' for fields with choices.,models.Field.formfield() allow 'disabled' keyword argument for fields with choices,kapilgarg1996,None,2017-03-21T23:46:22Z,2017-03-23T17:56:51Z
8228,Fixed #27966 -- Bumped required psycopg2 version to 2.5.4.,,felixxm,None,2017-03-21T15:45:39Z,2017-03-21T16:24:22Z
8227,Improved tests for django.contrib.contenttypes.views.,"I added missing tests, renamed some tests, removed duplicated tests and moved some tests from test_models which didn't belong there.
It should be 100% covered now, except for this code: https://github.com/django/django/blob/master/django/contrib/contenttypes/views.py#L71-L72
I couldn't find a way to test it. It looks like this scenario can't happen. Please see if that is the case.",desecho,None,2017-03-21T15:07:42Z,2019-05-31T09:40:18Z
8226,Fixed #27960 -- Set errcheck=False for GDALAllRegister to prevent crash.,https://code.djangoproject.com/ticket/27960,sir-sigurd,None,2017-03-21T14:55:56Z,2017-03-21T16:39:48Z
8225,Refs #27919 -- Changed contrib widget's get_context() attrs kwarg to an arg.,Follow up to 075e93c16a82ba7869a0b2d572e99fdbd0724042.,timgraham,None,2017-03-21T14:19:49Z,2017-03-21T14:40:50Z
8224,Fixed #27966 -- Fixed Postgres backend dependency on context manager,"…heck crash

@charettes is this the change you were proposing on the ticket? what else needed to be addressed?",auvipy,None,2017-03-21T04:40:29Z,2017-07-26T09:00:40Z
8223,Removed obsolete temporal reference in docs/faq/general.txt.,"I was reading the FAQ (for the first time in awhile) and notice it talked about a ""couple of years ago"". It has been more than a couple of years since Django was open sourced, so I thought it'd be better to remove that part of the language. ",garrypolley,None,2017-03-21T01:41:07Z,2017-03-21T12:43:12Z
8222,"Fixed #9475 -- allow add(), create(), etc for m2m with through","https://code.djangoproject.com/ticket/9475
just a proof of concept",collinanderson,None,2017-03-21T00:57:31Z,2018-10-26T15:40:55Z
8221,Fixed #27965 -- Fixed precision in a geoforms test (refs #27939).,https://code.djangoproject.com/ticket/27965,sir-sigurd,None,2017-03-20T19:38:55Z,2017-03-21T16:40:02Z
8220,Fixed typos in docs headers.,,felixxm,None,2017-03-20T18:52:47Z,2017-03-21T05:09:21Z
8219,Fixed #27931 -- Clarified meaning of django catch-all logger.,"Two different commits with two different approaches, I prefer the second one.
https://code.djangoproject.com/ticket/27931",vkaracic,None,2017-03-20T17:30:06Z,2017-05-05T22:41:29Z
8218,Clarified backend support of Area GIS function in docs.,,sir-sigurd,None,2017-03-20T16:15:18Z,2017-03-22T16:38:53Z
8217,Fixed #27919 -- Fixed some args/kwargs discrepancies in template widget rendering APIs.,https://code.djangoproject.com/ticket/27919,timgraham,None,2017-03-20T13:46:40Z,2017-03-21T14:14:30Z
8216,Fixes #27963: Update docstring examples to follow PEP 257,A proposal for a fix for [issue #27963](https://code.djangoproject.com/ticket/27963).,decibyte,None,2017-03-20T12:29:31Z,2017-03-21T14:12:42Z
8215,Fixed #27962 -- Allowed lookups on Area annotation.,https://code.djangoproject.com/ticket/27962,sir-sigurd,None,2017-03-20T07:12:55Z,2017-03-24T03:52:48Z
8214,Removed BaseSpatialOperations.truncate_params.,Unused since 32969c3931dea8488ee4ad2849eab43e31e5542e.,sir-sigurd,None,2017-03-19T17:48:21Z,2017-03-20T12:17:44Z
8213,Refs #27935 -- Fixed BrinIndex.max_name_length if a project's default database isn't PostgreSQL.,,felixxm,None,2017-03-18T21:02:41Z,2017-03-20T16:14:49Z
8212,Removed more GeoQuerySet leftovers.,Follow up to a0d166306fbdc41f49e6fadf4ec84b17eb147daa.,sir-sigurd,None,2017-03-18T20:08:43Z,2017-03-21T16:40:11Z
8211,Fixed #27957 -- Removed technical terms from InlineForeignKeyField/ModelMultipleChoiceField error messages.,<https://code.djangoproject.com/ticket/27957>,jdufresne,None,2017-03-18T20:05:38Z,2017-03-25T22:42:44Z
8210,Fixed #27890 -- Fixed FileNotFound cleanup exception in runtests.py on Python 3.6+.,Possible alternative to https://github.com/django/django/pull/8198.,timgraham,None,2017-03-18T14:17:20Z,2017-03-20T16:03:56Z
8209,Fixed #27724 -- Fixed SelectDateWidget redisplay if a year isn't chosen.,"This is a new PR in order to close without merge the PR [8108](https://github.com/django/django/pull/8108) 
and avoid the following commit [6a2bc33](https://github.com/django/django/pull/8108/commits/6a2bc334531dfad84fb3d8ea037787067d925a3f). That commit became to the PR [8206](https://github.com/django/django/pull/8206).

Fixed #27724 SelectDateWidget clears date and month if year is not selected.
If year is not selected in SelectDateWidget, then all the inputs are cleared as opposed to a state where date or month is missing.",aaboffill,None,2017-03-17T20:21:17Z,2017-03-18T21:55:20Z
8208,Improved test coverage for django.contrib.sitemaps.,,desecho,None,2017-03-17T19:27:12Z,2017-07-26T19:50:18Z
8207,Fixed #27952 -- Clarified that only ASCII letters are accepted.,https://code.djangoproject.com/ticket/27952,sajattack,None,2017-03-17T19:13:35Z,2017-03-20T16:19:50Z
8206,Added tests for SelectDateWidget.format_value().,"Add non-regressions tests for [#27724](https://code.djangoproject.com/ticket/27724) before merge the PR with the final solution.
Suggested by django member team... [here](https://code.djangoproject.com/ticket/27724#comment:5)",aaboffill,None,2017-03-17T19:10:48Z,2017-03-18T19:18:27Z
8205,Removed unused parameter in Query.try_transform,"It's not a documented function, so I think it should be OK. `connector=AND` in build_filter is also an unused parameter, and the function is also not documented, so perhaps this could be removed, too?",atombrella,None,2017-03-17T18:56:26Z,2017-03-18T14:39:00Z
8204,Fixed #27949 -- Doc'd how OpenLayers 3 widgets work.,https://code.djangoproject.com/ticket/27949,timgraham,None,2017-03-17T17:13:28Z,2017-03-21T14:51:06Z
8203,Fixed #27945 -- Clarified RegexValidator doc,"Clarified that the validator searches throughout value for a match with
regex, rather than requiring an exact match.",seanfagan,None,2017-03-17T17:03:24Z,2017-03-21T19:02:00Z
8202,Completed test coverage for RedirectFallbackMiddleware.,,desecho,None,2017-03-17T16:24:34Z,2017-06-03T00:33:24Z
8201,Fixed #27915 -- Allowed Meta.indexes to be defined in abstract models.,"Not sure about the best approach here. This is sort of working with at least one test failure to investigate (and tests to be added).
https://code.djangoproject.com/ticket/27915",timgraham,None,2017-03-17T15:29:44Z,2017-03-21T15:33:24Z
8200,[RFC] template: do not apply string_if_invalid with 'default' filter,"While the usage of string_if_invalid is discouraged, it can be
beneficial in CI to catch mistakes in template.

Therefore however `{{ request.id | default:""unknown"" }}` should not
cause it to fail.",blueyed,None,2017-03-17T14:32:50Z,2017-03-24T16:36:21Z
8199,Fixed #27939 -- Updated OpenLayersWidget.map_srid for OpenLayers 3.,"Regression in 2ebfda38e65177dfc7d6e90457ffa4a0fa2796f0 (refs #25004).

https://code.djangoproject.com/ticket/27939",timgraham,None,2017-03-17T14:00:32Z,2017-03-17T16:59:26Z
8198,Fixed #27890 -- Fixed FileNotFound cleanup exception in runtests.py on Python 3.6+.,https://code.djangoproject.com/ticket/27890,timgraham,None,2017-03-17T13:23:42Z,2017-03-20T15:02:47Z
8197,Removed mentioning of MySQL from Perimeter docs.,MySQL doesn't actually support Perimeter function.,sir-sigurd,None,2017-03-17T09:41:23Z,2017-03-18T17:01:18Z
8196,[1.11.x] Fixed #27951 -- Made a form test slightly more robust,,shaib,None,2017-03-17T07:34:55Z,2017-03-17T07:46:47Z
8195,Clarified return value of NumGeometries GIS function.,,sir-sigurd,None,2017-03-17T07:21:29Z,2017-03-18T17:01:18Z
8194,Removed self from method signatures in docs,,alasdairnicol,None,2017-03-16T17:49:13Z,2017-03-17T00:34:00Z
8193,Replaced type-specific assertions with assertEqual().,"Python docs say, ""it's usually not necessary to invoke these methods directly.""",timgraham,None,2017-03-16T17:34:04Z,2017-03-17T11:51:56Z
8192,Fixed #22673 -- Added support for PostgreSQL schemas.,"Add a feature for schemas, and an sql operation for schema SQL.
Modify base code to split table names that contain a '.' into schema.table.
For every table created, create the schema if it hasn't already been created.
Enable feature for postgres, fix quoting (""schema"".""table""), and fix work-around for #7783.
Added simple test for creating and quering a table in a non-standard schema.
Added corresponding documentation.",jaapvermeulen,None,2017-03-16T15:46:32Z,2017-03-23T14:11:09Z
8191,Fixed #27944 -- Allowed Model.meta.get_field('pk') to return the primary key.,,jschneier,None,2017-03-16T15:40:11Z,2020-07-09T10:47:46Z
8190,Added support for non-LINESTRING geometries for NumPoints function on SpatiaLite., ,sir-sigurd,None,2017-03-16T14:54:26Z,2017-03-17T07:29:42Z
8189,Ticket 22673 -- Abandoned,"Changes for allowing schema names to be included in the table names as 'my_schema.my_table'.
Added test case for verifying that a table can be created and manipulated within a schema.
Added documentation for the new feature for PostgreSQL.
https://code.djangoproject.com/ticket/22673",jaapvermeulen,None,2017-03-16T14:51:49Z,2017-03-16T15:30:40Z
8188,Added links to PostGIS docs for GIS functions docs.,,sir-sigurd,None,2017-03-16T13:53:22Z,2017-03-16T19:27:35Z
8187,Fixed typo in email validation regular expression,"There was two extraneous backslashes in the user_regex that essentially disabled the second range. This also contains a few more examples courtesy of https://en.wikipedia.org/wiki/Email_address

For completeness all examples from Wikipedia are included, but the ones that still fail have been commented out.

This is a small fix, but see #8081 for the future overhaul.",maxnordlund,None,2017-03-16T11:50:41Z,2017-03-17T22:45:37Z
8186,Removed some GeoQuerySet leftovers.,Follow up to a0d166306fbdc41f49e6fadf4ec84b17eb147daa.,sir-sigurd,None,2017-03-16T07:23:30Z,2017-03-16T13:54:02Z
8185,Fixed nondeterministic ordering test failure in model_forms.,,felixxm,None,2017-03-16T05:52:18Z,2017-03-16T18:46:17Z
8184,Fixed #27948 -- Removed incorrect unquote() in static serving views.,Files with names such as %2F.txt can't be retrieved.,timgraham,None,2017-03-16T01:09:38Z,2017-03-17T11:55:17Z
8183,Fixed #56 -- Add Positive AutoFields,https://code.djangoproject.com/ticket/56#comment:44,collinanderson,None,2017-03-15T23:50:33Z,2017-09-06T20:48:21Z
8182,Correct checkout URL for Django development branch,"In the detailed installation instructions, the checkout URL of the Django development branch `git://github.com/django/django.git` doesn't seem to be valid. It's either `https://github.com/django/django.git` or `git@github.com:django/django.git`. 

As this is a fairly trivial change, it doesn't have a Trac ticket.",adstastic,None,2017-03-15T19:30:27Z,2017-03-16T17:47:25Z
8181,[1.11.x] Fixed #27822 -- Replaced deprecated cx_Oracle types in DatabaseIntrospection.data_types_reverse.,Backport of 1b96dbdad0f9e65bf31764aa017f411d116682fc from master,timgraham,None,2017-03-15T13:09:28Z,2017-03-15T14:04:34Z
8180,Fixed incorrect import in docs/ref/models/expressions.txt.,"Fixed a wrong import path. Using the example as it was crashes with 
```python
from django.db.models.functions import Value
ImportError: cannot import name 'Value'
```",lb1c,None,2017-03-15T10:01:59Z,2017-03-15T12:09:49Z
8179,"Removed unused words from the ""spelling_wordlist"".",,felixxm,None,2017-03-14T21:37:19Z,2017-03-16T18:45:08Z
8178,Refs #27563 -- Fixed ModelChoiceField.__deepcopy__() so forms don't share a queryset cache.,https://code.djangoproject.com/ticket/27563,timgraham,None,2017-03-14T21:05:32Z,2017-03-16T08:10:43Z
8177,Fixed #27914 -- Used qualified name to extract model field path.,Ticket: https://code.djangoproject.com/ticket/27914,ChillarAnand,None,2017-03-14T12:59:09Z,2017-06-14T14:31:12Z
8176,Corrected number of tildes in header in aggregation documentation,I'm not sure if the additional tilde was there for a reason.,atombrella,None,2017-03-14T12:35:15Z,2017-03-15T16:23:01Z
8175,Use MAX_NAME_LENGTH instead in models/indexes.py,,atombrella,None,2017-03-14T12:29:55Z,2017-03-15T16:23:19Z
8174,Removed team page in favor of DSF teams page.,"See: https://github.com/django/djangoproject.com/issues/720
",tobiasmcnulty,None,2017-03-14T01:15:31Z,2017-03-14T20:37:52Z
8173,Refs #27788 -- Removed unneeded Oracle 11 workarounds in GIS tests.,,sir-sigurd,None,2017-03-13T19:24:06Z,2017-03-14T04:54:15Z
8172,Added my bio to the team page (finally!),,tobiasmcnulty,None,2017-03-13T16:52:32Z,2017-03-13T22:32:06Z
8171,Fixed #27935 -- Fixed crash with BrinIndex name > 30 characters.,"Changed prefix to `brn` so the index name is at most 30 characters.

Reported in https://code.djangoproject.com/ticket/27935",atombrella,None,2017-03-13T14:14:48Z,2017-03-18T13:10:59Z
8170,"Clarified meaning of ""Optional"" in User model field docs.","according to the code https://github.com/django/django/blob/master/django/contrib/auth/models.py#L333 the email field of the user model cannot be `None` and is required.

Ran into this when saving the user model without email via a regular DRF serializer:
```
  class UserSerializer(serializers.HyperlinkedModelSerializer):
      class Meta:
          model = User
          fields = ('first_name', 'last_name', 'email')
          extra_kwargs = {'email': {'required': False, 'allow_blank': True}}
```",patroqueeet,None,2017-03-12T21:38:02Z,2017-04-02T19:20:06Z
8169,Stable/1.11.x,hahahha,halleye,None,2017-03-12T14:28:20Z,2017-03-12T16:17:35Z
8168,made hanging style indentation consistant in apps module,,auvipy,None,2017-03-12T08:06:57Z,2019-06-11T07:18:13Z
8167,[1.10.x] Refs #27924 -- Doc'd that cx_Oracle < 5.3 is required.,Ticket [27924](https://code.djangoproject.com/ticket/27924) (see [comment](https://code.djangoproject.com/ticket/27924#comment:3)).,felixxm,None,2017-03-11T12:09:31Z,2017-03-11T20:48:53Z
8166,Fixed #27918 -- Add docs for ChoiceWidget.option_template_name,,Kulikovpavel,None,2017-03-11T07:13:50Z,2017-03-15T14:09:33Z
8165,Fixed #27924 -- Added cx_Oracle 5.3 support.,"Fixed Oracle backend due to the `cx_Oracle` 5.3 change in a `cursor.description` behavior i.e.
`Use None instead of 0 for items in the Cursor.description attribute that do not have any validity.` (see [release notes ](http://cx-oracle.readthedocs.io/en/5.3/releasenotes.html#version-5-3-march-2017)).",felixxm,None,2017-03-10T14:21:34Z,2017-03-10T22:13:01Z
8164,Fixed #23147 -- Disabled a limit/offset on a query with select_for_update on Oracle.,Ticket [23147](https://code.djangoproject.com/ticket/23147) (see also discussion in [23061](https://code.djangoproject.com/ticket/23061)).,felixxm,None,2017-03-10T12:16:06Z,2017-04-07T12:10:22Z
8163,Fixed #27922 -- Added ErrorDict.get_json_data().,"This makes ErrorDict behave the same as ErrorList. ErrorDict.get_json_data() is useful when incorporating form validation errors inside a larger JSON response, where the JSON string output from ErrorDict.as_json() would not be appropriate.

Tests and docs have been updated to include the new function.

See also https://code.djangoproject.com/ticket/27922",timheap,None,2017-03-10T00:05:21Z,2017-05-27T14:24:47Z
8162,Described DEBUG_PROPAGATE_EXCEPTIONS behavior in more detail.,,timgraham,None,2017-03-09T16:57:07Z,2017-03-09T19:05:01Z
8161,Decoupled test client encoding tests from JSON handling,"Using JSON as non-UTF-8 content is controversial, and the RFC 7159
discourages it.",claudep,None,2017-03-09T15:29:23Z,2017-03-09T21:16:48Z
8160,Fixed #27852 -- Fixed object deletion to show all protected related objects rather than just the first one.,https://code.djangoproject.com/ticket/27852,desecho,None,2017-03-09T15:24:08Z,2020-01-27T08:42:26Z
8159,"Fixed #27920 -- Restored empty RadioSelect choice producing value="""".",,claudep,None,2017-03-09T15:04:41Z,2017-03-14T17:24:57Z
8158,Fix libgdal.py crash under Windows if PATH containes non-ascii symbols,"Problem: 
application crashes under Windows, if PATH contain non-ascii symbols (%USERPROFILE% for users with non-ascii names for example).

Reason:
Function find_library splits os.environ['PATH'] into individual directories and tries them all one by one. In python 2.x os.environ contains strings, not unicode (that is bad, but probably would not be fixed soon), so inside it tries to add non-ascii str and unicode string (library name). And boom -- got an UnicodeDecodeError exception.

So, I suggest to use simple strings as library names. 
POSIX find_library much more complex, I know nothing about it and probably it is ok with unicode names.",fat-crocodile,None,2017-03-09T02:11:21Z,2017-03-09T14:32:21Z
8157,Fixed #27911 -- Doc'd how to register custom User with admin.,"https://code.djangoproject.com/ticket/27911

This adds instructions about `admin` integration to ""Using a custom user model when starting a project"".",Flimm,None,2017-03-08T15:47:50Z,2017-03-08T17:14:59Z
8156,Fixed #27888 -- Added button to clear all admin filters,Fixed #27888 -- Added button to clear all admin filters,alaminopu,None,2017-03-08T13:12:42Z,2018-07-27T21:19:21Z
8155,Refs #27804 -- Used subTest() in several tests modules,,browniebroke,None,2017-03-07T21:13:54Z,2017-05-24T12:58:03Z
8154,Fixed #27895 -- Used response charset when test client decodes JSON,,claudep,None,2017-03-07T18:42:34Z,2017-03-09T15:31:28Z
8153,Refs #27622 -- Fixed a regression in JSON content-type detection,"A JSON Content-Type can contain further content, like charset for example.",claudep,None,2017-03-07T15:14:20Z,2017-03-07T15:59:36Z
8152,Fixed #9363 -- Added callstack capture to CursorDebugWrapper,"continued from https://github.com/django/django/pull/7339

@felixxm would you mind guiding the proper direction?",auvipy,None,2017-03-07T13:48:57Z,2017-03-24T00:09:30Z
8151,Fixed #24365 -- Made inspectdb handle positive integer fields on MySQL.,Ticket [24365](https://code.djangoproject.com/ticket/24365).,felixxm,None,2017-03-07T13:09:29Z,2017-03-08T15:58:42Z
8150,Fixed #27905 – Added RelatedFieldWidgetWrapper.value_omitted_from_data().,"https://code.djangoproject.com/ticket/27850

In `RelatedFieldWidgetWrapper`, `value_omitted_from_data` should be delegated to the wrapped widget.",raphaelmerx,None,2017-03-07T03:25:36Z,2017-03-07T18:56:30Z
8149,Refs #27903 -- Asserted that RenameModel updates hidden relationships.,Forward port of the tests submited in #8146.,charettes,None,2017-03-06T04:43:22Z,2017-03-06T05:26:14Z
8148,Fixed #27897 -- Fixed crash when 'pk' in ModelAdmin.search_filters.,"Ticket: https://code.djangoproject.com/ticket/27897

A few things of note:

1. Using the kwarg of `search_fields` with `get_changelist_args` didn't work for me.
2. The lookup that is produced is `__icontains`, not sure if that matters.
3. I'm not sure what to assert against, the fact that it doesn't crash is the basic regression.",jschneier,None,2017-03-05T18:28:26Z,2017-03-16T14:10:50Z
8147,Fixed #27904 -- Added a system check that Field.validators are callable.,[Ticket](https://code.djangoproject.com/ticket/27904),adamchainz,None,2017-03-05T17:45:33Z,2017-03-11T18:05:37Z
8146,Tests #27903 RenameModel does not update ForeignKey with related_name='+',"Add a test case to show that RenameModel does not not change ForeignKey's model with related_name='+'

This PR is to show the issue in https://code.djangoproject.com/ticket/27903#ticket",flupzor,None,2017-03-04T19:11:11Z,2017-03-05T03:53:04Z
8145,Refs #27795 -- Removed unneeded force_text calls,,claudep,None,2017-03-04T15:21:27Z,2017-03-04T17:19:37Z
8144,master,"According to clean code prectices, change ""pub_date"" to ""publication_date""",iddoberger,None,2017-03-04T13:03:48Z,2017-03-06T03:51:51Z
8143,Fixed #27554 -- Made prefetched_related aware of RelatedManager's prefetched objects cache,Ticket: https://code.djangoproject.com/ticket/27554,francoisfreitag,None,2017-03-04T04:02:35Z,2017-05-04T13:52:57Z
8142,fix mutipart post parsing when using test client,"`multipart/form-data` was not being decoded when using `test.client.Client`, since we were checking for `self.content_type == 'multipart/form-data'` when `MULTIPART_CONTENT` on ""django/test/client.py"" was using `MULTIPART_CONTENT = 'multipart/form-data; boundary=%s' % BOUNDARY` as ""content type'.

See:
https://github.com/django/django/blob/master/django/test/client.py#L32
https://github.com/django/django/blob/master/django/test/client.py#L338
https://github.com/django/django/blob/master/django/http/request.py#L281",cleberzavadniak,None,2017-03-03T18:02:26Z,2017-03-10T13:52:58Z
8141,Fixed #27900 -- Made escapejs escape backticks for use in ES6 template literals.,https://code.djangoproject.com/ticket/27900,timgraham,None,2017-03-03T16:31:50Z,2017-03-04T14:04:44Z
8140,Fixed #27860 -- Dropped varchar_pattern_ops/text_pattern_ops index before altering char/text field in PostgreSQL.,Ticket [27860](https://code.djangoproject.com/ticket/27860).,felixxm,None,2017-03-02T21:44:05Z,2017-05-24T11:12:20Z
8139,Fixed #26522 -- Reuse join aliases in-order,"Solved a non-deterministic AssertionError raised by circular
references in change_map.

Thanks Andrew Brown for the minimal test case.",rlmv,None,2017-03-02T14:54:52Z,2017-03-06T23:43:54Z
8138,Fixed #21936 -- Refactored DeleteView to be compatibale with SuccessMessageMixin ,lets see if everything works fine. will add docs and release note later,auvipy,None,2017-03-02T13:50:37Z,2017-04-01T13:03:00Z
8137,Fixed #27854 -- Make  warn (rather than blow up) on missing directories,Changes has been made to show warning (without stopping execution) if any of the static files directory does not exists.,maheshjurel,None,2017-03-02T13:09:32Z,2017-06-01T23:14:18Z
8136,"Refs #27860 -- Optimized deleting indexes on PostgreSQL by using ""IF EXISTS"" clause.",,felixxm,None,2017-03-02T06:13:24Z,2017-03-03T16:12:08Z
8135,Fixed typos,,ChillarAnand,None,2017-03-02T03:56:52Z,2017-03-02T12:57:13Z
8134,Fixed #27891 -- Added PasswordResetConfirmView.post_reset_login_backend attribute.,https://code.djangoproject.com/ticket/27891#ticket,camilonova,None,2017-03-02T00:10:08Z,2017-03-08T00:52:27Z
8133,Fixed #27889 -- Fixed incorrect check error if ModelAdmin.ordering refers to 'pk'.,https://code.djangoproject.com/ticket/27889,davidszotten,None,2017-03-01T22:47:19Z,2017-03-02T15:25:06Z
8132,Fixed #27887 -- Fixed URLs check crash with namespaced URLs inside non-namespaced URLs.,https://code.djangoproject.com/ticket/27887,timgraham,None,2017-03-01T20:25:03Z,2017-03-03T15:59:51Z
8131,Make the name of the simple template tag consistent,"`get_current_time` was the name of the tag in the assignment tag example which has been removed. In the simple tag example `current_time` is used, so I have updated the assignment example to be consistent and remove a possible question mark from a reader.",albertoconnor,None,2017-03-01T18:52:13Z,2017-03-01T20:42:01Z
8130,Removed PostgreSQL version detection for psycopg2 < 2.0.12.,,timgraham,None,2017-03-01T18:18:32Z,2017-03-01T18:37:50Z
8129,Fixed a test with psycopg2 2.7.,,timgraham,None,2017-03-01T17:28:18Z,2017-03-01T18:15:34Z
8128,Fixed a typo in the 1.10.6 release notes,Just a small one.,adamchainz,None,2017-03-01T13:55:54Z,2017-03-01T15:57:55Z
8127,Refs #27836 -- Fixed ignored exception in test cleanup.,"Since e4025563ea87b0e3acb1d617ebfcc0b8789f75e7 I started seeing this exception in `runtests.py` output:
```
test_delete_deletes_directories (file_storage.tests.FileStorageTests) ... Exception ignored in: <finalize object at 0x7fc6fc1724d0; dead>
Traceback (most recent call last):
  File ""/usr/lib64/python3.4/weakref.py"", line 519, in __call__
    return info.func(*info.args, **(info.kwargs or {}))
  File ""/usr/lib64/python3.4/tempfile.py"", line 698, in _cleanup
    _shutil.rmtree(name)
  File ""/usr/lib64/python3.4/shutil.py"", line 459, in rmtree
    onerror(os.lstat, path, sys.exc_info())
  File ""/usr/lib64/python3.4/shutil.py"", line 457, in rmtree
    orig_st = os.lstat(path)
FileNotFoundError: [Errno 2] No such file or directory: '/tmp/django_5ol7ugyk/tmpdw2jd793/tmpn6qee0gk'
ok
```

This happens because `TemporaryDirectory` tries to delete the directory that test already deleted. The exception doesn't fail any tests because it happen during `weakref.finalize` cleanup handler.

Replacing `TemporaryDirectory` with `mkdtemp` fixes this error.",vytisb,None,2017-02-28T22:42:24Z,2017-03-01T22:58:55Z
8126,Improved test coverage for django.conf,,desecho,None,2017-02-28T19:21:42Z,2017-07-27T00:00:29Z
8125,Fixed #26911 -- Removed NoReverseMatch silencing in RedirectView.,https://code.djangoproject.com/ticket/26911,djk2,None,2017-02-28T19:10:37Z,2017-03-02T17:37:26Z
8124,No sha1,"This removes a non-security critical use of sha1. It was being used to generate a cache key. Sha256 is longer than sha1 in this casase (64 vs 40), is that a problem? If so sha256 can be truncated.

I also add a note to a function that is using hmac/SHA1 to sign a string.",cowlicks,None,2017-02-28T06:37:22Z,2017-02-28T14:41:02Z
8123,Fixed #27539 -- Made TransactionTestCase._pre_setup() clear the queries_log so it's less likely to overflow.,"Following the [PR](https://github.com/django/django/pull/8013). I was unable to make the test case asked by @timgraham. I could use some help. In my opinion the test case should be similar to backends.tests.BackendTestCase.test_queries_limit. The problem I encountered was testing assertNumQueries with the new_connection. Although the test provided works, it increases the time from 0.1 to 6 seconds.",reficul31,None,2017-02-28T01:06:27Z,2017-06-17T01:22:21Z
8122,Removed obsolete references to form_for_instance().,,timgraham,None,2017-02-27T22:46:49Z,2017-02-28T12:37:48Z
8121,Fixed #3461 -- Made DatabaseWrapper.cursor() pass args/kwargs to the database adapter.,"this PR aims to complete https://github.com/django/django/pull/7514 

I found some changes in internal codes. so tests and docs are incomplete right now.

as the reviewer of previous PR https://github.com/django/django/pull/7514 could you suggest the changes are OK here and input about tests? @felixxm I have also added oracle backend here.

please verify and let me know.

I am not so good in testing so suggestions are wellcome.",auvipy,None,2017-02-27T17:23:16Z,2018-04-06T05:45:36Z
8120,Fixed #27882 -- Allowed {% cache %} to cache indefinitely.,"Fixed the cache templatetag so that fragments will be cached
forever when the cache timeout is set to None.",rlmv,None,2017-02-27T17:21:02Z,2017-03-15T17:01:22Z
8119,Fixed #25367 -- Allowed boolean expressions in QuerySet.filter() and exclude().,"Here is a first crack at making it possible to do nice things like:

    queryset.filter(Exists(subquery))

Also:

    queryset.annotate(foo=Case(When(Exists(subquery), then=...))
",schinckel,None,2017-02-27T09:30:20Z,2019-11-07T19:47:45Z
8118,Fixes #27859: Ignore db_index for TextField on MySQL,"I still have following doubts.

1. `django.db.backends.schema.mysql.DatabaseSchemaEditor.skip_default` is used to know if the current field is a text or blob or json field or their subtypes. I used that method to avoid duplicacy of data. The name of method doesn't seem suitable in this bug context. It should be rather something `_is_mysql_non_indexable_fields`.

2. This patch fix silently ignores db_index on text or blob or json fields. It would be a little more helpful if it also prints warning message or some informational message saying something like `MySQL doesn't support index on text or blob or json fields`

Note: This is my very first patch to django source code. So please pour me with more knowledge.",zubairalam,None,2017-02-26T06:10:56Z,2017-05-08T07:02:23Z
8117,Refs #27025 -- Removed unneeded sqlite3 transaction management workaround in Python 3.6,Obsolete per https://bugs.python.org/issue10740#msg274816,timgraham,None,2017-02-25T20:39:16Z,2018-10-25T23:55:01Z
8116,Fixed #25406 -- Removed exception hiding in PostgreSQL test database …,"…creation / cloning during `--keepdb`. Ticket [25406](https://code.djangoproject.com/ticket/25406).

I'm going to prepare separate PR with similar modification in the MySQL backend.",felixxm,None,2017-02-25T12:05:22Z,2017-04-10T18:01:34Z
8115,Fixed #27862 -- Fixed incorrectly quoted table aliases in Subquery SQL.,Exists() feature generates invalid SQL query on postgres backend,schinckel,None,2017-02-25T10:43:05Z,2017-06-12T01:06:00Z
8114,Imported django.http classes instead of django.http.,first pass @timgraham ,auvipy,None,2017-02-25T06:51:24Z,2017-03-08T06:29:03Z
8113,Fixes #27881 -- Add a --mode=unified to diffsettings management command.,,lamby,None,2017-02-25T02:27:06Z,2017-04-07T14:06:29Z
8112,Improved coverage config.,,desecho,None,2017-02-24T21:48:49Z,2017-02-24T23:56:59Z
8111,Adjusted my bio.,,charettes,None,2017-02-24T21:37:11Z,2017-03-14T01:36:29Z
8110,Fixed #27879 -- Fixed crash if enclosures aren't provided to Atom1Feed.add_item().,[Ticket #27879](https://code.djangoproject.com/ticket/27879),PavloKapyshin,None,2017-02-24T12:59:40Z,2017-02-24T14:46:32Z
8109,Refs #22144 -- Added test for unicode size edge case on Oracle.,,felixxm,None,2017-02-24T05:40:41Z,2017-02-24T15:56:21Z
8108,Fixed #27724 -- SelectDateWidget clears date and month if year is not selected,"Fixed #27724 `SelectDateWidget` clears date and month if year is not selected.

If year is not selected in `SelectDateWidget`, then all the inputs are cleared as opposed to a state where date or month is missing.",aaboffill,None,2017-02-23T21:38:17Z,2017-03-17T20:31:25Z
8107,Refs #23919 -- Used yield from.,"Replaced
```
for x in iterable:
    yield x
```
with
```
yield from iterable
```",vytisb,None,2017-02-23T21:05:40Z,2017-02-24T21:28:15Z
8106,WIP: Refs #27656 removing PEP warnings from code,"# Need some comments 
### There are multiple problems in current master code
If you open django project in PyCharm then you can see all the warnings visually

Most frequent warning are
1. `python 2.7 compatablity issues eg (use of normal super() is not supported in python 2.7 )`
2. `using shoadow builtin variable names like (file, list , next etc)`
3. `Doc string should use triple double quotes`
4. `access to protected member __meta of a class` ",vipin14119,None,2017-02-23T17:43:41Z,2017-02-23T18:35:21Z
8105,Fixed #27878 -- Use Python 3 shebangs.,,lamby,None,2017-02-23T16:01:05Z,2017-02-23T19:13:48Z
8104,[1.11.x] Fixed #27875 -- Doc'd manager_inheritance_from_future in manager docs.,https://code.djangoproject.com/ticket/27875,timgraham,None,2017-02-23T15:03:55Z,2017-02-24T21:15:39Z
8103,Refs #25187 -- Fixed AuthBackend.authenticate() compatibility for signatures that accept a request kwarg.,https://code.djangoproject.com/ticket/25187#comment:12,timgraham,None,2017-02-23T14:19:12Z,2017-02-24T15:15:50Z
8102,Fixed #27874 -- URL namespacing warning (urls.W005) should consider nested URL namespaces.,,lamby,None,2017-02-23T03:15:58Z,2017-02-24T15:13:49Z
8101,Fixed #27873 -- Fixed crash in setup_test_environment() if ALLOWED_HOSTS is a tuple.,"We previously let ALLOWED_HOSTS to be a tuple but 17e6616 (re. #26666)
regressed on this.

Signed-off-by: Chris Lamb <chris@chris-lamb.co.uk>",lamby,None,2017-02-23T01:25:04Z,2017-02-24T18:58:57Z
8100,Made a few queryset lookup examples consistent.,,Alexkane,None,2017-02-22T21:15:09Z,2017-02-24T21:35:08Z
8099,Fixed #27868 -- Filtered locale path subdirectories,,claudep,None,2017-02-22T21:01:09Z,2017-02-23T08:36:50Z
8098,some style changes in contenttypes,,auvipy,None,2017-02-22T19:21:15Z,2017-02-25T13:03:26Z
8097,Fixed #27836 -- Allowed FileSystemStorage.delete() to remove directories.,https://code.djangoproject.com/ticket/27836,ChillarAnand,None,2017-02-22T14:46:34Z,2018-03-02T12:32:02Z
8096,Fixed #27870 -- Cleaned up ManagementUtility.autocomplete().,https://code.djangoproject.com/ticket/27870,Phil9l,None,2017-02-22T13:12:24Z,2017-02-22T15:02:36Z
8095,Improve test coverage for django.contrib.auth.,,desecho,None,2017-02-21T20:32:46Z,2017-03-17T15:08:29Z
8094,Fixed typos in comments.,,desecho,None,2017-02-21T20:32:33Z,2017-02-22T15:26:34Z
8093,updated Bengali(Bn-Bangladesh) localization formats,Updated localization formats to meet Bangla of Bangladesh,auvipy,None,2017-02-21T19:58:02Z,2017-02-28T18:41:05Z
8092,"Fixed E302 expected 2 blank lines, found 1",,pauloxnet,None,2017-02-21T16:54:50Z,2017-02-21T18:03:55Z
8091,Updated Thai localization formatting,This PR adds the missing Thai localization formatting settings.,whs,None,2017-02-21T16:19:23Z,2017-02-22T15:19:03Z
8090,Fixed #27866 -- Made ChoiceWidget.format_value() return a list.,,claudep,None,2017-02-21T12:28:35Z,2017-04-01T10:25:42Z
8089,Fixed #27834 -- Added StrIndex database function.,https://code.djangoproject.com/ticket/27834,bradmerlin,None,2017-02-21T06:45:57Z,2017-04-02T16:36:25Z
8088,Change to shorter form code example for runserver,"Change to shorter form code example for runserver, and specify that this is necessary for Vagrant users.",FlipperPA,None,2017-02-20T18:57:24Z,2017-02-22T00:13:01Z
8087,Fixed #28363 -- Allowed naming the migration generated by squashmigrations.,https://code.djangoproject.com/ticket/28363,melvyn-sopacua,None,2017-02-20T14:54:24Z,2017-07-26T18:48:59Z
8086,Ticket 27834,,bradmerlin,None,2017-02-20T07:25:29Z,2017-02-20T07:31:43Z
8085,Fixed typo in DurationField's docs [skip ci],http://docs.oracle.com/cd/B19306_01/server.102/b14200/sql_elements003.htm#i38598,arogachev,None,2017-02-20T06:37:08Z,2017-02-20T13:54:45Z
8084,Removed unused import,,ChillarAnand,None,2017-02-19T12:12:18Z,2017-02-19T18:04:00Z
8083,Fixed #27818 -- Used contextlib.suppress to suppress exceptions,https://code.djangoproject.com/ticket/27818,Phil9l,None,2017-02-18T16:36:01Z,2017-02-18T16:47:49Z
8082,Fixed #27858 -- Prevented read-only commands from creating the django_migrations table.,"MigrationRecorder is changed so that for read-only operations, if the
django_migrations table doesn't exist, it's assumed that no migrations
have been applied, instead of trying to create it.

Reverted documentation change from refs #23808.",intgr,None,2017-02-18T16:06:48Z,2017-06-19T17:28:34Z
8081,Fixed #26423 -- Match email validation with html.,"References https://github.com/django/django/pull/7742.

Adds documentation describing what the Validation logic is based on.

Ticket: https://code.djangoproject.com/ticket/26423",harisibrahimkv,None,2017-02-18T08:55:39Z,2018-08-18T13:21:31Z
8080,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,,RatanShreshtha,None,2017-02-18T05:22:20Z,2017-02-18T13:02:06Z
8079,Fixed #27856 -- Improved date subtraction SQL on PostgreSQL.,[#27856](https://code.djangoproject.com/ticket/27856),vytisb,None,2017-02-18T00:39:37Z,2017-02-21T19:38:25Z
8078,Fixed #27855 -- Django 2.0 Python version support,ticket https://code.djangoproject.com/ticket/27855,rsalmaso,None,2017-02-17T23:28:42Z,2017-02-17T23:44:10Z
8077,Fixed #27308 -- Fixed BytesWarnings in the test suite.,https://code.djangoproject.com/ticket/27308,timgraham,None,2017-02-17T21:48:59Z,2017-02-18T11:52:04Z
8076,Fixed psycopg version parsing,"Psycopg uses PEP 440 (https://www.python.org/dev/peps/pep-0440/) to
represent version numbers. The current algorithm doesn't parse correctly
version '2.7b2' (see https://github.com/psycopg/psycopg2/issues/510).",dvarrazzo,None,2017-02-17T16:37:36Z,2017-02-17T16:42:52Z
8075,Added tests for GenericSitemap instance attributes.,"Related to [Tim Graham's comment](https://code.djangoproject.com/ticket/27842#comment:8) about separate pr with general test cases.
From [#27842 ticket](https://code.djangoproject.com/ticket/27842).",chexex,None,2017-02-17T06:32:32Z,2017-02-26T05:39:34Z
8074,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,https://code.djangoproject.com/ticket/27850,collinanderson,None,2017-02-16T20:19:20Z,2017-02-20T13:48:04Z
8073,[WIP] Fixed #27849 Add a variant of ArrayAgg that supports filtering,https://code.djangoproject.com/ticket/27849,orf,None,2017-02-16T18:40:40Z,2017-04-06T10:51:43Z
8072,Refs #27843 -- Added basic tests for db.backends.utils.truncate_name.,,felixxm,None,2017-02-16T17:45:00Z,2017-02-17T08:44:39Z
8071,Add Kim Joon Hwan to AUTHORS for,"I had a contribution #8067
Thank you.",xncbf,None,2017-02-15T23:07:41Z,2017-02-15T23:28:02Z
8070,Fixed #27847 -- Add CachedDjangoTemplates,https://code.djangoproject.com/ticket/27847,collinanderson,None,2017-02-15T20:47:49Z,2017-02-16T02:08:16Z
8069,Fixed #27135 -- Made index introspection return Index.suffix.,https://code.djangoproject.com/ticket/27135,timgraham,None,2017-02-15T18:54:08Z,2017-02-16T02:14:07Z
8068,Fixed #27830 -- Used distutils.version.LooseVersion for version parsing.,https://code.djangoproject.com/ticket/27830,ChillarAnand,None,2017-02-15T14:02:30Z,2017-06-13T15:18:10Z
8067,Made a sentence in default_if_none docs consistent with other template filters.,"In my views
``` python
value1 = """"
value2 = None
```


In my templates
```django
{{ value1|default:""nothing"" }} {{ value2|default_if_none:""nothing"" }}
```
in browser
```
nothing nothing
```
as same result.

Therefore, i think they use same result in documents, may be less confusing.",xncbf,None,2017-02-15T13:08:44Z,2017-02-15T13:39:40Z
8066,Fixed #27843 -- Fixed utils.truncate_name when name contains username.,Ticket [27843](https://code.djangoproject.com/ticket/27843).,felixxm,None,2017-02-15T11:32:24Z,2017-02-17T15:12:13Z
8065,Fixed #27842 -- Allowed specifying 'protocol' in GenericSitemap's constructor.,"[ticket #27842](https://code.djangoproject.com/ticket/27842)
",chexex,None,2017-02-15T09:37:28Z,2017-02-28T18:01:02Z
8064,Fixed typos,"nothing must be ""nothing""",xncbf,None,2017-02-15T08:59:54Z,2017-02-15T13:39:58Z
8063,Fixed #26817 -- Doc'd downsides and alternatives to Jinja2 context processors.,https://code.djangoproject.com/ticket/26817,timgraham,None,2017-02-15T01:55:50Z,2017-03-06T18:35:12Z
8062,Fixed #27840 -- Fixed KeyError in PasswordResetConfirmView.form_valid().,"When a user is already logged in when submitting the the password and
password confirmation to reset a password, a KeyError occurred while
removing the reset session token from the session.

Refs #17209

Thanks Quentin Marlats for the report.

Ticket: https://code.djangoproject.com/ticket/27840",MarkusH,None,2017-02-14T22:38:51Z,2017-02-14T23:40:20Z
8061,Removed docs/internals/roles.txt.,It's moved to https://www.djangoproject.com/foundation/teams/.,timgraham,None,2017-02-14T16:38:22Z,2017-02-15T12:21:02Z
8060,Fixed #22550 -- Prohibited QuerySet.last()/reverse() after slicing.,"- https://code.djangoproject.com/ticket/22550
- Ref PR #2677",michael-k,None,2017-02-14T09:24:43Z,2017-06-01T08:01:51Z
8059,Fixed #27829 -- Deprecated settings.DEFAULT_CONTENT_TYPE.,https://code.djangoproject.com/ticket/27829,timgraham,None,2017-02-13T23:37:59Z,2017-02-16T12:59:48Z
8058,contenttypes: fix the model name passed as a hint,"Maybe it lacks a deprecation flag to clean this up some time in the
future.",bors-ltd,None,2017-02-13T13:25:13Z,2017-02-13T16:38:34Z
8057,Fixed #27828 -- Fixed crash when subtracting DateField and IntegerField on PostgreSQL.,[#27828](https://code.djangoproject.com/ticket/27828),vytisb,None,2017-02-12T18:24:02Z,2017-02-16T23:02:45Z
8056,Fixed #26167 -- Added support for functional indexes,"This is a first shot at it would or could look like. There are probably dozens more things to look into and consider.

```bash
$ cat app/models.py
```
```python
from django.db import models
from django.db.models.expressions import Ref, Value
from django.db.models.functions import Concat, Lower


class Foo(models.Model):
    name = models.CharField(max_length=255)

    class Meta:
        indexes = [
            models.FuncIndex(
                Concat(
                    Lower(Ref('name', None), output_field=models.CharField()),
                    Value('blub'),
                    output_field=models.CharField(),
                ),
                name='some_func_index'
            ),
        ]
```
```bash
$ python manage.py makemigrations -v 3
Migrations for 'app':
  app/migrations/0001_initial.py
    - Create model Foo
    - Create index some_func_index for model foo
```
```bash
$ cat app/migrations/0001_initial.py
```
```python
# Generated by Django 2.0.dev20170212181215 on 2017-02-12 18:14

from django.db import migrations, models
import django.db.models.expressions
import django.db.models.functions.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Foo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddIndex(
            model_name='foo',
            index=models.FuncIndex(expression=django.db.models.functions.base.Concat(django.db.models.functions.base.Lower(django.db.models.expressions.Ref('name', None), output_field=models.CharField()), django.db.models.expressions.Value('blub'), output_field=models.CharField()), name='some_func_index'),
        ),
    ]
```
```bash
$ python manage.py migrate app
Operations to perform:
  Apply all migrations: app
Running migrations:
  Applying app.0001_initial... OK
```
```bash
$ sqlite3 db.sqlite3
SQLite version 3.16.2 2017-01-06 16:32:41
Enter "".help"" for usage hints.
sqlite> .schema
CREATE TABLE IF NOT EXISTS ""django_migrations"" (""id"" integer NOT NULL PRIMARY KEY AUTOINCREMENT, ""app"" varchar(255) NOT NULL, ""name"" varchar(255) NOT NULL, ""applied"" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS ""app_foo"" (""id"" integer NOT NULL PRIMARY KEY AUTOINCREMENT, ""name"" varchar(255) NOT NULL);
CREATE INDEX ""some_func_index"" ON ""app_foo"" (COALESCE(LOWER(""name""), '') || COALESCE('blub', ''));
sqlite> .quit
```",MarkusH,None,2017-02-12T18:21:33Z,2019-10-17T05:53:23Z
8055,Fixed #26682 -- Added support for Oracle identity columns.,"Ticket [26682](https://code.djangoproject.com/ticket/26682). This PR contains few improvements on Oracle backend i.e.:
- autofield introspection,
- support for Oracle identity columns,
- support for use of Oracle sequences in bulk create.",felixxm,None,2017-02-12T17:38:27Z,2017-06-01T19:21:04Z
8054,Made a bulk_create test work without Pillow.,Test didn't work since c4e2fc5d9872c9a0c9c052a2e124f8a9b87de9b4.,vytisb,None,2017-02-12T11:12:55Z,2017-02-13T13:58:11Z
8053,Reorganized backends tests.,"I reorganized backends specific tests (see https://github.com/django/django/pull/8015#discussion_r100357573, and ticket [23027](https://code.djangoproject.com/ticket/23027)).",felixxm,None,2017-02-11T20:49:09Z,2017-06-22T06:14:55Z
8052,Added TransactionTestCase.multi_db instead of using getattr().,,timgraham,None,2017-02-11T19:06:18Z,2017-02-13T13:46:01Z
8051,Removed WSGIServer.server_bind() identical to parent version,The method customization was removed in 2ca00faa9137.,claudep,None,2017-02-11T10:03:06Z,2017-02-11T10:18:15Z
8050,Fixed #25978 -- Deprecated shorcuts.render_to_response().,https://code.djangoproject.com/ticket/25978,timgraham,None,2017-02-11T01:30:52Z,2017-02-11T10:49:05Z
8049,Fixed #25524 -- Removed GISOperations.get_distance()'s handle_spheroid param.,https://code.djangoproject.com/ticket/25524,timgraham,None,2017-02-11T00:46:06Z,2017-02-11T10:47:21Z
8048,Fixed #27823 -- Updated mod_wsgi example to use WSGIPythonHome.,https://code.djangoproject.com/ticket/27823,timgraham,None,2017-02-11T00:21:16Z,2017-02-14T07:33:34Z
8047,Ensures that change_message is a string,This is useful if the database returns a LOB object rather than a string.,amarvin,None,2017-02-10T19:09:53Z,2017-02-10T19:22:51Z
8046,Ensures that change_message is a string,"This is useful if the database returns a LOB object rather than a string (e.g. SAP HANA db using Pyhdb, where Django's TextField is mapped to a (N/C)LOB field).",amarvin,None,2017-02-10T18:53:05Z,2017-02-10T19:46:09Z
8045,Refs #27148 -- Fixed UUIDField.to_python(None) crash.,Regression in 2f9861d.,ghost,None,2017-02-10T16:26:30Z,2017-02-10T19:33:42Z
8044,Fixed #28324 -- Made feedgenerators write feeds with deterministically ordered attributes.,"This simplifies the caching and comparison of generated feeds.
https://code.djangoproject.com/ticket/28324",gsauthof,None,2017-02-10T14:32:06Z,2017-06-19T22:54:36Z
8043,Fixed #25619 -- Made runserver serve with HTTP 1.1 protocol,Thanks Tim Graham for the review.,claudep,None,2017-02-10T09:59:57Z,2017-02-23T08:06:54Z
8042,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,"Marked request with _mark_post_parse_error in response_for_exception
if exc is RequestDataTooBig or TooManyFieldsSent to prevent
attempts to access POST data again.

https://code.djangoproject.com/ticket/27820",AmaliaSoucek,None,2017-02-10T08:32:27Z,2017-02-13T21:43:28Z
8041,Refs #26610 -- Added CIText mixin and CIChar/Text/EmailField.,"Three fields are supplied by default, CICharField, CIEmailField and CITextField.",atombrella,None,2017-02-09T19:02:15Z,2017-02-11T12:16:36Z
8040,Fixed #27822 -- Replaced cx_Oracle data types by non-deprecated types.,"Replaced `cx_Oracle` data types by non-deprecated types.
Removed unnecessary exceptions catching.
Ticket [27822](https://code.djangoproject.com/ticket/27822).

",felixxm,None,2017-02-09T07:41:48Z,2017-02-09T13:57:35Z
8039,Fixed #27824 -- Chained key and unaccent lookups on JSONField.,,aaugustin,None,2017-02-08T21:24:46Z,2017-02-09T03:02:15Z
8038,Refs #23919 -- Removed an used block in ExceptionReporter.get_traceback_data().,The test from refs #20368 only runs this block on Python 2.,timgraham,None,2017-02-08T19:11:44Z,2017-02-09T14:03:29Z
8037,Completed test coverage for django.utils.encoding.,,timgraham,None,2017-02-08T18:36:37Z,2017-02-23T01:55:02Z
8036,Fixed #27787 -- Made call_command() validate the options it receives.,,yahzaa,None,2017-02-08T18:35:33Z,2017-06-17T01:54:36Z
8035,Added multi_db=True to test cases that access the 'other' db connection.,"Fixed a failure in the context processors test when running in
reverse on MySQL due to an extra query after refs #27683.",timgraham,None,2017-02-08T16:42:51Z,2017-02-10T13:19:32Z
8034,Refs #26610 -- Changed CITextField's base class to TextField.,"max_length isn't used by the database and shouldn't be required.

https://groups.google.com/d/topic/django-developers/jud-n1cBzdg/discussion",timgraham,None,2017-02-08T14:59:30Z,2017-02-08T17:41:38Z
8033,Fixed #27820 -- avoided RequestDataTooBig in response_for_exception,"Marked request with _mark_post_parse_error in response_for_exception
if exc is RequestDataTooBig to prevent attempts to access POST data
again.",AmaliaSoucek,None,2017-02-08T08:08:07Z,2017-02-10T07:18:02Z
8032,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,,timgraham,None,2017-02-07T17:12:02Z,2017-02-09T14:21:04Z
8031,Fixed #27818 -- Used contextib.suppress for suppressing exceptions.,"Not complete, work in progress. There are quite a lot in the pattern which are (naturally ignored).
```
try: ... : 
except: 
   pass
else:
   ... 
```",atombrella,None,2017-02-07T15:41:26Z,2018-01-13T11:07:16Z
8030,Fixed #27814 -- Removed an inaccurate sentence about Paginator.orphans.,https://code.djangoproject.com/ticket/27814,timgraham,None,2017-02-07T14:16:00Z,2017-02-07T19:15:07Z
8029,Fixed #27815 -- add request object as kwarg to AuthenticationForm from LoginView," This commit also fixes the corressponding testcase which
was failing silently due to a typo in the used URL.
No new testcase was needed.",zgyarmati,None,2017-02-07T09:21:59Z,2017-02-07T14:36:59Z
8028,Refs #27795 -- Removed force_text from the template layer,,claudep,None,2017-02-07T08:40:56Z,2017-02-07T16:15:47Z
8027,"Minor typo fix, ""alway"" -> ""always"" in 1.11.txt.",Just a quick typo fix!,toolness,None,2017-02-07T07:58:36Z,2017-02-07T12:49:47Z
8026,Fixed #27810 - allow query expressions in admin_order_field.,"This commit makes the admin handle query expression objects properly as specified by admin_order_field.

Ticket link: https://code.djangoproject.com/ticket/27810",pelme,None,2017-02-06T14:12:11Z,2018-02-16T02:00:32Z
8025,Correct odd sentence structure in 2.0 release doc,,meshy,None,2017-02-06T12:37:20Z,2017-02-06T12:57:12Z
8024,Document a couple of BC breaks,,jpic,None,2017-02-06T11:07:46Z,2017-02-06T12:10:07Z
8023,Refs #27795 -- Removed force_text from templatize function,,claudep,None,2017-02-06T08:18:38Z,2017-02-06T16:35:05Z
8022,Fixed #26936 -- Fixed stale ContentType deletion if an app doesn't have any models.,https://code.djangoproject.com/ticket/26936,prybintsev,None,2017-02-04T22:10:35Z,2019-07-30T20:33:28Z
8021,Fixed #26936 -- Stale content types are now deleted when the last mod…,…el is removed,prybintsev,None,2017-02-04T14:10:36Z,2017-02-04T14:46:08Z
8020,Fixed #27741 -- Isolated staticfiles testcase.,See [#27741](https://code.djangoproject.com/ticket/27741),dsanders11,None,2017-02-03T18:51:01Z,2017-02-04T00:07:53Z
8019,"Fixed #27805 -- Fixed ClearableFileInput's ""Clear"" checkbox on model fields with a default.",https://code.djangoproject.com/ticket/27805,timgraham,None,2017-02-03T16:13:07Z,2017-02-07T01:55:14Z
8018,Fixed #27809 -- Added pre_add and post_add signals,"Added two simple signals that are called when adding to an object to a Many-To-One relation. To keep things simple (for the same reasons as in [#21461](https://code.djangoproject.com/ticket/21461)) this only sends the instance that you are adding to, _not_ the objects that you are adding.

https://groups.google.com/d/topic/django-developers/eLHXeMj0_m4/discussion
https://code.djangoproject.com/ticket/27809",OskarPersson,None,2017-02-03T14:41:00Z,2020-01-24T17:54:44Z
8017,Refs #27804 -- Used subTest() in tests.utils_tests.test_dateparse.,,hit023,None,2017-02-03T06:33:35Z,2017-02-06T17:30:43Z
8016,"Fixed spelling of ""nonexistent"".",,timgraham,None,2017-02-03T02:11:31Z,2017-02-03T13:30:03Z
8015,Fixed #25898 -- Made test database and user creation on Oracle reraise all unexpected errors.,Ticket [25898](https://code.djangoproject.com/ticket/25898).,felixxm,None,2017-02-02T18:39:43Z,2017-06-20T13:37:15Z
8014,Removed an untested and broken branch in force_bytes().,"The new test crashed in the removed branch. It's unclear if the branch has
value since c6a2bd9b962af1cdf46f964589e6023046cfa8ec didn't include tests.",timgraham,None,2017-02-02T14:48:07Z,2017-02-04T00:36:53Z
8013,Fixed #27539 -- assertNumQueries fails if debug cursor wrapper fills,Some doubts I have regarding the PR asked on the [Ticket](https://code.djangoproject.com/ticket/27539),reficul31,None,2017-02-02T13:06:05Z,2017-02-16T17:02:08Z
8012,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,"This is for testing, followed the tutorial",nikita1503,None,2017-02-02T12:58:54Z,2017-02-02T13:08:15Z
8011,MySQL backend now uses decimal instead of numeric as data type for DecimalField,"MySQL backend currently uses **numeric** as default type for DecimalField.
Even if the MySQL documentation says: ""In MySQL, NUMERIC is implemented as DECIMAL, so the following remarks about DECIMAL apply equally to NUMERIC."" this is not true at the moment (maybe because of a bug), so, some operations are not available for numeric type, eg: **cast**.

In Django trying to cast to a DecimalField, an error is raised:

```
from django.db.models import DecimalField
from django.db.models.functions import Cast
from myapp.models import MyModel

MyModel.objects.annotate(as_decimal=Cast('intfield', DecimalField(max_digits=8, decimal_places=2)))

[...]
ProgrammingError: (1064, ""You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric(8, 2)) AS `as_decimal` FROM `myapp_mymodel` LIMIT 21' at line 1"")
```

I made this pull request in order to fix the cast to DecimalField in Django and because it seems there isn't a good reason to use numeric instead of decimal.",yurifari,None,2017-02-02T11:10:37Z,2017-02-02T12:34:20Z
8010,Fixed inconsistent docstring style,Apologies for the tiny pull request. This docstring looked very out of place to me so had to fix it!,kaedroho,None,2017-02-02T09:29:18Z,2017-02-02T12:27:32Z
8009,Removed unused ExceptionReporter.format_exception() method.,Unused since its introduction in e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3.,timgraham,None,2017-02-02T00:57:12Z,2017-02-02T12:18:15Z
8008,Imported specific functions in tests.utils_tests.test_html.,,timgraham,None,2017-02-01T23:38:11Z,2017-02-02T13:57:50Z
8007,Refs #5640 -- Added a test for DjangoUnicodeDecodeError.__str__().,,timgraham,None,2017-02-01T22:51:23Z,2017-02-04T00:33:07Z
8006,Refs #23919 -- Removed a Python 2 code path in force_text().,Reverted the obsolete fix and tests for refs #12302 (9e95d6f6).,timgraham,None,2017-02-01T20:40:51Z,2017-02-04T00:38:34Z
8005,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,https://code.djangoproject.com/ticket/27803,claudep,None,2017-02-01T15:42:11Z,2017-02-03T13:00:17Z
8004,Fixed #27802 -- Unified datetime sql functions with others backend operations behavior.,Ticket [27802](https://code.djangoproject.com/ticket/27802).,felixxm,None,2017-02-01T13:54:53Z,2017-02-06T14:19:59Z
8003,Fixed #27800 -- Fixed QuerySet.annotate(Length(...)).distinct() crash.,"This pull request fixes a recently introduced `.distinct()` bug by reverting 3b2db6ec12ce7d4b32f60dd7713e5f23cac498b7.

Also, I've added a unit test to prevent future regressions.

Basically the issue is that `.annotate()` introduces fields that are not attached to any particular model and therefore Django cannot assume that `field.model` would always work without throwing an exception.

Earlier tests did not catch the error because by coincidence the annotation `Func`tions forwarded the field on which they were operating as their `output_field` (possibly another bug?). The newly added test calls `Length()` `Func`tion which returns an IntegerFIeld() as the `output_field` and thus is not attached to any model fields.",eukreign,None,2017-01-31T21:22:31Z,2017-01-31T23:45:56Z
8002,Fixed #27799 -- Only add 'args' argument once to command parser.,"If a custom management LabelCommand or AppCommand uses 'args' then only
the last positional argument provided is passed to the command, because
argparse's behaviour when two calls to add_argument with the same name
is undefined (it appears to put all the arguments bar one in the first
'*' argument, then the last one in the '+' argument).

This shows this with a test, and fixes it by not making the first call
to parser.add_argument('args') if it's a LabelCommand or AppCommand.",dracos,None,2017-01-31T14:50:47Z,2017-01-31T15:10:40Z
8001,Fixed #27792 -- Extended category support for feeds,[Ticket #27792](https://code.djangoproject.com/ticket/27792),PavloKapyshin,None,2017-01-31T14:49:06Z,2017-05-12T12:39:50Z
8000,Fixed #27359 -- Allowed multiple DTL backends with Engine.get_default().,"Fixes [#27359](https://code.djangoproject.com/ticket/27359)

Adds a failing test case for the issue and a naive fix. 

* Here we just take the _first_ DTL engine returned. ~~Users should employ `collections.OrderedDict` if they need to control this prior to Python 3.6.~~
* Need to add a note to the docs to that effect if the patch is acceptable. 

Alternative proposals: 

* Have a naming convention. e.g. pick engine named 'default'
* Add a specific `OPTION` to the config dict. 

This is something of an edge case, and so, (IMO) 'pick the first' should be sufficient. 

",carltongibson,None,2017-01-31T10:01:07Z,2017-03-31T22:05:21Z
7999,Fixed #27768 -- Allowed migration optimization of CreateModel order.,,charettes,None,2017-01-31T04:05:04Z,2018-07-13T14:59:05Z
7998,Refs #23919 -- Removed unneeded code in force_text().,Unneeded since 7b2f2e74adb36a4334e83130f6abc2f79d395235.,vytisb,None,2017-01-31T00:09:07Z,2017-01-31T23:31:18Z
7997,Used model_ngettext in two more places,,claudep,None,2017-01-30T20:40:01Z,2017-01-31T07:49:41Z
7996,Fixed #23004 -- Cleanse sensitive request.META keys from DEBUG Views,"- Fixed ticket [#23004](https://code.djangoproject.com/ticket/23004)
- Signed and sent CLA agreement
- Added tests and documentation",audiolion,None,2017-01-30T19:51:09Z,2018-12-21T13:51:55Z
7995,Refs #27795 -- Prevented SafeText from losing safe status on str(),"This will allow to replace force_text() by str() in several places (as one of
the features of force_text is to keep the safe status).",claudep,None,2017-01-30T18:29:08Z,2017-01-30T20:11:58Z
7994,Improved test coverage for django.contrib.admin.,,desecho,None,2017-01-30T18:00:09Z,2017-06-19T19:50:57Z
7993,Fixed #25889 -- Organize tests in tests/queries,The tests follow the documentation to the best they can. There were some places where improvisation was needed. There were some cases where I was confused(see ticket for further information) and if someone can resolve them I will be happy to edit the changes. [Ticket](https://code.djangoproject.com/ticket/25889),reficul31,None,2017-01-30T16:41:36Z,2017-06-13T17:43:37Z
7992,Fixed #27778 -- Changed Unicode data to Encoded data in docs,https://code.djangoproject.com/ticket/27778,ChillarAnand,None,2017-01-30T16:36:08Z,2017-06-07T15:40:58Z
7991,Refs #27683 -- Split up MySQL isolation level tests.,,timgraham,None,2017-01-30T15:55:21Z,2017-02-01T18:13:00Z
7990,Fixed #27697 - JSONField must be required form field with proper empty value when blank=True and null=False,See for details https://code.djangoproject.com/ticket/27697,andrewnester,None,2017-01-30T11:41:42Z,2017-04-04T13:52:50Z
7989,Refs #23919 -- Replaced kwargs.pop() with keyword-only arguments.,"An attempt to simplify some code by using Python 3 keyword-only arguments.

I would like some feedback on whether all these changes are welcome.
I did not modify some cases where I would need to introduce a sentinel as the default is mutable or an expression and `None` is a valid value that should not be the default ([example 1](https://github.com/django/django/blob/068cd6036651c7564dd3e465fbea458b75d7244a/django/contrib/admin/options.py#L609-L610), [example 2](https://github.com/django/django/blob/068cd6036651c7564dd3e465fbea458b75d7244a/django/core/mail/backends/console.py#L12)).

If this is acceptable, I will look for more occurrences of this pattern where the keyword arguments are not named `kwargs`.",vytisb,None,2017-01-29T20:31:36Z,2017-02-01T16:41:57Z
7988,removed force_text and b prefix,,auvipy,None,2017-01-29T20:02:02Z,2017-01-30T16:58:37Z
7987,Fixed #27793 -- Leveraged new ipaddress module to validate IP addresses,,claudep,None,2017-01-29T19:14:31Z,2017-01-30T13:24:29Z
7986,Assumed request COOKIES and META are str,,claudep,None,2017-01-29T14:19:43Z,2017-01-30T13:14:52Z
7985,[1.11.x] Fixed #25192 -- Let migrations using RunPython.noop be squashed with Python 2,"This is suggested for 1.11.x only, as master doesn't support Python 2 anymore.",shaib,None,2017-01-29T12:14:52Z,2017-01-31T13:03:23Z
7984,Stable/1.10.x,,devvk,None,2017-01-29T07:50:56Z,2017-01-29T12:12:02Z
7983,Refs #23919 -- Removed creation_counter from model Fields,"I'm not certain this is enough, but it passes the limited number of tests I've run.

One major consequence of this change is that fields can no longer be ordered, which may affect a large number of packages that do what Django was doing. Anything using .meta.get_fields() or related methods could possibly be affected.",jarshwah,None,2017-01-28T23:59:51Z,2017-01-29T05:59:34Z
7982,Fixed running TransactionsPerRequestTests in isolation.,,jdufresne,None,2017-01-28T22:47:48Z,2017-03-11T18:35:43Z
7981,Fixed typo in tests/forms_tests/field_tests/test_choicefield.py.,,jdufresne,None,2017-01-28T22:37:23Z,2017-01-31T00:56:07Z
7980,Fix incorrect namespace in sitemap's template.,According Google's webmaster tools namespace for news are invalid.,ar4s,None,2017-01-28T19:12:11Z,2017-01-30T17:07:15Z
7979,Fixed # 27787 -- Raise CommandError on unrecognized option,"This commit is not complete.

There are some calls to call_command, where hidden options are passed for internal use.
For e.g. - core/management/commands/flush.py

`# The following are stealth options used by Django's internals.`
`reset_sequences = options.get('reset_sequences', True)`
`allow_cascade = options.get('allow_cascade', False)`
`inhibit_post_migrate = options.get('inhibit_post_migrate', False)`

I am not sure, how to handle these cases.",yahzaa,None,2017-01-28T19:05:26Z,2017-02-08T18:42:50Z
7978,Fixed #27683 -- Made MySQL default to the read committed isolation level.,https://code.djangoproject.com/ticket/27683,timgraham,None,2017-01-28T19:02:43Z,2017-02-01T20:35:13Z
7977,Refs #23919 -- Removed usage of obsolete SafeBytes class.,,claudep,None,2017-01-28T12:38:56Z,2017-01-30T14:05:53Z
7976,Fixed # 27787 -- Raise CommandError on unrecognized option,,yahzaa,None,2017-01-28T10:38:32Z,2017-01-28T14:54:53Z
7975,Fixed #27789 -- Simplified get sequence value on Oracle.,Ticket [27789](https://code.djangoproject.com/ticket/27789).,felixxm,None,2017-01-28T09:04:42Z,2017-01-30T13:03:43Z
7974,Stable/1.11.x,,andrewr-rak,None,2017-01-28T05:41:52Z,2017-01-28T05:42:24Z
7973,Remove outdated  docstring,,srinivasreddy,None,2017-01-28T04:40:36Z,2017-01-28T13:09:43Z
7972,"Refs #27790 -- Reverted ""Removed available_apps on TestCase subclasses.""","This reverts commit 91023d79ec70df9289271e63a67675ee51e7dea8 as it
increases memory usage for the test suite.

In my naive memory profiling using the change in `runtests.py` (not meant to be merged), usage is 
~435MB before this change and ~405MB after. Based on a discussion with Simon in IRC, it might be that `available_apps` affects the memory usage of `migrate`. We might add an explanatory comment about this to prevent future removal.",timgraham,None,2017-01-28T01:12:26Z,2017-01-28T15:14:17Z
7971,Fixed #27788 -- Dropped support for Oracle < 12.1.,https://code.djangoproject.com/ticket/27788,timgraham,None,2017-01-28T00:08:42Z,2017-01-28T13:19:48Z
7970,Separated tests in contenttypes_tests.,Separated tests in contenttypes_tests (requested  by @timgraham) https://github.com/django/django/pull/7874#discussion_r98234831,desecho,None,2017-01-27T19:25:26Z,2017-02-03T20:30:18Z
7969,call_command() should reject unknown options,,srinivasreddy,None,2017-01-27T18:50:22Z,2017-01-27T19:04:31Z
7968,Refs #23919 -- Removed an obsolete test for a Python 2 code path (refs #15662).,"Fixed #21628 by removing the last usage of the imp module.

The removed code was added in 0e5d5d6218e61aa6a3ac8ddadbd0bb86f7b02aa0.",timgraham,None,2017-01-27T17:43:44Z,2017-01-27T22:39:50Z
7967,Improve test coverage for conf.urls.static,,desecho,None,2017-01-27T16:50:07Z,2017-01-27T21:12:10Z
7966,Improve test coverage and error messages for conf.urls.__init__.py,,desecho,None,2017-01-27T16:48:41Z,2017-01-27T18:17:17Z
7965,Fixed #27130 -- Allow using the DjangoTemplates engine without config…,…uring settings,reficul31,None,2017-01-27T13:02:43Z,2017-01-28T12:53:46Z
7964,Fixed #27731 - Optimize AlterField related_name across AlterUniqueTogether/AlterIndexTogether,See for details: https://code.djangoproject.com/ticket/27731,andrewnester,None,2017-01-27T12:16:22Z,2017-04-04T13:46:35Z
7963,Fixed #26708 -- Updated the contributing tutorial to use a GitHub workflow.,,SubhrajyotiSen,None,2017-01-27T11:39:00Z,2017-01-28T17:58:24Z
7962,Remove __repr__ method in DummyNode,"There are no tests for either DummyNode nor Node. I suppose this would be in `test_migrations`, perhaps as a new file?",atombrella,None,2017-01-27T09:45:05Z,2017-02-04T17:22:52Z
7961,Refs #27784 Custom Site model support for django.contrib.sites.,Support for custom Site model in django.contrib.sites to add model fields and change default manager.,mscam,None,2017-01-27T02:23:56Z,2017-06-14T10:55:07Z
7960,Fixed #27722 -- Reallowed using backend-specific templates in {% include %}.,https://code.djangoproject.com/ticket/27722,timgraham,None,2017-01-27T00:40:28Z,2017-02-11T11:51:58Z
7959,Slightly simplified django.conf.urls.static.static().,,desecho,None,2017-01-26T22:59:04Z,2017-01-26T23:45:32Z
7958,Tested AppConfig.__repr__().,"I added a test to improve test coverage. However we might not want to test `__repr__` (maybe `__str__` as well?) In that case we might want to add this to .coveragerc
```
exclude_lines =
    pragma: no cover
    def __repr__
```",desecho,None,2017-01-26T22:19:46Z,2017-01-27T14:55:35Z
7957,Fixed #27783 -- Switched VariableDoesNotExist to repr() context,"Ticket [27783].

Using `__str__` and then `repr`ing the result looks strange and can lead
to recursive rendering for forms that render templates in `as_table`.
`repr` exists for this.

  [27783]: https://code.djangoproject.com/ticket/27783",ryan-copperleaf,None,2017-01-26T20:15:26Z,2017-02-07T23:04:32Z
7956,Fixed #27501 -- Documented lazy evaluation of ModelChoiceField.queryset.,,ChillarAnand,None,2017-01-26T20:09:15Z,2017-01-26T23:58:51Z
7955,Refs #23919 -- Made ugettext* functions aliases of gettext*,,claudep,None,2017-01-26T20:06:12Z,2017-01-28T11:02:51Z
7954,Fixed #27781 -- Removed outstanding '?' characters in simplify_regex.,"Ticket [27781](https://code.djangoproject.com/ticket/27781).

Regression in f0ef0c49e9284f262fbc63e8a497699ca4a248fe.",felixxm,None,2017-01-26T19:26:51Z,2017-01-26T23:36:35Z
7953,[WIP] Refs #23919 -- Replaced urllib utilities with standard library functions,Fixed in https://github.com/django/django/commit/fee42fd99ee470528858c2ccb3621135c30ec262,ChillarAnand,None,2017-01-26T19:14:13Z,2017-01-26T19:24:08Z
7952,Fix makemessages on Windows by forcing newline='\n'.,"The default behavior of io.open() is to convert '\n' to os.linesep, that may cause problem on Windows.
This works for Python 2 & 3.
See: https://docs.python.org/2/library/io.html?highlight=io.open#io.open",wismill,None,2017-01-26T15:45:06Z,2017-02-01T17:19:37Z
7951,Refs #23919 -- Used DeclarativeFieldsMetaclass.__prepare() for tracking form field order.,`BaseManger.creation_counter` and model `Field.creation_counter` and `auto_creation_counter` seem a bit more complicated so I wanted to offer this first.,timgraham,None,2017-01-26T15:36:20Z,2017-01-27T17:46:22Z
7950,Fixed #27869 -- Added fastupdate and gin_pending_list_limit params to GinIndex.,https://code.djangoproject.com/ticket/27869,atombrella,None,2017-01-26T08:44:58Z,2017-06-25T08:44:44Z
7949,Fixed #27769 -- Documented option naming differences between django-admin and call_command().,See for details https://code.djangoproject.com/ticket/27769,andrewnester,None,2017-01-26T08:34:11Z,2017-01-27T21:12:46Z
7948,Fixed #27768 -- Allowed migration optimisation of CreateModel order.,"**1) Allowed migration optimisation to view later operations.**
The optimisation of certain migration operation sequences can only be made if the `reduce()` method can tell which operations occur after `operation`.

**2) Allowed migration optimisation of CreateModel order.**
An `AddField` operation that adds a `ForeignKey` between two models can only be folded into its `CreateModel` if the `ForeignKey` target model was created earlier in the list of operations. As such, reordering the `CreateModel` operations allows for greater optimisation.",edmorley,None,2017-01-26T02:52:58Z,2017-02-10T18:21:30Z
7947,Fixed #27776 -- Merge py3.txt tests requirements files into base.txt,"Now django is moving away from python 2 some files within the
`test/requirements` directory can now be merged, cleaned
and removed. This commit also updates the documentation around
installing requirements for tests.

",mattseymour,None,2017-01-25T20:33:11Z,2017-01-25T20:48:21Z
7946,Removed unnecessary force_text() in BaseTemporalField.to_python().,"This seems uneeded since its introduction in
da3aa22d04d6452f87abbb1a0fee8a90a61eff5b.",timgraham,None,2017-01-25T19:30:02Z,2017-05-24T05:46:30Z
7945,Used assertDoesNotOptimize to reduce duplication when result identical.,Uses `assertDoesNotOptimize` for cases where both arguments to `assertOptimizesTo` were identical (ie no optimisation was expected to take place).,edmorley,None,2017-01-25T15:40:47Z,2017-01-25T18:52:45Z
7944,[1.11.x] Bumped MySQLdb version requirement to 1.2.3.,"Older versions don't support Python 2.7.

Partial backport of 2d96c027f5eb32c2c09bd57df2240ae1d343b98e from master",timgraham,None,2017-01-25T15:31:52Z,2017-01-25T18:39:35Z
7943,Sample code typo,,pauloxnet,None,2017-01-25T10:00:25Z,2017-01-25T12:46:19Z
7942,Refs #27741 -- Fixed staticfiles_tests.test_views when run in isolation.,,timgraham,None,2017-01-25T00:46:22Z,2017-01-25T18:53:39Z
7941,"""polls"" as dir name instead of generic ""mysite""",,NestorTejero,None,2017-01-24T12:50:48Z,2017-01-24T12:53:08Z
7940,Removed unneeded force_text calls in the test suite,,claudep,None,2017-01-24T11:30:35Z,2017-01-24T17:47:58Z
7939,Refs #23919 -- Removed misc Python 2/3 references.,,timgraham,None,2017-01-24T00:42:23Z,2017-01-25T18:59:25Z
7938,Refs #25175 -- Deprecated db.backends.postgresql_psycopg2 module.,"Deprecating vs. immediate removal to be discussed at:
https://groups.google.com/d/topic/django-developers/o7qFItlHILc/discussion",timgraham,None,2017-01-23T19:31:15Z,2017-01-25T14:23:05Z
7937,Tidied djang.db.utils.load_backend().,"Removed an unneeded EnvironmentError catching and used
""raise from exc"" syntax.",timgraham,None,2017-01-23T19:22:37Z,2017-01-24T13:33:27Z
7936,Refs #23919 -- Removed __traceback__ setting needed for Python 2.,Partially reverted refs #25761 and refs #16245.,timgraham,None,2017-01-23T19:01:44Z,2017-01-24T13:31:59Z
7935,Assumed iri_to_uri always returns a string,,claudep,None,2017-01-23T16:56:11Z,2017-01-23T19:00:39Z
7934,Refs #23919 -- Removed obsolete MySQLdb references.,,timgraham,None,2017-01-23T16:14:36Z,2017-01-25T15:16:11Z
7933,Refs #23919 -- Removed a MySQLdb workaround (refs #6052) for Python 2.,"On Python 2, the removed test fails with:
```
======================================================================
ERROR: test_safestr (i18n.tests.TestModels)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/media/sf_django/tests/i18n/tests.py"", line 1269, in test_safestr
    c.save()
  File ""/media/sf_django/django/db/models/base.py"", line 734, in save
    force_update=force_update, update_fields=update_fields)
  File ""/media/sf_django/django/db/models/base.py"", line 762, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File ""/media/sf_django/django/db/models/base.py"", line 846, in _save_table
    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
  File ""/media/sf_django/django/db/models/base.py"", line 885, in _do_insert
    using=using, raw=raw)
  File ""/media/sf_django/django/db/models/manager.py"", line 127, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File ""/media/sf_django/django/db/models/query.py"", line 920, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File ""/media/sf_django/django/db/models/sql/compiler.py"", line 974, in execute_sql
    cursor.execute(sql, params)
  File ""/media/sf_django/django/db/backends/utils.py"", line 64, in execute
    return self.cursor.execute(sql, params)
  File ""/media/sf_django/django/db/backends/mysql/base.py"", line 124, in execute
    return self.cursor.execute(query, args)
  File ""/home/tim/.virtualenvs/djangotests-py2/local/lib/python2.7/site-packages/MySQLdb/cursors.py"", line 234, in execute
    args = tuple(map(db.literal, args))
  File ""/home/tim/.virtualenvs/djangotests-py2/local/lib/python2.7/site-packages/MySQLdb/connections.py"", line 291, in literal
    s = self.escape(o, self.encoders)
  File ""/home/tim/.virtualenvs/djangotests-py2/local/lib/python2.7/site-packages/MySQLdb/connections.py"", line 202, in string_literal
    return db.string_literal(obj)
UnicodeEncodeError: 'ascii' codec can't encode character u'\xf1' in position 1: ordinal not in range(128)
```
Does the test add value on Python 3?",timgraham,None,2017-01-23T15:46:58Z,2017-01-24T15:17:36Z
7932,Fixed #27767 -- Added distinct argument to ArrayAgg.,https://code.djangoproject.com/ticket/27767#ticket,orf,None,2017-01-23T15:46:01Z,2017-02-04T18:58:21Z
7931,"Unused variables, and typo in wildcard variable.","Not an exhaustive attempt at cleaning up (the test suite code was ignored). I can create a ticket and clean up more, if desired.",atombrella,None,2017-01-23T11:31:09Z,2017-11-16T09:25:58Z
7930,[Do not merge] Refs #23919 -- open has been imported from io,pls let me know what do you think before i start changing all  @timgraham ,srinivasreddy,None,2017-01-23T03:49:45Z,2017-01-23T04:14:42Z
7929,"Preferred ""is not"" operator over ""not var is ..."" pattern.",More conventional and easier to read.,jdufresne,None,2017-01-23T01:52:03Z,2017-03-11T18:35:44Z
7928,Fixing deprecated import of urlresolvers in tutorial,"Following the tutorial produces the following error:
```python
...
     from django.urls import reverse
ImportError: No module named urls
...
```
",mfbx9da4,None,2017-01-23T01:29:01Z,2017-01-23T02:58:44Z
7927,Preferred dict literal over built-in.,"I noticed some uses of `dict()` that could easily use a literal instead. Not sure if this was intentional or not. Let me know if this kind of clean up is welcome. If you think this should go through a Trac ticket, let me know and I'll create one.",jdufresne,None,2017-01-23T01:27:51Z,2017-03-11T18:35:47Z
7926,Fixed #27761 -- Fixed placement of quote to inside {% if %} template tag.,<https://code.djangoproject.com/ticket/27761>,jdufresne,None,2017-01-23T00:07:56Z,2017-03-11T18:35:48Z
7925,Fixed #27759 -- Fixed attrs.html template to avoid rendering the value False.,<https://code.djangoproject.com/ticket/27759>,jdufresne,None,2017-01-22T18:34:10Z,2017-03-11T18:35:46Z
7924,Fixed #27758 -- Delayed force_text() on value in ChoiceWidget.optgroups().,<https://code.djangoproject.com/ticket/27758>,jdufresne,None,2017-01-22T17:27:56Z,2017-03-11T18:35:54Z
7923,Fixed #26993 -- Increased User.last_name max_length to 150 characters.,"Increases the max_length of last_name in django.contrib.auth to 100 characters to facilitate longer last_names.

Fixes [ticket 26993](https://code.djangoproject.com/ticket/26993)",thomwiggers,None,2017-01-22T15:12:43Z,2017-03-22T18:14:42Z
7922,Refs #23919 -- Used tempfile.TemporaryDirectory instead of tempfile.mkdtemp,,ChillarAnand,None,2017-01-22T12:06:09Z,2017-01-26T18:54:17Z
7921,used Private field naming in comment,I believe this should be private field ,auvipy,None,2017-01-22T06:07:52Z,2017-02-28T18:39:36Z
7920,Fixed #27755 -- Added ModelAdmin.get_inlines() hook.,https://code.djangoproject.com/ticket/27755,twz915,None,2017-01-22T03:36:36Z,2018-04-06T15:46:34Z
7919,Removed ChoiceWidget.render() as it duplicates parent implementation.,,jdufresne,None,2017-01-22T02:14:04Z,2017-03-11T18:35:56Z
7918,Refs #23919 -- Removed obsolete mentions of unicode.,,vytisb,None,2017-01-21T22:50:33Z,2017-01-26T13:43:07Z
7917,Removed MySQL decimal casting.,"Added in Django 1.0: 92c35a0617836b09aef3b6909579ee368004969b
Unknown when it became obsolete.",timgraham,None,2017-01-21T21:04:42Z,2017-01-23T15:44:03Z
7916,Set ugettext and ungettext as alias of gettext/ngettext functions,,claudep,None,2017-01-21T16:14:38Z,2017-02-07T08:05:14Z
7915,Refs #23919 -- Replaced errno checking with PEP 3151 exceptions.,,timgraham,None,2017-01-21T13:48:15Z,2017-01-25T15:13:09Z
7914,"Fixed #27743 -- Admin CSS ""+"" button icon overlaps text","Applied ""background-position edge offset"" to ""viewsitelink"", ""golink""
and ""addlink"" classes to avoid ""+"" (plus) icon to overlap long
long text.",manikos,None,2017-01-21T13:36:00Z,2017-01-24T00:24:47Z
7913,Refs #23919 -- Replaced smart/force_text by smart/force_str.,"Keeping smart/force_str and smart/force_bytes in Python 3 is more
sensible because that mirrors the str and bytes types.

smart/force_str and smart/force_text were identical on Python 3.
However smart/force_text was much more commonly used given Django's
strong support for unicode.",aaugustin,None,2017-01-20T22:13:42Z,2017-02-04T08:18:58Z
7912,Refs #23919 -- Removed misc. references to Python 2.,"I'm not sure about ""django/core/management/commands/loaddata.py:        # Forcing binary mode may be revisited after dropping Python 2 support (see #22399)` (not modified here)",timgraham,None,2017-01-20T18:19:28Z,2017-01-22T01:02:01Z
7911,Refs #23919 -- Removed django.utils.decorators.available_attrs() usage.,,timgraham,None,2017-01-20T17:18:08Z,2017-01-21T18:20:18Z
7910,Refs #5748 -- Removed obsolete Python/Windows workarounds in floatformat filter.,https://code.djangoproject.com/ticket/5748,timgraham,None,2017-01-20T16:23:46Z,2017-01-21T18:53:36Z
7909,Remove unused module from doc's example.,This PR remove ``models`` from example in docs.,ar4s,None,2017-01-20T11:37:29Z,2017-01-21T12:40:34Z
7908,Refs #23919 -- Removed unneeded str() calls,,claudep,None,2017-01-20T10:34:35Z,2017-01-20T13:15:10Z
7907,Refs #27421 -- Documented GDALRaster creation in detail.,"The options available when creating a new `GDALRaster` object has grown in complexity over time (see discussion [here](https://github.com/django/django/pull/7464)).

This pull request adds a new section to the GDAL reference documentation, explaining the `ds_input` dictionary options in detail.",yellowcap,None,2017-01-20T10:08:11Z,2017-01-31T16:38:17Z
7906,Refs #23919 -- Deprecated django.utils.http urllib equivalents,,claudep,None,2017-01-20T08:14:03Z,2019-02-04T18:45:57Z
7905,"Refs #23919 -- Replaced super(ClassName, self) with super()",,ChillarAnand,None,2017-01-20T05:15:43Z,2017-01-25T18:37:14Z
7904,Refs #23919 --remove unicode char specifier,,srinivasreddy,None,2017-01-20T03:39:13Z,2017-01-20T12:38:18Z
7903,Refs #23919 -- Simplified assertRaisesRegex()'s that accounted for Python 2.,,timgraham,None,2017-01-20T02:15:43Z,2017-01-20T07:49:49Z
7902,Refs #23919 -- Removed django.utils._os.upath()/npath()/abspathu() usage.,These functions do nothing on Python 3.,timgraham,None,2017-01-19T23:05:53Z,2017-01-20T13:01:03Z
7901,Fixed #24977 -- Made template tags treat undefined variables not equal to None.,"The template engine no longer treats undefined variables as being None,
but instead as an instance of a special UndefinedVariable class.",timmartin,None,2017-01-19T21:06:05Z,2017-04-27T01:18:45Z
7900,Refs #16859 -- updated CSRF FAQ to mention CSRF_USE_SESSIONS setting,,alasdairnicol,None,2017-01-19T20:59:05Z,2017-01-21T00:01:28Z
7899,Refs #23919 - remove ImportError which doesnot occur on python3,,srinivasreddy,None,2017-01-19T18:54:06Z,2018-08-30T11:56:45Z
7898,Refs #23919 - Removed decorator - python_2_unicode_compatible,,srinivasreddy,None,2017-01-19T18:42:22Z,2017-01-19T22:19:59Z
7897,"Refs #23919 -- Removed SessionBase.iterkeys(), itervalues(), iteritems().",These methods only work on Python 2.,srinivasreddy,None,2017-01-19T18:20:07Z,2018-08-30T11:56:45Z
7896,Refs #23919 -- Removed django.test.mock compatibility shim.,,timgraham,None,2017-01-19T17:24:58Z,2017-01-20T14:01:41Z
7895,"Fixed #23905, refs #23919 -- Used make_msgid() from stdlib.",,timgraham,None,2017-01-19T16:48:38Z,2017-01-19T17:58:20Z
7894,Refs #23919 -- Removed docs references to long integers.,,timgraham,None,2017-01-19T16:39:24Z,2017-01-19T18:19:27Z
7893,Refs #23919 -- Removed obsolete compare_digest() and pbkdf2() implementations.,,timgraham,None,2017-01-19T16:25:45Z,2017-01-19T16:55:24Z
7892,Refs #23919 -- Removed __nonzero__() methods (for Python 2).,,charettes,None,2017-01-19T14:56:14Z,2017-01-19T16:27:29Z
7891,Refs #23919 -- Removed str() conversion of type and method __name__.,,charettes,None,2017-01-19T14:50:41Z,2017-01-19T16:32:32Z
7890,Refs #23919 -- Removed pysqlite Python 2 bits.,,auvipy,None,2017-01-19T14:34:46Z,2017-01-20T23:45:21Z
7889,Refs #23919 -- Removed reset_warning_registry() workaround for Python < 3.4.2.,,timgraham,None,2017-01-19T14:08:12Z,2017-01-19T15:56:01Z
7888,Fixed #27655 - Added quotes style to style guide,,ChillarAnand,None,2017-01-19T13:32:00Z,2017-01-19T13:40:39Z
7887,Refs #23919 -- Removed usage of django.utils.decorators.ContextDecorator.,ContextDecorator is available in standard library from Python3.2,ChillarAnand,None,2017-01-19T13:08:04Z,2017-01-19T16:28:31Z
7886,Refs #23919 -- Removed obsolete contextlib.closing() calls (for Python 2).,,timgraham,None,2017-01-19T13:01:47Z,2017-01-19T13:50:29Z
7885,Fixed #27775 -- Respect custom expiry in signed cookies.,"The custom expiry value `_session_expiry` is stored in the session
itself. The signed cookie needs to first be loaded, and then the value
needs to be checked for validity.

This PR calls `signing.loads()` twice which may incur a small performance
penalty. The proper solution would be to refactor the session expiry
as discussed in #19201. However, this fix should not really make that
refactor any harder an may be an acceptable fix in the meantime.

Refs #19200, #19201.",pelme,None,2017-01-19T10:47:09Z,2017-06-13T12:32:37Z
7884,Fixed spelling mistakes in code and comments.,,h4ck3rm1k3,None,2017-01-19T10:01:49Z,2017-01-19T23:20:12Z
7883,untie,,h4ck3rm1k3,None,2017-01-19T09:41:46Z,2017-01-19T09:47:20Z
7882,Refs #23919 -- Removed unneeded force_str() calls.,,claudep,None,2017-01-19T08:07:34Z,2017-01-20T07:45:49Z
7881,Refs #23919 -- Stopped inheriting from object to define new style classes.,,charettes,None,2017-01-19T04:55:34Z,2017-01-19T07:39:47Z
7880,Refs #23919 -- Stopped inheriting from object to define new style classes.,,charettes,None,2017-01-19T04:43:43Z,2017-01-19T04:45:39Z
7879,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,,felixxm,None,2017-01-18T22:30:57Z,2017-01-21T20:42:14Z
7878,Refs #23919 -- Replaced six.reraise by raise,,claudep,None,2017-01-18T20:48:10Z,2017-01-22T19:13:28Z
7877,Refs #23919 -- Cleanups for the removal of Python 2 support.,,aaugustin,None,2017-01-18T20:36:57Z,2017-01-19T03:30:08Z
7876,Refs #23919 -- Removed most of remaining six usage,,claudep,None,2017-01-18T19:42:07Z,2017-01-18T20:35:06Z
7875,"Refs #23919 -- [WIP] Replaced All super(ClassName, self) with super() in django",,auvipy,None,2017-01-18T19:34:00Z,2017-01-20T15:05:25Z
7874,Refs #27745 -- Added tests to improve code coverage for contenttypes,,desecho,None,2017-01-18T16:57:55Z,2017-02-03T19:21:19Z
7873,Refs #23919 -- Removed six.<various>_types usage,,claudep,None,2017-01-18T16:54:54Z,2017-01-18T19:20:32Z
7872,Refs #23919 -- Removed six.PY2/PY3 usage,,claudep,None,2017-01-18T13:38:46Z,2017-01-18T16:49:29Z
7871,Refs #23919 -- Removed python_2_unicode_compatible decorator usage,,claudep,None,2017-01-18T12:45:27Z,2017-01-18T13:32:27Z
7870,Refs #23919 -- Removed Python 2 notes in docs.,,timgraham,None,2017-01-18T12:33:07Z,2017-01-18T16:51:30Z
7869,Refs #23919 -- Removed Python 2 workaround for hashing Oracle params.,"In the Oracle backend we unified query parameters by their values. Hashing on Python 2 returns the same value for: ```hash(b'foo') == hash(u'foo')```, hence we added (4579c3f6b8d3a5ebd6c570836cd0552892eb0d61) tuple workaround based on parameters types and values (see [discussion](https://github.com/django/django/pull/7752#discussion_r94071557)).",felixxm,None,2017-01-18T12:06:05Z,2017-01-20T03:20:15Z
7868,Refs #23919 -- Removed python2 and other unneeded workaround of dispatch,,auvipy,None,2017-01-18T09:37:09Z,2017-01-18T19:07:23Z
7867,Refs #23919 -- Removed encoding preambles and future imports,,claudep,None,2017-01-18T09:02:55Z,2017-11-03T05:15:50Z
7866,Fixed typos,,allieus,None,2017-01-18T00:15:40Z,2017-01-18T11:53:40Z
7865,Refs #27537 -- Allowed easier overriding of default runserver address.,"Subclasses of the RunServer command can now alter the default address
without having to override `handle()`.",edmorley,None,2017-01-17T21:33:20Z,2017-01-27T18:30:28Z
7864,Fixed #27739 -- Documented LabelCommand's label attribute.,See [ticket #27739](https://code.djangoproject.com/ticket/27739).,edmorley,None,2017-01-17T14:58:35Z,2017-01-17T18:21:35Z
7863,Referenced the elidable feature from the squashing migrations docs.,Previously the `elidable` argument (added by [ticket #24109](https://code.djangoproject.com/ticket/24109)) was only mentioned on the `RunSQL` and `RunPython` migration operations page.,edmorley,None,2017-01-17T13:48:27Z,2017-01-17T18:04:01Z
7862,Refs #27683 -- Allowed setting isolation level in DATABASES ['OPTIONS'] on MySQL.,Updated from https://github.com/django/django/pull/7826.,timgraham,None,2017-01-16T19:38:02Z,2017-01-18T07:54:36Z
7861,Refs #27690 -- Removed sleep before drop test db on Oracle.,,felixxm,None,2017-01-16T19:21:33Z,2017-01-17T00:20:29Z
7860,"Refs #25809 -- Doc'd parameters, and fix typos.",Adjustment from comments in #7381.,atombrella,None,2017-01-16T17:32:16Z,2017-03-18T13:29:54Z
7859,Moved unneeded ImproperlyConfigured inner imports.,(extracted from MySQL only changes in https://github.com/django/django/pull/7826),timgraham,None,2017-01-16T15:55:01Z,2017-01-16T17:48:42Z
7858,Fixed #27748 -- Switched HTTP error handlers to reference callables instead of strings.,"Updated version of https://github.com/django/django/pull/6206.
https://code.djangoproject.com/ticket/27748",dgladkov,None,2017-01-16T14:53:12Z,2017-01-27T21:13:41Z
7857,Add signals for Django management commands,"This is a followup implementation of my suggestion: https://groups.google.com/d/msg/django-developers/JwYKEemPHFs/ATd_UKCaBAAJ

This PR contains no docs yet, but the usage example is following:

```python
from django.core.management import signals
from django.core.management.commands.runserver import \
    Command as RunserverCommand


def handle_pre(sender, instance):
    instance.stdout.write('Hello World')

def handle_post(sender, instance):
    instance.stdout.write('Bye World')

signals.pre_command.connect(handle_pre, sender=RunserverCommand)
signals.post_command.connect(handle_post, sender=RunserverCommand)
```

Please let me know what you think!",dgladkov,None,2017-01-16T14:31:46Z,2017-01-19T13:05:49Z
7856,Fixed #27735 -- Doc'd form widget l10n change (refs #15667).,https://code.djangoproject.com/ticket/27735,timgraham,None,2017-01-16T14:17:00Z,2017-01-16T17:58:22Z
7855,Backport #27544 -- Fixed QuerySet.update(dt=F('dt') + timedelta) crash on SQLite.,This backports the fix for #27544 into the `stable/1.9.x` branch.,flokli,None,2017-01-16T12:20:41Z,2017-01-16T12:39:57Z
7854,Fixed #27736 -- Prefer decorators for lookup registration.,,atombrella,None,2017-01-16T10:28:01Z,2017-01-16T14:28:58Z
7853,Simplification,Return value immediately,Stranger6667,None,2017-01-16T09:46:03Z,2017-01-16T11:24:17Z
7852,Fix line 489.,"When I try this tutorial,I got an error on line 489.
My python version is Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AMD64)] on win32.
My Django version is Django1.10.5.
The error tells :
TypeError: can't compare datetime.datetime to datetime.date.
So I do this fix.
Please forgive me for my poor English:-)",kongtianyi,None,2017-01-16T04:12:08Z,2017-01-16T11:25:20Z
7851,Refs #25809 -- Prefered imports from django.db.models.,,MarkusH,None,2017-01-15T20:16:37Z,2017-01-15T21:04:43Z
7850,[WIP] Fixed #27704 -- Used TypedMultipleChoiceField for array fields with choices,https://code.djangoproject.com/ticket/27704,claudep,None,2017-01-14T15:27:19Z,2020-07-07T10:11:12Z
7849,Fixed #25307 -- conditional aggregation over subqueries,"A bug fix for Anssi's previous patch. Thanks to @jproffitt for identifying the source of the bug!

From original PR https://github.com/django/django/pull/6267/",jarshwah,None,2017-01-14T12:17:30Z,2017-01-16T15:03:31Z
7848,Fixed 27387 -- Documented addition of required HTML attribute in Field.required docs,,claudep,None,2017-01-14T10:38:48Z,2017-01-14T13:14:27Z
7847,Refs#24317 - Relation Field field clean up,,auvipy,None,2017-01-14T07:21:29Z,2017-03-20T07:50:36Z
7846,Refs #25226 -- Cloned ArrayField.base_field on deconstruction.,"This will prevent the base_field from sharing attributes with the one used during migrations.

@timgraham this fixed the `--reverse` test suite for me on PostgreSQL.",charettes,None,2017-01-14T04:57:38Z,2017-01-14T11:31:35Z
7845,Changed a test to be consistent when run in parallel.,"This particular test was sometimes failing when running the test suite
in parallel. The `id` was different depending on the order the tests
were run. The test was incorrectly comparing model primary keys rather
than ensuring they didn't change.

I ran into this while trying to debug inconsistent test failures from https://github.com/django/django/pull/7587#issuecomment-272539312

I could replicate the failure by running the following command (from django-box) very quickly after the previous run. Usually fails 1/5 times.

```
PYTHONPATH=/home/vagrant/djangodata/ /django/.tox/py35-postgres/bin/python /django/tests/runtests.py --settings=test_postgres queries --parallel 2 --debug-sql
```",jarshwah,None,2017-01-14T02:17:53Z,2017-01-14T04:41:50Z
7844,Refs #16614 -- Prevented database errors from being masked by cursor close,"When an error occurred during the cursor.execute statement, the cursor
is closed. This operation did not fail with client-side cursors. Now,
with server-side cursors, the close operation might fail (example
below). The original error should be raised, not the one raised by
cursor.close(), this is only clean-up code.

For example, one can attempt to create a named cursor for an invalid
query. psycopg will raise an error about the invalid query and the
server-side cursor will not be created on PostgreSQL. When the code
attempts to cursor.close(), it asks psycopg to close the cursor, which
was not created. pyscopg raises a new error: psycopg2.OperationalError:
cursor ""_django_curs_140365867840512_20"" does not exist.",francoisfreitag,None,2017-01-13T23:43:30Z,2017-01-14T12:19:42Z
7843,Fixed #5851 -- Added different attrs for date and time fields in SplitDateTimeWidget.,Ticket [5851](https://code.djangoproject.com/ticket/5851).,felixxm,None,2017-01-13T12:00:04Z,2017-02-07T16:36:56Z
7842,Fixed #27709 -- Fixed get_for_models() for proxies with an empty cache.,Thanks Peter Inglesby for the report and tests.,charettes,None,2017-01-13T02:13:33Z,2017-01-13T15:03:11Z
7841,Fixed #27614 -- Stored db in model state on Model.save() when no db state.,"Addresses a lot of the issues I'm having with multi db scenarios and not having access to the specific DB on save in the various functions throughout the save cycle which are not passed the using value.


ticket: https://code.djangoproject.com/ticket/27614",JBKahn,None,2017-01-12T20:05:33Z,2017-04-01T18:48:04Z
7840,Fixed #27728 -- Allowed overriding admin templatetag's templates.,"ticket https://code.djangoproject.com/ticket/27728
",rsalmaso,None,2017-01-12T18:37:53Z,2018-02-28T12:49:39Z
7839,Corrected log level,"Handler is configured for INFO, not DEBUG level.",edevil,None,2017-01-12T17:16:47Z,2017-01-12T18:04:18Z
7838,Fixed #26056 -- ArrayField does not work with ValueListQuerySet.,,atombrella,None,2017-01-12T13:20:45Z,2018-05-01T15:35:39Z
7837,Fix reference to base manager,"This documentation is in the base manager section, and I think is clearly referring to base managers, not default managers.",dracos,None,2017-01-11T21:59:28Z,2017-01-11T23:31:12Z
7836,Fixed #27639 -- Added a chunk_size argument to QuerySet.iterator(),Ticket: https://code.djangoproject.com/ticket/27639,francoisfreitag,None,2017-01-11T18:28:27Z,2017-06-03T00:41:08Z
7835,Fixed #27723 -- Passed MultiWidget's attrs argument to widgets constructors to set the input type.,"Ticket [27723](https://code.djangoproject.com/ticket/27723).
Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01.",felixxm,None,2017-01-11T09:50:49Z,2017-01-13T11:34:34Z
7834,Fixed #27721 -- Provided better error message for failure to run shell,,inglesp,None,2017-01-10T21:49:00Z,2017-01-12T18:12:22Z
7833,Fixed #27717 -- Allowed migration optimization across AlterModelOptions.,"See [ticket #27717](https://code.djangoproject.com/ticket/27717).

Side note: Python 3.5's [PEP 448](https://www.python.org/dev/peps/pep-0448/) unpacking would be much cleaner here:
```python
CreateModel(
    ...
    options={**self.options, **operation.options},
```

One day!",edmorley,None,2017-01-10T20:23:31Z,2017-01-13T18:39:04Z
7832,Fixed #20238 -- Added threading support to LiveServerTestCase,https://code.djangoproject.com/ticket/20238,nadege,None,2017-01-10T18:16:12Z,2019-05-04T05:55:05Z
7831,Fixed 27709 -- Fixed get_for_models() when cache is empty,,inglesp,None,2017-01-10T16:53:33Z,2017-01-12T15:47:32Z
7830,Fixed #27714 -- Fixed small visual artifact when clicking inline edit button in admin.,https://code.djangoproject.com/ticket/27714,desecho,None,2017-01-10T14:37:15Z,2017-01-10T16:24:29Z
7829,Refs #21927 -- Removed include()'s app_name argument.,"Removed include()'s app_name argument per the deprecation timeline.

To be merged after the 1.11 branch has been split off from master. ",knbk,None,2017-01-10T14:23:36Z,2017-01-10T15:11:53Z
7828,Fixed #27713 -- Clarified NoReverseMatch error message when no view is found.,https://code.djangoproject.com/ticket/27713,knbk,None,2017-01-10T13:50:17Z,2017-01-12T02:40:19Z
7827,Fixed #27712 -- Reallowed Input widget's attrs argument to set the input type.,"Ticket [27712](https://code.djangoproject.com/ticket/27712).
Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01.",felixxm,None,2017-01-10T11:48:43Z,2017-01-10T16:40:08Z
7826,Fixed #27683 -- Allowed transaction isolation level to be chosen on MySQL,"Also added a deprecation warning and a check, both triggered when the
user isolation level is not specified. For now, the default level is
not changed.

Not quite sure about the duplication of a check and a deprecation warning
about the same thing, although they are each justified in their own right...",shaib,None,2017-01-10T00:53:35Z,2017-01-24T00:16:37Z
7825,Fixed #27699 -- Fixed parse_duration() with a negative number of seconds.,,hardik1997,None,2017-01-09T22:42:20Z,2017-01-14T10:16:48Z
7824,Fixed: 27699,,hardik1997,None,2017-01-09T19:48:23Z,2017-01-09T22:35:11Z
7823,Issue #27699 Fixed,,hardik1997,None,2017-01-09T19:23:35Z,2017-01-09T20:52:21Z
7822,Fixed #26903 -- Fixed __contains lookup for Date/DateTimeRangeField.,I prepared new PR based on #6885 due to inactivity. I also added tests for aware datetimes.,felixxm,None,2017-01-09T17:29:23Z,2017-02-07T17:46:19Z
7821,Fixed #27707 -- Removed shell support for IPython < 1.0.,https://code.djangoproject.com/ticket/27707,timgraham,None,2017-01-09T17:03:38Z,2017-01-09T17:36:57Z
7820,Change case of full capital sentence in doc examples,"Cosmetic change, so I won't create a Trac ticket for that.

I'm wondering however if some conventions exist about the presence of `>>>` at the beginning of snippet. Some documentation pages does not include them (e.g https://docs.djangoproject.com/en/1.10/topics/db/queries/) while this one has them almost everywhere.",mlorant,None,2017-01-09T14:42:54Z,2017-01-09T22:00:45Z
7819,Refs #15667 -- Removed hardcoded icon size for related widget wrapper.,"Just noticed that all icons in Related Widget became smaller. Probably `width` and `height` were added accidentally [here](https://github.com/django/django/commit/b52c73008a9d67e9ddbb841872dc15cdd3d6ee01#diff-5259f408db66c0fd643a9b52c2743a34) during template-based widgets development.

It's trivial change, let me know if I need to create ticket in Trac for this.",elky,None,2017-01-09T14:37:57Z,2017-01-09T14:59:15Z
7818,Fixes: #27699,,hardik1997,None,2017-01-09T14:18:45Z,2017-01-09T15:00:16Z
7817,Fixed #27699 -- Fixed parse_duration() with a negative number of seconds.,https://code.djangoproject.com/ticket/27699,hardik1997,None,2017-01-09T13:53:26Z,2017-01-09T23:06:27Z
7816,Fixed test isolation in a couple migrations tests.,"Without this, tests from refs #27432 fail when running with --reverse.",timgraham,None,2017-01-09T13:05:41Z,2017-01-09T13:40:09Z
7815,Fixed #27705 -- Added protocol/server_cls attributes to runserver for extensibility.,https://code.djangoproject.com/ticket/27705,dsanders11,None,2017-01-09T12:54:26Z,2017-01-09T15:48:40Z
7814,Fixed #27699 -- Added negative timedelta support to parse_duration().,,jinankjain,None,2017-01-09T11:56:24Z,2017-01-14T10:17:55Z
7813,Fixed #27678 - Documented that template system isn't safe against untrusted authors,See https://code.djangoproject.com/ticket/27678 for details .,andrewnester,None,2017-01-09T11:22:11Z,2017-01-27T16:29:58Z
7812,Reenabled support for Jinja 2.9 (requires 2.9.2 or higher) in test re…,…quirements,apollo13,None,2017-01-08T17:26:41Z,2017-01-08T17:45:08Z
7811,Used get_constraints instead of deprecated get_indexes in introspection tests.,,felixxm,None,2017-01-08T13:28:31Z,2017-01-08T14:20:09Z
7810,Fixed #26099 -- Use absolute imports of Django modules in migrations,,koterpillar,None,2017-01-08T05:43:42Z,2017-01-20T23:32:09Z
7809,update jinja2 version to 2.9.2+,as the issue seems to be fixed in 2.9.2,auvipy,None,2017-01-08T03:38:09Z,2017-01-09T00:23:31Z
7808,Fixed #27700 -- Optimized inspectdb tests by specifying database tables.,Ticket [27700](https://code.djangoproject.com/ticket/27700).,felixxm,None,2017-01-07T17:55:05Z,2017-01-07T20:41:42Z
7807,Fixed #23908 -- Always use DEFAULT_CONTENT_TYPE from global_settings …,…for admin to prevent XHTML from breaking admin site.,desecho,None,2017-01-06T20:07:21Z,2017-01-28T18:09:17Z
7806,Fixed #27698 -- Added django.test.utils.ContextList.get(),https://code.djangoproject.com/ticket/27698,timgraham,None,2017-01-06T16:01:05Z,2017-01-07T00:23:43Z
7805,Fixed #27487--  Added admin JavaScript support to RadioSelect and CheckboxSelectMultiple widgets.,"This problem occur when you override the defaults `Select` and `SelectMultiple` widgets in the admin by `RadioSelect` or `CheckboxSelectMultiple` respectively, and you need to add a new object of the relationship. Both widgets are rendered as `UL` `HTML` list, and there are not JavaScript support for that in `RelatedObjectLookups.js`. Every time when you add a new object of the relationship, you need to refresh the page to update the list with the added object.",aaboffill,None,2017-01-06T14:40:04Z,2018-03-20T19:49:59Z
7804,Fixed #27655 - Mentioned the preference for single quote strings in the documentation,"https://code.djangoproject.com/ticket/27655
As the ticket mentions, the preferred use of single quotes over double quotes is not explicitly mentioned in the documentation. I thought this was a nice first commit to familiarize myself with the contributing workflow.

This was a pretty simple change but any comments welcomed : )",SalehHindi,None,2017-01-06T14:12:20Z,2017-01-19T13:40:38Z
7803,Refs #22561 -- Measured email long lines on encoded content,Thanks Pavel Pokrovskiy for the report.,claudep,None,2017-01-06T09:37:43Z,2017-01-06T15:06:20Z
7802,Fixed #27686 -- Fixed Vary: Cookie header being sent needlessly on empty sessions.,"- The sessions middleware was sending vary by cookie header even
when there was an empty session and no cookie being sent,
interfering with downstream caching.

- This fix will ensure that there is a non empty session before
sending the vary by cookie header",jeffwillette,None,2017-01-06T04:44:42Z,2017-01-06T19:11:23Z
7801,Fixed the test running instructions,- Previous testing instructions led to errors without first copying the settings file and running from the `django-dir` directory,jeffwillette,None,2017-01-06T02:54:35Z,2017-01-06T04:51:16Z
7800,"Fixed #27693, Refs #27257 -- Fixed iexact lookup on JSONField keys.",Thanks Harris Lapiroff for the report.,charettes,None,2017-01-06T00:08:01Z,2017-01-07T00:26:10Z
7799,Fixed #25006 -- Allowed custom time shortcuts in admin's time picker.,"The list of hours can be overridden for each field in javascript like this:
```
DateTimeShortcuts.clockHours.name = [
    ['3 a.m.', 3]
]
```
where name is the name attribute of the input tag.",desecho,None,2017-01-05T22:11:05Z,2017-05-27T16:20:48Z
7798,Refs #27025 -- Added Python 3.6 to tox.ini.,,andriisoldatenko,None,2017-01-05T20:32:44Z,2017-01-06T01:09:46Z
7797,Fixed #27475 -- Fixed NonExistentTimeError crash in ModelAdmin.date_hierarchy.,https://code.djangoproject.com/ticket/27475,desecho,None,2017-01-05T19:25:27Z,2017-03-06T17:19:28Z
7796,Fixed #27690 -- Removed sleep before test db drop,Removed the call to `time.sleep` before dropping the test db,davidszotten,None,2017-01-05T14:50:22Z,2017-01-06T20:28:23Z
7795,Cosmetic edits for messages_tests.,,timgraham,None,2017-01-05T14:26:37Z,2017-01-05T15:08:16Z
7794,Fixed #27688 -- Made messages' add_message() request check use ducktyping.,ticket https://code.djangoproject.com/ticket/27688,rsalmaso,None,2017-01-05T09:41:51Z,2017-01-09T23:03:11Z
7793,Alphabetized system check reference.,"![image](https://cloud.githubusercontent.com/assets/411869/21665075/82f68d62-d2b8-11e6-8332-25168e0e6ae7.png)
",timgraham,None,2017-01-05T00:55:36Z,2017-01-05T16:27:12Z
7792,Fixed #27356 -- Fixed ModelAdmin.lookup_allowed() for some nested relations.,"…reignKey.

I used the tests from #7406. Thanks to @felixxm and @tobiasmcnulty",desecho,None,2017-01-04T23:39:33Z,2017-02-08T00:43:55Z
7791,Add autoreload file tracking options setting,"Right now, Django only tracks Python module files for autoreload during development.  As a project starts to include more custom files, such as Javascript, SQL, Makefiles, etc.., the autoreload function doesn't apply to these.

With this pull request, we can add a manual list of files to track for autoreload.  

In your project's settings.py file, assign a variable TRACK_FILES containing a list of full file paths to track.  This will track files to autoreload the development run server as these files are updated.",mozumder,None,2017-01-04T20:08:32Z,2017-01-04T21:11:23Z
7790,"Refs #2856 -- Removed redundant escaping in admin's ""Perhaps it was deleted?"" message.","As reported by Florian: 

> I think this results in double escaping -- it is hard to spot since the admin applies weird quoting, but ' (single apostrophe) in the object_id now ends up as `&#39;`. Do you see any downside to removing escape here?
> Even preferably, can we unquote the `object_id`, if you enter:
> ```
> <script type=""text/javascript"">alert('1');</script>
> ```
> you end up with
> ```
>  _3Cscript type_3D_22text_2Fjavascript_22_3Ealert(&#39;1&#39;)_3B_3C_2Fscript_3E
> ```
> in the change message (maybe also add some quotes around like the normal views do: XXX with ID ""YYY"" > go successfully added)",timgraham,None,2017-01-04T15:25:18Z,2017-01-04T16:01:36Z
7789,Fixed #27587 -- Doc'd how to see the ORM generated SQL in a QuerySet.,"Just copied the remark from the aggregation-documentation (it's a good remark, so no harm in repeating it). It's a big tricky to see where else it fits, and thus I created a new section. ",atombrella,None,2017-01-04T15:21:57Z,2018-01-16T13:54:54Z
7788,Refs #15035 -- Corrected a bug and improved comments for a staticfiles test.,,timgraham,None,2017-01-04T00:26:31Z,2017-01-04T13:06:56Z
7787,Fixed #27681 -- Fixed binary &/| operators for negative values on MySQL., This is a follow up of the discussion in #7770.,felixxm,None,2017-01-03T16:41:27Z,2017-01-03T18:17:54Z
7786,"Refs #24688, #27497 -- Corrected docs: distance's 'spheroid' option isn't PostGIS specific.","I think ""With PostGIS"" is obsolete as of:

Oracle: fcf494b48fea7c0c55ea29721ba0b2d250351ff8 (@jtiai)
SQLite: 986c7d522a4c2351108ba1dc5f58b5fd4ed75ba0 (@sir-sigurd)

Does any of the rest of the paragraph need revision?",timgraham,None,2017-01-03T16:01:06Z,2017-01-06T12:55:01Z
7785,Fixed #27680 -- Add ccbv.co.uk to documentation.,[Ticket](https://code.djangoproject.com/ticket/27680),jpic,None,2017-01-03T15:46:09Z,2017-01-05T00:13:14Z
7784,Refs #25004 -- Fixed test failure introduced by OpenLayers 3 update.,,timgraham,None,2017-01-03T15:01:22Z,2017-01-03T16:29:29Z
7783,[WIP] added new class based generic views based on django vanilla views,"opened for consensus on the issue.

* no tests
* no doc update
* no deprecation

https://groups.google.com/d/topic/django-developers/u1aLYz3fAUw/discussion",auvipy,None,2017-01-03T12:51:06Z,2017-01-04T12:26:54Z
7782,Fixed #11974 -- Allowed overriding admin's submit_row templatetag's template.,ticket https://code.djangoproject.com/ticket/11974,rsalmaso,None,2017-01-03T09:59:44Z,2017-01-12T18:42:33Z
7781,Fixed #27661 -- Moved FileSystemFinder's ImproperlyConfigured exceptions to system checks.,"https://code.djangoproject.com/ticket/27661

 - Moved FileSystemFinder's ImproperlyConfigured checks to newly-created system check module in contrib.staticfiles. 
 - Documented the details of the system check. 
 - Added unit tests and the regression test.
",lingxiaoyang,None,2017-01-02T22:54:50Z,2017-02-01T15:42:13Z
7780,Fixed #27673 -- Prevented system checks for contrib.admin during registration.,https://code.djangoproject.com/ticket/27673,ellmetha,None,2017-01-02T21:56:26Z,2017-01-10T13:39:50Z
7779,Fixed #27677 -- Allowed disabling MySQL's savepoints and disabled them on NDBCLUSTER engine.,"MySQL NDB Cluster does not support savepoints. This disables savepoints for NDB/NDBCLUSTER but allows user to explicitly enable/disable savepoints for this and other engines in the future.

(Cross posted with https://code.djangoproject.com/ticket/27677#ticket)",alanjds,None,2017-01-02T19:34:31Z,2017-01-04T22:16:54Z
7778,Fixes #27676 -- Made MySQL backend allow database level defaults for text/blob/json columns on MariaDB 10.2+,[Ticket](https://code.djangoproject.com/ticket/27676),adamchainz,None,2017-01-02T18:33:39Z,2017-06-02T07:36:28Z
7777,"Refs #27392 -- Removed 'test if', 'ensure', etc. from test docstrings.","In keeping with the policy for test docstrings to state the expected behaviour of the test.

Still a work in progress, though feedback is welcomed!",barun511,None,2017-01-02T05:00:18Z,2017-04-26T18:29:07Z
7776,Fixed #27670 -- Prevented shell command from masking ImportErrors.,[Ticket](https://code.djangoproject.com/ticket/27670),inglesp,None,2017-01-01T14:16:49Z,2017-01-09T21:01:25Z
7775,Fixed #27671 -- Excluded .po files from source distribution.,https://code.djangoproject.com/ticket/27671,illia-v,None,2017-01-01T14:06:45Z,2017-01-02T16:26:49Z
7774," Refs #27637 -- Fixed timesince, timeuntil on New Year's Eve in a leap year.",https://code.djangoproject.com/ticket/27637,vinayinvicible,None,2016-12-31T22:19:36Z,2017-01-02T13:40:45Z
7773,Bootstrapped Django 2.0.,"- [x] Bump  version
- [x] Add stub release notes
- [x] Remove deprecated features
- [x] Increase PBKDF2 iterations ([discussion](https://groups.google.com/d/topic/django-developers/Qab-hRG-SKs/discussion))

This branch won't do any cleanups for dropping Python 2 compatibility.

(to be merged after the stable/1.11.x branch is created in mid-January following Django 1.11 alpha)",timgraham,None,2016-12-31T01:45:12Z,2017-01-18T03:09:53Z
7772,Refs #27632 -- Simplified params dict creation for Oracle,"I've simplified flipping the dict using a dict comprehension. The comprehension was twice as fast before we introduced the type into the key, now it's 2 - 3 times as fast because we're avoiding the extra `list()` and `zip()` call.

Microbenchmarks:

```
In [32]: %timeit {v: k[0] for k,v in params_dict.items()}
The slowest run took 4.42 times longer than the fastest. This could mean that an intermediate result is being cached.
1000000 loops, best of 3: 718 ns per loop

In [34]: %timeit dict(zip(params_dict.values(), list(zip(*params_dict.keys()))[0]))
The slowest run took 4.17 times longer than the fastest. This could mean that an intermediate result is being cached.
100000 loops, best of 3: 2.25 µs per loop
```

And for just a single execution:

```
In [43]: %time {v: k[0] for k,v in params_dict.items()}
CPU times: user 5 µs, sys: 0 ns, total: 5 µs
Wall time: 7.87 µs
Out[43]: {':arg0': 2, ':arg1': 0.75, ':arg2': 'sth'}

In [45]: %time dict(zip(params_dict.values(), list(zip(*params_dict.keys()))[0]))
CPU times: user 10 µs, sys: 0 ns, total: 10 µs
Wall time: 13.1 µs
Out[45]: {':arg0': 2, ':arg1': 0.75, ':arg2': 'sth'}
```",jarshwah,None,2016-12-31T00:06:06Z,2017-01-01T01:39:04Z
7771,Replaced some GIS has_X_method skips with supports_X_aggr/has_X_function.,,timgraham,None,2016-12-30T23:55:26Z,2017-01-03T14:49:01Z
7770,Fixed #25912 -- Added binary left/right shift operators to F expressions.,"https://code.djangoproject.com/ticket/25912
Updated from https://github.com/django/django/pull/5815.",timgraham,None,2016-12-30T20:20:22Z,2017-01-03T22:05:47Z
7769,Refs #15667 -- Removed trailing newline from widget attrs.html template.,"Let's remove last ""\n"" in attrs rendering.
With this characters select options becomes like this (example from django-money)

            <option value=""XFU"" \n>UIC-Franc</option>
            \n\n
            <option value=""USD"" selected\n>US Dollar</option>
            \n\n
            <option value=""UGX"" \n>Uganda Shilling</option>
            \n\n
            <option value=""UYU"" \n>Uruguayan peso</option>

'\n' in the ends of options is unuseful when you printing the form.
Also now in most of tests people are using condition like this:

`<option value=""USD"" selected>US Dollar</option> in form.as_p`

Such tests become failed with the last '\n' in the option tag.
I think this is important as case of backward compatibility.

Thanks.",ivanchenkodmitry,None,2016-12-30T11:04:00Z,2017-01-07T00:11:33Z
7768,Fixed #20238 -- Added threading support to LiveServerTestCase,,claudep,None,2016-12-30T10:49:41Z,2017-01-04T23:13:30Z
7767, Fixed #27658 -- Prevented collectstatic from overwriting newer files in remote storages.,https://code.djangoproject.com/ticket/27658,REVIMI,None,2016-12-30T09:26:55Z,2017-01-04T18:09:32Z
7766,Fixed #27652 -- Humanize template filters intcomma,Improves PR #7762,huzaifafaruqui,None,2016-12-30T04:00:47Z,2016-12-30T12:31:43Z
7765,Fixed #8500 -- Allowed overriding the default admin site instance.,ticket https://code.djangoproject.com/ticket/8500,rsalmaso,None,2016-12-29T20:37:48Z,2018-02-04T00:36:17Z
7764,Fixed #27663 -- Returned SQL and params for indexes for SchemaEditor,https://code.djangoproject.com/ticket/27663,MarkusH,None,2016-12-29T19:32:14Z,2017-01-15T12:54:17Z
7763,Fixed #27656 -- Updated docstring verbs according to PEP 257.,https://code.djangoproject.com/ticket/27656,desecho,None,2016-12-29T16:16:33Z,2017-03-04T15:47:04Z
7762,Fixed #27652 -- Humanize template filters intcomma and intword also w…,…ork with floats.,atombrella,None,2016-12-29T10:54:26Z,2016-12-30T18:48:24Z
7761,Let's compare them!,,asval,None,2016-12-29T09:13:33Z,2016-12-29T11:37:47Z
7760,Fixed #27622 -- Allowed test client to accept vendor tree JSON content types.,https://code.djangoproject.com/ticket/27622,desecho,None,2016-12-28T22:48:09Z,2016-12-29T13:32:16Z
7759,Fixed #27654 -- Propogate alters_data value to subclasses,https://code.djangoproject.com/ticket/27654,vinayinvicible,None,2016-12-28T21:58:47Z,2018-03-19T21:57:30Z
7758,Fixed #27653 -- Improved Ukrainian locale formats.,,illia-v,None,2016-12-28T21:27:01Z,2016-12-29T12:43:13Z
7757,Fixed #27641 -- Added a note to the deployment checklist about local-memory caching,[Ticket](https://code.djangoproject.com/ticket/27641),adamchainz,None,2016-12-28T21:19:16Z,2016-12-29T00:43:44Z
7756,Fixed #27635 -- Use secrets on Python 3.6+ in django.utils.crypto.,"In addition to the change I made, I'm not sure if random should also be switched in these 2 files: 
- django/core/mail/message.py
- django/template/defaultfilters.py
However the ticket says just django.utils.crypto so it should be good.",desecho,None,2016-12-28T21:09:46Z,2019-05-12T19:01:31Z
7755,Refs #27632 -- Unified query parameters by their types and values on Oracle.,"Ticket [#27632](https://code.djangoproject.com/ticket/27632). Fixed regression on python 2 in 6dbe56e.

Unified query parameters by their types and values on Oracle.",felixxm,None,2016-12-28T20:48:36Z,2016-12-28T22:20:46Z
7754,Fixed #27628 -- Fixed unarchiving a file without permission data.,https://code.djangoproject.com/ticket/27628,desecho,None,2016-12-28T20:17:25Z,2016-12-29T00:42:23Z
7753,Fixed #27651 -- Allowed M2M to concrete and proxy through model.,https://code.djangoproject.com/ticket/27651,timgraham,None,2016-12-28T16:49:21Z,2016-12-28T20:13:43Z
7752,Fixed #27649 -- Bumped required cx_Oracle to 5.2.,"Removed obsolete workarounds from 1aa48898085ea16915877cc139e238a74e3f554b
and dcf3be7a621f011a918453527406216a738acf68.",timgraham,None,2016-12-28T15:12:07Z,2016-12-29T17:45:26Z
7751,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,https://code.djangoproject.com/ticket/27370,timgraham,None,2016-12-27T23:41:26Z,2016-12-28T16:07:32Z
7750,Fixed #24994 -- Documented the expected type of settings.SECRET_KEY.,As discussed at https://groups.google.com/d/topic/django-developers/SOKz1e3TTcg/discussion,timgraham,None,2016-12-27T18:41:31Z,2016-12-28T12:36:38Z
7749,Fixed #27648 -- Deprecated (iLmsu) regex groups in url() patterns.,https://code.djangoproject.com/ticket/27648,timgraham,None,2016-12-27T16:16:51Z,2016-12-27T20:59:14Z
7748,Fixed #27647 -- Fixed Windows segmentation fault in runserver autoreload.,"Hey!

I ran into a Windows segmentation fault issue on Django development server reloads (stock `python manage.py runserver`) on Python 3.5 and Python 3.6 and recently reported a debug traceback of these segfaults in [#27647](https://code.djangoproject.com/ticket/27647). 

I think I rooted out the root cause (Windows thread safety error) and when testing on Windows 10 this fix works fine. According to Python documentation the `os.spawnve` should be replaced by the [`subprocess`](https://docs.python.org/2/library/subprocess.html) module because of the thread-safety issues and correct subprocess spawning implementations between platforms. `subprocess` has been available since Python 2.4.

In this patch I replaced the `os.spawnve` with the thread-safe `subprocess.call`. 

---

I also removed argument wrapping in quotes out of necessity because `subprocess.call` does not accept wrapped string arguments and handles those internally with Windows. This seems to cause no problem whatsoever on Windows 10 `cmd.exe` or the [Cmder](http://cmder.net/) (which is a ConEmu variant) console running MinGW 32-bit bash shell. 

Additional notes on `subprocess.call` argument handling:

https://docs.python.org/2/library/subprocess.html#subprocess.Popen

Additional notes on `subprocess` argument handling on Windows:

https://docs.python.org/2/library/subprocess.html#converting-an-argument-sequence-to-a-string-on-windows

Interesting discussion on argument wrapping's necessity and correct implementation on `win32` platforms is available in a MSDN blog by a Microsoft employee:

https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/",aleksihakli,None,2016-12-27T15:48:12Z,2016-12-28T13:04:10Z
7747,[WIP] Fixes #27638 -- Isolate template rendering from database changes,https://code.djangoproject.com/ticket/27638,vinayinvicible,None,2016-12-27T12:32:10Z,2016-12-28T01:35:30Z
7746,Fixed #27640 -- Fixed HttpResponse's __repr__()  without a 'Content-Type' header.,"Fixes [27640](https://code.djangoproject.com/ticket/27640).
Fixed `__repr__` for responses with no 'Content-Type' header in `HttpResponse`, `HttpResponseNotAllowed` and `HttpResponseNotModified`.",roboslone,None,2016-12-27T04:31:26Z,2016-12-27T20:54:11Z
7745,Fixed #23268 -- Add natural key support for for generic foreign keys fixtures.,"[Ticket](https://code.djangoproject.com/ticket/23268)

With this ticket, natural keys can be used for Generic Foreign Keys. This works for fixtures serialization & deserialization for each format (python, json, xml, yaml).

When a natural key is available for a GenericForeignKey, this one is used with the field name ""content_object"" rather than ""object_id"". 

Here's an example. With
- `Foo` a model with a `natural_key`
- `Bar` a model with no `natural_key`
- `TaggedItem` a model with a `GenericForeignKey`

```python
class Foo(models.Model):
    foo = models.IntegerField()

class Bar(models.Model):
    bar = models.IntegerField()


class TaggedItem(models.Model):
    content_type = models.ForeignKey(ContentType)
    object_id = models.PositiveIntegerField()
    content_object = GenericForeignKey()

it1 = TaggedItem(content_object=Foo(foo=1))
it2 = TaggedItem(content_object=Bar(bar=1))
```

Deserializing `it1` will give:
```json
{
    ""fields"": {
        ""content_type"": [""app"", ""foo""],
        ""content_object"": [1]
    }
}
```

Deserializing `it2` will give:
```json
{
    ""fields"": {
        ""content_type"": [""app"", ""foo""],
        ""object_id"": 1
    }
}
```

",gtnx,None,2016-12-26T14:01:25Z,2018-11-14T22:24:55Z
7744,"Fixed #27637 -- Fixed timesince, timeuntil in leap year edge case.",Ticket [27637](https://code.djangoproject.com/ticket/27637).,felixxm,None,2016-12-26T13:34:03Z,2016-12-27T14:29:11Z
7743,Fixed #27642 -- Made `forms.utils.flatatt` not add values which are `None` to attrs,"I think, when a person adds arguments like
```python
{'id': None, 'class': 'smth'}
```
to an `<input>` tag, one does not expect it to turn into 
```html
<input ... id=""None"" class=""smth"">
```
---
I have fixed it in this PR.",illia-v,None,2016-12-26T10:21:21Z,2016-12-27T14:42:18Z
7742,Fixed #26423 -- Match email validation with html,"https://code.djangoproject.com/ticket/26423

This is more strict in some cases, and less strict in other cases.
- this allows any local domain on the right.
- html does not allow quoted strings in the user part
- html does not allow ip addresses (but I kept django's logic for that)
- html does not allow unicode

Unfortunately, Chrome, Firefox, and IE don't allow unicode email addresses (besides domain names), so this doesn't fix https://code.djangoproject.com/ticket/27029. I assume that at some point in the future they will accept some unicode, but currently no. https://bugs.chromium.org/p/chromium/issues/detail?id=431550",collinanderson,None,2016-12-25T21:17:55Z,2017-02-10T16:55:53Z
7741,Refs #27995 -- Moved all query checks into one method.,"This should make it easier for #7727 and other to disallow certain methods after unions or slices have been taken.

Questions:
 * Should this be on the `QuerySet` or `Query`? I am also considering passing in `*args, **kwargs` so that those methods can check whatever neccessary.

Once we know where to put it I'll try to move all asserts and checks into that method.",apollo13,None,2016-12-25T13:00:42Z,2017-06-14T20:32:20Z
7740,Update tests.py,"Ticket #27392 removed the phrases ""Tests that"" and ""Ensures"" from docstrings ",alisye,None,2016-12-25T09:20:24Z,2016-12-26T13:00:31Z
7739,Fixed #27632 -- Unified query parameters by their values in the Oracle backend.,"[Ticket](https://code.djangoproject.com/ticket/27632). I handled this by unified query parameters by their values e.g. query
```sql
SELECT
  (""AGGREGATION_REGRESS_BOOK"".""PRICE"" * :arg0) AS ""DISCOUNT_PRICE"",
  SUM((""AGGREGATION_REGRESS_BOOK"".""PRICE"" * :arg1)) AS ""SUM_DISCOUNT""
FROM ""AGGREGATION_REGRESS_BOOK""
GROUP BY
  ""AGGREGATION_REGRESS_BOOK"".""PRICE"" * :arg2,
  ""AGGREGATION_REGRESS_BOOK"".""NAME""
ORDER BY ""AGGREGATION_REGRESS_BOOK"".""NAME"" ASC
```
with parameters `[0.75, 0.75, 0.75]` is replaced by 
```sql
SELECT
  (""AGGREGATION_REGRESS_BOOK"".""PRICE"" * :arg0) AS ""DISCOUNT_PRICE"",
  SUM((""AGGREGATION_REGRESS_BOOK"".""PRICE"" * :arg0)) AS ""SUM_DISCOUNT""
FROM ""AGGREGATION_REGRESS_BOOK""
GROUP BY
  ""AGGREGATION_REGRESS_BOOK"".""PRICE"" * :arg0,
  ""AGGREGATION_REGRESS_BOOK"".""NAME""
ORDER BY ""AGGREGATION_REGRESS_BOOK"".""NAME"" ASC
```
with parameters `[0.75]`. This is a follow up of the discussion in #6267.",felixxm,None,2016-12-24T13:42:16Z,2016-12-28T13:15:36Z
7738,Updated an example of `bulk_create` in docs,,illia-v,None,2016-12-24T12:29:46Z,2016-12-27T14:59:49Z
7737, Fixed #27631 -- Prevented execution of unsupported transactional DDL statements.,"This is a follow up of the discussion in #7694 with @adamchainz.

Executing a DDL statement during a transaction on backends that don't support it silently commits, leaving `atomic()` in an incoherent state.

While `schema_editor.execute()` could technically be used to execute DML statements such usage should be uncommon as these are usually performed through the ORM. In other cases `schema_editor.connection.execute()` can be used to circumvent this check.",charettes,None,2016-12-24T03:46:25Z,2016-12-29T00:44:46Z
7736,Explain the $ prefix for the shell.,"A friend of mine began teaching herself Python (and Django) today, and had a real struggle when she got to the first command that the tutorial required her to type into a shell that began with a $ character.

She is on Windows, and there was nothing to indicate to her that `$` meant ""type this on a command prompt"" as opposed to ""type the $ as the first character of this command"". The syntax highlighting has very little meaning to a fresh face. It makes sense to a seasoned face who has spent time on a Linux terminal, but not someone trying to use the documentation to learn this stuff for the first time.

Therefore, I would like to add a note explaining this, as I have done in this pull request.",lukesneeringer,None,2016-12-24T02:20:22Z,2017-02-09T15:56:38Z
7735,Used @cached_property in RawQuerySet.,Noticed whilst reading to review #7727. `cached_property` implements exactly the pattern that was in use.,adamchainz,None,2016-12-23T14:43:10Z,2016-12-23T15:12:49Z
7734,Refs #18823 -- Fixed field name in an m2m manager error message.,(extracted from https://github.com/django/django/pull/7098),timgraham,None,2016-12-23T14:35:18Z,2016-12-23T14:57:06Z
7733,Fixed #27626 -- Moved STATIC_URL and MEDIA_URL validation to system check,[Ticket](https://code.djangoproject.com/ticket/27626),adamchainz,None,2016-12-22T23:09:48Z,2016-12-23T15:55:01Z
7732,Fixes #27625 -- Made LazySettings cache attributes in its own __dict__,[Ticket](https://code.djangoproject.com/ticket/27625),adamchainz,None,2016-12-22T22:54:54Z,2016-12-23T15:58:07Z
7731,Improved tests for SECURE_PROXY_SSL_HEADER,"The rest of the file verifies that `override_settings` is working, so why not use it?",adamchainz,None,2016-12-22T22:21:57Z,2016-12-22T23:52:51Z
7730,Refs #27624 -- Made many attributes of Query immutable,"[Ticket](https://code.djangoproject.com/ticket/27624)

* Made `Query.tables` a `tuple`
* Made `Query.order_by` a `tuple`
* Made `Query.group_by` a `tuple`
* Made `Query.distinct_fields` always a `tuple` (`add_distinct_fields` was already making it one)
* Made `Query.values_select` a `tuple`
* Removed `Query.add_select`, just use `set_select`
* Made `Query.select` a `tuple`
* Made `Query.deferred_loading[0]` a `frozenset`",adamchainz,None,2016-12-22T22:18:44Z,2017-03-08T14:29:19Z
7729,Refs #27624 -- Made QuerySet._prefetch_related_lookups a tuple,"An easy change to make it immutable.

[Ticket](https://code.djangoproject.com/ticket/27624).",adamchainz,None,2016-12-22T22:12:15Z,2016-12-23T14:58:22Z
7728,Documented the 'regex' arg to url(),Noticed it was missing during the [mailing list discussion about flags](https://groups.google.com/forum/#!topic/django-developers/Y51CKkqq6Ng). Learnt for myself that `gettext_lazy` support was added in django 1.4 (896e3c69c7).,adamchainz,None,2016-12-22T20:40:39Z,2016-12-23T00:16:27Z
7727,"Fixed #27718 -- Added QuerySet.union(), intersection(), difference().",https://code.djangoproject.com/ticket/27718,apollo13,None,2016-12-22T20:25:03Z,2017-01-14T13:32:07Z
7726,Fixed #26543 -- Fixed admin changelist's redirect after a failed action.,"Fixed [#26543](https://code.djangoproject.com/ticket/26543) Changelist actions don't redirect after failed action resulting in possible ERR_CACHE_MISS in next steps.

This problem occurs every time that Django admin return again to the page after a failed POST . In other words, every time that the validation of ActionForm is failed. To solve this problem, a redirect will be made every time that Changelist action fail by ActionForm's validation error.  ",aaboffill,None,2016-12-22T19:30:30Z,2016-12-23T22:52:02Z
7725,Refs #26487 -- Removed unneeded ehlo() calls in SMTP backend.,"starttls(), login(), and other connection methods already call
the method as needed.

https://code.djangoproject.com/ticket/26487",timgraham,None,2016-12-22T14:47:21Z,2016-12-23T14:22:24Z
7724,Fixed #24423 -- Reorganized i18n tag tests.,"Piggy-backing off of work done in the closed PR #7363:

* Moved all tag tests into syntax_tests/i18n:
```
├── __init__.py
├── base.py
├── test_blocktrans.py
├── test_get_available_languages.py
├── test_get_language_info.py
├── test_get_language_info_list.py
├── test_trans.py
└── test_underscore_syntax.py
```",accraze,None,2016-12-22T02:01:41Z,2017-01-06T15:33:07Z
7723,Fixed #26369 -- Default formfield callback override,https://code.djangoproject.com/ticket/26369,jpic,None,2016-12-22T01:50:23Z,2017-04-16T22:20:17Z
7722,Moved modeladmin check tests to a separate file.,todo: there also also ModelAdmin check tests in tests/admin_checks. Probably that's a more discoverable location,timgraham,None,2016-12-21T22:27:15Z,2016-12-21T23:50:45Z
7721,Fixed #27615 -- Used timedeltas as arguments to Oracle database driver.,"Ticket [#27615](https://code.djangoproject.com/ticket/27615).
Used `datetime.timedeltas` as a arguments to the Oracle database driver.
Removed `DatabaseFeatures.driver_supports_timedeltas`.",felixxm,None,2016-12-20T20:30:07Z,2016-12-29T20:49:18Z
7720,BugFix: --database option not works,"Because of system checks before loading the module
So, we need to disable system checks as I committed.",salehi,None,2016-12-20T02:38:55Z,2016-12-21T22:25:16Z
7719,BugFix: --database not working due to systemchecks,#NAME?,salehi,None,2016-12-20T02:29:56Z,2016-12-20T02:40:43Z
7718,Added a test for NullBooleanField.formfield().,,timgraham,None,2016-12-20T01:01:36Z,2016-12-20T13:22:06Z
7717,Refs #19884 -- Removed DatabaseFeatures.can_introspect_max_length.,"Unused (always True) after 3e43d24.

From the official [3rd-party-database-backends](https://docs.djangoproject.com/en/1.10/ref/databases/#using-a-3rd-party-database-backend) only [IBM DB2](https://github.com/ibmdb/python-ibmdb) and [Firebird](https://github.com/maxirobaina/django-firebird) are using `can_introspect_max_length`. I created appropriate PRs (IBM DB2 - [PR](https://github.com/ibmdb/python-ibmdb/issues/252), Firebird - [PR](https://github.com/maxirobaina/django-firebird/issues/67)).",felixxm,None,2016-12-19T20:42:56Z,2016-12-19T21:16:12Z
7716,Fixed qunit tests (coverage still missing).,,apollo13,None,2016-12-19T17:38:25Z,2016-12-19T17:45:38Z
7715,Updated to QUnit 2.0.1.,,timgraham,None,2016-12-19T16:45:35Z,2016-12-19T17:43:48Z
7714,Refs #25484 -- Removed incorrect unquoting in {% static %}.,As discussed in the comments of https://github.com/django/django/pull/7494.,timgraham,None,2016-12-19T16:08:17Z,2016-12-19T21:41:40Z
7713,Fixed #27612 - Added a check that URL instance namespaces are unique across a project,See https://code.djangoproject.com/ticket/27612 for details,andrewnester,None,2016-12-19T12:36:49Z,2016-12-21T21:54:16Z
7712,Refs #19884 -- Introspect CharFields lengths correctly on Oracle.,Ticket [#19884](https://code.djangoproject.com/ticket/19884).,felixxm,None,2016-12-19T11:31:29Z,2016-12-19T21:00:17Z
7711,Fixed #26478 -- Prohibited quotes and vertical bar in {% for %} unpacking variable names.,This fixes the issue in the simplest way. See discussion on the ticket.,timmartin,None,2016-12-18T15:01:20Z,2016-12-30T15:17:29Z
7710,Fixed #27377 -- Clarify that prepopulated_fields doesn't work with On…,"…eToOneField

https://code.djangoproject.com/ticket/27377",HenryDangPRG,None,2016-12-18T04:45:13Z,2016-12-19T13:33:47Z
7709,Fixed #25492 -- Checked foreign key constraints before dropping them.,,charettes,None,2016-12-17T20:19:58Z,2016-12-24T19:05:26Z
7708,Fixed #27606 -- Prevent HttpResponseRedirectBase erroring in formatting,"The `__str__` method of HttpResponseRedirectBase depends on self._headers
being set, which happens in the initialization of the base class.
This would otherwise error when attempting to format a response that
was given unsafe redirect schemes.",jleclanche,None,2016-12-17T15:39:42Z,2016-12-19T15:05:36Z
7707,"Made cosmetic edits to the ""What happens when you save?"" docs.",,timgraham,None,2016-12-17T15:33:09Z,2016-12-17T17:06:38Z
7706,Removed a SpatiaLite workaround in GISFunctionsTests.test_asgeojson by using assertJSONEqual.,,sir-sigurd,None,2016-12-17T09:55:10Z,2016-12-17T13:23:47Z
7705,Removed some unneeded SpatiaLite workarounds in GIS tests.,,sir-sigurd,None,2016-12-17T09:47:33Z,2016-12-17T13:31:39Z
7704,Removed unneeded Oracle workaround in GISFunctionsTests.test_num_points.,,sir-sigurd,None,2016-12-17T05:31:16Z,2017-03-14T04:54:57Z
7703,Refs #25550 -- Removed a deprecated reverse assignment example in docs.,Inspired by https://github.com/django/django/pull/6958.,timgraham,None,2016-12-16T22:55:56Z,2016-12-17T13:58:57Z
7702,Refs #16859 -- Disable an useless security check,"If CSRF_USE_SESSIONS is used, there is no need to check that CSRF_COOKIE_SECURE is True.

(As requested by @timgraham in #5600)
",raphaelm,None,2016-12-16T20:55:23Z,2016-12-17T14:59:48Z
7701,Removed ignored groups in urlpattern reversing.,https://groups.google.com/d/topic/django-developers/Y51CKkqq6Ng/discussion,timgraham,None,2016-12-16T19:03:28Z,2016-12-22T00:02:35Z
7700,Fixed #27611 -- Doc'd that CSRF_COOKIE_HTTPONLY setting offers no security.,https://code.djangoproject.com/ticket/27611,timgraham,None,2016-12-16T16:46:22Z,2016-12-19T22:56:58Z
7699,Made NumPoints raise TypeError on MySQL when it's used on the field other than LineStringField.,Not sure if it worth ticket creation.,sir-sigurd,None,2016-12-16T03:40:25Z,2016-12-16T16:00:21Z
7698,Refs #27576 -- Fixed running Django's tests if GDAL isn't installed.,,timgraham,None,2016-12-15T22:16:02Z,2016-12-15T22:59:42Z
7697,Corrected docs claiming AsGML is supported on Oracle.,,timgraham,None,2016-12-15T17:49:58Z,2016-12-15T18:01:00Z
7696,Improved testing of num_seg kwarg of BoundingCircle GIS function.,,sir-sigurd,None,2016-12-15T17:18:50Z,2016-12-15T17:40:55Z
7695,Fixed #27607 -- Added Oracle support for AsGML GIS function.,https://code.djangoproject.com/ticket/27607,sir-sigurd,None,2016-12-15T17:00:37Z,2016-12-15T19:00:08Z
7694,Refs #27558 -- Isolated a MySQL indexes test.,MySQL schema changes must be done in TransactionTestCase. (correct?),timgraham,None,2016-12-15T16:19:14Z,2016-12-15T18:31:08Z
7693,Fixed #27605 -- Added 'POST_APP_DIRS' TEMPLATES option.,"Allowed searching some directories after app dirs.

https://code.djangoproject.com/ticket/27605",timgraham,None,2016-12-15T13:29:50Z,2016-12-20T22:27:32Z
7692,Used assertRaisesMessage() in template_backends tests.,,timgraham,None,2016-12-15T12:31:17Z,2016-12-15T14:32:46Z
7691,Refactor words function in lorem ipsum,I think this change no needed ticket. It's very simple and I'm glade to offer this commit:),Imperat,None,2016-12-14T22:03:12Z,2016-12-14T22:36:34Z
7690,Add Prefetch import example to first occurrence and Prefetch section in QuerySet docs.,"Currently, there is not an example of how to import `Prefetch`. I've added it to the first occurrence of it being used on the page, and to its own section later in the document.",perry,None,2016-12-14T16:55:34Z,2016-12-14T18:54:29Z
7689,Fixed #27599 -- Fixed Field.__str__() crash for fields not attached to models.,https://code.djangoproject.com/ticket/27599,ellmetha,None,2016-12-14T16:00:03Z,2016-12-14T19:04:26Z
7688,Make it possible to set a base href for admin,"To be able to use the base href it needs to be above all the assets / css declarations in the base html. 

This always need to be above the css declarations.

https://webdesign.tutsplus.com/articles/quick-tip-set-relative-urls-with-the-base-tag--cms-21399",mrgix,None,2016-12-14T15:15:16Z,2016-12-22T00:22:10Z
7687,Fixed #27602 -- Added Oracle support for BoundingCircle GIS function.,https://code.djangoproject.com/ticket/27602,sir-sigurd,None,2016-12-14T14:03:48Z,2016-12-15T19:52:57Z
7686,Fixed #27584 -- Fixed display of render time template errors.,https://code.djangoproject.com/ticket/27584,prestontimmons,None,2016-12-14T02:38:04Z,2016-12-20T15:54:24Z
7685,Fixed #27598 -- Allowed specifying directories for a filesystem template loader.,https://code.djangoproject.com/ticket/27598#ticket,timgraham,None,2016-12-13T21:53:51Z,2016-12-14T15:55:29Z
7684,Fixed #27594 -- Fixed select_related() with reverse self-referential OneToOneField.,https://code.djangoproject.com/ticket/27594,timgraham,None,2016-12-13T16:07:54Z,2016-12-14T12:56:15Z
7683,Fixed #27533 -- Fixed inspectdb crash if a unique constraint uses an unsupported type.,https://code.djangoproject.com/ticket/27533,sihaelov,None,2016-12-13T14:16:54Z,2018-03-21T17:36:05Z
7682,Fixed #27176 -- Raised an exception for reentrant calls to apps.populate,"Ticket: https://code.djangoproject.com/ticket/27176

",francoisfreitag,None,2016-12-13T03:28:06Z,2017-02-27T05:15:22Z
7681,Fixed #27600 -- Improved the way the 'shell' command reads python code from stdin.,"Fun automation with standard input pipes::
```
$ ./manage.py shell <<EOF
> import pprint
> import json
> pprint.pprint(json.dumps('fun'))
> EOF
 'fun'
```
https://code.djangoproject.com/ticket/27600",jpic,None,2016-12-13T00:40:32Z,2016-12-22T01:00:43Z
7680,docs about admin's list_display short_description,,jerojasro,None,2016-12-12T06:00:29Z,2016-12-15T20:59:10Z
7679,✍️ Change wording on default response page,"Changes the wording of the default response page to be a little friendlier.

This weekend I was coaching at a Django Girls workshop. The point in the workshop at which this page comes up comes after students actually have done quite a lot of work and it's a pretty needlessly negative message to receive. ",mermop,None,2016-12-11T12:53:10Z,2016-12-13T18:49:12Z
7678,Fixed #27589 -- Added managed triggers for SearchVectorField.,"This is a significantly enhanced version of `django.contrib.postgresql.search.SearchVectorField` with automatically generated and managed database trigger.

Remaining todo's:

- [ ] documentation
- [x] only update the `tsvector` column if the fields on which it depends have changed (need to add a conditional in the pl/pgsql function check if relevant columns have changed)
- [x] instead of hard coding language in the field definition, also support column name

There are probably a lot of other things that will need to be done. Please provide feedback, thanks!

https://code.djangoproject.com/ticket/27589",eukreign,None,2016-12-11T02:14:52Z,2016-12-13T18:37:46Z
7677,Fixed #27498 -- Added missing CAST AS NUMERIC in Decimal comparison,Ensured Decimal value is always CAST AS NUMERIC in comparison on SQLite.,inglesp,None,2016-12-10T18:09:02Z,2016-12-24T16:28:34Z
7676,Changed test to use TemporaryFile context manager to close file after use.,"Fixes warning when running tests with -Wall:

ResourceWarning: unclosed file <_io.BufferedRandom name=...>
  testMethod()",jdufresne,None,2016-12-10T17:57:17Z,2016-12-12T17:41:38Z
7675,Fixed #27258 -- Prohibited django.Template.render() with non-dict context.,https://code.djangoproject.com/ticket/27258,reficul31,None,2016-12-10T14:07:39Z,2016-12-28T21:03:21Z
7674,Fixed #26788 -- Fixed crash that occurs when update geometry from the another one.,https://code.djangoproject.com/ticket/26788,sir-sigurd,None,2016-12-10T09:24:33Z,2017-04-10T17:28:04Z
7673,Fixed #27489 -- Renamed permission codenames/names upon model renaming.,https://code.djangoproject.com/ticket/27489,ellmetha,None,2016-12-09T23:10:49Z,2018-07-21T22:06:13Z
7672,Simplified GIS test by removing unneeded Oracle branch.,,sir-sigurd,None,2016-12-09T19:40:09Z,2016-12-15T14:32:12Z
7671,Fixed #27418 -- Fixed occasional missing plural forms in JavaScriptCatalog.,"This bug occurs when you have a missing translation in a language with more than two plural forms. In this case, you have a fallback to English and depending on the order in which the catalog is traversed in the for-loop you might end up with an msgid of a fallback English two-plural translation. When that happens, all translations will be reduced to two plural forms.

The unit test only fails about 50% of the time when running against a Django version without the fix due to the bug's random nature.

https://code.djangoproject.com/ticket/27418",wkornewald,None,2016-12-09T15:03:07Z,2017-05-19T09:37:54Z
7670,"Fixed #25605 -- Made GIS DB functions accept geometric expressions, not only values in all positions.",https://code.djangoproject.com/ticket/25605,sir-sigurd,None,2016-12-09T09:44:39Z,2017-04-02T08:55:01Z
7669,Fixed #27583 -- MultiValueDict.getlist crash when values for key is None.,[Ticket](https://code.djangoproject.com/ticket/27583).,felixxm,None,2016-12-09T09:24:51Z,2016-12-09T20:31:52Z
7668,Fixed #27582 -- Allowed HStoreField to store null values.,https://code.djangoproject.com/ticket/27582,dhoffman34,None,2016-12-09T00:42:19Z,2019-08-01T15:48:02Z
7667,Imported specific models in a few tests that didn't.,,timgraham,None,2016-12-08T16:16:25Z,2016-12-08T16:32:18Z
7666,"#27537 -- Added options IP, Port for runserver in settings.py","./manage.py runserver
now checks project_dir/settings.py for RUNSERVER_IP and
RUNSERVER_PORT to serve.

./manage.py runserver IP:PORT
runs as earlier

https://code.djangoproject.com/ticket/27537

Signed-off-by: Kamalavelan <sskamalavelan@gmail.com>",demonshreder,None,2016-12-08T13:59:59Z,2016-12-12T10:39:34Z
7665,Add dot to BaseFormView,"To keep consistency. Really minor thing, but it was hurting me :)",Collederas,None,2016-12-08T12:31:23Z,2016-12-08T12:39:15Z
7664,Simplified Transform GIS function by setting output_field.,,sir-sigurd,None,2016-12-08T12:23:03Z,2016-12-08T14:48:33Z
7663,Fixed #9435 -- Redirected on empty path_info when APPEND_SLASH is set.,"This fixes the bug #6978 was intended to fix: namely, that `APPEND_SLASH` does not cause a trailing slash to be appended to the root URL of a Django project that is at a sub-path of its domain. Tests are included. However, I am not certain that this will not cause problems when an `HttpRequest` object is created that is not a `WSGIRequest`, and when the common middleware is used. Will the line `full_path = '' if request.path_info_is_empty else request.get_full_path()` cause problems in that case, since `request` will be of a different class than `WSGIRequest` and therefore will not have `path_info_is_empty`? How would I add a test for this case?

https://code.djangoproject.com/ticket/9435",frishberg,None,2016-12-07T21:00:12Z,2018-08-23T15:38:28Z
7662,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,https://code.djangoproject.com/ticket/27579,timgraham,None,2016-12-06T19:26:29Z,2016-12-08T08:46:27Z
7661,Fixed #27576 -- Made gis.db.models.fields.get_srid_info to fallback to GDAL if SpatialRefSys is unavailable.,https://code.djangoproject.com/ticket/27576,sir-sigurd,None,2016-12-06T09:08:02Z,2016-12-15T21:36:18Z
7660,Fixed #25938 -- Factored out common base class for GEOSBase and GDALBase.,https://code.djangoproject.com/ticket/25938,sir-sigurd,None,2016-12-06T06:52:49Z,2016-12-15T21:59:08Z
7659,Removed test workarounds for PROJ.4 < 4.7.0.,PROJ.4 4.7.0 was released on 25 Sep 2009 and is available in Ubuntu Precise.,sir-sigurd,None,2016-12-05T16:42:39Z,2016-12-05T21:23:17Z
7658,Fixed GIS DB functions table in docs.,"Cells in the first column must contain some text.
http://docutils.sourceforge.net/docs/dev/rst/problems.html",sir-sigurd,None,2016-12-05T15:40:05Z,2016-12-05T22:29:31Z
7657,Refs #27324 -- Optimized DatabaseIntrospection.get_constraints() for foreign keys on Oracle.,I propose to remove unnecessary inner join to `user_constraints rcons`.,felixxm,None,2016-12-05T15:23:43Z,2016-12-06T00:12:37Z
7656,Fixed #27567 -- Avoid a crash the exception view when the user is unavailable.,"When the database is down it is not possible to get information about
the currently logged in user. This commit catches the error and state
that the user could not be retrieved.

https://code.djangoproject.com/ticket/27567",pelme,None,2016-12-03T18:59:39Z,2016-12-06T17:49:48Z
7655,Fixed #27571 -- Conditionally add TEST_DATABASE_PREFIX to db name,https://code.djangoproject.com/ticket/27571,alexander-alvarez,None,2016-12-03T00:05:43Z,2016-12-07T03:23:51Z
7654,Fixed #27566 -- Clarified overriding ModelAdmin.save_model()/delete_model() docs.,Documentation update for `ModelAdmin`,truthdoug,None,2016-12-02T19:12:31Z,2016-12-08T13:22:31Z
7653,Refs #27025 -- Fixed Python 3.6 deprecation warning for empty model super() calls.,https://bugs.python.org/issue23722,timgraham,None,2016-12-02T16:09:07Z,2016-12-06T00:37:23Z
7652,Fixed #27472 -- Fixed various crashes related to empty points.,https://code.djangoproject.com/ticket/27472,sir-sigurd,None,2016-12-02T08:55:55Z,2016-12-08T15:50:49Z
7651,"Fixed #27563 -- Moved ""apply limit_choices_to"" code from BaseModelForm to fields_for_model().",<https://code.djangoproject.com/ticket/27563>,jdufresne,None,2016-12-02T04:37:54Z,2016-12-02T16:40:25Z
7650,"Fixed #27561 -- Added Oracle support for binary ""or"" operator.",,felixxm,None,2016-12-01T21:50:16Z,2016-12-02T21:59:39Z
7649,Fixed #25753 -- Made get_format() cache the formats from Django settings,I took and polished Jaap's patch from #5655.,claudep,None,2016-12-01T20:49:20Z,2016-12-21T19:36:57Z
7648,Refs #27558 -- Added test for no index on ForeignKey for MySQL.,"The refactor in 3f76d1402dac9c2993d588f996dc1c331edbc9a7 (#26889) inadvertently fixed the creation of redundant indexes, however there was no test coverage until now.",edmorley,None,2016-12-01T16:10:02Z,2016-12-16T19:18:16Z
7647,[1.10.x] Refs #27558 -- Prevented redundant index on InnoDB ForeignKey.,"The MySQL backend overrides _field_should_be_indexed() so that it skips index creation for ForeignKeys when using InnoDB.

This was fixed on master inadvertently in #6917, via a more invasive change that isn't suitable for backporting to the `1.10.x` branch. The test here is being added to master too, in #7648.",edmorley,None,2016-12-01T15:59:46Z,2016-12-01T18:14:16Z
7646,"Fixed typo in contrib/{admin,auth}/locale/de/","Hi!
I’m not sure how translations for Django with Transifex work.
Maybe someone could apply this fix there or add me to contributors.

Daniel",vlt,None,2016-12-01T13:57:37Z,2016-12-01T14:24:34Z
7645,Fixed #26543 -- Fixed admin changelist's redirect after a failed action.,"Fixed [#26543](https://code.djangoproject.com/ticket/26543) Changelist actions don't redirect after failed action resulting in possible ERR_CACHE_MISS in next steps.

This problem occurs every time that Django admin return again to the page after a failed POST . In other words, every time that the validation of ActionForm is failed. To solve this situation I added the current validations to the JavaScript level, and the rest works fine.",aaboffill,None,2016-11-30T21:06:15Z,2016-12-22T13:53:24Z
7644,Fixed #27119 -- Cached BaseFormSet.management_form property,Thanks Karol Sztajerwald for the initial patch.,claudep,None,2016-11-30T18:37:08Z,2016-12-01T19:17:25Z
7643,Moved csrf_tests views to a separate file.,,timgraham,None,2016-11-30T17:35:09Z,2016-12-01T00:39:34Z
7642,Refs #27358 -- Fixed system check crash with an empty FileField.upload_to.,"This is a fix for `FileField` where the default use case always throws index out of range error.

Previous pull request related to this: https://github.com/django/django/pull/7621",eukreign,None,2016-11-30T14:19:08Z,2016-11-30T15:11:26Z
7641,Added my bio,,patjouk,None,2016-11-30T14:03:06Z,2016-11-30T15:24:08Z
7640,Fixed #27557 -- Casted GEOSGeometry only when necessary,Thanks Pete Flugstad for the report.,claudep,None,2016-11-30T11:35:31Z,2016-11-30T16:53:02Z
7639,Removed unneeded GeoAggregate.convert_value() and convert_geom() method of GIS backends.,,sir-sigurd,None,2016-11-30T10:54:15Z,2016-11-30T15:56:09Z
7638,Refs #24245 -- Added introspection for database defaults in the oracle backend.,Ticket [24245](https://code.djangoproject.com/ticket/24245). I added missing introspection for database defaults in the oracle backend.,felixxm,None,2016-11-30T09:13:09Z,2016-11-30T16:21:57Z
7637,Fixed #27556 -- Added Oracle support for IsValid function and isvalid lookup.,https://code.djangoproject.com/ticket/27556,sir-sigurd,None,2016-11-30T09:01:34Z,2016-11-30T16:22:56Z
7636,Fixed #27555 -- Removed django.utils.functional.lazy_property,[Ticket](https://code.djangoproject.com/ticket/27555),adamchainz,None,2016-11-29T21:55:25Z,2016-11-30T00:01:12Z
7635,Added my bio,,adamchainz,None,2016-11-29T20:05:14Z,2016-11-29T22:42:30Z
7634,Fixed #27542 -- Made Client.force_login() skip auth backends missing get_user().,https://code.djangoproject.com/ticket/27542,desecho,None,2016-11-29T19:34:48Z,2016-12-01T15:26:53Z
7633,Fixed #27552 -- Added docs/tests for GEOSGeometry.normalize().,https://code.djangoproject.com/ticket/27552,sir-sigurd,None,2016-11-29T19:06:00Z,2016-11-30T12:39:03Z
7632,Simplified union GIS tests.,,sir-sigurd,None,2016-11-29T18:34:02Z,2016-11-30T12:49:06Z
7631,Enabled GeoQuerySetTest.test_unionagg on Oracle; refs #23504.,It's not clear when it started to work.,sir-sigurd,None,2016-11-29T13:05:30Z,2016-11-29T14:06:17Z
7630,Fixed #27544 - Fixed error occurred when updating date field with F() expression on SQLite,"See https://code.djangoproject.com/ticket/27544#trac-add-comment for details.
Thanks @tadgh for provided test case to reproduce the issue.",andrewnester,None,2016-11-29T10:40:13Z,2016-11-29T17:23:45Z
7629,Fixed #27546 -- Replaced hardcoded class names in misc. __repr__() methods.,https://code.djangoproject.com/ticket/27546,Keda87,None,2016-11-29T06:01:05Z,2016-12-01T13:39:08Z
7628,Replaced RawSQL with Cast in Coalesce doc example.,,charettes,None,2016-11-29T05:23:09Z,2016-11-30T17:08:26Z
7627,docs: clarify group name in Group docs,,nikolas,None,2016-11-28T21:16:33Z,2016-11-28T21:41:37Z
7626,docs: typo fix,"""is a one"" -> ""is a user""",nikolas,None,2016-11-28T21:08:14Z,2016-11-28T21:40:43Z
7625,fix typo in zh_Hans translation,,looching,None,2016-11-28T03:59:46Z,2016-11-28T04:07:34Z
7624,Fixed #27402 -- Fixed incorrect LocaleMiddleware redirects with prefix_default_language=False.,"https://code.djangoproject.com/ticket/27402

Just added some documentation over #7483 by @urbaniak.",francoisfreitag,None,2016-11-27T19:45:49Z,2016-11-29T18:42:43Z
7623,Fixed #27518 -- Avoided password reset link leak on password reset confirmation page.,"On password reset confirm page, if the user has included some links to external sources, the HTTP header `Referer` sent to these sources will contain the full password reset URL.
That can allow external systems to reset password in behalf of the concerned user, if he doesn't
reset his password immediately after landing on password reset confirm page.
To avoid that, the user is redirected to the same page, but we remove the token and save it in the
user session instead.
The issue and the solution are detailed in [related ticket](https://code.djangoproject.com/ticket/27518).",romgar,None,2016-11-27T18:12:56Z,2018-05-12T16:10:27Z
7622,Fixed #25569 -- Improved error message for select_related,"Improved the error message when a select_related call is made with a
reverse relational field. If there is at least one reverse relational
field amongst the fields given to select_related, the error message is
improved.",vincent-prz,None,2016-11-26T23:06:00Z,2016-11-29T14:35:19Z
7621,Fixed #27358 -- Added a system check for FileField upload_to starting with a slash.,"https://code.djangoproject.com/ticket/27358

Made fixes for https://github.com/django/django/pull/7442


",HenryDangPRG,None,2016-11-26T19:18:22Z,2016-11-29T21:19:02Z
7620,Fixed #26632 -- Skip admin list_display_links checks if get_list_display is defined.,,desecho,None,2016-11-25T23:02:27Z,2016-12-22T14:55:10Z
7619,"Removed the importance of ""core developers"" in triaging tickets, etc.",See also https://github.com/django/code.djangoproject.com/issues/74 which explains that core devs aren't easily identified on Trac anymore.,timgraham,None,2016-11-25T19:05:09Z,2016-12-22T13:11:11Z
7618,Fixed #27533 -- Fixed inspectdb crashing on unique index with Coalesce.,https://code.djangoproject.com/ticket/27533,weima,None,2016-11-25T00:16:54Z,2016-11-29T19:13:46Z
7617,Refs #16682 -- Used signal.SIGINT instead of the signal number.,Small cleanup.,felixxm,None,2016-11-24T21:58:07Z,2016-11-25T12:07:57Z
7616,Remove optional `gdal-bin` dependency listing.,https://code.djangoproject.com/ticket/27509,decentral1se,None,2016-11-24T18:58:15Z,2016-11-25T12:19:10Z
7615,Fixed #11964 -- Added support for check constraints in model Meta.,https://code.djangoproject.com/ticket/11964,Ian-Foote,None,2016-11-24T18:24:58Z,2018-07-11T10:37:22Z
7614,Stable/1.10.x flatpages sitemap url,"Hi!

i use https://docs.djangoproject.com/en/1.10/ref/contrib/flatpages/#installation
Follow step 1,2,3

I add:
url(r'^pages/', include('django.contrib.flatpages.urls')),
to base urlpatterns

And add test page in admin:
<img width=""876"" alt=""2016-11-25 0 01 00"" src=""https://cloud.githubusercontent.com/assets/2041192/20606603/a04992d0-b2a4-11e6-8761-448248fcd172.png"">


In sitemap url http://mysite.ru/about/, but i need http://mysite.ru/pages/about/
<img width=""437"" alt=""2016-11-25 0 01 39"" src=""https://cloud.githubusercontent.com/assets/2041192/20606604/a04b332e-b2a4-11e6-910e-8ea5b4134bde.png"">

How to fix?
Set url /pages/about/ for test page in admin?

Sorry for my English!
Please reply! Thanks!",andreyugit,None,2016-11-24T17:18:39Z,2016-11-25T12:06:36Z
7613,Fixed docstring for sqlite3.DatabaseOperations.bulk_batch_size.,,blueyed,None,2016-11-24T13:19:37Z,2016-11-25T12:52:09Z
7612,Increased number of iterations for pbkdf2_sha256.,"Increased number of iterations for pbkdf2_sha256. 
OWASP recommendation (double number of iterations every 2 years)",smiks,None,2016-11-24T12:43:09Z,2016-11-24T14:15:04Z
7611,Fixed #26608 -- Add support for OVER-clause (window expressions).,"https://code.djangoproject.com/ticket/26608

Thanks to Jamie Cockburn for initial patch.",atombrella,None,2016-11-24T10:16:06Z,2017-09-18T18:01:06Z
7610,Fixed #27480 -- Added cache.touch() method.,Here I provide a naive implementation in BaseCache. I'd also like to contribute more optimized versions in subclasses.,niconoe,None,2016-11-24T09:51:48Z,2018-04-27T21:48:35Z
7609,Update customizing.txt AbstractUser import path,,getup8,None,2016-11-24T06:43:48Z,2016-11-24T10:41:21Z
7608,Fixed #27531 -- Delete confirmation page overrides extrahead,Refs [ticket 27531](https://code.djangoproject.com/ticket/27531),elky,None,2016-11-24T02:52:15Z,2016-11-24T11:40:13Z
7607,Fixed #27321 -- Added detection for table case name sensitivity on MySQL,"It depends on the value of the `lower_case_table_names` setting, plus the case sensitivity of the filesystem that the table is on.",adamchainz,None,2016-11-23T22:56:26Z,2016-11-29T19:39:19Z
7606,Improved the way Model.save skips the auto_field,"Identity comparison is quicker than `isinstance`, plus it avoids coupling between `Model` and `AutoField`.",adamchainz,None,2016-11-23T22:41:06Z,2016-11-24T11:01:36Z
7605,Removed Field.auto_creation_counter,Added in 9c52d56f6f8a9cdafb231adf9f4110473099c9b5 but has never been accessed outside of the code that decrements it.,adamchainz,None,2016-11-23T22:34:50Z,2016-11-23T23:14:01Z
7604,Fixed #26067 -- Added support for ordering ArrayAgg and StringAgg.,"Original PR can be found [here](https://github.com/django/django/pull/6886).

Thanks again for the useful discussion!

I processed all of your comments.

Most notable changes are:
- exposure of ordering expressions via get_source_expressions and set_source_expressions. This required some further changes, e.g. overriding `get_source_fields`. This function is used to determine the return type of the expression so this should not include expressions which are used for ordering (these expressions do not affect return value/type).
- support for multiple orderings
- support for string-based specification of ordering in both directions, e.g. similar to `order_by('field')` and `order_by('-field')`

Happy to hear what you guys think!",florisdenhengst,None,2016-11-23T22:19:07Z,2018-06-29T00:52:41Z
7603,Fixed #27532 -- Deprecated Model._meta.has_auto_field,No need for it to exist when `bool(model._meta.auto_field)` serves the same purpose.,adamchainz,None,2016-11-23T22:04:49Z,2016-11-25T18:25:17Z
7602,Fixed breadcrumb overriding in changelist and changeform templates.,"Conditional block overriding in Django does not work, as is indicated by these threads below:
https://code.djangoproject.com/ticket/10975#comment:5
http://stackoverflow.com/questions/12088222/calling-block-inside-an-if-condition-django-template
http://stackoverflow.com/questions/942797/why-cant-i-nest-a-block-tag-inside-an-if-tag

This PR is to fix admin change list and change form templates that are having above problem.",wlwg,None,2016-11-23T21:53:39Z,2016-12-22T20:47:29Z
7601,Tried to remove ambiguity in docs/topics/signals.txt.,,vlt,None,2016-11-23T19:07:46Z,2016-11-24T10:50:39Z
7600,Fixed #27473 -- Enabled Extract for DurationField.,"https://code.djangoproject.com/ticket/27473
",blueyed,None,2016-11-23T15:39:36Z,2017-06-28T15:24:33Z
7599,Fixed typo in docs/topics/signals.txt.,,vlt,None,2016-11-23T09:37:29Z,2016-11-23T11:54:58Z
7598,Optimized Model instantiation a bit,"* Avoid some unnecessary attribute lookups, e.g. access signals directly rather than from module
* Alias some repeat accesses inside the method to use the slightly faster local lookups
* Use tuple to iterate remaining kwargs as it's faster to construct
* Cache `Field.get_default` to avoid running through all the logic on every call
* Use a cached list of the properties on the model class to avoid repeat `isinstance` calls",adamchainz,None,2016-11-22T19:57:03Z,2016-12-15T18:42:45Z
7597,Fixed #27524 -- Use get_user_model() instead of user instance to call class method,"Using get_user_model() instead of the user instance avoids issues when a custom user model is provided.

For example, when the user model was overridden, we were seeing errors like this on 1.8.16:

```
File ""[...snip...]/django/contrib/auth/__init__.py"", line 111, in login
    request.session[SESSION_KEY] = user._meta.pk.value_to_string(user)
AttributeError: 'MetaDict' object has no attribute 'pk'
```

Going through the object returned by get_user_model() also matches what's done in other places in the codebase (for example, in _get_user_session_key(request)).",andymartin-sch,None,2016-11-22T17:06:24Z,2016-11-22T20:15:34Z
7596,Fixed #26494 -- Keep file permissions when extracting from archive.,https://code.djangoproject.com/ticket/26494,desecho,None,2016-11-22T16:14:28Z,2016-12-06T14:00:24Z
7595,Fixed #27522 -- Fixed runserver autoreload when using staticfile's options.,"Prevent runserver exit with just the help text and no stacktrace when
runserver is called with arguments for contrib.staticfiles's runserver
in case a syntax error occurs.",ghost,None,2016-11-22T12:48:18Z,2017-01-02T14:03:05Z
7594,Added test coverage for django.contrib.sitemaps.ping_google,"As discovered whilst reporting [#27523](https://code.djangoproject.com/ticket/27523), it had [no coverage](http://djangoci.com/view/coverage/job/django-coverage/HTML_Coverage_Report/_home_jenkins_workspace_django-coverage_django_contrib_sitemaps___init___py.html).",adamchainz,None,2016-11-22T11:57:38Z,2016-11-22T23:35:40Z
7593,added example migration for setting domain in django.contrib.sites,"I'm new to Django, but I had to reviewing the source of django.contrib.sites.models before I could figure out how to set new domains using Migrations.  I added a short example in the manual, which would have helped me out a great deal.

Please let me know what you think.  If I need to make any changes don't hesitate to contact me.

-Dave",daavve,None,2016-11-22T05:48:39Z,2016-11-30T22:21:08Z
7592,Fixed #27515 -- Make AuthenticationForm use the username length from the user model,[ticket](https://code.djangoproject.com/ticket/27515),raminfp,None,2016-11-22T05:40:58Z,2016-11-26T10:44:39Z
7591,Refs #17209 -- Fixed token verification for PasswordResetConfirmView POST requests.,,apollo13,None,2016-11-21T17:53:00Z,2016-11-21T19:07:54Z
7590,fix docs: changed link to virtualenv website,"Hello.

As freenode user lantern pointed out the docs point to a parked page notice for virtualenv. I fixed that.",vlt,None,2016-11-21T15:43:52Z,2016-11-22T13:37:42Z
7589,Fixed #27666 -- Delayed model rendering in migration operations.,"As noted in a [few comments on a 1.9 backport](https://github.com/MarkusH/django/commit/6b8280e0582d778944585e966404252c4994185e) I made for testing, this reduces the migration time considerably. It removes the rendering of intermediate models where possible.",MarkusH,None,2016-11-21T15:02:11Z,2017-01-17T13:13:22Z
7588,Fixed #27517 -- Fixed charset param in SimpleTemplateResponse.__init__().,"Refs [ticket 27517](https://code.djangoproject.com/ticket/27517)

Call `HttpResponse.__init__` with keyword args.",Surgo,None,2016-11-21T11:52:28Z,2016-11-24T10:56:39Z
7587,Refs #16614 -- Made QuerySet.iterator() use server-side cursors on PostgreSQL.,"Refs [ticket 16614](https://code.djangoproject.com/ticket/16614)

Based on Josh Smeaton idea of implementing server side cursors in PostgreSQL from the iterator method and previous work by Anssi Kääriäinen and Kevin Turner.

If this PR is accepted, I will be pleased to add some lines in the release note, but I think some discussion should occur first. In particular:

- ~~`.iterator()` is called in [`_fetch_all()`](https://github.com/django/django/blob/master/django/db/models/query.py#L1077), making server-side cursors widely used.~~ Resolved, thanks to @charettes.
- Currently, query results are loaded into memory by `psycopg`. This PR transfers the resource usage from the Python worker to the database. An opt-out method seems important here, but I don't have any idea beyond (another) setting.
- In autocommit mode, the named cursors are declared as `WITH HOLD`, which ties database resources until the cursor is deleted, this could significantly increase resource consumption.

Note:
I used separate commits to change existing tests. The commit message should help reviewing the changes.
I also kept the initial patch from Anssi and Kevin untouched.",francoisfreitag,None,2016-11-21T01:47:21Z,2017-01-14T02:52:57Z
7586,Refs #26207 -- Removed references to deferred model classes from comments,Missed in [#26207](https://code.djangoproject.com/ticket/26207).,adamchainz,None,2016-11-20T18:53:15Z,2016-11-20T23:22:13Z
7585,Fixed #27437 -- Added operator class to support CITextFIeld for GinIndex with ArrayField.,https://code.djangoproject.com/ticket/27437,atombrella,None,2016-11-20T18:29:34Z,2016-11-22T18:41:55Z
7584,Fixed #27516 -- Made test client's response.json() cache the parsed JSON,[Ticket](https://code.djangoproject.com/ticket/27516),adamchainz,None,2016-11-20T18:15:17Z,2016-11-21T13:14:03Z
7583,Increased test coverage of Signal to 100%,Added and renamed tests to cover the lines not to do with Python 2 compat as seen at http://djangoci.com/view/coverage/job/django-coverage/HTML_Coverage_Report/_home_jenkins_workspace_django-coverage_django_dispatch_dispatcher_py.html,adamchainz,None,2016-11-20T18:07:51Z,2016-11-22T14:11:25Z
7582,"Fixed #27514 -- added test coverage for Model.__init__ ""Number of args"" exception",[Ticket](https://code.djangoproject.com/ticket/27514),adamchainz,None,2016-11-20T14:28:18Z,2016-11-20T18:22:00Z
7581,Fixed #27513 -- Made Signal.send/send_robust a tiny bit faster,[Ticket](https://code.djangoproject.com/ticket/27513),adamchainz,None,2016-11-20T13:38:13Z,2016-11-22T14:30:14Z
7580,Fixed #27512 -- Removed dead code path from Model.__init__,[Ticket](https://code.djangoproject.com/ticket/27512#ticket),adamchainz,None,2016-11-20T13:27:59Z,2016-11-21T00:39:32Z
7579,Fixed #27507 -- Used SchemaEditor.execute() to run deferred_sql in migrate's sync_apps().,"Associated Django Ticket: https://code.djangoproject.com/ticket/27507

This is a very simple fix for the `sync_app` method in the `migration` command that uses `editor.execute()` to execute deferred sql instead of directly using `cursor.execute()`.

There are two reasons for this:

1. This is consistent with the normal migrateable apps workflow where deferred SQL is executed using `editor.execute()`. See: [django/db/backends/base/schema.py#L91](https://github.com/django/django/blob/371adc472a2a1f09923101e3c4fda60cdff96028/django/db/backends/base/schema.py#L91)

2. When `cursor.execute()` is hard coded in `sync_app` it is not possible to do custom processing of the SQL (as could be done with a custom `DatabaseSchemaEditor.execute()`).

This pull request does not change any existing functionality and is backwards compatible but it provides a more consistent, intuitive and predictable behavior when extending `DatabaseSchemaEditor`.",eukreign,None,2016-11-18T23:00:53Z,2016-11-30T12:36:11Z
7578,Refs #27505 -- Made Paginator's errors translatable.,,toshka,None,2016-11-18T22:07:58Z,2016-12-01T13:39:48Z
7577,Fixed #27504 -- Allowed using the ORM after an error and rollback.,,marky1991,None,2016-11-18T16:01:39Z,2016-11-23T13:42:19Z
7576,Fixed #27493 -- Fix test failure with recent GDAL versions,"Test can now accomodate small precision changes in different environments.

When updating GDAL to fix this (1.11.3 -> 1.11.5). I also noticed a few other issues/warning with GeoDjango tests. Will investigate and open new tickets as required.",niconoe,None,2016-11-18T11:32:12Z,2016-11-19T15:43:31Z
7575,Refs #23811 -- Eased git bisect run usage when triaging tickets,"`git bisect` can only be run from the toplevel of the working tree. The example command would not run unless one modifies its `PYTHONPATH` to include Django's tests directory.

Unless I have missed something, the command given in [triaging tickets](https://docs.djangoproject.com/en/dev/internals/contributing/triaging-tickets/) does not run from the top directory.

This is really a small edit, I do not think a ticket is required. I will be pleased to create one if I'm wrong.",francoisfreitag,None,2016-11-18T02:53:47Z,2016-11-21T11:55:03Z
7574,correct some translations from English(en) to Chinese(zh_Hans),There are some translation mistakes in contrib/auth from English to Chinese. Correct them.,wgwang,None,2016-11-17T14:26:32Z,2016-11-17T14:31:52Z
7573,Cleaned up a test after #26207,"Now that we don't have Model subclasses for deferred queries, there's no need to complicate this test anymore.

(Recreating the PR #7570 ... I didn't know you can't reopen a per if it's been force-pushed, sorry)",ewjoachim,None,2016-11-17T14:09:30Z,2016-11-17T15:23:17Z
7572,PEP8 changes,PEP8 changes,VishvajitP,None,2016-11-17T10:16:07Z,2016-11-17T13:28:12Z
7571,Fixed #24959 -- Negative timedeltas to date interval.,"Negative `timedelta` is normalized (see [documentation](https://docs.python.org/3.6/library/datetime.html#timedelta-objects)) e.g.
```python
>>> timedelta(hours=-1)
(-1, 82800)
```
that cause incorrect behavior in `date_interval_sql`. I fixed this in MySQL and Oracle backend.
",felixxm,None,2016-11-17T10:13:15Z,2016-11-23T14:10:47Z
7570,Cleaned up a test after #26207,"Now that we don't have Model subclasses for deferred queries, there's no need to complicate this test anymore.",ewjoachim,None,2016-11-17T08:40:53Z,2016-11-17T10:39:08Z
7569,Fixed #27156 -- Made changing HttpRequest.encoding clear GET.,https://code.djangoproject.com/ticket/27156,PREM1980,None,2016-11-16T21:19:37Z,2016-11-17T17:46:42Z
7568,Fixed #27497 -- Improved support of geodetic coordinates on SpatiaLite.,https://code.djangoproject.com/ticket/27497,sir-sigurd,None,2016-11-16T17:27:48Z,2016-12-15T20:51:45Z
7567,Fixed #27499 -- Made Prefetches pickle without evaluating their QuerySet,[ticket](https://code.djangoproject.com/ticket/27499),adamchainz,None,2016-11-16T15:50:27Z,2016-11-23T17:21:14Z
7566,Added raw sql streaming example with headers to docs/howto/outputting-csv,"Example of a lightweight wrapper streaming results from raw sql
with headers.  Demonstrates adding headers in a generator function,
using datetime to format an attachment filename, and using
cursor.execute with params.",alan-hicks,None,2016-11-16T14:05:51Z,2016-12-30T11:05:27Z
7565,Refs #17235 -- Made MultiPartParser leave request.POST immutable.,https://code.djangoproject.com/ticket/17235,vinayinvicible,None,2016-11-16T13:26:28Z,2016-12-07T14:29:56Z
7564,"nit: MySQL's limits are relatively small, not reasonably small","The spirit of this sentence is that MySQL's name length limits are, in
fact, unreasonable.  I think the phrase the author was going for was
""relatively small"", not ""reasonably small"".",mgalgs,None,2016-11-15T23:44:33Z,2016-11-16T11:57:30Z
7563,Fixed #13312 -- Added a way to customize the order_by() of null fields,I prepared new PR based on [6981](https://github.com/django/django/pull/6981) due to inactivity. I also fixed test failure on Oracle and made few small requested changes.,felixxm,None,2016-11-15T20:22:51Z,2016-12-08T15:20:03Z
7562,"Fixed #27488 -- Added IsValid and MakeValid functions, and isvalid lookup on SpatiaLite.",https://code.djangoproject.com/ticket/27488,sir-sigurd,None,2016-11-15T17:01:11Z,2016-11-16T14:52:06Z
7561,Fixed #27486 -- Fixed intword/filesizeformat filters passing non-ints to gettext.,https://code.djangoproject.com/ticket/27486,timgraham,None,2016-11-15T14:35:16Z,2016-11-16T17:13:30Z
7560,Refs #27332 -- Add feature to express conditional join on queryset,"```python
QuerySet().filtered_relation('relation', alias='alias_relation', condition=Q())
```
EDIT for new API:
```python
from django.db.models import FilteredRelation
QuerySet().annotate(alias_relation=FilteredRelation('relation', condition=Q()))
```
https://code.djangoproject.com/ticket/27332

@akaariai I'm not fully satisfied with the implementation. I had to fight the ORM to make it work in my direction.
So I hope someone will be able to spot quickly the wrong choices I made, to put me back on the right path. Hopefully the foundations are good enough to improve from there.",ticosax,None,2016-11-15T14:03:51Z,2017-09-14T13:03:34Z
7559,Fixed #27482 -- Doc'd example of Case() w/ filter,"There wasn't in documentation an example of how to use Case() with filter() method. This PR adds that with a correspondent test for it.

https://code.djangoproject.com/ticket/27482",joncasdam,None,2016-11-15T11:57:58Z,2016-11-17T17:40:05Z
7558,Refs #25284 -- Removed an implicit __in lookup example from the docs.,Thanks IRC alias rpkilby for the report.,charettes,None,2016-11-15T04:36:20Z,2016-11-15T13:25:03Z
7557,Fixed #27407 -- Made Model.delete(keep_parents=True) preserve parent reverse relationships.,,charettes,None,2016-11-15T01:17:17Z,2016-11-16T01:39:03Z
7556,Removed fallback implementations for compare_digest() and pbkdf2().,"This bumps the minimum version of Python 2.7 to 2.7.8.

Our policy is, ""We highly recommend and only officially support the latest release of each series."" but we generally don't go out of our way to break compatibility with older releases. [To be discussed](https://groups.google.com/d/topic/django-developers/DQg2mYDMCNY/discussion) if this is too heavy a hand...",timgraham,None,2016-11-14T21:00:46Z,2016-11-15T15:18:53Z
7555,Refs #13312 -- Used setUpTestData for the ordering testcase.,Due to @timgraham [request](https://github.com/django/django/pull/6981#discussion_r80277416) in PR [6981](https://github.com/django/django/pull/6981). I kept the original author.,felixxm,None,2016-11-14T20:31:29Z,2016-11-15T13:20:22Z
7554,Refs #26327 -- Renamed JsonAgg to JSONBAgg.,"Thanks to Christian von Roques for the report.

I added a new flag to indicate availability of ``JSONB_AGG`` and fallback to ``json_agg`` on PostgreSQL. I tried to test locally for things highlighted in https://www.postgresql.org/docs/9.4/static/datatype-json.html#JSON-KEYS-ELEMENTS but get the same result on both 9.5 and 9.4 using ``FloatField`` with the value 1.230e-5.

Are more tests needed? Alternatively, it may be better to disallow use of this function on PostgreSQL 9.4?",atombrella,None,2016-11-14T12:30:49Z,2016-11-28T12:01:54Z
7553,Fixed #26985 -- Doc'd ForeignKey.to_field bonds,"Make explicit in the documentation the requirement for the field referenced at ForeignKey.to_field to be `unique=True`.

https://code.djangoproject.com/ticket/26985",joncasdam,None,2016-11-14T09:22:04Z,2016-11-15T16:22:03Z
7552,"Fixed #27481 -- Made SQLite backend return annotated boolean values as boolean, not integer.",https://code.djangoproject.com/ticket/27481,sir-sigurd,None,2016-11-13T17:58:54Z,2016-11-14T19:47:21Z
7551,Fixed #26822: Don't keep database clones when using keepdb option if new migrations are non applied,"When using --keepdb option, cloned databases created with --parallel option are not recreated or updated, which make them out-to-date as soon as we add a new migration in the project.
This patch forces the cloned databases to be recreated if they are out-to-date.

Second try after #6884 for issue https://code.djangoproject.com/ticket/26822",romgar,None,2016-11-13T17:49:51Z,2019-09-17T18:29:28Z
7550,Fixed #25966 -- Made get_user_model() work at import time.,"This function should make it possible to implement a get_user_model()
method that is less vulnerable to the order of apps in INSTALLED_APPS.

It breaks the invariant that models are registered in the app registry
in the order of INSTALLED_APPS at the second stage of the app loading
process. However there's no way for user code to hook at this point so
that shouldn't be an issue. If anything, it should bring the behavior
closer to what it was before Django 1.7.

Supersedes #6547",MarkusH,None,2016-11-13T14:06:22Z,2017-04-04T06:12:30Z
7549,Update tutorial05.txt,"In line 512: Numbers of Questions did not have the correct order, therefore a ""python manage.py test polls"" returned one failed test.",ghost,None,2016-11-12T22:32:48Z,2016-11-14T12:18:13Z
7548,Fixed #27313 -- Allowed overriding admin popup response template.,"Allow the admin popup response template to be overridden on a per app and per model basis, as well as via a attribute on ModelAdmin. This makes the template consistent with other admin templates such as the change form.",mscott250,None,2016-11-12T19:10:28Z,2016-12-14T23:11:26Z
7547,Dropped support for GDAL 1.7 and 1.8,,claudep,None,2016-11-12T16:08:49Z,2016-11-12T16:41:10Z
7546,Fixed #27479 -- Fixed GDALClose prototype.,https://code.djangoproject.com/ticket/27479,sir-sigurd,None,2016-11-12T12:41:17Z,2017-02-23T09:48:05Z
7545,Fixed #27463 Fix ambiguous variable flake8 warnings,,raminfp,None,2016-11-12T05:50:17Z,2016-11-15T01:09:52Z
7544,Fix #27463 ambiguous variable flake8 warnings,,raminfp,None,2016-11-12T03:22:40Z,2016-11-12T03:22:47Z
7543,Remove double `the`,,jezeniel,None,2016-11-11T17:35:13Z,2016-11-11T17:40:06Z
7542,Update docs to use 'path()' routing rather than 'url()' routing.,"Refs #7482. (Perhaps to be merged into there at a future date, but making these changes independently for now so we can get up and running on reviewing them)

This is an initial pass on the documentation for `path()` style routing.

Still need to:

* Review if there are any sections discussing ""named vs unnamed groups"" and remove or alter those as appropriate (I assume we should *only* use named groups with the new style syntax, and only need to discuss unnamed groups in the context of `path_regex?)
* Add docs for `path_regex()`. (Figure out where is most appropriate and how much depth we go into.)
* Add docs for convertors, and discussion about the convertor syntax during eg. intro and tutorial sections.

Some things that the docs changes highlighted to me that may or may not already be addressed in #7482...

* Ensure that character literals such as ""."" in a path expression are escaped when creating the URL regexs.
* I think we should simply error if a leading `^` literal or a trailing `$` literal is used in a `path()` expression. It's almost *certain* to be user error, rather than intended syntax. (The error message can suggest that a user to use an explicit `path_regex()` if they want complete control over the exact syntax.)
* We're almost never using unnamed groups now. (and eg. `view.args` will almost never used). Not a problem but worth highlighting.",tomchristie,None,2016-11-11T16:37:56Z,2017-09-13T19:59:05Z
7541,Use function-argument for tzinfo in test_datetime.,A bit of cleanup (PyCharm highlighted it). I don't know if the commit message needs to be modified. ,atombrella,None,2016-11-11T10:29:36Z,2017-11-16T09:24:34Z
7540,Minor typo / wording fix,,IanLee1521,None,2016-11-11T07:09:24Z,2016-11-11T12:01:48Z
7539,"Fixed #27448 -- Don't use deprecated PostGIS functions, depending on PostGIS version.","PostGIS 2.2.0 deprecated `ST_distance_sphere` in favour of `ST_DistanceSphere` and a few other functions. See: https://trac.osgeo.org/postgis/ticket/2748
The old functions are still available, but now issue deprecation warnings, which significantly slows them down (>40× for me).
`django.contrib.db.backends.postgis` currently requires PostGIS ≥2.1.0. Unfortunately, the not deprecated replacement functions only became available with PostGIS 2.2.0. So, to retain compatibility with PostGIS 2.1.0 we have to switch functions depending on the PostGIS version.

This branch contains:
 * A test-case for the deprecated functions being used (Thanks Mjumbe Wawatu Poe for the initial patch!)
 * Some trivial documentation updates.
 * A simple fix, which determines the functions to use in `PostGISOperations.__init__`
 * A test-case for the fix.
 * A more lazily evaluated, but a bit larger fix, which does not confuse Django's testsuite by evaluating an SQL-query when instantiating `PostGISOperations`.

I'll squash it all into one commit after review and patch-up. Either with or without the lazy fix.

Ticket: https://code.djangoproject.com/ticket/27448",roques,None,2016-11-10T22:04:44Z,2016-11-12T21:18:23Z
7538,Fixed #27471 - Making admin's list_filter choices collapsable,https://code.djangoproject.com/ticket/27471,gregmccoy,None,2016-11-10T16:11:06Z,2016-11-23T14:24:35Z
7537,Removed redundant DateTimeField.register_lookup()s.,DateTimeField inherits these lookups from DateField.,timgraham,None,2016-11-10T15:18:56Z,2016-11-10T17:02:43Z
7536,simple support http1.1 keep-alive,"Just want to use persistent connection, any idea?",zii,None,2016-11-10T15:18:16Z,2017-02-10T10:02:42Z
7535,Fixed #27469 -- Prevented sending email to empty addresses,Thanks Jarek Glowacki for the report.,claudep,None,2016-11-10T13:13:15Z,2016-11-10T18:48:13Z
7534,Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.,"Docs says, ""The maximum similarity the password can have, before it is rejected, can be set with the max_similarity parameter, on a scale of 0 to 1. A setting of 0 will cause all passwords to be rejected, whereas a setting of 1 will cause it to only reject passwords that are identical to an attribute’s value.""

Both tests fail without the fix.

https://code.djangoproject.com/ticket/27467",timgraham,None,2016-11-10T11:32:41Z,2016-11-16T23:11:59Z
7533,Fixed #27221 -- Document how to escape a percent symbol in ugettext,https://code.djangoproject.com/ticket/27221,HenryDangPRG,None,2016-11-10T03:29:50Z,2016-11-22T18:58:06Z
7532,Fixed #27458 - Fixed Oracle ORA-00911 error when trying to create object with many-to-many relationship,See https://code.djangoproject.com/ticket/27458 for more details,andrewnester,None,2016-11-09T10:41:00Z,2016-12-30T22:16:04Z
7531,"Refs #27420 -- Removed ""if"" that hides exceptions from Oracle DB crea…","…te test user with `keepdb` flag.

Due to [comment](https://code.djangoproject.com/ticket/27420#comment:6). See also [PR 7463](https://github.com/django/django/pull/7463).",felixxm,None,2016-11-08T18:16:33Z,2016-11-08T21:53:52Z
7530,Fixed #27461 -- Fixed incorrect allow_migrate() arguments in makemigrations.,"The args before was incorrect, it was interpreted as a boolean. This should use the correct method to call the models for that app.

ticket: https://code.djangoproject.com/ticket/27461",JBKahn,None,2016-11-08T17:27:19Z,2016-11-09T15:27:20Z
7529,Fixed 27397 Querying with an integer larger than SQLite supports crashes with OverflowError,,raminfp,None,2016-11-08T02:05:17Z,2016-11-12T02:59:37Z
7528,Fixed #25251 -- Made data migrations available in TransactionTestCase when using --keepdb.,"Data loaded in migrations are restored at the beginning of each `TransactionTestCase` and all the tables are truncated at the end of these test cases.
It means that, at the end of your whole test suite, if there was at least one `TransactionTestCase`, the migrated data are no more in the database, specially surprising when using `--keepdb` option.
Now we restore data at the end of a `TransactionTestCase`, to be sure that the next test will be in the expected environment (data loaded from initial migrations)
It also means that we add some informations in the test class itself to know if the next test needs a data rollback, to handle situations where `TransactionTestCase` with `serialized_rollback = True` and `serialized_callback = False` are mixed.

@timgraham At the end I preferred to create a new PR to come back to a fresh environment for further discussions. Initial proposals were https://github.com/django/django/pull/6137 and https://github.com/django/django/pull/6297.
",romgar,None,2016-11-07T22:48:46Z,2018-11-13T14:51:16Z
7527,Fixed #27459: Logging now checks length of args,,brandonchinn178,None,2016-11-07T22:15:38Z,2016-11-07T22:18:08Z
7526,Fix #27445: RadioSelect widget does not work for NullBooleanField,,jrief,None,2016-11-07T08:49:23Z,2016-11-16T18:30:46Z
7525,Fixed #27452 -- Added SerialField and BigSerialField to contrib.postgres.,https://code.djangoproject.com/ticket/27452,codingjoe,None,2016-11-06T17:11:26Z,2020-04-21T13:33:05Z
7524,Fixed #27454 -- Avoid calling gettext for apps with no locale dir.,,carljm,None,2016-11-06T13:02:22Z,2016-11-07T08:59:13Z
7523,Fixed #24370 -- Recommended new projects start with a custom user model.,"Recommend to create a custom user model in documentation, as suggested in https://code.djangoproject.com/ticket/24370.

I merged the two warnings, since they both concern the situation when AUTH_USER_MODEL is changed in an existing project.

This does not solve #24370 completely (there are suggestions to add this to tutorial or create a management command `startuserapp`), but should be a step in the right direction.",monoidal,None,2016-11-06T12:57:04Z,2016-11-23T19:44:38Z
7522,Fixed #27432 -- Added app labels support to showmigrations --plan,https://code.djangoproject.com/ticket/27432,sbast,None,2016-11-06T12:56:31Z,2017-01-07T02:25:14Z
7521,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,,carljm,None,2016-11-06T12:53:33Z,2016-11-15T13:10:14Z
7520,Fixed #27318 -- Made cache.set_many() return a list of failing keys.,"https://code.djangoproject.com/ticket/27318

implemented a test that inserts an invalid value in memcached
other backends (Dummy, Locmem)  never fails inserts thus do not need special testing",olibook,None,2016-11-06T12:06:10Z,2017-09-06T18:53:26Z
7519,Fixed # 27106 - Document which template filters can be used in Python code (and how),,burhan,None,2016-11-06T11:29:32Z,2017-02-06T14:27:21Z
7518,Added Tobias McNulty to the Ops team.,,tobiasmcnulty,None,2016-11-06T10:58:20Z,2016-11-06T11:07:35Z
7517,"Refs #11964, #26167 -- Made Expressions and Q objects deconstructible.",@exonian ,Ian-Foote,None,2016-11-06T10:39:33Z,2017-02-24T07:52:35Z
7516,Fixed Typo in forms/widget,,Leila20,None,2016-11-06T10:06:34Z,2016-11-06T10:55:33Z
7515,Fixed #21454 -- Added readonly attribute to Model Fields,"DutH 2016 sprints : Pair coded with @wengole.
Made SQLCompiler remove readonly fields from INSERT and UPDATE queries.
Made model instances refresh themselves after save when appropriate.

https://groups.google.com/forum/#!topic/django-developers/BDAlTyJwQeY",ewjoachim,None,2016-11-06T10:05:35Z,2016-11-16T08:29:24Z
7514,Fixed #3461 -- Made DatabaseWrapper.cursor() pass args/kwargs to the database adapter.,"https://code.djangoproject.com/ticket/3461

added tests for mysql, postgresql, and sqlite3

",olibook,None,2016-11-06T09:34:19Z,2017-03-01T14:33:51Z
7513,Fixed #27397 Querying with an integer larger than SQLite supports cra…,https://code.djangoproject.com/ticket/27397,raminfp,None,2016-11-05T23:52:22Z,2016-11-07T05:02:01Z
7512,Fixed #27414 -- Documented F expressions returns pk values,,troef,None,2016-11-05T21:57:20Z,2016-11-09T12:13:59Z
7511,Skipped makemessages -l tests when gettext tools are not installed,"I didn't create a Trac ticket because I think this is ""a really trivial issue"" per Django's patch guideline. But I can do that if you consider it necessary.",intgr,None,2016-11-05T17:37:47Z,2016-11-08T22:43:48Z
7510,Fixed #24994 -- Added system check for invalid characters in settings.SECRET_KEY.,https://code.djangoproject.com/ticket/24994,MaartenPI,None,2016-11-05T16:50:09Z,2016-12-27T18:53:54Z
7509,Fixed #27236 -- Deprecated model Meta.index_together in favor of Meta.indexes.,"in favour of Model.Meta.indexes

https://code.djangoproject.com/ticket/27236


migrate existing tests to use Meta.indexes instead of Meta.index_together
created a test to ensure deprecation warning is raised
deprecation warning not raise when running migrations, so that 'old' data models with index_together do not pollute migration messages",olibook,None,2016-11-05T16:29:13Z,2016-12-22T14:12:56Z
7507,Fixed #26920 -- Made GEOSGeometry equality check consider the srid.,"This fixes: https://code.djangoproject.com/ticket/26920
See also: https://groups.google.com/forum/#!topic/geodjango/_UQx1OnAZhM

This PR will make checking `GEOSGeometry` equality take into account the `srid` property. Because the `__eq__` method also accepts a WKT as argument which does not contain any srid information, I've updated it so that it will also check EWKTs if possible (which do contain srid information).",jackieleng,None,2016-11-05T16:23:44Z,2016-11-23T09:06:12Z
7506,Fixed #27133 -- clarify loading data fixtures,See ticket: https://code.djangoproject.com/ticket/27133,krzysztofzuraw,None,2016-11-05T16:16:34Z,2016-11-06T12:00:41Z
7505,[Experiment] Unsafe queryset (non)copying,"I thought it would be interesting to check what performance would look like if we were to disable certain safety mechanisms the ORM imposes. I've done this by adding an `unsafe` queryset method which, currently, only disables the copy procedure when chaining queryset methods together.

I benchmarked the following queryset using djangobench, and it's consistently about 1.3 - 1.4 times faster. Note that no actual SQL is being generated and sent to the server. Improvements diminish as soon as you interact with the database because it's responsible for a larger percentage of overall time. I also benchmarked the memory usage which is close enough to 1kb less.

```
qs = Book.objects.unsafe().filter(
        pages__lte=1000
    ).filter(
        author__region__startswith='region_'
    ).values('author__name').annotate(
        pagesum=Sum('pages'),
        counted=Count('*'),
        avgpg=Avg('pages')
    )
```

I think for querysets where the number of chained methods grows quite large there's value in looking to provide opt-in optimisations. Would anyone else be interested in something like this?",jarshwah,None,2016-11-05T15:57:25Z,2016-11-29T20:41:44Z
7504,"Refs #11964, #26167 -- Made Expressions deconstructible",@exonian ,Ian-Foote,None,2016-11-05T15:53:33Z,2016-11-25T12:22:44Z
7503,Fixed #27088 -- Allowed GEOSGeometry to accept Python 2.7 memoryview.,":warning: This PR should be treated as introduce to discussion.
 
It looked like simple fix but it reviled some dipper problems. I can't just simple use `memoryview` in `six.memoryview` many python 2.7 libraries rely on `buffer` (ex. [sqlite3](http://bugs.python.org/issue7723)). Se we need to use `buffer` as fallback.

 I took assumption from the [six module](https://github.com/django/django/blob/master/django/utils/six.py#L877):

> memoryview and buffer are not strictly equivalent, but should be fine for django core usage.

and I try to change comparison from single `six.memoryview` to `six.buffer_types`. In python 2.7 `six.buffer_types` will contains both `buffer` and `memoryview` in my proposal.

After some refactoring I discover that `memoryview` act not as expected with the `bytes` function which is used in many places outside the GIS lib as well.

```python
Python 2.7
>>> bytes(memoryview(b'foo'))
'<memory at 0x7f3c2cd00640>'

Python 3.5
>>> bytes(memoryview(b'foo'))
b'foo'
```

I stop in here and I think this whole approach with additional `six` patches need to be rethink. `memoryview` from python 2.7 doesn't act exactly the same like in python 3.5. And unfortunately differences between `buffer` and `memoryview` are to big, we can't use them interchangeable. What do you think @claudep ?",mociepka,None,2016-11-05T15:39:08Z,2016-12-01T12:02:59Z
7502,Fixed #27431 -- Prevented disabled form fields from appearing as changed.,See ticket: https://code.djangoproject.com/ticket/27431,veldman,None,2016-11-05T15:31:06Z,2016-11-11T12:04:31Z
7501,Fixed #27439 -- Documented macOS locale configuration for Django tests.,,alixmartineau,None,2016-11-05T15:28:47Z,2017-09-13T08:03:38Z
7500,Fixed #27184 -- Allowed uploading TemporaryFile with the test client.,"During the DUTH 2016 sprints I noticed patch #7230 sitting there since last september 2016 so I introduced the requested changes but kept the original author's commit.

https://code.djangoproject.com/ticket/27184",nemesisdesign,None,2016-11-05T15:16:43Z,2016-11-09T10:55:05Z
7499,Fixed #25388 -- Added an option to disable migrations when running tests.,https://code.djangoproject.com/ticket/25388,dadoeyad,None,2016-11-05T15:09:12Z,2019-11-13T08:46:35Z
7498,Fixed #27029 -- Added validator for utf-8 compatible email adresses,"Link to trac ticket:
https://code.djangoproject.com/ticket/27029

Worked further on some of the changes in https://github.com/django/django/pull/7039 of https://github.com/claudep",woutdp,None,2016-11-05T15:02:23Z,2016-11-15T16:52:39Z
7497,Fixed #27370 -- Fixed select HTML validator issue,"Fixed issue where we caused HTML to be invalid by specifying required
on select field with nonempty first value.

https://github.com/validator/validator/issues/47",stlk,None,2016-11-05T14:56:26Z,2016-11-18T08:50:33Z
7496,Fixed #27119 -- management_form property as a cached_property,"Wrapped management_form property with cached_property, because of multiple usage of management_form in BaseFormSet class.",Backscratcher,None,2016-11-05T14:22:31Z,2016-11-30T18:37:39Z
7495,Fixed #2856 -- Replaced some 404s with messages in admin.,"Instead of a 404, return a redirect to admin index page with a message
indicating that the requested object does not exist. This avoids the
admin returning 404 from ""Recent Actions"" links for objects that have
been deleted.",kmtracey,None,2016-11-05T14:03:13Z,2017-01-03T17:32:33Z
7494,Fixed #25484 -- Made static template tag render escaped URLs.,https://code.djangoproject.com/ticket/25484,alixmartineau,None,2016-11-05T13:58:12Z,2016-12-19T16:11:19Z
7493,Fixed #24195 -- Deconstructed the limit_choices_to option of related fields.,This PR fixes https://code.djangoproject.com/ticket/24195,bogdal,None,2016-11-05T13:57:28Z,2017-06-14T13:39:35Z
7492,Updated documentation of migrate command.,"manage.py migrate is no longer used to list migrations (in the past,
this was done with manage.py migrate --list)",monoidal,None,2016-11-05T13:42:48Z,2016-11-05T21:00:57Z
7491,Fixed #27355 -- Added “Create extension using migrations”,"Additional explanation for PostreSQL extensions installation via migrations, with hstore extension as an example.",ntuckovic,None,2016-11-05T13:42:47Z,2016-12-08T18:20:12Z
7490,Fixed #24858 -- Added custom _get_FIELD_display to ArrayField,Improved patch by @asser https://github.com/django/django/pull/6381,artursmet,None,2016-11-05T13:41:26Z,2016-12-20T17:53:39Z
7489,Fixed #21963 -- Allowed translator comments on non-EOL positions.,"This patch is based on #2410 by @dzhibas. I've made a few cleanups and upgraded it to play nicely with the master branch.

Description from the original PR:

> Inline translators comment and comment blocks in PO files now are in correct places and not ignored.
> 
> New test case added with months from ticket #21963, previous test for issue #19552 is modified because of incorrect behavior (ignoring inline comments in front and placing others for wrong translation strings)

The implementation reverts most of https://github.com/django/django/commit/47ddd6a4082d55d8856b7e6beac553485dd627f7 (authored by @ramiro), while leaves documentation in place, thus the latter may need updating.

If the approach is still considered valid, I'll proceed with this patch.

The only thing which currently concerns me is that this implementation naively concats multiple translator comments found on a single line, e. g.:

```
#. Translators: valid i18n comment #8 # Translators: valid i18n comment #9
#: templates/comments.thtml:13
msgid ""Translatable literal #9j""
msgstr """"
```",sergeykolosov,None,2016-11-05T13:23:01Z,2018-08-04T13:55:16Z
7488,Fixed #27003 -- Made ArrayField and JSONField check for already-converted values,Fixed a issue raised by comment on #7012 as this PR seemed abandoned,mr-bo-jangles,None,2016-11-05T13:09:56Z,2016-11-11T20:05:58Z
7487,Fixed #25569 -- Expanded error message for select_related() on reverse relations.,"Improved the error message when an invalid select_related call is made.
In particular, this commit aims to give a more specific reason about
why the call is invalid.",vincent-prz,None,2016-11-05T13:06:45Z,2016-11-29T14:35:11Z
7486,Fixed #27372 -- Fixed inspectdb not handling SQLite3 tables with foreign keys that have spaces,"SQLite inspectdb didn't handle spaces between FOREIGN KEY and
parenthesis.

Based on https://github.com/django/django/pull/7402

https://code.djangoproject.com/ticket/27372",frgtn,None,2016-11-05T13:05:17Z,2016-11-06T09:15:11Z
7485,Fixed 27387 -- Documented addition of required HTML attribute in Field.required docs.,,zsiciarz,None,2016-11-05T12:52:12Z,2016-11-15T16:03:57Z
7484,Fixed #27440 -- Allowed reverse() to construct an absolute URL.,trac issue: https://code.djangoproject.com/ticket/27440,mislavcimpersak,None,2016-11-05T12:49:16Z,2016-11-11T15:29:12Z
7483,Fixed #27402 - LocaleMiddleware redirecting when it should display 404.,"That's improved version of https://github.com/django/django/pull/7461.

It's using the approach suggested by @francoisfreitag which looks correct.",urbaniak,None,2016-11-05T12:48:45Z,2016-11-27T19:57:19Z
7482,Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.,"This is a PR for the simplified URL routing as mentioned in https://github.com/django/deps/pull/27.

Thanks to Tom Christie in formulating the DEP where this is based off.
Thanks to Aaron Lelevier and Jacob Kaplan-Moss for their help in bouncing around ideas.",sjoerdjob,None,2016-11-05T12:40:10Z,2017-09-20T22:40:43Z
7481,Add testcase for `django.autoreload.clean_files`,,igniteflow,None,2016-11-05T12:20:00Z,2016-12-22T14:20:04Z
7480,[WIP] Fixed #27426 -- Allowed customizing the test Client's request factory.,"Allow injecting a different request factory to be used by the test
client. Hence refactor the Client to no longer inherit directly
from the RequestFactory.",ana-balica,None,2016-11-05T12:10:09Z,2016-11-10T08:01:15Z
7479,Add 'pytz' to spelling wordlist,This makes the docs spelling check pass again.,rivol,None,2016-11-05T12:03:08Z,2016-11-05T12:28:42Z
7478,Fixed #27441 -- Removed CASCADE from MySQL's 'DROP COLUMN' SQL.,"'CASCADE' is an documented no-op in MySQL, so to avoid confusion Django no longer outputs it.",adamchainz,None,2016-11-05T11:58:16Z,2016-11-05T21:24:42Z
7477,Fixed #27386 -- Wrapped readonly callable fields in <div> rather than <p>.,https://code.djangoproject.com/ticket/27386,jrief,None,2016-11-05T11:53:57Z,2016-11-12T15:07:43Z
7476,Fixed #27346 -- Removed the Content-Length response header in ConditionalGetMiddleware,,adammalinowski,None,2016-11-05T11:52:17Z,2016-11-05T21:27:29Z
7475,Fixed #27438 -- Added the diffsettings --default option.,,pwmarcz,None,2016-11-05T11:48:45Z,2016-11-10T13:13:43Z
7474,Fixed #27138 -- Made timezone functions consistent with py36,"localtime and make_naive now raise a ValueError on naive input
datetime even with Python 3.6

https://code.djangoproject.com/ticket/27138",ewjoachim,None,2016-11-05T11:44:33Z,2019-02-22T20:29:29Z
7473,Fixed #27434: Removed an edge case with model validation,"When raising a dictionary ValidationError in Model.clean() for fields which are not part of a particular modelform, Django would raise a ValueError because it couldn't assign those errors to a form field.

This change moves errors from non-existing fields to NON_FIELD_ERRORS.

A better idea might be to check whether the field actually exists on the model and prepend the field's `verbose_name` to all error message, but I wanted to solicit some feedback first before moving forward with this patch, especially from @loic :-)

Link to related ticket for easier browsing: https://code.djangoproject.com/ticket/27434",matthiask,None,2016-11-05T10:34:03Z,2020-01-31T08:51:13Z
7472,Fixed #27436 -- Display absolute path in makemigrations if a relative path doesn't exist.,"For example on Windows it's impossible to obtain a relative path
between files located on separate drives (C: and D:, for example).",zsiciarz,None,2016-11-05T10:10:18Z,2016-11-08T23:06:17Z
7471,Fixed #26812 -- Check only path with APPEND_SLASH enabled,,zw3n,None,2016-11-04T22:36:40Z,2016-11-06T09:38:36Z
7470,"Fixed #27181 -- Enable Sites framework to normalize domains with trailing "".""",https://code.djangoproject.com/ticket/27181,desecho,None,2016-11-04T20:29:13Z,2016-11-29T23:17:10Z
7469,Fixed #27297 - Ignore case-only model name changes in migration autodetector,,desecho,None,2016-11-04T18:29:04Z,2016-11-11T23:57:21Z
7468,Fixed #27310 -- Stopped rendering apps in RenameModel.state_forwards.,,charettes,None,2016-11-04T14:57:47Z,2016-12-10T15:40:37Z
7467,Code highlighting in README.rst,"Hello, :smiley:

I **highlighted the code** in **`README.rst`**. :pencil:


*Yours,*
[**Suriyaa Kudo**](https://github.com/SuriyaaKudoIsc) :octocat:",suriyaa,None,2016-11-04T14:43:54Z,2016-11-05T11:07:11Z
7466,Fix incorrect pluralization typo in docs/topic/testing/tools.txt,"Note: the contributing docs don't seem to describe how to handle this trivial-sized PR, but the CONTRIBUTING.rst implies that this minimal PR is the right size",PamelaM,None,2016-11-03T19:14:41Z,2016-11-04T04:12:42Z
7465,Fixed #27423 -- Simplify test command sys.exit,,ana-balica,None,2016-11-02T21:16:27Z,2016-11-03T11:41:00Z
7464,"Fixed #27421 -- Added shape, size, and offset controls to GDALRaster constructor.",https://code.djangoproject.com/ticket/27421,yellowcap,None,2016-11-02T14:07:38Z,2016-11-11T12:09:39Z
7463,Fixed #27420 -- Quoted Oracle DB test user password,,felixxm,None,2016-11-02T13:49:54Z,2016-11-08T21:37:57Z
7462,Fixed #27416 -- Prevented ModelFormSet from creating objects for invalid PKs in data.,"ModelFormSet with `queryset` arg will accept outer model and create invalid empty data.
Details is written in https://code.djangoproject.com/ticket/27416#ticket.

In this PR I changed `save_existing_objects` method and run tests.
It may be solved to fix `def _construct_form` or so, but there is not good way to skip constructing  forms.
",hirokiky,None,2016-11-02T06:32:42Z,2016-12-06T18:06:58Z
7461,Fixed #27402 - LocaleMiddleware redirecting when it should display 404.,,hovi,None,2016-11-01T21:22:06Z,2016-11-06T05:09:41Z
7460,Fixed #27418 -- Fixed occasional missing plural forms in JavaScriptCatalog.,"This bug occurs when you have a missing translation in a language with more than two plural forms. In this case, you have a fallback to English and depending on the order in which the catalog is traversed in the for-loop you might end up with an msgid of a fallback English two-plural translation. When that happens, all translations will be reduced to two plural forms.

https://code.djangoproject.com/ticket/27418",wkornewald,None,2016-11-01T13:50:52Z,2016-12-09T15:05:07Z
7459,Completed django.utils.timezone test coverage.,,timgraham,None,2016-11-01T00:51:59Z,2016-11-01T18:01:41Z
7458,Fixed #27378 -- Added UUID serialization support to migration writer,"This PR applies the patch made by Yuriy Korobko, availble on the Trac ticket https://code.djangoproject.com/ticket/27378 for 7 days now. It seems complete so I think we can push it forward in the review process.",mlorant,None,2016-10-31T20:22:48Z,2016-11-06T12:53:00Z
7457,Update some Python 2 style print statements in QuerySet examples.,,FlipperPA,None,2016-10-31T19:01:45Z,2016-10-31T19:22:32Z
7456,Update my info,,holvianssi,None,2016-10-31T12:32:23Z,2016-10-31T13:57:04Z
7455,Attic/full history,,codepriya,None,2016-10-31T06:51:36Z,2016-10-31T06:51:49Z
7454,Updated Oracle docs links to the Oracle 12c,,felixxm,None,2016-10-30T21:23:24Z,2016-10-31T18:32:51Z
7453,Cast limit to int before slicing,,ihoru,None,2016-10-30T04:13:31Z,2016-10-30T15:21:23Z
7452,Fixed #27400 -- Documented {% static %} encoding change in 1.10.,"https://code.djangoproject.com/ticket/27400
",HenryDangPRG,None,2016-10-29T16:32:00Z,2016-10-31T20:11:16Z
7451, Fixed #26551 -- Prevented reuse of trimmed joins ,"https://code.djangoproject.com/ticket/26551

The query generated by the ORM incorrecly assumes that many_to_one_city is used in the outer query, thus generates the line `AND U1.""id"" = (""many_to_one_city"".""id"")` (because alias is in `can_reuse` during the [split_exclude operation](https://github.com/francoisfreitag/django/blob/e3e6495298fe727a3281df452ee8646c55014832/django/db/models/sql/query.py#L1524-L1535)):

``` sql
SELECT ""many_to_one_road"".""id"", ""many_to_one_road"".""city_id"", ""many_to_one_road"".""name"" 
FROM ""many_to_one_road"" 
WHERE NOT (
    ""many_to_one_road"".""city_id"" IN (
        SELECT U2.""city_id"" AS Col1 
        FROM ""many_to_one_district"" U2 
        WHERE (U2.""name"" = 'Fairview' AND U2.""city_id"" IS NOT NULL)
    ) AND ""many_to_one_road"".""city_id"" IN (
        SELECT U1.""id"" AS Col1 
        FROM ""many_to_one_city"" U1 
        LEFT OUTER JOIN ""many_to_one_district"" U2 ON (U1.""id"" = U2.""city_id"") 
        WHERE (
            U2.""creation_date"" IS NULL 
            AND U1.""id"" = (""many_to_one_city"".""id"")  -- Should not be here
        )
    )
)
```

The query should simply be:

``` sql
SELECT ""many_to_one_road"".""id"", ""many_to_one_road"".""city_id"", ""many_to_one_road"".""name"" 
FROM ""many_to_one_road"" 
WHERE NOT (
    ""many_to_one_road"".""city_id"" IN (
        SELECT U2.""city_id"" AS Col1 
        FROM ""many_to_one_district"" U2 
        WHERE (U2.""name"" = 'Fairview' AND U2.""city_id"" IS NOT NULL)
    ) AND ""many_to_one_road"".""city_id"" IN (
        SELECT U1.""id"" AS Col1 
        FROM ""many_to_one_city"" U1 
        LEFT OUTER JOIN ""many_to_one_district"" U2 ON (U1.""id"" = U2.""city_id"") 
        WHERE U2.""creation_date"" IS NULL
    )
)
```

About the second commit, I found it surprising to update `used_joins` before trimming `join_list` and I think a comment doesn't hurt.
",francoisfreitag,None,2016-10-28T17:43:48Z,2017-02-22T04:14:36Z
7450,Fixed #27401 -- Added Transifex config for building translated docs.,,jehos,None,2016-10-28T17:39:54Z,2016-11-06T05:29:07Z
7449,"Fixed #27250 -- Removed 'for =""...""' from CheckboxSelectMultiple's <label>.","Removes number appending on MultipleChoiceField
",martinarroyo,None,2016-10-28T17:26:51Z,2016-11-22T18:28:20Z
7448,Simplified some auth_tests with assertRedirects().,,timgraham,None,2016-10-28T15:32:10Z,2016-10-28T15:52:52Z
7447,"Fixed #25240 -- Add ""week"" lookup to DateField/DateTimeField.","… datetime fields

The choice of week numbers is based on ISO-8601. The choice for weekdays is based on Sunday being the first day of the week. I've contemplated about introducing a setting to choose (for this patch) to be ISO-8601 compliant.",atombrella,None,2016-10-28T14:48:20Z,2016-11-11T13:01:40Z
7446,Added pytz to test requirements,"This allows running tests w/o installing Django itself by only pointing
the Python path.
",MarkusH,None,2016-10-28T13:42:34Z,2016-10-28T13:49:08Z
7445,Captured logging output from NonDjangoTemplatesDebugViewTests in view_tests.,"Before the fix the output would appear as:

```
test_400 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests) ... 
ok
```

now:

```
test_400 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests) ... ok
```
",jdufresne,None,2016-10-28T03:57:44Z,2016-10-29T22:39:24Z
7444,Update TooManyFieldsSent comment for GET requests,"Updated the class comment for exceptions.TooManyFieldsSent to match the DATA_UPLOAD_MAX_NUMBER_FIELDS doc section.
",zwernberg,None,2016-10-27T22:05:53Z,2016-10-27T22:44:53Z
7443,Fixed #27394 -- Added scientific notation support for big integer in floatformat filter,,felixxm,None,2016-10-27T18:15:38Z,2016-11-15T14:07:15Z
7442,Fixed #27358 -- Added a system check to prohibit a leading slash in FileField's upload_to.,"Added a systems check to check if upload_to in FileFields has a preceding slash also updated documentation to show the system check. Based on #27358
",Metfriet,None,2016-10-27T15:13:33Z,2016-11-29T20:03:18Z
7441,Changed 'robust' to 'scalable' because...,"The sentence implied that SQLite isn't robust which is misleading since it is extremely robust. I think the right term is scalable.
",mark-summerfield,None,2016-10-27T12:46:47Z,2016-10-27T13:14:04Z
7440,Fixed #26708 -- Updated the contributing tutorial to use GitHub workflow.,"Django ticket: [#26708](https://code.djangoproject.com/ticket/26708)
",za,None,2016-10-27T08:14:42Z,2016-10-31T07:49:29Z
7439,"Fixed #27392 -- Removed ""Tests that"", ""Ensures that"", etc. from test docstrings.","Django ticket: [#27392](https://code.djangoproject.com/ticket/27392)
",za,None,2016-10-27T07:58:40Z,2017-02-17T12:58:57Z
7438,Fixed #27393 -- Aligned input boxes in admin password reset forms.,"Fixes https://code.djangoproject.com/ticket/27393

 The password reset and enter new password form input boxes are not aligned.
<img width=""718"" alt=""django-password-reset"" src=""https://cloud.githubusercontent.com/assets/659504/19756736/08242dee-9c1f-11e6-96de-c737ebf798bb.png"">

<img width=""587"" alt=""django-enter-new-password"" src=""https://cloud.githubusercontent.com/assets/659504/19756743/0e76ed12-9c1f-11e6-95d7-ad419de2f001.png"">

This opposed to the change password form:
<img width=""1008"" alt=""django-password-change"" src=""https://cloud.githubusercontent.com/assets/659504/19756747/19b54b10-9c1f-11e6-8953-66ebe35941e2.png"">

This PR fixes that:
<img width=""739"" alt=""django-password-reset-new"" src=""https://cloud.githubusercontent.com/assets/659504/19756753/255c673c-9c1f-11e6-80a7-77654f90fae7.png"">

<img width=""677"" alt=""django-enter-new-password-new"" src=""https://cloud.githubusercontent.com/assets/659504/19756756/2a6a3f56-9c1f-11e6-9777-12748f3bd671.png"">
",mbeijen,None,2016-10-27T06:27:20Z,2016-11-15T16:21:54Z
7437,"Updated ""running the tests"" to use 'pip install -e'.",,timgraham,None,2016-10-26T23:23:19Z,2016-10-27T12:44:17Z
7436,Fixed #27391 -- Implemented SimpleTestCase.debug().,"https://code.djangoproject.com/ticket/27391

Users calling debug() expect it to bubble up an exception if occurring in test, but behave the
same as run() when no exception occurred.
",asfaltboy,None,2016-10-26T21:20:15Z,2019-10-18T13:31:27Z
7435,Fixed #26578 -- Prohibited non-ASCII digits in validate_ipv4_address.,"Could we get the ball rolling again on this ticket, it seems to have been forgotten.  Actually there are hundreds more cases where \d is being used when it probably shouldn't be, but this is the particular one that's bothering me currently.  

This responsibility is also duplicated [here](https://github.com/django/django/blob/f734e2d4b2fc4391a4d097b80357724815c1d414/django/core/validators.py#L83) in URLValidator class (with a different regex), if we are going to use a regex at all for this then ideally there should at least be one source of truth for the pattern.  
",wimglenn,None,2016-10-26T21:05:09Z,2016-10-28T15:38:49Z
7434,Fixed #24128 -- Made admindocs' TemplateDetailView account for template loaders.,"Modification for TemplateDetailView in admindocs to go through the directories from template loaders.

https://code.djangoproject.com/ticket/24128

Might need some improvements.
",krisavi,None,2016-10-26T17:35:15Z,2018-07-21T21:59:54Z
7433,Fixed #27385 -- Fixed QuerySet.bulk_create() on PostgreSQL when the number of objects is a multiple plus one of batch_size.,"https://code.djangoproject.com/ticket/27385

With the model

``` python

from django.db import models

class TestModel(models.Model):
    number = models.IntegerField()

```

using a ""real"" db (postgresql) if I try to do this

``` python
objs = [TestModel(number=n) for n in range(11)]
TestModel.objects.bulk_create(objs, batch_size=10)
```

I get this error

``` python
/home/bameda/.virtualenvs/taiga/lib/python3.5/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

/home/bameda/.virtualenvs/taiga/lib/python3.5/site-packages/django/db/models/query.py in bulk_create(self, objs, batch_size)
    450                 if objs_without_pk:
    451                     fields = [f for f in fields if not isinstance(f, AutoField)]
--> 452                     ids = self._batched_insert(objs_without_pk, fields, batch_size)
    453                     if connection.features.can_return_ids_from_bulk_insert:
    454                         assert len(ids) == len(objs_without_pk)

/home/bameda/.virtualenvs/taiga/lib/python3.5/site-packages/django/db/models/query.py in _batched_insert(self, objs, fields, batch_size)
   1062                 inserted_id = self._insert(item, fields=fields, using=self.db, return_id=True)
   1063                 if len(objs) > 1:
-> 1064                     inserted_ids.extend(inserted_id)
   1065                 if len(objs) == 1:
   1066                     inserted_ids.append(inserted_id)

TypeError: 'int' object is not iterable
```

So this PR solve this.
",bameda,None,2016-10-25T15:02:02Z,2016-10-26T07:23:52Z
7432,Updated PostgreSQL links to https and made them canonical,"www.postgresql.org is now https-only and no longer offers interactive documentation pages.
",intgr,None,2016-10-25T15:01:16Z,2016-10-25T15:43:32Z
7431,Fixed #27363 -- Fixed redirecting issue when session destroyed while request is processing.,"See https://code.djangoproject.com/ticket/27363 for more details.

Imagine such case:
1. Logged in user loads a slow page in separate tab or as an ajax request, which modifies the session
2. User logs out before request in step 2 completes. This will delete the session from the db

Now when 2nd slow ajax request will be processed it will return 302 status with redirect to login page.
Actually it makes no sense for ajax request to have response with 302 status because it definitely not what we expect it to be. Same can be applied for any non-ajax request.

How it was proposed in initial ticket it's much better to return 400 status to indicate that something wrong with request (in this case - session deleted).
",andrewnester,None,2016-10-25T11:28:59Z,2016-11-01T11:18:50Z
7430,Fixed #27382 -- Doc'd that ugettext_lazy() should be converted to text for non-Django code.,"https://code.djangoproject.com/ticket/27382
",medmunds,None,2016-10-25T02:03:00Z,2016-10-29T11:25:34Z
7429,Fixed #27381 - Add operation for pg_prewarm extension (Postgres),"""The pg_prewarm module provides a convenient way to load relation data into either the operating system buffer cache or the PostgreSQL buffer cache.""

It is packaged with Postgres starting from 9.4.

Ticket: https://code.djangoproject.com/ticket/27381#ticket
",petedmarsh,None,2016-10-24T21:42:20Z,2016-10-24T21:50:56Z
7428,Fixed #26789 -- Fixed handling of empty geometries in BaseSpatialField.get_db_prep_save,"https://code.djangoproject.com/ticket/26789
",sir-sigurd,None,2016-10-24T15:54:18Z,2016-12-06T18:58:51Z
7427,Defined MySQLOperations.geom_func_prefix.,,sir-sigurd,None,2016-10-24T12:49:58Z,2016-10-24T15:12:48Z
7426,"Capitalized ""django"" in docs",,akki,None,2016-10-24T06:08:43Z,2016-11-15T22:00:50Z
7425,Replace xhtml2pdf against WeasyPrint,"The maintainer of xhtml2pdf himself recomends to use WeasyPrint instead of his own library.
Please read notice on https://github.com/xhtml2pdf/xhtml2pdf for details
",jrief,None,2016-10-23T21:05:09Z,2016-10-25T16:00:06Z
7424,Fixed #27188 -- Allowed using unique=True with FileField.,"https://code.djangoproject.com/ticket/27188
",mscott250,None,2016-10-23T20:46:42Z,2016-10-29T00:11:52Z
7423,Fixed #27360 -- Exposes more information about offending models in an AlreadyRegistered exception.,"Fixes ticket 27360 by adding more information about the models involved in an AdminSite's AlreadyRegistered exception. Let me know if the error message needs to be more clear or changed around. 
",inondle,None,2016-10-23T20:29:59Z,2016-12-20T17:52:51Z
7422,Fixed #18729 -- Using `distinct` more precisely if there is an m2m field in list_filter,"https://code.djangoproject.com/ticket/18729
",nmhung89,None,2016-10-23T11:56:39Z,2016-12-06T15:45:34Z
7421,Fixed #27374 -- Made JavaScriptCatalog respect the packages argument.,"https://code.djangoproject.com/ticket/27374
",timgraham,None,2016-10-22T23:28:05Z,2016-10-24T14:26:24Z
7420,Fixed #27373 -- Corrected message on 404 debug page for an empty request path.,"https://code.djangoproject.com/ticket/27373
",felixxm,None,2016-10-22T20:26:51Z,2016-10-27T20:58:42Z
7419,Fixed #27299 -- Documented the Widget.use_required_attribute() method.,"https://code.djangoproject.com/ticket/27299
",jdufresne,None,2016-10-22T15:21:41Z,2016-10-27T03:18:49Z
7418,Fixed #27335 - Avoid object save during QuerySet.update_or_create() when there were no changes,"`QuerySet.update_or_create()` was optimized.
See https://code.djangoproject.com/ticket/27335 for more details.

To collect `save` method call count I used similar technique like it's done here https://github.com/django/django/blob/master/tests/generic_views/views.py#L156
",andrewnester,None,2016-10-21T09:43:56Z,2016-11-08T22:46:05Z
7417,Fixed #27367 - Documented behavior and added tests when several urls have the same name,"https://code.djangoproject.com/ticket/27367
",raiderrobert,None,2016-10-20T21:04:56Z,2017-02-11T14:03:37Z
7416,Optimized file copy in TemplateCommand,,claudep,None,2016-10-20T15:00:14Z,2016-10-20T15:46:27Z
7415,Fixed #27369 -- Prevented widgets from being shared between form field instances.,"https://code.djangoproject.com/ticket/27369
",koniiiik,None,2016-10-20T14:08:02Z,2016-11-06T06:16:57Z
7414,Fixed namespace typo in modelforms docs.,"- `modelformset_factory` is part of `django.forms.models` package.
",0xadada,None,2016-10-20T12:55:00Z,2016-10-20T13:08:00Z
7413,Fixed #27368 -- Fixed unclosed socket ResourceWarning in mail test.,"https://code.djangoproject.com/ticket/27368
",jdufresne,None,2016-10-19T23:51:09Z,2016-10-21T12:59:10Z
7412,Fix KeyError bug when 'no_color' is not specified (#27366),"Associated ticket: https://code.djangoproject.com/ticket/27366#ticket

Works fine now.
",Ge0,None,2016-10-19T17:21:28Z,2016-10-19T17:24:55Z
7411,Documentation: Fix import reverse,"Import from the correct location as stated in the note here https://docs.djangoproject.com/en/1.10/ref/urlresolvers/

Apologies if there is anything missing in this PR. It's my first contribution as I noticed an error while following the tutorial
",johnsardine,None,2016-10-19T15:39:57Z,2016-10-19T17:26:38Z
7410,"Reverted ""Fixed #26401 -- Added BaseAuthConfig to use auth without migrations.""","This reverts commit 1ec1633cb294d8ce2a65ece6b56c258483596fba as it
doesn't handle ContentType's auth.Permission dependency. Thus, it
doesn't allow auth without migrations.

https://code.djangoproject.com/ticket/26401
",jdufresne,None,2016-10-19T10:30:40Z,2016-10-26T00:33:00Z
7409,"docs post_migration:  added ""called every time"".",,guettli,None,2016-10-19T09:37:17Z,2016-10-26T15:09:18Z
7408,Lowercased alt. month names in norwegian,"Month names in norwegian is always lowercase, even after the ordinal marker period in full date format (such as in: `1. januar 1970`) where the `msgctxt ""alt. month""` variant is used.

[See sprakradet.no on dates (in Norwegian)](http://www.sprakradet.no/sprakhjelp/Skriveregler/Dato/#dato)
",strindhaug,None,2016-10-19T08:12:29Z,2016-10-19T12:30:10Z
7407,Fixed #27361 -- Cleaned up forms api documentation,,zachborboa,None,2016-10-19T06:37:34Z,2016-10-19T13:55:22Z
7406,Fixed #27356 -- Admin lookup_allowed incorrectly returns False for a nested reverse OneToOneField,,felixxm,None,2016-10-18T06:41:40Z,2016-12-30T16:29:36Z
7405,Fixed #26357 -- Attached admin pop-up events to body.,"Fixed #26357 -- This ensures that the events will trigger even on links
added after page load.
",julianandrews,None,2016-10-17T22:29:50Z,2016-10-25T00:19:38Z
7404,docs/admin: Avoided AttributeError on get_max_num example,"As obj may be None.
",xrmx,None,2016-10-17T09:22:17Z,2016-10-17T11:33:39Z
7403,Fixed #27352 -- Doc'd social media fingerprinting consideration with login's redirect_authenticated_user.,,MarkusH,None,2016-10-15T19:31:02Z,2017-05-29T13:18:05Z
7402,Fixed #27372 -- Fixed inspectdb not handling SQLite3 tables with foreign keys that have spaces.,"Running `python manage.py inspectdb` with an sqlite3 database resulted in output missing numerous tables with errors of ""Unable to inspect table"" due to ""'NoneType' object has no attribute 'groups'"". It turns out the regular expression was not matching the string ""FOREIGN KEY (skill_type) REFERENCES skill_type(id)"" due to a single space character. Adding the optional space to the regular expression fixed my issue.

https://code.djangoproject.com/ticket/27372",samuller,None,2016-10-15T16:36:22Z,2016-11-06T05:06:27Z
7401,Removed unused branch in ModelIterable.__iter__().,"Unknown if it was ever used.
",timgraham,None,2016-10-15T14:20:17Z,2016-10-15T23:01:22Z
7400,Removed unused 'field' argument to DeleteQuery.delete_batch().,"Unused since a170c3f755351beb35f8166ec3c7e9d524d9602d.
",timgraham,None,2016-10-15T13:21:46Z,2016-10-15T14:19:02Z
7399,Removed unused loop in Query.change_aliases(),"Unknown if it was ever used.
",timgraham,None,2016-10-15T13:06:26Z,2016-10-24T15:27:41Z
7398,Refs #20888 -- Updated indexes ordering introspection for PostgreSQL 9.6,"Ticket: https://code.djangoproject.com/ticket/20888

PostgreSQL 9.6 gets rid of most of pg_am columns[0]. In particular, `amcanorder` disappears and should be replaced with calls to `pg_index_column_has_property()`. PostgreSQL versions < 9.6 do not provide this method, hence we are forced to rely on a brittle query.

Since only B-tree indexes support ordering[1], this is the only type of index to consider. This solution relies on the access method implementation[2] to determine whether `ASC` or `DESC` ordering is in use.

Let's hope that a new view is added to information_schema[3] in the future.

[0] https://www.postgresql.org/docs/9.6/static/release-9-6.html
[1] https://www.postgresql.org/docs/current/static/indexes-ordering.html
[2] https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/include/catalog/pg_index.h;h=ee97c5dec836ad82c5b75440fcba51d4c106fc33;hb=HEAD#l99
[3] http://stackoverflow.com/questions/18121103/how-to-get-the-index-column-orderasc-desc-nulls-first-from-postgresql#comment64529591_18128104

Thanks @timgraham for the first version of this patch.
",francoisfreitag,None,2016-10-15T02:56:05Z,2016-10-17T11:16:13Z
7397,Removed DatabaseFeatures.can_combine_inserts_with_and_without_auto_increment_pk.,"Unused (always False) after 29132ebdef0e0b9c09e456b05f0e6a22f1106a4f.
",timgraham,None,2016-10-14T21:20:22Z,2016-10-14T21:49:19Z
7396,Removed unused QuerySet.value_annotation attribute.,"Unused since 5008a4db440c8f7d108a6979b959025ffb5789ba.
",timgraham,None,2016-10-14T20:50:37Z,2016-10-14T21:18:17Z
7395,migrate is breaking with an AttributeError when extensions are providing names in bytes,"This was breaking the migrate script, such as when a db-file package used, where the name was passed into as  a byte string instead of the expected str type.

It would be safe to cast it to str before returning the quoted string.
",niranjanthilak,None,2016-10-14T18:28:51Z,2016-10-14T20:13:21Z
7394,Fixed #27328 return  if sessionid= empty value,,raminfp,None,2016-10-14T14:51:13Z,2016-10-18T11:43:58Z
7393,Tested QuerySet compatibility check.,"cdfdcf4b70bebfc68871df885387790c6afbc23c missed this test.
",timgraham,None,2016-10-14T12:51:28Z,2016-10-14T13:56:36Z
7392,Fixed #27345 -- Stopped setting the Date header in ConditionalGetMiddleware.,"https://code.djangoproject.com/ticket/27345
",timgraham,None,2016-10-14T12:04:34Z,2016-10-14T17:31:57Z
7391,Fixed #27349 -- Doc'd the CSRF_FAILURE_VIEW setting in view topic guide.,"Related ticket:

https://code.djangoproject.com/ticket/27349#ticket
",Flimm,None,2016-10-14T10:19:14Z,2016-10-14T17:51:58Z
7390,Fixed #27344 -- Skipped ConditionalGetMiddleware processing on unsafe HTTP methods.,,marfire,None,2016-10-14T02:50:25Z,2016-10-17T20:12:39Z
7389,Tested invalid QuerySet.order_by() arguments.,,timgraham,None,2016-10-14T00:57:50Z,2016-10-14T11:23:24Z
7388,Refs #19705 -- Documented the order of the condition() decorator,,marfire,None,2016-10-14T00:07:08Z,2016-10-14T11:38:00Z
7387,pass object to user.has_perm inside of admin permission checks,,ryanpineo,None,2016-10-13T20:10:05Z,2016-10-14T17:52:14Z
7386,Removed unused branch in Query.change_aliases().,"Unused since 0c7633178fa9410f102e4708cef979b873bccb76.
",timgraham,None,2016-10-13T19:03:10Z,2016-10-13T20:55:46Z
7385,Removed unneeded try/except in Query.names_to_path().,"Unused since its introduction in 1f7b25c1a7a85426675a04380f37b180edc08bbc.
",timgraham,None,2016-10-13T19:00:39Z,2016-10-13T20:56:54Z
7384,Removed unused branch in SQLUpdateCompiler.as_sql(),"Unknown if it was ever needed.
",timgraham,None,2016-10-13T18:27:45Z,2016-10-13T20:56:26Z
7383,Removed unused InsertQuery.clone().,"Unknown if it was ever needed.
",timgraham,None,2016-10-13T18:05:58Z,2016-10-13T20:58:43Z
7382,Removed unused EmptyResultSets in SQLCompilers.,"Unused since ed1bcf05158acf4bf4e0189d477b6c762bd0133e.
",timgraham,None,2016-10-13T16:15:40Z,2016-10-13T18:00:13Z
7381,Fixed #25809 -- Added BRINIndex support in django.contrib.postgres.,"Preliminary work to add support for BRIN indexes in `django.contrib.postgres`.

I've added a link to Python sweetness in the documentation. 

The code is mostly adapted from `GinIndex`. I was tempted to include some more columns in the introspection to add some tests that `pages_per_range` is included properly.
",atombrella,None,2016-10-13T12:57:56Z,2017-01-15T12:58:53Z
7380,Fixed #27342 -- Corrected QuerySet.update_or_create() example.,"https://code.djangoproject.com/ticket/27342
",timgraham,None,2016-10-13T12:43:58Z,2016-10-13T15:02:03Z
7379,Fixed #27334 -- TemporaryUploadedFile moved to destination when possible,"When a FileField is set to an instance of File that is not also an
instance of FieldFile, pre_save will pass that object as the contents to
Storage.save().

As a result, when an uploaded file is written to temporary storage,
if possible it will be moved (rather than copied) to the upload
destination.

All tests pass under Linux & Windows. The tests will pass without the changes to files.py on Windows however, because Windows does not support moving open files. On Linux they will fail without the changes to files.py, thus verifying that the test is actually testing something.
",achidlow,None,2016-10-13T04:26:58Z,2016-10-26T16:27:09Z
7378,Refs #19705 -- Changed gzip modification times to 0,"This makes gzip output deterministic, which allows
ConditionalGetMiddleware to reliably compare ETags on gzipped
content (views using the gzip_page() decorator in particular).
",marfire,None,2016-10-13T03:07:22Z,2016-10-14T11:41:43Z
7377,Fixed #27200 -- Provided makemigration's allow_migrate() with model_name.,"https://code.djangoproject.com/ticket/27200
",timgraham,None,2016-10-13T01:23:11Z,2016-10-13T15:43:00Z
7376,Refs #19705 -- Changed GZipMiddleware to make ETags weak,"This change allows Django's conditional request facilities to produce
304 Not Modified responses for content that is subject to compression.
",marfire,None,2016-10-12T22:05:54Z,2016-10-13T18:23:33Z
7375,Fixed nonexistent tmc.edu domain in GeoIP test.,"The test was silently skipped.
",timgraham,None,2016-10-11T23:12:27Z,2016-10-11T23:31:14Z
7374,[1.8.x] Fixed #25407 -- Removed network dependency in GeoIP tests.,"Backport of d0ed01cef0c5ebb7ea9a1fb36de823aa01428600 from master
",timgraham,None,2016-10-11T22:23:11Z,2016-10-11T23:49:25Z
7373,Fixed #27333 -- Prevented BASE64 encoding in message.as_string() on Python 3,,claudep,None,2016-10-11T19:00:20Z,2016-10-12T18:51:33Z
7372,Tested Model.get_next/prev_by_FIELD() on unsaved models.,,timgraham,None,2016-10-11T15:48:12Z,2016-10-11T16:09:37Z
7371,Minor clean-up,"Hi @timgraham,

These commits just have some very minor documentation fixes or tweaks, e.g. to use a constant, so I wasn't sure that they warranted a ticket. Please let me know if any of them do...

Thanks!
",pope1ni,None,2016-10-11T13:46:03Z,2016-10-11T16:06:12Z
7370,Fixed #27295 -- Added a system check to prohibit model names that start/end with an underscore or contain double underscores.,https://code.djangoproject.com/ticket/27295,inondle,None,2016-10-11T08:06:14Z,2016-11-22T16:28:39Z
7369,Fixed #19705 -- Set proper headers on conditional Not Modified responses,,marfire,None,2016-10-11T05:39:08Z,2016-10-12T18:44:10Z
7368,Tuning admin's change list,"It's always using `distinct()` if there is an m2m field in list_filter. I think we only need to check if `distinct()` is necessary for fields in lookup params. Correct me if I am wrong.
",nmhung89,None,2016-10-11T04:27:04Z,2016-10-17T20:45:41Z
7367,Fixed #26954 -- Prevented ModelAdmin.has_module_permission()=False from blocking access to the app index page.,"https://code.djangoproject.com/ticket/26954
I added an additional test to https://github.com/django/django/pull/6999.
",timgraham,None,2016-10-10T16:03:53Z,2017-01-19T19:23:25Z
7366,Fixed #27156 - Added a test for GET for setting HTTPRequest.encoding.,"Part of ticket 27113 we included a test for POST for setting HTTPRequest.encoding. We decided to implement the GET test in the later ticket and this ticket was opened for it.
",PREM1980,None,2016-10-10T15:24:15Z,2016-10-28T04:18:43Z
7365,Fixed #15665 -- Fixed inlines on a ModelAdmin with an inline to a child related model.,"https://github.com/django/django/pull/6818 was closed due to inactivity. Here it is again, with Tim's comment included.
",olivierdalang,None,2016-10-10T12:09:54Z,2017-04-02T20:03:23Z
7364,Fixed #27272 -- Added an on_delete RESTRICT handler to allow cascading deletions while protecting direct ones.,"https://code.djangoproject.com/ticket/27272
",izquierdo,None,2016-10-10T07:38:38Z,2019-11-19T10:37:01Z
7363,Fixed #24423 -- Combine i18n template tag tests,"1. Move all template tag (trans and blocktrans) tests from **i18n/test.py** to **template_tests/test_i18n_tags.py**
2. Split trans and blocktrans template tags from **template_tests/syntax_tests/test_i18n.py** into separate files:  **template_tests/syntax_tests/test_trans.py**, **template_tests/syntax_tests/test_blocktrans.py**.
",s0b0lev,None,2016-10-09T15:20:38Z,2016-12-18T05:55:22Z
7362,Update README.rst,,triaquae,None,2016-10-09T10:58:54Z,2016-10-09T17:27:59Z
7361,Fixed #27327 -- Simplified time zone handling by requiring pytz.,"https://code.djangoproject.com/ticket/27327
Proof of concept for discussion at https://groups.google.com/d/topic/django-developers/OAV3FChfuPM/discussion
",timgraham,None,2016-10-08T01:12:10Z,2016-10-27T13:13:13Z
7360,Fixed #27148 -- Fixed ModelMultipleChoiceField crash with invalid UUID.,"https://code.djangoproject.com/ticket/27148
",timgraham,None,2016-10-07T23:22:47Z,2016-10-31T19:21:05Z
7359,Fixed #27324 -- Simplified get_constraints on Oracle.,,felixxm,None,2016-10-07T20:14:01Z,2016-10-14T17:59:14Z
7358,Update django.po,"Translation of ""added"" messages and ""modified"".
",leandrobrunner,None,2016-10-07T18:09:42Z,2016-10-07T20:32:21Z
7357,Fixed #27323 -- Made Oracle introspection use USER_SEQUENCES instead of USER_CATALOG.,,felixxm,None,2016-10-07T18:02:13Z,2016-10-12T22:58:33Z
7356,Updated security policy according to current practices.,"Also added security release date notifications to django-announce.
",timgraham,None,2016-10-07T14:51:45Z,2016-10-15T11:53:09Z
7355,Fixed #25475 -- Doc'd how to use a literal % in Func.template.,"https://code.djangoproject.com/ticket/25475
",timgraham,None,2016-10-07T12:48:49Z,2016-10-07T14:24:45Z
7354,Do not rely on isinstance to find the default engine.,"This allows django_coverage_plugin to work again. (I still have to test django_coverage_plugin ;))
",apollo13,None,2016-10-07T12:26:12Z,2017-01-16T09:09:24Z
7353,Updated security team roster,,MarkusH,None,2016-10-07T12:19:23Z,2016-10-07T14:14:23Z
7352,update documentation,"For newbies to Django, it can be pretty confusing if they miss `django.contrib.auth.backends.ModelBackend` in their default Authentication backends.

e.g: Permissions assigned to a group won't propagate to its member users. This might be a simple added hint when debugging that may save time.
",xgt001,None,2016-10-07T11:27:30Z,2016-10-07T12:26:21Z
7351,Fixed #25751 - Add documentation for JavaScriptCatalog routes to use i18n_patterns.,"This is the only way I could get the Javascript catalog to generate correctly so I assume this has been missed from the docs, or I have missed something else.
https://code.djangoproject.com/ticket/25751
",ben-prezola,None,2016-10-07T11:03:32Z,2016-12-15T15:34:46Z
7350,Stable/1.10.x,,ghost,None,2016-10-07T10:05:40Z,2016-10-07T11:24:58Z
7349,Documented that model instances with pk=None do not compare equal,"After reading it I had to look at the code to clarify that two models with `pk=None` really don't compare equal.
",adamchainz,None,2016-10-07T09:41:34Z,2016-10-07T13:02:17Z
7348,Fixed gis_tests.geoapp when run in isolation.,"""from django.db.models import *"" in contrib/gis/db/models/**init**.py could
obscure gis's functions.py resulting in exceptions like:
""module 'django.db.models.functions' has no attribute 'Union'"".

https://groups.google.com/d/topic/django-developers/0r5xB8lzN7M/discussion
",timgraham,None,2016-10-06T19:19:48Z,2016-10-10T14:13:01Z
7347,Documented that cache keys are strings,"Some libraries have mistakenly used `bytes` for cache keys.
",adamchainz,None,2016-10-06T17:05:08Z,2016-10-27T19:50:55Z
7346,Fixed #27318 -- Return list of failing keys with set_many(),"Both python-memcached and pylibmc return the list of failing keys, but
we (previously) not give this list to the caller.
",ffourcot,None,2016-10-06T13:16:46Z,2016-11-09T12:58:05Z
7345,Fixed #27303 -- Allowed admin FilterSpec objects to return Q-likes.,https://code.djangoproject.com/ticket/27303,yeago,None,2016-10-06T00:45:29Z,2016-12-29T15:05:01Z
7344,Allow admin FilterSpec objects to return Q-likes,,yeago,None,2016-10-06T00:41:31Z,2016-10-06T00:42:51Z
7343,Documentation: corrected word,"This has been fixed already in the documentation for 1.9 and 1.10.
",voidnologo,None,2016-10-05T16:03:50Z,2016-10-05T16:13:47Z
7342,Add doc for `using` param in `render_to_string`.,,frewsxcv,None,2016-10-04T19:21:53Z,2016-10-04T23:30:46Z
7341,Fix typos in docs/ref/contrib/admin/javascript.txt,,aruseni,None,2016-10-04T14:15:36Z,2016-10-04T14:18:09Z
7340,Remove a redundant closing tag in an example,,aruseni,None,2016-10-04T14:11:50Z,2016-10-04T14:13:10Z
7339,Fixed #9363 -- Added callstack capture to CursorDebugWrapper,"Keeps a track of the callstack for each query executed to aid
debugging of assertNumQueries failures.

https://code.djangoproject.com/ticket/9363
",timgraham,None,2016-10-04T12:05:05Z,2016-11-14T17:08:13Z
7338,Refs #27118 -- Reallowed using pk as a field for get_or_create and update_or_create.,"Re-opened ticket: https://code.djangoproject.com/ticket/27118#comment:4

The `pk` property should be ignored when validating `get_or_create` / `update_or_create` field names. The patch feels a bit hacky but I do not see a cleaner way to ignore the property.
",francoisfreitag,None,2016-10-04T03:03:45Z,2016-10-04T14:12:08Z
7337,Fixed #27309 -- Added CallableBool.__hash__().,"Add hash method to CallableBool to support membership test operations for sets.
",aeby,None,2016-10-03T23:52:58Z,2016-10-04T11:44:19Z
7336,Fixed #27279 -- Fixed a migration performance regression related to RenameModel operations.,"Thanks Trac alias mtomiyoshi for the report, Marten Kenbeek for the initial patch and Tim for the upcoming review :)
",charettes,None,2016-10-03T23:25:47Z,2016-10-04T12:36:16Z
7335,Fixed #26327 -- Added JsonAgg to contrib.postgres.,"Aggregation over multiple columns is not supported (as discussed in the Trac ticket).
https://code.djangoproject.com/ticket/26327
",atombrella,None,2016-10-03T09:38:17Z,2016-10-07T12:30:30Z
7334,Fixed #21046 -- Made startproject/app write platform-specific line endings.,,claudep,None,2016-10-02T18:16:54Z,2016-10-20T15:00:57Z
7333,Fixed #27305 -- Removed BaseCommand.can_import_settings unused attribute,,claudep,None,2016-10-02T16:25:18Z,2016-10-02T18:32:58Z
7332,Fixed #27262 -- Delegated URL resolver checks to URL classes.,"I cleaned up  `check_resolver()` to check for a contract (`check(self)`) instead of the patter's type.
By making all individual `check_*()` functions private members of the classes they were written to work with in the first place, the coupling is taken care of. 
Finally, if I am not missing anyhing, the old code would only alert about `startswith_slash` if no other warning (specific to the class) was found (because of `if not warning:` which would't be empty otherwise). **Now** `startswith_slash` is checked by the base class of both patterns `LocaleRegexProvider` regardless of other warnings found.
",lucasloisp,None,2016-10-02T15:34:34Z,2016-10-05T19:34:26Z
7331,Fixed #27302 -- Fixed ModelAdmin.construct_change_message() changed field detection,"Thanks Ramiro Morales for the report.
",claudep,None,2016-10-01T17:35:45Z,2016-10-01T18:15:46Z
7330,"Fixed #27218 -- Returned LogEntry instances from log_addition, log_change, log_deletion","Ticket: https://code.djangoproject.com/ticket/27218

This change makes it easier to alter a `LogEntry` in a custom `ModelAdmin` subclass overriding `log_addition`, `log_change` or `log_deletion`.
",francoisfreitag,None,2016-09-30T22:16:42Z,2016-10-04T18:09:45Z
7329,Fixed #27300 -- Made makemigrations --dry-run output a string (no bytes),,claudep,None,2016-09-30T16:49:44Z,2016-10-06T09:42:41Z
7328,Refs #26940 -- Re-allowed makemessages without settings,,claudep,None,2016-09-30T15:32:14Z,2016-10-01T13:01:56Z
7327,Refs #27210 -- Fixed isolation of test_fail_silently_on_connection_error.,"The test wouldn't pass if a mail server is running on the system.
",timgraham,None,2016-09-30T14:38:47Z,2016-09-30T16:22:53Z
7326,Fixed #27300 -- Fixed encoding of makemigrations output,"When using --dry-run and -v 3 with makemigrations on Python 3 the
content of the migration file is not properly decoded.
",MarkusH,None,2016-09-30T14:11:55Z,2016-09-30T17:46:57Z
7325,Fixed #27301 -- Prevented exceptions that fail unpickling from crashing the parallel test runner.,"Until now we've only been checking whether the error can be pickled, but some errors get through that and then fail during unpickling in the main process causing the Pool management code to blow up.

One example of error like that is botocore.exceptions.ClientError which pickles as ""ClientError(message)"", but its initializer is actually ClientError(response, operation_name). This causes the parallel test runner to fail with:

```
multiprocessing/connection.py"", line 251, in recv
    return ForkingPickler.loads(buf.getbuffer())
TypeError: __init__() missing 1 required positional argument: 'operation_name'
```

CC @aaugustin @cjerdonek 
",amw,None,2016-09-30T13:22:20Z,2016-10-06T19:54:38Z
7324,"Reverted ""Fixed #26140 -- Suppressed MySQL warning when inserting binary content""","This reverts commit 204e00c0c57c34528157a739389b6935e4af2f36 as mysqlclient
1.3.8 is now handling the issue.
",timgraham,None,2016-09-30T01:19:31Z,2016-09-30T13:09:15Z
7323,Refs #18974 -- Deprecated @models.permalink() decorator.,"https://code.djangoproject.com/ticket/18974
",timgraham,None,2016-09-30T00:45:33Z,2016-10-04T18:39:49Z
7322,Confirmed support for PostGIS 2.3.,,timgraham,None,2016-09-30T00:33:17Z,2016-09-30T14:36:45Z
7321,Fixed doc typos,,lostick,None,2016-09-29T23:09:14Z,2016-09-29T23:59:00Z
7320,Fixed #26541 -- Allowed MySQL transaction detection to work without table creation.,"https://code.djangoproject.com/ticket/26541

New algorithm for mySQL that determines whether the database supports transactions.
",felixxm,None,2016-09-29T19:07:32Z,2016-10-01T14:04:24Z
7319,Fixed #27193 -- Preserved ordering in select_for_update() subqueries.,"A user should be able to control the rows' locking order on the DB when using select_for_update in a sub-query. One possible goal would be to prevent deadlocks.

Trac ticket: https://code.djangoproject.com/ticket/27193.
",francoisfreitag,None,2016-09-29T17:22:50Z,2016-10-04T14:50:36Z
7318,Refs #27186 -- Fixed model form default fallback for CheckboxSelectMultiple.,"https://code.djangoproject.com/ticket/27186
",timgraham,None,2016-09-29T16:12:46Z,2016-09-30T18:49:50Z
7317,Timezone docs fix,"Docs have typo in some imports that are sure to confuse users. Also apparently I never added myself to the AUTHORS file in the past. 
",frankwiles,None,2016-09-29T15:50:09Z,2016-09-29T16:06:52Z
7316,Fixed #27294 -- Documented UserCreationForm's fields.,"Please see 
- https://github.com/django/django/pull/7314
- https://code.djangoproject.com/ticket/27294

Special thanks to @timgraham for assistance
",Lewiscowles1986,None,2016-09-29T14:28:32Z,2016-09-30T18:02:52Z
7315,Removed unneeded no_settings_commands hardcoded list,,claudep,None,2016-09-29T13:19:42Z,2016-09-30T15:27:29Z
7314,Added detail to UserCreationForm,"Adds details of fields / properties of UserCreationForm

Ticket https://code.djangoproject.com/ticket/27294#comment:1
",Lewiscowles1986,None,2016-09-29T11:05:51Z,2016-09-29T14:28:46Z
7313,Fix validity of HTML in geometry widgets,"This fix for https://code.djangoproject.com/ticket/27055 is not yet entirely finished, but at this point I need review and ideas on how to unit test it.
",aptiko,None,2016-09-29T07:01:23Z,2016-09-30T12:59:31Z
7312,Fixed #27291 -- Fixed CheckboxSelectMultiple using default values,"See https://code.djangoproject.com/ticket/27291
",stephenmcd,None,2016-09-29T05:44:02Z,2016-09-29T11:47:44Z
7311,Fix django.contrib.postgres typo in documentation,"The documentation points to the non-existent `django.contrib.postgresql` module, which this commit replaces with `django.contrib.postgres`.
",christianbundy,None,2016-09-28T18:18:47Z,2016-09-28T18:26:14Z
7310,Fixed #11078 -- Doc'd meta attributes present in proxy models,"https://code.djangoproject.com/ticket/11078

Proxy models `Meta` inheritance works the same as described in Meta
and multi table inheritance.
",joncasdam,None,2016-09-28T16:29:55Z,2016-10-04T23:54:28Z
7309,Fixed #27273 -- Added a construct_change_message() admin utility function.,"https://code.djangoproject.com/ticket/27273
",timgraham,None,2016-09-28T16:29:11Z,2016-10-05T12:02:34Z
7308,Doc'd the need to provide initial for formset submissions.,"inspired by https://code.djangoproject.com/ticket/27280
",timgraham,None,2016-09-28T15:22:07Z,2016-10-10T19:36:21Z
7307,Fixed #27289 -- Corrected View.as_view() explanation.,"https://code.djangoproject.com/ticket/27289
",timgraham,None,2016-09-28T15:00:52Z,2016-09-28T15:40:14Z
7306,Fixed 27283 -- Fixed typo in 1.8 release notes.,"Thanks Vinay Singh for reporting.
",alasdairnicol,None,2016-09-28T09:25:49Z,2016-09-28T10:50:49Z
7305,Fixed #27217 -- Fixed CreateModel optimization with models that use mixins.,"https://code.djangoproject.com/ticket/27217
",timgraham,None,2016-09-28T01:15:38Z,2016-09-28T14:04:53Z
7304,Split admin_docs tests into separate files.,,timgraham,None,2016-09-27T19:49:56Z,2016-09-27T22:55:07Z
7303,Fixed #27268 --  Regression on error message for invalid related fields lookup in QuerySet.get(),"https://code.djangoproject.com/ticket/27268
",felixxm,None,2016-09-27T18:40:07Z,2016-09-27T19:00:36Z
7302,Fixed #27282 -- Allowed using an integer DATABASES['PORT'] for Oracle.,"this change fixes https://code.djangoproject.com/ticket/27282#ticket
",Zapelini,None,2016-09-27T16:35:16Z,2017-01-19T17:56:12Z
7301,Stable/1.10.x,,bilahari,None,2016-09-27T15:34:19Z,2016-09-27T16:01:47Z
7300,Fixed #18119 -- Added a DomainNameValidator validator.,"https://code.djangoproject.com/ticket/18119
",berkerpeksag,None,2016-09-27T01:58:20Z,2020-01-02T13:58:41Z
7299,Added a CVE role for Sphinx.,,timgraham,None,2016-09-26T21:07:36Z,2016-09-26T22:21:38Z
7298,Removed DatabaseError and IntegrityError declarations from database backends,"Afaict these haven't been required since 11ee9746a0530ec38f523fb4de44950d9b783877.
",adamchainz,None,2016-09-26T17:21:16Z,2016-09-26T22:31:42Z
7297,Removed bad name 'backend' django.db's __all__,"This hasn't existed since 051c666acac770dea1af2fc223cc695f985f02f7 and thus `from django.db import *` has been broken since. This also comes with the discovery that the `pyflakes` checker for this (`flake8` code F821) doesn't work unless `__all__` is a `tuple`, presumably because if it's a `list` it's mutable.
",adamchainz,None,2016-09-26T17:10:34Z,2016-09-26T23:04:18Z
7296,Fixed #27266 -- Allowed using assertFormError()/assertFormsetError() in admin forms and formsets.,"https://code.djangoproject.com/ticket/27266
",timgraham,None,2016-09-26T16:39:17Z,2016-09-27T13:56:20Z
7295,Fixed #27276 -- Add login to Reverse admin URL's list at docs,"https://code.djangoproject.com/ticket/27276

This was overlooked at 5848bea9dc9458a9517d4c98993d742976771342 when the named `url()` for `login` was added.
",joncasdam,None,2016-09-26T14:15:43Z,2016-09-26T14:38:34Z
7294,Fixed #27271 - Made ServerFormatter able to handle simple messages,"After this fix ServerFormatter will be able to format simple string
messages or messages with formatting arguments. Also it will set
server_time varible to log record created time if it is required by
format string and wasn't passed in extra parameters
",GeyseR,None,2016-09-25T23:04:27Z,2016-09-27T13:53:46Z
7293,Removed support for setting query.group_by.,"Hack from 0c7633178fa9410f102e4708cef979b873bccb76.

Not sure if it's acceptable to remove this at this time. If so, maybe a release note is needed? If not, should we add a test, and is there a ticket and/or idea for how to implement this feature?
",timgraham,None,2016-09-25T00:42:31Z,2016-09-27T14:04:22Z
7292,Removed obsolete lines in DeferredAttribute.__get__().,"Obsolete as of c21e86ab9e3e5ebd6d245d038cb0cb352cd84c3a.
",timgraham,None,2016-09-24T23:55:01Z,2016-09-26T22:47:07Z
7291,Removed unused SubqueryConstraint.relabel_aliases() and clone() methods.,"Unused since b68212f539f206679580afbfd008e7d329c9cd31 although no tests
fail if clone() is removed in the commit in which it was introduced,
d467e117856a7fa6da5e90471144aaa82d822065.

Possibly some test coverage is missing here, not sure.
",timgraham,None,2016-09-24T22:08:25Z,2016-10-12T12:18:56Z
7290,Removed unused branch in SQLCompiler.as_subquery_condition(),"Unused since dcdc579d162b750ee3449e34efd772703592faca.
",timgraham,None,2016-09-24T18:16:28Z,2016-09-27T13:58:53Z
7289,Fixed #20939 -- Simplified query generation by converting QuerySet to Query.,"https://code.djangoproject.com/ticket/20939
(Rebased and updated Anssi's initial patch to see if this still makes sense to do and for me to try to learn more about query generation.)
",timgraham,None,2016-09-23T23:40:36Z,2016-10-28T15:20:23Z
7288,Removed unused FieldGetDbPrepValueMixin.get_prep_lookup_value(),"Unused since its introduction in 4f138fe5a496a81115c4fba6615a517fc62c3b17.
",timgraham,None,2016-09-23T22:35:14Z,2016-09-24T21:30:43Z
7287,Removed unused Prefetch.get_current_prefetch_through().,"Unused since its introduction in f51c1f590085556abca44fd2a49618162203b2ec.
",timgraham,None,2016-09-23T21:13:26Z,2016-09-24T10:28:18Z
7286,Simplified has_perm() method in topics/auth/customizing.txt.,,berkerpeksag,None,2016-09-23T19:18:32Z,2016-09-23T19:28:32Z
7285,Removed unused regexes from django.utils.html.,"Last uses removed in commit 8b81dee60c1533e714a310fa5c3907356042a64c.

---

Wanted to check these weren't intentionally left in.

I noticed that some of these are mentioned in the test file [`strip_tags1.html`](https://github.com/django/django/blob/master/tests/utils_tests/files/strip_tags1.html). It looks to be used as a pathological test case? Not sure if I should remove these as well.
",jdufresne,None,2016-09-23T01:09:08Z,2016-09-23T18:24:50Z
7284,Made setup.py use HTTPS link to djangoproject.com,"The site redirects but you can never be too careful.
",adamchainz,None,2016-09-22T21:32:54Z,2016-09-22T23:37:20Z
7283,Django is now stable,"I think it's time to promote Django to being listed as Production/Stable on PyPI.
",adamchainz,None,2016-09-22T21:27:33Z,2016-09-22T21:50:46Z
7282,Fixed #27210 -- Allowed SMTPBackend to fail silently on a socket connection error.,"https://code.djangoproject.com/ticket/27210
",vesteinn,None,2016-09-22T15:28:38Z,2016-09-27T18:34:50Z
7281,Fixed #27210 -- Allowed SMTPBackend to fail silently on a socket connection error.,"…ently work on ConnectionError
",vesteinn,None,2016-09-22T14:21:44Z,2016-09-22T16:16:21Z
7280,Fixed #25361: Unpickling of QuerySet fails in presence of abstract intermediate model,"This is to fix this issue with pickling fields on abstract models.

https://code.djangoproject.com/ticket/25361#comment:2
",LegoStormtroopr,None,2016-09-22T06:20:59Z,2017-12-11T04:39:25Z
7279,Fixed #27257 -- Used the ->> operator when filtering  builtin text lookups on JSONField keys.,,charettes,None,2016-09-22T02:07:22Z,2016-09-23T02:39:18Z
7278,Fix makemessages on Windows by forcing newline='\n'.,"The default behavior of `io.open()` is to convert `""\n""` to `os.linesep`, that may cause problem on Windows.
This works for Python 2 & 3.
See: https://docs.python.org/2/library/io.html?highlight=io.open#io.open
",wismill,None,2016-09-21T16:46:21Z,2016-09-21T18:06:44Z
7277,Optimization for get_search_results() in admin,"When searching in fields of reverse relations, the previous implementation for constructing the queryset inside the get_search_results() method, caused Django ORM to introduce unnecessary JOINs in the final query (related issues: https://code.djangoproject.com/ticket/16603 and https://code.djangoproject.com/ticket/25789). The more words were in the search term the more inefficient was the query. This small patch seems that it makes Django ORM take a different path that does not introduce unnecessary JOINs. Searching with a great number of words in the searching term is not a problem anymore.
",Ernest0x,None,2016-09-21T16:39:12Z,2019-03-05T19:39:28Z
7276,Refs #16682 -- Tested transaction.atomic() with KeyboardInterrupt.,"I didn't study the differences in the implementations of `atomic()` vs. `commit_on_success()` to understand if this test brings any value. @aaugustin, can you advise without much investigation?
https://code.djangoproject.com/ticket/16682
",timgraham,None,2016-09-21T15:29:59Z,2016-09-21T19:21:09Z
7275,"Doc'd how to use GitHub's ""Squash and merge"" button.",,timgraham,None,2016-09-21T13:39:46Z,2016-09-21T16:13:21Z
7274,"Test model signals ""sender"" parameter is correct when defer() is used","This was fixed when dynamic classes for deferred instance loading was changed in 7f51876f99851fdc3fef63aecdfbcffa199c26b9.
",diox,None,2016-09-21T10:37:27Z,2016-09-21T19:29:35Z
7273,Added myself to ops team,,MarkusH,None,2016-09-21T06:18:37Z,2016-09-21T07:42:03Z
7272,Fixed #27256 -- Changed Select widget's selected attribute to use HTML5 boolean syntax.,,jdufresne,None,2016-09-21T04:01:12Z,2016-09-21T22:12:13Z
7271,Fixed #26210 -- Prevented SMTP backend from trying to send mail after a connection failure.,,mlevental,None,2016-09-20T17:40:12Z,2016-09-21T20:47:01Z
7270,Fixed #27076 -- Document django.contrib.admin.sites.AdminSite.register(),"https://code.djangoproject.com/ticket/27076
",autto91,None,2016-09-20T03:33:02Z,2016-09-27T16:19:05Z
7269,Fixed #27238 -- Disabled check_pattern_startswith_slash if settings.A…,"…PPEND_SLASH=False

Thanks strycore for the report and timgraham for suggesting the
approach taken.
",alasdairnicol,None,2016-09-19T20:25:27Z,2016-09-20T01:01:42Z
7268,Refs #27025 -- Fixed ArrayField querying on Python 3.6.,"Python 3.6 parses strings like '0_1' as numeric literals.
http://bugs.python.org/issue26331

With a couple extra tests so I didn't break some things while refactoring.
",timgraham,None,2016-09-19T20:03:42Z,2016-09-20T14:39:57Z
7267,Fixed #27244 -- Corrected thousand separator for the Greek locale,"Direct link to ticket: https://code.djangoproject.com/ticket/27244. Pinging @spapas @pmav99 for a +1.
",kappataumu,None,2016-09-19T13:54:01Z,2016-10-06T15:52:29Z
7266,Fixed #27158 -- Fixed positioning of admin's many-to-many widgets in rtl.css,"https://code.djangoproject.com/ticket/27158
",mehdipourfar,None,2016-09-19T13:33:14Z,2016-09-22T23:24:33Z
7265,Fixed #20705 -- Made PasswordResetForm usable for user models that use an email field not named 'email'.,"https://code.djangoproject.com/ticket/20705
",mlevental,None,2016-09-19T13:00:35Z,2016-09-27T16:02:17Z
7264,Fixed #27056 -- Allowed migrating geometry field dimension on PostGIS,,claudep,None,2016-09-18T19:49:23Z,2016-09-22T15:40:11Z
7263,[az] locale format fix,"Removed invalid character from datetime format in Azerbaijani locale.

Character is in cyrillic alphabet, meaning is year. Azerbaijani switched to latin letters after Soviets and we don't add il (meaning year) in when writing date time format (we use it in a long form like: 18 May 2016[-cı, -ci, -cu, -cü - depending on number] il, 18:00. Without adding that affix to year value there is no meaning for using word ""year"" (il).)
",mastizada,None,2016-09-18T14:44:59Z,2016-09-19T12:23:51Z
7262,Fixed #27165 -- Remove unnecessary 'indexes': [] in CreateModel in migrations file,"Ticket [#27165](https://code.djangoproject.com/ticket/27165#ticket).
",akki,None,2016-09-18T08:21:22Z,2016-09-19T14:17:16Z
7261,Fix a typo in docs,,aruseni,None,2016-09-17T21:03:15Z,2016-09-18T00:09:15Z
7260,Update fields.txt,"According to the lines from 857 to 860 of [this file](https://github.com/django/django/blob/master/django/db/models/fields/__init__.py), `~django.forms.TypedChoiceField` is only returned when `choices_form_class` is `None`.
",xiangnanscu,None,2016-09-17T17:20:24Z,2016-09-17T18:28:21Z
7259,Refactored PostGIS index creation,"Less special-casing and code more in line with 'normal' index creation.
",claudep,None,2016-09-17T16:02:41Z,2016-09-17T17:45:16Z
7258,Stopped deleting from the geometry_columns view on PostGIS,,claudep,None,2016-09-17T14:09:34Z,2016-09-17T14:40:11Z
7257,Refs #27118 -- Made FieldDoesNotExist messages uniform across Python versions,"This PR relates to #7255.

The exception message used `repr` to format the field name. The field name is unicode and its `repr` changes depending on the version of Python:
- Python 2: `u'field_name'`
- Python 3: `'field_name'`

This is not handy to test and lead to the use of `six.assertRaisesRegex()` to tolerate the presence of the leading `u` character. A more consistent approach is to use `'%s'` in the exception message instead of `%r`, to make sure the message is the same on both versions.
",francoisfreitag,None,2016-09-17T01:21:34Z,2016-09-17T13:29:14Z
7256,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,"https://code.djangoproject.com/ticket/26447

Updated from https://github.com/django/django/pull/6393
",timgraham,None,2016-09-16T22:46:57Z,2016-10-10T19:20:24Z
7255,Fixed #27118 -- Made get_or_create()/update_or_create() error for a non-field in defaults.,"Specifying an incorrect field in the `get_or_create` / `update_or_create` should not fail silently because it is likely a programming error.

For more details, see https://code.djangoproject.com/ticket/27118.

As Tim noted, this is a backward-incompatible change. If a smoother landing of this feature seems like a better option, we could first raise a warning then turn it into an error in a next version.

This solution covers for incorrect defaults and incorrect exact keyword arguments (without `LOOKUP_SEP`) that would be used for the model creation. It does not cover invalid non-exact lookups such as `does_not_exist__icontains`.

I would not document this change outside of the changelog as I would have expected Django to tell me if my defaults / fields lookups were incorrect, but it could help some users if an error pops out during a version upgrade. What do you think?
",francoisfreitag,None,2016-09-16T19:56:54Z,2016-09-25T00:21:32Z
7254,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.","http://bugs.python.org/issue27364
",timgraham,None,2016-09-16T16:27:57Z,2016-09-17T20:47:38Z
7253,Fixed #27235 -- Removed usage of mutable default arguments.,"https://code.djangoproject.com/ticket/27235
",lamby,None,2016-09-16T09:15:59Z,2016-09-16T19:48:42Z
7252,Fixed #24941 -- Added ModelAdmin.get_exclude() hook.,"Continuing the work of #5214.
",zachborboa,None,2016-09-16T05:54:08Z,2016-10-07T23:00:23Z
7251,Fixed #27230 -- Made AppConfig.path always return absolute path,,vinayinvicible,None,2016-09-15T20:40:37Z,2016-09-16T14:18:00Z
7250,Fixed #26697 -- Dropped contrib.gis.maps.,"https://code.djangoproject.com/ticket/26697
",timgraham,None,2016-09-15T20:25:39Z,2016-09-16T19:41:26Z
7249,Refs #27025 -- Fixed a few test failures on Python 3.6.,,timgraham,None,2016-09-15T16:24:19Z,2016-09-16T14:59:47Z
7248,Fixed #27229 -- Aggregates in admin change lists,"Example:

![django-admin](https://cloud.githubusercontent.com/assets/1499307/18555738/964622e0-7b71-11e6-9a53-3a525ba25b4b.png)
",dorfire,None,2016-09-15T15:24:27Z,2017-06-01T23:13:38Z
7247,Fixed #27226 -- Removed Last-Modified header setting in cache.patch_response_headers().,,renskiy,None,2016-09-15T08:25:40Z,2016-09-28T13:13:26Z
7246,Fixed #27225 -- Made FetchFromCacheMiddleware set Age header for cached responses.,"https://code.djangoproject.com/ticket/27225
",renskiy,None,2016-09-15T05:43:07Z,2019-09-18T13:35:40Z
7245,Refs #5133 -- Isolated test_close() cache test.,"\cc @edmorley 
",timgraham,None,2016-09-14T18:26:53Z,2016-09-16T16:45:46Z
7244,Fixed #27222 -- Refreshed fields that are expressions after Model.save().,"https://code.djangoproject.com/ticket/27222
",holvianssi,None,2016-09-14T11:09:34Z,2017-01-09T21:01:10Z
7243,Use triple-quotes in docstrings,"I'm not sure if this is a priority, however, it's addressed in PEP8 with PEP257. There were quite a lot of them.

It was quick to find (and fix) them with PyCharm, so I won't be discouraged if the PR is closed without being merged.
",atombrella,None,2016-09-13T20:41:02Z,2016-09-16T20:21:23Z
7242,Fixed #27216 -- Corrected import location in admin deprecation messages.,"Fixed the referenced deprecation messages
",jeffwillette,None,2016-09-13T14:51:01Z,2016-09-13T17:45:24Z
7241,Fixed #27219 -- Changed cx_Oracle client encoding to AL32UTF8.,"As per documentation at

https://docs.oracle.com/database/121/NLSPG/ch6unicode.htm#NLSPG-GUID-EB57AB68-A390-4814-81DD-6B78D33310CC

Developers are recommended to switch to AL32UTF8 that supports the most
recent Unicode standard and is able to encode 4-byte supplementary
characters properly, unlike UTF8 encoding, that supports only Unicode
version 3 and is unable to properly encode 4-byte characters.

Currently with latest Django I can't store emojis in TextFields using Oracle.
With this change, however, it seems to work for me.

I understand that this needs some tests, so I ask for someone with better knowledge to assist me and direct me to where should I put the tests.

https://code.djangoproject.com/ticket/27219
",dmedvinsky,None,2016-09-13T12:17:25Z,2016-09-20T00:26:50Z
7240,Refs #27083 -- Updated conditional header comparison to match RFC 7232.,"This is the second part of the original commit for #7112, addressing [ticket #27083](https://code.djangoproject.com/ticket/27083).
",marfire,None,2016-09-13T04:05:12Z,2016-09-16T19:46:40Z
7239,Fixed #27214 -- Made skip db features decorators respect wrapping order and inheritance.,,charettes,None,2016-09-13T02:09:14Z,2016-09-13T18:13:13Z
7238,Fixed #15143 -- Doc'd how to set the language for the test client.,"Added a new section to the testing tools topic documentation, regarding how to set the language for a test client request in a test case.
",mscott250,None,2016-09-12T20:41:44Z,2016-09-15T00:14:47Z
7237,fix document in `Managing static files` doumentation page,"fix document in `Managing static files` doumentation page.(`myimage.jpg` replaced with `myexample.jpg`)
",hramezani,None,2016-09-12T20:00:55Z,2016-09-12T20:16:40Z
7236,"Fixed #27211 -- Made UpdateCacheMiddleware include caching headers for ""304 Not Modified"" responses.","https://code.djangoproject.com/ticket/27211
",renskiy,None,2016-09-12T14:21:02Z,2016-09-14T23:40:47Z
7235,Fixed #27206 -- Corrected MONTH_DAY/DATE_FORMAT for et locale.,"Actually noticed that MONTH_DAY_FORMAT is also incorrect. Other formats currently present seem fine to me.
",merike,None,2016-09-12T08:41:53Z,2016-09-13T19:54:16Z
7234,Fixed #27209 -- Adjusted Cast() docs to pass a field instance instead of a class.,"https://code.djangoproject.com/ticket/27209
",charettes,None,2016-09-12T01:52:34Z,2016-09-12T12:07:31Z
7233,Fixed #15143 -- Documented how to set the language for the test client.,"Added a new section to the testing tools topic documentation, regarding how to set the language for a test client request in a test case.
",mscott250,None,2016-09-11T20:39:29Z,2016-09-12T21:18:00Z
7232,Fixed #26524 -- Fixed crash in admin change view when displaying many to many forward refs.,"Thanks Tim Graham for the regression test.

https://code.djangoproject.com/ticket/26524
",jdufresne,None,2016-09-11T19:10:26Z,2016-09-13T03:16:34Z
7231,Fixed #24607 -- Serialized natural keys in multi-table inheritance models.,"When using natural foreign keys and natural primary keys, we need to
ensure the pointer to the superclass instance is in the serialized
output of the subclass instance, so we can relate them.
",jpmelos,None,2016-09-11T12:44:04Z,2020-05-12T12:40:40Z
7230,"Fixed #27184 -- In TestClient, don't assume uploaded file's 'name' attr is a string.",,thomas-scrace,None,2016-09-11T09:28:34Z,2016-11-08T23:03:17Z
7229,Fixed #15855: include Vary header to cached response,"https://code.djangoproject.com/ticket/15855
",renskiy,None,2016-09-11T06:59:50Z,2020-08-05T10:34:31Z
7228,Used a database feature to prevent the jsonb test model from being migrated.,,charettes,None,2016-09-10T23:24:16Z,2016-09-13T00:08:10Z
7227,Refs #25415 -- Stopped running checks on models with missing features.,,charettes,None,2016-09-10T22:44:32Z,2016-11-05T23:23:25Z
7226,Fixed #27203 -- Replaced assertQuerysetEqual lambda o: o to use asser…,"…tSequenceEqual
",atombrella,None,2016-09-10T09:48:22Z,2017-09-05T16:17:28Z
7225,Fixed #27198 -- MultiValueDict getlist returns now a new list,"Fixed issue where QueryDict getlist() returned original list which was mutable. Now getlist returns a new (mutable) list that doesn't affect QueryDict itself.

Actual implementation is now in MultiValueDict instead of QueryDict.

https://code.djangoproject.com/ticket/27198
",jtiai,None,2016-09-10T09:34:53Z,2016-09-16T19:16:52Z
7224,Fixed #27204 -- Made clashing m2m intermediary table checks ignore unmanaged models.,"https://code.djangoproject.com/ticket/27204
",timgraham,None,2016-09-09T22:58:27Z,2016-09-09T23:21:08Z
7223,Fixed #27062 -- Eased implementing select_for_update() on MSSQL.,"I added a test to https://github.com/django/django/pull/5667.
",timgraham,None,2016-09-09T14:24:26Z,2016-09-09T16:30:27Z
7222,Organized forms_tests test_regressions.py.,,timgraham,None,2016-09-08T23:45:42Z,2016-09-09T12:55:29Z
7221,Fixed #27159 -- Prevented pickling a query with an __in=inner_qs lookup from evaluating inner_qs.,"Fixing the issue that RelatedIn right hand side was always pickled as is, thus resulting pickling the whole queryset. Now only query is pickled from RHS.

https://code.djangoproject.com/ticket/27159
",jtiai,None,2016-09-08T16:48:47Z,2016-09-23T00:06:23Z
7220,Fixed #27199 -- Made AdminIntegerFieldWidget use NumberInput.,,renskiy,None,2016-09-08T16:00:14Z,2016-09-09T13:43:00Z
7219,Fixed #27195 -- Stopped DROPing DEFAULT on NULLable column addition.,"Thanks Rob Golding from Zapier for the report.
",charettes,None,2016-09-08T05:01:20Z,2016-09-09T05:40:36Z
7218,Refs #15250 -- Removed an obsolete comment regarding MTI cascade deletion.,,charettes,None,2016-09-08T04:21:43Z,2016-09-08T17:30:02Z
7217,"Fixed #27186 -- Fixed model form default fallback for MultiWidget, FileInput, SplitDateTimeWidget, SelectDateWidget, and SplitArrayWidget.","https://code.djangoproject.com/ticket/27186
",timgraham,None,2016-09-07T14:32:29Z,2016-09-22T17:05:55Z
7216,Fixed #27180 -- Fixed a crash in MySQL checks where SELECT @@sql_mode doesn't return a result.,"https://code.djangoproject.com/ticket/27180
",gerricom,None,2016-09-07T11:44:44Z,2016-09-07T15:18:42Z
7215,Fixed #27191 -- Error reports generation for requests with 'items' in querydicts.,"https://code.djangoproject.com/ticket/27191
",anatolyrr,None,2016-09-07T11:14:14Z,2016-09-07T17:56:16Z
7214,Fixed #27172 -- Closed database cursor explicitly in two doc examples.,,cjerdonek,None,2016-09-06T17:33:07Z,2016-09-07T10:14:29Z
7213,Fix import of MethodType,"Don't pretend that types.MethodType is influenced by six
",funkybob,None,2016-09-06T10:24:30Z,2016-09-06T11:23:28Z
7212,correct isinstance call,"Since six.string_types is a tuple, it should be concatenated with (bytes,) to form the set of types.
",funkybob,None,2016-09-06T09:41:51Z,2016-09-09T14:13:41Z
7211,Fixed #27174 -- Explained where PollsConfig comes from in tutorial 2.,"https://code.djangoproject.com/ticket/27174
",ankur0493,None,2016-09-06T06:23:29Z,2016-09-07T18:16:50Z
7210,Fixed #27179 -- Added parenthesis to KeyTransform for postgres JSONField,"https://code.djangoproject.com/ticket/27179
",jrhouston,None,2016-09-05T12:37:49Z,2016-09-07T18:22:59Z
7209,fixed a mistake in translation,,1u4nx,None,2016-09-05T08:22:30Z,2016-09-05T15:56:31Z
7208,Fixed #27175 -- Deprecated silencing exceptions from the {% include %} template tag.,"https://code.djangoproject.com/ticket/27175

https://groups.google.com/forum/#!topic/django-developers/hscW1VboJxY
",jdufresne,None,2016-09-04T16:18:42Z,2016-09-09T01:24:23Z
7207,Removed backslash line continuations in import statements.,,cjerdonek,None,2016-09-03T21:09:29Z,2016-09-05T17:00:52Z
7206,Fixed #27170 -- Made database backends easier to subclass.,"https://code.djangoproject.com/ticket/27170
",cjerdonek,None,2016-09-03T19:35:23Z,2016-09-08T20:33:37Z
7205,Refs #25706 -- Moved GIS-related JavaScript out of templates,,claudep,None,2016-09-03T16:38:34Z,2020-03-17T10:27:09Z
7204,Fixed #25788 -- Enabled the cached template loader if debug is False.,"https://code.djangoproject.com/ticket/25788

Updated from https://github.com/django/django/pull/6954 to fix tests. A few tests relied on the default loaders and needed to have them specified so the cached loader isn't used instead.
",timgraham,None,2016-09-02T21:53:46Z,2016-09-03T19:51:18Z
7203,Replaced smart_* by force_* calls whenever possible,,claudep,None,2016-09-02T18:19:38Z,2016-09-03T13:17:07Z
7202,ProcessFormView: method get_context_data  lose params,"ProcessFormView: method get_context_data  lose params

class ProcessFormView(View):
    """"""
    A mixin that renders a form on GET and processes it on POST.
    """"""
    def get(self, request, _args, *_kwargs):
        """"""
        Handles GET requests and instantiates a blank version of the form.
        """"""
        # old is =>  return self.render_to_response(self.get_context_data())
        return self.render_to_response(self.get_context_data(**kwargs))
",ibuler,None,2016-09-02T16:13:13Z,2016-09-02T17:01:13Z
7201,Fixed #27171 -- Added unicode_literals and coding preamble to all files in startapp template on Python 2.,"If you using non askii symbols on python2, like Cyrillic alphabet, you still have an error
'SyntaxError: Non-ASCII character' because encoding is not specified. 
Also admin and views templates needed unicode_literals.
For example, when you put some comments with non askii characters or raises an error message with it.
",baterson,None,2016-09-02T11:54:16Z,2020-03-26T16:55:03Z
7200,Fixed #11331 -- Stopped closing pylibmc connections after each request.,"Since this resets the failover state, and creates an unnecessary amount of reconnects. libmemcached manages its own connections, so isn't affected by [ticket 5133](https://code.djangoproject.com/ticket/5133).

Fixes:
https://code.djangoproject.com/ticket/11331

Supersedes PR #4866.
",edmorley,None,2016-09-02T09:03:11Z,2016-09-15T13:01:33Z
7199,Fixed #27099 added note to ModelAdmin.list_filter doc,"- Documented that ModelAdmin.list_filter does not display in the admin site if there is only one choice for the filter
- Fixed a typo in the fix for #27099
",jeffwillette,None,2016-09-02T01:50:36Z,2016-09-02T13:43:05Z
7198,Added documentation about migration history consistency checks,"And in particular, on consistency checks with multiple databases
Refs #27142, #27110

(ended up adding to both migrations and multi-db)
",shaib,None,2016-09-01T20:32:39Z,2016-09-01T22:50:25Z
7197,Updated release process docs to link to roadmap for 1.11.,"I know it says ""e.g."", but it was my entrypoint for finding the roadmap and saves having to manually update the URL after.
",edmorley,None,2016-09-01T18:09:24Z,2016-09-01T19:18:56Z
7196,Refs #23813 -- Clarified url check W0002 message.,"In cases the url is included and the include statement does not
have a trailing slash you are breaking your urls. So extend the
message noticing the possibility.
",xrmx,None,2016-09-01T13:44:13Z,2016-09-01T18:09:13Z
7195,Refs #27039 -- Fixed regression with default fields in prefixed forms,"See [Trac ticket 27039](https://code.djangoproject.com/ticket/27039#comment:12)
",AlexHill,None,2016-09-01T05:20:47Z,2016-09-01T13:18:52Z
7194,"Fixed #27142, #27110 -- Made makemigrations consistency checks respect database routers.","Partially reverted refs #27054 except for one of the tests as this solution supersedes that one.

https://code.djangoproject.com/ticket/27142
https://code.djangoproject.com/ticket/27110
https://code.djangoproject.com/ticket/27054
",timgraham,None,2016-08-31T20:03:08Z,2017-01-04T18:52:34Z
7193,Fixed #27162 -- Moved CreateExtension migration operation to core,,claudep,None,2016-08-31T15:50:25Z,2016-09-01T14:01:35Z
7192,"Added search filter and key events to ""chosen"" side.",,DustinDobernig,None,2016-08-31T14:55:20Z,2016-08-31T15:34:34Z
7191,Fixed #27152 -- Supported comma delimiter in memcached LOCATION string.,"The alternative was a `server.replace(',', ';').split(';')`, however I think the `re.split()` is cleaner.

https://code.djangoproject.com/ticket/27152
",edmorley,None,2016-08-31T14:21:21Z,2016-08-31T21:26:34Z
7190,Fixed #27154 -- Implemented __or__ method for CallableBool,"https://code.djangoproject.com/ticket/27154
",alexyer,None,2016-08-31T08:12:38Z,2016-08-31T12:28:57Z
7189,Fixed #27163 -- Allowed a colon separated pythonpath in django-admin.,"I have my `INSTALLED_APPS` in separate directories (packages) and would like to supply multiple paths to `django-admin` via the `pythonpath` parameter.

For example:

```
django-admin dbshell --settings=myapp.settings --pythonpath ""admin:lib""
```

I do not want to use pip as described here: https://docs.djangoproject.com/en/1.10/intro/reusable-apps/#using-your-own-package
",AlJohri,None,2016-08-31T04:44:12Z,2016-09-01T05:55:19Z
7188,Fixed #26401 -- Added BaseAuthConfig to use auth without database tables.,"https://code.djangoproject.com/ticket/26401

---

I'm at a bit of a loss on how best to test this change. What I would like:
- Set settings `MIGRATION_MODULES` and `INSTALLED_APP`.
- Start with a fresh database, no tables (Unsure how best to do this with the test suite)
- Run migrations.
- Assert the auth tables weren't created; no DB errors from creating the permissions.

A few issues I ran into trying to write such a test:
- The contenttypes and auth tables already exist, running migrations fail as a result.
- The `post_migrate` callback is already registered, so it will still run. AFAICT, the signal callbacks aren't modified when changing the settings above.

If anyone can help guide me towards writing such a test, or another one, I would appreciate the help.
",jdufresne,None,2016-08-31T04:07:17Z,2016-09-10T23:38:05Z
7187,Typo missing character,,miketheman,None,2016-08-31T03:09:51Z,2016-08-31T11:34:52Z
7186,Master,"Added search box and key functionality to admin horizontal filter's ""chosen"" side.
",DustinDobernig,None,2016-08-30T21:47:01Z,2016-08-30T21:53:24Z
7185,Fixed #27113 -- Added a test for setting HttpRequest.encoding.,"Fixed the code for POST request.
",PREM1980,None,2016-08-30T20:28:43Z,2016-08-31T01:05:41Z
7184,Fixed #27113 -- Added a test for setting HttpRequest.encoding.,,PREM1980,None,2016-08-30T20:13:01Z,2016-08-30T20:18:54Z
7183,Fixed #27158 -- Fixed positioning of admin's many-to-many widgets in rtl.css.,"Compare this two images to see what exactly this commit does:

http://uploads.im/0B6JX.jpg
http://uploads.im/J8AqP.jpg
",mehdipourfar,None,2016-08-30T19:14:38Z,2016-09-19T12:44:25Z
7182,Added documentation about detecting threaded runserver.,"This helps with configuring the database according to what is mentioned
above.

```
# Do not use connection pooling with threaded ""runserver"".
import sys
is_runserver_with_threading = (
    sys.argv[1] == 'runserver' and '--nothreading' not in sys.argv[2:]
)
conn_max_age = 0 if is_runserver_with_threading else 1800
```

TODO:
- [ ] handle `IndexError`, or use `sys.argv[1:2] == ['runserver']`
",blueyed,None,2016-08-30T15:11:10Z,2017-03-25T21:39:47Z
7181,Fixed #28458 --  Added ModelMultipleChoiceField.validate_choices() ,"This allows to easily override it, e.g. when using django-filter and you
do not want the evaluation of the queryset, and/but instead validate the
input manually.

Ref: https://code.djangoproject.com/ticket/27148

TODO:
- [x] documentation
",blueyed,None,2016-08-29T22:39:06Z,2020-03-25T10:16:50Z
7180,Added failing test for ModelMultipleChoiceField with UUIDField.,"This test shows that an invalid value for a UUIDField will bubble up as
`ValueError`.  The problem here seems to be that `get_prep_value` just
passes through the (invalid) string.

Only when the queryset is evaluated just below via the following code,
the ValueError from `UUIDField.get_db_prep_value` is raised and bubbles
up:

```
self.queryset.filter(**{'%s__in' % key: value})
pks = set(force_text(getattr(o, key)) for o in qs)
```

Explicitly evaluating the queryset above already would fix it, but that
would get done for every selected value then.

Needs `UUIDField` to be fixed for this, e.g. raising the `ValueError`
from `get_prep_value` already?
In this case other fields would need the same fix probably (from what I
have seen while skimming the code).

Django issue: https://code.djangoproject.com/ticket/27148
",blueyed,None,2016-08-29T21:43:24Z,2016-09-01T15:25:09Z
7179,Fixed #27113 -- Added a test for setting HttpRequest.encoding.,"https://code.djangoproject.com/ticket/27113
",PREM1980,None,2016-08-29T18:51:45Z,2016-08-30T20:10:28Z
7178,Fixed #27131 -- Passed proper string type to SMTP connection login,"Thanks slavugan@gmail.com for the report.
",claudep,None,2016-08-29T12:44:19Z,2016-08-31T07:01:57Z
7177,Fixed #27140 -- Prevented template rendering from hiding a property's TypeError.,"https://code.djangoproject.com/ticket/27140
",timgraham,None,2016-08-29T12:21:09Z,2016-08-31T17:44:38Z
7176,Fixed #27143 -- Allowed combining SearchQuery with more than one `&` or `|` operators.,"Patch for [Ticket #27143](https://code.djangoproject.com/ticket/27143).
",hixi,None,2016-08-29T11:51:25Z,2018-11-29T19:47:41Z
7175,[1.8.x] Refs #27132 -- Added pylibmc to test requirements.,"Backport of 5d978c46216df53884fbca590a9abe660a739774 from master

See: https://github.com/django/django/pull/7168#issuecomment-242986039
",edmorley,None,2016-08-29T10:04:02Z,2016-08-29T14:57:31Z
7174,[1.9.x] Refs #27132 -- Added pylibmc to test requirements.,"Backport of 5d978c46216df53884fbca590a9abe660a739774 from master

See: https://github.com/django/django/pull/7168#issuecomment-242986039
",edmorley,None,2016-08-29T10:00:05Z,2016-08-29T15:00:05Z
7173,"[1.10.x] Fixed #27132, #19914 -- Test pylibmc on Jenkins","Backport of 5d978c46216df53884fbca590a9abe660a739774 from master

See: https://github.com/django/django/pull/7168#issuecomment-242986039
",edmorley,None,2016-08-29T09:39:02Z,2016-08-29T15:47:09Z
7172,Fixed #27141 -- Fixed makemigrations crash on readonly database with django_migrations table.,"Follow-up on 76ab8851181675a59425f9637bdbf3f2de95f6f1.
",sjoerdjob,None,2016-08-29T08:31:39Z,2016-08-29T13:00:38Z
7171,Fixed #25109 -- Stopped silencing explicitly specified migration modules import errors.,,charettes,None,2016-08-29T03:01:42Z,2016-08-31T00:10:25Z
7170,Fixed typo in auth management test.,,jdufresne,None,2016-08-29T00:45:36Z,2016-08-29T02:20:35Z
7169,Refs #27132 -- Added pylibmc to test requirements,"pylibmc needs to be installed in advance of #7168, so that when the global Jenkins test configuration (used for all branches) is updated, the tests don't fail with ""no module named pylibmc"".

This will need to be backported to all supported branches.

See:
https://github.com/django/django/pull/7168#issuecomment-242986039
",edmorley,None,2016-08-28T17:15:52Z,2016-08-29T14:35:31Z
7168,Fixed #27132 -- Allowed testing of both python-memcached and pylibmc backends on Jenkins,"- Refactors the memcached tests to allow for the testing of multiple backends in the same test run.
- Adds pylibmc to the test requirements files, allowing the pylibmc tests to be run on the linux Jenkins jobs. (Building pylibmc will be potentially more complicated for the Windows jobs, so pylibmc installation is skipped there for now.)
- Fixes the existing test failures that occurred with pylibmc ([ticket #19914](https://code.djangoproject.com/ticket/19914))
- As an added bonus: Means it's now easier for third-party backends to re-use the Django memcached testcases.

See the individual multi-line commit messages for more details :-)
(And let me know if further splitting/squashing desired)

Fixes:
https://code.djangoproject.com/ticket/27132
https://code.djangoproject.com/ticket/19914
",edmorley,None,2016-08-28T14:15:23Z,2016-08-29T15:23:00Z
7165,Fixed #27153 -- Added validation for HttpResponse status.,"I was accidentally passing a string for the status to DRF's `Response` class ([it inherits from Django's SimpleTemplateResponse](https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/response.py#L16)) and getting:

```
  File ""[...]/django/http/utils.py"", line 17, in conditional_content_removal
    if 100 <= response.status_code < 200 or response.status_code in (204, 304):
TypeError: unorderable types: int() <= str()
```

Thinking the bad value shouldn't get that far so this PR checks the value in the `HttpResponseBase` class.

https://code.djangoproject.com/ticket/27153
",ryangallen,None,2016-08-28T00:33:21Z,2016-08-31T02:00:26Z
7164,Fixed #27136 -- Changed auth forms' autofocus attribute to HTML5 boolean syntax.,"https://code.djangoproject.com/ticket/27136
",jdufresne,None,2016-08-27T15:10:58Z,2016-08-29T00:19:50Z
7163,Clarified topological sort description a bit,"More precise description.
",sutyrin,None,2016-08-27T12:25:06Z,2016-08-29T17:58:40Z
7162,Fixed #27063 -- Prevented i18n_patterns() from using too much of the URL as the language.,"Fixing the issue described here https://code.djangoproject.com/ticket/27063.

That commit makes `get_language_from_path` returning only valid (defined in LANGUAGES setting) languages, so things like `/de-moines-parking/` is not a valid laguage anymore.

Before it assumes it's `de` language with `moines-parking` variant and returned `de`, just silently ignoring the invalid `monies-parking` part.

We should not assume that anything starting with a valid language code followed by a dash and any random string is a language with some random variant. That's changed only while looking up languages from path, the `Accept-Language` header parsing remains unchanged.

As looked at the code  I think we can also modify the regex to match only languages with one dash or at sign, AFAIK there's no case where language code contains two `@` or `-`.

Here's the proposed change to regex, not committed yet, cause I'm not 100% sure about it.

I'm waiting for feedback.

```
-language_code_prefix_re = re.compile(r'^/([\w@-]+)(/|$)')
+language_code_prefix_re = re.compile(r'^/(\w+([@-]\w+))(/|$)')
```
",urbaniak,None,2016-08-27T10:29:20Z,2016-10-31T18:33:16Z
7160,Fixed #20892 -- Allowed configuring memcached client using OPTIONS,"Previously the `django.core.cache.backends.memcached.MemcachedCache` backend would ignore the contents of `OPTIONS`, and the `django.core.cache.backends.memcached.PyLibMCCache` backend would use them to set pylibmc behaviors instead.

Now, the memcached backends pass the contents of `OPTIONS` as keyword arguments to the client constructors, allowing for more advanced control of client behavior.

Passing pylibmc behavior settings as top-level attributes of `OPTIONS` is still supported until Django 2.1, but will generate a deprecation warning. They should now be set under a `behaviors` key within `OPTIONS` instead.

Tested against both the MemcachedCache and PyLibMCCache backends on Python 2.7 using:
`./runtests.py -v 2 cache.tests.MemcachedCacheTests` 

Fixes:
https://code.djangoproject.com/ticket/20892
https://code.djangoproject.com/ticket/15815

Supersedes PR #6233.
",edmorley,None,2016-08-26T19:14:38Z,2016-08-31T17:02:55Z
7159,cannot use django template backend in standalone mode,"I can't use the django template backend in standalone mode because it tries to look for installed apps: `django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.`.

This is how I'm using it:

``` python
from django.template import Template, Context
from django.conf import settings
settings.configure(
    TEMPLATES=[{'NAME': 'django', 'BACKEND': 'django.template.backends.django.DjangoTemplates'}]
)

c = Context(make_context_data(race))
t = Template(""blah {{ hello }}"")
print(t.render(c))
```

Full Traceback

```
Traceback (most recent call last):
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/utils.py"", line 65, in __getitem__
    return self._engines[alias]
KeyError: 'django'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""./scripts/make_context_data.py"", line 145, in <module>
    """""")
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/base.py"", line 184, in __init__
    engine = Engine.get_default()
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/engine.py"", line 74, in get_default
    django_engines = [engine for engine in engines.all()
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/utils.py"", line 89, in all
    return [self[alias] for alias in self]
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/utils.py"", line 89, in <listcomp>
    return [self[alias] for alias in self]
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/utils.py"", line 80, in __getitem__
    engine = engine_cls(params)
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/backends/django.py"", line 31, in __init__
    options['libraries'] = self.get_templatetag_libraries(libraries)
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/backends/django.py"", line 49, in get_templatetag_libraries
    libraries = get_installed_libraries()
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/template/backends/django.py"", line 104, in get_installed_libraries
    for app_config in apps.get_app_configs())
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/apps/registry.py"", line 137, in get_app_configs
    self.check_apps_ready()
  File ""/Users/johria/anaconda3/lib/python3.5/site-packages/django/apps/registry.py"", line 124, in check_apps_ready
    raise AppRegistryNotReady(""Apps aren't loaded yet."")
django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.
```
",AlJohri,None,2016-08-26T18:08:00Z,2016-08-26T18:53:54Z
7158,Fixed #27129 New functional to django/template/defaultfilters.py was …,"…added

Customisation classes of ul and li elements in method unordered_list
was implemented in this commit.
",Imperat,None,2016-08-26T15:57:02Z,2016-08-26T17:32:02Z
7157,Fixed #27126 -- Used namedtuple in result of {% regroup %},"https://code.djangoproject.com/ticket/27126

I also included two other commits:
- one that improves the docstring of the `regroup` tag itself
- one that fixes a misnamed variable in the `{% regroup %}` tag documentation.

The second one could be backported if deemed necessary.
",bmispelon,None,2016-08-26T09:52:18Z,2016-08-26T21:04:45Z
7156,Fixed #27124 -- Excluded cull-related cache configs from memcached tests,"The `cull` and `zero_cull` test cache configs set `MAX_ENTRIES` and `CULL_FREQUENCY` in `OPTIONS`, which are only intended for use with the locmem, filesystem and database backends - so should be excluded when running the memcached test cases. This will prevent test failures once [ticket 20892](https://code.djangoproject.com/ticket/20892) is fixed.

In addition, the `memcached_params` customisation in now handled by the existing `caches_settings_for_tests()` params feature, rather than by manually wrangling `memcached_params`.

Tested using `./runtests.py -v 2 cache.tests.MemcachedCacheTests` with both the MemcachedCache and PyLibMCCache backends.

Note: If anyone else tests with PyLibMCCache locally, the failures you will see are pre-existing (see [ticket 19914](https://code.djangoproject.com/ticket/19914)).

Fixes [ticket 27124](https://code.djangoproject.com/ticket/27124).
",edmorley,None,2016-08-25T21:51:17Z,2016-08-26T18:44:31Z
7155,Removed unneeded smart_text,,claudep,None,2016-08-25T20:51:08Z,2016-08-25T21:09:00Z
7154,Fixed #27108 -- Only show staticfiles interactive warnings when STATIC_ROOT exists,"Original ticket: https://code.djangoproject.com/ticket/27108

`./manage.py collectstatic` prompts for user input to confirm overwriting the destination files, even when the static directory doesn't exist! That's silly. Just create them in this case without warning about
""existing"" files that actually don't exist.
",francoisfreitag,None,2016-08-25T19:36:44Z,2016-09-02T18:55:14Z
7153,Fixed #18763 -- Added with_perm() to User manager.,"https://code.djangoproject.com/ticket/18763
",berkerpeksag,None,2016-08-25T16:26:21Z,2019-08-03T09:09:22Z
7152,Fixed #27097 -- Added introspection for index type,"Ticket [#27097](https://code.djangoproject.com/ticket/27097#ticket).

I am introspecting this in the `get_constraints` method and moved the earlier implementation for PostgreSQL from `get_indexes` to `get_constraints` as well, since there are efforts to  [deprecate `get_indexes`](https://code.djangoproject.com/ticket/27098#ticket).
",akki,None,2016-08-25T12:35:11Z,2016-09-03T01:14:43Z
7151,Used property decorators where applicable.,"I didn't touch the following usages:
- In django/contrib/sessions/backends/base.py:
  
  `_get_session_key` is overridden by backend subclasses.
- In django/contrib/sessions/backends/base.py:
  
  `_get_session` is used by other backend classes.
- In django/db/models/fields/**init**.py:
  
  There is a comment for `_description` saying:
  
  ``` py
  # Generic field type description, usually overridden by subclasses
  ```
- In django/db/models/fields/**init**.py:
  
  I left `_get_flatchoices` as is just to be safe.
- In django/forms/widgets.py:
  
  Since `_get_media` is part of `MultiWidget` it would be overridden by users.
",berkerpeksag,None,2016-08-25T11:22:22Z,2016-08-26T00:06:23Z
7150,Fixed #27067 - Deprecated string_concat in favor of format_lazy,,lovmat,None,2016-08-24T21:42:10Z,2016-08-25T20:17:56Z
7149,Fixed #26816 -- Corrected an admin check to require inlines to subclass InlineModelAdmin.,"https://code.djangoproject.com/ticket/26816
",berkerpeksag,None,2016-08-24T19:32:48Z,2016-08-24T21:34:32Z
7148,Used property decorators where applicable.,,berkerpeksag,None,2016-08-24T19:03:29Z,2016-08-24T21:23:16Z
7147,Fixed #27111 -- Prevented KeyError when USERNAME_FIELD is not in UserCreationForm.fields,"https://code.djangoproject.com/ticket/27111
",berkerpeksag,None,2016-08-24T10:06:41Z,2016-08-24T17:20:12Z
7146,Stable/1.9.x,,Cerebro92,None,2016-08-24T09:29:05Z,2016-08-24T09:54:16Z
7145,Fixed #27053 -- Documented django.contrib.auth.get_user() function.,"https://code.djangoproject.com/ticket/27053
",berkerpeksag,None,2016-08-24T09:20:56Z,2016-09-27T14:46:10Z
7144,Add class based indexes to docs/releases,"Do any of `[Add|Remove]Index` operations, `BtreeGinExtension` operation or anything else requries to be mentioned?
",akki,None,2016-08-24T03:20:54Z,2016-08-25T13:52:57Z
7143,Fixed #26170 -- Made ModelAdmin views run transactions on the correct database.,"(Previous pull request: #6076)

Now with tests!

These tests can be found in `tests/admin_views/test_multidb.py` and they require that the `tests/test_dummy_default_db.py` file is used as the settings file, in order to set the default database to be a dummy. So to run the tests:

```
python runtests.py --settings test_dummy_default_db admin_views.test_multidb
```

(the tests will be skipped if the default database is not a dummy)

In order for testing with a dummy database to work, I've had to [put a check](https://github.com/django/django/commit/003bcb0cdee3cbd0400cd7b6f5fea368c8404c4a) during teardown to skip dummies (which naturally, do not actually need tearing down).
",Jibodeah,None,2016-08-23T17:02:32Z,2016-09-14T20:06:40Z
7142,Fixed #27110 -- Prevented makemigrations from creating the django_migrations table.,"https://code.djangoproject.com/ticket/27110
",timgraham,None,2016-08-23T15:00:49Z,2016-08-31T21:14:30Z
7141,Whitelisted environment vars in tox for testing,"PYTHONPATH is required for passing through test modules that don't
already exist within the Django tests/ directory.

DISPLAY is required for testing selenium on systems that use Xvfb.

HOME is where the Vagrant djangobox stores geoip data, but it could be
useful for other tox commands that require access to data outside of
Django.
",jarshwah,None,2016-08-23T13:14:53Z,2016-08-24T11:02:35Z
7140,Fixed #26998 -- Fix a few false positive checks.,"This partially reverts 983c158da7723eb00a376bd31db76709da4d0260

https://code.djangoproject.com/ticket/26998
",collinanderson,None,2016-08-23T11:56:33Z,2016-08-23T20:07:16Z
7139,Remove uses of assert_not_called().,"assert_not_called was added to core mock in Python 3.5, so these tests are actually mock noops in Python 3.3 and 3.4.
",dracos,None,2016-08-23T07:45:36Z,2016-08-23T12:06:59Z
7138,Fixed #27104 -- Corrected shell example in tutorial 5.,"https://code.djangoproject.com/ticket/27104
",timgraham,None,2016-08-22T23:23:11Z,2016-08-24T14:09:09Z
7137,Fixed #27103 -- Registered vcapi/rcapi GDAL prototypes based on their own drivers.,"It is possible for one set to be registered, and then ensure_registered
would think they had all been registered.

Hopefully fixes https://code.djangoproject.com/ticket/27103
",dracos,None,2016-08-22T12:02:44Z,2016-08-23T21:31:41Z
7136,Add normalize to floatformat,"If arg is ""n"", it will use Decimal normalize function:

https://docs.python.org/3.5/library/decimal.html#decimal.Decimal.normalize
",pinguin999,None,2016-08-22T07:53:47Z,2016-08-24T18:48:36Z
7135,Fixed #27102 -- Fixed simplify_regex in admindocs,"Fixes #27102: https://code.djangoproject.com/ticket/27102

Fixes an issue where simplify_regex would not notice a trailing
bracket when cleaning up regex patterns involving groups.

Steps to reproduce:
run this in your shell: 
`django.contrib.admindocs.views.simplify_regex('^orgs/(?P<org_id>([0-9a-f]{32}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}))$')`
output:
`'/orgs/<org_id>)'`

expected output:
`'/orgs/<org_id>'`
",prajjwol,None,2016-08-22T06:35:19Z,2016-09-27T23:05:09Z
7134,Fixed #25181 -- Added localdate() function to get date in a different time zone.,"Thanks @kswiat for the original [PR](https://github.com/django/django/pull/5055).

https://code.djangoproject.com/ticket/25181

Some response to other tickets and PRs:

From @aaugustin 

> It may be useful to make these functions fallback reasonably when `USE_TZ` is `False` for the benefit of pluggable applications. In that case, `localtime()` should return:
> 
> ...
> 3. (probably) an exception if `value` is provided and it is aware

Adding the following guard to `localtime()` produces a [few test failures](http://dpaste.com/2S6RD55). It looks like there is an existing assumption that `localtime()` works on aware datetimes regardless of the value `USE_TZ`. I'm open towards moving in the suggested direction, but it may be more invasive than originally thought and have backwards compatibility concerns. What are you thoughts?

Guard: 

``` python
if not settings.USE_TZ and is_aware(value):
    raise ValueError(""Cannot call localtime() with an aware datetime when USE_TZ is False"")
```

---

If agreeable, I would also like to add an analogous function to return `datetime.time()` in the current time zone. (Obviously, the name `localtime()` won't work.) I think it would be just as useful as `localdate()` for the same reasons. IME, just the current TZ's time is frequently  important to display to the user or compare to other values. Having an official, documented convenience function that gets this right and is reusable across applications seems beneficial to me. However, @aaugustin didn't give it the same ""+0"" as `localdate()` in ticket [#27082](https://code.djangoproject.com/ticket/27082). So I'm looking for feedback.

Thanks!
",jdufresne,None,2016-08-21T19:35:38Z,2016-09-01T00:19:33Z
7133,Fixed #27044 -- Included already applied migration changes in the pos…,"…t-migration state when the execution plan is empty.

Thanks tkhyn for the report.
",charettes,None,2016-08-20T20:42:40Z,2016-08-24T05:36:40Z
7132,Fixed #27098 -- Deprecated DatabaseIntrospection.get_indexes,"Should be rebased after:
- #7131 is committed
- ~~Index type is added to get_constraints() output (for test_gin_index). akki is working on it.~~
",claudep,None,2016-08-20T10:18:27Z,2016-09-12T07:29:36Z
7131,Fixed #27096 -- Fixed primary key introspection for sqlite3 backend,,claudep,None,2016-08-20T08:30:42Z,2016-08-20T13:58:37Z
7130,Fixed #17002 -- M2M traversal through models using concrete inheritance,"https://code.djangoproject.com/ticket/17002
",InvalidInterrupt,None,2016-08-19T22:29:49Z,2016-12-28T16:49:40Z
7129,Fixed #26987 -- Documented using QuerySet.get() without arguments.,,berabhishek,None,2016-08-19T18:23:10Z,2016-08-19T21:18:09Z
7128,Fixed #27013 -- Clarified commands to install argon2/bcrypt packages.,"https://code.djangoproject.com/ticket/27013
",timgraham,None,2016-08-19T18:22:22Z,2016-08-19T23:23:12Z
7127,Fixed #27018 -- Fixed AttributeError in admindocs,"Generated correct admindocs URLs for views that are methods on classes
in Python 3. For Python 2, URLs remain broken but fixed to generate
404s rather than errors.
",helenst,None,2016-08-19T16:27:29Z,2016-08-20T14:02:52Z
7126,Corrected tutorial05 method name,"The code examples use the method assertIs() while the docs used assertEqual()
",VincentTide,None,2016-08-19T15:02:59Z,2016-08-19T15:10:28Z
7125,Fixed #26571 -- Corrected recommendation for converting timestamps to tz-aware datetimes.,"https://code.djangoproject.com/ticket/26571
",timgraham,None,2016-08-19T15:00:29Z,2016-08-19T18:47:06Z
7124,Removed DateTimeAwareJSONEncoder alias.,,timgraham,None,2016-08-19T13:42:54Z,2016-08-19T19:01:07Z
7123,Fixed #27085 -- Corrected a screenshot in the tutorial.,"The Question Text header is replaced with Question...
Cropped screenshot (930 X 279) after writing the code and running from Django==1.10
![admin04t](https://cloud.githubusercontent.com/assets/9829763/17808282/0bfd8118-662d-11e6-8446-b2ffe2a318a4.png)

Thank you Claude and Bmispelon for helping me out...
",berabhishek,None,2016-08-19T11:22:01Z,2016-08-19T22:05:42Z
7122,"Updated sessions.txt -- DateTimeAwareJSONEncoder deprecated, Use DjangoJSONEncoder","DateTimeAwareJSONEncoder deprecated, Use DjangoJSONEncoder
",Brightcells,None,2016-08-19T10:05:55Z,2016-08-19T13:17:58Z
7121,Fixed #24650 -- Documented how to change an unmanaged model to managed.,"https://code.djangoproject.com/ticket/24650
",timgraham,None,2016-08-19T00:03:40Z,2016-08-23T21:35:43Z
7120,Fixed #26807 -- Documented how to replicate SubfieldBase's assignment behavior.,"https://code.djangoproject.com/ticket/26807
",timgraham,None,2016-08-18T23:51:03Z,2016-08-19T01:09:17Z
7119,Refs #25854 -- Completed a RequestContext docs example.,"https://code.djangoproject.com/ticket/25854
",timgraham,None,2016-08-18T23:37:56Z,2016-08-19T01:14:00Z
7118,Fixed #27089 -- Added database alias to InconsistentMigrationHistory message.,"https://code.djangoproject.com/ticket/27089
",timgraham,None,2016-08-18T22:19:05Z,2016-08-24T00:48:58Z
7117,Fixed #15902 -- Stored current language in a cookie,,claudep,None,2016-08-18T20:22:50Z,2016-09-27T19:56:28Z
7116,Add correct text from the installer for Windows.,"The word ""to"" was repeated, and the descriptive text was wrong for the Windows installer.
",FlipperPA,None,2016-08-18T17:58:59Z,2016-08-18T18:05:13Z
7115,Fixed #27073 -- Fixed duplicated managers in _meta.managers.,,loic,None,2016-08-18T16:39:48Z,2016-08-18T18:24:45Z
7114,Fixed #27074 -- connection.is_usable() raises AttributeError,"https://code.djangoproject.com/ticket/27074
",boblefrag,None,2016-08-18T14:53:46Z,2016-10-07T12:08:53Z
7113,Fixed #27081 -- Allowed migrations to serialize methods on pypy.,"Fixed existing test failures in migrations.test_writer on pypy.

https://code.djangoproject.com/ticket/27081
",timgraham,None,2016-08-18T13:33:14Z,2016-08-31T01:47:34Z
7112,Fixed #27083 -- Added basic support for weak ETags.,"https://code.djangoproject.com/ticket/27083
",marfire,None,2016-08-18T10:33:23Z,2016-09-10T12:28:45Z
7111,Fixed #27079 -- Buildbot test.,,cjerdonek,None,2016-08-18T07:53:50Z,2016-08-26T18:03:14Z
7110,Fixes #27080 -- making Manager instances created from QuerySet correctly serialise in migrations,"Passes down `use_in_migrations` attribute if found on `QuerySet` to the
resulting `Manager` when calling `QuerySet.as_manager`, so that
`Manager` instances that are created from `QuerySet`s will be correctly
serialised into migrations.
",leifdenby,None,2016-08-18T00:31:02Z,2018-04-01T10:29:13Z
7109,Fixed #27072 -- Fixed AddGeometryColumn error when altering a SpatiaLite table.,"https://code.djangoproject.com/ticket/27072
",timgraham,None,2016-08-17T18:24:53Z,2016-08-24T12:44:45Z
7108,"Fixed #27078 -- Simplified ""if"" logic in SQLite's _get_test_db_name().",,cjerdonek,None,2016-08-17T18:13:42Z,2016-08-17T20:20:01Z
7107,Fixed #27077 -- Made calls checking for in-memory database more DRY.,,cjerdonek,None,2016-08-17T17:43:34Z,2016-08-18T00:34:18Z
7106,Fixed #25476 -- Allowed PostgreSQL introspection to work regardless of table owner.,"Fix for https://code.djangoproject.com/ticket/25476
",socram8888,None,2016-08-17T08:45:07Z,2017-03-27T22:07:16Z
7105,Fixed incorrect doc reference to Field.initial.,"Based on the context, I believe this is intended to be `Field.initial` not `Form.initial`.
",jdufresne,None,2016-08-17T00:52:10Z,2016-08-17T14:27:33Z
7104,Refs #26983 -- Add test for the CharField with primary_key=True case.,,lamby,None,2016-08-16T22:10:34Z,2016-08-18T01:42:59Z
7103,"Replaced ""raise SkipTest"" with ""self.skipTest()"" in a few tests.",,timgraham,None,2016-08-16T19:43:14Z,2016-08-16T20:42:28Z
7102,Moved model_validation tests to invalid_models_tests.,"Later I'd rename `invalid_models_tests` to something like `model_checks` so it's not suggested that only invalid models can go there, unless anyone has a different idea.
",timgraham,None,2016-08-16T18:30:54Z,2016-08-16T19:24:11Z
7101,[WIP] Fixed #27070 -- add support for `Q` objects in `get_or_create` and `update_or_create`,"ref [#27070](https://code.djangoproject.com/ticket/27070#ticket)
",fcurella,None,2016-08-16T17:19:48Z,2016-08-16T19:27:41Z
7100,Fixed #27069 -- Doc'd which gettext functions may be aliased as _.,"https://code.djangoproject.com/ticket/27069
",lovmat,None,2016-08-16T08:28:29Z,2016-08-17T20:35:40Z
7099,[WIP] Fixed #24726 -- Fix SQL Generation for ArrayField(RangeField),"@mjtamlyn asked that I open this PR. I feel that I'm in a bit over my head with this one. Work from others is welcome!

Discussion here: https://code.djangoproject.com/ticket/24726
",adamzap,None,2016-08-16T01:49:24Z,2016-12-29T18:25:35Z
7098,Fixed #19580 -- Made nullable relations work consistently,"https://code.djangoproject.com/ticket/19580
",akuzminov,None,2016-08-16T01:24:00Z,2017-05-06T18:38:12Z
7097,Fixed #27068 -- Unified form field initial data retrieval.,"https://code.djangoproject.com/ticket/27068
",jdufresne,None,2016-08-16T00:39:09Z,2016-08-19T00:55:47Z
7096,Fixed #22414 -- Ensured that LiveServerTestCase closes connections.,"I confirmed on the CI servers that the test fails without the fix (on the mysql, postgres, and postgis configurations).
",cjerdonek,None,2016-08-15T23:38:40Z,2016-12-07T12:22:15Z
7095,Fixed typos," Fixed two very minor typos I noticed while reading the documentation.
",mHulb,None,2016-08-15T20:22:29Z,2016-08-16T00:12:51Z
7094,Fixed #26819 -- Fixed crash in ModelForm.validate_unique() on complex types like list.,"https://code.djangoproject.com/ticket/26819
",PREM1980,None,2016-08-15T17:55:02Z,2016-11-22T23:40:06Z
7093,Clarify language about DB routers 'allow_migrate' definition,"Clarify language about allow_migrate in DB Routers still allowing the makemigrations command. I was curious why this was happening and learned this is by-design.
",FlipperPA,None,2016-08-15T14:51:13Z,2016-08-15T17:34:55Z
7092,Fixed #27061 -- Added a TEST TEMPLATE setting for postgresql.,,cjerdonek,None,2016-08-15T14:17:41Z,2016-08-23T21:20:02Z
7091,Fixed #27058 -- Reallowed the {% for %} tag to unpack any iterable.,"https://code.djangoproject.com/ticket/27058
",timgraham,None,2016-08-15T12:59:59Z,2016-08-15T19:39:37Z
7090,Fixed #27014 -- Fixed annotations with geographic DB functions.,"Thanks Sean Mc Allister for reporting and the regression test.
",yellowcap,None,2016-08-15T10:59:14Z,2016-09-03T00:30:38Z
7089,Fixed #24854 -- Refactored QuerySet._values,"Added `django.db.models.sql.query.Query.set_values()` method to handle
query mutation.
",Ian-Foote,None,2016-08-15T05:53:56Z,2016-08-16T00:21:11Z
7088,"Fixed #16735, #25871 -- Added aliasing and expressions support to QuerySet.values().","Fix https://code.djangoproject.com/ticket/25871.
",Ian-Foote,None,2016-08-15T01:40:32Z,2017-02-16T22:50:07Z
7087,Fixed #26866 -- Added utils.text.format_lazy(),"Added format_lazy function to django.utils.text module.
Useful when dealing with relative complex lazy string concatenations
(e.g. in urls.py when translating urls in regular expressions).
",lovmat,None,2016-08-14T20:00:37Z,2016-08-24T16:18:17Z
7086,support space on the gis version string,"`libgeos.py` now should support string versions likes `3.4.2-CAPI-1.8.2 r3921`
",velvetkeyboard,None,2016-08-14T19:51:34Z,2016-08-15T14:39:10Z
7085,Fixed #26866 -- Added format_lazy function,"Added format_lazy function to django.utils.text module.
Useful when dealing with relative complex lazy string concatenations
(e.g. in urls.py when translating urls in regular expressions).
",lovmat,None,2016-08-14T19:39:58Z,2016-08-14T19:45:41Z
7084,Registered psycopg2.extensions.UNICODE only on Python 2,,claudep,None,2016-08-14T19:13:33Z,2016-08-15T18:59:25Z
7083,Fixed #27060 -- Take indexes into account in inspectdb command,"Ticket [#27060](https://code.djangoproject.com/ticket/27060#ticket).
",akki,None,2016-08-14T16:03:01Z,2016-09-24T09:18:16Z
7082,Added link to class JSONField in docs/ref/models/fields.txt.,,victor-o-silva,None,2016-08-14T02:00:34Z,2016-08-15T14:46:16Z
7081,Improvements for models.Index class and it's operations,"PR has 2 commits:
- Added sanity type check for Index.fields argument being a `list`.
  Else if we forget to define Index(fields=...) as a list, we get something like `Create index on field(s) a, n, s, w, e, r, _, t, e, x, t of model question`. It would be nice to have an error message to prevent that.
- Now that [it is necessary for index passed `AddIndex` operation to have name](https://github.com/django/django/commit/b1e7d19d4c7015efe0c65361bb7f00a2f1c7047c), it would be better to have that name in the `describe` method of the operation as well. Markus had also [suggested this earlier](https://github.com/django/django/pull/6726#discussion-diff-66308920).
",akki,None,2016-08-14T00:33:20Z,2016-08-16T13:57:33Z
7080,Don't necessitate installing btree_gin extension to use GinIndex in contrib.postgres.indexes docs,"We should not make it a compulsion to use `BtreeGinExtension` operation and create the `btree_gin` extension on the db, to use `gin` indexes. I think so because PostgreSQL allows creating gin index for some fields (tsvector type) without installing the btree_gin extension.

For example, I have used the `ArrayField(models.IntegerField())` in the [test for GinIndex](https://github.com/django/django/blob/master/tests/postgres_tests/test_indexes.py#L45) because this doesn't require the btree_gin extension to be installed. I had used that field deliberately to keep the tests for `GinIndex` and `BtreeGinExtension` independent (i.e. the tests for `GinIndex` won't fail even if `BtreeGinExtension` is removed from the [migrations](https://github.com/django/django/blob/master/tests/postgres_tests/migrations/0001_setup_extensions.py#L23).
",akki,None,2016-08-14T00:29:37Z,2016-08-16T13:03:35Z
7079,Fixed #24112 -- Fixed counting of elements if needle has no root element,"This PR has the fixes suggested by @timgraham in #4041:
- Use `assertRaisesMessage` instead of `assertRaises`
- Print the element with the exception message to give context for debugging
",adamzap,None,2016-08-13T20:19:30Z,2016-09-01T00:41:35Z
7078,Fixed #27057 -- Made test setup store saved settings in one place.,,cjerdonek,None,2016-08-13T15:03:04Z,2016-08-15T17:54:30Z
7077,Fixed #27054 -- makemigrations fails with external databases,"Changed MigrationLoader.check_consistent_history to swallow
MigrationSchemaMissing raised by MigrationRecorder.applied_migrations.

MigrationRecorder.applied_migrations raises MigrationSchemaMissing if it
cannot create the django_migrations table. This is the case if the connection
to the database is read-only.
",SydneyUni-Jim,None,2016-08-13T09:34:48Z,2016-08-18T12:45:10Z
7076,Add get method to CacheHandler,"Since CacheHandler is already dict-like, add get so things like the template cache tag can fall-back to default.
",funkybob,None,2016-08-13T04:17:22Z,2016-09-03T00:07:35Z
7075,Use all() and a generator for has_perms,,funkybob,None,2016-08-13T04:06:32Z,2016-08-13T12:46:52Z
7074,Fixed #19222 - Documented that default managers aren't used for related queries.,"https://code.djangoproject.com/ticket/19222
",timgraham,None,2016-08-12T23:08:12Z,2016-08-16T17:12:55Z
7073,Fixed #26993 -- User model's last_name length increased to 100 chars.,"The max_length attribute of User model's last_name field was
increased to 100 characters as a result of the mailing list's
discussion.
",an0o0nym,None,2016-08-12T18:54:43Z,2016-08-17T13:42:16Z
7072,Refs #27037 -- Replaced reimplementation of cached_property on BoundField.initial,"Followup to fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64.
",jdufresne,None,2016-08-12T18:37:37Z,2016-08-12T19:43:24Z
7071,Fixed #25995 -- Added an encoder option to JSONField,,claudep,None,2016-08-12T16:44:47Z,2016-08-25T19:54:52Z
7070,Fixed #26971 -- Prevented crash with non-UTF-8 incoming PATH_INFO,,claudep,None,2016-08-12T13:33:14Z,2016-08-23T20:41:18Z
7069,Fixed #27054 -- makemigrations fails with external databases,"Change applied_migrations in MigrationRecorder to return an empty set
if the django_migrations table is missing and it cannot be created.

This is necessary when there are multiple database connections and at
least one of the connections is a read-only connection to an external
database that will never have migrations applied to it. All models for
the read-only database will have managed = False.
",SydneyUni-Jim,None,2016-08-12T05:02:46Z,2016-08-13T05:22:58Z
7068,Fixed #27039 -- Fixed fallback to model field default in model forms.,"https://code.djangoproject.com/ticket/27039
",timgraham,None,2016-08-11T19:32:16Z,2019-05-31T17:08:57Z
7067,Fixed #27046 -- Supported IPv6-formatted IPv4 addresses in host validation.,"https://code.djangoproject.com/ticket/27046
",timgraham,None,2016-08-11T15:10:21Z,2016-08-11T18:15:33Z
7066,Refs #23960 -- Added note on how to generate absolute redirect URLs.,"Ticket: https://code.djangoproject.com/ticket/23960
",MoritzS,None,2016-08-11T13:17:44Z,2016-08-11T20:37:03Z
7065,Fixed #27048 -- Documented that refresh_from_db() doesn't reload @cached_properties.,"https://code.djangoproject.com/ticket/27048
",timgraham,None,2016-08-11T12:04:16Z,2016-08-12T22:49:22Z
7064,Documented the cache_control() decorator,"Also added the corresponding references to the cache framework
documentation.
",marfire,None,2016-08-11T11:08:58Z,2016-08-11T20:57:24Z
7063,Fixed #26942 -- Added support for subtests during parallel testing.,,cjerdonek,None,2016-08-11T10:48:26Z,2016-08-26T18:27:21Z
7062,Fixed #22669 -- Fixed QuerySet.bulk_create() with empty model fields on Oracle.,"This is a simple solution to fix this bug. 

The more complex is to generate all parameter for query with input_size attribute. But it meens that all functions `get_db_prep_value` in Field's classes would need to call some function in `DatabaseOperations` instance like [`DateTimeField` do](https://github.com/django/django/blob/master/django/db/models/fields/__init__.py#L1443):

```
    def get_db_prep_value(self, value, connection, prepared=False):
        # Casts datetimes into the format expected by the backend
        if not prepared:
            value = self.get_prep_value(value)
        return connection.ops.adapt_datetimefield_value(value)
```

Please apply this PR or kick me in the right direction. This bug is open for two years and I'm sick of it. Thank you!
",mnach,None,2016-08-11T10:05:00Z,2018-04-06T19:47:48Z
7061,Fixed #26616 -- Clarified description of AppConfig.ready(),,marfire,None,2016-08-11T09:02:04Z,2016-08-17T14:35:39Z
7060,Fixed #27008 -- Added --debug-mode option to DiscoverRunner.,,cjerdonek,None,2016-08-10T17:48:03Z,2016-08-13T00:45:54Z
7059,Fixed #26957 -- Corrected authenticate() docs regarding User.is_active.,"Updated description and code example for default authenticate() method
in 'Authenticating users' section.
Updated code example for 'How to log a user in' section.
",an0o0nym,None,2016-08-10T17:19:18Z,2016-08-10T23:53:18Z
7058,[1.10.x] Fixed #26957 -- Corrected inconsistency between code and docs,"Updated description and code example for default authenticate() method
in 'Authenticating users' section.
Updated code example for 'How to log a user in' section.
",an0o0nym,None,2016-08-10T17:04:37Z,2016-08-10T17:06:16Z
7057,Fixed #27045 -- Documented that AUTH_PASSWORD_VALIDATORS aren't applied at the model level.,"https://code.djangoproject.com/ticket/27045
",timgraham,None,2016-08-10T15:45:22Z,2016-08-10T19:52:17Z
7056,Fixed #26098 -- Changed OpenLayers.js references to cdnjs.,"https://code.djangoproject.com/ticket/26098
",blueyed,None,2016-08-10T15:18:38Z,2017-07-26T20:48:41Z
7055,[1.10.x] Fixed #26957 -- Corrected inconsistency between code and docs,,an0o0nym,None,2016-08-10T00:23:52Z,2016-08-10T00:24:38Z
7054,Rephrased Sphinx notes,,moshekaplan,None,2016-08-09T20:29:48Z,2016-08-09T22:12:59Z
7053,Fixed #26149 --Invalid migration generated when using order_with_respect_to an…,"Invalid migration generated when using order_with_respect_to and a unique_together constraint
",anabelensc,None,2016-08-09T18:00:28Z,2016-09-09T16:10:00Z
7052,Fixed #27035 -- Made it easier to change settings.DEBUG for test runs.,,cjerdonek,None,2016-08-09T08:42:14Z,2016-08-09T17:41:04Z
7051,Note that included middleware is compatible with MIDDLEWARE and MIDDLEWARE_CLASSES,"https://code.djangoproject.com/ticket/27041
",scop,None,2016-08-09T07:47:16Z,2016-08-09T12:06:47Z
7050,Fixed #27039 -- Use default value for modelform field if form field i…,"Fixed regression in django > 1.10
",devbis,None,2016-08-09T06:49:27Z,2016-08-09T17:42:10Z
7049,Fixed #27037 -- Fixed ClearableFileInput to avoid the required attribute when initial data exists.,"https://code.djangoproject.com/ticket/27037
",jdufresne,None,2016-08-09T02:14:37Z,2016-08-12T17:59:01Z
7048,Refs #27025 -- Fixed a couple timezone tests for Python 3.6.,"Reflects behavior changes in [PEP 495](https://www.python.org/dev/peps/pep-0495/) (Local Time Disambiguation).
",timgraham,None,2016-08-08T23:47:13Z,2016-08-09T22:14:15Z
7047,Fixed #27036 -- Made locmem email backend's send_messages() accept generators.,"https://code.djangoproject.com/ticket/27036
",MDziwny,None,2016-08-08T22:35:53Z,2016-08-09T00:14:13Z
7046,Fixed #27030 -- Added contrib.postgres.indexes.GinIndex,"Ticket [#27030](https://code.djangoproject.com/ticket/27030#ticket).

Adds
1. introspection for index types in postgres
2. `BtreeGinExtension` operation in contrib.postgres
3. `GinIndex` index
",akki,None,2016-08-08T19:11:09Z,2016-08-12T22:38:19Z
7045,Fixed #26973 -- Fixed views.static.serve() crash with show_indexes enabled.,"https://code.djangoproject.com/ticket/26973
",timgraham,None,2016-08-08T18:02:59Z,2016-08-10T16:38:56Z
7044,Fixed #27034 -- Made makemessages independent of USE_I18N,,claudep,None,2016-08-08T17:59:58Z,2016-08-11T19:17:15Z
7043,Refs #22343 -- Adjusted a test for missing select_for_update(nowait=True) support.,"Since `select_for_update()` is disallowed in autocommit mode this test was not catching the appropriate `DatabaseError`.
",charettes,None,2016-08-08T16:38:24Z,2016-08-08T17:04:52Z
7042,Fixed #27032 -- Added error if setup_test_environment() called twice.,,cjerdonek,None,2016-08-08T09:39:38Z,2016-08-08T14:41:03Z
7041,Add ModelAdmin.changelist_class ,"Add ModelAdmin.changelist_class for more and simple customization result_list in change_list_template 
",saintbyte,None,2016-08-07T21:57:28Z,2016-08-10T20:10:01Z
7040,Fixed #26940 -- Removed makemessages from no_settings_commands whitelist,"As makemessages uses several settings for proper run (FILE_CHARSET,
LOCALE_PATHS, MEDIA_ROOT, and STATIC_ROOT), we should require settings
configuration for this command.
",claudep,None,2016-08-07T18:10:53Z,2016-08-08T17:54:07Z
7039,Fixed #27029 -- Fixed EmailValidator to allow non-ASCII characters in local part of the address.,"https://code.djangoproject.com/ticket/27029
",claudep,None,2016-08-07T10:36:38Z,2016-09-17T15:51:29Z
7038,[WIP] Fixed #26180 -- Add [Add|Remove]UniqueTogether migration operations,"Ticket [#26180](https://code.djangoproject.com/ticket/26180).

@MarkusH This time I have tried to solve this by introducing `[Add|Remove]UniqueTogether` as per your [earlier suggestion](https://github.com/django/django/pull/6926#issuecomment-233632828). There's quite some work remaining before this gets fully complete but the basic implementation is complete so I wanted to show it to make sure this is going in the right direction.
",akki,None,2016-08-07T10:10:58Z,2016-09-11T05:09:03Z
7037,Fixed #27028 - Clarified failed parallel tests message,"https://code.djangoproject.com/ticket/27028
",adamzap,None,2016-08-06T17:20:31Z,2016-08-08T13:24:14Z
7036,Fixed #27024 -- Prevented logging error with empty string as geometry widget value,"Thanks Gavin Wahl for the report.
",claudep,None,2016-08-06T09:18:46Z,2016-08-08T14:29:54Z
7035,Fixed a few grammar issues in working-with-git doc,"Nothing too opinionated here, mostly missing commas.
",adamzap,None,2016-08-06T01:55:25Z,2016-08-06T12:11:48Z
7034,Fixed #27027 -- Restored Client.force_login() using the first auth backend.,"b6433866682baac35a953e59298dff7f399ac49b changed the test client's force_login() method to require a backend to be specified when multiple are configured in settings. This restores it to its original behavior.
",bendemboski,None,2016-08-06T00:23:06Z,2016-08-06T12:57:30Z
7033,Fixed #27026 -- Fixed state initialization of bulk_create() objects if can_return_ids_from_bulk_insert.,"The `bulk_create` now also updates the `_state` field of a model
instance. This makes it possible to use it in `ManyToMany` relations.
",sjoerdjob,None,2016-08-05T22:03:03Z,2016-08-06T14:25:51Z
7032,Added code to prevent setup_test_environment() from being called twice.,,cjerdonek,None,2016-08-05T19:16:47Z,2016-08-08T09:41:13Z
7031,Fixed #26764 - Provide a fallback for _session_cache in cycle_key,"https://code.djangoproject.com/ticket/26764
",adamzap,None,2016-08-05T19:05:35Z,2016-08-08T17:01:26Z
7030,Refs #27025 -- Fixed servers test for Python 3.6.,"After https://hg.python.org/cpython/rev/4ea79767ff75/, `test_strips_underscore_headers` fails with `'Stub' object has no attribute 'sendall'`. I added that stub and now it fails like this:

```
Traceback (most recent call last):
  File ""/home/tim/code/django/tests/servers/test_basehttp.py"", line 117, in test_strips_underscore_headers
    body = list(wfile.readlines())[-1]
IndexError: list index out of range
```
",timgraham,None,2016-08-05T18:07:35Z,2016-08-08T20:50:49Z
7029,Fixed #27023 -- ~/.pythonrc.py loaded twice if PYTHONSTARTUP set to ~/.pythonrc.py,,inglesp,None,2016-08-05T13:10:24Z,2016-08-05T16:31:39Z
7028,"Fixed #26517, 26433 -- Fixed annotations with empty predicates.","Minor updates to https://github.com/django/django/pull/6638
",timgraham,None,2016-08-05T13:00:42Z,2016-08-08T15:21:32Z
7027,Merge pull request #1 from django/master,"uptodate with upstream
",sideffect0,None,2016-08-05T09:56:19Z,2016-08-05T09:56:38Z
7026,Fixed #27015 -- Prevented HTML-invalid minlength/maxlength on hidden inputs,,claudep,None,2016-08-05T09:41:28Z,2016-08-06T08:24:26Z
7025,Fixed #27019 -- Made teardown_test_environment() restore the original value of DEBUG.,"https://code.djangoproject.com/ticket/27019
",cjerdonek,None,2016-08-05T01:44:54Z,2016-08-10T20:27:20Z
7024,Fixed #27020 -- Used a context manager to close more files.,"https://code.djangoproject.com/ticket/27020
",scop,None,2016-08-04T20:08:43Z,2016-08-04T23:45:14Z
7023,Improved documentation of django.test.utils.setup_test_environment().,,cjerdonek,None,2016-08-04T18:32:15Z,2016-08-05T21:41:41Z
7022,Fixed #27010 -- Made Argon2PasswordHasher decode with ASCII.,"The underlying hasher only generates strings containing ASCII
characters so this is merely a clarifying change.

https://code.djangoproject.com/ticket/27010
",timgraham,None,2016-08-04T14:28:50Z,2016-08-04T14:57:38Z
7021,changed length of last name from 30 to 255 as discussed in the issue description,"Ticket: https://code.djangoproject.com/ticket/26993
Issue: Increase the length of the User model's last_name field to allow more of the world to use it
reference:
https://groups.google.com/forum/#!topic/django-developers/h98-oEi7z7g
",nauman3128,None,2016-08-04T13:13:35Z,2016-08-04T13:39:10Z
7020,Fixed #27002 -- Prevented double query when rendering ModelChoiceField.,"See ticket [#27002](https://code.djangoproject.com/ticket/27002).

When you do `{% for item in coll %}`, `ForNode` calls `len(coll)` before iterating over `coll`. This causes a `ModelChoiceField`'s queryset to be evaluated twice when looping over its `BoundField` in a template.

To stop that happening we can cache `BoundField`'s subwidgets, so that consecutive calls to `__iter__` don't trigger multiple database queries.
",AlexHill,None,2016-08-04T04:08:26Z,2016-08-08T17:41:32Z
7019,Fixed #27012 -- Removed nested_view() call to setup_test_environment().,,cjerdonek,None,2016-08-03T23:59:28Z,2016-08-04T13:35:44Z
7018,Fixed #27009 -- Made update_session_auth_hash() rotate the session key.,"https://code.djangoproject.com/ticket/27009
",timgraham,None,2016-08-03T19:17:57Z,2016-08-15T23:29:12Z
7017,CSRF Token: Improve error for scenario encountered,"Add a bullet to the error message for the scenario we have uncovered. The 'CSRF cookie not set.' error is triggered if there is an unnamed cookie from a readable sibling subdomain. It took us quite a while to figure this one out, including the help of a Django core committer, so hopefully an extra bullet point will save someone a great amount of time in the future.
",FlipperPA,None,2016-08-03T17:54:09Z,2016-08-03T19:04:11Z
7016,Fixed #27005 -- Fixed crash if request.META[''CONTENT_LENGTH']=''.,"https://code.djangoproject.com/ticket/27005
",timgraham,None,2016-08-03T16:56:01Z,2016-08-03T18:01:05Z
7015,Fixed #26500 -- Added SKIP LOCKED support to select_for_update().,,charettes,None,2016-08-03T16:25:48Z,2016-08-08T16:24:54Z
7014,Fixed #27007 -- Handled non-UTF-8 bytes objects for text/* attachments.,"See https://code.djangoproject.com/ticket/27007
",Feuermurmel,None,2016-08-03T15:53:09Z,2017-03-23T19:51:41Z
7013,Fixed #27004 -- Made migrations consistency check ignore unapplied squashed migrations.,"Would recommend this goes into the next 1.10 release, as it makes using squashed migrations nigh impossible. Please advise if I'm supposed to make the PR against a different base branch for this.

I'll add a failing test + documentation in a couple of hours.
Might also change the exception message for squashmigration cases.
",jarekwg,None,2016-08-03T08:02:49Z,2018-07-27T00:22:48Z
7012,Fixed #27003: ArrayField and JSONField form fields check for already-converted values,"`ArrayField`'s and `JSONField`'s `to_python` method goes straight to parsing the value, instead of checking if the value has already been converted to its type.
",brandonchinn178,None,2016-08-03T06:25:10Z,2016-11-15T23:47:39Z
7011,Fixed #27001 -- Added __iter__ to ChoiceFieldRenderer,"`ChoiceFieldRenderer` doesn't have `__iter__` defined, so Python iterates over it by calling `__getitem__` with an increasing index until an exception is raised. `ChoiceFieldRenderer.__getitem__` calls `list` on itself, which turns iteration into an n^2 operation. When the choices are backed by a queryset as in ModelChoiceField, that means lots of redundant database queries.

Fixed by adding an `__iter__` method to `ChoiceFieldRenderer` and changing `__getitem__` to use it, so that indexing still works.
",AlexHill,None,2016-08-03T03:33:08Z,2016-08-03T14:55:03Z
7010,Edited multi db topic guide for grammar and clarity.,"Minor changes: Edited grammar, fixed spelling error, provided an example and a link.
",lizlemon,None,2016-08-03T00:37:53Z,2016-08-05T16:56:26Z
7009,Fixed #26981 -- Added DiscoverRunner.get_test_runner_kwargs.,,cjerdonek,None,2016-08-02T22:56:55Z,2016-08-04T18:47:29Z
7008,Fixed #27000 -- Removed BaseCommand.usage() per deprecation timeline (refs #19973).,"https://code.djangoproject.com/ticket/27000
",timgraham,None,2016-08-02T22:52:13Z,2016-08-02T23:13:45Z
7007,Fixed #26997 -- Fixed auth checks crash with empty permissions.,"https://code.djangoproject.com/ticket/26997
",syurchenko,None,2016-08-02T19:24:09Z,2016-08-03T13:18:14Z
7006,Fixed #26983 -- Fixed isnull filtering on ForeignKey with to_field,"Thanks weidwonder for the report.
",claudep,None,2016-08-02T15:32:36Z,2016-08-04T14:06:54Z
7005,Fixed #26988 -- Improved/clarified User.is_authenticated/anonymous comparisons.,"https://code.djangoproject.com/ticket/26988
",timgraham,None,2016-08-02T13:50:39Z,2016-08-02T15:26:46Z
7004,Fixed #26991 -- Fixed a crash in MySQL where SQL_AUTO_IS_NULL doesn't return a result.,"https://code.djangoproject.com/ticket/26991
",timgraham,None,2016-08-02T12:39:18Z,2016-08-02T14:52:31Z
7003,Clarified issue with `force_login` and `is_active`,"This addresses the issue in [ticket #26986](https://code.djangoproject.com/ticket/26986#ticket).
",Tordek,None,2016-08-02T09:27:22Z,2016-08-05T20:10:59Z
7002,Fixed #26980 -- Added ParallelTestSuite.runner_class to aid subclassing,,cjerdonek,None,2016-08-02T08:19:28Z,2016-08-02T18:15:07Z
7001,Documented precision keyword argument of GeoHash GIS function.,"To be backported to 1.9 and 1.10.
",sir-sigurd,None,2016-08-02T08:09:22Z,2016-08-10T20:32:09Z
7000,Fixed #25598 -- Support for SCRIPT_NAME in STATIC_URL and MEDIA_URL,"https://code.djangoproject.com/ticket/25598

Build static and media URLs using SCRIPT_NAME prefix.
The prefix should be added when displaying the URL
and omitted when serving the URL.
",kottenator,None,2016-08-02T02:22:33Z,2018-08-23T14:32:46Z
6999,Fixed #26954 -- Fixed has_module_permission on ModelAdmin,"When has_module_permission method set to False on ModelAdmin,
app page was raising 403 Forbidden error. Now, it is fixed.
",halilkaya,None,2016-08-01T22:10:50Z,2016-10-10T16:07:19Z
6998,Fixed #26976 -- Added LiveServerTestCase.server_thread_class,"This makes it easier for one to change the class used by the TestCase
class to create server threads.  This follows the pattern used in other
test-related classes, like with SimpleTestCase.client_class and
DiscoverRunner.test_suite.
",cjerdonek,None,2016-08-01T18:31:26Z,2016-08-01T20:15:42Z
6997,Fixed #26966 -- made MySQL backend skip defaults for JSON columns,"[Ticket](https://code.djangoproject.com/ticket/26966)
",adamchainz,None,2016-08-01T13:56:53Z,2017-03-27T11:59:47Z
6996,Fix #26975: clarify use of paths with loaddata and how to namespace fixture files,#NAME?,brotskydotcom,None,2016-07-31T17:48:59Z,2016-08-26T18:03:54Z
6995,Fixed #26974 -- Added Hash index class for postgres,"Ticket [#26974](https://code.djangoproject.com/ticket/26974#ticket).

PR divided into two commits
1. Add introspection for index types in postgres
2. Add Hash index

I need some advice on one thing - Databases other than `postgresql` (which do not support hash indexes) silently fall back to creating a btree index according to my current implementation. Is this the right way ?
",akki,None,2016-07-31T09:45:54Z,2017-11-10T15:36:46Z
6994,Fixed #26930 -- Prevented makemigrations from accessing an empty database.,"https://code.djangoproject.com/ticket/26930
Other discussion in https://github.com/django/django/pull/6967
",timgraham,None,2016-07-31T01:00:15Z,2016-08-01T11:57:12Z
6993,Fixed #26972 -- Fixed is_collection definition in MapWidget initialization,,claudep,None,2016-07-30T20:13:18Z,2016-07-31T18:39:33Z
6992,Fixed #26970 -- Fixed crash with disabled ModelMultipleChoiceField.,"https://code.djangoproject.com/ticket/26970
",timgraham,None,2016-07-30T14:17:54Z,2016-07-31T00:40:27Z
6991,Fixed #26952 -- Added new section to Troubleshooting page,"Created new Unit Testing section under the Troubleshooting page,
with subsection regarding the problem raised in the ticket.
Linked appropriate pages to that section, as well as updated links
to the documentations of dependencies mentioned in the ticket description.
",an0o0nym,None,2016-07-30T00:14:03Z,2016-08-10T14:10:49Z
6990,Refs #25550 -- Corrected deprecation message for assigning M2M relations.,"Reported in https://code.djangoproject.com/ticket/26970#comment:7
",timgraham,None,2016-07-29T19:47:04Z,2016-07-31T00:50:10Z
6989,Fixed #26896 - Fix lazy init() of FileSystemStorage,"The check for trailing slash is omitted if the `base_url` is not of `string_types`.
",tpazderka,None,2016-07-28T11:52:20Z,2016-07-29T18:16:43Z
6988,Fixing support for long surnames,"Hi, my name is Raony Guimarães Corrêa Do Carmo Lisboa Cardenas.

For a long time i was having problems to login in djangopackages.com using my github account (pydanny/djangopackages#338). Today I tracked down the problem and it was because my surname is bigger than 30 characters. I'm sure there are other people on the same situation and this already happened with me in other django websites.

![selection_086](https://cloud.githubusercontent.com/assets/124987/17208678/f7a40f40-54b9-11e6-8978-7240782707c7.png)

I'm requesting an increase from 30 to 60 characters on last_name field so my login and others won't break again in the future.
",raonyguimaraes,None,2016-07-28T09:54:12Z,2016-07-28T16:16:00Z
6987,Improve misleading comment,"The comment `i.e. this preserves pre-existing values for both window.$ and  window.jQuery` is demonstrably untrue:

from https://api.jquery.com/jquery.noconflict/

**removeAll**
Type: `Boolean`
A Boolean indicating whether to remove all jQuery variables from the global scope (including jQuery itself).

This can be verified by logging the value of `$` before and after `jQuery.noConflict(true)` is called.
",squidsoup,None,2016-07-27T23:48:59Z,2016-08-26T18:21:55Z
6986,Fixed #26960 -- Added PasswordResetConfirmView option to automatically log in after a reset.,"Sometimes it's useful to log in users right after they have successfully reset their passwords. This patch adds a new attribute to the `PasswordResetConfirmView` to activate this behaviour.
",jordij,None,2016-07-27T23:04:29Z,2016-08-10T14:23:51Z
6985,Fixed #26933 -- Fixed an update_or_create test sometimes failing.,,jensen-cochran,None,2016-07-27T20:37:03Z,2016-07-29T01:45:35Z
6984,Omit 'just' from docs when explaining context processors,"This is a trivial documentation improvement.
",ana-balica,None,2016-07-27T20:32:20Z,2016-07-30T13:26:54Z
6983,(Docs) Minor consistency fix in index.txt,"Hello,
I noticed a small consistency issue in index.txt
I removed periods in two section headers
",kas,None,2016-07-27T15:16:24Z,2016-07-27T17:50:31Z
6982,Fixed #20888 -- Allowed specifying index ordering in class-based indexes.,"Ticket [#20888](https://code.djangoproject.com/ticket/20888/).

MySQL doesn't support this feature.

This PR is divided into 2 commits
- Modifying the introspections of all databases to take index order (ASC/DESC) into account.
- The feature itself.

I am using ""refs"" instead of ""fixed"" because the reporter had requested for the feature in `unique_together` as well but I couldn't understand what that means.
",akki,None,2016-07-27T14:25:53Z,2016-08-12T20:17:08Z
6981,Fixed #13312 --  Added a way to customize the order_by() of null fields.,"https://code.djangoproject.com/ticket/13312
",boblefrag,None,2016-07-27T13:18:40Z,2016-11-15T20:28:51Z
6980,Fixed #26961 -- Made Admin checks run when DEBUG = False,"[Ticket 26961](https://code.djangoproject.com/ticket/26961)
",adamchainz,None,2016-07-27T10:11:37Z,2017-01-09T23:50:13Z
6979,Fixed #26956 -- Allow redirecting to safe external hosts in LoginView and LogoutView.,"https://code.djangoproject.com/ticket/26956
",jdufresne,None,2016-07-27T01:15:06Z,2016-09-08T03:35:12Z
6978,Don't set path_info to '/',"This addresses the root cause of the following problem:

`APPEND_SLASH` does not work on a project's root URL. Sample project url conf:

```
project/urls.py:

urlpatterns = [
    url('', include(project.main.urls, namespace='project'))
]

project/main/urls.py:

urlpatterns = [
    url('^$', IndexPage.as_view(), name='index'),
    url('^about/$', AboutPage.as_view(), name='about'),
    url('^faq/$', FAQPage.as_view(), name='faq'),
    ...
]
```

Django's `RegexURLResolver` class is instantiated with `^/` as its root URL (https://github.com/django/django/blob/1.9.8/django/core/urlresolvers.py#L152), and it is against this pattern that the request path is first matched before being checked against each URL pattern. For example, if the request path is `/about/`, the RegexURLResolver instance matches the leading `/` and runs the remainder of the string (`about/`) through each pattern. Essentially, this means that leading slashes in the request path are thrown away in matching patterns.

The request path is calculated from the `PATH_INFO` environment variable—except that the Django `WSGIRequest` class forces an empty string to a `/` (https://github.com/django/django/blob/1.9.8/django/core/handlers/wsgi.py#L86). That is, if `PATH_INFO` is an empty string, the URL resolver is still matching against `/`. Because of this behavior of the `WSGIRequest` class, Django's URL resolving mechanism cannot tell the difference between navigating to `http://example.com/my-project` and `http://example.com/my-project/`, since both result in the request path being `/`.

Before the URL resolution happens, Django's `CommonMiddleware` decides (https://github.com/django/django/blob/1.9.8/django/middleware/common.py#L76) whether it should force a redirect and append a slash to the current request path. It makes this decision in part by checking whether the current URL ends with `/`. If it does end with `/`, then no redirect happens. If the path is `/about`, the redirect still happens. If, however, the path is `/`, it already ends with `/` as far as Django is concerned. Therefore, no redirect is issued.

This bug is only noticeable when Django lives in a sub-path of the root of the domain. Therefore, even though the Django tests passed after I made this change, I am not confident that it really solves the problem. I am hoping someone can recommend the best way to test this problem, and to verify that it does not cause other problems.
",frishberg,None,2016-07-26T15:29:20Z,2016-09-09T16:23:05Z
6977,Fixed #26951 -- Fixed AuthenticationForm to work with integer usernames.,"https://code.djangoproject.com/ticket/26951
",alexyer,None,2016-07-26T14:37:07Z,2016-08-10T13:57:30Z
6976,"Change German Umlauts mappings (""ä"" -> ""ae"")","This makes total sense in a German context.
However I'm also hoping for a little insight if this proposal is not accepted as to which languages would handle this differently.
",andreasnuesslein,None,2016-07-26T14:15:10Z,2016-07-28T15:41:28Z
6975,Fixed #26950 -- Removed unused methods from db backends,"https://code.djangoproject.com/ticket/26950
",andersonresende,None,2016-07-26T12:51:09Z,2016-07-27T11:34:44Z
6974,Fixed #26947 -- Added an option for the HSTS header preload directive,"**1) Fixed documentation to refer to HSTS includeSubdomains as a directive**
Since the spec refers to it as a 'directive' rather than a 'tag':
https://tools.ietf.org/html/rfc6797#section-6.1.2

**2) Added an option for the HSTS header preload directive**
Users can now set the new `SECURE_HSTS_PRELOAD` preference to `True`, to append the `preload` directive to  the `Strict-Transport-Security` header. This directive is one of the pre-requisites for site owners submitting their domain to the HSTS preload list, which helps protect the first connection to a site, prior to the HSTS header being received. For more information, see [Preloading Strict Transport Security](https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security#Preloading_Strict_Transport_Security).

**3) Added a deployment system check for SECURE_HSTS_PRELOAD**
The deployment system checks currently warn if either of `SECURE_HSTS_SECONDS` or `SECURE_HSTS_INCLUDE_SUBDOMAINS` are not set, so adding `SECURE_HSTS_PRELOAD` for consistency, as well as to encourage security best-practices.

---

Tests passed, using `./runtests.py check_framework middleware` under Python 2.7.

I'm open to suggestions for tweaks to naming/docs/whether to include the system check or not (and also say if you'd prefer that commit squashed).

Many thanks! :-)
",edmorley,None,2016-07-26T12:18:02Z,2016-08-11T00:41:10Z
6973,Fixed #26762 - Enable flatpages reusability,,ziima,None,2016-07-26T08:24:53Z,2016-08-27T17:16:57Z
6972,Fixed #26917 -- Fixed crash in disabled ModelChoiceFields.,"Partially reverted refs #25532 to fix a regression in Django 1.10.
This reintroduces a crash for disabled forms.JSONField (refs #26949),
however, that issue is also present on Django 1.9.

https://code.djangoproject.com/ticket/26917
",timgraham,None,2016-07-25T18:37:53Z,2016-07-27T12:36:28Z
6971,Schlerp patch fix sqlite string sub,"I was getting grief from this method complaining about improper string substitution... I realised its basically a hack to string sub the params into the SQL that would normally happen outside of python (in cursor.c mentioned in the very helpful comment). Long story short the hack doesn't work any more and I cannot understand how it ever did?!?

This is a simplified version showing the issue/fix:

``` python
# issue:
    print('?, ?' % ""derp"", ""herp"")
# proposed fix:
    print('?, ?'.replace(""?"", ""{}"").format(""derp"", ""herp""))
```

propose changing the substitution to use proper str.format() like this:

``` python
    def last_executed_query(self, cursor, sql, params):
        # Python substitutes parameters in Modules/_sqlite/cursor.c with:
        # pysqlite_statement_bind_parameters(self->statement, parameters, allow_8bit_chars);
        # Unfortunately there is no way to reach self->statement from Python,
        # so we quote and substitute parameters manually.
        if params:
            if isinstance(params, (list, tuple)):
                params = self._quote_params_for_last_executed_query(params)
            else:
                keys = params.keys()
                values = tuple(params.values())
                values = self._quote_params_for_last_executed_query(values)
                params = dict(zip(keys, values))
            # this is the error commented out below and replaced with fix - schlerp
            #return sql % params
            return sql.replace(""?"", ""{}"").format(*params)
        # For consistency with SQLiteCursorWrapper.execute(), just return sql
        # when there are no parameters. See #13648 and #17158.
        else:
            return sql
```
",schlerp,None,2016-07-25T06:24:01Z,2016-07-25T09:30:40Z
6970,"Fixed #26941 -- Remove quotes from uwsgi ""env = LANG=…"" configuration",,0x962,None,2016-07-24T22:03:56Z,2016-07-25T11:01:04Z
6969,Refs #25232 -- Added note about new is_active behavior in auth backends to release notes,,MarkusH,None,2016-07-24T17:05:31Z,2016-07-25T13:09:54Z
6968,Fixed #26945 -- Ensured that i18n_patterns returns a list,"`i18n_patterns()` can return a tuple, but should return a list: [#26945](https://code.djangoproject.com/ticket/26945)
",AlexHill,None,2016-07-24T14:02:20Z,2016-07-24T15:25:40Z
6967,Fixed #26930 -- Fixed makemigrations crash with an empty DATABASES value.,"Set is_usable on the dummy db to False and checked this setting in
makemigrations when iterating through the connections.
",lizlemon,None,2016-07-23T13:25:16Z,2016-07-31T01:16:27Z
6966,Fixed #26938 -- Fixed invalid HTML in template postmortem on the debug page.,"https://code.djangoproject.com/ticket/26938
",jdufresne,None,2016-07-23T00:40:20Z,2016-07-24T16:22:51Z
6965,Fixed #26511 - Added documentation for substring search in JSONField,,jensneuhaus,None,2016-07-22T20:31:04Z,2016-09-27T18:53:52Z
6964,Fixed #26834 -- Made IntegerField forward min/max validators to form …,"…field

The change forwards the user set limit values of MinValueValidator/MaxValueValidator
defined in the model IntegerField to the form field using the formfield() method.

Thanks Markus Holtermann for help with the patch.
",sgzsh269,None,2016-07-22T19:38:48Z,2016-10-22T20:29:18Z
6963,Fixed #26925 -- Linked aggregation ordering topic from Meta.ordering docs.,"https://code.djangoproject.com/ticket/26925
",timgraham,None,2016-07-22T18:20:49Z,2016-07-25T10:21:39Z
6962,Fixed #26909 -- Allowed UserAttributeSimilarityValidator to validate against model properties.,"See https://code.djangoproject.com/ticket/26909 for details
",andrewnester,None,2016-07-22T08:54:50Z,2016-08-10T19:11:42Z
6961,Fixed #26928 -- Changed checked attribute to HTML5 boolean style.,"https://code.djangoproject.com/ticket/26928
",jdufresne,None,2016-07-22T05:10:37Z,2016-08-04T23:17:38Z
6960,Fixed #26927 -- Fixed subwidget iteration to pass disabled and required attributes.,"https://code.djangoproject.com/ticket/26927
",jdufresne,None,2016-07-22T02:41:25Z,2016-08-01T14:50:28Z
6959,Cleaned up unnecessary coerce to list in forms tests.,,jdufresne,None,2016-07-22T00:19:51Z,2016-07-22T11:46:45Z
6958,Improved documentation for Copying Model Instances,"Clarified documentation to be more specific about how copying works with
various relations. Previous documentation stated that all relations require
extra code to copy over, but this is only the case for certain relations.
",agilgur5,None,2016-07-21T21:39:58Z,2019-08-08T03:10:53Z
6957,Fixed #26685 -- Added dwithin lookup to spatialite backend.,"https://code.djangoproject.com/ticket/26685
",kevswanberg,None,2016-07-21T21:14:59Z,2016-08-31T00:47:15Z
6956,Fixed #25937 -- Fixed null value crashes when annotating with Trunc functions.,"Summary of changes: 
- Rewrote `create_model` helper in tests file to account for null fields. 
- Added test case to `test_trunc_year_func` for querying items with null fields.
- Added graceful handling of null values to user-defined sqlite function `_sqlite_date_trunc`, so that the test passes.

**WIP**. Need to add tests to all other `Trunc` functions and add fixes to a couple other user-defined sqlite functions (as none are checking for `None` at the moment). 
",cheryllium,None,2016-07-21T20:56:42Z,2017-01-10T00:35:13Z
6955,Remove unnecessary/duplicate selector; combining properties,"Didn't create a ticket because I assumed it a trivial fix.
",chadwhitman,None,2016-07-21T20:54:19Z,2016-07-21T20:58:15Z
6954,Fixed #25788 -- Enabled the cached template loader if debug=False.,"Changed `Engine` to wrap default loaders in the cached template
loader if no loaders are specified and debug is False. Updated the
documentation and release notes accordingly and added tests to
ensure that the default loaders are as expected.
",harrislapiroff,None,2016-07-21T20:25:20Z,2016-09-02T23:51:12Z
6953,Fixed #26902 -- Add secure argument to is_safe_url,,FadiAlnabolsi,None,2016-07-21T19:33:17Z,2016-07-21T19:35:28Z
6952,Fixed #18348 -- Documented SesssionStore.create().,"https://code.djangoproject.com/ticket/18348
",pnosum,None,2016-07-21T18:10:53Z,2016-07-22T21:17:56Z
6951,Upated sessions.txt to include more description about create() and sa…,"…ve() methods
",pnosum,None,2016-07-21T17:45:38Z,2016-07-21T18:09:52Z
6950,Refs #26796 -- Fixed ManyToManyField's limit_choices_to warning without a through model.,"https://code.djangoproject.com/ticket/26796

per discussion https://github.com/django/django/commit/ba53da894fc713629ae4d3fbdd14eff98c808389#commitcomment-18263905
",kevswanberg,None,2016-07-21T17:25:24Z,2016-07-21T18:32:47Z
6949,"Fixed #26924 -- Resolve symlinks, if any, in i18n test directory paths.","https://code.djangoproject.com/ticket/26924
",tobiasmcnulty,None,2016-07-21T15:28:54Z,2016-07-21T17:54:35Z
6948,Fixed #26657 -- Fixed MySQL 5.7 GIS test failures.,"https://code.djangoproject.com/ticket/26657
",sir-sigurd,None,2016-07-21T13:29:19Z,2016-07-28T22:11:25Z
6947,Trivial changes,"Added augmented assignments, etc.
",Stranger6667,None,2016-07-21T08:41:34Z,2016-07-21T14:09:30Z
6946,Trivial changes,"Added augmented assignments, etc.
",Stranger6667,None,2016-07-21T08:32:38Z,2016-07-21T08:34:08Z
6945,Fixed #26923 -- Fixed tests with older releases of numpy,"numpy.VisibleDeprecationWarning does not exist in older releases
of numpy that are still widely used (like 1.8.2 in Debian 8)
and we must deal properly with its non-existence.
",rhertzog,None,2016-07-21T08:00:18Z,2016-07-21T16:59:56Z
6944,Fixed #26882 -- Added tests for auth.views.logout_then_login().,"Added couple of tests for `logout_then_login`
`extra_content` parameter marked as deprecated because it's redundant in `logout_then_login` function.

See https://code.djangoproject.com/ticket/26882 for details

See https://code.djangoproject.com/ticket/26929 for details about `extra_context` parameter depreaction
",andrewnester,None,2016-07-20T16:33:24Z,2016-07-28T16:01:29Z
6943,Fixed #26922 -- Fixed SimpleTestCase.assertHTMLEqual() crash on Python 3.5.,"I got this on Django 1.9 with Python 3.5:

```
    def assert_and_parse_html(self, html, user_msg, msg):
        try:
            dom = parse_html(html)
        except HTMLParseError as e:
>           standardMsg = '%s\n%s' % (msg, e.msg)
E           AttributeError: 'HTMLParseError' object has no attribute 'msg'
```

As I see it happens when input HTML is not valid (I tried with ""< div></ div>"")
",Stranger6667,None,2016-07-20T14:15:23Z,2016-07-21T18:02:32Z
6942, Fixed #24928 -- Added introspection support for PostgreSQL-specific fields,"The first two commits are supposed to be committed separately. I'll rebase after that.
",claudep,None,2016-07-20T12:19:00Z,2020-04-01T06:00:05Z
6941,Fixed #26919 -- Included admin action form's media in changelist view's media,"https://code.djangoproject.com/ticket/26919
",stkrp,None,2016-07-20T11:44:16Z,2016-08-12T02:04:45Z
6940,Fixed #25454 -- Ensured register_hstore_handler is called for all connections,,claudep,None,2016-07-20T08:21:39Z,2016-07-21T15:55:51Z
6939,Refs #24928 -- Added introspection support for UUIDField,,claudep,None,2016-07-20T07:04:01Z,2016-07-20T15:28:20Z
6938,Fixed #13809 -- Modified FieldFile to allow opening in modes other than 'rb',"I've been running into this recently, and so I took a stab at a (hopefully) trivial fix for this issue.

The root problem here (as discussed in the [ticket](https://code.djangoproject.com/ticket/13809)) is that the `FieldFile.file` property opens all files in mode 'rb', regardless of what mode you request.

To work around this, people seem to be closing and re-opening the file, or else just opening the file straight from the storage. An attempted patch for this issue did that exact thing, but was rejected.

As an alternative, I just made `FileField.open()` check for the `_file` property. If it's missing, we open the file from the storage using the given mode. Otherwise, we fall back to the previous behavior of calling `FileField.file.open()`.
",csinchok,None,2016-07-19T23:28:33Z,2016-08-09T16:53:57Z
6937,Fixed #26918 -- Clarified source of pre/post_save update_fields argument.,"https://code.djangoproject.com/ticket/26918
",timgraham,None,2016-07-19T19:28:16Z,2016-07-21T14:06:42Z
6936,Fixed #26916 -- Fixed prefetch_related when using a cached_property as to_attr.,"Thanks Trac alias karyon for the report.
",charettes,None,2016-07-19T18:57:29Z,2016-07-19T20:06:52Z
6935,Fixed a GeoIP test failure with the latest data.,,timgraham,None,2016-07-19T11:58:45Z,2016-07-19T13:28:36Z
6934,#26789 Save empty GIS geometries to the database,"Previously Falsey geometry objects didn't get saved, which is a random mix depending on their types & content. Every geometry object is now explicitly saved regardless of Truthiness.

EMPTY handling isn't that great with the supporting libraries/DBs, but this at least always ensures the geometry is passed to the database to decide.
- Skips issue with GEOS 3.5.0 for 'POINT EMPTY'
- Skips issue with PostGIS 2.2.2 for 'POLYGON EMPTY'

This is still a WIP for ticket discussion
",rcoup,None,2016-07-19T09:05:59Z,2016-09-27T14:09:21Z
6933,Fixed #26915 -- Fixed regression handling responses returned from view middleware,"https://code.djangoproject.com/ticket/26915

In Django 1.10, responses returned from view middleware are returned immediately, skipping template response middleware and the call to `response.render()`.
",AlexHill,None,2016-07-19T08:48:17Z,2016-07-25T18:00:52Z
6932,Refs #26905 -- Added possibility to use any MultiValueDict-like objects as a form data,"Here is a patch proposal for https://code.djangoproject.com/ticket/26905
",marcinn,None,2016-07-18T18:07:03Z,2016-08-09T23:50:13Z
6931,Fixed #26906 -- Use AlterFooTogether as parent for AlterIndex/UniqueTogether operations,"Ticket [#26906](https://code.djangoproject.com/ticket/26906).
",akki,None,2016-07-18T16:57:40Z,2016-07-28T16:53:00Z
6930,Fixed #26844 -- Made formset's validate_min validation ignore empty forms.,"See https://code.djangoproject.com/ticket/26844 for details
",andrewnester,None,2016-07-18T14:33:40Z,2016-08-10T17:03:52Z
6929,Fixed #26908 -- Fixed crash with jsonfield__key__isnull lookup on PostgreSQL 9.4.,"https://code.djangoproject.com/ticket/26908
",timgraham,None,2016-07-18T13:56:49Z,2016-09-07T17:56:45Z
6928,Implemented #26902 - Add `secure` argument to `is_safe_url()`,"If `secure` option for `is_safe_url()` set to `True` then only urls with `https` scheme or relative one (like `/some-url/`) considered secure.
See https://code.djangoproject.com/ticket/26902 for details
",andrewnester,None,2016-07-18T13:41:23Z,2016-07-18T14:43:08Z
6927, Fixed #26114 -- Removing Meta.db_table generates migration with wron…,"…g rename in comment(None).
",PREM1980,None,2016-07-17T22:04:12Z,2016-07-28T15:16:23Z
6926,Fixed #26180 -- AlterUniqueTogether should stay before RemoveField operation after optimization,"Ticket [#26180](https://code.djangoproject.com/ticket/26180).
AlterFooTogether operations now take into account their older value while deciding field_reference.
",akki,None,2016-07-17T10:39:49Z,2016-07-28T16:50:25Z
6925,Ticket 26114,,PREM1980,None,2016-07-17T01:34:45Z,2016-07-17T02:06:33Z
6924,Fixed #26114 -- Removing Meta.db_table generates migration with wrong…,"Removing Meta.db_table generates migration with wrong rename in comment (None).
",PREM1980,None,2016-07-17T01:00:25Z,2016-07-17T16:08:55Z
6923,Fixed #26902 -- Added require_https argument to is_safe_url(),"And use the argument in Django's views where it makes sense, i.e.
`django.contrib.auth` and `django.views.i18n`

Fixes https://code.djangoproject.com/ticket/26902
",suligap,None,2016-07-16T18:21:09Z,2016-08-19T23:21:07Z
6922,Changed inappropriate variable names,"I have made the changes in two different commits. I can squash them if that would be better.
",akki,None,2016-07-16T16:36:19Z,2016-07-18T12:47:30Z
6921,Fixed #26826 -- Stripped spaces from dumpdata pks arguments,"Thanks Kevin Graham Foster for the report.
",claudep,None,2016-07-16T10:30:55Z,2016-07-16T18:50:07Z
6920,Fixed #26900 -- Fixed crash accessing deferred FileFields.,"https://code.djangoproject.com/ticket/26900
",timgraham,None,2016-07-15T20:03:40Z,2016-07-16T12:47:21Z
6919,Fix dumpdata.py out of memory with queryset.iterator(),"Django loads all objects into memory when iterating over a queryset, even with .iterator().
Thus, it runs out of memory when queryset.iterator() operates on all objects of a huge table (it crashes for a table with 5 million rows for me).
So I borrowed the snippet https://djangosnippets.org/snippets/1170/ written by jkocherhans, which reads a chunk of the queryset every time. It requires the queryset to be ordered, which has already been done in dumpdata.py.
",azalea,None,2016-07-15T18:59:48Z,2016-07-15T19:12:51Z
6918,Refs #18682 -- Edited explanation in stale content type deletion.,"Follow up to 8db889eaf7dce0cb715b075be32047c1b1b316da.
",timgraham,None,2016-07-15T15:12:24Z,2016-08-11T01:37:47Z
6917,Refs #26889 -- Refactored SchemaEditor to allow backend specific indexes.,"Follow up to PR #6909.
",jdufresne,None,2016-07-15T03:04:24Z,2016-07-15T14:34:38Z
6916,Fixed #26899 -- Document why RawSQL params is an explicit parameter,"A small change for: https://code.djangoproject.com/ticket/26899. Happy to change/amend as you see fit! :)
",petedmarsh,None,2016-07-14T21:24:21Z,2016-07-21T14:28:31Z
6915,Fixed #26897 -- Supported non-ascii file names with makemessages,,claudep,None,2016-07-14T16:26:10Z,2016-07-14T18:33:49Z
6914,Fixed #26888 -- Fixed concurrency issue in URL resolver.,"Fixed a regression in 625b8e9.

Fixed improper short-circuiting that could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().
",knbk,None,2016-07-14T14:42:31Z,2016-07-14T18:41:52Z
6913,Fixed some typos in postgres search docs,,knyghty,None,2016-07-14T11:11:25Z,2016-07-14T11:52:48Z
6912,Merge pull request #1 from django/master,"Update from original
",royge,None,2016-07-14T07:44:13Z,2016-07-14T07:52:17Z
6911,Minor rewording of template organization in tutorial.,,dlrice,None,2016-07-13T17:17:18Z,2016-07-14T11:51:18Z
6910,fix typo in file coding-style.txt,"poll.getUniqueVoters --> poll.getUniqueVoters()
",haiiiiiyun,None,2016-07-13T06:07:14Z,2016-07-13T14:15:40Z
6909,Fixed #26889 -- Fixed missing PostgreSQL index in SchemaEditor.add_field().,"https://code.djangoproject.com/ticket/26889
",jdufresne,None,2016-07-13T01:33:29Z,2016-07-14T01:55:25Z
6908,Fixed #26890 -- Fixed IntegerField crash on Unicode numbers.,"https://code.djangoproject.com/ticket/26890
",jdufresne,None,2016-07-12T22:37:45Z,2016-07-14T13:38:58Z
6907,Fixed #26884 -- Evaluated callables in QuerySet.update_or_create()'s defaults when updating.,"Fixed the case where update_or_create is updating, the callables are not evaluated.
",kennethyang404,None,2016-07-12T21:39:57Z,2016-07-13T02:10:27Z
6906,Fixed #26891 -- Fixed lookup registration for ForeignObject,"https://code.djangoproject.com/ticket/26891

Update - just recapping the current state of the PR:
### Implementation:

The scope has expanded a bit. In fixing the original lookup registration issue, it was necessary to add `get_lookups()` to the registration API.
- `get_lookups()` simply returns the merged set of `class_lookups` in a field's class hierarchy. 
- For performance reasons, the lookups are cached on the field as `cached_lookups`. 
- Similar to registering lookups, `cached_lookups` are checked on the `cls.__dict__`. This prevents DateTimeField from accidentally using `Field.cached_lookups`, which wouldn't include the date transforms.
- `register_lookup()` will bust the cached lookups on a field and any of its subclasses. e.g., `ForeignObject.register_lookup()` would bust the cache of ForeignObject, ForeignKey, OneToOneField, etc...
- `ForeignObject.get_lookups()` only caches `class_lookups` up to it's position in the class hierarchy, excluding the lookups registered to Field.
### Performance tests:

Used timeit to time `field.get_lookup('in')` for different fields, comparing the current master to the PR. 100,000 iterations per run, 5 runs per field.

**master branch:**

```
CharField       average: 0.2338s [0.2377979755401611, 0.2334151268005371, 0.2305140495300293, 0.2334628105163574, 0.2340850830078125]
DateTimeField   average: 0.4872s [0.4839980602264404, 0.4864580631256103, 0.4956321716308594, 0.4867660999298095, 0.4834890365600586]
ForeignKey      average: 0.0266s [0.0261549949645996, 0.0266189575195312, 0.0267159938812255, 0.0269579887390136, 0.0267570018768310]
```
- Getting lookups on ForeignKey is fast because the lookups are hardcoded (which causes lookup registration to have no effect).
- DateTimeField is slower than CharField since it needs to test multiple `class_lookups` dicts.

**pr:**

```
CharField       average: 0.2818s [0.2849998474121094, 0.2799849510192871, 0.2836630344390869, 0.2778408527374267, 0.2827849388122558]
DateTimeField   average: 0.2833s [0.2864518165588379, 0.2799329757690429, 0.2777631282806396, 0.2892100811004638, 0.2832741737365722]
ForeignKey      average: 0.2851s [0.2807130813598633, 0.2836570739746094, 0.2891471385955810, 0.2907619476318359, 0.2814109325408935]
```
",rpkilby,None,2016-07-12T20:04:11Z,2017-05-23T01:59:00Z
6905,Fixed #26671 -- Fixed bug in url converter,"https://code.djangoproject.com/ticket/26671
",mrlnx,None,2016-07-12T12:29:38Z,2016-07-12T14:19:43Z
6904,Fixed #17657 -- Made ModelForm respect ModelMultipleChoiceField's to_field_name.,"…tead of a list of pks, let the form fields handle it.

Remove obsolete tests for `model_to_dict` performance optimization.
",andreyfedoseev,None,2016-07-11T20:03:51Z,2016-07-12T20:24:15Z
6903,Fixed #25187 -- Made request available in authentication backends.,"https://code.djangoproject.com/ticket/25187
",AleksejManaev,None,2016-07-11T15:01:44Z,2016-09-13T00:12:35Z
6902,Fixed #19222 - Clarified that custom managers don't apply to intermediate joins,"Documentation to clarify that custom managers don't apply to intermediate joins has been added.

Please see for details https://code.djangoproject.com/ticket/19222
",andrewnester,None,2016-07-11T13:30:51Z,2016-08-13T00:50:11Z
6901,Fixed #26867 -- Improved migrate command,"https://code.djangoproject.com/ticket/26867#ticket
",hugotacito,None,2016-07-10T15:05:06Z,2016-07-10T15:20:45Z
6900,restore jquery initial to old style,"please see [ticket#26885](https://code.djangoproject.com/ticket/26885#ticket)
",9nix00,None,2016-07-10T04:33:07Z,2016-07-12T14:36:43Z
6899,Fixed #26088 -- Fixed autodector to detect changing proxy model to MTI,"https://code.djangoproject.com/ticket/26088
",jdufresne,None,2016-07-09T17:57:18Z,2016-07-13T01:45:17Z
6898,Fixed #24442 -- Improve schema's index name creating algorithm,"Ticket [#24442](https://code.djangoproject.com/ticket/24442).
",akki,None,2016-07-09T13:44:21Z,2016-08-11T18:37:27Z
6897,Fixed #26881 -- Fixed duplicate managers in migrations.,"When both parent and child models had managers with the same name and
a migrations opt-in both were added to the migration state.
",loic,None,2016-07-09T07:17:21Z,2016-07-09T11:09:56Z
6896,Added strict=True to all SchemaEditor.alter_field() calls in tests.,"Using `strict=True` should help catch bugs earlier.
",jdufresne,None,2016-07-08T14:23:33Z,2016-07-08T16:03:33Z
6895,Fixed #26872 -- Fixed filter overflow bug in admin,"Updated the style of filter choices to prevent overflow. Added
title attribute with full text to each choice.
",kennethyang404,None,2016-07-08T02:09:28Z,2016-07-09T12:07:09Z
6894,Fixed #26796 -- Added a system check for m2m fields with ignored limit_choices_to.,"https://code.djangoproject.com/ticket/26796
",andersonresende,None,2016-07-07T21:23:45Z,2016-07-08T23:37:40Z
6893,Fixed #26868 -- Change MySQL version detection,"Change how the server version is retrieved to handle a bug with mariadb and mysql native client not stripping the `5.5.5-` prefix.
",marcaurele,None,2016-07-07T13:16:34Z,2016-07-15T14:28:52Z
6892,fix typo in docs/topics/serialization.txt," the value the value -->  the value
",haiiiiiyun,None,2016-07-07T12:28:56Z,2016-07-07T13:30:23Z
6891,Fix a typo in the fulltext search doc.,"Title says it all, really.
",metamatik,None,2016-07-07T09:21:00Z,2016-07-07T11:34:20Z
6890,Fixed #26837 -- Updated ModelMultipleChoiceField docs,"Added a note in the ModelMultipleChoiceField docs that
mentions support for the to_field_name parameter.
- Documented support for to_field_name parameter
- Linked to_field_name docs from ModelChoiceField

Changes:
- ref/forms/fields.txt

Notes:
The to_field_name parameter is tested for both ModelChoiceField and ModelMultipleChoiceField in the [OtherModelFormTests class](https://github.com/django/django/blob/c9ae09addffb839403312131d4251e9d8b454508/tests/model_forms/tests.py#L2404). I don't think it requires any new tests.
",smarlowucf,None,2016-07-06T16:49:15Z,2016-07-08T15:31:12Z
6889,Fixed #26749 -- Preserved behavior of use_for_related_field during deprecation.,"Follow-up of #6825.
- Updates test cases
- Adjusts deprecation warning texts
- Adds corner case addressed by #6825, providing a workaround for [ticket 26749](https://code.djangoproject.com/ticket/26749)

As it's intended to be a temporary workaround for v1.10, I based the change on top of `stable.1.10.x`, but I can move it back to `master` if needed. I can also merge the two commits.
",spectras,None,2016-07-05T16:50:29Z,2016-07-11T17:42:03Z
6888,Fixed #26841 -- Avoid remaking tables for altering togethers in sqlite3,"Ticket [#26841](https://code.djangoproject.com/ticket/26841).

I am not sure what tests (if any) should be written.
",akki,None,2016-07-05T12:55:21Z,2016-07-06T08:03:47Z
6887,Fixed #25461: Handling class inheritance for meta API backward code examples,"In case of inherited classes, `get_all_related_objects` and `get_all_related_objects_with_model`
were, in the old internal API, not returning the `OneToOneField` auto-created by Django to handle this inheritance.
But the examples given to help people to go through this transition smoothly are not
equivalent for these 2 functions.

The idea is now to also check that the returned fields are not concrete to avoid this difference
(original idea from ad-65 in related [ticket](https://code.djangoproject.com/ticket/25461)).
",romgar,None,2016-07-05T12:02:30Z,2016-07-06T13:28:38Z
6886,Fixed #26067 -- Allowed ordering with StringAgg and ArrayAgg.,"Added OrderableAgg base class for aggregates that allow for ordering input before aggregation,
such as Postgres' string_agg() and array_agg().

An 'ordering' element is added to the 'extra' parameter. It is parsed and resolved in
OrderableAggs 'resolve_expression'.

The actual 'ORDER BY' clause is formed in OrderableAggs 'as_sql' to ensure this parameter contains
well-formed SQL.

Add ordering to StringAgg and ArrayAgg

By inheriting from the novel OrderableAgg, these aggregations now allow ordering inputs prior to
aggregation.
",florisdenhengst,None,2016-07-05T10:00:26Z,2016-11-24T14:21:59Z
6885,Fixed #26903 -- Added support for date and timestamp containment within postgres range field.,"https://code.djangoproject.com/ticket/26903
",ar45,None,2016-07-04T22:01:01Z,2017-01-09T21:00:05Z
6884,Fixed #26822 -- Recreate database clones when using keepdb option,"This PR is related to this ticket https://code.djangoproject.com/ticket/26822 and proposes a solution to handle new migrations when options `--keepdb` and `--parallel` are used at the same time.

I wanted to see if we could apply migrations with `migrate` on cloned databases, but it seems that Django is not initialising the clones on the standard way, but with specific features (file copy for sqlite, database template for PostgreSQL, sqldump for MySQL).
Using a more ""conventional"" way to initialise these clones databases would imply:
- A quite massive refactoring,
- A longer cloned database time creation.
  And it would make sense only when both options (`keepdb` and `parallel`) are used at the same time.

At the meantime, I propose to recreate the clones, even with `keepdb` option, so that adding new migrations and running the tests still works.
If we stay with this solution, we probably have to add some documentation around `keepdb` option and/or `parallel` one to explain this behaviour.
",romgar,None,2016-07-04T17:17:27Z,2016-07-09T12:09:44Z
6883,Minor rewording of tutorial01 text.,,dlrice,None,2016-07-04T13:45:05Z,2016-07-06T19:24:54Z
6882,Fixed AcmeBookList publisher name case to match note,"The name field on Publisher is a case-sensitive CharField.  The example code filtered against 'Acme Publishing', but the note below it said to create 'ACME Publishing'.
",tedmiston,None,2016-07-04T09:08:42Z,2016-07-06T12:48:43Z
6881,fix typo on docs/topics/auth/passwords.txt,"by first first --> by first
",haiiiiiyun,None,2016-07-04T04:51:28Z,2016-07-04T15:02:17Z
6880,Fixed #26761 Added tooltip for custom field in admin changelist view,"Fixed ticket #26761 (Cf. https://code.djangoproject.com/ticket/26761)

A help_text property can be set for a custom field defined
in ModelAdmin.list_display. This property is displayed as a
tooltip on hover in the change list page of the admin.
",ducdetronquito,None,2016-07-03T18:52:47Z,2016-12-29T15:00:25Z
6879,Fixed #25996 -- Revised the Performance section in topics/http/urls,"https://code.djangoproject.com/ticket/25996
",joshu23,None,2016-07-03T18:51:32Z,2016-08-04T14:32:49Z
6878,Fixed #26833 -- Fixed _constraint_names() to handle uppercases_column_names feature.,"https://code.djangoproject.com/ticket/26833
",jdufresne,None,2016-07-03T18:19:30Z,2016-07-07T12:09:43Z
6877,Fixed #5908 -- Added {% resetcycle %} template tag,"Added the {% resetcycle %} template tag to restart the
{% cycle %} tag from its first value when it's next encountered.

Thanks to Simon Litchfield for the report, Uninen for the initial
patch, akaihola, jamesp, b.schube and Florian Appoloner for
subsequent patches, tests and documentation.
",sergei-maertens,None,2016-07-03T16:06:10Z,2016-09-01T20:11:05Z
6876,Fixed #26821 -- Fixed forms.Email/URLField crash on None value.,"https://code.djangoproject.com/ticket/26821
",PriyWerry,None,2016-07-03T14:53:06Z,2016-07-14T17:09:28Z
6875,Added clipboard support to tutorial's code snippets,"This works in tandem with django/djangoproject.com#678 to add a ""copy to clipboard"" icon on the tutorial's code snippets (only those with a filename for now).
",bmispelon,None,2016-07-03T13:33:09Z,2016-07-06T15:13:06Z
6874,Fixed #26831 -- Documented session data must be JSON encodable for JSONSerializer.,"https://code.djangoproject.com/ticket/26831
",sadaf2605,None,2016-07-03T07:00:29Z,2016-07-12T17:49:38Z
6873,Refs #25251: update settings.SERIALIZE description related to --keepdb issue.,"Using `SERIALIZE = False` prevents tests with `serialize_rollback = True` to work as expected, and is described in the documentation.
But it will also prevent the `--keepdb` option to properly keep the serialized initia data at the end of the test suite.
This PR is updating the documentation according to this, and is related to some discussions with @timgraham in #6297.
",romgar,None,2016-07-02T23:34:22Z,2016-07-12T15:06:53Z
6872,Fix #26840 -- Move `teardown_databases` to `django.test.utils`.,"Moved `teardown_databases` from a method on DiscoverRunner to a utility function. To be consistent with other testing utilities, this patch also moves `setup_databases` into `django.test.utils.`.

This commit makes it easier to build custom test runners without having to rely on tricks with DiscoverRunner, i.e.:
https://github.com/pytest-dev/pytest-django/blob/def28820dd24283ee32650f2adb8ace21d05a0a1/pytest_django/fixtures.py#L58-L59
",pelme,None,2016-07-02T22:28:01Z,2016-08-17T17:59:59Z
6871,Refs #26808 -- Avoid clashing keyword arguments in test_autodetector,"When `index` argument is passed [here](https://github.com/django/django/pull/6857/files#diff-c11e6432df7086eda3dfb9ab8e5b2839R1163), an error is thrown.

Although I think that these variables should be passed in a dictionary instead into a `**kwargs` but changing the variable name in the current signature seems a quick fix.
",akki,None,2016-07-02T18:19:02Z,2016-07-03T07:02:54Z
6870,Fixed #26739 -- Made reverse RemoveField handle non-nullable columns,"Ticket: https://code.djangoproject.com/ticket/26739

Thanks @Gagaro for the report and @apollo13 for the initial patch
and pair programming.
",MarkusH,None,2016-07-02T18:15:40Z,2020-06-01T09:36:23Z
6869,Fixed #18682 -- Expanded explanation in stale content type deletion.,"https://code.djangoproject.com/ticket/18682
",mxsasha,None,2016-07-02T17:51:03Z,2016-07-03T13:55:14Z
6868,Fixed #26615 -- Password reset token now depends on user's email.,"Also refactored user's hash generation into methods on User and
AbstractUser so that PasswordResetTokenGenerator doesn't need to
know which fields are available.

Added documentation to auth/default to highlight user email being
used in password reset hash

Based on work of @SilasX in pull request https://github.com/django/django/pull/6621.  This provides the missing documentation and squashes his commits.
",ro5k0,None,2016-07-02T15:54:05Z,2016-09-27T15:20:14Z
6867,Fixed #26832 -- Added translated language name on the get_language_info documentation,,Leila20,None,2016-07-02T14:32:35Z,2016-07-02T16:59:08Z
6866,Refs #26709 -- Restructured Index class and its internals.,"This commit
- removes the dependency of the `Index` class on it's `model` attribute when a `name` is explicitly passed to it. The signatures of `SchemaEditor` methods `add_index` and `remove_index` have been changed for that.
- makes it necessary for the index name to be passed to the `AddIndex` migration as it is supposed to be a part of the deconstructed form of the migration.
- adds docs for the `SchemaEditor`'s `add_index` and `remove_index` methods.

This PR aims to stabilise the newly added `Index` API and it's migrations. @markush - as per our earlier discussions.
",akki,None,2016-07-02T14:31:33Z,2016-07-07T14:51:14Z
6865,Fixed 26830 -- Prevented the 'with' templatetag from resetting the cycle variable to its initial state.,"https://code.djangoproject.com/ticket/26830
",flupzor,None,2016-07-02T13:34:34Z,2016-08-09T13:09:01Z
6864,Fixed #26827 -- Removed raisings of exceptions for modelstate.fields …,"Done during the Django sprint in Amsterdam (July 2 2016)
",freezas,None,2016-07-02T13:10:09Z,2016-07-02T13:53:05Z
6863,Refs #21548 -- Skipped tests that rely on pillow when it's not installed,,bmispelon,None,2016-07-02T12:45:26Z,2016-07-02T13:51:24Z
6862,#26829 Simplify the first tutorial command of tutorial01 updating --version args,,sadaf2605,None,2016-07-02T10:18:56Z,2016-07-02T10:54:08Z
6861,Fixed #10686 -- Added interpolation of 'class'/'verbose_name' in Meta.permissions.,"Allowed (base) models to specify generic permissions that become
specific for the children.

Thanks to faldridge for the report and initial patch, Soby for the
improved patch and derega for adding a test case.

---

This is the improved patch after processing the remarks on #6071, trac and the mailing list (https://groups.google.com/forum/#!topic/django-developers/imjaHrfk6Eo/discussion)
",sergei-maertens,None,2016-07-02T09:57:14Z,2020-02-24T18:48:32Z
6860,Fixed #26802 -- Prevented crash when attaching bytes as text message attachment,"https://code.djangoproject.com/ticket/26802
",claudep,None,2016-07-01T20:07:07Z,2016-07-08T10:24:11Z
6859,Fixed a urlpatterns_reverse test on Python 2 non-ASCII path.,,timgraham,None,2016-07-01T12:47:57Z,2016-07-01T13:09:31Z
6858,Fixed #26671 -- Made HashedFilesMixin ignore the 'chrome' scheme.,"Fixed using schemes like `chrome://` and etc in static files.
Test provided.

See https://code.djangoproject.com/ticket/26671 for details
",andrewnester,None,2016-07-01T08:54:41Z,2016-07-12T12:20:39Z
6857,Fixed #26808 -- Introduce Meta.indexes,"Ticket [#26808](https://code.djangoproject.com/ticket/26808).

Other PR that needs to be merged before this - [~~!6871~~](https://github.com/django/django/pull/6871).
",akki,None,2016-06-30T23:45:26Z,2016-08-05T22:16:09Z
6856,Add --parallel to speed up tests docs,,morenoh149,None,2016-06-30T22:10:51Z,2016-07-01T13:06:29Z
6855,Fixed #26823 - update_last_login signal handler handles custom user with no last_login field,"https://code.djangoproject.com/ticket/26823
",hjwp,None,2016-06-30T18:49:50Z,2016-07-03T12:46:20Z
6854,Fixed #17209 -- Added password change/reset class-based views,,claudep,None,2016-06-30T13:12:58Z,2016-07-16T09:07:16Z
6853,Fixed #25109 -- Added a system check for invalid entries in MIGRATION_MODULES.,"https://code.djangoproject.com/ticket/25109
",berkerpeksag,None,2016-06-30T12:26:24Z,2016-08-26T18:04:36Z
6852,Fixed #25292 - str object has no attribute '_meta' crash in ManyToManyField.through_fields check,"If we have string representing non-existing model in `through` parameter when defining many-to-many relationship, we have crash caused by `_check_long_column_names` method.

Tests are not failed because when we have sqltile configured as db there is no action taken about checking long names. But issue can be reproducible on different databases, such as MySQL for example.

That's why test are not included in this PR.
As @timgraham suggests I took solution similar to this https://github.com/django/django/commit/21130ce1a9c4fcbfce4c614be9e5408b43092bf0#diff-3010fc5a498b7171c342520f34507968R472

See https://code.djangoproject.com/ticket/25292 for details
",andrewnester,None,2016-06-30T11:26:53Z,2016-06-30T12:56:18Z
6851,"Fixed #25317, #26090 -- Fixed swapping combinations of unique and db_index during migrations.","https://code.djangoproject.com/ticket/25317
https://code.djangoproject.com/ticket/26090
",jdufresne,None,2016-06-30T04:42:01Z,2016-07-08T00:33:03Z
6850,"Fixed #19513, #18580 -- Cleared annotations on queryset before performing update","Updated from https://github.com/django/django/pull/6504
",timgraham,None,2016-06-29T16:26:35Z,2016-06-29T18:32:46Z
6849,Avoided making db queries in test_indentation_whitespace.,,berkerpeksag,None,2016-06-29T06:24:27Z,2016-06-29T13:56:27Z
6848,Fixed #26814 -- Updated error message to point to mysqlclient.,"See trac issue https://code.djangoproject.com/ticket/26814 .
",ad-m,None,2016-06-28T23:35:46Z,2016-07-01T17:12:59Z
6847,"Stable/1.8.x, fixes #26605","This patch is also applicable to the stable/1.9.x branch
",sebdiem,None,2016-06-28T21:58:29Z,2016-06-28T22:12:23Z
6846,add Georgian mapping for URLify,,Lh4cKg,None,2016-06-28T20:58:44Z,2016-06-29T14:01:32Z
6845,add Georgian mapping for URLify,,Lh4cKg,None,2016-06-28T20:34:16Z,2016-06-28T20:36:46Z
6844,Fixed #26002 -- Explained ModelAdmin.get_search_results() example.,"https://code.djangoproject.com/ticket/26002
",timgraham,None,2016-06-28T17:30:12Z,2016-06-30T13:00:10Z
6843,Fixed #15091 -- Allowed passing custom encoder to JSON serializer.,"https://code.djangoproject.com/ticket/15091
",berkerpeksag,None,2016-06-28T11:47:10Z,2016-06-28T15:11:30Z
6842,Typo: Use strict comparison,"Thank you :)
",camilonova,None,2016-06-27T23:31:59Z,2016-06-28T16:51:52Z
6841,Replaced use of TestCase.fail() with assertRaises().,"Also removed try/except/fail antipattern that hides exceptions.
",timgraham,None,2016-06-27T19:06:03Z,2016-06-28T15:21:27Z
6840,Fixed #24694 -- Added support for context_processors to Jinja2 backend.,"https://code.djangoproject.com/ticket/24694
",berkerpeksag,None,2016-06-27T13:56:28Z,2016-06-28T18:31:51Z
6839,Added trailing '$' to URL map RE's missing them.,,ramiro,None,2016-06-27T00:17:20Z,2016-06-27T13:26:02Z
6838,[1.9.x] Fixed #26806 -- Fixed triple quoted,"https://code.djangoproject.com/ticket/26806
",andersonresende,None,2016-06-27T00:13:26Z,2016-06-27T13:08:18Z
6837,Fixed #26756 -- Update permission names when model verbose_name changes.,,black3r,None,2016-06-26T20:58:09Z,2016-11-13T04:36:26Z
6836,Fix marked bug in test so alter_field operates on correct field state.,,jdufresne,None,2016-06-26T14:33:05Z,2016-06-27T16:13:15Z
6835,Fix#17209 added class based view for PasswordResetView and deprecate function b…,"no docs yet. 
",auvipy,None,2016-06-25T21:10:03Z,2017-02-28T18:39:42Z
6834,Fix #25694: Fix incorrect _uniq suffix on indexes during migrations.,"https://code.djangoproject.com/ticket/25694
",jdufresne,None,2016-06-25T03:27:43Z,2016-06-29T19:01:07Z
6833,Update commit message guidelines to use imperative mood.,"https://groups.google.com/d/topic/django-developers/GCtDoW2rh54/discussion
",timgraham,None,2016-06-24T21:29:21Z,2016-07-15T15:22:35Z
6832,Fix #2131: support nginx X-Accel-Redirect feature with a simple view,"Add support for nginx X-Accel-Redirect (known as X-Sendfile) feature by introducing a simple view which does everything the same way as `django.views.static.serve`.

First, I refactored the original `serve` view so I can reuse functionality and make it DRY.
",kissgyorgy,None,2016-06-24T17:26:03Z,2016-06-28T19:00:47Z
6831,Fixed #26804 -- Added select_for_update() in update_or_create,"Added a select_for_update() when retrieving the object in update_or_create
to avoid race conditions between when the object is retrieved and when
it is saved.
",jensen-cochran,None,2016-06-24T17:13:58Z,2016-07-22T18:59:47Z
6830,"Fixed #26795 -- Factor out ""get_changes"" method in test_autodetector","Ticket [#26795](https://code.djangoproject.com/ticket/26795)

I have added `MigrationQuestioner` argument to `get_changes` in my second commit to incorporate other use cases as well.
",akki,None,2016-06-24T15:30:53Z,2016-06-25T01:45:35Z
6829,Removed a test workaround for some old GDAL 1.7.x versions.,"@sir-sigurd  @claudep, I spotted this and figured it's not needed anymore. It's assuming we want to keep support for GDAL 1.7 at all and not do a more thorough cleanup. GDAL 1.7.3 was released November 2010.
",timgraham,None,2016-06-23T19:00:37Z,2016-06-23T20:24:18Z
6828,Refs #12594 -- Removed obsolete exception handling in handle_uncaught_exception().,"Since 859fc020a7c5ce30784d6388858ffbc613ef6612, this is no longer needed.
",timgraham,None,2016-06-23T18:52:33Z,2016-06-24T13:27:47Z
6827,Refs #24829 -- Made TemplateResponse.content available sooner in exception context,"Thanks Tim Graham for the initial patch.
",claudep,None,2016-06-23T14:32:40Z,2016-06-24T13:31:08Z
6826,Fixed #26786 -- Avoided redundant range validators on integer fields.,"Added bug fix and tests.
",e-stepanov,None,2016-06-23T10:19:23Z,2016-06-28T15:40:48Z
6825,POC fix for #26749.,,loic,None,2016-06-23T10:11:58Z,2016-07-06T12:53:07Z
6824,Fixed #26792 -- Allowed None for the value of cache.get_or_set().,"The check ""if default is None"" was causing an unconditional calculation of default value.

Behaviour before patch:

``` python
def heavy_routine_whose_result_to_be_cached():
    return todays_weather_forecast_calculated

...
cache.set('todays_weather_forecast', heavy_routine_which_result_to_be_cached())
...
val = cache.get_or_set('todays_weather_forecast', heavy_routine_which_result_to_be_cached())  ## calculates 2nd time, which is unwanted behaviour
```

Trac ticket created -> https://code.djangoproject.com/ticket/26792#ticket
",dvska,None,2016-06-22T18:33:59Z,2016-07-12T00:50:22Z
6823,Fixed Markdown syntax in 1.11 release notes.,,zsiciarz,None,2016-06-22T14:15:32Z,2016-06-22T18:49:24Z
6822,Fixed minor typo in logging docs.,,jsma,None,2016-06-22T03:28:45Z,2016-06-22T10:38:34Z
6821,Fixed MySQL 5.7 GIS test failures,"https://code.djangoproject.com/ticket/26657
",sir-sigurd,None,2016-06-21T20:49:37Z,2016-06-23T13:05:31Z
6820,Fixed #26787 -- Documented deleting and reloading of model instance fields.,"https://code.djangoproject.com/ticket/26787
",timgraham,None,2016-06-21T17:54:17Z,2016-06-21T19:25:25Z
6819,"Refs #21379, #26719 -- Moved username normalization to AbstractBaseUser.","(spun off from https://github.com/django/django/pull/6788)
",timgraham,None,2016-06-21T13:29:35Z,2016-06-21T20:20:01Z
6818,Fixed #15665 -- Fixed inlines on a ModelAdmin with an inline to a child related model.,"Hi,

This is a fix for https://code.djangoproject.com/ticket/15665

As explained in the ticket, I see two places where this can be fixed.

A. in django/db/models/base.py (see commit https://github.com/olivierdalang/django/commit/a4ea0a021b784c5fbbecebed01f86c3987f1a8e9 )

Model inheritance is created using OneToOneField but doesn't set the field to editable=False.
This seems wrong, but at the same time, it seem to be consistent with regular primary keys, that for some reason don't set editable=False neither.
The fix consists of settings editable=False on those fields.
I'm not sure of the consequences of this, but this breaks potentially a lot of things, so unless someone with deep knowledge of django supports it, I propose to go for B.

​
B. in django/contrib/admin/helpers.py (this PR)

There's a needs_explicit_pk_field() method which is exactly for that.
The fix B consists of returning True if the primary key is a OneToOneField.
I guess this has much less consequences and is much safer.

Also, what I can I do to get this backported to 1.9 ? The patch should apply without conflict.
",olivierdalang,None,2016-06-21T11:46:13Z,2016-09-27T19:56:01Z
6817,fix change password in admin,"I found this bug when I change password for an account, so I just fix it by changing r'^(.+)/password/$' to r'^(.+)/change/password/$'.
",Hevienz,None,2016-06-21T09:16:25Z,2016-06-21T12:27:37Z
6816,Fixed #26785 -- Set BaseSpatialField.empty_strings_allowed to False.,"https://code.djangoproject.com/ticket/26785
",sir-sigurd,None,2016-06-21T09:13:40Z,2016-06-21T18:07:09Z
6815,Correct inline documentation for firstof template tag,"Since Django 1.8 `firstof` escapes its output. This is a minor fix to the inline docs which are not consistent with this behaviour.
",solarissmoke,None,2016-06-21T04:16:44Z,2019-11-26T15:36:50Z
6814,Fixed #26781 -- Made table name case change a noop on SQLite.,"SQLite disgresses from the SQL standard by ignoring case of quoted identifiers.

Thanks to laozzzi for the report.
",charettes,None,2016-06-21T04:04:37Z,2016-06-21T20:37:32Z
6813,Fixed #26784 -- Made ForeignKey.validate() pass `model` to router if model_instance=None.,"The model_instance argument to model fields' clean() and validate() methods is allowed to be None, and when this was the case, ForeignKey.validate() was passing NoneType as the first argument to router.db_for_read(). But that argument is expected to be a model class, not NoneType, so any routers that tried to access model._meta would throw an AttributeError.

Really, it makes more sense to pass in the remote model class because that's the model that's being looked up, and, conveniently, is never None.
",bendemboski,None,2016-06-20T22:01:15Z,2016-06-27T17:35:06Z
6812,Tutorial sample code typo,"Slight typo on the variable used in the sample code for tutorial #4.
",laddng,None,2016-06-20T20:51:29Z,2016-06-20T21:01:43Z
6811,Fixed #26783 -- Passed SESSION_COOKIE_PATH to delete_cookie() in SessionMiddleware.,"https://code.djangoproject.com/ticket/26783
",jdufresne,None,2016-06-20T20:22:26Z,2016-06-21T15:03:26Z
6810,Fixed #26765 - Removed ETag when Cache-Control: no-store,"Removed `ETag` when `Cache-Control` contains `no-store`.
See https://code.djangoproject.com/ticket/26765 for details.
",andrewnester,None,2016-06-20T19:48:39Z,2016-07-15T19:35:07Z
6809,Refs #22384 -- Readded RegexURLResolver.reverse().,"It was removed in 785cc71d5b3300e2702b0b2fc7316e58ca70b563 only because
it was untested and unused in Django itself, however, some third-party
apps use it.
",timgraham,None,2016-06-20T17:39:08Z,2016-06-20T18:51:29Z
6808,Fixed #26776 -- Documented url()'s view argument.,"Fixed documentation for `url()` view parameter.
See https://code.djangoproject.com/ticket/26776 for details. 
",andrewnester,None,2016-06-20T09:11:26Z,2016-06-20T15:58:26Z
6807,Fixed #22446 -- Added basic tox.ini to automate all checks expected of new patches and pull requests,"This patch fixes https://code.djangoproject.com/ticket/22446 (""Add tox support""). A few notes about the approach:
- The goal of this patch is to automate the simple checks expected of patches/PRs, not to replace Jenkins' scripts (there is, however, no reason that Jenkins couldn't call tox for _some_ of the checks, which might help keep everything in sync and be an integration test for the `tox.ini` itself).
- When Django bundles dependencies for other test environments, the `tox.ini` supports them, however, it still requires creating and passing a custom settings file for other Database backends.
- The file assumes both Python 2 and 3 are available on the developer's machine. Python 2 seems still to be needed for the docs spell checker on Mac OS X, a requirement that will go away once pyenchant 1.6.7 is released (see https://github.com/rfk/pyenchant/issues/45). The SQLite tests default to Python 3.5, however, other versions can be specified on the command line if desired.

Open questions:
- ~~Do we expect people to look for flake8 errors in Python 2, Python 3, both, or only whatever version they happen to be developing with? A PR to fix a flake8 error in Python 2.7 was previously rejected (https://github.com/django/django/pull/6730) although I see it was then subsequently fixed along with some Python 2.6 errors (https://github.com/django/django/pull/6790)~~ (Answer: Python 3 only)
- ~~How to make tox usage easy for Windows users. The `python2` and `python3` commands don't exist by default, and there doesn't seem to be much consensus on how to get them: http://stackoverflow.com/questions/3809314/how-to-install-both-python-2-x-and-python-3-x-in-windows-7~~ (Answer: referencing the need for these variables on one's path is sufficient)
- ~~Whether or not to use `skipsdist` (https://testrun.org/tox/latest/example/general.html#avoiding-expensive-sdist). Note that `python setup.py sdist` does not work on Windows currently, so unless that's fixed it's probably easier (and faster for tests) to leave this as-is (with `skipsdist = true`).~~ (Answer: use it.)

Other thoughts/questions/comments/concerns?
",tobiasmcnulty,None,2016-06-19T22:15:39Z,2016-07-20T18:28:29Z
6806,Fixed #26779 -- Added extra_context parameter to i18n_javascript view.,"https://code.djangoproject.com/ticket/26779
",shabda,None,2016-06-19T11:02:05Z,2016-06-27T19:45:01Z
6805,Fixed #26626 -- [WIP] Added middleware_decorator.,"Here's a second attempt for 26626, per conversation in IRC with @timgraham and @apollo13. Pushing for feedback, if we go this route it still needs a few things:
- [ ] convert our uses of `decorator_from_middleware` to `middleware_decorator` (and note possible behavior changes in release notes)
- [ ] deprecate `decorator_from_middleware`
- [ ] document `middleware_decorator`
",carljm,None,2016-06-19T04:40:26Z,2016-08-04T18:20:00Z
6804,Fixed #26729 -- Allowed overriding the label of a tabular inline form field,"https://code.djangoproject.com/ticket/26729
",czpython,None,2016-06-19T02:04:37Z,2016-06-21T18:30:24Z
6803,[PoC] request.headers #20147,"https://code.djangoproject.com/ticket/20147
",collinanderson,None,2016-06-19T00:47:24Z,2016-06-21T19:53:55Z
6802,Fixed #26778 -- Fixed ModelSignal.connect() weak argument.,"https://code.djangoproject.com/ticket/26778
",timgraham,None,2016-06-18T23:31:18Z,2016-06-19T00:45:38Z
6801,Fixed #26750 -- Fixed introspection for geography point field with dim=3,"Thanks Yegor Kazantsev for the report and the initial patch.
",claudep,None,2016-06-18T19:53:33Z,2016-06-21T13:23:20Z
6800,Fixed #26775 -- Added support for dim=3 geography fields.,"Thanks François-Xavier Thomas for the report.
",claudep,None,2016-06-18T15:14:33Z,2016-06-18T19:49:44Z
6799,Fixed #26643 -- Prevent unnecessary AlterModelManagers operations caused by the manager inheritance refactor.,"https://code.djangoproject.com/ticket/26643
",loic,None,2016-06-18T13:37:58Z,2016-06-20T16:55:58Z
6798,Fixed #5897 -- Added the Content-Length response header in CommonMiddleware,,claudep,None,2016-06-18T08:54:14Z,2016-06-27T08:46:28Z
6797,Refs #26772 -- Added tests for FileField reopening closed files.,"https://code.djangoproject.com/ticket/26772
",timgraham,None,2016-06-18T01:19:25Z,2016-06-18T16:46:00Z
6796,Fix typo: missing urlpatterns variable,"😺
",treyhunner,None,2016-06-18T00:32:34Z,2016-06-18T01:01:44Z
6795,Fixed #24931 -- Made nested RegexURLResolvers populate callback strings,"https://code.djangoproject.com/ticket/24931
",MarkusH,None,2016-06-17T18:20:21Z,2016-06-18T16:09:20Z
6794,Refs #15667 -- Fixed crash when indexing RadioFieldRenderer with ModelChoiceIterator.,"Regression in 86573861a95e5a47dc7ff906443117d75b73dca1
",timgraham,None,2016-06-17T15:21:01Z,2016-06-20T18:50:43Z
6793,Fixed #26774 — changed default_zoom value in GeoModelAdmin doc,"A fix to the ticket “[GeoModelAdmin documentation states incorrect default value of default_zoom](https://code.djangoproject.com/ticket/26774)”.
",KrzysiekJ,None,2016-06-17T11:30:28Z,2016-06-17T12:01:23Z
6792,Fixes #26772: FileField should re-open closed files,"fix a regression from refactoring in a52a531a8b34f049fba11c3ee7b010af7534bf90
",pjstevns,None,2016-06-17T08:37:05Z,2016-06-18T01:20:16Z
6791,Fixed #26791 -- Replaced LiveServerTestCase port ranges with binding to port 0.,"https://code.djangoproject.com/ticket/26791

[django-developers thread](https://groups.google.com/d/topic/django-developers/_TD8IkSLgqE/discussion)
",timgraham,None,2016-06-17T00:31:44Z,2016-06-23T16:04:05Z
6790,Fixed flake8 2.6 warnings.,,timgraham,None,2016-06-16T13:13:15Z,2016-06-16T13:33:05Z
6789,修复用户名不能使用中文的bug,"注释掉了对用户名限制
",uhayate,None,2016-06-16T10:46:52Z,2016-06-16T11:58:22Z
6788,Fixed #26719 -- Normalized email in AbstractUser.clean().,"https://code.djangoproject.com/ticket/26719
",tamhuynhit,None,2016-06-16T10:15:26Z,2016-06-24T14:40:20Z
6787,Fixed #26719 -- Call normalize email and username in User.save,,tamhuynhit,None,2016-06-16T10:10:38Z,2016-06-16T10:12:19Z
6786,Stable/1.9.x,,sumitpathak92-zz,None,2016-06-15T18:52:49Z,2016-06-15T18:54:21Z
6785,Fixed #26763 - Control rendering of add/change/delete_related admin buttons,"In certain cases, displaying the add/change/delete icons on related fields in the Django admin is undesirable, but this behavior can't currently be overridden. This patch allows configuration of which buttons to display by passing kwargs into formfield_for_db. If you are OK with the approach, I can write tests and add docs. Let me know if I should pursue. Thanks!
",chrisclark,None,2016-06-15T16:40:16Z,2016-07-15T19:13:40Z
6784,Oracle: cast value to str before checking for '.',"Found a breaking case within the oracle backend at work.

Where `desc` is `('_RN', <type 'cx_Oracle.NUMBER'>, 127, 22, 0, -127, 1)` and `value` is `1`, the exception `argument of type 'int' is not iterable` will be thrown as the code checks for a `'.'` in the value.

Adds an explicit cast before treating the value as an iterable.
",arecker,None,2016-06-15T15:35:57Z,2016-06-22T18:39:33Z
6783,"Refs #14030 -- Updated docs per ""Improved expression support for python values.""","Complements e2d6e14662d780383e18066a3182155fb5b7747b.
",sir-sigurd,None,2016-06-15T13:14:11Z,2016-06-15T14:35:15Z
6782,Add information about choice_values to widgets doc,"Small addition to `docs/ref/forms/widgets.txt` documentation, showing how to access radio button's values while using `RadioSelect`.
Maybe it wasn't obvious just for me, but I spent a plenty of time trying to figure out how to get values. 
I suppose, it can be useful to show this in docs. 
",begor,None,2016-06-15T12:28:14Z,2016-06-15T14:42:05Z
6781,Add information about choice_value attribute.,"Small addition to `docs/ref/forms/widgets.txt` documentation, showing how to get access radio button's values while using `RadioSelect`.
Maybe it wasn't obvious just for me, but I spent a plenty of time trying to figure out how to get values. 
I suppose, it can be useful to show this in docs. 

UPD: sorry, there was spell checker fault.
",begor,None,2016-06-15T12:07:53Z,2016-06-15T12:28:02Z
6780,Fixed number of broken links in docs and comments,,scop,None,2016-06-15T05:49:45Z,2016-06-16T01:20:23Z
6779,Fixed #26401 -- Allow auth machinery to be used without installing auth app,"Fix for https://code.djangoproject.com/ticket/26401

I still can't figure out a good way to regression test this.
",satchamo,None,2016-06-14T21:11:48Z,2016-08-27T17:08:25Z
6778,Fixed #26756 -- Update permission names when model verbose_name changes.,,black3r,None,2016-06-14T17:22:33Z,2016-06-22T18:06:21Z
6777,Fixed #26753 -- Made GDAL a required dependency for contrib.gis,,claudep,None,2016-06-14T15:35:52Z,2016-06-18T14:21:01Z
6776,Add DEFAULT_EXTRA_HEADERS setting,"Allow `EmailMessage` to use `DEFAULT_EXTRA_HEADERS` setting if the parameter `headers` is omitted.

Test and docs included.
",homberger,None,2016-06-14T13:20:54Z,2016-06-21T19:56:31Z
6775,Fixed unittest deprecation warnings,,scop,None,2016-06-14T10:22:34Z,2016-06-14T13:03:12Z
6774,Fixed #26171 -- Made MySQL create an index on ForeignKeys with db_contraint=False.,"Refactor ""Prevented unneeded index creation on MySQL-InnoDB"" (2ceb10f)
to avoid setting db_index = False. Check db_constraint=True before
skipping the index creation, fixes #26171.
",aaronelliotross,None,2016-06-14T09:51:33Z,2016-06-28T12:22:21Z
6773,Refs #26601 -- Improved backwards-compatibility of DEP 5 middleware exception handling.,"Re-adds `process_exception` as a specially-handled middleware method; converts all exceptions between every middleware, so middleware don't need to worry about catching exceptions anymore.
",carljm,None,2016-06-14T07:48:16Z,2016-06-17T19:55:47Z
6772,Fixed #26223 -- Fixed migration optimizer for operations with preserve_default=False.,"[#26223](https://code.djangoproject.com/ticket/26223)

Testing code modified to recursively compare attributes of fields in operations.
",vytisb,None,2016-06-13T19:23:12Z,2017-06-21T21:17:00Z
6771,Fixed #26644 -- Allowed wrapping NamedTemporaryFile with File.,"914c72be2abb1c6dd860cb9279beaa66409ae1b2 introduced a regression that
caused saving a NamedTemporaryFile in a FileField to raise a
SuspiciousFileOperation. To remedy this, if a File has an absolute
path as a filename, only use the basename as the filename.

(updated from https://github.com/django/django/pull/6658)
",timgraham,None,2016-06-13T18:27:41Z,2016-06-14T19:30:52Z
6770,Fixed #26754 -- Documented django.template.context_processors.tz,,scop,None,2016-06-13T16:41:28Z,2016-06-14T10:57:45Z
6769,Used SQL from DB backend in GeomValue.,"This avoids the deprecated GeomFromText on MySQL (refs #26134).
",timgraham,None,2016-06-13T15:46:19Z,2016-06-17T00:30:25Z
6768,Fixed #26751 -- Made dbshell exit with the shell's error code.,"Hi,

I'm trying to use dbshell to execute a SQL script in bash script, but using django SQL settings. Since the latest changes around password management in dbshell, i thought dbshell was the right tool for this use case. And it executes SQL in the right connection successfully, but I hit a bug: dbshell always success with exit code `0`. Even the following script succeed:

``` sql
\set ON_ERROR_STOP on
auiestn;
```

Here is a simple diff to let psql manage exit code of dbshell command.

What is your opinion on the issue ? What about this diff ? I'm also seeking for a testcase around this feature.

Regards,
Étienne

This PR is a rebase of #6767 
",bersace,None,2016-06-13T14:41:22Z,2016-06-27T16:20:40Z
6767,Not masking psql exit code,"Hi,

I'm trying to use dbshell to execute a SQL script in bash script, but using django SQL settings. Since the latest changes around password management in dbshell, i thought dbshell was the right tool for this use case. And it executes SQL in the right connection successfully, but I hit a bug: dbshell always success with exit code `0`. Even the following script succeed:

``` sql
\set ON_ERROR_STOP on
auiestn;
```

Here is a simple diff to let psql manage exit code of dbshell command.

What is your opinion on the issue ? What about this diff ? I'm also seeking for a testcase around this feature.

Regards,
Étienne
",bersace,None,2016-06-13T13:55:21Z,2016-06-13T14:36:34Z
6766,Refs #25645 -- Removed SpatiaLite 3.x compatibility in gis.db.models.functions.Translate.,,sir-sigurd,None,2016-06-13T12:25:41Z,2016-06-13T14:32:07Z
6765,[WIP] Fixed #26626 -- Updated decorator_from_middleware() to work with DEP5 style middleware.,"@timgraham - pushing this so you can take a look, but please don't merge yet; this needs some adjustments and documentation still.
",carljm,None,2016-06-13T06:45:27Z,2016-08-04T18:19:55Z
6764,Fixed #26748 -- Allowed JSONField's widget to be overridden as an attribute,"ref https://code.djangoproject.com/ticket/26748
",meshy,None,2016-06-12T20:35:51Z,2016-06-13T12:09:54Z
6763,Fixed #26746 -- Fixed handling of zero priority in Accept-Language header parsing.,"[#26746](https://code.djangoproject.com/ticket/26746)
",vytisb,None,2016-06-12T12:36:58Z,2016-06-13T11:58:25Z
6762,Bug fix for postgres array indices,"Hey guys, this is my first attempt at contribution, hopefully I'll get it right.

I've encountered a bug when trying to filter on an annotated function call (the function is my own, written in plpgpsql).
The test case I've provided, which fails without my fix, is somewhat odd, but I could not find a general example of an annotation function that returns an array.

I think my fix might be too over-reaching, it can be maybe fixed by surrounding the SQL before the array index in parenthesis.

Thanks!
",yotamofek,None,2016-06-12T02:03:14Z,2016-08-04T18:20:53Z
6761,Removed unnecessary None check before NamedTemporaryFile.,"The default value for the `dir` kwarg is `None`. If `settings.FILE_UPLOAD_TEMP_DIR` is the default value of `None`, `NamedTemporaryFile` will work the same as if nothing was passed.
",jdufresne,None,2016-06-11T21:28:22Z,2016-06-12T00:45:12Z
6760,Fixed #26747 -- Used more specific assertions in the Django test suite.,"https://code.djangoproject.com/ticket/26747
",jdufresne,None,2016-06-11T20:38:44Z,2016-06-16T18:19:18Z
6759,Set our max line length (119) via EditorConfig.,,ramiro,None,2016-06-11T16:19:50Z,2016-06-13T14:42:21Z
6758,Fixed #26750 -- Added PointZField model field.,"Add support for postgis field like: location geography(PointZ,4326) or GeoRuby like: t.st_point :location, geographic: true, has_z: true
",saintbyte,None,2016-06-11T14:39:02Z,2016-06-18T19:54:43Z
6757,Fixed #26744 -- Fixed a typo in Accept-Language regexp.,"[#26744](https://code.djangoproject.com/ticket/26744)
",vytisb,None,2016-06-10T20:17:39Z,2016-06-12T01:32:56Z
6756,Fixed #25940 -- Added OGRGeometry.from_gml and GEOSGeometry.from_gml classmethods.,"https://code.djangoproject.com/ticket/25940
",sir-sigurd,None,2016-06-10T06:52:55Z,2016-06-21T20:05:36Z
6755,Fixed #26731 -- Allowed bytestring output with management commands on Python 2,"Thanks Darren Hobbs for the report.
",claudep,None,2016-06-09T20:34:58Z,2016-07-09T23:22:48Z
6754,Fixed #26736 -- Improved unicode handling for SpatialReference.,"https://code.djangoproject.com/ticket/26736
",sir-sigurd,None,2016-06-09T19:27:37Z,2016-06-12T01:03:22Z
6753,Fixed an error in 1.11 release notes.,"The release notes for [#26524](https://code.djangoproject.com/ticket/26524) are misleading: the admin uses `smart_text` for displaying FKs in `list_display`, not `repr`.
",vytisb,None,2016-06-09T19:16:49Z,2016-06-10T00:35:28Z
6752,Fix typo in Tutorial 7 (the Django's -> Django's),,openjck,None,2016-06-09T14:58:42Z,2016-06-09T15:15:39Z
6751,Fixed #25816 -- Made SpatialRefSysMixin properties work correctly if GDAL is unavailable.,"https://code.djangoproject.com/ticket/25816
",sir-sigurd,None,2016-06-09T14:48:39Z,2016-06-16T18:41:42Z
6750,Fixed #26742 -- Fixed action select color in admin changelist.,"The CSS defines the `background: none` for this particular select box
which makes it use white background, like the container behind it.
But it does not set any `color` property. So it uses the system default
for form controls.

Thus, when using light-on-dark system theme (GTK in my case), it renders
white text on white background, making the text in the select box
invisible or unreadable at best.

In this change we use `color: inherit` which makes the select box use
the color property from its parent, making the text in select use the
same color as the text around it.
",dmedvinsky,None,2016-06-09T14:28:57Z,2016-06-10T15:39:55Z
6749,"Fix ""TypeError: can't compare datetime.datetime to datetime.time""","In TimeField if provided default is TZ aware it is being converted to `datetime.time` instance while in any other case it is already `datetime.datetime`. This leads to ""TypeError: can't compare datetime.datetime to datetime.time"".

Affects 1.9.x, 1.8.x, 1.7.x.
",lig,None,2016-06-09T11:07:21Z,2016-06-09T22:30:25Z
6748,Fixed #16281 -- Made ContentType.get_object_for_this_type() fetch models from the correct database.,"Removes the using clause to let db router decide which db to use.
https://code.djangoproject.com/ticket/16281
",stefanw,None,2016-06-09T08:51:25Z,2017-03-23T11:52:16Z
6747,Refs #26677 -- Simplified i18n test cleanups.,"https://code.djangoproject.com/ticket/26677

More refactoring and code removal for i18n tests running on isolated disposable filesystem trees.
",ramiro,None,2016-06-08T19:48:00Z,2016-06-12T00:43:23Z
6746,Made AutoField consistent between postgresql and mysql,"**The problem**
Currently, (Big)*AutoField becomes an `integer AUTO_INCREMENT` field in MySQL whereas it becomes a `serial` in PostgreSQL (which is a positive integer).

**The resolution**
This patch updates the MySQL version to use the `serial` datatype (which is just a macro for `bigint unsigned not null auto_increment unique`).

**Caveats**
The MySQL `serial` datatype might introduce too many unwanted restrictions. If the community thinks this might break too much code, I would suggest to at least make the MySQL version unsigned too, to increase the consistency between the DB adapters.

Cheers
",hellerve,None,2016-06-08T16:31:37Z,2016-06-08T18:36:03Z
6745,Fixed #4548 -- Added a username hint for password managers to admin's change_password form.,"When more than one password is stored in the browser of a single site, a confirm password dialog pops up when changing password as browser doesn't know which user actually changed password.

This can be avoided by simply adding a username input field which is not displayed.

See also http://stackoverflow.com/a/2700066/535679

Successfully tested with Chromium and Firefox.
",sliverc,None,2016-06-08T15:42:07Z,2016-06-09T16:38:08Z
6744,Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.,"https://code.djangoproject.com/ticket/26348
",charettes,None,2016-06-08T04:53:18Z,2016-07-08T16:36:42Z
6743,Fixed #26717 -- Added a stream_class attribute to Serializer.,"https://code.djangoproject.com/ticket/26717
",berkerpeksag,None,2016-06-08T01:23:37Z,2016-06-08T15:10:26Z
6742,django/stable_1.9.x,,tsepty,None,2016-06-07T14:07:39Z,2016-06-07T14:09:23Z
6741,Fixed #26720 -- Allowed optimization across CreateModel operation.,"https://code.djangoproject.com/ticket/26720
",sir-sigurd,None,2016-06-07T11:47:19Z,2017-02-03T03:44:47Z
6740,Fixed #26290 -- Added RuntimeWarning when paginating unordered QuerySet.,,EmadMokhtar,None,2016-06-07T11:25:42Z,2016-06-08T18:10:55Z
6739,Fixed #26718 -- Added system check for existence of the fields specified by ForeignKey.to_field.,"https://code.djangoproject.com/ticket/26718
",sir-sigurd,None,2016-06-07T08:58:05Z,2016-06-09T14:20:27Z
6738,Fixed #24424 -- Fixed SQLite migrations crash when removing the last column of a table.,"In case the migration has removed all fields but before dropping the
table (in case some other one-to-one relationship is still referencing
it).

An example is a migration that removes the last foreign key field of a model that is referenced by the model whose foreign key is being removed (e.g. one-to-one relationship).

After removing the last field, doing the copy generates an invalid INSERT such as this:

``` sql
INSERT INTO ""app_model__new"" () SELECT  FROM ""app_model"" 
```

Another example is simply renaming a custom PK which the regression test in this PR covers.
",oxplot,None,2016-06-07T05:28:16Z,2016-07-09T13:14:01Z
6737,Copy data only when there are fields,"In case the migration has removed all fields but before dropping the
table (in case some other one-to-one relationship is still referencing
it).

An example is a migration that removes the last foreign key field of a model that is referenced by the model whose foreign key is being removed (e.g. one-to-one relationship).

After removing the last field, doing the copy generates an invalid INSERT such as this:

``` sql
INSERT INTO ""app_model__new"" () SELECT  FROM ""app_model"" 
```
",oxplot,None,2016-06-07T02:13:53Z,2016-06-07T05:28:40Z
6736,Fixed #26716 -- Added MiddlewareMixin to CurrentSiteMiddleware,,bretth,None,2016-06-07T00:28:42Z,2016-06-07T13:47:42Z
6735,Fixed #26610 -- Added CitextField to contrib.postgres.,"https://code.djangoproject.com/ticket/26610
",atombrella,None,2016-06-06T20:50:26Z,2017-02-08T17:00:43Z
6734,Fixed #8936 -- Added view permissions and a read-only admin [rebased],"Hi,

This is just a rebase of https://github.com/django/django/pull/5297
The only difference (besides fixing the merge conflicts) is that `ModelAdmin.declared_fieldsets` doesn't exist anymore and was replaced by `get_fieldsets`.

Thanks,

Olivier
",olivierdalang,None,2016-06-06T16:05:04Z,2018-05-16T23:06:32Z
6733,Link to upgrade docs from release notes.,"Trac: https://code.djangoproject.com/ticket/26713
",tomchristie,None,2016-06-06T10:46:43Z,2016-06-06T11:33:08Z
6732,Fixed #26713 -- Documented resolving deprecation warnings before upgrade.,"Trac: https://code.djangoproject.com/ticket/26713
",tomchristie,None,2016-06-06T10:38:25Z,2016-06-06T15:44:26Z
6731,Fixed #26712 -- Avoided unnecessary SET TIMEZONE queries on PostgreSQL.,"A change of the USE_TZ or TIME_ZONE settings doesn't necessarly require a change to the active connections' timezones.
",charettes,None,2016-06-06T03:26:48Z,2016-06-06T15:27:54Z
6730,Fix Python 2.7 flake8 error,"There's a single error when running flake8 on Python 2.7 that would be nice to fix. Not sure why this doesn't show up with Python 3.5.

```
./django/core/management/commands/migrate.py:216:67: F812 list comprehension redefines 'model_key' from line 212
```
",tobiasmcnulty,None,2016-06-05T18:13:23Z,2016-06-05T18:55:33Z
6729,Fixed a typo in a comment in multiparser.py,,jdufresne,None,2016-06-05T16:49:47Z,2016-06-05T20:36:59Z
6728,Fixed #26710 -- Made CreateModel.references_model take app_label into account.,"https://code.djangoproject.com/ticket/26710
",sir-sigurd,None,2016-06-05T15:30:10Z,2016-09-19T13:19:59Z
6727,Added :attr: to TypedChoiceField documentation of the empty_value argument,"Based on feedback in #6624.
",jdufresne,None,2016-06-05T14:56:36Z,2016-06-06T16:13:11Z
6726,Fixed #26709 -- Add class based indexes and CreateIndex operation,"Ticket [#26709](https://code.djangoproject.com/ticket/26709).
",akki,None,2016-06-05T14:29:12Z,2016-06-27T14:41:37Z
6725,Fixed #26706 -- Made RelatedManager modification methods clear prefetch_related() cache.,"Doing a prefetch before clear() causes the cached value
to be returned after a query. Since they are cleared,
the cached values should no longer be needed, so this change
removed them from the cache inside clear().
",yoongkang,None,2016-06-05T12:49:37Z,2016-08-05T17:34:51Z
6724,Fixed #26474 -- Added sources of minified javascript files.,,knightrix,None,2016-06-05T09:01:36Z,2016-06-06T13:36:04Z
6723,Fixed #26643 -- Prevented migrations for all custom managers.,"Only perform this operation if the custom manager actually has the required flag.
",schinckel,None,2016-06-04T23:52:03Z,2016-06-19T06:12:48Z
6722,Fixed #21588 -- Added a note about passing arguments when modifying upload handlers.,"https://code.djangoproject.com/ticket/21588
",berkerpeksag,None,2016-06-04T23:48:29Z,2016-06-09T16:52:27Z
6721,Refs #16043 -- Refactored internal fields value cache.,"- Removed all hard coded logic for _{fieldname}_cache.
- Added a common internal API for interacting with the field values cache.

This lays the foundation for a coming fix (in separate pr) to https://code.djangoproject.com/ticket/16043.

Thanks to @carljm and @MarkusH for the support.
",czpython,None,2016-06-04T23:17:18Z,2017-12-30T16:12:32Z
6720,"Fixed #26028 -- Added an ""Overriding Templates"" howto.","I think this could be accepted as-is, but I'm more looking for guidance than immediate merging. Is this the right place to put this? Is this too much detail or not enough?
https://code.djangoproject.com/ticket/26028",phildini,None,2016-06-04T18:54:27Z,2017-06-02T22:18:32Z
6719,Allow user-specified reloaders,"The ability to provide a dynamic, optional reload function as an alternative to the Java or Python reloaders gives developers the ability to specify run functions that may not always be written in pure Python.  This patch supports future development in Django with alternative languages like Hy or Mochi.
",elfsternberg,None,2016-06-04T18:20:42Z,2016-07-01T05:27:04Z
6718,Fixed a typo in docs/ref/models/querysets.txt,,vytisb,None,2016-06-04T15:56:39Z,2016-06-04T16:04:40Z
6717,Fixed #26705 -- Support plural versions of non django languages.,,theju,None,2016-06-04T08:06:06Z,2016-06-08T20:19:10Z
6716,Fixed #26688 -- Fixed HTTP request logging inconsistencies.,"Added a log_response helper to log HTTP responses consistently in error
and warning levels of django.request logger.
",seocam,None,2016-06-03T23:15:59Z,2017-09-16T21:50:40Z
6715,Fixed #26707 -- Added QueryDict.fromkeys(),"Fixes #26707  (Pycon2016 sprint, Friday June 3)

In `django.http.QueryDict`, we currently have the following weird behaviour and misleading error messages:

```
>>> QueryDict.fromkeys(['k1', 'k2'])
AttributeError: This QueryDict instance is immutable
```

It is not possible to pass the mutable kwarg to the initialise in this way, either:

```
>>> QueryDict.fromkeys(['k1', 'k2'], mutable=True)
TypeError: fromkeys() takes no keyword arguments
```

Django's `QueryDict` is-a `dict`, so the classmethod factory function `fromkeys` should either
  a) work, or
  b) be explicitly disabled in the subclass, and documented as such

The relevant section in the docs ( https://docs.djangoproject.com/en/dev/ref/request-response/#django.http.QueryDict ) says that:

> QueryDict implements all the standard dictionary methods because it’s a subclass of dictionary. Exceptions are outlined here: ...

However, there is no mention about the `fromkeys` method.

This patch attempts to implement it in a usable way.  
",wimglenn,None,2016-06-03T23:12:08Z,2018-08-30T01:05:32Z
6714,Updated the basic file upload example to use snippet directive.,,berkerpeksag,None,2016-06-03T22:34:14Z,2016-06-04T13:24:30Z
6713,Fixed #26666 -- Validated ALLOWED_HOSTS when running tests and use ALLOWED_HOSTS to check for external domains in assertRedirects,"- The original fix to ticket 26666 (PR #6696) broke unit testing of custom hostnames in non-core Django projects when the hostname was passed as part of the path to `client.get()`
- This change leverages `ALLOWED_HOSTS` to facilitate support for custom domain testing in 3rd party packages while increasing the rigor which with we validate ALLOWED_HOSTS (now also in tests)
",tobiasmcnulty,None,2016-06-03T22:04:50Z,2016-06-20T15:11:59Z
6712,Add Jack Moffitt to AUTHORS,"Jack authored 3df7266056 but was not credited. Relevant ticket: https://code.djangoproject.com/ticket/3575.
",frewsxcv,None,2016-06-03T21:01:25Z,2016-06-03T21:06:20Z
6711,Fixed #12810 -- Added a check for clashing ManyToManyField.db_table names.,"https://code.djangoproject.com/ticket/12810
",berkerpeksag,None,2016-06-03T19:45:30Z,2016-06-10T14:57:58Z
6710,Fixed #24781 -- Added lazy objects __repr__,"Added `__repr__` method to lazy objects. Reproduced the issue with a test, which passes after fixing the issue. 

Related ticket: https://code.djangoproject.com/ticket/24781
",chescales,None,2016-06-03T19:31:58Z,2016-06-04T23:13:00Z
6709,Fixed #26704 -- Added description for DjangoJSONEncoder.,,tbeadle,None,2016-06-03T18:38:38Z,2016-06-07T19:05:15Z
6708,Fixed #25127 -- Add docs on organizing models,"Added a section to the Models docs on organizing models across multiple files. Example recommends
explicit imports over 'import *'.
",palmerev,None,2016-06-03T18:23:27Z,2016-06-04T16:05:39Z
6707,Fixed #26628 -- Changed CSRF logger to django.security.csrf,"Reworded docs to include non-SuspiciousOperation security loggers. Updated CSRF tests to check logger output.

The docs looked like they are manually wrapped, and I wasn't sure if there was a way to make changes without noisy diffs.

Also, does this need to be added to patch notes, and if so which version?
",Hwesta,None,2016-06-03T06:27:44Z,2016-06-04T14:26:41Z
6706,Fixed #10107 -- Allowed mark_safe() to be used as decorator,"I pulled down the patch from @ArcTanSusan's PR (https://github.com/django/django/pull/6390) and incorporated the changes that @timgraham and @funkybob were looking for.

Please let me know if this needs to be squashed or if there's a better way to attribute the work to @ArcTanSusan.  Thanks!  (and good to meet you today, @MarkusH).
",svvitale,None,2016-06-03T03:35:56Z,2016-06-07T16:29:20Z
6705,Fixed #26702 -- Added docs for changing base class of custom field,,baylee,None,2016-06-03T00:59:12Z,2016-06-08T14:38:08Z
6704,Fixed #15250 -- Avoided extra query on some multi-table inheritance queries.,"https://code.djangoproject.com/ticket/15250
",czpython,None,2016-06-03T00:47:05Z,2016-06-03T18:08:19Z
6703,Fixed #12666 -- Added EMAIL_USE_LOCALTIME setting.,"When EMAIL_USE_LOCALTIME setting is TRUE, send emails with a date header
in the local time zone.
",aisipos,None,2016-06-03T00:07:12Z,2016-06-04T13:57:42Z
6702,Refs #26666 -- Fixed regression introduced in c7b1b81352533be9b7f4637c12219f59c0964a82,,MarkusH,None,2016-06-02T23:53:21Z,2016-06-03T01:26:45Z
6701,Refs #26666 -- Fixed test failures caused by assertRedirects changes,,tobiasmcnulty,None,2016-06-02T23:31:31Z,2016-06-03T04:47:30Z
6700,Fixed #26701 -- Replaced /newticket links to Trac with /.,"Replaces forbidden link https://code.djangoproject.com/newticket with https://code.djangoproject.com/.  Commits can/should be combined into a single commit.
",shaunagm,None,2016-06-02T23:03:43Z,2016-06-03T12:50:11Z
6699,Fixed #25616 -- Improved error for missing apps in migration dependencies.,"https://code.djangoproject.com/ticket/25616
",nip3o,None,2016-06-02T22:50:29Z,2016-09-17T01:12:09Z
6698,Fixes #26700 -- Added how to upgrade to TEMPLATES link in 1.10 release notes.,"The language is a little bad but it formatted correctly. Is this the right place to put it in the release notes? Since the users actually have to do something it seems important especially the auth bit (`?: (admin.E402) 'django.contrib.auth.context_processors.auth' must be in TEMPLATES in order to use the admin application.`)  which I only discovered after following the guide and hitting a check.
",jrabbit,None,2016-06-02T22:43:08Z,2016-06-03T00:29:35Z
6697,Fixed #26698 -- Fixed a dbshell crashes on Postgres with an empty database name.,"https://code.djangoproject.com/ticket/26698
",mieciu,None,2016-06-02T21:03:50Z,2016-06-03T18:23:52Z
6696,Fixed #26666 -- Added error message when assertRedirects encounters external URLs.,"See https://code.djangoproject.com/ticket/26666
",tobiasmcnulty,None,2016-06-02T20:01:09Z,2016-06-02T22:02:08Z
6695,Fixed #26021 -- Standardize on hanging indent in documentation,"Apply Django code style to example code in documents.
",kutenai,None,2016-06-02T19:58:30Z,2016-06-03T15:51:44Z
6694,Fixed #26628 -- Documented CSRF failure logging,"As noted in the ticket, logging already exists https://github.com/django/django/blob/f179113e6cbc8ba0a8d4e87e1d4410fb61d63e75/django/middleware/csrf.py#L100-L108
",Hwesta,None,2016-06-02T19:42:29Z,2016-06-03T00:45:00Z
6693,Fixed #25920 -- Added number formatting support for locales that use non-uniform digit grouping.,"https://code.djangoproject.com/ticket/25920
",jasisz,None,2016-06-02T19:15:04Z,2016-06-22T21:32:12Z
6692,Fixed 26359 -- Explain difference between GitHub and Issue Tracker.,"This commit is optimizing for making it clear to the reader as soon as possible
what the two systems are used for.
",phildini,None,2016-06-02T18:42:54Z,2016-06-02T19:30:16Z
6691,Fixed #26596 -- Added Jinja2 {{ csrf_input }} documentation,,bjcubsfan,None,2016-06-02T18:10:25Z,2016-06-03T19:25:41Z
6690,Fixed #26699 -- Clarify doc theming difference in documentation,"Hopefully make the documentation clearer for beginners.
",phildini,None,2016-06-02T18:01:49Z,2016-06-02T18:11:19Z
6689,Fixed #26526 -- Add note to docs on different ordering for QuerySet.latest,"Added a note for https://code.djangoproject.com/ticket/26526
",g3rd,None,2016-06-02T17:55:50Z,2016-06-02T23:43:30Z
6688,Fixed #26337 -- Added i18n note about using a non-English base language,"Thanks Cristiano Coelho for the report.
",claudep,None,2016-06-02T16:53:18Z,2016-06-02T18:57:42Z
6687,Updated release notes links to prevent warnings with Sphinx 1.4.2.,,timgraham,None,2016-06-02T15:23:37Z,2016-06-02T15:41:49Z
6686,Raised an exception on any non-uppercase module level variables in settings.,"updated `setting.isupper()` to throw and error if it's not being set as uppercase 
",Manoj-nathwani,None,2016-06-02T14:53:18Z,2016-06-02T15:59:36Z
6685,Fixed #26671 -- Made HashedFilesMixin ignore some additional schemes.,"Working on the tests. 
",ds-249,None,2016-06-02T13:14:48Z,2016-06-28T00:17:57Z
6684,fixed lint errors of http/multipartparser,"found some lint error while browsing the codes. close if not reasonable.
",auvipy,None,2016-06-01T18:29:54Z,2016-06-04T15:07:55Z
6683,"[1.8.x] Reverted ""Fixed #26687 -- Made an i18n test not use a hardcoded path separator.","This reverts commit c0a1e1984e0028022c5ac0722ff4933317bcdbc2 as it doesn't
work on the stable/1.8.x branch and instead uses os.path.join() to fix the
original failure on Windows.
",timgraham,None,2016-06-01T13:49:29Z,2016-06-01T14:39:28Z
6682,Refs #25645 -- Removed SpatiaLite 3.x compatibility in SpatialiteSpatialRefSys.wkt.,"https://code.djangoproject.com/ticket/25645
",sir-sigurd,None,2016-06-01T10:36:00Z,2016-06-01T14:49:55Z
6681,Fixed #26692 -- Relaxed a i18n compilemessages test.,"Combination of:
- Peculiarities of GNU gettext tools handling of error reporting (via
  sdterr)
- The fact that for this test we need to set the `LANG` env var to `""C""`
  to ensure such error messages are emitted in English
- Special characteristics of the Windows console regarding handling of
  encoding

Makes it hard to portably test for the actual content of the `msgfmt(1)`
error message that includes the culprit Unicode code point, as exercised
by the `i18n.test_compilation.CompilationErrorHandling.test_msgfmt_error_including_non_ascii`
test.

Proposed solution is to simply drop it but still check for other parts
of the expected error message.
",ramiro,None,2016-05-31T21:21:45Z,2018-08-09T18:55:08Z
6680,Fixed #26671 -- Used a regex to match staticfiles hashed storage urls.,,ds-249,None,2016-05-31T21:10:08Z,2016-06-02T08:33:05Z
6679,Fixed #26694 -- Modified FileBasedCache.get() to propogate non-ENOENT IOErrors.,"If there is reason to believe we **should** be ignoring all errno values, please let me know.
",jdufresne,None,2016-05-31T17:06:01Z,2016-06-01T19:29:24Z
6678,Fixed #26686 -- Fixed crash when registering model signals with abstract senders,"[#26686](https://code.djangoproject.com/ticket/26686)
",AlexHill,None,2016-05-31T16:23:52Z,2016-06-03T00:07:16Z
6677,Fixed #26679 -- Documented which methods are disabled on RelatedManager if there's an intermediate table,"https://code.djangoproject.com/ticket/26679
",ketanbhatt,None,2016-05-31T06:38:04Z,2016-05-31T11:15:28Z
6676,Fixed #26503 -- Removed an outdated example from session documentation.,"https://code.djangoproject.com/ticket/26503
",berkerpeksag,None,2016-05-31T03:41:16Z,2016-05-31T11:21:01Z
6675,Fixed #26687 -- Made i18n test not use hardcoded path separator.,"This fails on Windows when the test run time conditions are such that
the assertion is really executed.
",ramiro,None,2016-05-30T23:31:17Z,2016-05-31T16:00:36Z
6674,Fixed #26684 -- Removed incorrect index example in docs/ref/contrib/postgres/search.txt.,"Documentation patch for issue #26684.
",Xof,None,2016-05-30T16:44:48Z,2016-05-30T18:21:58Z
6673,Stable/1.9.x,"#### migrate failed
1. if i add a property for class xxx in models.py, then I run ./manage.py migrate, and it said ""no such column xxx""  and if I copy the project to another dir, it said 'no such table xxx'
2. django-1.9.6
",linux-wang,None,2016-05-30T10:48:07Z,2016-05-30T12:20:55Z
6672,Fixed #26676 -- Prevented prefetching to_attr from caching its result in through attr.,"Thanks Ursidours for the report.
",charettes,None,2016-05-30T04:17:13Z,2016-05-31T18:34:50Z
6671,Fixed #13080 -- Clarified accepted values of sender parameter of Signal.connect method.,"https://code.djangoproject.com/ticket/13080
",berkerpeksag,None,2016-05-30T01:30:59Z,2016-05-30T12:17:42Z
6670,Fixed #26678 -- Documented that ManyRelatedManager.add()/remove() accepts primary keys.,"Make it clear that it supports primary keys and not just model instances.
This is documented in the code but should also be written in the web documentation.
https://github.com/django/django/blob/master/django/db/models/fields/related_descriptors.py#L984

Trac ticket: https://code.djangoproject.com/ticket/26678
",wetneb,None,2016-05-29T16:41:03Z,2016-06-20T15:15:51Z
6669,Fixed #26677 -- Made some i18n tests use a disposable filesystem tree.,"This allows makemessages/compilemessages tests in `test_extraction.py`
and `test_compilation.py` to actually run isolated from each other
(unaffected by stray FS objects left by cleanup actions failures, debug
sessions, etc.) and to take advantage of the parallel test execution
feature like most of the Django test suite.

`test_percents.py` gets slightly refactored to not inherit from the new
machinery which sets up every test case to copy and run under a
temporary tree.
",ramiro,None,2016-05-29T15:48:55Z,2016-06-10T01:08:48Z
6668,Fixed #26672 -- Raised ValidationError if non-dict-like JSON is passed to HStoreField.,"Fixed validation logic in the field's to_python method to
prevent an AttributeError being raised when the values
are converted to strings.
",bradmerlin,None,2016-05-29T12:30:34Z,2016-06-02T20:30:37Z
6667,Added RemovedInDjango21Warning,,timgraham,None,2016-05-29T01:16:53Z,2016-05-29T01:32:23Z
6666,Fixed #26675 -- Dropped support for PostgreSQL 9.2/PostGIS 2.0.,"https://code.djangoproject.com/ticket/26675
",timgraham,None,2016-05-29T00:19:22Z,2016-06-01T12:16:15Z
6665,Fixed #26674 -- Corrected a i18n makemessages test.,"Made it  consistently read the PO file, decode its contents and then
check for the non-breaking space Unicode code point.

Previously we were erroneously skipping the interpretation of what we
read as UTF-8 text.

This was causing the test to fail on Windows with Python 3.5.
",ramiro,None,2016-05-28T22:37:25Z,2016-05-29T13:33:47Z
6664,Fixed #25645 -- Dropped support for SpatiaLite < 4.0.,"https://code.djangoproject.com/ticket/25645
",timgraham,None,2016-05-28T21:08:44Z,2016-05-31T15:31:51Z
6663,Fixed #26084 -- Documented that deprecation warnings are no longer loud.,"https://code.djangoproject.com/ticket/26084
",timgraham,None,2016-05-28T20:46:50Z,2016-06-01T19:17:25Z
6662,Refs #24227 -- Fixed crash of ManyToManyField.value_from_object() on unsaved model instances.,"This behavior was removed in 67d984413c9540074e4fe6aa033081a35cf192bc
but is needed to prevent a crash in formtools.
",timgraham,None,2016-05-28T19:20:26Z,2016-05-28T19:59:34Z
6661,Fixed #26667 -- Fixed a regression in queries on a OneToOneField that has to_field and primary_key=True.,"https://code.djangoproject.com/ticket/26667
",timgraham,None,2016-05-28T13:16:47Z,2016-06-04T13:15:13Z
6660,Fixed #26621 -- Made simplify_regex handle named capture groups correctly,"https://code.djangoproject.com/ticket/26621
",ketanbhatt,None,2016-05-28T07:48:28Z,2019-02-06T21:51:46Z
6659,Fixed #26673 -- Fixed a I18N test case error on Windows+Python 2.7.,"`subprocess.Popen` doesn't accept enviroment vars with Unicode var name
or value.
",ramiro,None,2016-05-27T23:52:48Z,2016-05-28T21:09:06Z
6658,Fixes #26644 -- Allow saving NamedTemporaryFile,"914c72be2abb1c6dd860cb9279beaa66409ae1b2 introduced a regression that caused saving a NamedTemporaryFile in a FileField to raise a SuspiciousFileOperation.

To work around this scenario, and other possible similar scenarios, if a File object has an absolute path as a filename, only use the basename component as a filename.

There is no mention of this fix in the changelog, because the regression was introduced after 1.9, and this will hopefully, be merged before 1.10. No released django version has the issue this fixes.
",WhyNotHugo,None,2016-05-27T18:01:31Z,2016-06-13T18:46:09Z
6657,Fixed docs typo: Meta.excludes -> Meta.exclude.,,sir-sigurd,None,2016-05-27T14:18:33Z,2016-05-27T14:31:33Z
6656,Fix prefetch_related docs typo,"No issue or Trac ticket as this is just a typo fix.
",nimasmi,None,2016-05-27T10:27:53Z,2016-05-27T13:12:54Z
6655,"Fixes #26635: clarify ""memory_cost"" of Argon2PasswordHasher differs from command line utility","@timgraham 

https://code.djangoproject.com/ticket/26635
",bwesterb,None,2016-05-27T08:44:07Z,2016-05-27T22:37:45Z
6654,Refs #25588 -- Fixed GDAL dependency in spatial lookups.,"I moved the attempt to convert to raster into a separate method that is only called if GDAL is installed. 

Is there a way to create a regression test for this? I don't know how to mock a system that does not have gdal installed.
",yellowcap,None,2016-05-26T19:59:11Z,2016-05-27T20:51:08Z
6653,Fixed #26652 -- Documented removal of model instance _(default/base)_manager attributes.,,timgraham,None,2016-05-26T17:37:45Z,2016-05-27T14:36:16Z
6652,Fixed #26691 -- Removed checking for a file's existence before deleting.,"File operations will always raise a ENOENT error when a file does not
exist. Checking the file exists before the operation adds a race
condition where the file could be removed between operations. As the
operation already raises an error on a missing file, avoid this race and
avoid checking the file exists twice. Instead only check a file exists
by catching the ENOENT error.

Additionally, this follows the Python idiom ""easier to ask for
forgiveness than permission"".
",jdufresne,None,2016-05-26T15:48:54Z,2016-05-31T16:37:21Z
6651,Fixed #26656 -- Added duration (timedelta) support to DjangoJSONEncoder,"Currently `DjangoJSONEncoder` supports `datetime`, `date`, `time`, `Decimal` and `UUID` objects.

But when the `DurationField` was added recently, no support for `timedelta` was added to the JSON encoder.
## Implementation

For portability reasons, this fix uses the ISO 8601 formatting for duration, instead of Django's duration string (`duration_string` is closely tied to Python's `timedelta` and handles negative values in a slightly idiosyncratic manner). Django's builtin duration parser already supports ISO 8601 strings, but has been extended to handle negative values.

One downside to this approach is that the `DjangoJSONEncoder` will use a different format to Django's serialization framework.
## Links
- Ticket: https://code.djangoproject.com/ticket/26656
- Another PR (uses floats): https://github.com/django/django/pull/6535
",willhardy,None,2016-05-26T13:03:10Z,2016-07-14T17:45:39Z
6650,Fixed #26638 -- Allowed callable arguments for QuerySet.get_or_create()/update_or_create() defaults.,"Made `get_or_create()` and `update_or_create()` accept callables in the default argument, in reference to ticket #26638. 
",ddsnowboard,None,2016-05-25T20:41:13Z,2016-06-03T14:04:20Z
6649,Improve documentation with proper imports,,MariKiev,None,2016-05-25T12:35:18Z,2016-05-25T13:58:19Z
6648,Fixed #26653 -- Made SyndicationFeed.latest_post_date() return time in UTC.,,ketanbhatt,None,2016-05-25T08:27:10Z,2016-05-30T22:37:15Z
6647,Update openlayers.html,"fix typo in django/contrib/gis/templates/gis/openlayers.html
",Guest007,None,2016-05-25T06:24:34Z,2016-05-25T13:12:55Z
6646,Refs #26134 -- Updated deprecated MySQL GIS function names.,"Tested on MySQL 5.5, 5.6, 5.7.
",timgraham,None,2016-05-24T15:00:03Z,2016-05-25T01:50:30Z
6645,Fixed #26645 -- Fixed potential makemessages failures on Windows.,,ramiro,None,2016-05-24T02:56:58Z,2016-05-28T00:09:32Z
6644,Updated GeoIP test for latest database.,,timgraham,None,2016-05-23T23:43:34Z,2016-05-24T00:17:36Z
6643,Fixed #25530 -- Renamed deferred SQL references on rename operation.,"https://code.djangoproject.com/ticket/25530
",charettes,None,2016-05-23T06:05:00Z,2017-06-21T04:42:17Z
6642,Fixed #26647 -- Included the state of all applied migrations when migrating forward.,"Thanks Jasper Maes for the detailed report.
",charettes,None,2016-05-23T00:36:16Z,2016-05-26T17:31:44Z
6641,Refs #20483 --  Lifted available_apps limitation in regard to unavailable models references.,,charettes,None,2016-05-22T23:11:55Z,2017-01-13T13:50:44Z
6640,Fixed #26648 -- Added a system check for related_query_name.,"https://code.djangoproject.com/ticket/26648
",koniiiik,None,2016-05-22T21:12:12Z,2016-06-09T16:01:42Z
6639,Fixed #26646 -- Added IOBase methods required by TextIOWrapper to File.,,charettes,None,2016-05-22T16:45:15Z,2016-05-28T01:12:42Z
6638,Fixed #26517 -- Select 0 for impossible predicates,"- https://code.djangoproject.com/ticket/26517
- https://code.djangoproject.com/ticket/26433
",emulbreh,None,2016-05-22T15:07:16Z,2016-08-05T14:03:41Z
6637,Refs #24067 -- Fixed contenttypes rename tests failures on Oracle.,"Broke the initial migration in two to work around #25530 and added
'django.contrib.auth' to the available_apps to make sure its tables are also
flushed as Oracle doesn't implement cascade deletion in sql_flush().

Thanks Tim for the report.
",charettes,None,2016-05-21T20:06:08Z,2016-05-23T01:29:48Z
6636,Fixed #25044 -- Fixed migrations for renaming ManyToManyField's through model.,"[#25044](https://code.djangoproject.com/ticket/25044)

`RenameModel` operation now updates M2M fields that have had their `through` renamed. Migration autodetector no longer generates an `AlterField` in this case.

I have some minor concerns, though:
- Given a model, I need to find all M2M fields that have the model as `through`. What I've done is iterate through all FKs in the model and look for M2Ms in the related models. It works but maybe there's a better way?
- I didn't do anything in `database_forwards`. I think that should be okay, because if I would add the corresponding `schema_editor.alter_field`s, they [would just no-op](https://github.com/django/django/blob/master/django/db/backends/base/schema.py#L479-L484).
",vytisb,None,2016-05-21T13:38:12Z,2016-05-30T14:20:13Z
6635,fix #26643 - prevent migrations being added to the model state when,"fix [#26643](https://code.djangoproject.com/ticket/26643) - prevent migrations being added to the model state when their name matches that of the auto created managers, and they have use_in_migrations=False
",cybojenix,None,2016-05-21T10:04:17Z,2016-05-30T18:49:24Z
6634,Fix bug in get_traceback_frame_variables,"When using django.utils.log.AdminEmailHandler logger handler with Celery, Exceptions do not get through because of AttributeError in get_traceback_frame_variables. 

This fixes the issue.
",tuomas2,None,2016-05-21T08:02:20Z,2016-06-28T09:44:43Z
6633,Oracle tests failures,,charettes,None,2016-05-20T21:39:49Z,2016-05-22T23:16:07Z
6632,Fixed #26616 -- Improves error message when AppConfig.name is invalid,,inondle,None,2016-05-20T19:55:41Z,2016-06-02T14:48:14Z
6631,Removed versionadded/changed annotations for 1.9.,,timgraham,None,2016-05-20T15:46:28Z,2016-05-20T18:03:50Z
6630,Increased the default PBKDF2 iterations.,,timgraham,None,2016-05-20T13:27:10Z,2016-05-20T14:42:02Z
6629,Fixed #26642 -- Made ModelSignal.disconnect() work with lazy references.,"See [ticket #26642](https://code.djangoproject.com/ticket/26642).
",AlexHill,None,2016-05-20T08:22:56Z,2016-05-27T22:01:11Z
6628,Fixed #26640 -- class_prepared is not a ModelSignal and differs from docs,"Fixes a couple of problems with `class_prepared`:
1. it's not a `ModelSignal` but it's documented as one
2. it's documented as being sent after the model is registered, but it's actually sent just before
3. it's instantiated with `providing_args=[""class""]`, but it doesn't provide a class argument
",AlexHill,None,2016-05-20T02:38:16Z,2016-05-28T19:33:22Z
6627,Added stub 1.11 release notes.,"(to be merged after the stable/1.10 branch is created)
",timgraham,None,2016-05-19T16:15:13Z,2016-05-20T02:28:24Z
6626,Refs #24100 -- Fixed a test failure on MySQL related to non-transactional DDL.,"Thanks Tim for the report.
",charettes,None,2016-05-19T13:11:37Z,2016-05-19T15:02:04Z
6625,Fixed #26637 - Match the Sphinx version requirement with the actual code.,,adelton,None,2016-05-19T12:09:36Z,2016-05-19T13:12:36Z
6624,"Fixed #4136 -- When saving nullable models.CharFields through model forms, save empty values as NULL","This helps with CharFields that have null=True, blank=True, and
unique=True. Previously, the empty string would be saved through
forms. When the field was left blank, this caused unique constraint
violations as multiple objects had '' for the unique field. NULL does
not have this problem.

https://code.djangoproject.com/ticket/4136
",jdufresne,None,2016-05-19T01:46:31Z,2016-06-13T13:21:25Z
6623,Moved AUTH_USER_MODEL setting_changed receiver to django.test.,,charettes,None,2016-05-18T13:35:07Z,2016-05-18T13:57:04Z
6622,Fixed failing test after 3a47d42fa33012b2156bf04058d933df6b3082d2.,,loic,None,2016-05-18T04:37:00Z,2016-05-18T10:38:42Z
6621,Fixed #26615 -- Password reset token now depends on user's email.,"Per [26615](https://code.djangoproject.com/ticket/26615). Also refactored user's hash generation into methods on User and AbstractUser so that PasswordResetTokenGenerator doesn't need to know which fields are available.

Resubmit of #6608.
",SilasX,None,2016-05-18T02:54:22Z,2016-07-08T19:09:13Z
6620,Fixed #26615 -- Password reset token now depends on user's email.,"Per [26615](https://code.djangoproject.com/ticket/26615). Also refactored user's hash generation into methods on User and AbstractUser so that PasswordResetTokenGenerator doesn't need to know which fields are available.

Resubmit of #6608.
",SilasX,None,2016-05-18T02:47:13Z,2016-05-18T02:52:43Z
6619,Create Thoughts on Django's license...,"Essentially a little blog post about licenses!
",tristanfarran,None,2016-05-17T17:38:31Z,2016-05-18T08:28:27Z
6618,Refs #26601 -- Fixed new-style SessionMiddleware to process the response if the view raises an exception.,"I guess any middleware that implements `process_response()` may suffer from the fact that it won't be unconditionally called under the new style anymore.

I'm wondering if the `MiddlewareMixin` should be adapted to account for this.
",timgraham,None,2016-05-17T16:22:32Z,2016-06-14T12:57:27Z
6617,Fixed #26627 -- Fixed on_commit callbacks wrong execution order,"Added a regression test showing that on_commit callbacks should be
executed by the outermost atomic block. Fixed the execution behavior
by copying the callback list to a local variable and resetting the
callback list before executing the callbacks.
",bartdag,None,2016-05-17T14:58:10Z,2016-05-18T13:10:33Z
6616,Fixed #26623 -- Add support for DJANGO_REMOTE_USER_VAR.,,adelton,None,2016-05-17T08:19:15Z,2017-12-28T17:11:58Z
6615,Fixed #20468 -- Added loaddata --exclude option.,"Original patch by Alex Morozov.

https://code.djangoproject.com/ticket/20468
",berkerpeksag,None,2016-05-17T06:52:55Z,2016-06-09T14:39:12Z
6614,Updated admin's jQuery to 2.2.3.,,timgraham,None,2016-05-17T00:55:59Z,2016-05-17T11:20:42Z
6613,Fixed #26613 -- Moved sqlite3 import into try-catch block in django.db.backends.sqlite3.schema,,philipliberato,None,2016-05-16T23:47:01Z,2016-05-18T02:15:01Z
6612,Fixed #24067 -- Renamed content types upon model renaming.,"Thanks to Tim for the extensive review.
",charettes,None,2016-05-16T23:40:43Z,2016-05-17T16:19:31Z
6611,Fix #26620 -- Made refresh_from_db() fail when passing unknown keyword args,"See https://code.djangoproject.com/ticket/26620
",intgr,None,2016-05-16T19:03:32Z,2016-05-18T13:29:52Z
6610,Updated qunit to 1.23.1.,,timgraham,None,2016-05-16T17:12:49Z,2016-05-16T17:28:16Z
6609,Made explanation consistent with example,"It's more consistent to associate 'object_id' with 'fk_field' as in the example code
",eltronix,None,2016-05-16T10:00:21Z,2016-05-16T15:27:55Z
6608,Fixed #26615 -- Password reset token now depends on user's email.,"Per [#26615](https://code.djangoproject.com/ticket/26615).

First submission to Django Project, please be nice.
",SilasX,None,2016-05-16T02:20:17Z,2016-05-18T02:47:50Z
6607,Refs #17209 -- Added LoginView and LogoutView class-based views,,claudep,None,2016-05-15T20:05:04Z,2016-06-24T08:46:05Z
6606,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,"Patch for ticket https://code.djangoproject.com/ticket/26617
",rkashapov,None,2016-05-15T09:55:18Z,2016-06-02T18:00:34Z
6605,"	Refs #26617 -- Added distinct argument to contrib.postgres.aggregates.StringAgg class","Patch for ticket https://code.djangoproject.com/ticket/26617.
",rkashapov,None,2016-05-15T09:41:00Z,2016-05-15T09:42:12Z
6604,Refs #26617 -- Added distinct argument to contrib.postgres.aggregates.StringAdd class,"Patch for ticket https://code.djangoproject.com/ticket/26617
",rkashapov,None,2016-05-15T09:21:00Z,2016-05-15T09:35:38Z
6603,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,"https://code.djangoproject.com/ticket/26604
",berkerpeksag,None,2016-05-15T07:04:07Z,2016-06-03T21:42:04Z
6602,Fixed #26573 -- Added descriptive error message for malformed if/else/elif template tags.,"Patch for ticket https://code.djangoproject.com/ticket/26573
",inondle,None,2016-05-14T22:03:45Z,2016-05-27T22:12:56Z
6601,Simplified a ClearableFileInput test.,,timgraham,None,2016-05-14T14:35:57Z,2016-05-14T15:40:24Z
6600,Fixed #21379 -- Added support for Unicode usernames,,claudep,None,2016-05-14T13:06:17Z,2016-05-16T18:37:37Z
6599,Refs #18599 -- Added a test for setting GenericForeignKey in __init__().,"The ticket was fixed by 8a47ba679d2da0dee74671a53ba0cd918b433e34
(refs #16508).
",timgraham,None,2016-05-13T22:44:46Z,2016-05-14T01:27:23Z
6598,Removed redundant code in QuerySet._batched_insert(),"Mentioned by Loic in https://github.com/django/django/pull/6175#issuecomment-187736454
",timgraham,None,2016-05-13T22:33:10Z,2016-05-14T10:42:50Z
6597,Fixed #26614 -- Used constant_time_compare() in checking session auth hash in login().,"https://code.djangoproject.com/ticket/26614#ticket
",timgraham,None,2016-05-13T21:00:41Z,2016-05-13T22:26:10Z
6596,Refs #26592 -- Fixed band statistics for empty bands and GDAL 2.1.,,yellowcap,None,2016-05-13T15:53:56Z,2016-05-16T16:43:04Z
6595,Removed unused code in AlterField.database_forwards().,"This code added in 107c9f545346149b03354678f53a177709edaced isn't
used after 4ce7a6bc84c68406e39f48550434faeef3277eba.
",timgraham,None,2016-05-13T14:59:57Z,2016-05-14T10:43:41Z
6594,Added David Sanders to AUTHORS,,dsanders11,None,2016-05-13T13:28:41Z,2016-05-13T14:16:06Z
6593,Fixed #26612 -- Fixed SelectFilter2 buttons changing URL.,,dsanders11,None,2016-05-13T11:37:20Z,2016-05-13T13:09:40Z
6592,Fixed typo,,eltronix,None,2016-05-12T17:12:30Z,2016-05-13T00:07:34Z
6591,Prevented findstatic argument from appearing as multiple options.,"This is less confusing. The initial format appeared to present two separate options
",eltronix,None,2016-05-12T14:42:12Z,2016-05-13T00:28:16Z
6590,Fixed #26607 -- Added InlineModelAdmin.get_formset_initial_data().,,dsanders11,None,2016-05-12T11:51:22Z,2020-08-27T11:40:09Z
6589,Removed extra word from LayerMapping documentation,,victor-o-silva,None,2016-05-11T21:33:11Z,2016-05-12T12:16:18Z
6588,Fix the ECMAScript edition,"The link goes to the ECMAScript 2015 spec, which is actually the 6th edition.
",Alex-CS,None,2016-05-11T17:28:32Z,2016-05-13T00:06:34Z
6587,Fixed #26333 -- Made GEOS Geometry classes deconstructible.,,niconoe,None,2016-05-11T09:30:52Z,2016-05-13T15:36:45Z
6586,"Fixed #24100, #24075 -- Made the migration signals dispatch its plan and apps and use them.","Thanks Markus for your contribution.
",charettes,None,2016-05-11T02:28:06Z,2016-05-15T23:57:40Z
6585,Refs #24227 -- Removed ManyToManyField special casing in model_to_dict().,"See https://code.djangoproject.com/ticket/24227#comment:17
",timgraham,None,2016-05-11T02:00:50Z,2016-05-11T14:55:58Z
6584,Fixed #25044 -- Fixed renaming ManyToManyField's through table.,"https://code.djangoproject.com/ticket/25044
",vytisb,None,2016-05-10T21:44:43Z,2016-05-14T12:09:00Z
6583,Merge remote-tracking branch 'django/master',,betojulio,None,2016-05-10T18:21:03Z,2016-05-10T18:25:02Z
6582,Fixed: #24227: Partially revert 983c158da,"https://code.djangoproject.com/ticket/24227
",collinanderson,None,2016-05-10T15:00:12Z,2016-05-10T16:04:33Z
6581,"Refs #18100, #26207 -- Added tests for deferred model deletion signals.","Thanks Tim for pointing out this was fixed by 7f51876f99851fdc3fef63ae.
",charettes,None,2016-05-10T14:44:42Z,2016-05-10T23:32:31Z
6580,Fixed #26603 -- Forced lazy template names to text when computing cache key.,"Refs #26536.

Thanks Sylvain Fankhauser for the very detailed report.
",charettes,None,2016-05-10T14:02:26Z,2016-05-10T14:49:39Z
6579,Fixed #17688 -- Added actions to m2m_changed for deleted objects.,"This is an update to the PR #5505. I have implemented the changes in the comments of that PR.
",jorgecarleitao,None,2016-05-10T07:47:12Z,2019-03-19T04:35:41Z
6578,Refs #26445 -- Used app config to lookup user model in _create_user,"Ticket comment: https://code.djangoproject.com/ticket/26445#comment:3

Even though the UserManager is available to the user model in
migrations, one cannot use create_superuser() or create_user() due to
them using the attached model to set the password.

Since model managers used in migrations will _ALWAYS_ refer to their
current implementation and will have to work with the migration state
model and the ""real"" model, using the global app_registry to lookup the
user model is not a problem.
",MarkusH,None,2016-05-09T18:57:04Z,2017-03-30T19:11:16Z
6577,Support Array field with checkbox select multiple.,"I can't save data at postgresql and not correct display it when I use the ArrayField with CheckboxSelectMultiple at forms.

code:

``` python
class ShopAdminForm(forms.ModelForm):
    """"""ShopAdmin change form.""""""
    allow_ways = ArrayField(CheckboxSelectMultiple)

    class Meta:
        model = Shop
        fields = '__all__'
        widgets = {
            'allow_ways': CheckboxSelectMultiple()
        }

    def __init__(self, *args, **kwargs):
        """"""ShopAdmin form.""""""
        super().__init__(*args, **kwargs)
        self.fields['allow_ways'].widget.choices = (('one': 1), ('two': 2))
```
",lagelalegal,None,2016-05-09T10:29:24Z,2016-05-13T12:19:08Z
6576,"Fixed #24046 -- Deprecated the ""escape"" half of utils.safestring.","https://code.djangoproject.com/ticket/24046
",timgraham,None,2016-05-08T23:06:29Z,2016-05-10T16:46:48Z
6575,Refs 497930b -- Use `callable` instead of `six.callable`.,,scop,None,2016-05-08T19:11:59Z,2016-05-08T22:07:15Z
6574,Ticket 26483,"Fixes #6560 

Initial work on this (I'll squash commits). I'm not certain how to read objects.inv
",atombrella,None,2016-05-08T18:07:52Z,2016-05-08T18:24:21Z
6573,Fixed #26811 -- Added addButton option to admin inlines JavaScript.,"Added an option for passing an existing add button to the admin inlines script which overrides automatic creation of one. This is useful for admin themes that want to use buttons in the template, say in the right hand corner of the inline (e.g. Grappelli).
",dsanders11,None,2016-05-08T14:26:33Z,2016-06-28T19:19:53Z
6572,Fixed #26734 - Made iterator class configurable on ModelChoiceField.,"This seemed too trivial to open a ticket regarding, so I just created a pull request without one. Currently isn't trivial to change the iterator class used for a subclass of `ModelChoiceField` since it is hardcoded in `_get_choices`, which is then used in a property. This means a subclass has to duplicate code and create the property again to change the iterator class.

Test coverage/documentation can be added if needed, but seemed like a trivial enough change to not need any.
",dsanders11,None,2016-05-08T10:02:25Z,2016-06-09T15:13:15Z
6571,[WIP] Fixed #26591 -- Fixed incorrect manifest entries for ManifestStaticFilesStorage on Windows,,dsanders11,None,2016-05-08T04:13:40Z,2016-05-31T17:48:06Z
6570,Fixed #26483 -- Updated docs.python.org links to use Intersphinx.,"https://code.djangoproject.com/ticket/26483
",timgraham,None,2016-05-08T02:14:14Z,2016-05-08T22:07:43Z
6569,Fix a typo,,matthiask,None,2016-05-07T12:05:07Z,2019-04-24T09:15:21Z
6568,Update one_to_one.txt,"w.save() is deleted
",ghost,None,2016-05-07T03:59:45Z,2016-05-07T10:53:03Z
6567,Removed HTTP prefixed CONTENT_TYPE/LENGTH headers in MultiPartParser.,"The docs say that these headers always appear without the HTTP_ prefix.
This may have been an oversight when they were added in
d725cc9734272f867d41f7236235c28b3931a1b2, the only commit that uses
these names.
",timgraham,None,2016-05-06T14:32:43Z,2016-05-06T15:04:31Z
6566,Fixed #26544 -- Fixed translations of password validators help_text in forms.,"Thanks Michael Bitzi for the report.
",claudep,None,2016-05-06T10:27:13Z,2016-05-07T08:19:00Z
6565,Fixed #26593 -- Leveraged deferrable_sql() in SchemaEditor,,MarkusH,None,2016-05-06T00:23:57Z,2016-05-06T23:57:15Z
6564,Corrected dynamic lookup example.,"https://docs.djangoproject.com/en/1.9/howto/custom-lookups/#how-django-determines-the-lookups-and-transforms-which-are-used

In the example the `finally` block should be replaced with an `else` block to function as intended (that is, return the custom lookup if there were no exceptions.
",vytisb,None,2016-05-05T19:49:53Z,2016-05-06T12:26:07Z
6563,Fixed #19963 -- Added support for date_hierarchy across relations.,"https://code.djangoproject.com/ticket/19963
",vytisb,None,2016-05-05T18:45:00Z,2017-01-25T13:10:39Z
6562,Refs #25847 -- Added system check for UserModel.is_anonymous/is_authenticated methods.,"As suggested by Shai at https://groups.google.com/d/msg/django-developers/7k6Z8JxKH5Q/Wso0e8J5BgAJ
",timgraham,None,2016-05-05T16:53:39Z,2016-05-06T13:13:20Z
6561,Fixed #26566 -- Rewrote a wrong Cache-Control example.,,vfaronov,None,2016-05-05T12:47:56Z,2016-05-07T14:50:40Z
6560,Fixed #26483 -- Change docs.python.org links to point to Python 3,"Added version 3 on every docs.python.org links (`grep ""docs.python.org"" docs -R`)
Kept python 2 links in :
- docs/releases/{1.3, 1.4, 1.6}.txt (python 3 wasn't supported)
- docs/releases/1.9.txt (specific python 2 reference to httplib.responses L1056)
- refs/utils.txt (python2 reference specified)
- topics/python3.txt
",abriemme,None,2016-05-04T23:16:14Z,2016-05-08T02:14:25Z
6559,Fixed #26555 -- Gave deconstructible objects a higher priority during serialization,"Ticket: https://code.djangoproject.com/ticket/26555
",MarkusH,None,2016-05-04T20:36:20Z,2016-05-04T22:43:14Z
6558,Fixed #26582 - prettier admin display for list values,"Opting for the simple solution outlined in https://code.djangoproject.com/ticket/26582

Also has the nice side-effect of correctly rendering value types returned by fields Django doesn't know about - for instance, a custom field that returns `datetime.date` but is not a `DateField` subclass.
",dcwatson,None,2016-05-04T18:46:40Z,2016-05-07T19:49:41Z
6557,[Docs] Sitemap: Fix variable name,"Fix variable name in Sitemaps initialization code example.

Rename `sitemaps` to `sitemap`

Docs: https://docs.djangoproject.com/en/1.9/ref/contrib/sitemaps/#initialization
Ticket: https://code.djangoproject.com/ticket/26581
",PabloVallejo,None,2016-05-04T15:54:06Z,2016-05-04T16:17:19Z
6556,Fixed #26580 -- Updated references to RFC 2822.,"Did not rename django.utils.feedgenerator.rfc2822_date
as some external code may rely on it.
",vfaronov,None,2016-05-04T10:49:17Z,2016-05-10T15:25:59Z
6555,Fixed #26558 -- Added username to admin view context,"https://code.djangoproject.com/ticket/26558
",etos,None,2016-05-04T00:27:12Z,2016-05-04T13:48:45Z
6554,Spelling fixes,"""a SQL"" -> ""an SQL""
",scop,None,2016-05-03T19:54:32Z,2016-05-03T23:30:48Z
6553,Fixed #26449 -- Added one level deep merge to FORMFIELD_FOR_DBFIELD_D…,"…EFAULTS

Refactored merging FORMFIELD_FOR_DBFIELD_DEFAULTS with formfields_overrides,
so that formfields_overrides don't replace the value for a given field class
but get merged with the existing values.
Useful for overriding the DateTimeField widget.
",MarysiaLowas,None,2016-05-03T19:09:04Z,2016-05-08T00:04:45Z
6552,Fixed #26577 -- Disabled implicit wait of Selenium tests where appropriate.,,charettes,None,2016-05-03T18:10:03Z,2016-05-04T03:19:24Z
6551,Fixed #26572 -- Stopped truncating AdminEmailHandler message subjects.,"Refs #26572, #17281. The RFC doesn't limit total length, just the line length
which is already taken care of by Python itself.
",claudep,None,2016-05-03T16:28:08Z,2016-05-10T16:18:51Z
6550,Fixed #26572 -- Sanitized message subjects at EmailMessage level,,claudep,None,2016-05-03T14:41:25Z,2016-05-03T16:27:23Z
6549,Stable/1.9.x,,hbf0803,None,2016-05-03T13:23:07Z,2016-05-03T13:31:22Z
6548,Fixed #26575 -- Disabled SelectFilter buttons when inactive,,dsanders11,None,2016-05-03T12:54:03Z,2016-05-03T17:09:14Z
6547,Fixed #25966 -- Added Apps.import_model / Made get_user_model() work at import time.,"This function should make it possible to implement a get_user_model()
method that is less vulnerable to the order of apps in INSTALLED_APPS.

It breaks the invariant that models are registered in the app registry
in the order of INSTALLED_APPS at the second stage of the app loading
process. However there's no way for user code to hook at this point so
that shouldn't be an issue. If anything, it should bring the behavior
closer to what it was before Django 1.7.
",aaugustin,None,2016-05-03T10:29:29Z,2016-11-13T14:06:43Z
6546,Document requirement for uppercase setting names,"Merely saying that it is a ""convention"" is not strong enough, as `django/conf/__init__.py` behaves differently depending on whether the name is all uppercase or not.

Here's an example of a user who tripped up on the fact that setting names must be uppercase. Merely documenting that it was a convention was not strong enough for this user:

http://stackoverflow.com/questions/11631194/unable-to-get-a-setting-from-settings-file-in-django#comment15404478_11631244

This pull request makes it clearly that it is a requirement.
",Flimm,None,2016-05-02T17:31:50Z,2016-05-03T16:54:02Z
6545,Refs #26565 -- Errored nicely when using Prefetch with a values() queryset.,"Thanks Maxime Lorant for the report and Anssi for the suggestion.
",charettes,None,2016-05-02T16:56:32Z,2016-05-03T13:28:31Z
6544,fix typos,,ghost,None,2016-05-02T15:41:03Z,2016-05-02T15:43:03Z
6543,Fixed support of ForeignKey subclasses which omit 'to',"This allows subclasses of ForeignKey which omit the 'to' argument as it used to work in Django < 1.9.

```
class MyField(models.ForeignKey):
    def __init__(self, **kwargs):
        if 'to' in kwargs:
            raise TypeError(""Invalid argument 'to'"")
        super(MyField, self).__init__('app.model', **kwargs)

    def deconstruct(self):
        name, path, args, kwargs = super(MyField, self).deconstruct()
        kwargs.pop('to')
        return name, path, args, kwargs
```
",alvra,None,2016-05-02T14:02:18Z,2016-05-13T12:19:37Z
6542,Fixed #26567 -- Updated references to the HTTP spec,"Didn't touch comments where it was not obvious that the code adhered
to the newer standard.
",vfaronov,None,2016-05-02T12:42:19Z,2016-05-03T15:19:32Z
6541,Refs #12690 -- Removed unneeded BaseSpatialOperations.truncate_params,"Unless a regression test is missing, things seem to now work on Oracle without this.
Original commit: 474ce51ffd9e7f0963d666bdb429f00b04cdaee3
",timgraham,None,2016-05-01T23:07:06Z,2016-05-02T00:44:56Z
6540,Fixed #26341 (again) -- Addressed multiple occurrences per line use case,,claudep,None,2016-05-01T17:24:50Z,2016-05-02T17:41:02Z
6539,add --noinput in migrate command reference documentation,,arthru,None,2016-05-01T16:06:26Z,2016-05-03T13:44:43Z
6538,Fixed #26058 -- Delegated FileField's filename generation to the Storage.,"https://code.djangoproject.com/ticket/26058
Updated from https://github.com/django/django/pull/6321
",timgraham,None,2016-04-30T13:48:50Z,2016-04-30T23:28:46Z
6537,Fixed #26561 -- Fixed unusably slow SelectBox performance with large lists,"Discussion on [ticket 26561](https://code.djangoproject.com/ticket/26561). Patch to at least make it usable with large lists in 1.10, with the long-term rewrite on [ticket 15220](https://code.djangoproject.com/ticket/15220) still to come.
",dsanders11,None,2016-04-30T01:29:28Z,2016-05-03T14:42:50Z
6536,Fixed #14415 -- Do not ignore DB test name setting,"Modified the code so it will take DATABASES['db-name']['TEST']['NAME'] into account while it decides which databases to create for tests. Using this setting is essential when testing with different tables in different databases
",boaz85,None,2016-04-29T22:34:11Z,2016-05-18T01:37:20Z
6535,Update DjangoJSONEncoder to be aware of timedelta,"Current implementation is not datetime.timedelta aware.  This patch causes timedeltas to be returned as total_seconds()
",emontellese,None,2016-04-29T14:48:38Z,2016-06-08T15:38:34Z
6534,Refs #26428 -- Added support for relative path redirects to the test client.,"https://code.djangoproject.com/ticket/26428
",timgraham,None,2016-04-29T12:59:09Z,2016-04-29T13:16:22Z
6533,Fixed #26557 - Normalise empty strings to None in GenericIPAddressField,,xlq,None,2016-04-29T10:57:13Z,2016-04-29T14:12:52Z
6532,Refs #26479 -- Added more tests and docs for is and is not comparisons,"https://code.djangoproject.com/ticket/26479
",alasdairnicol,None,2016-04-28T22:37:07Z,2016-04-29T16:40:49Z
6531,Refs #15667 -- Removed choices argument from some RendererMixin methods.,"RendererMixin will soon be removed but this removal and the corresponding
test changes stands on its own.
",timgraham,None,2016-04-28T22:20:08Z,2016-04-28T22:48:52Z
6530,Fixed #26341 -- Fixed makemessages breaking location comments for HTML files,,claudep,None,2016-04-28T19:38:44Z,2016-05-01T17:25:12Z
6529,Fixed typo,,eltronix,None,2016-04-28T18:12:39Z,2016-04-28T22:19:21Z
6528,Refs #26521 -- Accounted for mixins in CreateModel bases validation.,"Thanks Collin for the report.
",charettes,None,2016-04-28T14:44:40Z,2016-04-28T22:20:49Z
6527,Fixed #26553 -- Removed unneeded loop in views/i18n.py,"https://code.djangoproject.com/ticket/26553
",timgraham,None,2016-04-28T12:57:44Z,2016-04-28T13:15:34Z
6526,Fixed typo,,eltronix,None,2016-04-28T10:45:08Z,2016-04-28T11:01:30Z
6525,Clarified explanation,"The example is for Model level annotation therefore it should be referring to `ModelAdmin.empty_value_display`
",eltronix,None,2016-04-27T19:19:57Z,2016-04-27T19:41:37Z
6524,Refs #25136 -- Added a missing field/model in aggregation topic guide.,"Reported on django-users: https://groups.google.com/d/topic/django-users/uSXcyWdm7q4/discussion
",timgraham,None,2016-04-27T18:51:00Z,2016-04-27T19:26:11Z
6523,Refs #26521 -- Added the duplicated value to CreateModel validation messages.,"Thanks Tim for the suggestion.
",charettes,None,2016-04-27T18:49:45Z,2016-04-27T20:17:22Z
6522,Fixed #26508 -- Clarified docs for various FieldFile methods,"- include a note in the `File` documentation about how subclasses may swap out the `file` attribute
- clarify in the `FieldFile` documentation what methods are custom to FieldFile vs. which method documentation in the `File` class can reasonably be relied upon
- clarify that FieldFile.open does not return a file descriptor like the standard Python `open()` method
- include a louder warning that the `save()` and `delete()` methods also save the associated model object
- add indentation to the `FieldFile` attribute documentation to make it easier to read/scan while editing

See: https://code.djangoproject.com/ticket/26508
",tobiasmcnulty,None,2016-04-27T18:47:03Z,2016-05-07T16:22:36Z
6521,Fixed flake8 E226 warning,,alasdairnicol,None,2016-04-27T18:20:31Z,2016-04-27T20:06:06Z
6520,Fixed #26508 -- Clarified docs for various FieldFile methods,"- include a note in the `File` documentation about how subclasses may swap out the `file` attribute
- clarify in the `FieldFile` documentation what methods are custom to FieldFile vs. which method documentation in the `File` class can reasonably be relied upon
- clarify that FieldFile.open does not return a file descriptor like the standard Python `open()` method
- include a louder warning that the `save()` and `delete()` methods also save the associated model object
- add indentation to the `FieldFile` attribute documentation to make it easier to read/scan while editing

See: https://code.djangoproject.com/ticket/26508
",tobiasmcnulty,None,2016-04-27T16:05:53Z,2016-04-27T18:43:46Z
6519,Removed try/fail antipattern from migrations commands tests.,,timgraham,None,2016-04-27T14:21:36Z,2016-04-27T14:59:49Z
6518,Fixed grammar,,eltronix,None,2016-04-27T14:06:56Z,2016-04-27T14:20:19Z
6517,Fixed use of required attribute in multiple_input.html.,,jdufresne,None,2016-04-27T13:10:58Z,2016-04-27T14:05:43Z
6516,Fixed grammar,,eltronix,None,2016-04-27T10:57:03Z,2016-04-27T12:01:48Z
6515,[WIP] Fixed #25197 -- Added an HStoreField admin widget.,"Adding a key:value list widget to Admin for editing hstore fields
https://code.djangoproject.com/ticket/25197
",funkybob,None,2016-04-27T03:17:12Z,2016-09-17T00:32:19Z
6514,Fixed #26440 -- Added a warning for non-url()s in urlpatterns.,"I have made minor changes to #6375 
- moved the checks into the `check_resolver` method
- simplified the warning messages
- made tests pass

The warning message is now missing the hint about forgetting to add `url` to the pattern. If the rest of the changes look good, I could check for a tuple in `warn_invalid_pattern` and add the hint there.
",alasdairnicol,None,2016-04-26T22:17:20Z,2016-05-01T00:28:46Z
6513,Fixed #26542 -- Fixed quoting of name in Postgres CreateExtension operation,"https://code.djangoproject.com/ticket/26542
",conradev,None,2016-04-26T21:58:41Z,2016-04-27T13:38:53Z
6512,Fixed #26431 -- translate_url() creates an incorrect URL when optiona…,"https://code.djangoproject.com/ticket/26431
",jekka-ua,None,2016-04-26T19:10:37Z,2016-07-09T13:09:13Z
6511,Fixed #26546 -- Allow HTTPStatus enum values to be used as HttpResponse.status,,evansd,None,2016-04-26T18:31:16Z,2016-04-29T14:56:10Z
6510,Fixed grammar,,eltronix,None,2016-04-26T17:37:55Z,2016-04-26T22:19:00Z
6509,Fixed inexistence of Poll model,"The **polls** tutorial does not have a `Poll` model, it only contains `Question` and `Choice` models.
",eltronix,None,2016-04-26T09:57:34Z,2016-04-26T13:24:30Z
6508,Fixed Semantics,"Changed from 'False' to 'True'.
",eltronix,None,2016-04-26T09:02:30Z,2016-04-26T11:18:17Z
6507,Fixed #24452 -- Fixed HashedFilesMixin correctness with nested paths.,"There are several tickets open dealing with the problem of hashed filenames not propagating to all files that reference it: [ticket 26527](https://code.djangoproject.com/ticket/26527) is the newest, [ticket 22353](https://code.djangoproject.com/ticket/22353) is the oldest and [ticket 24452](https://code.djangoproject.com/ticket/24452) has the most relevant discussion on it.

This PR includes several new tests that cover special cases of nested filenames: infinite loop, cleared cache and referenced file changes between `collectstatic` runs. The last test is taken mostly verbatim from PR #2569 as I thought it was a useful test. I’ve also updated the tests to test the objectively correct hash values for the files. These have been painstakingly checked by getting the final content of the files and confirming the hash is correct. The current test has hashes that are not correct for the final content if nested filenames are correctly propagated. I’ve attached the tests patch by itself to [ticket 24452](https://code.djangoproject.com/ticket/24452) if anyone would like to run them against master unchanged to see the failures.

The meat of this PR is performing multiple passes of post-processing until no hashed filenames change on a pass. Since this may never converge if there are loops in the files referencing each other there is a max number of passes done before post-processing is aborted with a failure. Currently this is set on `HashedFilesMixin` and defaults to 5, but it can be overridden in a subclass for those with complex staticfiles trees which require many passes to finally converge. It may be useful to allow this max to be passed in from the `collectstatic` command so that it’s easier to use instead of requiring subclassing.

After these multiple passes to converge the hashed filenames, all the final filename hashes are accurate, and there are intermediate copies of the file for each pass where that file changed. That means that there may be multiple copies of the same file with different hashes. These extra copies are required to ensure `CachedStaticFilesStorage` works as expected. The output for `ManifestStaticFilesStorage` doesn’t use the intermediate files and lists the final correct hash name for a given filename.

When a cache miss occurs, the original filename is hashed as it currently is done today. However, since that may not be the final correct hash, the file pointed to by the hashed filename is requested and hashed. If the hash matches the name, then the final hash has been reached and things continue. If the hash does not match, then the process is repeated, requesting the file with the latest hash. This chain of intermediate files allows `CachedStaticFilesStorage` to avoid the issue mentioned by @pmclanahan in his [comment on ticket 24452](https://code.djangoproject.com/ticket/24452#comment:9) where a flushed cache would require a large amount of work to recalculate all of the hashes involved and the nested filenames. Instead on a cache miss or cache flush the intermediate files can simply be walked until the final file is found. All intermediate files are kept, from the very first hash of the file with no nested filenames changed to the final one, so nothing else is required for finding the final filename on a cache miss. A cache miss will only require N file hash computations, where N is the number of passes it took for that file to converge to the final filename. This is a better performance profile than doing the entire converge process again, but it does have the downside that it requires file hashes to be performed on all of the intermediate files, which may be stored off in S3. I have a TBD note on [line 378](https://github.com/django/django/pull/6507/files#diff-c7242dedd7c93b857a668acec1e310feR378) regarding if it makes sense to store the intermediate hashes in cache on the chance that only some of the keys in the chain were evicted. I opted to not do this in this PR as it would increase the complexity since each lookup could require a cache hit and then a media hit as well.

Due to the small performance penalty for `CachedStaticFilesStorage` if this PR is accepted I’d suggest a documentation update to go along with it which stresses only using `CachedStaticFilesStorage` if file system access is restricted since it offers worse performance than `ManifestStaticFilesStorage` across the board and for remote media lots of unnecessary accesses.

I’d very much like to see this issue fixed in 1.10, so I’m hoping this WIP can be made up to snuff in time for the code freeze. I’ve been dog fooding this change on 1.8 in production for 6 months now and it hasn’t given me any problems. I ported it to master in the last few days but there haven’t been any major changes there that would give me any pause.

While this WIP PR fixes the issue (in my testing) it is not necessarily the best solution to the problem. I tried to keep the changes as small as possible and make them fit into the existing codebase, but a reimagining of the whole implementation may be useful. It’s likely too late for that to happen for 1.10, but it could be on the roadmap for 1.11 and this PR would lay the groundwork by fixing the issue in 1.10 and providing a working set of regression tests for the refactoring. I think the bit that could benefit the most from a reimagining would be using recursion to make the filenames converge instead of the more brute force rehash all adjustable files approach. While it works, it ends up potentially hashing many more files than necessary and could be faster for large collections of staticfiles if these unnecessary hashes weren’t done.

Here’s a high-level summary of the PR:

The Good
- Hashed filenames are now fully correct and reflect the content in path-adjusted files (most important)
- Configured cache isn’t used during post-processing for filenames, so cache misses (or disabled cache) won’t cause unnecessary file hashes - final hashes are still updated in cache if `CachedStaticFilesStorage` used

The Bad
- Intermediate versions of path-adjusted files are stored, meaning there could be a half dozen copies of the same file with different contents/hashed name for complex staticfiles trees
- Cache misses will take longer due to walking intermediate files

The Ugly
- There are now at least 2 file accesses required on every cache miss to confirm the hash value is correct

NOTE: There is now a ValueError if an entry is missing from the staticfiles manifest, instead of silently succeeding like it did before. These cases should probably use ‘get_static_prefix’ anyway if it’s not for a real file.
",dsanders11,None,2016-04-26T00:54:02Z,2017-09-17T13:54:48Z
6506,msgid errors,"UserCreationForm and  AdminPasswordChangeForm password2 field's help_text is `Enter the same password as before, for verification.` the msgid is 'Enter the same password as above, for verification.' They are different.
",LikeABird-CX,None,2016-04-25T03:44:37Z,2016-04-28T06:08:52Z
6505,Fixed #26052 -- Moved conditional_content_removal() processing to the test client.,"https://code.djangoproject.com/ticket/26052
",timgraham,None,2016-04-25T01:20:44Z,2016-04-25T11:56:08Z
6504,"Fixed #19513, #18580 -- Cleared annotations on queryset before performing update","More discussion about the fix is on [ticket 19513](https://code.djangoproject.com/ticket/19513#comment:5). The first added test case works fine on master as is but was added to provide some test coverage to `update` with an annotation. The second test case includes a commented out test that invokes [ticket 26539](https://code.djangoproject.com/ticket/26539) which I opened before this PR.
",dsanders11,None,2016-04-24T23:09:03Z,2016-06-29T18:33:49Z
6503,"Fixed #21332, #26538 -- Fixed inconsistent and duplicate form fields on inline formsets","https://code.djangoproject.com/ticket/21332
https://code.djangoproject.com/ticket/26538
",dsanders11,None,2016-04-24T20:05:05Z,2016-04-26T14:34:07Z
6502,Fixed #26536 -- Preserved leading dashes of the cached template loader keys.,"Thanks Anders Roos for the report.
",charettes,None,2016-04-24T19:33:35Z,2016-04-25T02:17:00Z
6501,Fixed #26601 -- Improved middleware per DEP 0005.,"Rebased from https://github.com/django/django/pull/6371. A minimal viable patch for merge.

To be ticketed out for future enhancements:
- update `decorator_from_middleware` (if needed)
- provide a new documentation graphic for how middleware works (if needed, not quite sure what it would look like)

Unlike what the DEP suggest, I don't see a need to immediately deprecate `MiddlewareMixin`. I'd be fine considering a deprecation in Django 2.0 or so but I don't see a need to rush it? An immediate deprecation wouldn't allow writing middleware that uses it without having to silence warnings.'
",timgraham,None,2016-04-23T23:31:46Z,2016-05-17T11:52:55Z
6500,Refs #23386 -- Warned that F() expressions assigned to fields are reapplied on each model.save(),"https://code.djangoproject.com/ticket/23386
",tpaljor,None,2016-04-23T20:41:05Z,2016-06-28T20:27:20Z
6499,Fixed #22936 -- Obsoleted Field.get_prep_lookup()/get_db_prep_lookup(),"https://code.djangoproject.com/ticket/22936
",claudep,None,2016-04-23T19:39:35Z,2017-01-11T18:21:55Z
6498,Fixed #15667 -- Added template-based widget rendering.,"Updated from https://github.com/django/django/pull/4848.
https://code.djangoproject.com/ticket/15667
https://groups.google.com/d/topic/django-developers/TmHdj5SCGNk/discussion
",timgraham,None,2016-04-23T17:51:50Z,2016-12-27T23:24:25Z
6497,Fixing #26524 - Change foreign key id list_display reference to display only the id,,krisys,None,2016-04-23T17:43:09Z,2016-06-09T02:25:45Z
6496,Fixed #26533 -- Renamed Widget._format_value() to format_value().,"https://code.djangoproject.com/ticket/26533#ticket
",timgraham,None,2016-04-23T15:44:07Z,2016-04-23T17:15:46Z
6495,Fixed #26427 -- Ensured deleted setting doesn't appear in dir(settings),,claudep,None,2016-04-23T12:43:15Z,2016-04-23T14:02:17Z
6494,Fixed #21379 -- Added support for Unicode usernames,,claudep,None,2016-04-22T21:48:40Z,2016-05-16T17:03:04Z
6493,Refs #22936 -- Moved more of Field.get_db_prep_lookup() to lookups.,"Another increment bit of https://code.djangoproject.com/ticket/22936.
",timgraham,None,2016-04-22T18:13:02Z,2016-05-02T14:06:12Z
6492,Update README.rst,,michaelmota,None,2016-04-22T16:49:51Z,2017-08-16T00:59:45Z
6491,Fixed #26207 -- Replaced dynamic classes with non-data descriptors for deferred instance loading.,"Updated from https://github.com/django/django/pull/6118
https://code.djangoproject.com/ticket/26207
",timgraham,None,2016-04-22T16:10:28Z,2016-04-30T00:52:37Z
6490,Fixed #26320 -- Deprecated implicit OneToOnField parent_link.,"https://code.djangoproject.com/ticket/26320
",timgraham,None,2016-04-22T14:48:47Z,2016-04-22T16:59:41Z
6489,Refs #26033 -- Added password hasher support for Argon2 v1.3.,"The previous version of Argon2 uses encoded hashes of the form

```
$argon2d$m=8,t=1,p=1$<salt>$<data>
```

Surprisingly the new version of Argon2 adds its version into the
encoded hash as follows

```
$argon2d$v=19$m=8,t=1,p=1$<salt>$<data>
```

This commit lets Django handle both version properly.

https://code.djangoproject.com/ticket/26033
",bwesterb,None,2016-04-22T11:38:49Z,2016-04-26T01:27:33Z
6488,Updated my bio,,MarkusH,None,2016-04-22T08:49:06Z,2016-04-22T12:02:22Z
6487,[WIP] Fixed #17209 -- Added class-based views in contrib.auth.,"just tried to implement a older patch cleanly. need to know if this approach is the proper way right now. commented out older function based view for now as need to recheck if all the stuffs are converted properly. need to  know about deprecated current app parameter and other next moves. No docs yet as the code needs more works.

@claudep do you have some time to give feedback on the change direction?
",auvipy,None,2016-04-22T04:31:30Z,2016-05-07T20:41:30Z
6486,Fixed #26528 -- Allowed any iterable (e.g. tuple) as validators kwarg for form/model fields.,"https://code.djangoproject.com/ticket/26528
",loic,None,2016-04-21T16:33:35Z,2016-04-22T02:40:27Z
6485,Fixed #26429 -- Placed a timestamp into generated merge migration names,"  This sets a timestamp to the generated merge migration names, much in the same fashion as other migrations. This is to help reduce the possibility of a naming conflict (especially after squashing migrations).

  This is to fix the issues mentioned in [#26469](https://code.djangoproject.com/ticket/26429#comment:3), where the combination of merge migration names and squashing can cause a migration to end up never running due to a name conflict.
",rtpg,None,2016-04-21T12:57:06Z,2016-05-11T12:19:20Z
6484,Refs #26455 -- Documented new lookup and function in compatibility ta…,"…ble.

The newly added `isvalid` lookup, `IsValid` function and  `MakeValid` function were missing in the compatibility table in the db-api documentation.
",yellowcap,None,2016-04-21T08:29:01Z,2016-04-21T13:13:35Z
6483,Fixed #26534 -- Fixed boolean form fields has_changed() with hidden input.,"This is really fixing [#11303](https://code.djangoproject.com/ticket/11303) which was never truly fixed other than for a narrow use case. `has_changed` is still currently broken for any widget which doesn't convert the POST data for the field to `True`/`False`, even though `BooleanField` itself knows how to handle those cases when converting to a Python value.

Fix is simple, use `to_python` in the `has_changed` method to ensure that regardless of the widget if the Python value of the field is the same as the initial value it won't be marked as changed.
",dsanders11,None,2016-04-21T08:03:28Z,2016-04-24T19:06:30Z
6482,Fixed #26521 - CreateModel allows duplicate field names,"I did this as part of the sprint tonight at Django NYC cc/ @charettes 

https://code.djangoproject.com/ticket/26521
",jiaaro,None,2016-04-21T03:53:39Z,2016-04-27T16:44:32Z
6481,Fixed incorrect rendered widget in forms example.,"The form being rendered is defined here: 

https://github.com/django/django/blob/b040ac06ebba2348cece7390b88f746d2c91d07b/docs/topics/forms/index.txt#L410-L414
",jdufresne,None,2016-04-21T00:15:19Z,2016-04-21T01:08:00Z
6480,Fixed #26520 -- Fixed a regression where SessionBase.pop() didn't return a KeyError.,"Description at https://code.djangoproject.com/ticket/26520#ticket and initial discussion at https://github.com/django/django/pull/4480
",tuky,None,2016-04-20T08:44:38Z,2016-04-20T17:12:05Z
6479,Fixed #25966 -- Relaxed model import policy regarding apps ordering,,claudep,None,2016-04-20T08:11:30Z,2016-07-16T08:11:06Z
6478,Fixed #27149 -- Added Subquery and Exists database expressions.,"Sort-of related to:

  https://code.djangoproject.com/ticket/16603
  https://code.djangoproject.com/ticket/25789

but this is dealing with .annotate(), rather than .filter() methods
on a queryset.

https://code.djangoproject.com/ticket/27149
",schinckel,None,2016-04-20T07:00:35Z,2017-05-12T11:39:25Z
6477,Refs #16508 -- Made Model.__init__ aware of virtual fields.,"Making Model.**init** recognize keyword arguments for virtual fields means
it is no longer necessary for GenericForeignKey (and any other virtual
fields) to intercept them using the pre_init signal.

This makes two tests for `GenericRelatedObjectManager.add` fail, see [the ticket](https://code.djangoproject.com/ticket/16508#comment:15) for discussion.
",koniiiik,None,2016-04-19T20:45:10Z,2016-05-03T13:29:39Z
6476,Fixed #26512 -- Added tests for SpatialRefSysMixin.get_units(),,niconoe,None,2016-04-19T09:40:54Z,2016-04-19T15:26:39Z
6475,Fixed #26516 -- Added minlength attribute when forms.CharField.min_length is set.,"https://code.djangoproject.com/ticket/26516
",jdufresne,None,2016-04-19T00:59:02Z,2016-04-19T12:55:21Z
6474,Fixed grammar,"Changed 'use' to 'us'
",eltronix,None,2016-04-18T20:07:55Z,2016-04-19T00:25:54Z
6473,Fixed #26515 -- Fixed Query.trim_joins() for nested ForeignObjects.,"fixed Query.trim_joins to make sure the order in the targets is consistent
on each step of the optimisation of the join.
",ornoone,None,2016-04-18T16:16:43Z,2016-05-19T14:03:57Z
6472,Fixed problems with unicode,"I was investigating exception we were getting after bumping Django to newest stable version.

And we found issue with unicode somewhere down in uwsgi.
After further investigation, we found that problem lies with environment variables created by Django.

Stacktrace of error:

```
Internal Server Error

Traceback (most recent call last):
  File ""/Users/bim/Developer/Inventorum/site/eggs/waitress-0.9.0-py2.7.egg/waitress/channel.py"", line 338, in service
    task.service()
  File ""/Users/bim/Developer/Inventorum/site/eggs/waitress-0.9.0-py2.7.egg/waitress/task.py"", line 169, in service
    self.execute()
  File ""/Users/bim/Developer/Inventorum/site/eggs/waitress-0.9.0-py2.7.egg/waitress/task.py"", line 399, in execute
    app_iter = self.channel.server.application(env, start_response)
  File ""/Users/bim/Developer/Inventorum/site/eggs/Paste-2.0.3-py2.7.egg/paste/urlmap.py"", line 216, in __call__
    return app(environ, start_response)
  File ""/Users/bim/Developer/Inventorum/site/eggs/fanstatic-1.0a7-py2.7.egg/fanstatic/publisher.py"", line 224, in __call__
    return self.app(environ, start_response)
  File ""/Users/bim/Developer/Inventorum/site/eggs/fanstatic-1.0a7-py2.7.egg/fanstatic/injector.py"", line 86, in __call__
    return response(environ, start_response)
  File ""/Users/bim/Developer/Inventorum/site/eggs/WebOb-1.6.0-py2.7.egg/webob/response.py"", line 1037, in __call__
    start_response(self.status, headerlist)
  File ""/Users/bim/Developer/Inventorum/site/eggs/waitress-0.9.0-py2.7.egg/waitress/task.py"", line 375, in start_response
    'Header value %r is not a string in %r' % (v, (k, v))
AssertionError: Header value u'http://127.0.0.1:5012/de/pay/select' is not a string in ('Location', u'http://127.0.0.1:5012/de/pay/select')

```

First fix was posted on https://github.com/Pylons/waitress/pull/125 but people maintaining project pointed out that headers should be `str` due to PEP rules. 

I hope this is proper way to fix it, if not please give me few hints. 
",bimusiek,None,2016-04-18T14:11:34Z,2016-04-27T14:37:59Z
6471,Fixed typo in docs/ref/template-response.txt,,eltronix,None,2016-04-18T08:40:01Z,2016-04-18T13:49:59Z
6470,Fixed #26475 -- Made migration autodetector aware of partials,"https://code.djangoproject.com/ticket/26475
",schinckel,None,2016-04-18T01:57:27Z,2016-04-19T14:17:47Z
6469,Fixed #22561 -- Prevented email message line lengths from exceeding the RFC5322 limit.,,claudep,None,2016-04-17T19:08:05Z,2016-04-19T07:36:18Z
6468,Fixed #21523 - Added support for mock dates in date/time fields,"ticket [#21523](https://code.djangoproject.com/ticket/21523)
",akki,None,2016-04-16T20:53:44Z,2016-06-30T04:32:10Z
6467,Fixed #26509 -- Deprecated the contrib.gis.utils.precision_wkt() function.,"I have included a test for precision_wkt() since the code was modified and we did not have any existing tests to make sure that nothing was broken with this deprecation change.
https://code.djangoproject.com/ticket/26509
",krisys,None,2016-04-16T18:45:57Z,2016-04-16T20:47:41Z
6466,Fixed #25951 -- Trimmed default representation of GEOSGeometry,"Thanks Sergey Fedoseev for the report.
",claudep,None,2016-04-16T18:14:04Z,2016-04-17T13:32:09Z
6465,Merge pull request #1 from django/master,"updating local
",oneTimePad,None,2016-04-16T18:12:57Z,2016-04-16T18:13:10Z
6464,Merge pull request #1 from django/master,"updating local
",oneTimePad,None,2016-04-16T18:11:16Z,2016-04-16T18:11:36Z
6463,Update windows doc for completeness,#NAME?,glasnt,None,2016-04-16T10:17:16Z,2016-04-16T11:09:26Z
6462,Fixed #26510 -- Allowed dim/trim/precision as WKTWriter init arguments,,claudep,None,2016-04-16T09:08:41Z,2016-04-16T17:51:37Z
6461,Removed some dead contrib.gis code.,,timgraham,None,2016-04-16T00:48:57Z,2016-04-16T19:13:45Z
6460,Fixed #20189 -- Allowed customizing staticfiles ignored_patterns list,"https://code.djangoproject.com/ticket/20189
",claudep,None,2016-04-15T19:08:09Z,2016-04-22T07:57:00Z
6459,Fixed #26508 -- Clarified docs for various FieldFile methods.,"- clarify that FieldFile.open does not return a file descriptor like the standard Python `open()` method
- include a louder warning that the `save()` and `delete()` methods also save the associated model object

See: https://code.djangoproject.com/ticket/26508#ticket
",tobiasmcnulty,None,2016-04-15T16:25:54Z,2016-04-27T14:38:28Z
6458,Converted property syntax in django.core.paginator,,claudep,None,2016-04-15T14:55:46Z,2016-04-15T15:17:58Z
6457,Fixed #22669 bulk_create with empty model fields fails on oracle,,mnach,None,2016-04-15T12:44:10Z,2016-04-16T14:40:16Z
6456,Allow to pass schema-less URL to 'static' pattern generator,,tsouvarev,None,2016-04-15T12:42:38Z,2016-04-22T14:11:57Z
6455,JsonpResponse subclass of HttpResponse helps easily create JSONP-encoded responses.,"Django 1.7  realease JsonResponse subclass of HttpResponse helps easily create JSON-encoded responses.

As discussed in https://code.djangoproject.com/ticket/17942#comment:6

```
Trying to support JSONP callbacks would require to somehow allow Cross-origin resource sharing. I would say it's not needed for most use cases.
```

JsonpResponse isn't needed for most use cases. But is needed for some use cases.
",Brightcells,None,2016-04-15T08:44:34Z,2016-04-19T14:56:11Z
6454,Removed various unused/untested code in django.db.models.fields.,,timgraham,None,2016-04-15T01:22:32Z,2016-04-26T05:42:39Z
6453,Fixed #26504 -- Prevented warning logging for i18n redirect.,"I've noticed that I've been getting warnings logged for things like:

```
Not Found: /
```

This results from accessing a path of ""/"" which is getting redirected by LocaleMiddleware to ""/en/"". So, in fact there is never any actual ""page not found"" happening here, but the code is logging based on a temporary 404 exception that the LocaleMiddleware will touch up into a redirect response.

I admit that I'm a little OCD when it comes to my log files, and I prefer them to be warning-free when nothing wrong is happening.

This commit series first adds 4 tests to verify correct logging (or lack of logging) for ""page found""/""page not found"" both with and without i18n_patterns. One of the 4 tests will fail currently, (demonstrating the bug).

The final commit in the series moves a call to logger.warning() so that all 4 tests pass.

https://code.djangoproject.com/ticket/26504
",cworth-gh,None,2016-04-14T15:37:52Z,2016-04-21T13:04:04Z
6452,Refs #26502 -- Added choices to Form.__getitem__() KeyError message.,"https://code.djangoproject.com/ticket/26502
",timgraham,None,2016-04-14T13:20:55Z,2016-04-15T11:54:39Z
6451,Fixed #26277 -- Added support for null values in ChoicesFieldListFilter.,"https://code.djangoproject.com/ticket/26277
",vincepandolfo,None,2016-04-13T19:03:12Z,2016-05-12T16:41:06Z
6450,Fixed #26498 -- Prevented data loss of microseconds on MySQL and SQLite,"Thanks adamchainz for reporting this issue.

https://code.djangoproject.com/ticket/26498
",lwiecek,None,2016-04-13T16:34:27Z,2016-04-18T13:50:10Z
6449,Fixed #26493 Documented how Django sends built-in signals.,"Improved documentation of built-in signals regarding the way they are sent.
",filias,None,2016-04-13T08:08:21Z,2016-04-13T11:52:50Z
6448,Fixed #26495 -- Added name arg to Storage.save()'s File wrapping.,"https://code.djangoproject.com/ticket/26495
",m-novikov,None,2016-04-13T05:47:06Z,2016-04-21T14:44:29Z
6447,Fixed #21231 -- Enforced a max size for GET/POST values read into memory.,"Updated from https://github.com/django/django/pull/3852.
https://code.djangoproject.com/ticket/21231
",timgraham,None,2016-04-13T00:49:52Z,2016-05-12T15:06:02Z
6446,Removed unused view and url from shortcuts tests,"The test that used these was removed in 9114fe8ada
",alasdairnicol,None,2016-04-12T09:15:31Z,2016-04-12T11:54:34Z
6445,"Fixed #26492 -- Prevent ""maximum recursion depth exceeded"" error when","running migrate command with system checks enabled.

Current tests didn't catch this because call_command() defaults
to 'skip_checks = True'.

https://code.djangoproject.com/ticket/26492
",berkerpeksag,None,2016-04-12T07:53:34Z,2016-04-12T13:04:47Z
6444,Refs #22936 -- Moved IntegerField.get_prep_lookup() logic to lookups.,"I think this is a portion of the idea presented in [the ticket](https://code.djangoproject.com/ticket/22936).
",timgraham,None,2016-04-12T01:48:18Z,2016-04-12T14:14:41Z
6443,Fixed #26487 -- Used EHLO after smtplib.SMTP_SSL too.,"After smtplib.SMTP_SSL EHLO should be used.

Ticket: https://code.djangoproject.com/ticket/26487
",kchmiela,None,2016-04-10T23:41:36Z,2016-04-16T21:36:07Z
6442,if-tag: Add tests for a substring being within a string,"This may work 'by accident', but should be tested as it has worked or a
long time.
",steveire,None,2016-04-10T21:55:29Z,2016-04-12T08:23:04Z
6441,Fixed #26486 -- Fixed a select_related() + defer() MTI edge case.,"https://code.djangoproject.com/ticket/26486
",timgraham,None,2016-04-10T19:31:09Z,2016-04-13T14:50:01Z
6440,Refs #17635 -- Tested the Cast function in a geography to geometry context,,claudep,None,2016-04-10T17:57:37Z,2016-04-12T19:15:45Z
6439,Fixed #26485 -- Fixed small typo,"Fixed small type in docs/intro/tutorial07.
",denisra,None,2016-04-10T02:29:53Z,2016-04-10T18:19:55Z
6438,Refs #26484 -- Avoided masking useful exceptions in manage.py's ImportError.,"https://code.djangoproject.com/ticket/26484#ticket
",timgraham,None,2016-04-09T17:25:58Z,2016-04-13T18:41:23Z
6437,Split form_fields tests into different files.,"This pull request also changes all `self.assertEqual(foo, None)` instances to `self.assertIsNone(foo)`. I will open separate pull requests for remaining fields to make code review easier.
",berkerpeksag,None,2016-04-09T17:19:56Z,2016-04-11T16:50:43Z
6436,Fixed #26479 -- Added 'is not' operator to the if tag,,alasdairnicol,None,2016-04-09T12:47:50Z,2016-04-09T17:01:57Z
6435,Fixed #26145 -- Made debug context processor return queries for all databases.,,MounirMesselmeni,None,2016-04-09T12:12:37Z,2016-04-09T15:48:50Z
6434,Fixed #26482 pretty-print json in the form field,"tests become a bit awkward, open to suggestions

replaces #6433 with a ticket based branch name
",davidszotten,None,2016-04-08T14:58:56Z,2016-04-08T15:50:18Z
6433,pretty-print json in the form field,"for #26482

tests become a bit awkward, open to suggestions
",davidszotten,None,2016-04-08T14:51:56Z,2016-04-10T19:26:26Z
6432,Corrected link to base_site.html,"Changed the stated position of the base_site.html from django/contrib/admin/templates to django/contrib/admin/templates/admin
",Horstage,None,2016-04-08T09:21:07Z,2016-04-08T10:57:14Z
6431,Fixed E128 flake8 warnings.,,timgraham,None,2016-04-08T00:06:49Z,2016-04-08T14:40:48Z
6430,Rename if tag tests,,steveire,None,2016-04-07T22:21:52Z,2016-04-10T21:46:54Z
6429,Remove comment about single '=' warning for template if-tag,"The functionality was removed in commit 2ccfac1a (Refs #23913 -- Removed
support for a single equals sign in {% if %} tag., 2015-09-05).
",steveire,None,2016-04-07T22:00:50Z,2016-04-08T00:09:37Z
6428,Fixed #26005 -- Convert URIs to IRIs according to RFC,"This fixes the broken implementation of 10b17a22bec. As that change touched the wsgi infrastructure someone with understanding of that should review this change.
The original change introduced its `uri_to_iri` function in two places: https://github.com/django/django/commit/10b17a22bec2eaf44c3315614aea87c127caee46#diff-f6d1c75ec606389da5af6558bf57f171R129 and https://github.com/django/django/commit/10b17a22bec2eaf44c3315614aea87c127caee46#diff-97160f50594424a40f2621d5a3c581ccL273.

In the second case the original author clearly didn't want `uri_to_iri` but a fancier `unquote`, so I replaced it with that. In the second case I am not so sure.

Also note that this is in a certain way a backwards incompatible change. Code that assumed that `uri_to_iri` is a fancier `unquote` will break. The new code will also not do what the documentation said before – which is why I had to fix it. But the previous documentation was also self-contradicting, as explained in the trac ticket.
",Chronial,None,2016-04-07T19:03:47Z,2017-02-09T16:05:49Z
6427,Fixed #26085 -- Fixed contenttypes shortcut() view crash with a null fk to Site.,"fixed test as suggested in the comments of https://github.com/django/django/pull/5986
",daniponi,None,2016-04-07T06:38:19Z,2016-04-16T21:34:36Z
6426,Fixed #26005 -- Convert URIs to IRIs according to RFC,"This fixes #26005. The new code is based on the [`unquote` implementation in the standartlib](https://github.com/python/cpython/blob/436064bfe71ffd782dc5b942f65b80f7f0d7d2cd/Lib/urllib/parse.py#L554).
",Chronial,None,2016-04-07T05:49:59Z,2016-04-07T13:22:31Z
6425,Refs #26464 -- Added a link to OWASP Top 10 in security topic guide.,"as discussed at https://groups.google.com/d/topic/django-developers/_Z6ZufcOmps/discussion
",timgraham,None,2016-04-06T17:04:04Z,2016-04-09T12:10:15Z
6424,Refs #24016 -- Fixed wording in migrations howto,"Thanks Tim for the review
",rixx,None,2016-04-06T15:08:55Z,2016-04-06T16:17:55Z
6423,Fixed #26466 -- Added URL decoding to i18n set_language view,"Added decoding for URLs taken from HTTP_REFERER in set_language view,
by using the Python's urllib.parse.unquote (through Django's six). Added a regression test for (#26466).
",miikkas,None,2016-04-06T14:29:47Z,2016-04-09T14:59:03Z
6422,Fixed #14131 -- Extended info about Pagination and large QuerySets,"Added some more background information about what database queries are run to the information about slow pagination. 

This extends what I added in https://github.com/django/django/pull/6378

Erik and I didn't see your comments before, @timgraham, thanks for the tip.
",winsmith,None,2016-04-06T11:59:47Z,2016-04-06T15:07:47Z
6421,Fixed #26470 -- Converted auth permission validation to system checks.,,charettes,None,2016-04-06T05:14:02Z,2016-04-07T03:04:31Z
6420,Fixed #26401 -- Allowed use of auth logic without auth in INSTALLED_APPS.,"https://code.djangoproject.com/ticket/26401
",jdufresne,None,2016-04-06T01:18:44Z,2016-06-11T19:07:51Z
6419,Channels,"Adds Channels into Django as `django.channels`, including tests and documentation ported from the standalone `channels` repository.
",andrewgodwin,None,2016-04-06T00:01:49Z,2016-05-10T16:40:36Z
6418,Fixed #26448 -- Improved the docs for running tests with different da…,"…tabase backends
",krisys,None,2016-04-05T19:58:59Z,2016-04-06T15:52:37Z
6417,Fixed link in documentation/tutorial01.,"The tutorial was made for Python 3. The current link points to Python 2's documentation.
",Kayvlim,None,2016-04-05T16:18:03Z,2016-04-08T15:38:05Z
6416,New pre_handler() method for the View class,"Sometimes we need to override the `dispatch()` method if we want to share some behaviour between different handler methods in a Class-Based View, being quite error-prone.

This patch adds a new method to achieve the same without having to override `dispatch()`.

[django-developers discussion](https://groups.google.com/d/topic/django-developers/4PW7o5ipi7k/discussion)
",pablorecio,None,2016-04-05T08:02:41Z,2016-04-06T12:37:33Z
6415,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,"On Python 2 `warnings.warn()` expects a `message` that can be coerced to a `str`.

Fixes [26462](https://code.djangoproject.com/ticket/26462)
",suligap,None,2016-04-04T19:34:09Z,2016-04-05T15:24:29Z
6414,Fixed #26460 -- Issued a single warning for invalid cache key,"In `BaseCache.validate_key()` if a `key` contains more than one
invalid character do not issue extra warnings.

Fixes [26460](https://code.djangoproject.com/ticket/26460)
",suligap,None,2016-04-04T18:33:22Z,2016-04-04T19:21:52Z
6413,Fixed #26458 -- Based Avg's default output_field resolution on its source field type.,https://code.djangoproject.com/ticket/26458,charettes,None,2016-04-04T16:47:34Z,2017-12-13T12:09:28Z
6412,Fixed #26455 -- Allowed filtering and repairing invalid geometries.,"The IsValid and MakeValid database functions were added to the GIS module, and a isvalid lookup was added to filter geometries by validity.
",yellowcap,None,2016-04-04T11:30:10Z,2016-04-09T13:24:40Z
6411,Refs #24227 -- Partially reverted replaced M2M isinstance checks by field.many_to_many.,"Partially reverts 983c158da to fix taggit
",collinanderson,None,2016-04-04T02:31:34Z,2016-05-17T22:44:03Z
6410,"Fixed #26459 -- Modified DecimalField rounding to cast to str, then use ROUND_HALF_UP.","DecimalField is often used for money, for instance, django-paypal.
I understand that this field normally must receive Decimal values, but here weird behavior in case of float values which tried to be handled anyway.
If decimal_places = 2
float 2.215 will be saved as 2.21 (!)
float 2.225 will be saved as 2.22 (!)
But if float value first convert to str:
float 2.215 will be saved as 2.22 (ok)
float 2.225 will be saved as 2.22 (!)
It's because of default decimal rounding ROUND_HALF_EVEN.
As I understand build-in round() use rounding similar to ROUND_HALF_UP.

I tried first cast float to str, then use ROUND_HALF_UP, so now:
float 2.215 will be saved as 2.22 (ok)
float 2.225 will be saved as 2.23 (ok)

```
class Invoice(models.Model):
    # same as django-paypal use
    mc_gross = models.DecimalField(max_digits=64, decimal_places=2, default=0)

invoice.mc_gross = 2.215 # float
invoice.save()
```

In DB will be value 2.21 (or if 2.225 -> 2.22)

https://code.djangoproject.com/ticket/26459
",yasondinalt,None,2016-04-04T01:48:00Z,2016-04-05T15:57:55Z
6409,Fixed W503 flake8 warnings.,,timgraham,None,2016-04-04T00:52:25Z,2016-04-04T21:16:15Z
6408,Refs #21608 -- Fixed wrong cache key in cache session backend.,"Bug introduced in commit https://github.com/django/django/commit/3389c5ea229884a1943873fe7e7ffc2800cefc22
",jdufresne,None,2016-04-03T22:11:40Z,2016-04-04T11:47:12Z
6407,Fixed #26281 -- Added a helpful error message for an invalid format specifier to dateformat.format().,"Added function for checking if time format specifiers are used with date object. If so function returns TypeError with a better error message. 
",benxy,None,2016-04-03T17:49:01Z,2016-04-21T00:21:36Z
6406,Fixed #25856 -- JS strftime shim could (sometimes) support %B,"Fixed [#25856](https://code.djangoproject.com/ticket/25856) -- JS strftime shim could (sometimes) support %B

Added `%B` support to `Date.strftime`. This way the django admin will display the correct localized month name if `%B` is used in the date format.
",akoskaaa,None,2016-04-03T17:00:34Z,2016-04-06T14:42:53Z
6405,Fixed #26449 - Edited AdminSplitDateTime docstring for sample usage,"Solution for https://code.djangoproject.com/ticket/26449 as agreed with tim graham on IRC
",yakky,None,2016-04-03T15:33:52Z,2016-04-05T17:51:43Z
6404,Fixed #26341 -- Fixed makemessages breaking location comments for HTML files,"See https://code.djangoproject.com/ticket/26341 for more details.
",veranika-sab,None,2016-04-03T15:32:12Z,2016-04-28T19:39:58Z
6403,"Fixed #16327 -- Redirect ""Save as new"" to change view for the new object","https://code.djangoproject.com/ticket/16327
",alimony,None,2016-04-03T14:50:50Z,2016-04-20T15:37:39Z
6402,Refs #26112 -- Made Distance GIS function always return a float.,"This complements a fix to failed Oracle tests about the Area function.
While at it, added a test for the Distance function, which wasn't tested.
While dealing with distances, added the Furlong unit, which is essential
to velocity calculations.

This was recommended in a comment by @claudep at #6041 
",shaib,None,2016-04-03T14:47:48Z,2016-06-06T13:17:32Z
6401,Fixed #26052 Response content of HEAD requests will no longer be removed,"This is my attempt to fix https://code.djangoproject.com/ticket/26052 during the djangocon europe sprints. :saxophone: 

Yay removing code.
",ArcTanSusan,None,2016-04-03T14:40:56Z,2016-04-25T01:21:14Z
6400,Fixed #26452 -- Loaded middleware on server start rather than on first request.,"https://code.djangoproject.com/ticket/26452
",evansd,None,2016-04-03T13:48:32Z,2016-04-04T14:13:16Z
6399,Fixed #25905 -- Prevented leading slashes in urljoin() calls,"Leading slashes in the second urljoin argument will return exactly that
argument, breaking FileSystemStorage.url behavior if called with a
parameter with leading slashes.
Also added test cases for null bytes and None. Thanks to Markus for
help and review.
",rixx,None,2016-04-03T13:39:49Z,2016-04-03T15:21:56Z
6398,Fixed #26075 Added clearer wording on makemigrations command,"Fixed verbiage when using the makemigrations command to make less
misleading.
",ArcTanSusan,None,2016-04-03T13:37:09Z,2016-04-03T15:14:23Z
6397,Fixed #26101 -- Allowed introspection of base_field.model in RangeField,"Used the same test and fix as in ticket #25867.
This required initializing base_field in `RangeField.__init__`,
instead of when setting the attribute on the model.
",aschn,None,2016-04-03T11:12:38Z,2016-04-03T14:33:38Z
6396,"Fixed #26450 -- Corrected ""Save as new"" button label in docs.","This fixes that the documentation for the `save_as` option on `ModelAdmin` says the button is labeled ""Save as"" while in fact it is labeled ""Save as new"".
",alimony,None,2016-04-03T11:05:14Z,2016-04-04T12:10:27Z
6395,Fixed #26355 -- Added API to register different expressions for operator/field combo.,"The idea is to register expression class in `CombinedExpression` lookup
dict so that it can construct i.e. a `Func` when combining two sides with
Python's `+` operator.
",mrzechonek,None,2016-04-03T11:03:25Z,2020-07-22T16:28:56Z
6394,Correct number of extra arguments in docs for FilePathField.,,bellisk,None,2016-04-03T10:25:11Z,2016-04-03T10:38:39Z
6393,Fixed #26447 -- deprecate USE_ETAGS setting in favor of ConditionalGetMiddleware,"not sure about
- if I need to add more docs and in which places
- if I need to cover more things in the tests?
",syphar,None,2016-04-03T10:17:29Z,2016-09-16T22:48:02Z
6392,Fixed #26002 - Custom search operator example in get_search_results,"Improved example and documentation in get_search_results.
",bbenko,None,2016-04-03T10:12:33Z,2016-06-28T17:30:40Z
6391,Fixed #26201 -- Documented the consequences of rotating the CSRF token on login.,"https://code.djangoproject.com/ticket/26201
",vehrlich,None,2016-04-03T10:00:37Z,2016-04-05T15:03:56Z
6390,Fixed #10107 -- Allowed mark_safe() to be used as decorator,"I cherry-picked old patch written by matehat 7 yrs ago. All unit tests pass.

Original ticket: https://code.djangoproject.com/ticket/10107

This is part of the djangocon europe 2016 sprints. :saxophone: As always, feedback is welcome and I usually respond within 24 hours.
",ArcTanSusan,None,2016-04-03T09:48:38Z,2016-06-03T12:02:42Z
6389,Fixed #25420 -- Documented bash completion exit code behavior.,"The code mentioned in [#25420](https://code.djangoproject.com/ticket/25420) is only called for bash completion. When
using bash completion the exit code isn't passed to the user, so the
value returned by Django doesn't really matter. Changed it from 1 to 0
to have it more clear that it's desired behavior and documented it.
If you're interesting in the background of this topic check [#25420](https://code.djangoproject.com/ticket/25420).
",Dunedan,None,2016-04-03T09:30:36Z,2016-04-06T17:34:13Z
6388,Fixed #26424 -- Allowed bypassing schema validation of URLValidator.,"https://code.djangoproject.com/ticket/26424
",burhan,None,2016-04-03T08:57:20Z,2016-09-28T18:28:52Z
6387,Fixed #26446 -- Additional tests to cover methods in the RequestSite …,,piersstorey,None,2016-04-03T08:47:41Z,2016-04-03T11:08:43Z
6386,Fixed #26403 -- Updated invalid_block_tag function for proper message,"Hello!

https://code.djangoproject.com/ticket/26403

My very little first try for Django, thanks for awesome project!
",amureki,None,2016-04-03T08:07:42Z,2016-04-09T13:40:56Z
6385,Fixed #14370 -- Added select2 widget for related object fields in admin.,"Adds jQuery Select2 version 4 to support async select inputs
including a search feature.

**I split the PR in two commits, one is vendoring select2, one contains my code.**

### Links & Discussions
* [djangoproject#14370](https://code.djangoproject.com/ticket/14370)
* https://groups.google.com/forum/#!topic/django-developers/tCNWnLP8jzM
* https://groups.google.com/forum/#!topic/django-developers/Ip63Xqw01IA/discussion
* https://groups.google.com/forum/#!topic/django-developers/jGgZngTq3Gw/discussion

### Changes:
- ~~jQuery noConflict is set to false, jQuery itself does not get removed form global~~
- ~~the new select2 widget is automatically used if the related object
  has a registered admin and defines search fields~~
- only str representation is supported at this point
- the search feature uses the same field as the model admin
### Todo:
- [x] ~~Possible deprecation of raw_id field?~~
- [x] Release note. (Which release?)
- [x] Selenium integration tests
- [x] widget tests
- [x] pagingnator and page tests
- [x] view tests
- [x] admin_site integration tests
- [x] add `MODEL_change` permission to json view
- [x] [system checks](https://docs.djangoproject.com/en/1.9/ref/checks/#admin)
",codingjoe,None,2016-04-02T23:27:18Z,2018-06-19T13:08:29Z
6384,Fixed #26290 -- Added RuntimeWarning when paginating unordered QuerySet.,"https://code.djangoproject.com/ticket/26290
",EmadMokhtar,None,2016-04-02T15:28:01Z,2016-06-07T09:58:54Z
6383,Fixed #26443 - Corrected timezone.now in questioner prompt,"Addresses https://code.djangoproject.com/ticket/26443
",yakky,None,2016-04-02T14:59:26Z,2016-04-02T23:34:16Z
6382,Fixed #24016 -- Added documentation about third-party app data migrations,"There was confusion about how to migrate data from third-party
applications when you are going to uninstall the application later on,
without breaking your migration dependencies.
Thanks to Markus and Marten for help and review.
",rixx,None,2016-04-02T14:50:17Z,2016-04-03T15:20:35Z
6381,Fixed #24858 -- Added custom _get_FIELD_display to ArrayField,"To support `choices` on the contrib.postgres ArrayField, added a custom `get_FIELD_display` through `contribute_to_class`.

https://code.djangoproject.com/ticket/24858
",asser,None,2016-04-02T14:39:49Z,2016-05-07T21:07:28Z
6380,Fixed #25699 -- Allowed using the test client if 'django.contrib.sessions' isn't in INSTALLED_APPS.,"Follows up https://github.com/django/django/pull/5586.

Now it is possible not only to use test client with custom session apps, but also to use it when `django.contrib.sessions` is not in `INSTALLED_APPS` (this covers an existing use-case for those wishing to avoid having an empty sessions table while using non-DB backends).

I've considered suggestion from @javins, and then discussed options with @apollo13 and @freakboy3742.

It seems that the `INSTALLED_APPS` check can be safely removed. Its origin has been narrowed down to commits https://github.com/django/django/commit/9ba27afce09cb5f19f429844bd699f5042eb2108 and https://github.com/django/django/commit/36b164d838c3de168defe9f1ebc02ea1abc790be.

Also, there's nothing that suggests that an empty dict had been anything but a convenient default value.
",sergeykolosov,None,2016-04-02T14:35:17Z,2016-04-04T11:58:46Z
6379,Fixed the example how to use PEP 257 docstrings to be compatible with PEP 257.,"The example showed a single line docstring in three distinct lines instead of
one. This commit changed that, to be an actual multi-line docstring.
",Dunedan,None,2016-04-02T14:19:14Z,2016-04-02T17:00:25Z
6378,Fixed #14131 -- Docs note about Pagination and large Querysets,"Added a small note to the Pagination documentation that informs about the dangers of using very large Querysets as described by mlissner.

I refrained from using the warning tag because I don't feel this is too critical. I also didn't specify a number for ""unusually"" high, since both ""high"" number and ""slow"" is very subjective.
",winsmith,None,2016-04-02T13:48:52Z,2016-04-02T14:19:15Z
6377,Fixed #25986 -- Fixed crash sending email with non-ASCII in local part of the address.,"On Python 3, sending e-mails failed for e-mail addresses containing
unicode characters due to the usage of the legacy python
email.utils.formataddr function. This has been fixed by using the
proper Address object if it's available (available with Python 3).
",sergei-maertens,None,2016-04-02T13:18:07Z,2016-05-06T18:34:51Z
6376,Fixed #25847 - Make User.is_(anonymous|authenticated) properties,"Refactored User.is_anonymous and User.is_authenticated to make them
read-only properties instead of methods. This avoids making mistakes by
accidentally checking:

```
request.user.is_authenticated
```

instead of:

```
request.user.is_authenticated()
```

In order to maintain backwards compatibility, the properties' value is
a ""callable boolean"" as suggested by Aymeric Augustin: it behaves like
a boolean in a boolean context, but is also a callable.
",jlaine,None,2016-04-02T12:54:50Z,2016-04-09T18:55:38Z
6375,Fixed #26440 -- Added system checks to verify urlpatterns contains valid objects.,"https://code.djangoproject.com/ticket/26440
1. Adding new tests for ""fake"" objects in URLs
2. Adding new tests for case where user forgets to type `url`, and ends up with a tuple `(r'', foo, name=df)`
3. Added new warnings.
",burhan,None,2016-04-02T12:41:32Z,2016-05-01T22:04:02Z
6374,"Refs #26384, #24995 -- Avoided a module-level MySQL query in the schema tests.",,koniiiik,None,2016-04-02T12:08:37Z,2016-04-02T12:17:40Z
6373,Fixed #26037 -- Documented precedence of USE_X_FORWARDED_HOST/PORT settings.,,arnaudlimbourg,None,2016-04-02T11:21:39Z,2016-04-07T14:10:27Z
6372,Fixed #22268 -- Documented values_list() behavior for multivalued relations.,"Reworded #5976 with a more detailed explanation and two examples for both direct and reverse relations
",yakky,None,2016-04-02T10:41:43Z,2016-04-02T11:23:56Z
6371,[WIP] Middleware implementation as per DEP0005,"https://github.com/django/deps/blob/master/draft/0005-improved-middleware.rst
- [x] conversion mixin
- [x] handler updates
- [ ] deprecation path
- [ ] tests for handler updates
- [ ] add warning in checks framework if `MIDDLEWARE_CLASSES` and `MIDDLEWARE` are both set
- [ ] update `decorator_from_middleware`
- [ ] convert `SessionMiddleware`
- [ ] convert `AuthenticationMiddleware`
- [ ] convert `XViewMiddleware`
- [ ] convert `CommonMiddleware`
- [ ] convert `BrokenLinkEmailsMiddleware`
- [ ] convert `CsrfViewMiddleware`
- [ ] convert `SecurityMiddleware`
- [ ] convert `MessageMiddleware`
- [ ] convert `XFrameOptionsMiddleware`
- [ ] convert `RemoteUserMiddleware` and `PersistentRemoteUserMiddleware`
- [ ] convert `FlatpageFallbackMiddleware`
- [ ] convert `RedirectFallbackMiddleware`
- [ ] convert `ConditionalGetMiddleware`
- [ ] convert `CurrentSiteMiddleware`
- [ ] convert `UpdateCacheMiddleware`, `FetchFromCacheMiddleware`, and `CacheMiddleware`
- [ ] convert `LocaleMiddleware`
- [ ] convert `GZipMiddleware`
- [x] documentation
- [x] document that new-style middleware sees only the changes made by middleware upstream from it, and is skipped entirely if a downstream middleware short-circuits. whereas previously `process_response` would see all responses, even those returned from `process_request` or `process_exception` of other middleware.
- [x] ~~document that middleware which catches known exception types (e.g. 404 or 403) and converts them to responses, will bypass the usual exception handler systems~~ Provide a way for middlewares to transform the standard exceptions (e.g. 404 or 403) to the usual responses (basically this should already work by inheriting `ExceptionMiddleware`)
- [x] document that middleware which wants to do something to all (e.g.) 404 responses needs to both catch `Http404` and look for regular 404 responses - or put `ExceptionMiddleware` somewhere into the chain :p 

Old Pull requests:
https://github.com/django/django/pull/5949
https://github.com/django/django/pull/5591
",apollo13,None,2016-04-02T09:34:43Z,2016-05-07T15:18:39Z
6370,Cleaned up OperationTests,,MarkusH,None,2016-04-02T09:19:19Z,2016-04-02T23:51:54Z
6369,Fixed #26441 -- Added model Field.db_check() method.,"Working on a separate patch I had to get the constraints w/o triggering getting the field type.
",MarkusH,None,2016-04-02T08:44:23Z,2016-04-03T08:24:55Z
6368,Fixed #26369 -- configurable formfield_defaults,"This is just a WIP because no decision has been taken yet about [#26369](https://code.djangoproject.com/ticket/26369). I'll finish up the work here at django sprint if we have the chance to talk about it and decide whether we do it this way or another way.

Thanks for your time !
",jpic,None,2016-04-02T08:35:03Z,2016-04-04T06:54:02Z
6367,Made MakeMigrationsTests call proper parent methods,,Uran198,None,2016-04-02T05:25:29Z,2016-04-02T08:11:27Z
6366,Allow POST request to support JSON as the content type,,raingsei,None,2016-04-01T13:19:27Z,2016-04-01T13:52:51Z
6365,Fixed #26428 -- Added support for relative path redirects in assertRedirects(),"https://code.djangoproject.com/ticket/26428
",timgraham,None,2016-04-01T13:00:09Z,2016-04-02T14:35:33Z
6364,reduce use of django template variables in GIS,,graingert,None,2016-03-31T22:19:11Z,2016-06-06T13:18:54Z
6363,save younes readme file,,khanbaba,None,2016-03-31T10:57:05Z,2016-03-31T11:54:06Z
6362,Fixed #26432 -- Fixed size tuple order when using numpy reshape on a GDALBand.,,Opa-,None,2016-03-31T09:02:04Z,2016-04-12T14:13:42Z
6361,Fixed #26430 -- Fixed coalesced aggregation of empty result sets.,"Thanks to Ryan Prater for the report and Josh for the suggested patch.
",charettes,None,2016-03-31T04:48:07Z,2016-03-31T04:56:59Z
6360,Made a few proxy_models tests use assertRaisesMessage().,,timgraham,None,2016-03-30T16:03:06Z,2016-03-30T16:24:46Z
6359,Fixed #26421 -- Refactored ModelSignal to use Apps.lazy_model_operation(),"Currently `ModelSignal` has its own mechanism for resolving model strings for no good reason. This patch refactors it to use the mechanism in `Apps` instead.

There are two commits here.

The first is a slight refactor of `Apps.lazy_model_operation` and related code that
- expresses its workings in a clearer way
- improves the system's generality by allowing 0 or more models rather than 1 or more
- introduces a new check to detect unresolved reference and output nicer error messages, and removes similar code in `StateApps`

The second commit refactors `ModelSignal` to use `Apps.lazy_model_operation`.
",AlexHill,None,2016-03-30T09:10:40Z,2016-05-20T01:49:44Z
6358,Fixed OpenLayers.Layer.OSM constructor in openlayers-osm.html.,"Old constructor didn't work anymore
",bgaechter,None,2016-03-29T21:19:43Z,2016-05-02T16:07:38Z
6357,Fixed #26419 -- Rephrased a sentence in ALLOWED_HOSTS docs.,"https://code.djangoproject.com/ticket/26419#ticket
",jtpereyda,None,2016-03-29T17:37:40Z,2016-04-04T15:08:49Z
6356,Fixed #26417 -- Allowed setting GDALBand data with partial values.,"This functionality is essential to update large rasters with replicated data.
",yellowcap,None,2016-03-29T12:05:05Z,2016-03-29T15:09:55Z
6355,Fixed #26384 -- Fixed renaming the PK on a model with a self-referential FK on SQLite.,"See discussion on [#26384](https://code.djangoproject.com/ticket/26384)
",AlexHill,None,2016-03-29T09:11:08Z,2016-03-29T17:37:24Z
6354,Fixed #26416 -- Fixed references to previous tutorial numbers in docs/intro/reusable-apps.txt.,"The ""Advanced tutorial: How to write reusable apps"" page references the previous tutorial, calling it number 6. However, it appears that it should reference tutorial 7.
- Tutorial 6 does not point the user to this page; Tutorial 7 does.
- Line 90 assumes the user has completed Tutorial 7.
- Tutorial 7 is the last page in the basic tutorial.
",jtpereyda,None,2016-03-28T18:28:38Z,2016-03-28T22:31:22Z
6353,Fixed #26413 -- Fixed a regression with abstract model inheritance and explicit parent links.,"https://code.djangoproject.com/ticket/26413
",charettes,None,2016-03-28T18:16:20Z,2016-03-29T01:12:27Z
6352,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,"https://code.djangoproject.com/ticket/22383

Same as PR #6341 but without the deprecation cycle.
",jdufresne,None,2016-03-28T18:04:37Z,2016-04-21T23:20:08Z
6351,Fixed #21446 -- Allowed the set_language() view to return HTTP 204 on AJAX requests.,,claudep,None,2016-03-28T17:39:20Z,2016-03-29T20:17:14Z
6350,Fixed #26415 -- Allowed deleting nodata value on GDALBands.,"GDAL>=2.1 has a C function that allows deleting existing nodata values on existing bands. This is implemented here for GDALBands, as the lack of this can lead to problems when warping existing rasters with no nodata value.
",yellowcap,None,2016-03-28T16:36:43Z,2016-03-29T12:09:15Z
6349,Updated some imports for the latest version of isort.,,timgraham,None,2016-03-28T15:20:04Z,2016-03-28T15:46:30Z
6348,Fixed #21734 -- Handled ProtectedError on POST to admin's delete_selected action,"https://code.djangoproject.com/ticket/21734

Approach is similar to that used to solve [#26235](https://code.djangoproject.com/ticket/26235) in https://github.com/django/django/commit/49ac10b4de03279da9d67aeac5cb8561fc055085.
",akki,None,2016-03-28T06:14:00Z,2016-03-29T11:50:04Z
6347,Fixed #10532 -- Relaxed hard-type checking in get_object/list_or_404 shortcuts,"Thanks Anssi Kääriäinen for the patch suggestion.
",claudep,None,2016-03-27T20:45:57Z,2016-03-29T19:35:21Z
6346,Fixed #11560 -- Allowed proxy model multiple-inheritance from the same concrete base model.,"Fixed [#11560](https://code.djangoproject.com/ticket/11560/).
",akki,None,2016-03-27T20:00:16Z,2016-03-30T17:08:31Z
6345,[WIP] Relation Field API clean UP,,auvipy,None,2016-03-27T14:50:10Z,2017-03-20T07:49:41Z
6344,Typo on RegrAvgY,,fjcapdevila,None,2016-03-26T21:35:19Z,2016-03-28T13:23:23Z
6343,Fixed #21548 -- Added FileExtensionValidator and validate_image_file_extension validators.,"https://code.djangoproject.com/ticket/21548
",berkerpeksag,None,2016-03-26T20:11:27Z,2016-06-30T13:15:06Z
6342,Fixed #25532 -- Properly redisplayed invalid JSONField form input values.,"Thanks David Szotten for the report and Tommy Beadle for code inspiration.
",claudep,None,2016-03-26T19:25:38Z,2016-04-01T07:05:13Z
6341,Fixed #22383 -- Added support for HTML5 required attribute on require…,"…d form fields.

https://code.djangoproject.com/ticket/22383
",jdufresne,None,2016-03-26T18:32:47Z,2016-04-02T16:31:12Z
6340,Cleaned class inheritances in staticfiles tests,,claudep,None,2016-03-26T15:19:03Z,2016-03-28T17:47:02Z
6339,Refs #18239 -- Removed an obsolete workaround for bugs in HTMLParser.,,timgraham,None,2016-03-26T10:53:15Z,2016-03-26T16:48:50Z
6338,Fixed #25759 -- Added keyword arguments to customize Expressions' as_sql().,"Rebased from https://github.com/django/django/pull/6302.
",timgraham,None,2016-03-25T20:46:06Z,2016-03-29T13:09:14Z
6337,Fixed typo for aggregate key name.,,timster,None,2016-03-25T17:15:22Z,2016-03-25T17:38:48Z
6336,Removed unnecessary type creation in modelforset_factory.,,charettes,None,2016-03-25T16:51:20Z,2016-03-25T17:24:37Z
6335,Fixed #26406 -- Explicitly set isort line_length.,"[Ticket #26406](https://code.djangoproject.com/ticket/26406#ticket)
",jarekwg,None,2016-03-25T07:39:58Z,2019-05-07T14:09:56Z
6334,Removed duplicate definition of ChoiceFormSet.,"Previously defined at top of file.
",jdufresne,None,2016-03-25T00:41:16Z,2016-03-25T11:37:50Z
6333,Fixed #25987 -- Made inline formset validation respect unique_together with an unsaved parent object.,"Thanks Anton Kuzmichev for the report.
",charettes,None,2016-03-25T00:07:41Z,2016-03-27T02:38:06Z
6332,Fixed #26387 -- Restored the functionality of the admin's raw_id_fields in list_editable.,"https://code.djangoproject.com/ticket/26387
",timgraham,None,2016-03-24T20:24:47Z,2016-03-25T18:09:42Z
6331,Fixed #23004 -- Added cleansing of request.META in the debug view.,"Docker run with wsgi Django App, usually through the environment variable to pass parameters, need to protection the request.META with some environment KEY value.
",shenjinti,None,2016-03-24T14:48:43Z,2016-04-04T22:34:06Z
6330,Fixed #26402 -- Added relative path support in include/extends template tags.,"This patch allows relative paths in argument of 'extends' and 'include' template tags. Relative path must start from ""./"" or ""../"". Examples:

Extend ""base.html"", located in the same folder, where your template placed:

```
{% extends ""./base.html"" %}
```

Extend ""base.html"", located at two levels higher

```
{% extends ""../../base.html"" %}
```

Extend ""base.html"", located in the 'dir1' subfolder, relatively current template:

```
{% extends ""./dir1/base.html"" %}
```

The origin of this patch [is here](https://github.com/vb64/django.templates.relative.path).

https://groups.google.com/d/topic/django-developers/rDAJ0Ig6FoU/discussion
",vb64,None,2016-03-24T11:27:21Z,2016-05-07T20:26:27Z
6329,"Refs #16508 -- Renamed the current special-handling of ""virtual"" fields to ""private"".","The only reason why GenericForeignKey and GenericRelation are stored
separately inside _meta is that they need to be cloned for every model
subclass, but that is not true for any other virtual field. (Actually,
it's only true for GenericRelation.)

A more precise term for this concept could be ""private"" fields.
",koniiiik,None,2016-03-23T22:31:21Z,2016-04-13T14:29:49Z
6328,Removed unused xmlhttp from core.js,,collinanderson,None,2016-03-23T20:14:55Z,2016-03-24T21:28:14Z
6327,Split model_fields tests into different files.,,timgraham,None,2016-03-23T15:25:24Z,2016-03-23T23:50:01Z
6326,Used in-memory database in test_disable_migrations,"Refs #25388
",berkerpeksag,None,2016-03-23T14:14:01Z,2016-03-23T14:55:55Z
6325,Fixed #26398 -- Made FieldFile.open respect its mode argument,,koterpillar,None,2016-03-22T23:48:19Z,2016-03-23T23:17:53Z
6324,Fixed #26395 -- Skipped the CryptPasswordHasher tests on platforms with a dummy crypt module.,"https://code.djangoproject.com/ticket/26395
",timgraham,None,2016-03-22T13:48:31Z,2016-03-22T16:21:28Z
6323,Fixed #25388 -- Added an option to allow disabling of migrations running during test database creation,"https://code.djangoproject.com/ticket/25388
",berkerpeksag,None,2016-03-22T12:24:36Z,2016-03-23T00:22:39Z
6322,Fixed #26390 -- Fixed order_by('?') breaking QuerySet aggregation.,"Adds a ""contributes_to_group_by"" attribute/property to expression that controls whether it should be included in the GROUP BY clause. The random expression sets this to False.

I am not very familiar with the ORM module, to be honest, and would love some advice on this.
",uranusjr,None,2016-03-22T08:53:36Z,2016-11-16T18:32:00Z
6321,Fixed #26058 -- Delegated FileField's filename generation to the Storage.,"Related to #26382
First attempt at moving some logic performed by FileField which should
be actually performed by the Storage used. This changes makes it easier
to implement special kind of storages that do not rely on the operative
system (in particular os.path) which right now forces you to override
FileField.

All changes are backwards compatible for the exception of Storage.save
method, which was incorrectly replacing \ with / but was actually a
FileSystemStorage job. No tests were changed to make this change work
but anyone relying on this behaviour of Storage.save will start to get
unexpected results when running django on Windows.

The Storage class now has a new method 'generate_filename' which will
perform the old behaviour of FileField.generate_filename.

FileField.get_filename and FileField.get_directory_name are now
deprecated and should not be used since the job done by these two is now
done delegated to the Storage class. However FileField.generate_filename
will still exist (delegating the call to the Storage class) since it can
still be useful if other logic is required at the field level.

I have added tests for the deprecated methods and to the new
generate_filename at Storage, plus a custom Storage that simulates
(barely) an AWS S3 storage.

https://code.djangoproject.com/ticket/26058
https://code.djangoproject.com/ticket/26382
",cristianocca,None,2016-03-21T22:22:58Z,2016-04-30T14:54:38Z
6320,Fixed #26391 -- Limited JSONField empty_values to None.,"In case of JSON, only None (null) should be considered an empty value.
Fix to https://code.djangoproject.com/ticket/26391
",sim1234,None,2016-03-21T20:38:18Z,2016-03-23T15:56:03Z
6319,made is_anonymous and is_authenticated properties because they are us…,"related to https://code.djangoproject.com/ticket/26388
",codyc4321,None,2016-03-21T17:01:45Z,2016-03-21T18:05:49Z
6318,"relative path in {% extends ""./../base.html"" %}","This patch allows relative paths in argument of 'extends' and 'include' template tags. Relative path must start from ""./"". Examples:

Extend ""base.html"", located in the same folder, where your template placed:

```
{% extends ""./base.html"" %}
```

Extend ""base.html"", located at two levels higher

```
{% extends ""./../../base.html"" %}
```

Extend ""base.html"", located in the 'dir1' subfolder, relatively current template:

```
{% extends ""./dir1/base.html"" %}
```

The origin of this patch [is here](https://github.com/vb64/django.templates.relative.path).

https://groups.google.com/d/topic/django-developers/rDAJ0Ig6FoU/discussion
",vb64,None,2016-03-21T16:01:44Z,2016-03-24T11:35:27Z
6317,Fixed minor grammatical issues in gis docs,,akki,None,2016-03-21T12:31:14Z,2016-03-21T15:15:13Z
6316,Fixed #26378 -- Fixed incorrect behavior in GenericIPAdressField,"Mixed IPv4 and IPv6 representation is not accepted if unpack_ipv4=False and the first byte of the IPv4 is ""0""

References this: https://code.djangoproject.com/ticket/26378
",AmineYaiche,None,2016-03-20T19:55:03Z,2016-03-23T12:23:01Z
6315,Fixed #26381 -- Made UserCreationForm reusable with custom user models that define USERNAME_FIELD.,"https://code.djangoproject.com/ticket/26381
",berkerpeksag,None,2016-03-20T10:25:55Z,2016-03-21T16:37:23Z
6314,A humanized ImportError message in manage.py,"I've been teaching Django for several years in classes [like this](http://first-django-admin.readthedocs.org/). 

Again and again I've seen newbies flounder when they receive this error after running `manage.py`.

``` python
 % python manage.py
Traceback (most recent call last):
  File ""manage.py"", line 7, in <module>
    from django.core.management import execute_from_command_line
ImportError: No module named django.core.management
```

The root cause is almost always simple, like forgetting install Django with pip or neglecting to ""activate"" a virtual environment. But the Python jargon doesn't do much to help people new to our world connect the dots. 

My proposal: Catch that error and print out a more verbose message that explains to the user exactly what's wrong. Here's my draft. I'd welcome any changes, but I think something along these lines could better welcome new people into Django.

``` python
 % python manage.py              
Traceback (most recent call last):
  File ""manage.py"", line 11, in <module>
    installed and available on your PATH variable?"")
ImportError: Django could not be imported. Are you sure it is installed and available on your PATH variable?
```
",palewire,None,2016-03-19T23:57:41Z,2016-04-09T17:34:06Z
6313,Fixing corrupted URL,"Replacing a non valid URL in the internals documentation section
",AmineYaiche,None,2016-03-19T20:04:00Z,2016-03-19T20:20:14Z
6312,Fixed #26293 - Moved append_slash logic outside of prepend_www logic,"Moving logic required dynamically building the redirect_url as well as updating test_non_ascii_query_string_does_not_crash to expect a 301 from process_request instead of expecting no redirect.

Also added a regression test (and renamed another test to differentiate the two).
",samuelmullin,None,2016-03-19T15:43:49Z,2016-03-23T13:30:10Z
6311,Fixed #26220 -- Allowed SingleObjectMixin to get the model and template_name from form_class.,,nim65s,None,2016-03-19T13:05:47Z,2016-09-17T00:49:49Z
6310,Pass type to sql_alter_column*.,"This helps databases which need the database type when changing the default
(Just like MySQL needs it for changing null…)
",apollo13,None,2016-03-18T22:08:22Z,2016-03-18T22:47:15Z
6309,"Fixed #25232, #24987 -- Made ModelBackend reject inactive users.","https://code.djangoproject.com/ticket/25232
https://code.djangoproject.com/ticket/24987

Updated from https://github.com/django/django/pull/6090
",timgraham,None,2016-03-18T15:00:08Z,2016-03-23T13:22:29Z
6308,"Fixed #26365 --- Added a system check to ensure ""string_is_invalid"" is a string","https://code.djangoproject.com/ticket/26365
",vincepandolfo,None,2016-03-18T12:49:54Z,2016-03-21T17:08:47Z
6307,[1.9.x] Add missing stacklevel for management command deprecation warning,,claudep,None,2016-03-18T09:11:18Z,2016-03-18T15:50:38Z
6306,Fixed #26265 -- Clarified RadioSelect container's HTML id.,"https://code.djangoproject.com/ticket/26265
",timgraham,None,2016-03-17T16:51:35Z,2016-03-19T22:40:27Z
6305,Refs #26367 -- Removed obsolete _size cache on FieldField.,"The _size attribute is used in File.size but FieldFile overrides it.
",timgraham,None,2016-03-17T14:32:52Z,2016-03-17T16:59:40Z
6304,Fixed #26373 -- Fixed reverse lookup crash with a ForeignKey to_field in a subquery.,"This fixes a regression from #6117. 

I haven't looked too deep in to the details of this. So forgive me if the fix is a bit quick and hacky (if it's fine then great!).

Any feedback is welcome.
",Moncader,None,2016-03-17T13:47:42Z,2016-03-19T21:58:47Z
6303,Refs #25759 -- Fixed some Funcs to work if different database backends are used.,"Extracted from https://github.com/django/django/pull/6302. Fixes that aren't dependent on new features.

I also picked off the documentation bits from that pull request that seemed appropriate for backport to 1.9.
",timgraham,None,2016-03-16T15:08:44Z,2016-03-22T01:06:17Z
6302,Fixed #25759 -- Added keyword arguments to various Expressions.,"Takes over from #6147 which got a little confusing. I've removed `**kwargs` from most `as_sql` methods, and added explicit key word parameters where it made sense. The changes I've made have been rebased onto the original commit made by @kaifeldhoff.
",jarshwah,None,2016-03-16T11:00:36Z,2016-03-25T21:06:13Z
6301,Fixed #26361 - Template Filter for loop with range,"What do you guys think of this feature add and should I change the name.
",the-kid89,None,2016-03-16T10:35:34Z,2016-03-16T11:53:10Z
6300,Fixed #25005 - Made date and time fields with auto_now/auto_now_add use effective default,"https://code.djangoproject.com/ticket/25005

Also fixed autodetector in migrations to skip promt for default for these fields.

Rebase / fix of #4902 
",yakky,None,2016-03-15T21:55:40Z,2016-05-09T12:53:07Z
6299,Fix incorrect default for failfast parameter of DiscoverRunner in the docs,"Default parameter is actually `False` (as seen [here](https://github.com/django/django/blob/d4dc775620fc57e962165eab98a77264e3dd16b2/django/test/runner.py#L361))
",akabraham,None,2016-03-15T20:31:44Z,2016-03-15T22:35:14Z
6298,[PoC] Fixed #8122 -- Better way of testing for cookies,,collinanderson,None,2016-03-15T19:04:41Z,2016-03-15T20:53:31Z
6297,Fixed #25251 -- Made data migrations available in TransactionTestCase (2),"@timgraham Proposing another solution for #6137.

Flushing and loading initial data migration on the `destroy_test_db` step.
",romgar,None,2016-03-15T16:17:03Z,2016-11-06T09:58:59Z
6296,Fixed #26290 -- Documented that a QuerySet for pagination should be ordered.,,duane9,None,2016-03-15T02:42:26Z,2016-03-15T14:16:11Z
6295,Fixed #26352 - allow m2m through same model if through_fields differs,"See https://code.djangoproject.com/ticket/26352
",simonw,None,2016-03-15T00:43:42Z,2016-03-21T12:26:15Z
6294,Fixed #25415 -- Made DiscoverRunner run system checks.,"Revival of #5293.

[Ticket 25415](https://code.djangoproject.com/ticket/25415#ticket)
",adamchainz,None,2016-03-14T23:01:11Z,2016-12-29T17:38:20Z
6293,[1.9.x] Fixed #26334 -- Removed whitespace stripping from contrib.auth password fields.,"https://code.djangoproject.com/ticket/26334
",vincepandolfo,None,2016-03-14T21:23:42Z,2016-03-15T00:25:33Z
6292,Fixed #26351 -- Added database check about MySQL sql_mode variable,"Thanks Adam Chainz for the initial implementation in django-mysql.
",claudep,None,2016-03-14T19:08:00Z,2016-04-08T22:20:02Z
6291,Removed unnecessary filter kwarg from .get() in a test.,"It appears that this filter was added because the original author thought that `.get()`` required at least one filter kwarg (or maybe it did when this test was written).

The filter is unnecessary as there's only one object anyway, and it causes an error if the DB's auto-increment is too high or if the DB uses random IDs.
",adamalton,None,2016-03-14T18:05:52Z,2016-03-14T22:58:28Z
6290,Removed a workaround for a cookie encoding bug [1] in Python < 2.7.2.,"[1] http://bugs.python.org/issue9824
",timgraham,None,2016-03-14T14:09:35Z,2016-03-14T23:49:33Z
6289,Fixed #26157 #25321 -- Added sql/params to extra context of schema logger.,"https://code.djangoproject.com/ticket/26157
https://code.djangoproject.com/ticket/25321

Supersedes #6256
",MarkusH,None,2016-03-14T10:41:01Z,2016-03-15T06:48:07Z
6288,Fixed #26297 -- Fixed `collectstatic --clear` crash if storage doesn't implement path().,"When a custom storage backend doesn't implement its path() method,
fallback to the backend's delete() method.

https://code.djangoproject.com/ticket/26297
",berkerpeksag,None,2016-03-14T03:18:50Z,2016-03-17T13:57:03Z
6287,Fixed test_dumpdata_progressbar to use the instantiated StringIO object.,,jdufresne,None,2016-03-14T00:30:41Z,2016-03-14T19:26:17Z
6286,Fixed typos in docs,,jwilk,None,2016-03-13T19:04:30Z,2016-03-14T12:29:57Z
6285,Fixed #25804 -- Documented additions to Jinja2 backend context,"Ticket: https://code.djangoproject.com/ticket/25804
",MoritzS,None,2016-03-13T12:54:14Z,2016-03-14T12:43:56Z
6284,Fixed #26294 -- Clarified call_command()'s handling of args and options.,"https://code.djangoproject.com/ticket/26294
",timgraham,None,2016-03-12T22:46:43Z,2016-03-14T12:29:32Z
6283,Fixed #26283 -- Fixed removal of trailing nulls for `SplitArrayField`.,"Updated the clean's `null_index` check to not mistake a `0` index for no trailing nulls.
",quaspas,None,2016-03-12T21:58:54Z,2016-03-12T22:23:07Z
6282,Fixed #26345 -- Clarified which RangesFields always return a canonical form.,"https://code.djangoproject.com/ticket/26345
",timgraham,None,2016-03-12T17:18:29Z,2016-03-12T17:58:56Z
6281,Fixed #26239 -- Added a note about how auto_now works with QuerySet.update(),,duane9,None,2016-03-12T16:18:43Z,2016-03-12T18:00:52Z
6280,Fixed #26343 -- Sent user_login_failed signal if an auth backend raises PermissionDenied.,"Break from loop instead of returning None when PermissionDenied to ensure user_login_failed signal is sent.  Implicit return of None follows the signal.
",samuelmullin,None,2016-03-12T14:52:18Z,2016-03-12T21:45:54Z
6279,Fixed #25143 -- Added ArrayField.from_db_value().,"Updated from https://github.com/django/django/pull/6131.
",timgraham,None,2016-03-12T14:16:57Z,2016-03-12T14:33:23Z
6278,Fixed #25579 -- Fixed ArrayField.get_db_prep_value() to allow complex types.,"Related [ticket](https://code.djangoproject.com/ticket/25579).
",begincalendar,None,2016-03-12T03:54:40Z,2016-03-15T15:25:04Z
6277,Fixed #26158 -- Rewrote cookie parsing based on rfc6265.,,collinanderson,None,2016-03-12T02:37:21Z,2016-03-15T16:36:57Z
6276,"Correct a spelling error: ""appliable""","I am no English professor, but ""appliable"" probably should be ""applicable"".
",noenglishprofessorbut,None,2016-03-12T01:30:50Z,2016-03-12T13:46:34Z
6275,"Fix spelling error: ""columnas"" -> ""columns""","I am no English professor, but ""columnas"" looks like a misspelling of ""columns"".
",noenglishprofessorbut,None,2016-03-12T01:25:31Z,2016-03-12T13:46:38Z
6274,"Correct a spelling error: ""aggretates""","I am no English professor, but this PR fixes a spelling error: ""aggregates""-> ""aggregates"".
",noenglishprofessorbut,None,2016-03-12T01:17:25Z,2016-03-13T08:18:03Z
6273,Fixed #26296 -- Fixed error message for second QuerySet.values() call after extra().,"Test added to https://github.com/django/django/pull/6225.
",timgraham,None,2016-03-12T00:45:41Z,2016-03-12T01:10:05Z
6272,Fixed #25364 -- Added generic way to test on all browsers supported by selenium.,"Now browser names should be passed as an argument to the --selenium flag to
run selenium tests via ./tests/runtests.py

Thanks Tim Graham, Simon Charette and Moritz Sichert for review and discussion.
",charettes,None,2016-03-11T21:59:03Z,2016-03-15T17:11:48Z
6271,Fixed #24932 -- Added Cast database function,"Thanks Ian Foote for the initial patch.
",claudep,None,2016-03-11T20:02:10Z,2016-03-25T23:23:42Z
6270,Removed unneeded GeoManagers in tests.,,timgraham,None,2016-03-11T17:59:07Z,2016-03-11T18:40:23Z
6269,Fixed #25865 -- Made OSMGeoAdmin require GDAL only if transformation is needed.,"Rebased from https://github.com/django/django/pull/5770.
",timgraham,None,2016-03-11T17:05:08Z,2016-03-11T18:02:14Z
6268,Admin: Allow elements to not initially collapse.,"I added this functionality to my project and figured I should share it. It is just a simple change to allow collapsible elements in the admin to not start collapsed by making that element a member of the 'no-initial-collapse' class.
",aiudirog,None,2016-03-11T00:36:22Z,2016-03-14T15:12:51Z
6267,Fixed #25307 -- conditional aggregation over subqueries,,akaariai,None,2016-03-10T19:17:13Z,2017-01-14T13:28:43Z
6266,Fixed #25307 -- Conditional aggregation over subqueries,"https://code.djangoproject.com/ticket/25307
",newportt,None,2016-03-10T18:19:13Z,2016-06-07T02:12:31Z
6265,Refs #24227 -- Replaced M2M isinstance checks by field.many_to_many,"A version of #6236 with only the ManyToMany changes.
",claudep,None,2016-03-10T17:28:55Z,2016-03-19T09:03:32Z
6264,Refs #25933 -- Fixed i18n_patterns() prefix_default_language=False with HTTP_ACCEPT_LANGUAGE header.,"That's a fix and test against one issue found in #6222 (#25933 -- Allowed an unprefixed default language in i18n_patterns()).

The bug causes 404 when user with Accept-Encoding header different than default (settings.LANGUAGE_CODE) accessed the page.
",urbaniak,None,2016-03-10T14:27:06Z,2016-03-10T15:53:00Z
6263,Fixed #26324 -- Fixed DurationField with fractional seconds on SQLite.,"https://code.djangoproject.com/ticket/26324
",timgraham,None,2016-03-10T14:23:36Z,2016-03-11T00:16:49Z
6262,"Correct a grammatical error: ""it's related model""","I am no English professor, but ""inheriting its related model"" should not contain an apostrophe.

For reference, see http://theoatmeal.com/comics/apostrophe
",noenglishprofessorbut,None,2016-03-10T04:40:32Z,2016-03-10T06:23:42Z
6261,Fixed #26342 -- Bug with NodeNotFoundError repr,"[Ticket #26342](https://code.djangoproject.com/ticket/26342#ticket)

`NodeNotFoundError.node` is a tuple. Feeding it as a single argument to a formatter attempts to unpack it. We don't want that!
",jarekwg,None,2016-03-09T10:43:43Z,2019-05-07T14:09:47Z
6260,"Fixed indenting in ""Serving files in development"" code example",,ptim,None,2016-03-09T03:45:57Z,2016-03-09T03:56:38Z
6259,Fixed #26306 -- Memory leak in cached template loader,"This fixes two related issues in the caching template loader, a memory leak bug and a memory use regression.

In 1.8, the thing that is cached when a template isn't found is the TemplateDoesNotExist class itself. When the debug view wants to know which paths were searched while looking for the template, it consults the rendering engine again. In 1.9, that debug information is stored on an exception instance, and those exceptions are cached.

The memory leak comes from the repeated re-raising of the same cached exception, which results in references to the `TemplateResponse` for each failed request persisting deep in the exception's context/stack information. The fix is to raise a new exception each cache hit, instead of repeatedly raising the cached exception.

The memory use regression comes from the intentional caching of every checked template path for each failed template, for debug purposes. In some projects that can end up eating all your memory. This is fixed by reverting to the 1.8 behaviour – simply caching the `TemplateDoesNotExist` class – when template debugging is not enabled.
",AlexHill,None,2016-03-09T03:38:52Z,2016-04-11T14:25:19Z
6258,Use .eml extension for file-based EmailBackend,,jameshiew,None,2016-03-08T22:58:10Z,2016-03-09T13:31:49Z
6257,Fixed #19567 -- Added JavaScriptCatalog and JSONCatalog class-based views.,"https://code.djangoproject.com/ticket/19567
",claudep,None,2016-03-08T21:42:38Z,2016-04-15T15:30:14Z
6256,"Fixed #26157, #2532 -- Added sql/params to schema logger.","[#26157](https://code.djangoproject.com/ticket/26157) and [#25321](https://code.djangoproject.com/ticket/25321)
Passed `sql` and `params` to `extra` parameter of logger. Updated docs to tell the same.
",akki,None,2016-03-08T21:21:02Z,2016-03-14T10:43:23Z
6255,Fixed #26302 - removed the virtual host file documentation portion,"Ticket: https://code.djangoproject.com/ticket/26302
",girishramnani,None,2016-03-08T19:37:44Z,2016-03-09T14:02:17Z
6254,"Fixed #26292, #25945 -- Refactored MigrationLoader.build_graph().","[Ticket #26292](https://code.djangoproject.com/ticket/26292)

This PR also solves [Ticket #25945](https://code.djangoproject.com/ticket/25945), including the tests from PR #5939 along with @timgraham's recommended changes to them.

@MarkusH, Adding only normal nodes at the first step proved problematic, as replacing migrations can still reference other replacing migrations, as well as there being possible hiccups that could arise with `__first__`. So the solution I found was to add _all_ nodes to the graph (both normal and replacing migrations), including all their listed dependencies, and _then_ iterate over the replacing migrations and either delete them, or the migrations they replace from the graph, remapping the dependencies as this happens. This ordering seems to work well.

Below are some things I would like feedback on:
1. Since we're now creating dummy nodes instead of immediately raising a `NodeNotFoundError`, for `validate_consistency` to give a meaningful error upon finding dangling dummy nodes, it needs to know about the migration that triggered the creation of the given dummy node. To achieve this, I create the exception when I create the dummy node, and then `validate_consistency` raises that exception if that dummy node still exists at the end. However I'm not hugely happy with the implementation (have a look at the code..).
2. Speed? We're creating and deleting more objects now, as opposed to the previous method of resolving everything in a bunch of dicts prior to building the graph. Might this be visibly less performant, or is this not significant enough to be a worry?
3. I haven't seen any tests for `__first__`, `__latest__` or `run_before` being used in conjunction with squashed migrations. Should we add some in this PR?
4. Is there a point to storing both `graph.node_map` and `graph.nodes`? Could the Migration object not stem off the Node object, rather than sitting in a separate dict? Specifically, I don’t like the doubling up between `graph.nodes[x].dependencies` and `graph.node_map[x].parents`. The current implementation updates `Migration.dependencies` to ensure consistency with the graph. My implementation currently doesn't touch `Migration.dependencies` (Hence one of the tests not passing). I’d be inclined to just delete the `Migration.dependencies` (same with `.replaces` and `.run_before`) lists after the graph has been built from them. Or we should just not touch them after they’ve been loaded in (though deleting would prevent confusion and accidental use). Currently the `showmigrations` mcommand uses `Migration.dependencies` rather than `Node.parents`. Should it really be displaying this? Seems a bit weird to me..

Also, `NodeNotFoundError`’s `__repr__` had a bug: have to call `repr(node)` before passing it to `%r` formatter. Fixed.

This is my first refactor of Django code; please pick it to bits with utmost scrutiny. :)
",jarekwg,None,2016-03-08T13:03:27Z,2018-10-19T00:56:01Z
6253,Fixed #9388 -- Added year select element to admin datepicker.,"Added a select element to the calendar which makes it easier to
navigate between years.
",rynomster,None,2016-03-07T20:37:49Z,2016-03-24T21:32:25Z
6252,Ticket 9388,"I've added a select to the calendar, allowing you to select the year - it makes it much easier when needing to fill in birthdays on so on.
",rynomster,None,2016-03-07T20:25:21Z,2016-03-07T20:33:27Z
6251,Fixed #26325 -- Handled blank sanitized filenames.,,jmb202,None,2016-03-07T12:28:25Z,2016-03-07T18:23:53Z
6250,Fixed #26332 -- Made BaseCache.get_or_set() always return a value.,"Ignore the result of `.add()` and always return a value from `BaseCache.get_or_set()`.
Fixes [#26332](https://code.djangoproject.com/ticket/26332#ticket)
",suligap,None,2016-03-06T10:42:54Z,2016-03-08T16:58:25Z
6249,Fixed #26331 - Tests functions with typos are not detected by test runner,"[#26331](https://code.djangoproject.com/ticket/26331)
",georgemarshall,None,2016-03-06T08:51:08Z,2019-11-10T07:13:30Z
6248,"Refs #26328, #26319 -- Refactored javascript catalog to reuse DjangoTranslation class","This refactoring should also solve issue #26319.
",claudep,None,2016-03-06T00:16:02Z,2016-03-08T20:48:09Z
6247,Fixed a wrong format string in WeekArchiveView reference.,"My sincere apologies, in PR #6171 I wrote an incorrect format string in one place; this fixes it.
",koniiiik,None,2016-03-06T00:00:51Z,2016-03-06T00:40:56Z
6246,Fixed #26271 -- Fixed i18n_patterns resolution when no language is active,"Thanks Marten Kenbeek for the report.
",claudep,None,2016-03-05T19:25:41Z,2016-03-07T10:50:11Z
6245,Refs #19527 -- Fixed SQL compiler regression causing Oracle failure.,,timgraham,None,2016-03-05T19:05:33Z,2016-03-06T00:47:01Z
6244,Removed claim that you can use different database backends for Django's tests.,"Such as a setup isn't tested through continuous integration and therefore
isn't likely to work reliably.

(e.g. koniiiik reported in #django-dev that a SQLite/PostgreSQL combination crashes immediately)
",timgraham,None,2016-03-05T13:43:18Z,2016-03-05T14:08:07Z
6243,Fixed #25774 -- Added Extract and Trunc datetime functions.,"A bunch of datetime transforms/expression are moved and renamed into their own module underneath `django.db.models.functions.datetime`. I'm open to relocating them elsewhere, but I thought it'd be nice to group them within their own file.

I do plan to implement Trunc expressions too. There's already a high level Date and DateTime type within `expressions.py` which is only used for `.datetimes()` and `.dates()` queryset methods. I might retire those in favour of new public expressions if it's easy enough to do.

Todo:
- [x] Move and rename existing date/time transforms into public module with public names
- [x] Docs
- [x] Tests
- [x] Implement TruncX in style of ExtractX (with docs/tests) 
- [x] Release notes
- [x] Fix test failures if pytz isn't installed
- [x] Check tests work on Windows without pytz
- [x] Check Oracle failures (test_trunc_func, test_trunc_second_func)
",jarshwah,None,2016-03-05T12:13:30Z,2016-05-18T10:18:16Z
6242,Fixed #26308 -- Prevented crash with binary URLs in is_safe_url(),"This fixes a regression introduced by c5544d28923.
",claudep,None,2016-03-04T15:19:43Z,2016-03-05T14:05:25Z
6241,Fixed #26312 -- Added information about testing databases to tutorial 2.,"I added to the note about non-sqlite databases to suggest creating a
test_ database while creating the main database to avoid errors in
tutorial section 5 on tests.

I also added information on making sure that the user provided to the
settings file has privileges for the two databases.  I don't have
enough experience with PostgreSQL to know whether the privileges
section applies there too, but I don't think it does.  For now it, that
part is labeled MySQL specific.
",timgraham,None,2016-03-04T15:01:58Z,2016-03-05T14:09:45Z
6240,Fixed #26323 -- TransactionManagementError is raised when autocommit …,"…is false.
",tltx,None,2016-03-04T09:34:21Z,2016-03-04T19:35:12Z
6239,Fixed #26316 -- Remove repetition of code in models and fields of migrations.operations,"https://code.djangoproject.com/ticket/26316

Implemented `ModelOperation.references_model`, `FieldOperation.references_model`
and `FieldOperation.references_field`.
",akki,None,2016-03-03T22:29:17Z,2016-03-03T23:47:44Z
6238,Cleaned up TestStaticFilePermissions to use call_command().,"Extracted from #6217.
",jdufresne,None,2016-03-03T20:21:21Z,2016-03-13T23:02:04Z
6237,Refs #25653 -- Clarify help text for --selenium option,"[Ticket #25653](https://code.djangoproject.com/ticket/25653) changed the behaviour of `runtests.py --selenium` to only run the Selenium tests instead of running them additionally but the help message for `--selenium` still says ""Run the Selenium tests as well"".
",MoritzS,None,2016-03-03T20:13:17Z,2016-03-03T23:21:25Z
6236,Fixed #24227 -- Replaced ForeignKey isinstance checks by field.many_to_one.,,claudep,None,2016-03-03T17:17:30Z,2016-05-14T21:38:58Z
6235,Fixed #26310 -- Documented that a queryset ordering must be specified to ensure ordered results.,"https://code.djangoproject.com/ticket/26310
",timgraham,None,2016-03-03T15:19:08Z,2016-03-03T23:13:04Z
6234,Fixed #26309 -- Documented that login URL settings no longer support dotted paths.,"The ability to reverse urls using Python dotted paths is deprecated in Django 1.8 and removed in 1.10. This pull request updates the docs for the LOGIN_URL and LOGIN_REDIRECT_URL settings, and adds notes to the 1.8 release notes and deprecation timeline.

If we backport this patch to 1.9 or 1.8, we should add a `.. deprecated:: 1.10` note for both settings.
",alasdairnicol,None,2016-03-03T00:45:04Z,2016-03-03T14:20:49Z
6233,Fixed #20892 -- Allowed setting memcached Client options through CACHES 'OPTIONS'.,"Allow to set memcached client options
Ticket https://code.djangoproject.com/ticket/20892
",Fiedzia,None,2016-03-02T21:03:10Z,2016-09-01T13:25:12Z
6232,Fixed wrong release date,,Stranger6667,None,2016-03-02T07:16:50Z,2016-03-02T12:21:37Z
6231,Fixed #26304 -- Handled unmanaged through table between two managed models in table introspection.,"https://code.djangoproject.com/ticket/26304
",schinckel,None,2016-03-02T04:42:05Z,2016-03-02T18:54:58Z
6230,Fixed #26303 -- Updated urls for mod_wsgi docs,,alasdairnicol,None,2016-03-01T21:55:09Z,2016-03-02T00:23:22Z
6229,Fixed #26301 -- Allowed pass socket_timeout option to memcached client.,,Fiedzia,None,2016-03-01T20:59:54Z,2016-03-02T16:06:28Z
6228,"Removed obsolete, unused option 'hide_empty' from loaddata command.","Was not used or documented throughout the code. Always evaluated to
False.
",jdufresne,None,2016-03-01T19:31:03Z,2016-03-13T23:02:04Z
6227,Fixed #26293 -- Prevented CommonMiddleware from logging warnings during APPEND_SLASH.,"Removed a tab from lines 61 - 68 so code will run even if PREPEND_WWW is
set to False.
",the-kid89,None,2016-03-01T12:27:34Z,2016-03-02T16:54:33Z
6226,Docs: Update typo fix in Models Meta doc,"This PR fixes a extra parenthesis as well as colon in docs.
",taranjeet,None,2016-03-01T09:40:00Z,2016-03-01T13:34:30Z
6225,Fixed #26296 -- fixed error message for second values() call after ex…,"Fix of https://code.djangoproject.com/ticket/26296#ticket

Need some grammar checking (not native speaker).
",aimestereo,None,2016-02-29T19:43:01Z,2016-03-12T01:09:36Z
6224,Fixed #26295 -- Cached LocaleRegexURLResolver usage per urlconf.,,charettes,None,2016-02-29T18:22:46Z,2016-03-03T17:48:08Z
6223,Fixed #26229 -- Improved check for model admin check admin.E124,"Updated pull request with changes suggested on #6156
",alasdairnicol,None,2016-02-29T12:03:25Z,2016-03-01T13:28:20Z
6222,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,"https://code.djangoproject.com/ticket/25933#ticket

Updated from #5823.
",urbaniak,None,2016-02-29T08:37:31Z,2016-03-08T13:15:17Z
6221,Fixed #26291 -- Allowed loaddata to handle forward references in natural_key fixtures.,"This is a first stab at supporting forward references in fixtures that
use natural foreign keys.  See [ticket 26291](https://code.djangoproject.com/ticket/26291)

Before this commit, the following fixture could not be deserialized by
loaddata if an author whose name is ""John Steinbeck"" did not already
exist:

```
[
  {
    ""model"": ""app.book"",
    ""fields"": {
      ""title"": ""East Of Eden"",
      ""author"": [""John Steinbeck""]
    }
  },
  {
    ""model"": ""app.author"",
    ""fields"": {
      ""name"": ""John Steinbeck"",
      ""date_of_birth"": ""1902-02-27""
    }
  }
]
```

This problem can be avoided by careful ordering of fixtures, but it is
unavoidable for fixtures that contain circular references.

With this commit, when loaddata tries to deserialize a fixture
containing an object that has a natural foreign key to another object
that does not yet exist, it will defer setting the foreign key attribute
until after all fixtures are loaded.

TODO: documentation
",inglesp,None,2016-02-28T18:11:59Z,2018-07-14T12:40:59Z
6220,Removed unnecessary test CreatesuperuserManagementCommandTestCase.test_nolocale,"This test was added in commit 4c934f3921a59c7b3e088f6472b6f6da40848567
as work on ticket #16017. It was added to verify that when
`locale.getdefaultlocale()` returned no locale, management commands still
worked correctly.

However, due to other changes, `getdefaultlocale()` no longer runs at
run-time, instead it now runs only once at import-time in
`django.utils.encoding`.

The tests mocks `local.getdefaultlocale()` expecting it to execute during
the remainder of the test. As this function no longer runs at run-time,
this test is not testing anything interesting.
",jdufresne,None,2016-02-28T17:51:57Z,2016-03-13T23:02:08Z
6219,Fixed #26001 -- Made ModelAdmin.search_fields do an integer lookup for IntegerFields,"What type of test, if any, should be written for this.
Does this require a mention in the docs ?
",akki,None,2016-02-28T14:38:17Z,2016-03-02T18:57:57Z
6218,Removed unused 'Between' lookup.,"It has no references in code or docs. It was added in the Big ORM refactor in 20bab2cf9d02a5c6477d8aac066a635986e0d3f3, but stopped being used for `Range` in 00aa562884a418c4ee20e223ab82c3455997ee7d when `bilateral` was added to `Transform`.
",adamchainz,None,2016-02-28T10:33:00Z,2016-02-29T13:00:38Z
6217,Fixed #26315 -- Cleaned up usage of argparse options in commands and tests.,"Options specified to argparse are always set and have a default value
and type. This eliminates the need for a number of patterns throughout
the management command code.

The pattern ""options.get('name')"" was removed in favor of direct
indexing.

The pattern ""options.get('dry_run', False)"" was removed in favor of
argparse's default value.

The pattern ""int(options['verbosity'])"" was removed in favor of
argparse's type coercion.

With this change, tests calling commands' execute() function directly
would now need to specify all options. To better handle this, these
commands were converted to call_command(). For tests that inspect a
command instance, call_command() now accepts a command instance as the
first argument.
",jdufresne,None,2016-02-28T06:34:38Z,2016-03-13T23:02:04Z
6216,Fixed #22288 -- Fixed F() expressions with the  __range lookup.,"This pull request intends to clarify some handling of lookups that take a tuple of arguments, like Range and In, and allow them to contain F() objects or expressions as arguments.

https://code.djangoproject.com/ticket/22288
",MatthewWilkes,None,2016-02-27T23:19:08Z,2016-08-19T17:41:33Z
6215,Fixed #19670 -- Applied CachedFilesMixin patterns to specific extensions,"Thanks Simon Meers for the initial patch.
",claudep,None,2016-02-27T20:33:37Z,2016-03-30T12:35:54Z
6214,Fixed #26289 -- Enabled shell tab completion on systems using libedit.,"https://code.djangoproject.com/ticket/26289
",saghul,None,2016-02-27T17:23:55Z,2016-03-08T13:47:42Z
6213,"Fixed docs: release-process, Supported Versions section, example","Security & data loss fixes are applied to the two last feature releases,
not just one.
",shaib,None,2016-02-27T16:00:47Z,2016-02-28T16:49:46Z
6212,Fixed #26288 -- Added support for relative imports in django.conf.urls.include().,"For example, within `myproject.urls`::

```
urlpatterns = (
    url(r'', include('.myapp.urls')),
)
```

.. becomes equivalent to::

```
urlpatterns = (
    url(r'', include('myproject.myapp.urls')),
)
```

Whilst a contrived example, this can make heavy-nested apps look far, far
cleaner. For example, within `myproject.foo.foo_bar.foo_bar_baz.urls`,
one only needs to include `.foo_bar_baz_qux.urls` to get to the ""next""
level, rather than the significantly more unwieldy
`myproject.foo.foo_bar.foo_bar_baz.foo.bar_baz_qux.urls`.

https://code.djangoproject.com/ticket/26288

Signed-off-by: Chris Lamb chris@chris-lamb.co.uk
",lamby,None,2016-02-27T15:58:26Z,2016-05-07T21:26:36Z
6211,docs typos,,t-3-k,None,2016-02-27T11:26:07Z,2016-02-27T11:34:37Z
6210,Fixed #26275 -- Added a note about difference between o and Y date format specifiers,"Adds a note to the `o` format specifier documentation that explains it is used for leap-week years and that usually specifying `Y` is more appropriate.
",inondle,None,2016-02-27T00:31:26Z,2016-02-27T13:07:34Z
6209,Fixed #26265 -- Added BoundField.id_for_wrapper,"This is redirected and reworked PR based on [this one](https://github.com/django/django/pull/6199), with [corrections](https://github.com/django/django/pull/6199#issuecomment-188922746) by @timgraham applied -- thank you for review!

To quickly recap again, we're solving situation in which Django users can't accurately replicate `{{ form }}` (or similar) logic by more fine-grained template statements. In particular, we have no means to get correct `id` value on a wrapping `<ul>`element (or other of that kind):

```
<ul id="" ? "">
  {% for choice in field %}
    <li><label for=""{{ choice.id_for_label }}"">{{ choice.tag }}</li>
  {% endfor %}
</ul>
```

To solve the issue, this branch introduces new attribute for `BoundField` giving us that desired template variable:

```
<ul id=""{{ field.id_for_wrapper }}"">
  {% for choice in field %}
    <li><label for=""{{ choice.id_for_label }}"">{{ choice.tag }}</li>
  {% endfor %}
</ul>
```

As timgraham suggested, I've moved tests to lower abstractions, closer to other `BoundField` tests. There are two new tests, and they follow existing `id_for_label` tests very closely.

I've checked tests to pass, and docs `make` to finish without errors.
",tedmx,None,2016-02-26T20:19:37Z,2016-03-19T22:17:44Z
6208,Fixed #26285 -- Deprecated the MySQL-specific __search lookup.,,timgraham,None,2016-02-26T18:01:31Z,2016-03-05T15:04:40Z
6207,Fixed #26286 -- Prevented content type managers from sharing their cache.,"This should prevent managers methods from returning content type instances
registered to foreign apps now that these managers are also attached to models
created during migration phases.

Refs #23822.
",charettes,None,2016-02-26T17:55:54Z,2016-02-26T21:19:07Z
6206,Use callables as default status code handlers,,dgladkov,None,2016-02-26T12:50:01Z,2016-03-07T11:49:08Z
6205,[WIP] Prevented post_migrate receivers from running if the required migrations are not applied.,"This is related to multiple bug such as:

[#24299](https://code.djangoproject.com/ticket/24299), [#22411](https://code.djangoproject.com/ticket/22411) and [#24524](https://code.djangoproject.com/ticket/24524).
",charettes,None,2016-02-26T06:57:11Z,2016-03-02T23:27:25Z
6204,Fixed #26264 -- Fixed prefetch_related() crashes with values_list(flat=True),,Uran198,None,2016-02-26T05:31:13Z,2016-02-27T00:35:30Z
6203,Made SessionTestsMixin backend agnostic.,"Made SessionTestsMixin backend agnostic and removed code obsoleted by the test discovery refactor.
",charettes,None,2016-02-26T01:06:30Z,2016-02-26T16:23:26Z
6202,Removed try/fail antipattern from model_options tests.,,timgraham,None,2016-02-26T00:11:28Z,2016-02-26T01:06:58Z
6201,Refs #25232 -- Added tests for AllowInactiveUsersModelBackend authentication backend,,sasha0,None,2016-02-25T23:02:33Z,2016-03-01T14:49:34Z
6200,Fixed #24653 -- Fixed MySQL database introspection when using 'read_default_file' option,,zshimanchik,None,2016-02-25T20:17:57Z,2016-02-26T17:02:59Z
6199,Refs #26265 -- Added composite_id attribute for BoundField,"Where is an established behaviour and structure for how `RadioSelect`s are rendered via shorthands, like `{{ form.as_p }}`:

```
<ul id=""id_field-field"">
  <li><label for=""id_field-field_0"">
      <input id=""id_field-field_0"" type=""radio"" value=""1"" name=""field-field"">
      ...
      </label>
  </li>
  <li><label for=""id_field-field_1"">...
  </li>
  ...
</ul>
```

On other hand, when trying to get the same output without the shorthand,

```
<ul id="" ? "">
  {% for choice in field %}
    <li><label for=""{{ choice.id_for_label }}"">{{ choice.tag }}</li>
  {% endfor %}
</ul>
```

there is no way to procure correct and unique `id` attribute for `<ul/>` element of `RadioSelect`.

This branch adds `composite_id` property to `BoundField`, This new property can be used in template to get correct and unique `id` for `<ul/>` (or other wrapper) element for `RadioSelect`:

```
<ul id=""{{ field.composite_id }}"">
  {% for choice in field %}
    <li><label for=""{{ choice.id_for_label }}"">{{ choice.tag }}</li>
  {% endfor %}
</ul>
```

Test is attached, but no docs yet, because I'm sure @timgraham's review is a must here.
",tedmx,None,2016-02-25T16:49:06Z,2016-02-25T19:38:53Z
6198,Fixed #26280 -- Fixed cached template loader crash when loading nonexistent template.,"If you use cached loader to load non-existing template, then you will get `TypeError: __init__() takes at least 2 arguments (1 given)`, because `TemplateDoesNotExist` raised without message
",tsouvarev,None,2016-02-25T15:06:05Z,2016-02-26T13:02:53Z
6197,Fixed #26117 -- Consulted database routers in initial migration detection.,"https://code.djangoproject.com/ticket/26117#ticket

Updated from https://github.com/django/django/pull/6036
",timgraham,None,2016-02-25T13:35:56Z,2016-02-25T15:11:52Z
6196,Selenium testing,"This PR is just for some selenium testing on ci.
",akki,None,2016-02-25T12:02:22Z,2016-02-25T14:54:40Z
6195,Fixed #12233 -- Added an option to redirect authenticated users away from the login view.,"https://code.djangoproject.com/ticket/12233

Update from https://github.com/django/django/pull/5604
",timgraham,None,2016-02-25T00:40:28Z,2016-03-05T15:05:03Z
6194,Mock-up for #24622,"Mock-up for suggestion in [Ticket 24622](https://code.djangoproject.com/ticket/24622).
Not intended to be merged.
",MoritzS,None,2016-02-24T22:21:08Z,2016-04-02T14:16:07Z
6193,Fixed #14098 -- Prevented crash for introspection errors in inspectdb,,claudep,None,2016-02-24T19:18:48Z,2016-02-25T07:44:51Z
6192,Fixed #26235 -- Prevented admin crash on a POST to delete a protected object from admin view.,"https://code.djangoproject.com/ticket/26235

If somebody tries to delete a protected object bypassing the confirmation page, a page redirection is made instead of the current behaviour of throwing a 500 error.
",akki,None,2016-02-24T16:46:32Z,2016-03-27T21:35:27Z
6191,Used addCleanup() to call recorder.flush() in migration loader tests.,,timgraham,None,2016-02-24T16:22:55Z,2016-02-24T18:47:48Z
6190,Fixed #26165 -- Added some FAQs about CSRF protection.,"https://code.djangoproject.com/ticket/26165
",timgraham,None,2016-02-24T15:39:52Z,2016-03-05T15:04:50Z
6189,Refs #26270 -- Reorganized TestCase docs.,,timgraham,None,2016-02-24T15:19:57Z,2016-02-25T13:03:03Z
6188,Fixed #26269 -- Prohibited spaces in is_valid_ipv6_address().,"I've got an issue when user posted an IPv6 address with spaces right after a colon (like this: `fe80::2000:f8ff: fe21:67cf`) and Django passed that value to database and user got DataError exception. This fix prevents the issue.
",name-no,None,2016-02-24T10:14:09Z,2016-02-25T23:57:01Z
6187,Fixed #26230 -- Use default_related_name as related_name in QuerySet lookup,"https://code.djangoproject.com/ticket/26230
- Fix the behavior that QuerySet failed to get default_related_name as related_name in lookup string.
- Used the default_related_name to set related_name in RelatedField.contribute_to_class.
- Remove unused codes which return default_related_name as accessor name in ForeignObjectRel.get_accessor_name.
",chenesan,None,2016-02-24T07:30:41Z,2016-02-27T13:51:17Z
6186,Stable/1.8.x,,shiblisaleheen,None,2016-02-24T06:37:50Z,2016-02-24T06:39:36Z
6185,Fixed #26267 -- Fixed BoundField to reallow slices of subwidgets.,"https://code.djangoproject.com/ticket/26267
",jdufresne,None,2016-02-23T23:42:35Z,2016-03-13T23:02:11Z
6184,Fixed #26267 -- Fixed BoundField to allow slices of subwidgets.,"https://code.djangoproject.com/ticket/26267
",jdufresne,None,2016-02-23T19:28:59Z,2016-03-13T23:02:18Z
6183,Fixed #26266 -- Output the primary key in the GeoJSON serializer properties,,claudep,None,2016-02-23T19:00:06Z,2016-02-24T15:11:48Z
6182,Test using default manager for toone relations,"_PR for CI only_
",loic,None,2016-02-23T18:16:24Z,2016-02-26T13:50:47Z
6181,commented the #L1017  ticket_26168,,insomniac12,None,2016-02-23T14:39:21Z,2016-02-23T14:53:27Z
6180,Update jquery.init.js,"This code lets use $ in custom scripts
",Haikson,None,2016-02-23T13:39:53Z,2016-07-27T23:03:22Z
6179,Attempt to confirm that to-one descriptor don't require special handling for use_for_related_fields,"_PR for CI only_
",loic,None,2016-02-23T09:15:06Z,2016-02-26T13:51:00Z
6178,Fixed #26186 -- Documented how app relative relationships of abstract models behave.,"This partially reverts commit bc7d201bdbaeac14a49f51a9ef292d6312b4c45e.

Refs #25858.
",charettes,None,2016-02-22T21:55:56Z,2016-03-04T01:06:49Z
6177,Fixed #26253 -- Fixed crashing deprecation shims in SimpleTemplateResponse.,"https://code.djangoproject.com/ticket/26253
",timgraham,None,2016-02-22T19:10:22Z,2016-02-23T08:16:04Z
6176,Fixed import location of check_password() function in docs.,"The code provided in the example will fail with an import error since `check_password()` isn't there anymore.  As best I can tell, it's part of `User` now, so I've amended the example to show this.
",danielquinn,None,2016-02-22T13:12:02Z,2016-02-22T17:45:42Z
6175,"Fixed #10506, #13793, #14891, #20932, #25201, #25897 -- Refactored managers inheritance","Refactor managers inheritance and introduce new APIs for specifying the default and base manager of a given model. Also deprecate `use_for_related_fields`.
- [x] Reimplement 515a8a37d83dd758cf9ca402d3526b245c782483 using the `_base_manager` and `_default_manager` properties.
- [x] Write tests for the 2 deprecations (`use_for_related_fields`, and legacy manager inheritance)
- [x] Document `_base_manager` and `_default_manager`, they've always existed but should be public APIs (so 3rd party apps use them).
- [x] Write docs + release notes for the new meta APIs.
- [x] Document the deprecations.
- [x] Decide on https://github.com/django/django/pull/6175#issuecomment-219223027.
",loic,None,2016-02-21T20:31:35Z,2016-05-17T05:48:20Z
6174,Fixed #26251 -- Added clean method to SimpleArrayField.,"See Trac ticket: https://code.djangoproject.com/ticket/26251
See Error reproduction code: https://github.com/sgallen/django-simplearrayfield-bug
",sgallen,None,2016-02-20T21:14:36Z,2016-05-07T21:06:15Z
6173,Fixed #26249 -- Fixed collectstatic crash for files in STATIC_ROOT referenced by absolute URL.,"collectstatic crashed when:
- a hashing static file storage backend was used
- a static file referenced another static file located directly in
  STATIC_ROOT (not a subdirectory) with an absolute URL (which must
  start with STATIC_URL, which cannot be empty)

It seems to me that the current implementation reimplements relative
path joining and doesn't handle edge cases correctly. I suspect it
assumes that STATIC_URL is of the form r'/[^/]+/'.

Throwing out the current code in favor of the posixpath module makes the
logic much easier to follow. Handling absolute paths correctly also
becomes easier.

Finally I reworked comments to make the code hopefully easier to
understand for future developers.
",aaugustin,None,2016-02-20T20:51:28Z,2016-02-23T18:41:05Z
6172,Refs #26250 -- Added str.format() placeholder support to ValidationError,"Deprecated legacy `%(<foo>)s` placeholder support.

https://code.djangoproject.com/ticket/26250
",jdufresne,None,2016-02-20T17:40:08Z,2016-03-13T23:02:30Z
6171,Fixed #26217 -- Added a warning about format strings to WeekArchiveView reference.,"https://code.djangoproject.com/ticket/26217

Ideally, since I just removed the (incorrect) suggestion that `'%W'` is the same as `'W'`, I'd like to add an alternative way of creating URLs for `WeekArchiveView` within templates, but I haven't been able to come up with anything that's available in Django out of the box.
",koniiiik,None,2016-02-20T17:29:00Z,2016-03-01T19:56:44Z
6170,Fixed #26238 -- Raised explicit error for non-editable field in ModelForm,"Thanks Luke Crouch for the report.
",claudep,None,2016-02-20T13:54:45Z,2016-02-22T08:54:05Z
6169,Made APPEND_SLASH not dependent on PREPEND_WWW,"Now APPEND_SLASH = True only works if PREPEND_WWW is set to True. This patch makes these options independent.
",un-def,None,2016-02-20T13:41:12Z,2016-02-20T18:12:26Z
6168,Fixed #26232 -- Fixed Popen mocking environment in i18n tests,"Refs #25925.
",claudep,None,2016-02-20T08:38:25Z,2016-02-23T19:07:42Z
6167,Fixed #26226 -- Made related managers honor the queryset used for prefetching their results.,"PR for CI only, work and discussion tracked at https://github.com/django/django/pull/6159.
",loic,None,2016-02-20T06:38:01Z,2016-02-20T17:37:04Z
6166,"[fix] ""es"" translates in humanize","In spanish you say : ""hace 10 segundos || minutos || horas"" no ""hacen 10 segundos || minutos || horas""
",LeonidasEsteban,None,2016-02-19T21:58:33Z,2016-02-20T14:37:07Z
6165,Fixed #25653 -- Made --selenium run only the selenium tests.,,timgraham,None,2016-02-19T18:58:18Z,2016-02-19T19:29:18Z
6164,Fixed #26243 -- Added a note to deployment checklist,"This part of the deployment checklist is no longer relevant as of Python 3.3, so we can save users the effort of looking that up and configuring that if they use Python 3.3 or later.

One could discuss whether we should also link to the Python 3 documentation explicitly which states this in a nice way and still has all the information of the Python 2 documentation in it.
",raphaelm,None,2016-02-19T14:51:51Z,2016-02-19T15:51:01Z
6163,Fixed #26242 -- Allowed models with app_label at import stage.,"get_containing_app_config raised exception if  ran at import stage. On the other hand app_config is only needed to get app_label. If app_label is provided in Meta then there is no need to prevent model from being created before all apps are initialized.
",kramarz,None,2016-02-19T12:57:52Z,2016-02-22T13:01:41Z
6162,Refs #6148 -- Meta table api,"Add Model._meta.table_cls attribute to represent table-like objects. Add schema qualified table support.

Continuation from https://github.com/django/django/pull/5278.

TODO:
- [ ] PostgreSQL support (we are nearly there)
- [ ] tests in Django's test suite (test project attached)
- [ ] docs
- [x] introspection support as needed by migrations (get_constraints(), table_names())
- [ ] Nice failures for cases where schemas are used for Oracle, MySQL and SQLite
- [ ] Remove a couple of TODOs and temporary asserts

Not going to be implemented in this PR:
- MySQL support (in mysql schemas are a synonym for database. This is going to cause problems for testing, where production and test database schemas would conflict)
- SQLite support (no schemas on SQLite)
- Oracle support (we use Oracle schemas to differentiate between test and production, so similar problems as with MySQL are preventing support for Oracle in initial implementation)
- Inspectdb support
- Dynamic schemas (same model on multiple schemas will not be supported by Django)
- Ability to configure default schema for project or apps

Test project for PostgreSQL here:
[schema_test.tar.gz](https://github.com/django/django/files/137903/schema_test.tar.gz)
",akaariai,None,2016-02-19T12:09:18Z,2016-07-15T23:47:30Z
6161,Fixed #25974 -- Switched GIS docs to 4 spaces indentation.,"https://code.djangoproject.com/ticket/25974
",sir-sigurd,None,2016-02-19T09:35:06Z,2016-02-19T16:16:45Z
6160,Fixed some code blocks indentation in GIS docs.,,sir-sigurd,None,2016-02-19T09:13:00Z,2016-02-19T16:16:45Z
6159,Fixed #26226 -- Made related managers honor the queryset used for prefetching their results.,"@loic I'd like to have your feedback about this slightly backward incompatible change.

If I remember correctly such an issue was discussed during the implementation of the `Prefetch` object.
",charettes,None,2016-02-19T03:40:42Z,2019-10-06T19:19:07Z
6158,Fixed #23155: Added request argument to user_login_failed,"https://code.djangoproject.com/ticket/23155
",gavinwahl,None,2016-02-19T00:59:29Z,2016-09-13T00:37:53Z
6157,WIP #20932 -- Streamlined manager inheritance.,,loic,None,2016-02-18T18:07:53Z,2016-05-14T21:18:22Z
6156,Fixed #26229 -- Improved check for model admin check admin.E124,"I found this tricky to get my head around, so hopefully I have got the logic correct. The existing tests pass following my change, and I have added an extra unit test.
",alasdairnicol,None,2016-02-17T22:58:26Z,2016-02-29T11:51:46Z
6155,Fixed #26231 -- Used `.get_username` in admin login template.,"On a custom user object, `.username` does not necessarily have to exist.
By using `.get_username`, the proper accessor in `AbstractBaseUser`
can retrieve the proper attribute instead.
",sjoerdjob,None,2016-02-17T14:19:23Z,2016-02-26T00:30:56Z
6154,Clarified explanation for model field choices.,"Clarified explanation for choices.  When I wrote my first Django app, this was unclear, so I have made an editing suggestion that I believe will make it easier for novices to understand how to use choices. 
",beckastar,None,2016-02-17T04:27:27Z,2016-02-25T19:25:24Z
6153,Changed documentation to follow recommended ValidationError use.,"While reading the [Validators documentation](https://docs.djangoproject.com/en/1.9/ref/validators/), I noticed it did not raise a `ValidationError` in the manner recommended by the [Raising `ValidationError` documentation](https://docs.djangoproject.com/en/1.9/ref/forms/validation/#raising-validationerror). The lack of `params` was most obvious to me.
",jdufresne,None,2016-02-17T04:24:58Z,2016-03-13T23:02:32Z
6152,Fix import to properly work,,jjconti,None,2016-02-16T23:39:22Z,2016-02-17T04:26:09Z
6151,Fix import to properly work,,jjconti,None,2016-02-16T23:16:30Z,2016-02-17T04:25:57Z
6150,Fixed #26219 -- Allowed filtering by Decimal parameter in RawQuery.,"https://code.djangoproject.com/ticket/26219
",akki,None,2016-02-16T22:03:42Z,2016-02-17T19:05:55Z
6149,Update AUTHORS,"Updated my name and email address.
",fmalina,None,2016-02-16T14:00:07Z,2016-02-16T15:54:21Z
6148,Fixed #26107 -- Added option to int_list_validator to allow negatives,"The new boolean allow_negative option will let the list contain negative
 integers.
",akki,None,2016-02-15T23:51:59Z,2016-02-18T23:59:51Z
6147,Fixed #25759 -- Add **kwargs to as_sql method of Expressions,"https://code.djangoproject.com/ticket/25759
",kaifeldhoff,None,2016-02-15T21:10:46Z,2016-03-16T11:09:32Z
6146,Added get_subprocess_args() function to runtests.py,,timgraham,None,2016-02-15T18:55:38Z,2016-02-15T19:17:16Z
6145,Fixed #26215 -- Fixed RangeField.value_to_string() serialization for null range boundaries.,,claudep,None,2016-02-15T18:35:26Z,2016-02-16T20:08:56Z
6144,Fixed #26221-- Included polls.migrations in setup.py packages,"polls.migrations should be included in setup.py packages.  Otherwise the
migrations won't be included in the tarball.
",tubaman,None,2016-02-14T21:51:39Z,2016-02-16T00:26:02Z
6143,Fixed #24727 -- Prevented ClearableFileInput from masking exceptions on Python 2.,"https://code.djangoproject.com/ticket/24727
",berkerpeksag,None,2016-02-14T21:39:37Z,2016-02-15T22:27:11Z
6142,Refs #19353 -- Added tests for using custom user models with builtin auth forms,"Also, updated topics/auth/customizing.txt to reflect that subclasses of
UserCreationForm and UserChangeForm can be used with custom user models.

https://code.djangoproject.com/ticket/19353
",berkerpeksag,None,2016-02-14T15:42:03Z,2016-02-17T15:43:05Z
6141,adding wrap to url,"added wrap to urls.
usage : 
url(r'^$', include('suburl'), wrap=[wrap1, wrap2])
",vorujack,None,2016-02-14T11:31:59Z,2019-06-01T15:37:06Z
6140,Fixed #26140 -- Suppressed MySQL warning when inserting binary content,,claudep,None,2016-02-13T18:09:23Z,2018-01-10T14:37:16Z
6139,Fixed #26190 -- Returned handle() result from call_command,,claudep,None,2016-02-13T17:22:15Z,2016-02-23T08:13:01Z
6138,Fixed #25735 -- Added support for test tags to DiscoverRunner.,"Update from https://github.com/django/django/pull/5585
https://code.djangoproject.com/ticket/25735
",timgraham,None,2016-02-13T13:21:16Z,2016-03-05T15:06:24Z
6137,Fixed #25251 -- Made data migrations available in TransactionTestCase.,"Data loaded in migrations are restored at the beginning of each `TransactionTestCase` and all the tables are truncated at the end of these test cases.

It means that, at the end of your whole test suite, if there was at least one `TransactionTestCase`, the migrated data are no more in the database, specially surprising when using `--keepdb` option.

I propose to restore data at the end of a `TransactionTestCase` (just after the `flush`), to be sure that the next test will be in the expected environment (data loaded from initial migrations) and the database will be in the expected state at the end of the test running suite.

This PR follows the discussion related to https://code.djangoproject.com/ticket/25251 with @timgraham.
",romgar,None,2016-02-12T22:38:51Z,2016-11-11T11:02:17Z
6136,Fixed #25687 -- Documented how to add database function support to third-party backends.,"Updated from https://github.com/django/django/pull/5574.
",timgraham,None,2016-02-12T19:45:59Z,2016-02-17T18:39:45Z
6135,Removed unneeded hint=None/obj=None in system check messages.,,timgraham,None,2016-02-12T17:13:39Z,2016-02-12T18:34:48Z
6134,Make clear where the import comes from,,camilonova,None,2016-02-12T16:27:59Z,2016-02-12T18:45:24Z
6133,Refs #25979 -- Dropped compatiblity for running tests on PostgreSQL < 9.2.,,timgraham,None,2016-02-12T15:02:31Z,2016-02-12T15:19:25Z
6132,fix ipv6 validator: check address for valid symbols first,"I've got an issue when user posted an IPv6 address with spaces right after a colon (like this: `fe80::2000:f8ff: fe21:67cf`) and Django passed that value to database and user got `DataError` exception. This fix prevents the issue.
",name-no,None,2016-02-12T13:36:59Z,2016-02-22T15:03:42Z
6131,Fixed #25143 -- Added ArrayField.from_db_value(),"See https://code.djangoproject.com/ticket/25143 and https://github.com/django/django/pull/5035#issuecomment-166167796.
",karanlyons,None,2016-02-12T07:19:06Z,2016-03-12T14:17:24Z
6130,Fixed #26126 -- Fixed transient failure of test_max_age_expiration,"https://code.djangoproject.com/ticket/26126
",berkerpeksag,None,2016-02-12T07:04:11Z,2016-02-15T14:37:49Z
6129,Fixed #26193 -- Fixed urlize to trim multiple trailing punctuation.,"https://code.djangoproject.com/ticket/26193
",jdufresne,None,2016-02-12T05:08:21Z,2016-03-13T23:02:42Z
6128,Fixed #26212 - make FileField pickleable,,koterpillar,None,2016-02-12T02:41:46Z,2016-02-15T19:50:38Z
6127,Fixed debug mode for UnicodeDecodeError,"Why silence the error in debug mode?
",haos616,None,2016-02-11T21:02:57Z,2016-02-11T23:02:10Z
6126,Fixed #26111 -- Clarified that fixtures are loaded once per TestCase,"Fixes https://code.djangoproject.com/ticket/26111.
",karyon,None,2016-02-11T20:39:30Z,2016-02-11T23:54:39Z
6125,"Clarified ""database column type"" explanation.","On line 113, clarified the sentence a little to more succinctly describe what a column type is.  I found this sentence confusing when I was first learning - if someone hasn't used frameworks or programmed before this point can be a little confusing.  Also added one additional example in parens.
",beckastar,None,2016-02-11T19:28:28Z,2016-02-11T23:27:40Z
6124,Fixed #24987 -- Removed `is_active` check from test client login.,"Ticket - https://code.djangoproject.com/ticket/24987.
",sasha0,None,2016-02-11T19:01:05Z,2016-03-18T15:35:56Z
6123,Fixed #26204 -- Reallowed dashes in top-level domains for URLValidator.,"https://code.djangoproject.com/ticket/26204
",timgraham,None,2016-02-11T15:52:02Z,2016-02-19T17:08:47Z
6122,Fixed #26209 -- Hide lowercase sensitive settings,"If the ticket is accepted, a test should be added.

Ticket: https://code.djangoproject.com/ticket/26209
",francoisfreitag,None,2016-02-11T12:26:56Z,2016-02-11T23:19:55Z
6121,Fix typo in comment,,meshy,None,2016-02-11T11:28:15Z,2016-02-11T11:32:17Z
6120,Fix typo in comment,,meshy,None,2016-02-11T11:14:14Z,2016-02-11T11:32:07Z
6119,Fixed sql_create_index for mysql,"This needs to use ""alter table"" instead of ""create index"" due to this 6 year old bug in mysql:
https://bugs.mysql.com/bug.php?id=48875

This is a fixed duplicate pull request (I had left whitespace in the previous request). I'm not sure why github did not give me the new version of the file when I tried to edit it, forcing me to do this extra request.

Previous request: https://github.com/django/django/pull/6113
",dakusan,None,2016-02-11T09:31:33Z,2016-02-22T17:49:25Z
6118,Fixed #26207 -- New implementation for deferred fields,"The implementation is based on non-data descriptors. Dynamically created deferred classes are gone.

The new implementation is much cleaner and much faster (around 30% faster for query_raw_deferred). There is still some cleanup to do in QuerySet iterators.

One can also do the following after the patch:

```
    obj = MyModel(pk=1, field=models.DEFERRED); 
    obj.field # <- Loads the field from DB
```

or

```
    obj = MyModel.objects.first()
    del obj.field
    obj.field  # <- Loads the field from DB
```

There are various backwards incompatibilities we can't easily work around:
  1) `Model.__init__()` will be called with value DEFERRED for those fields which are deferred. Previously those fields were not given to `__init__()` at all.
  2) The class level attribute Model._deferred must be removed (we can't have class level attribute as we don't have dynamic classes any more)
  3) A field name clashing with a classmethod will now either hide the classmethod or disallow usage of deferred loading for that field. The patch takes the latter approach, though I think a loud failure might be better in this case. Notably if one used a _deferred_ instance earlier the shadowing would have happened _only for the deferred instance's class_.

Of these only 1) seem like a possible stopper. Personally I don't care, as overriding `Model.__init__()` is a sure way for trouble.
",akaariai,None,2016-02-11T09:17:49Z,2016-04-22T17:22:18Z
6117,Fixed #26196 -- Made sure __in lookups use to_field as default,"Replaces https://github.com/django/django/pull/6111. Test case from Simon Charette's PR6111.
",akaariai,None,2016-02-11T06:44:55Z,2016-02-11T16:10:29Z
6116,Removed non-existent test_runner_deprecation_app from SUBDIRS_TO_SKIP.,,jdufresne,None,2016-02-11T05:41:00Z,2016-03-13T23:03:19Z
6115,Fixed #26179 -- Remove null assignment check for non-nullable foreign…,"Removed check value=None and raise ValueError in ForwardManyToOneDescriptor and
ReverseOneToOneDescriptor.None can always be assigned now and integrity check
is left to database.

Removed rasing ValueError tests for fk=None in generic_relations.test,
many_to_one.tests, and one_to_one.tests

https://code.djangoproject.com/ticket/26179
",ZachLiuGIS,None,2016-02-11T02:32:25Z,2016-02-11T15:08:57Z
6114,Fixed #26188 -- Documented how to wrap password hashers.,"(based on https://github.com/django/djangoproject.com/pull/634)
https://code.djangoproject.com/ticket/26188
",timgraham,None,2016-02-10T15:26:14Z,2016-02-22T22:29:51Z
6113,Fixed sql_create_index for mysql,"This needs to use ""alter table"" instead of ""create index"" due to this 6 year old bug in mysql:
https://bugs.mysql.com/bug.php?id=48875
",dakusan,None,2016-02-10T13:49:19Z,2016-02-11T13:49:50Z
6112,Fixed #26200 - ModelForm integrity violation on excluded ForeignKey,"Updated `BaseModelForm._get_validation_exclusions` so that when a `ModelForm` is declared without a `ForeignKey` field which forms part of a `unique_together` constraint it is _not_ excluded from validation checks.

Applies cleanly on `1.8.x` branch.
",goodtune,None,2016-02-10T10:14:09Z,2016-02-11T13:36:53Z
6111,Fixed #26196 -- Made sure __in lookups use to_field as default.,"Thanks to Trac alias hellpain for the report.
",charettes,None,2016-02-10T02:02:07Z,2016-02-11T13:50:42Z
6110,Fixed allow_migrate() signature in documentation,,MarkusH,None,2016-02-09T23:01:51Z,2016-02-12T03:39:16Z
6109,Fixed #26173 -- Prevented localize_input() from formatting booleans as numbers.,"https://code.djangoproject.com/ticket/26173
",timgraham,None,2016-02-09T17:45:57Z,2016-02-09T18:08:17Z
6108,Fixed #23832 — timezone aware Storage API.,"New methods get_{accessed,created,modified}_time() in the Storage API,
which by default convert the naive time from now-deprecated {accessed,created_modified}_time() into aware objects in UTC if
USE_TZ=True.

Directly implemented the new methods in FileSystemStorage.

Changed collectstatic command in contrib.staticfiles to use the new
methods.

Both client code and third party storage backends will need to be
updated to cope; advice provided in deprecation notes. The old methods
can be removed at 2.0, giving third party backends over a year from
release to support the new API.
",jaylett,None,2016-02-09T15:01:22Z,2016-02-24T00:16:47Z
6107,Fixed #25790 -- Added option to disable column sort in admin changelist.,"Ticket - https://code.djangoproject.com/ticket/25790
",sasha0,None,2016-02-09T14:17:46Z,2018-01-17T14:53:00Z
6106,"Fixed #26181 -- Changed http to httpProvider for AJAX, CSRF and angular",,userimack,None,2016-02-09T13:50:55Z,2016-02-09T14:51:23Z
6105,Fixed docstring to match up with its function.,"Changed the docstring in the function `get_full_path_with_slash()` to correctly represent what the function does.
",SableWalnut,None,2016-02-09T00:31:51Z,2016-02-09T13:07:49Z
6104,Added intended use in the admin's introduction.,,timgraham,None,2016-02-08T21:47:18Z,2016-02-18T14:12:19Z
6103,Fixed #26187 -- Removed weak password hashers from PASSWORD_HASHERS.,"https://code.djangoproject.com/ticket/26187#ticket
",timgraham,None,2016-02-08T19:40:26Z,2016-03-05T15:06:49Z
6102,Removed obsolete comment.,,knbk,None,2016-02-08T02:54:37Z,2016-02-08T12:11:00Z
6101,Fixed #26154 -- Deprecated CommaSeparatedIntegerField.,"Began the deprecation of `CommaSeparatedIntegerField`. This is my first django contribution, so I'm sure I missed something in the documentation. Let me know if anything needs fixing, thanks!
- Added deprecation warning to model
- Added `ignore_warnings` to relevant tests
- Added a test for the warning itself
- Updated documentation

[Ticket #26154](https://code.djangoproject.com/ticket/26154)

Edit: realized my branch is misnamed. If that's an issue, let me know and I'll fix it
",Brobin,None,2016-02-08T00:45:09Z,2016-02-10T22:58:48Z
6100,Fixed #26162 -- Checked query name clashes of hidden relationships.,,charettes,None,2016-02-07T23:37:27Z,2016-02-08T15:30:41Z
6099,Fixed #25364 -- Added support for all selenium's browsers in tests.,"https://code.djangoproject.com/ticket/25364
",akki,None,2016-02-07T05:01:21Z,2016-03-12T22:00:23Z
6098,Fixed title formatting in backwards-incompat section of 1.10 relnotes,"The titles used the wrong marker and as a result were all appearing under ""Database backend API"".
",shaib,None,2016-02-06T18:45:42Z,2016-02-06T22:12:16Z
6097,Updated instructions for gettext on Windows.,,timgraham,None,2016-02-06T14:52:16Z,2016-02-11T13:47:40Z
6096,Fixed #26177 -- Fixed a PostgreSQL crash with TIME_ZONE=None and USE_TZ=False.,"https://code.djangoproject.com/ticket/26177
",timgraham,None,2016-02-06T14:32:34Z,2016-02-08T12:42:20Z
6095,Fixed spelling -- super set -> superset.,,sir-sigurd,None,2016-02-06T05:00:43Z,2016-02-19T16:16:48Z
6094,Fixed #25616 -- Added note regarding missing dependencies on LookupEr…,"…ror for migrations

https://code.djangoproject.com/ticket/25616
",akki,None,2016-02-06T01:05:57Z,2016-02-12T18:07:03Z
6093,Fixed #26175 -- Removed hardcoding of SHA1 hashes in tests.,"https://code.djangoproject.com/ticket/26175
",timgraham,None,2016-02-05T22:46:31Z,2016-02-06T14:02:06Z
6092,Fixed #26176 -- Fixed E123 flake8 warnings.,,timgraham,None,2016-02-05T19:17:22Z,2016-02-05T20:25:06Z
6091,Refs #26144 -- Used proxy_for_model instead of mro inspection.,,charettes,None,2016-02-05T17:15:03Z,2016-02-05T17:32:58Z
6090,Fixed #25232 -- Made ModelBackend authentication backend reject inactive users by default.,"Ticket - https://code.djangoproject.com/ticket/25232
",sasha0,None,2016-02-05T14:46:53Z,2016-03-18T15:00:41Z
6089,Add and update Korean strings,"I updated several Korean locale files.
",lqez,None,2016-02-05T12:24:45Z,2016-02-05T14:02:38Z
6088,Don't cache non-ContentTypes in the ContentTypeManager cache,"Migration-time virtual models were being cached, which wreaks havoc with post-migration ORM queries that expect actual ""live"" ContentTypes to be passed in.

In case someone stumbles across the same problem:

`ValueError: Cannot assign ""<ContentType: something>"": ""Something.content_type"" must be a ""ContentType"" instance.` can be worked around by calling `ContentType.objects._cache.clear()` at the end of migration steps that call any of the caching ContentType manager methods.
",akx,None,2016-02-05T07:49:34Z,2016-02-26T18:51:30Z
6087,convert multiline assertRaises* test to single line.,,hramezani,None,2016-02-04T17:24:09Z,2016-02-05T00:19:10Z
6086,Fixed #26089 -- Removed custom user test models from public API.,,charettes,None,2016-02-04T17:00:32Z,2016-02-04T17:41:22Z
6085,Fixes #26005 - uri_to_iri() perfoms percent decoding incorrectly,"wrote a custom unquote function to prevent the conversion of '%25' to its octet (i.e '%') as suggested in RFC 3987
",varunnaganathan,None,2016-02-04T07:25:00Z,2016-04-09T16:06:01Z
6084,Fixed #26169 -- Fixed tutorial reference in reusable apps tutorial.," mysite/templates was created in Tutorial 07, not in Tutorial 02.

Current Documentation:
You created mysite/templates in :doc:Tutorial 2 </intro/tutorial02>,
and polls/templates in :doc:Tutorial 3 </intro/tutorial03>.

Corrected Documentation:
You created mysite/templates in :doc:Tutorial 7 </intro/tutorial07>,
and polls/templates in :doc:Tutorial 3 </intro/tutorial03>.
",manish001in,None,2016-02-04T06:27:34Z,2016-02-04T12:55:45Z
6083,Fixed #11665 -- Made TestCase check deferrable constraints after each test.,"… end of a test.

https://code.djangoproject.com/ticket/11665
",jdufresne,None,2016-02-04T05:00:29Z,2016-03-13T23:02:51Z
6082,Removed unsalted password hashers.,"https://groups.google.com/d/topic/django-developers/ZeRJU8YVrxg/discussion
",timgraham,None,2016-02-03T20:04:22Z,2016-03-05T15:06:16Z
6081,Fixed #26165 -- Added some FAQs about CSRF protection.,"https://code.djangoproject.com/ticket/26165
",timgraham,None,2016-02-03T18:46:22Z,2016-02-24T15:40:25Z
6080,Fixed #26173 -- Prevented localize_input() from treating booleans as numbers.,"Make django.utils.formats localize_input not recognize boolean values as numbers
",mmarksnippety,None,2016-02-03T15:00:21Z,2016-02-09T17:46:08Z
6079,"Remove ""gypsy"" slur from documentation.","Gypsy is considered a slur by the Romani people whom it refers to. ""manouche jazz"" is used in place of ""gypsy jazz"" and is an accepted term for the same genre of music.
",cowlicks,None,2016-02-03T10:50:25Z,2016-02-03T16:19:52Z
6078,Fixed #13875 -- Made admin's submit_row template tag pass whole Context.,"See [[#13875] submit_row templatetag should pass whole context](https://code.djangoproject.com/ticket/13875).
",nemesisdesign,None,2016-02-03T10:42:18Z,2016-02-04T17:05:20Z
6077,Fixed #25872 -- Added `force_escape` argument for blocktrans template tag to force HTML escaping.,"Ticket - https://code.djangoproject.com/ticket/25872
",sasha0,None,2016-02-02T18:59:18Z,2019-03-04T10:43:38Z
6076,Fixed #26170 -- Made ModelAdmin run atomic transaction on the correct database.,"When settings.DATABASES['default'] is set to empty dict Django Admin tries to perform transaction.atomic on dummy database, and it ends in raising exception, when trying to change, add or delete record. This patch specifies the ""using"" argument for transaction.atomic, taken from db routers.
",juntatalor,None,2016-02-02T16:43:34Z,2016-08-22T16:52:25Z
6075,Add missing word from forms docs,,adamcheasley,None,2016-02-02T10:13:46Z,2016-02-03T15:51:59Z
6074,update xhtml2pdf url,"The old url site xhtml2pdf.com is now rendering a ""free dating website"" so better redirect to github repo.
",velvetkeyboard,None,2016-02-02T02:00:05Z,2016-02-02T12:37:22Z
6073,Fixed #26155 -- Skip URL checks if no ROOTURL_CONF,"If you try to create a migration with makemigrations it throws an error
because it is running the check_url_config system check. This fix skips
the check if there is no ROOT_URLCONF in the settings.
",buddylindsey,None,2016-02-01T17:51:16Z,2016-02-01T19:04:57Z
6072,Fixed #26155 -- Skip URL checks if no ROOTURL_CONF,"If you try to create a migration with makemigrations it throws an error
because it is running the check_url_config system check. This fix skips
the check if there is no ROOT_URLCONF in the settings.
",buddylindsey,None,2016-02-01T17:49:57Z,2016-02-01T17:54:36Z
6071,Fixed 10686 -- Added abstract permission inheritance,"I'm awaiting feedback before rebasing the commits into a single commit.
",sergei-maertens,None,2016-02-01T17:18:54Z,2016-02-22T21:24:16Z
6070,Clarifying tutorial comment,"I am new to django, and found this step a little confusing.
I thought it needed to be copied like the attributes above in the
question; model and template_name, however it actually means to leave
the function as it is.
Hopefully, this can make things a little clearer for newbies like me.
",KimberleyLawrence,None,2016-01-31T23:04:12Z,2016-02-01T21:38:39Z
6069,Fixed #26159 -- Added link to pagination comparison grid,,guettli,None,2016-01-31T21:13:56Z,2016-01-31T22:14:09Z
6068,Fixed #25758 -- Defaulted to current language FORMATs in date/time filters,"Thanks Ali Lozano for the report and the initial patch.
",claudep,None,2016-01-30T13:51:26Z,2016-01-30T16:06:16Z
6067,Fixed #26156 -- Added createsuperuser instructions to django admin si…,"…te docs
",yoongkang,None,2016-01-30T04:34:24Z,2016-01-30T17:33:07Z
6066,Fixed #26263 -- Deprecated Context.has_key().,"Doesn't seem to be documented, but might need to go through a deprecation anyway? (at least a mention in the release notes would be added)
https://groups.google.com/d/topic/django-developers/QoMsYiBo_80/discussion
",timgraham,None,2016-01-29T23:19:10Z,2016-02-23T16:30:59Z
6065,Fixed #26134 -- Used new OpenGIS names for recent MySQL,"Thanks František Malina for the report.
",claudep,None,2016-01-29T22:26:43Z,2016-01-29T22:58:55Z
6064,Fixed #14402 -- Fixed not displaying help_text for ManyToMany raw_id_fields.,,sasha0,None,2016-01-29T21:22:32Z,2016-01-30T17:43:23Z
6063,Fixed #26153 -- Reallowed Q-objects from get_extra_descriptor_filter(),,akaariai,None,2016-01-29T09:08:32Z,2016-02-11T14:01:12Z
6062,feature: ModelChoiceField with whole obj,"Allows template to use all available
model-properties, not just pk and unicode.

I like to tinker around with the HTML myself, so I usually need more information about the object than just its name/label. In my own django, I simply use

```
def choice(self, obj):
    return (self.field.prepare_value(obj), obj)
```

I guess we need a sanitised **unicode** method, which I used in this commit. I hope I didn't overlook any reason why we can't have the complete object in the template.
",GammaSQ,None,2016-01-28T21:39:06Z,2016-01-28T23:23:34Z
6061,Fixed #26129 -- Made invalid forms display initial values of disabled fields.,"https://code.djangoproject.com/ticket/26129
",timgraham,None,2016-01-28T18:53:22Z,2016-01-29T13:09:20Z
6060,Fixed #26152 -- Documented how to avoid django.setup() deadlock in standalone scripts.,,hjwp,None,2016-01-28T18:14:57Z,2016-02-01T18:41:26Z
6059,Fixed #26151 -- Refactored MigrationWriter.serialize(),"The serializer() method had a McCabe score of 50, one
of the highest in the entire Django code base.

The serialization logic was moved into different Serialization
classes, and a Serializer factory returns the right
Serializer based on the value type.
",yoongkang,None,2016-01-28T15:24:38Z,2016-02-25T19:13:07Z
6058,Fixed #26147 -- Adjusted some expected values in GIS tests.,"https://code.djangoproject.com/ticket/26147
",timgraham,None,2016-01-28T14:32:17Z,2016-01-28T19:14:02Z
6057,Fixed #26137 -- Confirmed support for SpatiaLite 4.2/4.3 and added instructions.,"https://code.djangoproject.com/ticket/26137
",timgraham,None,2016-01-28T14:20:01Z,2016-01-29T13:53:16Z
6056,Moved assert to a new test with a more descriptive name,"For some reason this assert was in the settings reference test, which can be confusing.
",yoongkang,None,2016-01-28T12:08:29Z,2016-01-28T15:39:18Z
6055,Fixed #26150 -- Sorted app_labels in migrate command output,"Ticket: https://code.djangoproject.com/ticket/26150
",MarkusH,None,2016-01-28T06:57:21Z,2016-01-28T23:27:53Z
6054,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,"This is basically a rebase of existing patches from the original issue [(7923)](https://code.djangoproject.com/ticket/7923).

It also uses the current admin site for reversing URLs, rather than the default admin instance (which I noticed right away on my test app which uses several admin instances).

In case the user does not have permissions, a 403 will be returned when trying to follow the link. This is the same behaviour the magnifying glass has, and cannot be cleanly avoided.
",WhyNotHugo,None,2016-01-28T02:56:08Z,2016-08-02T09:06:51Z
6053,[WIP #26142] Check FormSet has as many bound forms as initial forms,"For https://code.djangoproject.com/ticket/26142, here's an initial attempt at supporting `can_create=False` on Formsets by validating that the number of submitted forms matches the number of initial forms.
",Mortal,None,2016-01-27T21:14:38Z,2016-02-10T19:13:24Z
6052,Fixed #20415 -- Ensured srid isn't localized in OpenLayers JavaScript.,"https://code.djangoproject.com/ticket/20415

(no test as in 0a29057ebea4335d503e373e4526b1c62c15bcdc)
",timgraham,None,2016-01-27T14:53:15Z,2016-01-28T23:02:49Z
6051,Fixed #26144 -- Added warning when dumping proxy model,,yoongkang,None,2016-01-27T12:37:36Z,2016-02-05T00:53:13Z
6050,Fixed #26144 -- Added warning when dumping proxy model,,yoongkang,None,2016-01-27T11:16:27Z,2016-01-27T12:05:27Z
6049,Fixed #26136 -- Removed deprecated code from example,,yoongkang,None,2016-01-27T10:36:39Z,2016-01-27T14:08:18Z
6048,Fixed #24974 -- Fixed inheritance from modelform_factory forms,"When a form created using modelform_factory is inherited, the
initialization of the subclass will be different from the base class.

Consider the case when formfield_callback is passed to modelform_factory.
The formfield_callback information is lost after initialization of the
base class.

This commit throws the formfield_callback into the Meta
class of the base class, so that the subclass can use it instead
of the default.
",yoongkang,None,2016-01-27T05:16:43Z,2016-02-26T17:28:42Z
6047,Refs #26142 -- Documented that Formset's extra=0 doesn't prevent creating objects.,"https://code.djangoproject.com/ticket/26142
",timgraham,None,2016-01-27T00:12:15Z,2016-02-02T14:11:54Z
6046,Fixed #24782 -- Added assertFormValid and assertFormNotValid methods,"Adds two functions under `django.test.testcases.SimpleTestCase` as instructed in this #4645 that has so far been closed:
- `assertFormValid`
- `assertFormNotValid`

The two functions are inspired by [this comment](https://github.com/django/django/pull/4645#issuecomment-107254019) by @mjtamlyn .

Unit tests have also been added for each function covering the possible use cases.

Since this is my first PR to an open-source project _ever_ I'm appreciative of feedback you will (should) have.

P.S. This PR has started off by applying user `delgiudices` work (1st commit).
Commits are however squashed.
",jvzammit,None,2016-01-26T18:05:26Z,2016-07-15T18:54:22Z
6045,Refs #17208 -- Converted changeform_view and delete_view into CBV,"Abstracted the changeform_view to a CBV.

Hopefully this will make it more readable.
",yoongkang,None,2016-01-26T12:23:56Z,2016-03-26T00:25:36Z
6044,Refs #24007 -- Removed an apps.populate() call in model unpickling that can cause deadlocks.,"discussion: https://groups.google.com/d/topic/django-developers/YvEzdQU4qUU/discussion

(ticket to be created -- I guess this should this be backported with a note about needing to fix any affected scripts?)
",timgraham,None,2016-01-26T12:05:47Z,2016-02-10T08:37:18Z
6043,Fixed #26138 -- Ensured geometry_field's geometry is always serialized,"Thanks Bernd Schlapsi for the report.
",claudep,None,2016-01-26T10:09:26Z,2016-01-28T07:53:20Z
6042,Disable contrib apps migrations backport,,charettes,None,2016-01-26T03:04:58Z,2016-01-26T04:23:10Z
6041,Refs #26112 -- Fixed aggregate GIS test on Oracle,"This fixes the test -- but is it the right fix?

Is it OK in this case that `Sum` still aggregates over (single) records? This aggregation necessitates the unintuitive and expensive (causes a database round-trip per row later) `defer()` call.

Should the `Area` function be modified to return a `FloatField` on Oracle?
",shaib,None,2016-01-25T23:09:25Z,2016-02-09T22:28:51Z
6040,SelectFilter2: remove inaccurate comment,"There is no addevent.js file in the django repository, so SelectFilter2
doesn't depend on it.
",nikolas,None,2016-01-25T16:07:16Z,2016-01-25T19:34:16Z
6039,Fixed #26120 -- Made HStoreField cast keys & values to strings,"The HStoreField will now convert all keys & values to string before
being saved to the database.
",gchp,None,2016-01-25T12:34:46Z,2016-01-29T14:55:55Z
6038,Fixed #26134 -- Updated MySQL GIS function names to OpenGIS standard,"https://code.djangoproject.com/ticket/26134

Fix deprecation warnings such as:
    .../django/db/backends/mysql/base.py:112:
    Warning: 'GEOMFROMTEXT' is deprecated and will be removed in a future release.
    Please use ST_GEOMFROMTEXT instead
",fmalina,None,2016-01-25T12:33:18Z,2016-01-28T12:31:03Z
6037,Fixed #25731 -- Removed unused choices kwarg for Select.render(),"WIP for https://code.djangoproject.com/ticket/25731
",jpic,None,2016-01-25T04:26:39Z,2016-02-17T22:21:54Z
6036,Fixed #26117 -- Consulted database routers in initial migration detection.,"Ticket: https://code.djangoproject.com/ticket/26117#ticket

The bug is that db.migrations.executor.py is always checking the default db when deciding if all tables existed in the initial migration. However, some of those models might not exist in that db if you've got a multi-db environment. This pull request updates the method to include a call to routers.py's `allow_migrate()` when checking migration for the model. Tests are included that fail without this fix and pass with it. 
",scottsexton,None,2016-01-25T00:36:00Z,2016-02-25T13:36:52Z
6035,Fixed #26124 -- Added missing code formatting to docs headers.,,rowanv,None,2016-01-24T22:03:11Z,2016-02-01T15:45:13Z
6034,Fixed #26132 -- Discouraged use of TransactionTestCase.fixtures.,"https://code.djangoproject.com/ticket/26132#ticket
",timgraham,None,2016-01-24T20:37:30Z,2016-02-02T14:12:03Z
6033,Refs #26015 -- Added regression test for an empty sitemap.,"https://code.djangoproject.com/ticket/26015
",soon,None,2016-01-24T19:44:03Z,2016-01-28T16:24:04Z
6032,Refs #26130 -- Converted changeform_view into CBV,"Abstracted the view to a CBV to make post/get
separation clearer.

Hopefully this will make it more readable.
",yoongkang,None,2016-01-24T13:03:47Z,2016-01-26T04:45:45Z
6031,Fixed #26097 -- Added password_validators_help_text_html to UserCreationForm for consistency with other django.contrib.auth forms.,"Ticket - https://code.djangoproject.com/ticket/26097
",sasha0,None,2016-01-24T09:27:06Z,2016-09-10T22:36:27Z
6030,Fixed #26122 -- Fixed copying a LazyObject,"Shallow copying of `django.utils.functional.LazyObject` or its subclasses has
been broken in a couple of different ways in the past, most recently due to
35355a4.  Now it should work correctly, along with some regression tests
similar to the existing ones for deepcopy.
",benjaminjkraft,None,2016-01-24T02:08:44Z,2016-01-26T12:00:17Z
6029,Fixed #26135 -- Fixed the migration questioner's handling of disabled apps.,"https://code.djangoproject.com/ticket/26135
",charettes,None,2016-01-23T20:01:40Z,2016-01-26T03:01:43Z
6028,Fixed #26125 -- Fixed E731 flake warnings.,,userimack,None,2016-01-23T17:45:08Z,2016-01-25T19:27:50Z
6027,Fixed typo errors,"Fixed typo errors in /django/tests/gis_tests/geoapp/test_functions.py and /django/tests/file_uploads/tests.py
",kai3n,None,2016-01-23T17:25:53Z,2016-01-23T17:46:46Z
6026,[wip] Proposal to change ModelAdmin API,"PR for review purposes.

Currently the BaseModelAdmin class has a method called formfield_for_dbfield which has a conditional block that in turn calls different formfield_for_\* methods depending on the type of database field it is handling. In order to do any custom logic to these fields we need to override these methods and/or pass in some arguments as kwargs to override attributes of the form field.

In my opinion, a more natural way is to let different objects handle the customization, rather than BaseModelAdmin. I'm proposing AdminField classes with a consistent API that others can subclass from and swap with the defaults if they desire. 
",yoongkang,None,2016-01-23T17:03:29Z,2016-01-24T04:14:14Z
6025,Fixed typo,"These are real typographical errors, huh?
",kai3n,None,2016-01-23T15:17:09Z,2016-01-23T17:32:38Z
6024,Refs #26089 -- Removed obsolete docs about custom user model testing.,"No one seems to use these models as they've been broken since Django 1.8.
The models will be moved in Django 1.10 (https://github.com/django/django/pull/5975).
",timgraham,None,2016-01-23T14:44:52Z,2016-02-02T13:56:06Z
6023,Removed unnecessary imports.,,knbk,None,2016-01-23T14:11:58Z,2016-01-23T14:37:30Z
6022,Removed unnecessary import,,yoongkang,None,2016-01-23T12:14:53Z,2016-01-23T12:34:25Z
6021,typo fix,"paramters -> parameters
",yevgnenll,None,2016-01-23T11:53:35Z,2016-01-23T13:05:47Z
6020,Adding Ola Sendecka to Team members,"Better late than never!
",asendecka,None,2016-01-23T11:24:16Z,2016-01-23T11:49:13Z
6019,Fixed typo in utils/functional.py,,dobestan,None,2016-01-23T09:36:41Z,2016-01-23T12:04:30Z
6018,Fixed #26093 -- Allowed escape sequences extraction by gettext on Python 3,"Thanks Sylvain Fankhauser for the report.
",claudep,None,2016-01-23T09:15:16Z,2016-01-23T13:02:23Z
6017,typo fix,"memoized -> memorized
",kai3n,None,2016-01-23T08:53:46Z,2016-01-23T12:53:31Z
6016,typo fix,,kai3n,None,2016-01-23T08:43:12Z,2016-01-23T08:44:06Z
6015,Refs #24046 -- POC for mark_for_escaping removal.,"This is what it might look like at the end of the deprecation period. 
",timgraham,None,2016-01-23T00:11:30Z,2016-03-17T17:51:58Z
6014,Fix capitalisation in admin index sidebar,"I think `action` should not have a capitol A here. 

Did not make a Trac ticket, but I had some IRC discussion with @funkybob, @mjtamlyn replied some time later with: `17:29 <+mjtamlyn> It's arguably wrong so a fair comment`
",jieter,None,2016-01-22T20:07:56Z,2016-01-22T20:56:59Z
6013,Fixed #26104 -- Fixed TypeError when passing number to forms.DurationField,,sasha0,None,2016-01-22T19:36:28Z,2016-01-22T21:29:22Z
6012,Fixed #26116 -- Corrected schema's test_alter_implicit_id_to_explicit.,"AUTOINCREMENT is dropped converting an AutoField to IntegerField
which isn't the point of this test. MySQL would warn or error about
this.

https://code.djangoproject.com/ticket/26116
",timgraham,None,2016-01-22T16:00:13Z,2016-01-22T18:09:14Z
6011,Fixed #25910 - Don't accept read-only property names in model ctors.,"This fixes the problem by only removing the item from kwargs after it has been determined that AttributeError isn't raised (e.g. due to trying to assign to a read-only property).
",xlq,None,2016-01-22T09:21:11Z,2016-01-22T18:35:02Z
6010,Fixed #26119 -- Fixed URLValidator crash on values with square brackets.,"This references https://code.djangoproject.com/ticket/26119

There is probably a solution to update the regular expression for this specific case but I thought catching the `ValueError` might be a good idea nonetheless
",EnTeQuAk,None,2016-01-22T04:36:16Z,2016-06-28T19:44:22Z
6009,Fixed #26118 - Added 'is' comparison operator to if tag.,,prestontimmons,None,2016-01-22T03:54:03Z,2016-01-22T20:35:54Z
6008,Fixed #25971 -- shouldn't send email if URL = Referer + '/',"If APPEND_SLASH is set and the referer is the URL without a trailing '/' then BrokenLinkEmailsMiddleware shouldn't send broken link email.
",harikrishnakanchi,None,2016-01-21T19:26:22Z,2016-03-08T14:27:47Z
6007,"Changed `action="".""` to `action=""""` in tests and docs.","`action="".""` strips query parameters from the URL, which is not usually what
you want.  Copy-paste coding of these examples could lead to difficult to
track down bugs, or even data loss if the query parameter was meant to alter
the scope of a form's POST request, so it is best fixed.
",spookylukey,None,2016-01-21T15:59:45Z,2016-01-21T19:00:44Z
6006,typo fix,"Typo fix in django.core.signing.py docstring
",kai3n,None,2016-01-21T14:37:49Z,2016-01-21T14:48:53Z
6005,Added query.add_rel_alias(),"The idea is that one can control explicitly join generation with
add_rel_alias. For example:

```
qs.add_rel_alias(friends1='friends', friends2='friends').filter(
   friends1__age__lte=50, friends2__height__gte=180)
```

is the same query as

```
qs.filter(friends__age__lte=50).filter(friends__height__gte=180)
```

Notably there are certain queries that can't be written without
add_rel_alias(). For example

```
qs.add_rel_alias(friends1='friends', friends2='friends').filter(
    ~Q(friends1__age__lte=50, friends2__height__gte=180))
```

Unforuntaely there are queries we can't handle yet. Any query that
would require pushing two multijoins into a single subquery fail
loudly currently. For example the query

```
qs.exclude(Q(friends1__age=50) | Q(friends2__height=180),
           Q(friends1__height=180))
```

will fail.

The add_rel_alias() can in future be used for limiting join results,
for example

```
qs.add_rel_alias(
    translation_fi=Relation('translations', only=Q(lang='fi')))
```

would effectively add the join

```
JOIN translations ON translations.article_id = article.id AND
    translations.lang = 'fi'
```

to the query.
",akaariai,None,2016-01-21T12:08:12Z,2016-02-20T12:38:35Z
6004,Fixed #26112 -- Error when trying to compute aggregates of GIS aggregates.,"The proposed solution sets the `output_field_class` on the `Area` GIS model lookup function to `FloatField`.
",yellowcap,None,2016-01-21T10:07:05Z,2016-01-22T18:42:13Z
6003,Fixed #26109 -- Raised a helpful error if loader.select_tamplate() is passed a string.,"Currently supplying a string to `select_template` raise an `IOError`, which is not meaningful. Here's a sample.

```
IOError at XXX
[Errno 21] Is a directory: u'xxx/site-packages/django/contrib/admin/templates'
```

It's better to check if `template_name_list` is actually a list (`Iterable`). If it is a string, suggest to use `get_template` function instead.

[Django ticket](https://code.djangoproject.com/ticket/26109)
",ahmohamed,None,2016-01-21T08:57:14Z,2016-01-26T01:27:46Z
6002,Fixed #25546 -- Prevented duplicate queries with nested prefetch_related().,"https://code.djangoproject.com/ticket/25546

@charettes: We already talked about this problem on IRC, here is a suggestion to fix it.
",francoisfreitag,None,2016-01-21T08:14:06Z,2016-01-29T14:54:52Z
6001,Update django.po,"add translations
",wavezhang,None,2016-01-21T03:32:37Z,2016-01-21T05:04:33Z
6000,Fixed #26107 -- Allows for negative integers in CommaSeparatedIngerField,"ticket for reference: https://code.djangoproject.com/ticket/26107#ticket
",cooperjbrandon,None,2016-01-20T20:53:12Z,2016-01-29T16:40:18Z
5999,Fixed #26092 -- regression in order_by with through models,,akaariai,None,2016-01-20T09:13:58Z,2016-01-21T00:16:11Z
5998,Fixed #22669 -- Fixed QuerySet.bulk_create() with empty model fields on Oracle.,"I did the minimal example for reproducing this bug. Model looks very simple:

```
class ProbaModel(models.Model):
    num = models.IntegerField(null=True, blank=True)
```

When i tried to run the following test code:

```
class ProbaTestCase(TestCase):
    def test_bulk_create(self):
        ProbaModel.objects.bulk_create(
            [
                ProbaModel(num=1),
                ProbaModel()
            ]
        )
```

I got an

```
Traceback (most recent call last):
  File ""/home/sns/devel/proba/proba/app1/tests.py"", line 10, in test_bulk_create
    ProbaModel()
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/models/manager.py"", line 160, in bulk_create
    return self.get_queryset().bulk_create(*args, **kwargs)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/models/query.py"", line 359, in bulk_create
    self._batched_insert(objs_without_pk, fields, batch_size)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/models/query.py"", line 838, in _batched_insert
    using=self.db)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/models/manager.py"", line 232, in _insert
    return insert_query(self.model, objs, fields, **kwargs)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/models/query.py"", line 1514, in insert_query
    return query.get_compiler(using=using).execute_sql(return_id)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py"", line 903, in execute_sql
    cursor.execute(sql, params)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/backends/util.py"", line 53, in execute
    return self.cursor.execute(sql, params)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/utils.py"", line 99, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/backends/util.py"", line 53, in execute
    return self.cursor.execute(sql, params)
  File ""/home/sns/devel/proba/local/lib/python2.7/site-packages/django/db/backends/oracle/base.py"", line 816, in execute
    return self.cursor.execute(query, self._param_generator(params))
DatabaseError: ORA-01790: expression must have same datatype as corresponding expression
```
",slavama,None,2016-01-20T01:52:40Z,2016-01-20T16:18:57Z
5997,Fixed #24793 -- Unified temporal subtraction support.,,charettes,None,2016-01-20T01:45:11Z,2016-02-26T17:26:18Z
5996,[WIP] Declarative FormSet,,auvipy,None,2016-01-19T10:58:03Z,2016-02-10T18:53:08Z
5995,Fixed #26022 -- Cleaned up assertRaises* test assertions.,"Convert `assertRaises` and `assertRaisesMessage` to ontext manager version.

Convert without regular experesion `six.assertRaisesRegex` tests to `assertRaisesMessage` .
",hramezani,None,2016-01-18T20:22:07Z,2016-01-29T18:40:43Z
5994,Fixed #26095 -- Made defaultdict.items and dict.items work similarly in the Django template language.,"https://code.djangoproject.com/ticket/26095
",kbr,None,2016-01-18T18:36:29Z,2016-01-20T01:42:38Z
5993,Fixed #26094 -- Fixed CSRF behind a proxy (settings.USE_X_FORWARDED_PORT=True).,"CSRF fails behind proxy because the request.META['SERVER_PORT'] returns the server port and not the real port used by the client to access the server.
Using the method request.get_port() will use HTTP_X_FORWARDED_PORT header if present. (settings.USE_X_FORWARDED_PORT must be enabled)
",chemary,None,2016-01-18T14:05:49Z,2016-01-20T23:24:12Z
5992,Fixed #21936 -- Refactored DeleteView to be compatibale with SuccessMessageMixin,"docs and release notes remain
",auvipy,None,2016-01-18T12:24:18Z,2017-05-24T05:23:56Z
5991,small doc fixes on docs/index.txt,"no tickets as it seems to be very trivial doc fix
",auvipy,None,2016-01-18T06:44:53Z,2016-01-18T15:02:13Z
5990,Fix example in pagination docs,"We need to call the function to get the number.
",roks0n,None,2016-01-17T17:22:58Z,2016-01-18T09:22:10Z
5989,Add 2016 to License,,prayagverma,None,2016-01-17T14:58:13Z,2016-01-19T11:44:24Z
5988,Corrected English name of nb language.,"See for example http://www.loc.gov/standards/iso639-2/php/code_list.php , where the name is listed as ""Norwegian Bokmål"".
",petterreinholdtsen,None,2016-01-16T10:31:02Z,2016-01-20T22:28:53Z
5987,Removed unnecessary NewLine from Textarea From Widget,"When building a form with Django and using a Textarea Widget, the value rendering is always prepended by a NewLine (`\r\n`).
This makes the textarea never empty when it is, and changes the value for the following submissions.

This commit fixes this behaviour with just a trivial change.

Explanation:

When there is no (or an empty) value defined for the textarea, it shall be rendered as

``` html
<textarea></textarea>
```

and not as

``` html
<textarea>
</textarea>
```

At least in XHTML5 documents, this is a major difference.

Let's see what happens with a value:

``` text
This\nis\na\nvalue
```

This is currently rendered as this:

``` html
<textarea>
This
is
a
value</textarea>
```

Which renders in the browser to:

``` text
+-------------------------------------------+
|                                           |  <- empty line!
| This                                      |
| is                                        |
| a                                         |
| value                                     |
+-------------------------------------------+
```

After applying my patch, the rendering changes to this:

``` html
<textarea>This
is
a
value</textarea>
```

Which (correctly) renders in the browser to:

``` text
+-------------------------------------------+
| This                                      |
| is                                        |
| a                                         |
| value                                     |
+-------------------------------------------+
```

As a workaround to get around with the current implementation, I've overridden the `render` method of the original Widget class:

``` python
from django import forms
from django.forms.utils import flatatt
from django.utils.encoding import force_text
from django.utils.html import format_html

class FixedTextarea(forms.Textarea):

    def render(self, name, value, attrs=None):
        if value is None:
            value = ''
        final_attrs = self.build_attrs(attrs, name=name)
        return format_html('<textarea{}>{}</textarea>',
                           flatatt(final_attrs),
                           force_text(value))
```
",edelbluth,None,2016-01-16T07:58:58Z,2016-01-18T01:29:13Z
5986,Refs #26085 : check that ForeignKey to Site is not equal to None.,"My first PR to fix Refs #26085. Feedback on the PR welcomed.
",jibaku,None,2016-01-15T20:15:44Z,2016-04-08T11:46:21Z
5985,Typo fix in RawQuery.build_filter docstring,"Signed-off-by: martin f. krafft madduck@madduck.net
",madduck,None,2016-01-15T07:49:16Z,2016-01-15T12:14:41Z
5984,Fixed #25848 -- Set template origin on each node.,"Prior to 55f12f8709, the template origin was available on each node via
`self.token.source[0]`. This behavior was removed when debug handling was
simplified, but 3rd-party debugging tools still depended on it's presence.
This updates the Parser to set origin on individual nodes. This enables the
source template to be determined even when template extending or including is
used.
",prestontimmons,None,2016-01-15T02:46:05Z,2016-01-26T11:24:12Z
5983,Refs #26086 -- Didn't allow admin.site.register([]) or admin.site.unregister([]),,anabelensc,None,2016-01-14T18:56:40Z,2016-01-15T09:08:37Z
5982,Refs #21221 -- Added test for legacy static usage in form Media,"Before cf546e1 static files in form or widget `Media` where usually
servered using the
`django.contrib.staticfiles.templatetags.staticfiles.static`
template tag. This included the `django.contrib.admin` in various
cases. This test case insured compatibility with third party code
that might still use the `static` templatetag within form or
widget `Media` classes.
",codingjoe,None,2016-01-14T17:24:33Z,2016-01-19T12:01:52Z
5981,Add documentation about Django CSRF support in AngularJS,"This might be useful for some people.
",dbrgn,None,2016-01-14T14:05:22Z,2016-01-15T15:53:57Z
5980,Fixed #23971 - Allow filtering of None on null date fields,"Django doesn't allow use to filter by dates where the date field is null.
Added options for filtering Has validate date and No date, which will only be displayed when the date field is null.
",rynomster,None,2016-01-14T08:35:14Z,2016-02-02T17:07:14Z
5979,Fixed #25999 -- Removed promotion of RemovedInNextVersionWarning to loud by default.,"https://code.djangoproject.com/ticket/25999

No release notes because there aren't any RemovedInDjango111Warnings. Will add release notes for Django 1.11 though since the RemovedInDjango20Warnings won't be loud as would be expected based on the old behavior.
",timgraham,None,2016-01-14T00:12:30Z,2016-01-14T14:43:33Z
5978,"Fixed #26078 -- Docs: More explicit ""old"" vs ""new""",,guettli,None,2016-01-13T11:32:18Z,2016-01-15T19:36:49Z
5977,Fixed #25850 -- Made migrations fail loudly on inconsistent history,"I completed fix from #5922 pull request.
",Uran198,None,2016-01-13T09:09:00Z,2016-04-05T12:53:50Z
5976,Fixed #22268 : Document values_list() behavior for ManyToManyField,"Added an example in the values_list() reference to illustrate the behavior discussed in the ticket #22268

https://code.djangoproject.com/ticket/22268
",saivnm5,None,2016-01-13T09:01:46Z,2016-02-02T12:28:59Z
5975,Fixed #26089 -- Removed custom user models from public API.,,charettes,None,2016-01-12T22:58:00Z,2016-02-04T16:25:29Z
5974,Fixed #26074 -- vendor OpenLayers js and associated files,,jschneier,None,2016-01-12T21:02:55Z,2016-01-12T23:08:13Z
5973,Refs #22170 -- Removed MIGRATION_MODULES workaround in the testsuite.,,charettes,None,2016-01-12T20:46:07Z,2016-01-12T22:29:36Z
5972,Add test for unicode request param parsing,"Shows the django doesn't have the unicode request param parsing bug.
",alexmadjar,None,2016-01-12T02:05:59Z,2016-01-12T02:06:28Z
5971,Fixed #23868 -- Added support for non-unique django-admin options in docs.,"Also documented missing short command line options to fix #24134.

https://code.djangoproject.com/ticket/23868
https://code.djangoproject.com/ticket/24134
",timgraham,None,2016-01-12T02:05:25Z,2016-01-14T23:25:04Z
5970,Corrected a few typos in dispatcher comments.,"Stumbled across this during a pdb journey.
",jarekwg,None,2016-01-12T01:46:40Z,2019-05-07T14:04:52Z
5969,[1.9.x] Fixed #25858 -- Bound abstract model application relative relationships.,"Thanks to Karl Hobley for the report and Markus, Shai, Aymeric for their input
and Tim for the review.

Backport of bc7d201bdbaeac14a49f51a9ef292d6312b4c45e from master
",charettes,None,2016-01-11T19:09:48Z,2016-01-11T19:27:33Z
5968,Fixed #26048 -- Made admin selenium tests use implicitly_wait(),,timgraham,None,2016-01-11T17:04:29Z,2016-01-11T19:17:00Z
5967,[1.8.x] Fixed #26071 -- Fixed crash with __in lookup in a Case expression.,"This commit fixes https://code.djangoproject.com/ticket/26071#ticket for django's 1.8 branch

This changes were being picked from afe0bb7b13bb8dc4370f32225238012c873b0ee3.

This also adds a test for this specific scenario.
",albertein,None,2016-01-11T16:57:10Z,2016-01-13T16:40:12Z
5966,Remove use of locals for print formatting,"From the django-dev IRC channel;

```
12:50 <+mYk> interestingly, Django using the `format_string % locals()` hack.

17:01 <+mYk> FunkyBob: I support this change
```
",funkybob,None,2016-01-10T22:08:32Z,2016-01-11T12:14:42Z
5965,Fix a few spelling errors,"Related to [#25755](https://code.djangoproject.com/ticket/25755).

The section [""Commonly used terms""](https://docs.djangoproject.com/en/1.9/internals/contributing/writing-documentation/#commonly-used-terms) in the docs also recommends 'website'.
",pp,None,2016-01-10T17:28:29Z,2016-01-11T23:06:17Z
5964,Fixed #25858 -- Bound abstract model application relative relationships.,"Thanks to Karl Hobley for the report and Markus, Shai, Aymeric for their input.
",charettes,None,2016-01-09T23:11:19Z,2016-01-11T19:01:20Z
5963,Fixed #26063 -- Crash when passing > 2000 params.,"If SQLITE_MAX_VARIABLE_NUMBER (default = 999) is changed at compile time
to be greater than SQLITE_MAX_COLUMN (default = 2000), which Debian does
by setting the former to 250000, Django raised an exception on queries
containing more than 2000 parameters when DEBUG = True.
",aaugustin,None,2016-01-09T20:35:38Z,2016-01-21T09:49:49Z
5962,Fixed #26060 -- Fixed regression for OneToOneField backward reference in a read-only field in the admin,,sasha0,None,2016-01-09T20:30:38Z,2016-01-21T18:32:22Z
5961,"Update to modelforms.txt changed a "" to a '",,bmsleight,None,2016-01-09T17:53:10Z,2016-01-09T18:02:34Z
5960,Fixed a wrongly used translation string in admin,"This small change uses a translation string that already exists (and is being used in the `title` field of the same page) and fixes a Grammer mistake for German and possibly other languages.
",raphaelm,None,2016-01-09T14:30:01Z,2016-01-15T12:43:28Z
5959,Added missing bracket in docs/topics/db/queries.txt,,anabelensc,None,2016-01-09T10:46:46Z,2016-01-09T17:18:33Z
5958,contrib/auth/hashers: fix typo in BCryptPasswordHasher docstring,"There is no BCryptSHA512PasswordHasher.
",mattrobenolt,None,2016-01-09T10:11:35Z,2016-01-09T17:15:51Z
5957,"Fixed #24109, #26064 -- Moved operation reduction logic to their own class and allowed RunPython/SQL to be removed when squashing.",,charettes,None,2016-01-09T08:14:12Z,2016-01-23T19:47:05Z
5956,Add Filtered Aggregate to Postgres contrib app,"This adds support for PG9.4 ""aggrgate() FILTER (WHERE ...)"" to annotate.
",funkybob,None,2016-01-09T04:57:23Z,2016-02-23T16:20:18Z
5955,Refs #25165 -- Fixed JSON serialization for delete popup in the admin.,,timgraham,None,2016-01-09T00:57:04Z,2016-01-09T19:11:57Z
5954,Ticket #26062: Added HttpResponseCensored class with docs,"This PR for #26062, which add HttpResonseCensored with status code 451 to Django.
",adminq80,None,2016-01-08T23:40:53Z,2016-01-08T23:48:29Z
5953,Fixed #24980 -- Fixed incorrect extraction of UTC time into local tim…,"…e in admin calendar widget
",sasha0,None,2016-01-08T20:52:33Z,2016-01-08T22:40:53Z
5952,Refs #25165 -- Removed redundant HTML unescaping in admin related popups.,"Because we now load data into the page via JSON, we don't need to
unescape that data anymore.
",graingert,None,2016-01-08T19:59:18Z,2016-01-08T23:24:50Z
5951,Fixed #25385 -- Allowed importing views.generic.View from views.View.,"Changes in views/**init**.py, docs and release notes
",varunsharma,None,2016-01-08T17:58:58Z,2018-02-26T15:01:23Z
5950,Fixed #21608 -- Prevented logged out sessions being resurrected by concurrent requests.,,tltx,None,2016-01-08T16:11:49Z,2018-07-20T17:06:47Z
5949," [wip] First stab at ""new"" middleware handling 2.","https://github.com/django/deps/blob/master/draft/0005-rethinking-middleware.rst
- [x] conversion mixin
- [x] handler updates
- [ ] deprecation path
- [ ] tests for handler updates
- [ ] add warning in checks framework if `MIDDLEWARE_CLASSES` and `MIDDLEWARE` are both set
- [ ] update `decorator_from_middleware`
- [ ] convert `SessionMiddleware`
- [ ] convert `AuthenticationMiddleware`
- [ ] convert `XViewMiddleware`
- [ ] convert `CommonMiddleware`
- [ ] convert `BrokenLinkEmailsMiddleware`
- [ ] convert `CsrfViewMiddleware`
- [ ] convert `SecurityMiddleware`
- [ ] convert `MessageMiddleware`
- [ ] convert `XFrameOptionsMiddleware`
- [ ] convert `RemoteUserMiddleware` and `PersistentRemoteUserMiddleware`
- [ ] convert `FlatpageFallbackMiddleware`
- [ ] convert `RedirectFallbackMiddleware`
- [ ] convert `ConditionalGetMiddleware`
- [ ] convert `CurrentSiteMiddleware`
- [ ] convert `UpdateCacheMiddleware`, `FetchFromCacheMiddleware`, and `CacheMiddleware`
- [ ] convert `LocaleMiddleware`
- [ ] convert `GZipMiddleware`
- [ ] documentation
- [ ] document that new-style middleware sees only the changes made by middleware upstream from it, and is skipped entirely if a downstream middleware short-circuits. whereas previously `process_response` would see all responses, even those returned from `process_request` or `process_exception` of other middleware.
- [ ] document that middleware which catches known exception types (e.g. 404 or 403) and converts them to responses, will bypass the usual exception handler systems
- [ ] document that middleware which wants to do something to all (e.g.) 404 responses needs to both catch `Http404` and look for regular 404 responses
",apollo13,None,2016-01-08T15:59:53Z,2016-04-02T09:33:21Z
5948,"Refs #25165 -- Fixed failure of admin's ""Add another"" popup to close.",,timgraham,None,2016-01-08T15:24:21Z,2016-01-08T16:48:44Z
5947,Fixed #26034 -- Fixed incorrect index handling on PostgreSQL on Char/TextField with unique=True and db_index=True.,"https://code.djangoproject.com/ticket/26034
",timgraham,None,2016-01-08T01:11:08Z,2016-01-08T19:18:37Z
5946,Fixed #25928 -- Clarified documentation on USE_THOUSAND_SEPARATOR,,timgraham,None,2016-01-07T19:23:24Z,2016-01-07T19:32:50Z
5945,[WIP] Fixed 26029 -- Configurable file storages backends,,sasha0,None,2016-01-07T16:37:48Z,2016-08-05T15:28:38Z
5944,Refs #24855 -- fixed typo in 1.10 release notes,,alasdairnicol,None,2016-01-07T16:08:28Z,2016-01-07T16:39:05Z
5943,Fixed #26038 -- Changed FileSystemStorage defaults on setting change.,,charettes,None,2016-01-07T04:35:28Z,2016-01-07T17:38:31Z
5942,Used setupTestData in m2m_through tests.,,charettes,None,2016-01-07T01:40:05Z,2016-01-07T02:24:47Z
5941,Refs #8548 -- Removed a workaround for lengthy verbose name.,,charettes,None,2016-01-07T01:37:34Z,2016-01-07T02:00:19Z
5940,Fixed #26046 -- Fixed a crash with translations and Django-unknown language code,"Thanks Jens Lundstrom for the report.
",claudep,None,2016-01-06T19:03:54Z,2016-01-06T19:32:53Z
5939,Fixed #25945 -- Allowed dependencies on partially applied squashed migrations.,"New migrations can now freely refer to squashed migrations as their
dependencies. Earlier, attempting to depend on a squashed migration
that had only partially run would result in a NodeNotFound error.
",jarekwg,None,2016-01-06T15:09:48Z,2019-05-07T14:04:36Z
5938,[WIP] On the search for a trace :D,,apollo13,None,2016-01-06T14:14:42Z,2016-01-08T15:34:44Z
5937,Fixed #26039 -- Unwrapped nested partials in URL reversal.,"Fix https://code.djangoproject.com/ticket/26039
",gst,None,2016-01-06T14:04:09Z,2016-01-07T00:40:33Z
5936,Fixed #19527 -- Allowed QuerySet.bulk_create() to set the primary key of its objects.,"PostgreSQL supports RETURNING id when doing a bulk create. With this,
we can set the primary keys on the newly saved objects from the keys
that the database supplied.

Addresses #19527
Rebasing #5166 to Django 1.10
",blablacio,None,2016-01-06T13:27:22Z,2016-07-17T08:49:00Z
5935,Fixed #26026 -- Checked if the QuerySet is empty,"https://code.djangoproject.com/ticket/26026
",andersonresende,None,2016-01-06T02:52:14Z,2016-01-07T15:58:39Z
5934,Fixed a flaky i18n selenium test: test_javascript_gettext.,,timgraham,None,2016-01-06T00:53:11Z,2016-01-07T00:56:37Z
5933,Fixed #26035 -- Prevented user-tools from being visible on the admin logout page.,"The user-tools block is no longer visible on the ""logged out"" page when the user has logged out
",scottpashley,None,2016-01-05T15:34:02Z,2016-01-06T19:04:30Z
5932,Fixed #25878 -- Documented requirement that handler404 return a 404 response.,"https://code.djangoproject.com/ticket/25878
",timgraham,None,2016-01-05T01:13:08Z,2016-01-05T17:46:20Z
5931,[1.9.x] Fixed #26026 -- Checked if the QuerySet is empty,"https://code.djangoproject.com/ticket/26026
",andersonresende,None,2016-01-05T00:42:39Z,2016-01-05T11:58:49Z
5930,Skipped a dateformat test on Windows as needed.,"Refs 1014ba026e879e56e0f265a8d9f54e6f39843348
",timgraham,None,2016-01-05T00:09:26Z,2016-01-05T18:10:08Z
5929,Typo in comment,"It's also unclear what ""that is done upper"" means in the same comment, but I didn't want to guess in this pull request. Perhaps it means, ""that is done earlier""?
",donkirkby,None,2016-01-04T23:28:00Z,2016-01-04T23:39:19Z
5928,Refs #25995 -- Documented that JSONField doesn't handle sophisticated serialization.,,timgraham,None,2016-01-04T16:17:43Z,2016-01-09T00:56:31Z
5927,Checking of a string in pattern.regex,"You use the check_pattern_startswith_slash method on a string and the whole thing breaks. 
First you have to look if this ""pattern"" variable is a RegexURLPattern and then you can access in the method check_pattern_startswith_slash
pattern.regex.pattern
",bykof,None,2016-01-04T13:41:40Z,2016-01-04T14:03:45Z
5926,Using curses.ascii.isascii to check if char is ascii,,IuryAlves,None,2016-01-04T03:13:42Z,2016-01-04T18:44:10Z
5925,Added extra step to normalising squashed migration,"Added an extra step to clarify what needs to be done to transition from a squashed migration to a regular migration. It may not be obvious to everyone that this doesn't happen automatically! (Hopefully this will all be automated in the future with a `transitionsquashedmigrations` management command anyway..)

I'm guessing this is sufficiently trivial to not warrant a ticket.. (sorry if it's not, I'm new :P)
",jarekwg,None,2016-01-03T12:32:03Z,2019-05-07T14:04:12Z
5924,Fixed #26020 -- Changed header stylings in doc,"Changed the header stylings in docs. Added documentation for header
styling. Also removed unused top level "".. _ links"" and changed
referencing links.
",elifkus,None,2016-01-03T10:57:30Z,2016-01-22T17:15:40Z
5923,Fixed #26020 -- Changed header stylings in doc,"Changed the header stylings in docs. Added documentation for header
styling. Also removed unused top level  "".. _ links"" and changed
referencing links.
",elifkus,None,2016-01-03T09:03:23Z,2016-01-03T09:18:36Z
5922,Fixed #25850 -- Made migrations fail loudly on inconsistent history,,Uran198,None,2016-01-03T07:46:58Z,2016-02-08T17:58:16Z
5921,Refs #25165 -- Fixed JSON serialization for add/edit using popup in the admin.,"https://code.djangoproject.com/ticket/25165#comment:6
",sasha0,None,2016-01-03T00:44:31Z,2016-01-08T17:32:02Z
5920,Fixed #21549 -- Fixture loading warning when the file is not found should be an exception,"See the report description: [#21549](https://code.djangoproject.com/ticket/21549)

Thanks to mpasternak for the report
",soon,None,2016-01-02T19:17:20Z,2016-01-05T00:43:59Z
5919,Fixed #26024 -- Fixed regression in ConditionalGetMiddleware ETag support.,,samifahed,None,2016-01-02T18:10:09Z,2016-01-05T14:40:25Z
5918,Refs #26011 -- Fixed AttributeError in test_port_bind test.,"https://code.djangoproject.com/ticket/26011
",knbk,None,2016-01-02T15:26:53Z,2016-01-02T16:03:55Z
5917,Fixed #19527 -- Allow QuerySet.bulk_create to set the primary key of its objects,"Based on https://github.com/django/django/pull/5166 .
",alesasnouski,None,2016-01-02T14:51:00Z,2016-03-02T19:35:23Z
5916,Fixed #25316 -- Fixed a crash with order_by() and values() after annotate().,"https://code.djangoproject.com/ticket/25316
",timgraham,None,2016-01-02T11:40:13Z,2016-01-02T13:30:28Z
5915,Fixed #26009 -- Fixed contenttypes_tests isolation.,"https://code.djangoproject.com/ticket/26009
",timgraham,None,2016-01-02T11:04:14Z,2016-01-04T16:53:05Z
5914,Added a missing import to tutorial 3.,,userimack,None,2016-01-02T09:59:28Z,2016-01-02T14:39:51Z
5913,Fixed #26008 -- Added parallel argument to paired_tests and bisect_tests,,Uran198,None,2016-01-02T06:47:02Z,2016-01-02T10:19:04Z
5912,Fixed #26022 -- Used the context manager version of assertRaisesMessage in some tests.,"rewrite django admin register decorator some test
",hramezani,None,2016-01-01T12:25:29Z,2016-01-03T19:30:27Z
5911,Fixed #26021 -- Standardized on hanging indent in documentation.,"https://code.djangoproject.com/ticket/26021
",anurag-ks,None,2016-01-01T10:47:55Z,2016-01-02T19:22:26Z
5910,Made cosmetic cleanups in middleware tests.,,timgraham,None,2015-12-31T14:24:37Z,2015-12-31T15:34:27Z
5909,Fixed #23372 -- Made loaddata faster if it doesn't find any fixtures.,"Django's test suite often tries to load fixture files from apps that have
no fixtures at all. This creates a lot of unnecessary disabling and
enabling of constraints which can be expensive on some database.

To speed this up, loaddata now first checks if any fixture file matches.
If no fixture file is matched, then the command exits before disabling
and enabling of constraints is done.

The main benefit of this change is seen on MSSQL, where tests on
Django 1.8 run hours faster.
",timgraham,None,2015-12-31T13:41:11Z,2015-12-31T14:05:44Z
5908,[1.9.x] Fixed #25068 -- Take care of metaclasses when rendering model state.,"Original ticket: https://code.djangoproject.com/ticket/25068
First proposed fix: #4968

I also encountered the same problem as kosz85. 
I have included the relevant test from the pull request 4968. 
It seems to make no difference to the test-run times compared to master.
",MikeAmy,None,2015-12-31T13:10:39Z,2015-12-31T13:47:29Z
5907,Fixed #25068 -- Adding migrations support for models with metaclasses.,"Original ticket: https://code.djangoproject.com/ticket/25068
First proposed fix: https://github.com/django/django/pull/4968

I also encountered the same problem as kosz85. 
I have included the relevant test from the pull request 4968. 
It seems to make no difference to the test-run times compared to master.

Happy new year!
",MikeAmy,None,2015-12-31T12:32:21Z,2016-01-29T19:28:58Z
5906,Add source property for token object in debug mode,,snkhokh,None,2015-12-31T10:30:46Z,2015-12-31T10:50:44Z
5905,Fixed #23372 -- made loaddata faster in cases no fixtures match,"Django's test suite often tries to load fixture files from apps that have
no fixtures at all. This leads to a lot of non-necessary disabling and
enabling of constraints which can be expensive on some database.

To speed up the above mentioned case, loaddata now first checks if any
fixture file matches. If no fixture file is matched, then the command
exits before disabling and enabling of constraints is done.

The main benefit of this change is seen on MSSQL, where tests on 1.8
run about a order of magnitude faster after this change.

This is a replacement for pull requests https://github.com/django/django/pull/5894 and https://github.com/django/django/pull/5801.
",akaariai,None,2015-12-31T07:43:35Z,2015-12-31T13:41:39Z
5904,Fixed #21454 -- Added support for DB generated fields,"Fixes https://code.djangoproject.com/ticket/21454
## Field Options
### `delegated=True|False`

A shortcut that automatically sets all of the following options to True when no value is provided for them.
### `delegated_on_insert=True|False`

If True, the value of this field will not be skipped from the `INSERT` statement completely. This automatically sets `return_on_insert` to `True` if not value is given. Supported on all backends.
### `delegated_on_update=True|False`

If True, the value of this field will not be skipped from the `UPDATE` statement completely. This automatically sets `return_on_update` to `True` if not value is given. Supported on all backends.
### `return_on_insert=True|False`

If True, the value for field is loaded and assigned from the database along with the `INSERT` statement. Supported on PostgreSQL using the `RETURNING` clause and Oracle using the `RETURNING INTO` clause.
### `return_on_update=True|False`

If True, the value for field is loaded and assigned from the database along with the `UPDATE` statement. Supported on PostgreSQL using the `RETURNING` clause and Oracle using the `RETURNING INTO` clause.
## Model API Changes

`save()` method now takes an optional argument called `ignore_delegated` which can be a list of delegated field names. This negates the behavior of `delegated_on_insert` and `delegated_on_update`.
## Queryset/Manager API Changes

Querysets have a new method call `ignore_delegated` which takes names of delegated fields as arguments and negates the behavior of `delegated_on_insert` and `delegated_on_update` for any subsequent operations. For example, if we have a delegated field called `created_at` on a model, we can temporarily disable delegation to DB for a single query.

```
    class MyModel(models.Model):
         pytthon_ts = fields.DatetimeField()
         db_ts = fields.DatetimeField(delegated=True)
```

This will only update python_ts as `db_ts` is delegated to database
`MyModel.objects.update(db_ts=now(), python_ts=now())`

However, this will update both
`MyModel.objects.ignore_delegated('db_ts').update(db_ts=now(), python_on=now())`

The above example also applies to `Model.objects.create()`.
",owais,None,2015-12-31T00:59:18Z,2016-06-01T07:19:11Z
5903,Fixed #25878 -- Fixed APPEND_SLASH if the project contains an invalid 404.html template.,"https://code.djangoproject.com/ticket/25878

(likely needs an additional test)
",timgraham,None,2015-12-31T00:16:46Z,2016-01-05T17:46:30Z
5902,[1.9.x] Fixed #25997 -- Fixed JS variables being escaped during inline edit of related model in the popup.,,sasha0,None,2015-12-31T00:05:40Z,2016-01-08T23:53:41Z
5901,Fixed #15165 -- Prevented wrong results with perimeter on geodetic fields.,"Updated from https://github.com/django/django/pull/5422
",timgraham,None,2015-12-30T22:37:10Z,2015-12-30T23:08:14Z
5900,Fixed #26018 - Do not call get_form() if not needed in FormMixin.get_context_data(),"Changed ""dict.setdefault"" to ""if x in dict"" pattern so that get_form() would not
be called unnecessarily, specifically in the case where FormMixin.form_invalid()
calls get_context_data with the current form.
",chmarr,None,2015-12-30T21:24:19Z,2015-12-30T22:48:21Z
5899,Fixed #26017 -- Tests should not depend on the name of the top-level …,"…directory hosting them.
",rhertzog,None,2015-12-30T17:24:46Z,2015-12-30T17:52:29Z
5898,Fixed #26013 -- Moved django.core.urlresolvers to django.urls.,,knbk,None,2015-12-30T16:24:33Z,2015-12-31T19:23:27Z
5897,Refs #21927 -- Added note about include() to tutorial.,"This appears to be a possible source of confusion. 
",knbk,None,2015-12-30T16:18:30Z,2015-12-31T13:21:33Z
5896,Refs #13614 -- Added test for admin's many-to-many widget data loss bug.,"It looks like browsers have fixed the reported issue.

https://code.djangoproject.com/ticket/13614
",timgraham,None,2015-12-30T15:13:17Z,2015-12-30T19:10:55Z
5895,Fixed #26011 -- Prevented random LiveServerTestCase test failures on Windows.,"Prevented LiveServerTestCase from stealing ports used by concurrent
processes on Windows.

https://code.djangoproject.com/ticket/26011
",knbk,None,2015-12-30T12:28:02Z,2015-12-31T15:58:09Z
5894,Fast mssql tests for Django 1.8,,akaariai,None,2015-12-30T12:00:34Z,2015-12-31T07:44:54Z
5893,Fix BaseCache.delete_many docstring,"Pretty self-explanatory
",dursk,None,2015-12-29T23:43:13Z,2015-12-30T01:51:02Z
5892,Fixed #26007 - get_template_names returns complete stack of names.,"SingleObjectTemplateResponseMixin.get_template_names() now returns a list of
names matching the documentation, rather than only template_name if that
was specified. Existing code implies that the name returned from
template_name_field should have been first, so doc was updated to change
the ordering. New test case added. Sphinx docs updated.
",chmarr,None,2015-12-29T20:50:06Z,2016-07-15T18:56:04Z
5891,Refs #20846 -- Decreased User.username max_length to 150 characters.,,collinanderson,None,2015-12-29T19:54:51Z,2016-04-11T12:46:39Z
5890,Fixed #26006 -- Fixed incorrect object reference in SingleObjectMixin.get_context_object_name().,"Changed 'self.object' to 'obj' to be consistent with the rest
of the method. No impact on test cases.
",chmarr,None,2015-12-29T19:02:56Z,2015-12-30T18:14:56Z
5889,Fixed typo in test name.,,knbk,None,2015-12-29T17:38:02Z,2015-12-29T17:55:22Z
5888,"Fixed #26003 -- Added ""how the documentation is organized"" section.","https://code.djangoproject.com/ticket/26003#ticket
",timgraham,None,2015-12-29T16:24:10Z,2015-12-31T16:39:55Z
5887,[1.9.x] Fixed #23285 -- Fixed non-deterministic admin_views test.,"This test sometimes fail because the checked integers can appear in the
output as memory addresses due to #24316.
",timgraham,None,2015-12-28T22:38:45Z,2015-12-28T23:39:42Z
5886,Fixed #25354 -- Added class/app_label interpolation to related_query_name.,,jpulec,None,2015-12-28T22:27:42Z,2016-01-28T17:38:06Z
5885,Fixed #24316 -- Made ModelAdmin.list_display callables use an appropriate CSS class name.,"https://code.djangoproject.com/ticket/24316
",timgraham,None,2015-12-28T20:33:58Z,2016-02-02T16:40:18Z
5884,Moved LogEntry-related tests to their own test case,"Refs #21113.
",claudep,None,2015-12-28T17:22:44Z,2015-12-28T22:06:33Z
5883,Fix code to match documentation's intent.,"The text above the code says...

> For example, to enable search by integer field, you could use...

So the search field should be `age` (obviously because `name` is not an integer) which I think is what the documentation wanted to demonstrate.
",dashmug,None,2015-12-28T02:12:33Z,2015-12-29T20:23:38Z
5882,Fixed #25967 -- Indicated required fields in TabularInline headers in admin,"I have given black font-color to ""required"" class. Other fields have the default gray color.

Would that suffice our requirements ?
",akki,None,2015-12-27T07:57:37Z,2016-02-12T19:00:12Z
5881,Fixed #24980 -- Fixed day determination in admin calendar widget,,sasha0,None,2015-12-26T23:33:12Z,2016-01-07T16:19:23Z
5880,Let logging format messages on demand,,scop,None,2015-12-26T20:50:59Z,2015-12-27T00:08:32Z
5879,Fixed #21113 -- Made LogEntry.change_message language independent,,claudep,None,2015-12-26T20:24:52Z,2016-01-08T19:36:57Z
5878,Clean up setdefault pattern,"Do not instantiate default values when already set.
",benjaoming,None,2015-12-26T20:15:18Z,2016-01-05T18:14:55Z
5877,Fixed #25989 -- Find latest lastmod of all sitemaps,"Determine latest lastmod of all sitemaps supplied to
contrib.sitemaps.views.sitemap, instead of unconditionally picking
lastmod of a last sitemap.
",allixx,None,2015-12-26T18:29:24Z,2016-01-23T13:53:53Z
5876,Fixed #26033 -- Added argon2 password hasher.,"argon2 is the winner of the [Password Hashing Competition](https://password-hashing.net).
1. There are two python bindings available for argon2:  `argon2` and `argon2-cffi`.  The first uses `ctypes` and the latter `cffi`.  As `cffi` works for most environments, I choose that one.
2. `argon2` has four parameters: `time_cost`, `memory_cost`, `parallelism` and `type`.  I choose to copy the defaults of `argon2-cffi`.  [Section 9 of the argon2 specification discusses recommended  parameters.](https://password-hashing.net/argon2-specs.pdf)

https://code.djangoproject.com/ticket/26033#ticket
",bwesterb,None,2015-12-26T12:22:43Z,2016-04-22T11:40:49Z
5875,Fixed #25465 -- Returned line breaks addition to plain readonly fields in admin,,sasha0,None,2015-12-24T21:33:42Z,2015-12-30T00:53:02Z
5874,Fixed #25984 -- Corrected error message in ModelBase.__new__,"Changed the error message in RuntimeError Exception class
",varunsharma,None,2015-12-24T18:31:36Z,2018-02-26T15:01:24Z
5873,Add test for #25980: ModelMultipleChoiceField does not properly clean QuerySets,"See https://code.djangoproject.com/ticket/25980
",karyon,None,2015-12-24T15:40:30Z,2015-12-29T15:54:20Z
5872,Fixed #25985 -- Updated signature of ModelAdmin.formfield_for_* to make request a positional argument.,"https://code.djangoproject.com/ticket/25985#ticket

Original implementation from f212b24b6469b66424354bf970f3051df180b88d
",timgraham,None,2015-12-24T15:28:25Z,2015-12-29T17:53:16Z
5871,Fixed #25959 -- Updated documentation of django logger.,"Updated default logger example in docs according to new django logger.
",varunsharma,None,2015-12-24T14:56:57Z,2018-02-26T15:01:23Z
5870,Fixed #25748 -- Added clarification on projects vs. applications.,"A table was proposed in https://github.com/django/django/pull/5788, but I personally found it too simplified. Other opinions welcome.
",timgraham,None,2015-12-24T14:52:58Z,2015-12-30T22:51:18Z
5869,Fixed #25981 Updated ForeignKey.on_delete depreciation warning message,,lsanpablo,None,2015-12-24T02:03:57Z,2018-11-20T14:11:14Z
5868,Refs #25963 -- Fixed grammar in docs,,alasdairnicol,None,2015-12-23T21:43:41Z,2015-12-23T23:36:23Z
5867,Fixed #25854 -- Remove deprecated usage of template.render() with Req…,"…uestContext in docs
",alasdairnicol,None,2015-12-23T21:18:26Z,2015-12-23T23:34:53Z
5866,Fixed #25513 -- Refactored the admin pagination to make it reusable,,sasha0,None,2015-12-23T20:55:52Z,2018-08-22T13:13:40Z
5865,Fixed #25959 -- Updated documentation of django logger.,"Changed the default logging example in documentation from django.request to django.
",varunsharma,None,2015-12-23T18:25:52Z,2015-12-24T14:55:47Z
5864,Discourage use of systemwide /tmp with predictable names,"The use of predictable filenames in /tmp often leads to symlink attacks
so lets at least discourage the most obvious use of them in the docs.

Signed-off-by: Chris Lamb chris@chris-lamb.co.uk
",lamby,None,2015-12-23T17:09:07Z,2015-12-24T15:37:06Z
5863,Fixed #25979 -- Dropped support for PostgreSQL 9.1.,"https://code.djangoproject.com/ticket/25979#ticket
",timgraham,None,2015-12-23T16:51:34Z,2015-12-23T18:51:53Z
5862,[1.8.x] Fixed #13008 -- Added more Cache-Control headers to never_cache() decorator.,"Seems safe for a backport. Any concerns?
https://code.djangoproject.com/ticket/22955

The regression test for the admin issue is in progress at https://github.com/django/django/pull/5757.
",timgraham,None,2015-12-23T15:49:15Z,2015-12-24T16:39:08Z
5861,Fixed #25975 --  sqlmigrate for pending migrations.,,stylesen,None,2015-12-23T13:19:15Z,2015-12-27T05:48:38Z
5860,Documented that GDAL is required to initialize GEOSGeometry from JSON.,,sir-sigurd,None,2015-12-23T10:39:31Z,2015-12-23T14:18:46Z
5859,Refs #25141 -- Removed note that says that GEOSGeometry.json requires GDAL.,,sir-sigurd,None,2015-12-23T10:34:50Z,2015-12-23T14:18:47Z
5858,Fixed #25972 -- Restored support for the isnull lookup with ForeignObject,"Fixes https://code.djangoproject.com/ticket/25972
",tomo-otsuka,None,2015-12-22T23:47:18Z,2015-12-24T12:35:19Z
5857,Support ForeignObject isnull lookup,"Fixes https://code.djangoproject.com/ticket/25972
",tomo-otsuka,None,2015-12-22T23:37:01Z,2015-12-22T23:48:22Z
5856,Fixed #25948 -- Added guidelines for SimpleTestCase.assertRaisesMessage() usage.,"https://code.djangoproject.com/ticket/25948
",timgraham,None,2015-12-22T23:21:05Z,2015-12-23T12:31:21Z
5855,Moved URLObject in tests to separate utils module.,,knbk,None,2015-12-22T21:22:13Z,2015-12-22T21:37:52Z
5854,[1.9.x] Fixed #25963 -- Clarified render_to_response() context_instance deprecation.,"https://code.djangoproject.com/ticket/25963
",timgraham,None,2015-12-22T16:44:35Z,2015-12-22T18:12:10Z
5853,Fixed #25969 -- Replaced render_to_response() with render() in docs examples and tests.,"Also removed unnecessary usage in tests.
https://code.djangoproject.com/ticket/25969#ticket
https://groups.google.com/d/topic/django-developers/-SeUjUbOfKQ/discussion
",timgraham,None,2015-12-22T15:31:11Z,2015-12-23T15:23:13Z
5852,Fixed #25316 -- Fixed using order_by() and values() after annotate().,"In reference to ticket https://code.djangoproject.com/ticket/25316 .
",varunnaganathan,None,2015-12-22T15:08:18Z,2016-01-02T11:40:51Z
5851,Fixed #25965 -- Added removal of sql* commands to 1.9 release notes.,"https://code.djangoproject.com/ticket/25965
",timgraham,None,2015-12-22T14:58:41Z,2015-12-22T18:08:01Z
5850,fixed #25936 -- Migrations topic guide should mention the showmigrati…,"…ons command
",atombrella,None,2015-12-22T14:33:08Z,2015-12-22T18:17:47Z
5849,Fixed #25961 -- Removed handling of thread-non-safe GEOS functions.,"https://code.djangoproject.com/ticket/25961
",sir-sigurd,None,2015-12-22T06:34:39Z,2015-12-23T14:18:48Z
5848,Fixed #25705 -- Quoted Query.__str__() parameters for PostgreSQL.,"https://code.djangoproject.com/ticket/25705
",timgraham,None,2015-12-21T22:49:23Z,2015-12-28T16:38:05Z
5847,Fixed #25958 -- Removed support for 'skip_validation' in BaseCommand.execute(**options).,"https://code.djangoproject.com/ticket/25958
",timgraham,None,2015-12-21T19:32:54Z,2015-12-21T22:26:43Z
5846,Fixed #21528 -- Document parent access in formfield_for_foreignkey,"Since this is my first commit to Django, I started with some documentation.

If it looks good to you, I'll try to implement a nicer way to retrieve parent's ID in `ModelAdmin`.
",francoisfreitag,None,2015-12-21T18:56:15Z,2016-06-28T19:50:03Z
5845,Fixed #25903 -- Fixed the admin's list_editable add/change buttons.,"https://code.djangoproject.com/ticket/25903
",timgraham,None,2015-12-21T13:39:35Z,2015-12-21T14:31:14Z
5844,Stable/1.9.x,,ank123goyal,None,2015-12-21T05:32:57Z,2015-12-21T07:15:26Z
5843,Remove a misleading comment on HTTPS,"For all practical purposes there are no common cases for which a website cannot be deployed with HTTPS.
",alex,None,2015-12-20T04:55:22Z,2015-12-21T11:48:01Z
5842,[1.9.x] Fixed #25903 -- Fixed the admin's list_editable add/change buttons.,"https://code.djangoproject.com/ticket/25165

This doesn't backport cleanly from master due to d638cdc42acec608c1967f44af6be32a477c239f and I ran into [a different regression](https://code.djangoproject.com/ticket/25165#comment:4) from that commit so I'm submitting the fix for 1.9 separately.
",timgraham,None,2015-12-19T19:12:21Z,2015-12-21T14:31:49Z
5841,Fixed #25922 -- Fixed migrate --fake-initial detection of many-to-many tables.,"https://code.djangoproject.com/ticket/25922
",timgraham,None,2015-12-19T13:58:16Z,2015-12-19T18:50:19Z
5840,Fixed #25915 -- Allowed language not in Django's default LANGUAGES,"This fixes a regression introduced by a5f6cbce07. Thanks Gavin Wahl for the
report.
",claudep,None,2015-12-18T16:05:08Z,2015-12-18T16:51:23Z
5839,Fixed #25949 -- Documented Psycopg2 version requirement for JSONField.,"https://code.djangoproject.com/ticket/25949
",timgraham,None,2015-12-18T12:55:19Z,2015-12-19T12:25:31Z
5838,Fixed a typo in docs/ref/contrib/gis/geos.txt.,,sir-sigurd,None,2015-12-18T10:38:33Z,2015-12-18T13:32:43Z
5837,Fixed #25950 -- Added support for GEOSisClosed.,"https://code.djangoproject.com/ticket/25950
",sir-sigurd,None,2015-12-18T10:34:33Z,2015-12-23T14:18:52Z
5836,Stable/1.9.x,,dongjieh,None,2015-12-18T06:38:55Z,2015-12-18T06:44:58Z
5835,"Fixed #24100, #24067 -- Made the migration signals dispatch the migration plan. ",,charettes,None,2015-12-18T01:15:11Z,2016-02-04T17:43:55Z
5834,Refs #25894 -- Fixed evaluation of zero-length slices of QuerySet.values() on Oracle.,"https://code.djangoproject.com/ticket/25894
",sir-sigurd,None,2015-12-17T19:22:36Z,2015-12-18T13:32:45Z
5833,Fixed #25942 -- Fixed TypedChoiceField.has_changed with nullable field,"This fixes a regression introduced by 871440361.
",claudep,None,2015-12-16T22:11:39Z,2015-12-17T14:39:08Z
5832,Fixed typo in Feed class reference where `item_enclosure_url` appeared,"incorrectly in place of `item_enclosures`.
",FarmCodeGary,None,2015-12-16T19:55:31Z,2015-12-17T14:10:11Z
5831,Updated query.py - implemented get_or_none.,"get_or_none, returns the object if any found otherwise returns None. Can be used to check if something exists.
",iSimar,None,2015-12-15T20:26:28Z,2015-12-15T20:30:09Z
5830,Fix missing adverb in model docs,"to me it seems like one word is missing here.
Word is missing in all branches.
",MattBlack85,None,2015-12-15T13:19:30Z,2015-12-15T14:57:14Z
5829,Added documentation for manually creating column via migrations.RunSQL,,gen1us2k,None,2015-12-15T13:07:04Z,2015-12-25T23:29:36Z
5828,Fixed #25938 -- Factored out common base class for GEOSBase and GDALBase.,"https://code.djangoproject.com/ticket/25938
",sir-sigurd,None,2015-12-15T09:29:53Z,2016-03-12T14:38:42Z
5827,Fixed #25852 -- Made sure AlterModelManager forces a reload of its model state.,"Thanks to Geoffrey Sechter and the Django NYC group for the report.
",charettes,None,2015-12-14T06:23:37Z,2015-12-15T19:53:38Z
5826,Fixed #25882 -- Prevented fast deletes matching no rows from crashing on MySQL.,,charettes,None,2015-12-14T04:48:21Z,2015-12-14T18:13:32Z
5825,Fixed #25932 -- Made predicates of OGRGeometry return bool instead of int.,"https://code.djangoproject.com/ticket/25932
",sir-sigurd,None,2015-12-14T04:34:51Z,2015-12-18T13:33:46Z
5824,"Fixed #25838 -- Added ""python"" as an interface to the shell command.","Deprecates the ""--plain"" option.

I wasn't sure if the new options should be: `python`, `standard`, or `plain`. If there is a preference for a different term, I can easily change it.
",jdufresne,None,2015-12-13T19:52:41Z,2016-03-13T23:03:19Z
5823,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns.,"It's different than i18n_patterns by not prefixing the default language.

All other languages are prefixed similar to i18n_patterns.

It allows to add another language without changing the urls of the first
default language.
",urbaniak,None,2015-12-13T15:12:58Z,2016-07-28T10:43:01Z
5822,Fixed #25925 -- Forced LANG=C for test_msgfmt_error_including_non_ascii.,"https://code.djangoproject.com/ticket/25925
",sir-sigurd,None,2015-12-13T14:20:35Z,2015-12-18T13:33:47Z
5821,Fixed #25875 -- Prevented UnicodeDecodeError for Q object repr,"Thanks Ben Kraft for the report.
",claudep,None,2015-12-12T22:11:29Z,2015-12-13T14:08:52Z
5820,Fixed #25926 - Removed gis.utils.ogrinfo.sample backwards compatibility alias.,"https://code.djangoproject.com/ticket/25926
",sir-sigurd,None,2015-12-12T16:27:16Z,2015-12-12T18:30:42Z
5819,Fixed #25924 -- Removed gis.utils.srs.add_postgis_srs backwards-compatibility alias.,"https://code.djangoproject.com/ticket/25924
",sir-sigurd,None,2015-12-12T15:03:59Z,2015-12-12T18:30:42Z
5818,Unwrapped gdal.Envelope import from try-except as fail of `import ctypes` is not expected.,,sir-sigurd,None,2015-12-12T10:40:53Z,2015-12-12T18:30:43Z
5817,Simplify MANIFEST.in commands,"The full MANIFEST.in syntax is here: https://docs.python.org/3/distutils/commandref.html

Dunno if we should include it as a comment inside the file for others to easily reference.
",nchammas,None,2015-12-12T03:09:32Z,2015-12-12T17:13:38Z
5816,Fixed #24116 -- Converted AdminSite.check_dependencies() to use system checks.,"Refactored AdminSite.check_dependencies with the checks framework.
check_dependencies() is now called by SimpleAdminConfig.ready()
and checks for the auth context processor only if using the auth backend
",vincepandolfo,None,2015-12-11T16:27:34Z,2016-01-23T00:08:24Z
5815,Fixed #25912 --Added binary left/right shift operators to F expressions.,[django-developers discussion](https://groups.google.com/forum/#!searchin/django-developers/left$20shift%7Csort:relevance/django-developers/KY6N6U_gEdg/ocwjbPo0AQAJ),anabelensc,None,2015-12-11T13:04:47Z,2016-12-30T20:23:43Z
5814,Fixed #25916 -- Added lastmod support to sitemaps.views.index,"Allowed sitemap_index.xml to supply lastmod values for each sitemap.
",mgd020,None,2015-12-11T04:12:35Z,2016-05-07T21:05:34Z
5813,Fixed #25104 -- Added httpd.conf hyperlink,"Add httpd.conf hyperlink to wiki.apache.org
Add newlines so that comply with 79 chars maximum.
",za,None,2015-12-10T18:56:27Z,2015-12-29T16:06:02Z
5812,Refs #25899 -- Improved visibility of TEST database settings in testing docs.,"Added 1 sentence and reworded some others.
",timgraham,None,2015-12-10T16:28:07Z,2015-12-15T12:39:06Z
5811,Fixed #25909 -- Added unicode_literals import to apps.py generated by startapp.,"https://code.djangoproject.com/ticket/25909#ticket
",timgraham,None,2015-12-10T14:14:10Z,2015-12-12T14:50:20Z
5810,Fixed wrong code example in ArrayField documentation,,agmond,None,2015-12-10T13:13:50Z,2015-12-11T00:24:24Z
5809,Fixed #22822 --Use default locale from settings for get_javascript_catalog (exclude …,"…hardcoded 'en')
",gen1us2k,None,2015-12-10T10:50:52Z,2016-02-26T19:15:57Z
5808,Fixed #25894 -- Fixed evaluation of zero-length slices of queryset.values().,"https://code.djangoproject.com/ticket/25894
",sir-sigurd,None,2015-12-10T10:49:44Z,2015-12-18T13:33:53Z
5807,Fix typos,"The body of the response, as a bytestring. This is the final page
to
The body of the response, as a byte string. This is the final page
",gorvelyfab,None,2015-12-10T10:20:07Z,2015-12-10T16:10:16Z
5806,Add removal of build_request_repr to 1.9 release notes,"`django.http.build_request_repr` was removed by https://github.com/django/django/commit/8f8c54f70bfa3aa8e311514297f1eeded2c32593

Not sure if it's fitting for the release notes but it makes them more complete I think.

Note to myself: other things that have maybe been removed: `django.utils.log.NullHandler`, `TagHelperNode`, should add a note to use `importlib` from python itself directly, `get_app`, `get_models`,`FileWrapper`
",mdamien,None,2015-12-09T22:42:20Z,2015-12-10T21:51:48Z
5805,Fixed #25892 -- Extracted inner loop in SeparateDatabaseAndState.database_backwards().,"Now intermediate states in the database_backwards are cached, similar to
the executor's migrate (or _migrate_all_backwards). This makes the
migration run much faster (O(n) instead of O(n^2) over number of
database_operations).

I didn't put anything in release notes, because this is not a bug-fix. Is this correct?
",amosonn,None,2015-12-09T17:05:11Z,2016-01-07T13:15:34Z
5804,Fixed #25939 -- Removed transaction from QuerySet.update_or_create's save().,"There is no need to wrap calls of create and save methods in
transaction.atomic as it's already done down the call stack in
Model.save_base method.
",bartosh,None,2015-12-09T13:05:30Z,2015-12-15T00:42:41Z
5803,Fixed #25900 -- Fixed regression in CommonMiddleware ETag support.,"- Fixed ETag support broken in 1.9 (comparison of If-None-Match on the request vs ETag on the response is incorrect.  Response's ETag is quoted, while the Etag(s) from If-None-Match are not).
- Added test case to demonstrate regression (tests/
- Moved 3 CommonMiddleware-related tests to the proper tests case
",derekjamescurtis,None,2015-12-09T11:13:09Z,2015-12-10T19:01:23Z
5802,Fix RST typo in form validation docs,"The lack of a space after the closing double-backticks was upsetting the RST, so the sentence was appearing as
`such as “if field A``is supplied, field ``B must`

which this fixes.

At time of writing, this can be seen in the online docs at https://docs.djangoproject.com/en/1.9/ref/forms/validation/
",plumdog,None,2015-12-09T10:46:58Z,2015-12-09T12:22:41Z
5801,[WIP] Disable/enable constraints for required tables only,"The idea is to speed up tests on mssql by disabling/enabling constraints only for those tables that have actually changed.

I believe this could give roughly two orders of magnitude better performance for constraint checking. The reason is that currently mssql checks every table for every disable/enable constraint checks call. This is around 1500 tables \* 225 calls, that is roughly 330 000 disable/enable cycles. With the patch, the amount of disable/enable cycles is 473. (EDIT: Actually, currently there are roughly 750 calls to disable constraints, of which around 500 are from a loop in tests.serializers.test_data).

With this approach, it is possible that a constraint in some _other_ table might fail if we delete a row from a referenced table, but I don't believe this is a problem for Django's test suite, and it can be a problem in fixture loading only in extreme cases (where one updates an already existing row's column pointed by a row in some other table). Of course, this could be fixed simply by adding the other table to the list of tables to disable/enable constraints for.

To get the speed benefit for mssql, the mssql backend should only disable/enable constraints for the tables required. That is, to see the full speed benefit of this change, the mssql backend needs to be updated.

This is an alternate to https://github.com/django/django/pull/5438.

I am not intending to continue work on this pull request in the immediate future - others are welcome to take over my work.
",akaariai,None,2015-12-09T10:37:09Z,2015-12-31T07:44:32Z
5800,Fixed #25896 -- Fixed state bug in SeparateDatabaseAndState.database_backwards().,"New test catching the bug, and bugfix.
",amosonn,None,2015-12-09T09:58:04Z,2015-12-09T16:14:41Z
5799,Fixed #25896 -- Fixed state bug in SeparateDatabaseAndState.database_backwards().,"New test catching the bug, and bugfix.
",amosonn,None,2015-12-09T09:51:17Z,2015-12-09T09:56:31Z
5798,Changed query to detect MySQL storage engine.,"update for INFORMATION_SCHEMA.ENGINES sometiomes do not exist!
",chainly,None,2015-12-09T09:07:10Z,2015-12-21T23:01:11Z
5797,Fixed #25897 Managers defined on non-abstract base classes inherited by child classes,,poleha,None,2015-12-09T06:45:31Z,2016-05-08T18:35:07Z
5796,Fixed #25883 -- Fixed admin deletion page summary counts for related objects.,"https://code.djangoproject.com/ticket/25883
",sir-sigurd,None,2015-12-09T06:05:28Z,2015-12-11T04:35:31Z
5795,Refs #10060 -- Corrected description of multiple annotations bug.,"Per @akaariai at https://groups.google.com/d/msg/django-developers/qiYKd1YZY_E/Tgn0p1wHCQAJ
",timgraham,None,2015-12-08T21:46:59Z,2015-12-15T13:05:12Z
5794,Fixed #24675 -- Skipped SQL_AUTO_IS_NULL query on MySQL if not needed.,"https://code.djangoproject.com/ticket/24675

`SET SQL_AUTO_IS_NULL = 0` isn't needed when it's disabled globally, or the MySQL/MariaDB server version is >=5.5.3. (See more: https://mariadb.com/kb/en/mariadb/server-system-variables/#sql_auto_is_null)

There seems to be prior work on this that didn't get merged due to the original author becoming inactive, so I decided to revise the code since one of the core developers gave a go on the previous source code. and I also added a test case under `tests/backends/tests.py`, which was the original reason why the prior work didn't get merged.
",stewartpark,None,2015-12-08T21:19:02Z,2015-12-15T15:31:47Z
5793,"user_passes_test takes a `test_func` kwarg, not `func`",,gavinwahl,None,2015-12-08T20:38:51Z,2015-12-08T21:02:45Z
5792,Fixed #25896 -- Fixed state bug in SeparateDatabaseAndState.database_backwards().,"Test breaking with previous code, and fix which makes test pass.
",amosonn,None,2015-12-08T20:01:05Z,2015-12-09T09:50:02Z
5791,Fixed #25893 -- Corrected custom lookups example.,,browniebroke,None,2015-12-08T18:32:36Z,2015-12-11T13:45:34Z
5790,move transaction.atomic contexts to lower level,"Wrapping 'execute_sql' into transaction.atomic instead of
wrapping 'create' and 'save' should increase parallelism and
spead up execution of 'insert' and 'update' SQL queries.
",bartosh,None,2015-12-08T17:48:46Z,2015-12-09T13:04:26Z
5789,Fixed #25896 -- Fixed state bug in SeparateDatabaseAndState.database_backwards().,"Test breaking with previous code, and fix which makes test pass.
",amosonn,None,2015-12-08T17:14:13Z,2015-12-08T19:56:56Z
5788,Fixed #25748 -- Added a table comparing projects and apps.,"https://code.djangoproject.com/ticket/25748
",guettli,None,2015-12-08T16:39:20Z,2016-01-15T19:37:26Z
5787,Fixed #25876 -- Removed OGRGeometry.transform_to() backwards-compatibility method.,"https://code.djangoproject.com/ticket/25876
",sir-sigurd,None,2015-12-08T05:08:05Z,2015-12-11T04:35:34Z
5786,Updated httpd.conf to 000-default.conf for Apache 2.4,"Improvement for https://code.djangoproject.com/ticket/25104
",hpanago,None,2015-12-07T23:27:17Z,2015-12-07T23:45:43Z
5785,Document npm compatibility in package.json,"See ticket #25803.

Django's `npm install` / `npm test` procedure (documented here: https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/javascript/#testing-from-the-command-line) only works with npm versions 1.3.x - 2.x,
from what I've tested, while 3.5.1 is the latest npm version.

I think it's a good idea to document this somewhere to reduce confusion.

One place we could do this is the ""engines"" filed in package.json.
https://docs.npmjs.com/files/package.json#engines
",nikolas,None,2015-12-07T20:31:24Z,2015-12-08T20:14:04Z
5784,Added note about model inheritence incompatibility,"This updates the 1.7 release notes for a breaking change that was introduced with the app loading re-factor but missed in the release (and subsequent ones). The effect of the change is that inheriting a model that is not abstract and defined outside of the same app is no longer possible. 

See also: https://code.djangoproject.com/ticket/22872#comment:12
",ivanvenosdel,None,2015-12-07T20:27:12Z,2018-05-10T04:51:37Z
5783,Fixed #25881 -- Marked Python 3.2 in Django 1.8 as unsupported at the end of 2016.,"https://code.djangoproject.com/ticket/25881
",timgraham,None,2015-12-07T19:33:21Z,2015-12-08T17:47:41Z
5782,Fixed #25845 -- Fixed incorrect timezone warnings in custom admin templates.,"Fixed false timezone warnings if a custom admin base.html template doesn't specify the ""data-admin-utc-offset"" body attribute.

Added Selenium tests for Firefox, Chrome and IE based on `DateTimePickerShortcutsSeleniumFirefoxTests`, as suggested by @timgraham in #5769.

https://code.djangoproject.com/ticket/25845
",Strayer,None,2015-12-07T09:25:08Z,2015-12-17T19:47:59Z
5781,Clarified swapped wording in docstring in tutorial05,"Change lets sentence make grammatical sense, also clarifies the intent of the function.
",AroundTheLines,None,2015-12-07T09:06:08Z,2015-12-07T23:52:55Z
5780,[1.8.x] Fixed #25717 -- Changed local name to Slovak language,"https://code.djangoproject.com/ticket/25717
",andersonresende,None,2015-12-07T00:54:27Z,2015-12-12T08:21:14Z
5779,Changed local name to slovak language,,andersonresende,None,2015-12-07T00:40:34Z,2015-12-07T00:53:00Z
5778,Fixed #25657 -- Ignored TypeErrors when destroying geometry objects,"Due to randomness of garbage collection with geometry objects, it's
easier to simply ignore TypeErrors generally raised when parts of
objects are already garbage-collected.
",claudep,None,2015-12-06T16:36:06Z,2015-12-08T21:20:46Z
5777,Fixed #25860 -- Documented a transaction leak possiblity in TestCase.,"https://code.djangoproject.com/ticket/25860
",timgraham,None,2015-12-05T22:50:11Z,2015-12-07T23:33:57Z
5776,Fixed #15727 -- Added django-csp to contrib.,"This is copied from https://github.com/mozilla/django-csp

It's licensed under the MPL, but that's compatible with BSD https://www.mozilla.org/en-US/MPL/2.0/FAQ/#mpl-bsd-and-apache

pinging @jsocol who last committed to the project
",graingert,None,2015-12-05T21:54:43Z,2017-02-16T07:48:15Z
5775,Fixed #25869 -- Added set_trim and set_precision methods to WKTWriter.,"https://code.djangoproject.com/ticket/25869
",sir-sigurd,None,2015-12-05T14:08:06Z,2015-12-23T14:18:53Z
5774,made fieldset stylable.,"With this path, we could inject style attribute to fieldsets, and make the fieldsets horizentally placed.
class XXXXAdmin(admin.ModelAdmin):
  fieldsets = [
        ('field1', {'fields': ['id', ],
                    'style': 'width: 24%; float: left; '
                    }),
        ('field2', {'fields': ['client_tag'],
                    'style': 'width: 24%; float: left; margin-left: 3px'
                    }),
        ('field3', {'fields': ['confirm_username',],
                    'style': 'width: 24%; float: left; margin-left: 3px'
                    }),
        ('field4', {'fields': ['amount',],
                    'style': 'width: 24%; float: left; margin-left: 3px'
                    }),
        (None, {'fields': [], 'style': 'clear: both; display: invisible; border-width:0px', }),
    ]
",coopci,None,2015-12-05T10:17:35Z,2015-12-05T13:38:42Z
5773,Fixed #25547 -- Corrected instance assignment in FileDescriptor.__get__,,Uran198,None,2015-12-05T01:24:00Z,2015-12-05T22:45:15Z
5772,Refs #25677 -- Skipped an i18n test on older gettext versions.,"https://code.djangoproject.com/ticket/25677#comment:14
",timgraham,None,2015-12-04T23:17:09Z,2015-12-05T13:36:08Z
5771,Fixed #25867 -- Fixed a system check crash with nested ArrayFields.,"Thanks to Jean Gourds for the report.
",charettes,None,2015-12-04T18:16:35Z,2015-12-07T20:03:27Z
5770,Fixed #25865 -- Made OSMGeoAdmin to require GDAL only if transformation is really needed.,"https://code.djangoproject.com/ticket/25865
",sir-sigurd,None,2015-12-04T14:18:42Z,2016-03-11T17:11:33Z
5769,Fixed #25845 -- Fixed body.getAttribute check in django admin.,"body.getAttribute('data-admin-utc-offset') call returns empty
string ("""") or null if it isn't set. However, current call
checks the value for undefined which is a wrong check. Fixed
that faulty behaviour.

https://code.djangoproject.com/ticket/25845
",emre,None,2015-12-04T13:18:05Z,2015-12-04T15:18:48Z
5768,Fixed #25740 -- Documented GEOSGeometry operators.,"https://code.djangoproject.com/ticket/25740
",sir-sigurd,None,2015-12-04T07:29:35Z,2015-12-05T04:24:34Z
5767,Document removed functions from django.db.models,"These were functions removed here:
  cf5b67d3a053831ce5a3ef24acb7059fc1f29469

But I couldn't find a notice in the 1.9 release notes that these
have been removed.
",nikolas,None,2015-12-04T03:14:46Z,2015-12-04T17:43:11Z
5766,[WIP] Fixed #20581 -- Changed unique constraints to DEFERRABLE INITIA…,"…LLY DEFERRED for backends that support it.
",jdufresne,None,2015-12-04T02:17:17Z,2016-03-13T23:03:19Z
5765,Fixed #25855 -- Added more accurate info to migration warning on runserver command.,"https://code.djangoproject.com/ticket/25855

If one have migrations waiting to be applied, runserver command
gives a warning with check_migrations() method. Updated it with
more accurate messages. (Unapplied migrations count and list of apps
waiting their migrations applied.)

Also changed the ""your app"" text to ""your project"" since runserver
command has a project-wide usage.
",emre,None,2015-12-03T17:05:45Z,2015-12-21T18:59:46Z
5764,Fixed a minor typo,"Changed ""show"" to ""shown"" in the ""Other model instance methods"" section.
",AroundTheLines,None,2015-12-03T16:32:11Z,2015-12-03T17:56:11Z
5763,Refs #25734 -- Relaxed GDALRaster statistics tests,"Use `assertAlmostEqual` instead of `assertEqual` assertions.
",yellowcap,None,2015-12-03T11:31:57Z,2015-12-05T00:15:01Z
5762,Stable/1.8.x,,JieweiWei,None,2015-12-03T08:39:10Z,2015-12-03T09:01:03Z
5761,Fixed #25853 -- Added support for GeoHash function on SpatiaLite.,"https://code.djangoproject.com/ticket/25853
",sir-sigurd,None,2015-12-03T08:00:06Z,2015-12-05T04:24:34Z
5760,Refs #25659 -- Added missing docs for Difference/Intersection/SymDifference functions.,"https://code.djangoproject.com/ticket/25659
",sir-sigurd,None,2015-12-03T05:46:54Z,2015-12-05T04:24:34Z
5759,Fixed #25851 -- Updated link to deprecated assignment tag docs.,,alasdairnicol,None,2015-12-03T00:36:20Z,2015-12-03T15:42:20Z
5758,Refs #25846 -- Added stacklevel to SubfieldBase warning.,,sir-sigurd,None,2015-12-02T18:24:24Z,2015-12-05T04:24:38Z
5757,Refs #22955 -- Added a test for browser refresh clearing ModelAdmin.filter_horizontal items.,"Ticket: https://code.djangoproject.com/ticket/22955

One only thing -- W3C says that `autocomplete` attribute isn't valid for `select` element. So I think it's Firefox fault. Anyway this one-line trick fixes problem in Firefox.
",elky,None,2015-12-02T12:59:56Z,2016-01-06T23:34:49Z
5756,Fixed #25840 -- Added a 'default' argument to self.get signature on BaseCache.get_or_set(),"Refactored Django's built-in BaseCache.get_or_set() to
work well with DummyCache.

get_or_set implementation tries to fetch the key first.
If it doesn't exists, it adds the default value
(passed as 'default' parameter) to the cache and gets it.

Since DummyCache backend doesn't actually add something
but returns True on add operation, get_or_cache() thinks
that it's successfully added to the cache and do a GET
operation to the related key which returns None. This way
instead of returning default, returns None.

This also fixes possible data eviction problems
between setting and getting a key. Another thread possibly
remove the key before get_and_set access it again.

Also added the get_or_set related unit tests for DummyCache backend.
",emre,None,2015-12-02T10:47:10Z,2015-12-04T19:25:49Z
5755,Spelling fixes,"This is a set of potential spelling fixes.
I haven't tried running any tests.
I haven't tried to figure out if tests or APIs are impacted.
I haven't tried to filter out third party modules (e.g. gis might be a module, q-unit probably is).

I have split each misspelled term out individually. Please feel free to drop individual commits (if for some reason I'm wrong about the word being misspelled). Please feel free to fold commits together.

If you have any preferences about how you'd like a series like this, I might be able to accomodate.
",jsoref,None,2015-12-02T03:21:25Z,2015-12-03T17:54:33Z
5754,update link to 1000 common passwords,"xato.net is dead; replace with link to archive.org, as the xato.net site suggests.
",eykanal,None,2015-12-02T00:58:25Z,2015-12-02T17:57:48Z
5753,Fixed #25841 -- Handled base array fields validation errors with params.,"Thanks to Trac alias benzid-wael for the report.
",charettes,None,2015-12-01T23:24:54Z,2015-12-18T01:26:47Z
5752,Added ListField to fields,"A field that can store a list of string values that validate against the ""choices"" parameter.
",sublime1809,None,2015-12-01T22:07:24Z,2015-12-02T17:34:37Z
5751,Fixed #25840 -- Added get_or_set method to dummy cache backend,"https://code.djangoproject.com/ticket/25840
",oleksiyivanenko,None,2015-12-01T17:46:35Z,2015-12-04T15:45:38Z
5750,Fixed construction of form._object_dict using the pk field's to_python(),"Since `to_python()` is used for looking up objects in `form._object_dict` it should also be used for storing the objects there in the first place.

This broke for me using a UUID field as a pk field, when attempting to save any inline formset in the admin.
",ydaniv,None,2015-12-01T08:08:41Z,2015-12-08T20:15:41Z
5749,Removed old and broken versionchanged directive,"It seems that it should be fixed for stable branches.
",sir-sigurd,None,2015-11-30T18:00:32Z,2015-12-05T04:24:41Z
5748,Removed old versionadded directive.,,sir-sigurd,None,2015-11-30T17:56:45Z,2015-12-05T04:24:44Z
5747,Fixed #25836 -- Added support for MakeLine aggregate on SpatiaLite.,"https://code.djangoproject.com/ticket/25836
",sir-sigurd,None,2015-11-30T09:33:44Z,2015-12-05T04:24:39Z
5746,Fixed #25835 -- Removed Adaptor alias from spatial operations classes.,"https://code.djangoproject.com/ticket/25835
",sir-sigurd,None,2015-11-30T08:03:57Z,2015-12-05T04:24:45Z
5745,Fixed #25833 -- Added support for non-atomic migrations,"Added `atomic` class attribute to `Migration` which can be set to `False` for non-atomic migrations.
",Pankrat,None,2015-11-29T23:21:11Z,2017-06-23T19:00:14Z
5744,Fixed #25778 -- Updated docs to link to https when available.,"These changes were mostly automated by a script that searched for links and checked if an https version is available.
",jdufresne,None,2015-11-29T16:51:11Z,2016-03-13T23:03:20Z
5743,Fixed #25827 -- DateTimeField spacing and alignment,"Ticket: https://code.djangoproject.com/ticket/25827
- Fixed extra space in TabularAdmin caused by useless left margin
- Put date and time fields side by side to avoid vertical extra space and improve UX

Screenshot of how it looks now:
<img width=""616"" alt=""screenshot 2015-11-29 at 03 13 16"" src=""https://cloud.githubusercontent.com/assets/209663/11454243/3a74091a-9647-11e5-9d49-860361559f92.png"">
",elky,None,2015-11-28T22:14:33Z,2015-11-30T13:54:29Z
5742,Fixed #25385 -- Allowed importing views.generic.View from views.View.,"docs and release note needed
",auvipy,None,2015-11-28T12:37:27Z,2016-01-11T12:42:36Z
5741,#25385 -- Allow importing django.views.generic.View from django.views.View,,auvipy,None,2015-11-28T12:01:02Z,2015-11-28T12:07:32Z
5740,Fixed #25826 -- Improved help text for the --parallel option,"This was overlooked in 81f5d63218851f90bd83c1263d9a427db84d6082.
",bmispelon,None,2015-11-27T22:10:27Z,2015-11-28T09:12:27Z
5739,Fixed #25820 -- Allow Whitespace in Admin JS Month/Weekday names,"Refactored Admin JS to allow for whitespace in month and weekday names.
This is useful for certain language translations.
",benred42,None,2015-11-27T19:19:31Z,2015-12-04T00:45:23Z
5738,Fix incorrect case of `CustomQuerySet`,,jamesbeith,None,2015-11-27T18:50:00Z,2015-11-27T18:53:20Z
5737,Improved help text for runtests's --parallel option,,bmispelon,None,2015-11-27T17:44:37Z,2015-11-27T20:44:30Z
5736,Fixed #25825 --- Implemented __ne__ for template Origin,"https://code.djangoproject.com/ticket/25825
",jaap3,None,2015-11-27T16:23:38Z,2015-12-03T21:00:07Z
5735,"Fixed #25968 -- Changed project/app templates to use a ""py-tpl"" suffix.","Debian packages unconditionally byte-compile .py files on installation and
do not silence errors by design. Therefore, we need a way of shipping these
invalid .py files without a .py extension but ensuring that when we
template them, they end up as .py.

We don't special-case .py files so that the all the TemplateCommand
command-line options (eg. extra_files and extensions) still work entirely
as expected and it may even be useful for other formats too.

Signed-off-by: Chris Lamb chris@chris-lamb.co.uk
",lamby,None,2015-11-27T16:03:09Z,2016-01-25T17:44:24Z
5734,Fixed #20468 -- Added loaddata --exclude option.,,alexmorozov,None,2015-11-27T14:53:44Z,2016-05-07T21:24:52Z
5733,"Fixed #25823 -- Made admindocs ""View documentation"" string consistent.","Changed a string for consistency.

cf. https://code.djangoproject.com/ticket/25823
",gunchleoc,None,2015-11-27T11:42:44Z,2015-11-30T16:45:17Z
5732,Fixed #25811 -- Added a helpful error when making _in queries across different databases.,"Normally it vlookup IN is used with a list, but we go through another query argument, generating a single SQL query like adding a second subquery, but we must check if there is db attribute and validate the 2 consultations belong to the same base data, otherwise evaluation must force the second query.
",ebar0n,None,2015-11-27T06:41:32Z,2016-02-26T12:35:06Z
5731,"Fixed #25822 -- Added require_HEAD, require_OPTIONS, require_PUT, require_DELETE decorators.","Issue opened by me on ticket tracker here: https://code.djangoproject.com/ticket/25822
",CrazyPython,None,2015-11-27T01:48:13Z,2015-11-27T22:17:42Z
5730,Fixed #25302 (again) -- Ignored scheme when checking for bad referers.,"The check introduced in 4ce433e was too strict in real life. The poorly
implemented bots this patch attempted to ignore are sloppy when it comes
to http vs. https.
",aaugustin,None,2015-11-26T20:29:42Z,2015-11-27T07:12:41Z
5729,Fixed #19415 -- Added an example of annotating over multi-valued relations.,"Clarified how aggregate works with multi-valued relationships and
multiple filter() calls.
",benred42,None,2015-11-26T16:19:08Z,2016-12-22T14:10:29Z
5728,Fixed #25672 -- Clarification to ManyToMany Documentation,"Clarified why related ManyToMany fields with a custom intermediate model
disable the remove() method.
",benred42,None,2015-11-26T16:15:12Z,2015-12-08T23:00:58Z
5727,"Keep security fix on date template filter formats, but still allow to add some custom formats","One should be able to define some new custom date formats for example.
Fix security commit 316bc3f did not allow that.
",shostelet,None,2015-11-26T15:03:15Z,2015-11-26T15:20:28Z
5726,Fixed typo: s/compils/compiles,"I was under the impression I did this pull request before but I can't find it anymore.
",jaap3,None,2015-11-26T11:17:34Z,2015-11-26T14:59:03Z
5725,Fixed #25649 -- Documented that all GEOSGeometry constructors take srid kwarg.,"https://code.djangoproject.com/ticket/25649
",sir-sigurd,None,2015-11-25T20:43:04Z,2015-11-29T14:48:46Z
5724,Fixed #25815 -- Added Colombian Spanish and Scottish Gaelic languages,"Still WIP, the formats.py for Scottish Gaelic is missing.
",claudep,None,2015-11-25T19:49:24Z,2015-11-27T09:19:25Z
5723,Added Python config files for Scottish Gaelic locale (gd).,"As it says on the tin ;)

I started with the translation on Transifex today.
",gunchleoc,None,2015-11-25T18:49:17Z,2015-11-25T20:08:32Z
5722,Fixed #25807 -- Added support for LazyObject serialization in migrations.,"Thanks to Trac alias mrgaolei for the report.
",charettes,None,2015-11-25T17:33:23Z,2015-11-26T16:17:27Z
5721,Fixed #25761 -- Re-raised exceptions need __cause__.__traceback__,"When Django re-raises an exception, it sets the **cause** attribute even
in Python 2, thus mimicking Python's 3 behaviour for ""raise Foo from Bar"".
However Python 3 also ensures that all exceptions have a **traceback**
attribute and thus the ""traceback2"" Python 2 module (backport of Python
3's ""traceback"" module) relies on the fact that whenever you have a
**cause** attribute, the recorded exception also has a **traceback**
attribute.

This is breaking at least testtools which is using traceback2 (see
https://github.com/testing-cabal/testtools/issues/162).

This commit fixes this inconsistency by ensuring that Django sets
the **traceback** attribute on any exception stored in a **cause**
attribute of a re-raised exception.
",rhertzog,None,2015-11-25T14:34:31Z,2015-12-03T21:32:27Z
5720,"Fixed manual page by escaping "".pot"" at the start of a line","Words starting with a dot at the start of a line are treated as formatting
commands. Since .pot is an unknown command the whole line is dropped
from the output.

This has been spotted by Debian package checker tool (lintian):
W: python-django-common: manpage-has-errors-from-man usr/share/man/man1/django-admin.1.gz 880: warning: macro `pot' not defined (possibly missing space after`po')
",rhertzog,None,2015-11-25T14:27:08Z,2015-11-25T22:23:07Z
5719,Fixed #25812 -- Restored the ability to use custom formats with the date template filter.,"Before the security fix in 1.8.7, we could have custom formats in formats.py files and used them. For example, if I have the following formats.py:

``` python
CUSTOM_DAY_FORMAT = 'd/m/Y CUSTOM'
```

I could used it:

``` python
>>> get_format('CUSTOM_DAY_FORMAT')
'd/m/Y CUSTOM'
```

But now it returns `CUSTOM_DAY_FORMAT` instead.
",Gagaro,None,2015-11-25T11:20:43Z,2015-11-28T13:41:02Z
5718,Refs #25723: Slightly better compatibility,"https://code.djangoproject.com/ticket/25723#comment:6
",collinanderson,None,2015-11-24T19:37:15Z,2015-11-24T20:06:08Z
5717,Fixed #25806 -- Removed name-mangling from syndication.Feed's _get_dynamic_attr().,"https://code.djangoproject.com/ticket/25806
",timgraham,None,2015-11-24T15:38:10Z,2015-11-25T22:47:54Z
5716,Removed explicit User ids in tests.,,timgraham,None,2015-11-24T13:24:25Z,2015-11-24T15:17:49Z
5715,Clarified default value for DateField to emulate auto_now_add.,"If you add `default=timezone.now` to `DateField` it will give you wrong format error.
",Qlio,None,2015-11-24T13:18:54Z,2015-11-24T13:40:45Z
5714,Fixed #25662 -- Allowed creation of empty GEOS geometries.,"https://code.djangoproject.com/ticket/25662
",sir-sigurd,None,2015-11-24T09:23:08Z,2015-12-18T13:33:59Z
5713,Update qunit to 1.20.0,"This updates qunit from 1.18.0 to 1.20.0. It's working
for me on the command line with `npm test` (as long as you're
using npm version < 3.x) and in the browser at tests.html.
",nikolas,None,2015-11-24T00:28:47Z,2015-11-24T12:33:51Z
5712,Clarified default value for DateField to emulate auto_now_add.,"If you add `default=timezone.now` to `DateField` it will give you wrong format error.
",Qlio,None,2015-11-23T19:48:03Z,2015-11-24T13:18:56Z
5711,Refs #25739 -- Lessened the prominence of geos.fromstr in the docs.,"https://code.djangoproject.com/ticket/25739
",sir-sigurd,None,2015-11-23T08:31:53Z,2015-11-29T14:48:46Z
5710,Fixed #25663 -- Fixed checking of the number of points for LineString if initialized from numpy.array.,"https://code.djangoproject.com/ticket/25663
",sir-sigurd,None,2015-11-23T05:24:48Z,2015-11-29T14:48:53Z
5709,Fixed #25685 -- Fixed a duplicate query regression on deletion of proxied models.,"Will merge if the CI passes.
",charettes,None,2015-11-23T04:21:59Z,2015-11-23T04:36:14Z
5708,Fixed #25797 -- Fixed regex for getting units from SRS WKT.,"https://code.djangoproject.com/ticket/25797
",sir-sigurd,None,2015-11-22T14:16:36Z,2015-12-05T04:24:46Z
5707,Be more explicit about the kind of argument being expected,"I had some trouble figuring out what the meaning of `cl`in `def choices(self, cl)` was and what kind of argument was expected. So I suggest a somewhat longer name for the argument. (""Explicit is better than implicit. ... Readability counts."")
",jammon,None,2015-11-22T12:14:01Z,2015-11-23T17:50:09Z
5706,Support that list of fields is ALL_FIELDS,,mitar,None,2015-11-22T10:55:19Z,2015-11-23T18:52:27Z
5705,Fixed #25772 -- Corrected len lookup on ArrayField,,Uran198,None,2015-11-22T01:11:29Z,2015-11-25T22:17:29Z
5704,Fixed #25780: Removed redundant status code assertions from tests.,,alexmorozov,None,2015-11-21T14:05:52Z,2015-11-21T17:14:06Z
5703,Remove note about django.setup in django-admin doc,"The doc about `django-admin` states that `manage.py` is a wrapper around `django-admin`, which is not true.

Also, `manage.py` doesn't call `django.setup()`.

This PR fixes that.
",twidi,None,2015-11-21T12:48:59Z,2015-11-23T12:52:36Z
5702,Fixed #13427 -- Made auto-m2m verbose names translatable,,claudep,None,2015-11-21T10:03:05Z,2015-11-21T17:11:03Z
5701,Fixed #25791 -- Implemented autoreloading for the cached template loader,,jaap3,None,2015-11-21T01:33:09Z,2016-07-09T13:08:45Z
5700,Fixed #25784 -- Fixed 'collectstatic help' crash if STATIC_ROOT unset.,"Made the `manage.py help collectstatic` don't fail if the `STATIC_ROOT`
setting is empty.
",alexmorozov,None,2015-11-20T21:06:05Z,2015-11-24T08:20:55Z
5699,Fixed #25788 -- Made enabling the cached template loader a simple option,,jaap3,None,2015-11-20T21:04:20Z,2016-01-11T23:45:10Z
5698,[1.8.x] Fixed #25685 -- Fixed a duplicate query regression on deletion of proxied models.,"Thanks to Trac alias ppetrid for the report.
",charettes,None,2015-11-20T19:23:24Z,2015-11-23T04:09:27Z
5697,Fixed #25781 -- Simplified admin_views tests with client.force_login().,"https://code.djangoproject.com/ticket/25781
",awwester,None,2015-11-20T18:04:45Z,2015-11-21T22:22:34Z
5696,Fixed #25781 -- admin_views tests should mostly use client.force_login(),"https://code.djangoproject.com/ticket/25781
",awwester,None,2015-11-20T17:47:46Z,2015-11-20T18:00:56Z
5695,[1.8.x] Fixed #25786 -- Fixed set_FOO_order() crash with order_with_respect_to referencing OneToOneField pk.,"Partial backport of 7bec480fe2ace94c8e7f0c88485442bfa74436b4 from master

https://code.djangoproject.com/ticket/25786
",timgraham,None,2015-11-20T16:34:34Z,2015-11-23T16:13:29Z
5694,Fixed #25715 -- Fixed Model.refresh_from_db() with ForeignKey w/on_delete=SET_NULL.,"https://code.djangoproject.com/ticket/25715
",timgraham,None,2015-11-20T15:33:19Z,2015-11-21T16:31:02Z
5693,Fixed #25779 -- Removed redundant try block in WSGIHandler,,Uran198,None,2015-11-20T14:21:04Z,2015-11-20T14:52:31Z
5692,WIP #25783 -- Use Django cache framework in django.contrib.sites,"This is a proof of concept implementation of https://code.djangoproject.com/ticket/25783
",patrys,None,2015-11-20T10:57:40Z,2016-01-29T20:14:32Z
5691,Removed skipIf for GEOSTest.test_linearref which already exists at class level.,,sir-sigurd,None,2015-11-20T08:02:59Z,2015-11-20T19:58:37Z
5690,Fixed #25773 -- Deprecated the geos.MultiPolygon.cascaded_union property.,"https://code.djangoproject.com/ticket/25773
",sir-sigurd,None,2015-11-20T07:31:00Z,2015-11-29T14:48:46Z
5689,consider empty-space as NoneType in IntegerField,"consider the code below:

``` python
# models.py
class IntegerModel(models.Model):
   some_int_field = models.IntegerField(null=True, blank=True)

# views.py
def some_handler(request):
    some_int = request.POST['some_int_data']
    IntegerModel.objects.create(some_int_field=some_int)
    ...
```

This would raise an exception (`ValueError: invalid literal for int() with base 10: ''`) when the data **some_int_data** in the POST request is **an empty string**. We could consider empty strings as ""`None`"", since, it is really a NoneType in python.

The workaround for the Exception above (without the suggested bugfix/improvement in this PR) would be to add the following code 

``` python
some_int = request.POST['some_int_data']
# we want to catch empty string, and replace it with None
if not some_int:
    some_int = None
...
```

You might also think that the code below will do the trick, but somehow, django returns empty string and not `None`. I assume this is similar to running `"""" or None` in python, which would return `""""` instead of `None`

``` python
  some_int = request.POST.get('some_int_data', None)
```

The suggested improvement is to check if the value is `None` or `''` and return None on any case
",ibaguio,None,2015-11-20T07:22:56Z,2015-11-21T10:24:27Z
5688,Add @csrf_header_only decorator support,"Allows decorating a view so the CSRF middleware will _only_ look for the token in the header.

This helps avoid problems when trying to use a custom upload handler for a single view.  Whilst it's possible to do this without, this can make it easier.
",funkybob,None,2015-11-20T06:02:23Z,2016-02-26T19:10:43Z
5687,Fixed #25746 -- Isolated inlined test models registration.,,charettes,None,2015-11-20T01:21:07Z,2016-01-07T01:00:44Z
5686,Fixed #11313 -- Made ModelAdmin.list_editable more resilient to concurrent edits.,"Refactored ModelAdmin to pass entire model queryset to formset
when POSTing bulk edits of list-editable fields.
",benred42,None,2015-11-19T18:58:57Z,2016-02-01T21:06:37Z
5685,Fixed Docs -- protocol parameter on GenericIPAddressField expect a string,"On GenericIPAddressField the protocol parameter expect a string
",areski,None,2015-11-19T15:45:15Z,2015-11-19T16:19:16Z
5684,Fixed #25438 -- Fixed assorted Oracle GIS tests failures,"Fixed all tests to pass on Oracle. There seems to be some issues with Texas geometry with Oracle and some times apparently SpatiaLite as well.
",jtiai,None,2015-11-19T11:22:21Z,2015-11-19T14:10:38Z
5683,Fixed #25774 -- Created DateExtract expressions,"addresses [this ticket](https://code.djangoproject.com/ticket/25774) 
- DateExact and DateComparison lookups fallback to function comparison
  if rhs has no paramaters (i.e. is a function itself)
- django.db.expressions.datetime includes expressions for extracting
  parts of dates
",ryuusenshi,None,2015-11-19T06:29:08Z,2016-02-09T16:44:28Z
5682,Made RasterFieldWithoutGDALTest to be runned even if GDAL is installed.,,sir-sigurd,None,2015-11-19T04:02:00Z,2015-11-20T19:58:37Z
5681,[1.9.x] Correct stacklevel in Engine.render_to_string warnings,".. otherwise we just see django.template.loader and not the ""original""
(ie. useful!) callsites.

Signed-off-by: Chris Lamb chris@chris-lamb.co.uk
",lamby,None,2015-11-18T18:41:55Z,2015-11-19T15:55:52Z
5680,Allow chaining of the result of ``refresh_from_db``,"This will make some common test patterns shorter, ie. not requiring an
extra line, etc.
",lamby,None,2015-11-18T17:19:58Z,2015-11-21T15:45:24Z
5679,[WIP] Fixed#10403 -- Provided declarative syntax to define FormSets,"working on a old ticket to provide a cleaner implementation, not ready for review. will add small commits
",auvipy,None,2015-11-18T10:34:01Z,2016-01-19T11:00:40Z
5678,Added missing arabic characters in admin's urlify.js.,"Added more arabic characters from the base arabic letters, i skipped letters like پ and چ as they are not native arabic characters but Farsi/Urdu ones but uses arabic script but not arabic letters
",Bashar,None,2015-11-18T09:48:30Z,2016-01-22T21:17:40Z
5677,Refs #25526 -- Documented some missing termcolors.,"Also removed some redundant colors.
",timgraham,None,2015-11-17T23:48:23Z,2015-11-18T15:44:42Z
5676,Fixed #25769 -- Updated get_version() release candidate naming for PEP 0440.,"https://groups.google.com/d/topic/django-developers/pAnfNrTvrrM/discussion
",timgraham,None,2015-11-17T16:52:35Z,2015-11-19T15:27:48Z
5675,"Refs #24971, #25356 -- Clarified how apps.py works in 1.9 release notes.",,timgraham,None,2015-11-17T15:52:02Z,2015-11-18T00:43:18Z
5674,Fixed #25767 -- Corrected integer_field_ranges for MySQL backend,"https://code.djangoproject.com/ticket/25767
",georgemarshall,None,2015-11-17T06:42:50Z,2015-12-01T13:11:53Z
5673,Fixed typo in 1.9 release docs,"Similar lines say `is removed`, and I verified that `AppCommand.handle_app()` was indeed removed.
",adamzap,None,2015-11-16T22:52:38Z,2015-11-17T00:33:03Z
5672,Fixed #25764 -- Added support for serialization of enum.Enum in migrations.,"Ticket https://code.djangoproject.com/ticket/25764
",andreif,None,2015-11-16T19:41:10Z,2015-11-19T22:22:19Z
5671,Correct migrations #serializing-values url,,andreif,None,2015-11-16T18:57:35Z,2015-11-17T08:53:32Z
5670,Fixed #23751 -- Fixed code snippet formatting in docs PDF.,"https://code.djangoproject.com/ticket/23751
",timgraham,None,2015-11-16T16:21:59Z,2015-11-16T23:51:35Z
5669,Documented how to see the full traceback of a test failure.,,timgraham,None,2015-11-16T14:16:37Z,2015-11-16T14:47:52Z
5668,Fixed #25762 -- Refactored numberformat.format for speed,"See https://code.djangoproject.com/ticket/25762
",jaap3,None,2015-11-16T13:33:28Z,2016-03-25T23:53:20Z
5667,Fixed #27062 -- Eased implementing select_for_update() on MSSQL.,"In MSSQL the FOR UPDATE modificator (WITH (ROWLOCK, UPDLOCK [, NOWAIT])) is a part of the FROM clause https://msdn.microsoft.com/en-us/library/ms177634.aspx
and as such it must be placed right after FROM and not at the end of statement.
https://code.djangoproject.com/ticket/27062
",denisenkom,None,2015-11-16T04:52:29Z,2016-09-27T02:24:52Z
5666,Fixed #25708 -- Allowed raw geometry value in annotation,"Thanks Sergey Fedoseev for the report and the initial patch.
",claudep,None,2015-11-15T22:10:19Z,2017-09-09T11:03:48Z
5665,Fixed #25758 -- Date filter doesn't use internationalization when USE_L10N is True,"Deleted default value of args that used settings.DATE_FORMAT when should use internationalization if USE_l10n is true.

This, doesn't break the code, because formats.date_format(value, arg) sets a default date format from settings.DATE_FORMAT or internationalization when args is None.
",AliLozano,None,2015-11-15T20:57:46Z,2015-12-11T17:56:23Z
5664,Fixed #25682 -- Corrected catching bare exceptions,,Uran198,None,2015-11-15T18:56:32Z,2015-11-17T21:47:03Z
5663,Changed section title from Model syntax to Introduction to models,"The original title ""Model syntax"" wasn't reflective of the purpose of the document, which led to confusion as to where to start when learning about the subject (as I found out just now when attempting to do so myself).
",thatdocslady,None,2015-11-15T16:06:33Z,2015-11-16T14:56:21Z
5662,[WIP] Fixed #21936 -- Refactored DeleteView to be compatibale with SuccessMessageMixin,,auvipy,None,2015-11-15T16:04:21Z,2015-11-24T06:47:24Z
5661,"Fixed #25755 -- Unified spelling of ""website""","…word 'website'
https://code.djangoproject.com/ticket/25755#ticket
",rzekotkadrzewna,None,2015-11-15T14:12:06Z,2015-11-16T11:45:46Z
5660,Simplified lists creation in three places,"Trivial changes. Unnecessary appends are removed
",Stranger6667,None,2015-11-15T08:22:20Z,2015-11-17T13:00:55Z
5659,Ticket 25745 1.8 backport,"Will merge if CI pass.
",charettes,None,2015-11-14T17:51:05Z,2015-11-14T18:12:51Z
5658,"Fixed #25349 - ModelForm bug that occurs when saving None value to a ForeignKey with null=True, blank=False and required=False.","https://code.djangoproject.com/ticket/25349
",haxoza,None,2015-11-14T16:42:41Z,2016-02-19T19:19:59Z
5657,Ticket #25745 1.9 backport,"Will merge if CI pass.
",charettes,None,2015-11-14T16:39:51Z,2015-11-14T17:52:04Z
5656,Fixed admin_filters test failures when run in reverse.,,timgraham,None,2015-11-14T15:30:41Z,2015-11-14T16:32:25Z
5655,Fixed #25753 -- Made get_format() cache the formats from Django settings.,"See https://code.djangoproject.com/ticket/25753
",jaap3,None,2015-11-14T15:20:48Z,2016-03-17T17:20:33Z
5654,Corrected outdated information in submitting patches guide.,,timgraham,None,2015-11-14T13:54:19Z,2015-11-16T15:01:06Z
5653,Made doc icons edge smooth.,,arniu,None,2015-11-14T11:00:20Z,2015-11-14T13:12:46Z
5652,Fixed #25745 -- Promoted RuntimeWarnings to errors in the test suite.,,charettes,None,2015-11-13T22:14:52Z,2015-11-14T16:34:39Z
5651,"Fixed #25647 -- Reverted ""Simplified deduplication of test databases.""","This reverts commit 49eee84245b1297a84ad4ddc2251e287ef585ea2.

I don't know if we should try to consult database routers in this code at some point, but I took the conservative solution of reverting the original patch.

https://code.djangoproject.com/ticket/25647
",timgraham,None,2015-11-13T16:42:53Z,2015-11-14T12:53:37Z
5650,Fixed docstring to be consistent with documentation,"This puts the docstring in line with the documentation at https://docs.djangoproject.com/en/1.8/howto/custom-management-commands/#django.core.management.BaseCommand.get_version (which I think is the one that makes more sense).
",bmispelon,None,2015-11-13T16:11:57Z,2015-11-14T12:59:46Z
5649,Fixed #25750 -- Made Options._expire_cache faster,"Made Options._expire_cache much faster by avoiding unnecessary list operations and by avoiding `delattr` calls that would result in an exception being raised as it involves call frame reconstruction which is very costly. Especially so in a function that is called millions of times.

Relevant ticket: https://code.djangoproject.com/ticket/25750
",patrys,None,2015-11-13T13:42:31Z,2015-11-14T21:44:16Z
5648,Minor language tweak.,"""Still MAD at Yoko"" is a bit of an odd and overloaded phrase for us to use here.
We oughta go with something neutral instead.
",tomchristie,None,2015-11-13T11:26:03Z,2015-11-13T12:58:57Z
5647,Update epub theme,#NAME?,arniu,None,2015-11-13T10:44:00Z,2015-11-14T11:01:10Z
5646,Check dates conversion,"Hi,
while chasing a bug I added those assertions because I wasn't sure about date conversion from `Ranges`.
I thought submitting this PR would be beneficial for others.
",ticosax,None,2015-11-13T09:24:11Z,2015-11-13T13:26:15Z
5645,Fixed #13774 -- Added models.Field.rel_db_type().,,alesasnouski,None,2015-11-13T08:05:56Z,2015-12-04T12:56:20Z
5644,Bumped mysqlclient test requirement to >= 1.3.7.,"mysqlclient 1.3.7 fixes the test failures caused by 1.3.6.
",timgraham,None,2015-11-13T02:08:57Z,2015-11-13T02:35:05Z
5643,Fixed #25304 -- Added option to allow management commands to check if migrations are applied.,"adding required_migrations_checks to BaseCommand to support unapplied migrationgs on other managements command, runserver, createsuperuser and changepassword activate this check
",MounirMesselmeni,None,2015-11-12T23:24:36Z,2016-02-12T18:36:04Z
5642,Fixed #25283 -- Avoid collectstatic errors if an url contains a fragment that looks like a path,"In some cases an @font-face declaration will contain a fragment that looks like a relative path.

e.g. @font-face { src: url('../fonts/font.svg#../path/like/fragment'); }

In these cases an incorrect path was passed to the storage backend, which raised an error
that in turn caused collectstatic to stop dead in it's tracks.
",jaap3,None,2015-11-12T22:21:14Z,2015-11-26T11:18:48Z
5641,Fixed #25744 -- Added a reference to User objects at docs,"https://code.djangoproject.com/ticket/25744
",andersonresende,None,2015-11-12T20:24:10Z,2015-11-13T00:24:27Z
5640,Fixed #25743 -- Bail early if the input to localize(_input) is a string,"More details at https://code.djangoproject.com/ticket/25743
",jaap3,None,2015-11-12T14:18:56Z,2015-11-26T11:29:07Z
5639,Backport of #4818,"as per comment https://github.com/django/django/pull/5630#issuecomment-155929006

/cc @timgraham 
",ticosax,None,2015-11-12T11:33:35Z,2015-11-12T15:45:53Z
5638,Update admin_inlines failing test,"It seems we need maximize and some waits in test_delete_stackeds
",ITsvetkoFF,None,2015-11-12T02:12:05Z,2015-11-12T02:14:16Z
5637,[WIP] Add view_decorators list to View,"Add an option to the View class to apply decorators to the view function returned by as_view.

[needs docs + tests]
",funkybob,None,2015-11-12T00:08:20Z,2016-02-22T21:18:14Z
5636,Remove gendered pronoun,"Fixes a comment that used 'he' to refer to a Django user.
",razzius,None,2015-11-11T21:59:21Z,2015-11-11T22:07:44Z
5635,Fixed #25725 -- Made HttpReponse immediately close objects.,"Previously iterators passed to a HttpResponse where stored in
_closable_objects to be closed when the WSGI server called `close`
instead of being disgarded as defined in the documenation.

Now the iterator is closed and discarded after it was consumed.
The closeables are being closed, in case people passed File objects
to a response without closing it.
",codingjoe,None,2015-11-11T19:24:38Z,2015-12-15T15:48:03Z
5634,Backport of #5625 to 1.7.x,"Just want to make sure this pass CI, will merge if it does.
",charettes,None,2015-11-11T17:44:45Z,2015-11-11T18:25:46Z
5633,Backport of #5625 to 1.8.x,"Just want to make sure this pass CI, will merge if it does.
",charettes,None,2015-11-11T17:32:33Z,2015-11-11T18:00:41Z
5632,Fixed #25734 -- Made GDALBand min and max properties use GDALComputeRasterStatistics.,"Properties now use the GDALComputeRasterStatistics function to retrieve values.
",yellowcap,None,2015-11-11T16:27:49Z,2015-11-25T18:41:23Z
5631,Fixed #25732 -- Updated design philosophies doc,"Updated reference to template system not allowing assignment
to variables. The simple_tag now allows this.
",nealtodd,None,2015-11-11T15:27:04Z,2015-11-11T16:56:26Z
5630,[1.8.x] Fixed #24937 -- fix serialization of Date(Time)RangeField.,"Hi,
This is a backport of 2926559cce34e48efb4b073721926d737e372dd3 against 1.8.x.
",ticosax,None,2015-11-11T14:43:06Z,2015-11-12T11:34:33Z
5629,Turn background color of the note marks into transparent,"The note marks are white squares, which are really dazzling when reading the .epub document on iBooks at night.
",arniu,None,2015-11-11T12:05:16Z,2015-11-11T16:41:32Z
5628,Fixed #25710: Clarified the docs about what INTERNAL_IPS does.,,alexmorozov,None,2015-11-11T08:27:59Z,2015-11-17T15:17:00Z
5627,Fixed #25722 -- Added support for `GEOSCovers` to `GEOSGeometry`.,"https://code.djangoproject.com/ticket/25722
",sir-sigurd,None,2015-11-11T07:20:27Z,2015-11-20T19:58:37Z
5626,Fixed #25730 -- Made Model.__str__() always return str instances.,"Thanks to Kevin Turner for the report.
",charettes,None,2015-11-11T06:32:00Z,2015-11-11T17:20:33Z
5625,Ticket 25693 enhancements,,charettes,None,2015-11-11T05:50:54Z,2015-11-11T17:26:16Z
5624,[1.7.x] Fixed #25693 -- Prevented data loss with Prefetch and ManyToM…,"…anyField.

Thanks to Jamie Matthews for finding and explaining the bug.

Backport of 4608573788c04fc047da42b4b7b48fdee8136ad3 from master
",charettes,None,2015-11-11T05:26:12Z,2015-11-11T17:22:44Z
5623,Updated six to 1.10.0.,,timgraham,None,2015-11-11T03:09:10Z,2015-11-11T13:31:47Z
5622,Fixed #25728 -- Fixed description of `GEOSGeometry.contains`.,"https://code.djangoproject.com/ticket/25728
",sir-sigurd,None,2015-11-10T18:56:53Z,2015-11-12T06:21:10Z
5621,Fixed #25710 -- Documented what INTERNAL_IPS does under the DEBUG set…,"…ting.
",atombrella,None,2015-11-10T18:43:41Z,2015-11-14T22:09:46Z
5620,Fixed #25548 -- Prevented FormView.form_invalid() from discarding its form argument.,,alexmorozov,None,2015-11-10T13:10:20Z,2015-11-11T18:45:33Z
5619,update psycopg2 install instructions under windows,"psycopg2 is now pip-installable to windows users as well.
See:
https://github.com/psycopg/psycopg2/issues/368
",nonZero,None,2015-11-09T21:57:28Z,2015-11-09T22:40:52Z
5618,Fixed #25723 -- Made related field checks lookup against their local apps.,"Discovered while working on #5613
",charettes,None,2015-11-09T21:52:39Z,2015-11-12T15:37:59Z
5617,Fixed #25718 -- Fixed JSONField isnull lookups,"Initially it was only about JSONField from `django.contrib.postgres`, but in fact, an ability to query `None` values might be helpful.
In current trunk there is only one case for `None` - convert it to SQL's `NULL` , but with some complex types it is also possible to have another options of `None` conversion. In this case - JSON's `null`.
At that moment I'm not completely sure about `isnull` lookup usage, because it corresponds to `IS NULL` in SQL, which is an other concept rather then `null` in JSON. Please give an advise.
Thanks.
",Stranger6667,None,2015-11-09T17:52:46Z,2016-01-11T23:47:07Z
5616,Postgres setup,,jimgraham,None,2015-11-09T17:40:08Z,2015-11-09T18:09:58Z
5615,Fixed #25720 -- Made Py2 gettext() return bytestring if input is bytestring.,"This is consistent with the behavior of Django 1.7.x and earlier.
",intgr,None,2015-11-09T14:47:41Z,2015-11-11T13:57:36Z
5614,Fixed #25708 -- Fixed annotations with geometry values.,"https://code.djangoproject.com/ticket/25708
",sir-sigurd,None,2015-11-09T06:37:59Z,2016-12-07T19:19:02Z
5613,[WIP] Prevented unnecessary table creation in tests.,"83 tables so far and counting (excluding automatically created intermediary M2M).

This should speed up the test suite startup on backends with slow table creation and cloning (Oracle, MSSQL) and also help with the MSSQL constraint toggling issue.
",charettes,None,2015-11-09T02:41:04Z,2016-03-11T16:51:48Z
5612,Fixed #25452 -- improved EmailValidator according to various RFCs.,"See https://code.djangoproject.com/ticket/25452 for the details.

The changes were made based on:
- http://tools.ietf.org/html/rfc3696#section-3 (Human readable email
  address validation guide)
- http://tools.ietf.org/html/rfc2822 (Internet Message Format, section 3.4.1)
- http://tools.ietf.org/html/rfc2821 (SMTP, section 4.5.3.1)
- http://tools.ietf.org/html/rfc1035 (Domain names, section 2.3.1)

Actual changes that were made:
- Added check to ensure that TLD does not start with '-' (actual #25452 issue)
- Allowed \040 (space) character to be in a quoted string local part
- Limited local part to be up to 64 characters, domain part up to 255 characters
- Added extra test cases to ensure that local part neither starts nor ends with
  '.' and does not have adjacent periods
- Allowed quoted '@', ' ' and '\' in local part (dot atom form)
- Added a few rather weird test cases from
  https://en.wikipedia.org/wiki/Email_address#Examples (no code changes have
  been made for this, it just worked out of the box)
- Added test cases to ensure that email can't start or end with a whitespace
",bak1an,None,2015-11-08T20:57:22Z,2016-03-17T16:08:43Z
5611,Fixed #25526 -- Documented how to output colored text in custom management commands.,"Added short description for CommandBase.style attribute. Also added 2 examples of how the style can be used when outputting to stdout.
",elenaoat,None,2015-11-08T15:07:35Z,2015-11-17T23:43:18Z
5610,Fixed #25469 -- Added autoescape option to DjangoTemplates backend.,"Adds the changes from aaugustin, implements tests, fixes a couple typos. 

There is one awkward bit - RequestContext either needs to take a new autoescape argument it doesn't use or make_context needs to not pass kwargs to RequestContext. I went with the second option, but it's totally arbitrary. 
",aaronelliotross,None,2015-11-08T09:13:48Z,2015-11-13T00:15:59Z
5609,[WIP] Fixed #14370 -- Support Autocomplete in the admin,"https://code.djangoproject.com/ticket/14370
totally crazy. basically a replacement for raw_id_fields.

this vendors select2

the widgets.py has a lot of duplicated code that could be cleaned up.

no tests, no docs, super buggy css (new inlines don't work, i assume)

it also doesn't really search if search_fields are not defined.

doesn't handle to_field.
",collinanderson,None,2015-11-07T23:51:17Z,2015-12-30T14:43:04Z
5608,Fixed #25531 -- Documented field lookups on admin_order_field.,"https://code.djangoproject.com/ticket/25531
",rfleschenberg,None,2015-11-07T21:02:22Z,2015-11-14T22:40:30Z
5607,Resolved #25696 -- WIP Added django sphinx extension to contrib,"This is a very first compilation of snippets that I use to make docutils work it's magic with django.

I guess we could extend this to an actual feature set.
",codingjoe,None,2015-11-07T18:29:39Z,2015-11-07T19:34:38Z
5606,Fixed #25704 -- Response time in WSGIRequestHandler.log_request,"ref https://code.djangoproject.com/ticket/25704
",andreif,None,2015-11-07T17:42:06Z,2016-02-01T18:56:47Z
5605,Fixed #20869 -- Made CSRF tokens change every request.,"@PaulMcMillan would appreciate your review
",shaib,None,2015-11-07T16:41:57Z,2016-05-19T04:57:04Z
5604,Fixed #12233 -- Added an option to redirect authenticated users away from the login page.,"Optionally redirect authenticated user when they hit the login page.

See ticket https://code.djangoproject.com/ticket/12233
",olethanh,None,2015-11-07T16:31:48Z,2016-02-25T01:58:40Z
5603,Fixed #25412 -- Fixed missing PostgreSQL index on Char/TextField when using AlterField.,"Fixed the PostgreSQL schema editor to create/remove the index with the
operator class when altering a CharField or a TextField.
Thanks also to Emanuele Palazzetti for the help.
",synasius,None,2015-11-07T16:31:12Z,2015-12-10T21:23:34Z
5602,Fixed #25697 -- Made default error views error when passed a nonexistent template name.,"Passing a non existing template_name to default error views should
raise a TemplateDoesNotExist error. Emitting a
PendingDeprecationWarning for the deprecation phase.
",yakky,None,2015-11-07T16:26:47Z,2016-01-14T12:09:08Z
5601,Fixed #25388 -- make it possible to skip migrations during tests,"https://code.djangoproject.com/ticket/25388
",viciu,None,2015-11-07T16:15:55Z,2016-03-17T17:25:12Z
5600,Refs #16859 -- Allowed storing CSRF tokens in sessions.,"I'd love to have some review on this, but I'm fine with postponing the merge after Shai landed his changes to CSRF handling, as those two _will_ get merge conflicts.
",raphaelm,None,2015-11-07T16:03:37Z,2016-12-16T20:22:59Z
5599,"Renaming bad called test module, fix imports","Name of module doesnt reflect intention
",lobziik,None,2015-11-07T15:52:54Z,2015-11-07T20:35:39Z
5598,Fixed #494 -- Added ability to collapse inlines,,kmtracey,None,2015-11-07T15:51:38Z,2015-12-21T18:57:59Z
5597,Fixed #6727 - patch_cache_control now properly patches an empty string,,dwightgunning,None,2015-11-07T15:38:43Z,2015-11-09T19:29:15Z
5596,Fixed #25544 -- Removed duplicates in prefetch_related,,Ian-Foote,None,2015-11-07T15:33:20Z,2015-12-22T09:51:45Z
5595,Fixed #24782 -- Added assertFormValid and assertFormNotValid methods.,"Adds two functions under `django.test.testcases.SimpleTestCase` as instructed in this #4645 that has so far been closed:
- `assertFormValid`
- `assertFormNotValid`

The two functions are inspired by [this comment](https://github.com/django/django/pull/4645#issuecomment-107254019) by @mjtamlyn .

Unit tests have also been added for each function covering the possible use cases.

Since this is my first PR to an open-source project _ever_ I'm appreciative of feedback you will (should) have.

P.S. This PR has started off by applying user `delgiudices` work (1st commit).
Will squash commits once review feedback is applied.
",jvzammit,None,2015-11-07T15:25:24Z,2016-01-26T18:18:06Z
5594,Fixed #15910 -- Displayed delete buttons for all admin inline formset rows.,"I have updated the patch for #15910 to apply clean to current master, include a Selenium test and also update the minified file.

There is also a commit with a fix in a related test that is be more quickly exposed with the made changes.

All the tests (including the Selenium ones) pass.
",arthurdejong,None,2015-11-07T15:23:20Z,2016-02-26T19:16:52Z
5593,Fixed 25473 -- Changed underscores in URL names to dashes,"To improve consistency, sample URL names that had underscores in them now use dashes instead. That excludes URL names that have some relation to the code, such as those generated by DjangoAdmin. Thanks guettli, for reporting this.
",thijsvandien,None,2015-11-07T15:21:54Z,2015-11-07T21:00:12Z
5592,Fixed debug view crash during the autumn DST change.,"This PR supersedes #5529. /cc @apollo13 
",aaugustin,None,2015-11-07T15:13:24Z,2015-11-07T22:18:48Z
5591,"[wip] First stab at ""new"" middleware handling.","https://github.com/django/deps/blob/master/draft/0005-rethinking-middleware.rst
",apollo13,None,2015-11-07T15:13:10Z,2016-01-08T19:03:07Z
5590,Amend comment to remove reference to the no longer used NullHandler,"null handler removed in 987e4b91
",nealtodd,None,2015-11-07T15:10:40Z,2015-11-18T14:57:00Z
5589,Fixed #25616 -- Added a note regarding missing dependencies on LookupError,"This  fixes #25616 by including additional information in the traceback regarding missing dependencies during an attempted migration.
",cho-rizo,None,2015-11-07T15:10:33Z,2015-12-28T16:42:00Z
5588,Fixed #25551 -- Fixed migration operations ordering when adding fields and a unique_together constraint.,"Added fix for ticket https://code.djangoproject.com/ticket/25551 .
",avojnovicDk,None,2015-11-07T14:50:22Z,2015-11-20T17:21:27Z
5587,"Add ""Files"" section to unicode topic","Document improvements to help avoiding unicode problems with file uploads.

Relates to two open tickets:
- https://code.djangoproject.com/ticket/17686
- https://code.djangoproject.com/ticket/17816

(@fako helped)
",fdemmer,None,2015-11-07T14:39:25Z,2017-03-23T00:31:19Z
5586,Fixed #25699 -- Test client support for custom session apps.,"Work in progress PR for https://code.djangoproject.com/ticket/25699
No tests yet, mostly to convey the general idea.
",sergeykolosov,None,2015-11-07T14:39:23Z,2016-01-29T20:11:57Z
5585,Fixed #25735 -- Added support for test tags in test runner.,"It doesn't have extensive tests nor docs yet - the question is, is this direction that we want to move in?
",mrbox,None,2015-11-07T14:16:28Z,2016-02-13T13:21:35Z
5584,Fixed #25469 -- Allowed Django template engine autoescaping to be disabled.,"See ticket https://code.djangoproject.com/ticket/25469
",jgeskens,None,2015-11-07T14:16:24Z,2015-11-07T15:46:23Z
5583,Removed ability to pass a geometry string to GIS functions,"This was a possible confusion source with column name arguments.
Thanks Sergey Fedoseev for the suggestion.
",claudep,None,2015-11-07T13:48:08Z,2015-11-07T15:05:24Z
5582,Fixed #25063 -- Added path to makemigration's output of migration name.,"Instead of just printing the name of the generated migrations, let
makemigrations print the path to the migration. If it's inside the
current directory print the relative path, otherwise the absolute one.
",nielsvanoch,None,2015-11-07T13:44:57Z,2015-12-18T16:25:43Z
5581,Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy(),"This is actually a rebased version of #1007 / #4002 which fixes the @timgraham remarks on those
",yakky,None,2015-11-07T13:39:25Z,2015-12-12T19:49:34Z
5580,Fixed #25170 -- Made assertXMLEqual ignore leading and trailing whitespace,"Made assertXMLEqual() and assertXMLNotEqual() ignore whitespaces outside of tags.
",nostalgiaz,None,2015-11-07T13:33:19Z,2015-11-09T20:55:13Z
5579,Fixed #8851: Added default filter option to the admin.,"Added an option to add default values for filters in the admin, to be able to
distinguish between having no filter select and disabling the filter I added
a per ModelAdmin configurable sentinel value.
",hvdklauw,None,2015-11-07T13:23:19Z,2018-01-25T07:53:30Z
5578,[WIP] Rewrote the URL dispatcher API.,,knbk,None,2015-11-07T13:22:12Z,2016-09-17T00:52:20Z
5577,Fixed #25695 -- Added template_name parameter to csrf_failure view,"https://code.djangoproject.com/ticket/25695
",raphaelm,None,2015-11-07T13:19:11Z,2015-11-17T19:29:51Z
5576,Fixed #22810 -- Correct full result count for filtered queries.,,slurms,None,2015-11-07T13:02:09Z,2015-11-19T00:55:12Z
5575,Fixed #25666 -- Fixed the exact lookup of ArrayField.,,Stranger6667,None,2015-11-07T12:53:16Z,2015-11-14T16:27:13Z
5574,Fixed #25687 -- Documented adding expressions support to third-party database backends.,"Added documentation on how to add support for third party backends to
expressions. Thanks for reporting it, David De Sousa.
",kristofclaes,None,2015-11-07T12:45:42Z,2016-02-12T19:48:48Z
5573,Fixed #19536 -- Show object-tools when has_add_permission is False.,,slurms,None,2015-11-07T11:34:44Z,2015-12-29T17:11:10Z
5572,Fixed #25617 -- Added case-insensitive unique username validation in UserCreationForm.,"https://code.djangoproject.com/ticket/25617
",nmundar,None,2015-11-07T11:33:30Z,2016-01-06T11:14:05Z
5571,Fixed #21221 -- Made form Media and static template tag use staticfiles if installed.,"Previously form assets defined as a forms media have been served using a joined
absolute path consisting of the `STATIC_URL` and defined relative path.
This commit changed the `absolute_path` method to serve form media using
`django.contrib.staticfiles` if configured.

This will allow users to server their form media from a CDN or any other
staticfiles storage of their choosing.
",codingjoe,None,2015-11-07T11:33:02Z,2016-01-14T17:25:05Z
5570,Fixed #25680 -- Added django-admin shell --command option,"Add a -c option to the shell command to execute a command passed as a
string as Django.
",nielsvanoch,None,2015-11-07T11:22:07Z,2016-01-06T23:44:13Z
5569,Simplify dictionary creation,"Trivial changes
",Stranger6667,None,2015-11-07T10:59:04Z,2015-11-07T20:53:01Z
5568,Fixed #25693 -- Prevented prefetched data and field collision,"Thanks to Jamie Matthews for finding and explaining the bug.
",Ian-Foote,None,2015-11-07T10:53:54Z,2015-11-11T05:27:01Z
5567,Fixed #25165 -- Removed all inline javascript from contrib.admin,"Refactored the admin app to no longer rely on inline javascript.
Instead data is passed to javascript via json.
All javascript is in external files.
Some inline javascript around autofocusing inputs was removed
completly in favour of HTML5 autofocus attribute
",graingert,None,2015-11-07T10:41:53Z,2016-01-13T23:36:39Z
5566,Fixed #25637 -- Added URLValidator hostname length validation.,"URLValidator now validates the maximum length of a hostname in total
and the maximum length of all labels inside the hostname. The label
validation is done in the regular expression while the hostname length
check is implemented by introducing a new check in the validator's
**call** method. Please note that the additional call on urlsplit()
introduced there should not be a measurable performance overhead, as
urlsplit is called anyway in some of the code branches above and the
standard-library implementation uses an internal result cache.
",raphaelm,None,2015-11-07T10:23:53Z,2015-12-09T11:38:06Z
5565,Refs #25655 -- Made HAS_GEOS depend on a minimum version.,,claudep,None,2015-11-07T09:16:55Z,2015-12-04T07:10:51Z
5564,Fixed #25692 -- Added natural keys support to the Site model,,j0hnsmith,None,2015-11-06T22:56:35Z,2015-11-07T20:22:02Z
5563,Fixed #25688 -- Made admin.register() disallow an empty list of models.,"admin.register shouldn't allow an empty list of models to be registered
",hramezani,None,2015-11-06T16:54:48Z,2015-11-12T14:55:24Z
5562,Fixed #25274 --- Made inspectdb handle renamed fields in unique_together.,"Inspectdb now handles renamed fields in unique_together. 

It was tested on sqlite and postgresql (I don't know whether I'm supposed to check it on other all databases). 
",jbzdak,None,2015-11-06T16:40:37Z,2015-11-25T18:15:29Z
5561,"Fixed #25686 -- Allowed routers without ""allow_migrate"" method","Fixes regression introduced in e2ea30c
Ticket: https://code.djangoproject.com/ticket/25686
Old PR: https://github.com/django/django/pull/5557

I'm not sure it should raise two warnings (as seen in the test) because `allow_syncdb` never had the new signature, but I left it because it appears to be the behavior in 1.8.5.
",jcugat,None,2015-11-06T16:39:07Z,2015-11-09T15:58:33Z
5560,Fixed #25684 -- Made `WSGIRequestHandler` use logging,"ref https://code.djangoproject.com/ticket/25684

This is just preliminary work to make sure it's going in the right direction. It obviously still needs tests and docs
",fcurella,None,2015-11-06T16:21:29Z,2016-01-11T12:42:09Z
5559,Fixed #25170 --- assertXMLEquals ignores whitespace around tags.,"Test function assertXMLEquals will now ignore whitespace around
outermost tags in the string given to it, whitespace inside
tags, or between them is not ignored.
",jbzdak,None,2015-11-06T13:37:49Z,2015-11-09T20:56:21Z
5558,Fixed #25681 - Corrected documentation example,,Uran198,None,2015-11-06T12:24:28Z,2015-11-07T13:44:55Z
5557,"Fixed #25686 -- Allow routers without ""allow_migrate"" method","Fixes regression introduced in e2ea30c
Ticket: https://code.djangoproject.com/ticket/25686
Old PR: https://github.com/django/django/pull/5556
",jcugat,None,2015-11-06T12:05:10Z,2015-11-09T11:57:23Z
5556,"Fixed #25686 -- Allow routers without ""allow_migrate"" method","Fixes regression introduced in e2ea30c
Ticket: https://code.djangoproject.com/ticket/25686
",jcugat,None,2015-11-06T11:41:12Z,2015-11-06T12:06:05Z
5555,[1.8.x] Fixed #25683 -- ModelChoiceField accepts Manager objects for queryset.,"This was a regression from the fix of #25496. Additionally, I refactored
some iffy code from that fix.

This fix was sponsored by [voicecom.ee](https://voicecom.ee).
",intgr,None,2015-11-05T17:17:14Z,2015-11-09T11:34:42Z
5554,Fixed #25683 -- Made ModelChoiceField queryset accept Manager objects.,"This was a regression from the fix of #25496. Additionally, I refactored
some iffy code from that fix.

This fix was sponsored by [voicecom.ee](https://voicecom.ee).
",intgr,None,2015-11-05T17:16:34Z,2015-11-09T17:44:51Z
5553,Make sure to never catch SystemExit.,"If a `SystemExit` is raised one way or another, it should not be caught.

In some places, there are already some guards against catching `SystemExit`, but it's good to add some more.
",sjoerdjob,None,2015-11-05T14:56:46Z,2015-11-16T12:16:01Z
5552,Fixed #25679 -- ModelForm.Meta.fields and exclude are not honoured for custom fields,,hramezani,None,2015-11-05T13:28:44Z,2015-11-06T01:18:06Z
5551,Fixed #25670 -- Implemented ordering by numeric `arg` for `dictsort` and `dictsortreversed` filters,"https://code.djangoproject.com/ticket/25670
",soon,None,2015-11-05T11:17:52Z,2016-02-23T18:43:01Z
5550,Fixed #25663 -- Added checking of the number of points for `LinearRing` and `LineString`.,"https://code.djangoproject.com/ticket/25663
",sir-sigurd,None,2015-11-05T08:38:15Z,2015-11-19T03:46:59Z
5549,Fixed #25665 -- Deprecated public getters/setters for properties of `GEOSGeometry` and its subclasses,"https://code.djangoproject.com/ticket/25665
",sir-sigurd,None,2015-11-05T06:09:42Z,2015-11-19T03:46:42Z
5548,[1.8.x] fixed #25618 -- Added migration support for non-upgraded apps,"https://code.djangoproject.com/ticket/25618

This PR fixes ticket  #25618, specifically, the problem related in [this comment](https://code.djangoproject.com/ticket/25618#comment:7).

In this sense, a non-upgraded app is one that retains south migrations
in the `migrations` module and does not introduce Django migrations at all.

Such an app would, under the previous solution, break the migration system.
",ryuusenshi,None,2015-11-04T22:45:30Z,2015-11-10T15:37:20Z
5547,Fixed #25677 -- Prevented decoding errors in/after Popen calls,"Just to see what this gives on Windows...
",claudep,None,2015-11-04T20:52:12Z,2015-11-19T14:18:36Z
5546,fix #25675 -- divisibleby template filter optimization,"django template system return `ValueError` if in `divisibleby` template filter, ‍‍‍value or argument can not convert to Int.
it is better to return `False` in this case 
",hramezani,None,2015-11-04T13:26:49Z,2015-11-07T10:32:35Z
5545,Fixed #24576 -- Deletion of related objects made deterministic,,laurafeier,None,2015-11-04T12:49:34Z,2015-11-09T20:05:34Z
5544,Fixed #25673 -- Made `GeometryField.from_db_value` set SRID.,,sir-sigurd,None,2015-11-04T06:35:20Z,2015-11-12T06:22:16Z
5543,Fixed #25671 -- arrange model in django admin index page.,"add an option to `ModelAdmin` that get integer value like this:
`order = 1`
if order exists and has a valid integer value, it apply as model order, else previous behaviour(arrange model by name in alphabetical order) applied.
",hramezani,None,2015-11-03T16:33:47Z,2015-11-03T20:15:36Z
5542,Fixed #25668 -- Misc spelling errors,,scop,None,2015-11-03T09:58:40Z,2015-11-03T10:56:53Z
5541,Fixed #25667 -- Fixed admindocs docutils initial_header_level.,,scop,None,2015-11-03T09:45:27Z,2015-12-04T07:22:40Z
5540,unmached ] removed in auth.login function call doc,"small change, an umached ] in the function call docs for auth.login.
probably left over from when it was used to wrap optional parameters.
",japrogramer,None,2015-11-03T03:54:35Z,2015-11-03T16:47:26Z
5539,Use https when pinging Google for sitemap changes,"Probably not a huge deal, but why not?
",mattrobenolt,None,2015-11-02T23:12:04Z,2015-11-19T16:08:01Z
5538,Fixed #25661 -- Fixed checking number of poinst during list assignment for `LinearRing`.,,sir-sigurd,None,2015-11-02T19:38:21Z,2015-11-05T12:27:21Z
5537,Fixed #25660 -- Documented `GEOSGeometry.dims`.,,sir-sigurd,None,2015-11-02T18:49:51Z,2015-11-05T11:44:39Z
5536,Fixed #25664 -- Fixed `dims` for `Point`.,,sir-sigurd,None,2015-11-02T18:11:31Z,2015-11-05T11:44:47Z
5535,Don't try to initialize object with parameters,"Solves:

```
File "".../lib/python3.4/site-packages/django/contrib/staticfiles/finders.py"", line 140, in __init__
    super(AppDirectoriesFinder, self).__init__(*args, **kwargs)
TypeError: object.__init__() takes no parameters
```
",blag,None,2015-11-02T13:57:01Z,2015-11-16T12:11:32Z
5534,Fixed #25132 -- Document how to retrieve a single value using values_list() and get().,,alexmorozov,None,2015-11-02T12:47:04Z,2015-11-11T06:53:08Z
5533,Fixed #24244 -- Documented contrib.admin.models.LogEntry,,alexmorozov,None,2015-11-02T10:10:20Z,2015-11-11T06:52:57Z
5532,Fixed #25659 -- Added missing support for MySQL 5.6.1 to GeoDjango DB functions.,,sir-sigurd,None,2015-11-02T09:17:20Z,2015-11-05T11:44:49Z
5531,Cache SingleObjectMixin's queryset,"Cache django.views.generic.detail.SingleObjectMixin's self.queryset when self.get_queryset is called, to be able to call self.get_object multiple times cost-free.
",amikrop,None,2015-11-02T05:26:03Z,2015-11-04T16:26:57Z
5530,Fixed #25658 -- Allowed inspectdb to inspect a specific set of tables.,"This adds a new option to the `inspectdb` command so that, instead of automatically detecting and inspecting all existing views and tables in a database, the user can input what tables and views should be inspected.

Usage is simple:

```
./manage.py inspectdb tablename1 viewname2
```

Trac ticket: https://code.djangoproject.com/ticket/25658#ticket
",JoseTomasTocino,None,2015-11-02T00:02:19Z,2016-03-18T13:00:13Z
5529,Fixed AmbiguousTimeError in the debug view during DST changes.,"The error was caused if USE_TZ is False and an error was reported during DST changes.
",apollo13,None,2015-11-01T11:03:21Z,2015-11-07T13:13:39Z
5528,Fixed #25654: Added support for `GEOSUnaryUnion` to `GEOSGeometry'.,,sir-sigurd,None,2015-11-01T04:51:59Z,2015-11-19T03:46:50Z
5527,Fixed #25655: Dropped support for GEOS < 3.3.,,sir-sigurd,None,2015-11-01T03:54:32Z,2015-11-05T11:44:51Z
5526,small modification in models docs,,t-3-k,None,2015-10-31T11:50:14Z,2015-10-31T12:53:59Z
5525,Fixed #25549 -- Added auth_user_password_change urlreverse example.,"[Ticket](https://code.djangoproject.com/ticket/25549)
",darkryder,None,2015-10-31T11:40:25Z,2015-11-19T00:37:00Z
5524,Fixed #25619 -- Made runserver serve with HTTP 1.1 protocol,,claudep,None,2015-10-30T23:40:05Z,2017-02-10T10:00:36Z
5523,Fixed #25644 -- Fixed reset cookie expiry date bug,"https://code.djangoproject.com/ticket/25644

Setting a cookie with the same key as a previously deleted cookie would set its expiry date to `'Thu, 01-Jan-1970 00:00:00 GMT'`.
",raphaelmerx,None,2015-10-30T22:25:21Z,2015-11-18T12:54:35Z
5522,Fixed #25169 -- Clarify stacking of permission_required and login_required,"Stacking @login_required before @permission_required gives users a
chance to login before potentially being redirected to a 403 page.
",bxm156,None,2015-10-30T20:28:40Z,2015-11-12T19:33:30Z
5521,Refs #25632: Documented missing version requirements for GeoDjango DB functions in db-api.txt.,,sir-sigurd,None,2015-10-30T18:00:13Z,2015-11-05T11:44:56Z
5520,Class based views addition to advanced testing topics,"Small addendum to show how to test CBV with request from request
factory
",bee-keeper,None,2015-10-30T15:31:04Z,2015-10-30T17:16:07Z
5519,Refs #24499 -- Removed an obsolete test check for PostGIS 1.5.,,timgraham,None,2015-10-30T15:02:45Z,2015-10-30T15:30:12Z
5518,Fixed #25636: Dropped support for SpatiaLite < 3.0.,,sir-sigurd,None,2015-10-30T12:41:44Z,2015-10-31T13:32:53Z
5517,Restricted blank validation,"An exception will be raised for non-empty strings that contain just whitespace.
",fabiocaccamo,None,2015-10-30T11:30:25Z,2015-10-30T14:47:54Z
5516,Fixed #25641: Removed section about adding Google projection to spatial_ref_sys table.,,sir-sigurd,None,2015-10-30T08:37:06Z,2015-10-31T13:32:55Z
5515,Fixed #24212 -- Updated the cache documentation for the pylibmc binding,"Updated the cache documentation to clarify the pylibmc binding should
not include the 'unix:/' prefix when specifying Unix socket files.
",bxm156,None,2015-10-30T07:59:02Z,2015-10-30T17:46:08Z
5514,Fixed #8065 -- Allowed QuerySet.in_bulk() to accept no arguments.,"Modified in_bulk() to return all objects in the queryset when called
with no arguments.
",bxm156,None,2015-10-30T06:34:45Z,2015-12-26T23:00:53Z
5513,Fixed #25639  -- Cascade deleting cause deadlock,"Refactored the sort method in django.db.models.deletion to
return same order every time.
",shellfly,None,2015-10-30T03:56:47Z,2015-11-21T13:18:28Z
5512,Fixed #21422 -- Documented that prefetch_related() results must be homogeneous.,"https://code.djangoproject.com/ticket/21422
",timgraham,None,2015-10-29T23:01:04Z,2015-10-30T14:31:28Z
5511,Fixed #10045 -- Corrected docs about .annotate()/.filter() ordering.,"https://code.djangoproject.com/ticket/10045

Since it's not easily in the diff, the first query is

```
>>> Publisher.objects.annotate(num_books=Count('book')).filter(book__rating__gt=3.0)
```
",timgraham,None,2015-10-29T22:47:53Z,2015-11-12T18:27:35Z
5510,Fixed #24019 -- Fixed inaccurate docs about GenericRelation not supporting aggregation.,"This works at least as far back as Django 1.6 according to the test
added in refs #10870.
",timgraham,None,2015-10-29T21:44:23Z,2015-10-30T14:37:01Z
5509,Fixed #25290 -- Warned against modifying objects created in setUpTestData() in tests.,"https://code.djangoproject.com/ticket/25290
",timgraham,None,2015-10-29T21:13:32Z,2015-11-07T19:34:24Z
5508,Fixed #23985 -- Documented a backwards incompatible change in URLValidator.,"https://code.djangoproject.com/ticket/23985
",timgraham,None,2015-10-29T21:05:55Z,2015-10-29T22:07:19Z
5507,Fixed #25489 -- Documented that SESSION_SAVE_EVERY_REQUEST doesn't create empty sessions.,"https://code.djangoproject.com/ticket/25489
",timgraham,None,2015-10-29T20:58:16Z,2015-10-29T21:29:32Z
5506,Fixed #25100 -- Documented an upgrade caveat for contenttypes migration.,"https://code.djangoproject.com/ticket/25100
",timgraham,None,2015-10-29T20:43:27Z,2015-10-30T14:31:19Z
5505,Fixed #17688 -- Added actions to m2m_changed for deleted objects.,"Ticket: https://code.djangoproject.com/ticket/17688
",jorgecarleitao,None,2015-10-29T16:55:26Z,2016-03-11T16:42:44Z
5504,Fixed #25635 -- Made URLValidator allow '+' in scheme.,"Modified scheme regex to allow schemes with '+' in them like (ssh+git://). Also made scheme part compulsory. 
",DheerendraRathor,None,2015-10-29T15:49:53Z,2015-11-01T03:42:11Z
5503,Fixed #25632 -- Documented missing version requirements for GeoDjango DB functions.,,sir-sigurd,None,2015-10-29T11:55:43Z,2015-10-30T08:54:31Z
5502,Fixed #25631 -- Fixed support detection for some DB functions in SpatiaLite backend.,,sir-sigurd,None,2015-10-29T11:38:04Z,2015-10-30T08:53:43Z
5501,Fixed #25630 -- Replaced `AsGeoHash` with `GeoHash` in unsupported functions of DB backends.,,sir-sigurd,None,2015-10-29T10:32:25Z,2015-10-30T08:53:28Z
5500,Fixed required SpatiaLite version in docs.,,sir-sigurd,None,2015-10-29T07:50:55Z,2015-10-30T08:54:10Z
5499,Fixed #25629: Added checks of the number of arguments for GeoDjango DB functions.,,sir-sigurd,None,2015-10-29T04:09:00Z,2015-11-05T11:44:59Z
5498,Fixed #25620 -- Made URLValidator prohibit URLs with consecutive dots in the domain section.,"Initially domain name regex had '*' which was allowing '.' to pass
the regex and making invalid URLs as valid (http://example...com).
Now atleast one unicode character will be required after '.' in
domain name regex
",DheerendraRathor,None,2015-10-28T21:15:31Z,2015-10-29T16:08:06Z
5497,Fixed #20846 -- Increased User.username max_length to 254 characters.,"Thanks Collin Anderson and Nick Sandford for work on the patch.

Updated from https://github.com/django/django/pull/5220.
",timgraham,None,2015-10-28T20:11:25Z,2015-10-29T13:14:22Z
5496,Fixed #25622 -- Fixed generic relation crash in the admin to_field validation.,"Thanks to Jonathan Liuti for the report.
",charettes,None,2015-10-28T19:10:00Z,2015-10-29T17:14:52Z
5495,Ignored docutils deprecation warnings in runtests.py.,,timgraham,None,2015-10-28T17:25:04Z,2015-10-28T18:06:38Z
5494,Made LiveServerTestCase example use StaticLiveServerTestCase.,"Inspired by https://github.com/django/django/pull/5491.
",timgraham,None,2015-10-28T14:07:28Z,2015-10-28T17:52:59Z
5493,Added the srid property to GDALRaster.,"Geometry objects have an srid property, so this addition makes the raster api more similar to the geometries api.
",yellowcap,None,2015-10-28T12:00:00Z,2015-10-28T14:34:25Z
5492,Fixed #21516 -- Updated imports paths for some formset functions/classes.,"Updated the import path for FormSet classes and factories in the
documentation. Since #21489, FormSet classes and factories are exposed on
the django.forms package.
Refs #21489
",bxm156,None,2015-10-28T02:28:48Z,2015-10-28T19:49:39Z
5491,Move LiveServerTestCase docs note before examples,"Following the example code led to a couple of hours of debugging. If this note were moved up, it would solidify the connection between testing and `collectstatic`, which I previously thought was just a command used in production.
",darvelo,None,2015-10-28T00:37:49Z,2015-10-28T14:08:07Z
5490,"Added ""Attributes set by application code"" section to HttpRequest.",,timgraham,None,2015-10-27T23:26:01Z,2015-10-28T13:34:24Z
5489,[1.8.x] Fixed #25618 -- Added a helpful message when both Django & south migrations exist in the same directory.,"https://code.djangoproject.com/ticket/25618

No tests (except manual) because ""south_style_migrations"" is already untested and this logic will be removed in Django 1.10: https://github.com/django/django/pull/5488
",timgraham,None,2015-10-27T18:29:50Z,2015-11-04T23:41:43Z
5488,Refs #25618 -- Removed detection of south-style migrations.,"I don't think they'll be relevant for anyone upgrading
to Django 1.10.
",timgraham,None,2015-10-27T18:10:53Z,2015-10-28T13:17:40Z
5487,Fixed #12885 -- joining along GenericRelation to child model,,akaariai,None,2015-10-27T11:17:56Z,2015-12-14T16:12:44Z
5486,Update email address in AUTHORS,"Complete vanity, but all my Django work is under this address not my Debian one and there are a couple of other Chris Lamb's on the internet..
",lamby,None,2015-10-27T09:01:44Z,2015-10-27T12:47:00Z
5485,Fixed #25597 -- Fixed crash with SplitArrayField and IntegerField on invalid value.,"https://code.djangoproject.com/ticket/25597
",timgraham,None,2015-10-26T23:39:34Z,2015-10-27T12:14:07Z
5484,Fixed #25596 -- Fixed regression in password change view with custom user model.,"https://code.djangoproject.com/ticket/25596
",timgraham,None,2015-10-26T22:41:02Z,2015-10-27T12:44:14Z
5483,[1.8.x] Refs #24979 -- Used inspect.getargspec() on Python 3.2.,"inspect.signature() was added in Python 3.3.
",timgraham,None,2015-10-26T16:31:38Z,2015-10-26T17:33:00Z
5482,Fixed #25611 -- Standardized descriptor signatures.,"https://code.djangoproject.com/ticket/25611#ticket
",timgraham,None,2015-10-26T15:57:07Z,2015-10-26T21:50:53Z
5481,Fixed #25610 -- Reverted removal of request.current_app in {% url %} tag.,"https://code.djangoproject.com/ticket/25610
",knbk,None,2015-10-26T13:40:47Z,2015-10-26T14:46:57Z
5480,Fixed #25609 - related field nested lookup error,"https://code.djangoproject.com/ticket/25609
",Ian-Foote,None,2015-10-25T23:36:47Z,2015-10-27T18:15:41Z
5479,"Fixed #25606 -- Added support for ""__"" lookup in RelatedOnlyFieldListFilter.","https://code.djangoproject.com/ticket/25606
https://code.djangoproject.com/ticket/25608 (closed as duplicate)
for example:

``` python
list_filter = (('company__name', admin.RelatedOnlyFieldListFilter),)
```

raise FieldError
Cannot resolve keyword 'name' into field. ...
",jackcvr,None,2015-10-25T20:32:01Z,2015-11-13T00:51:32Z
5478,"Removed hardcoded utf-8 BOM, used value from codecs instead.","Small cleanup. Avoids hardcoding the utf-8 BOM in a magic string as it exists in the stdlib's codecs.
",jdufresne,None,2015-10-25T16:31:47Z,2016-03-13T23:03:21Z
5477,[WIP] Fixed #25605 -- Made GeoDjango DB functions work with expressions.,"https://code.djangoproject.com/ticket/25605
",sir-sigurd,None,2015-10-25T14:13:35Z,2017-04-03T06:09:35Z
5476,ReverseSingleRelatedObjectDescriptor was renamed,"This class appears in a few public repos and was difficult to track down the name change. Document the change.
",aidanlister,None,2015-10-25T09:22:14Z,2015-10-26T12:55:37Z
5475,Fixed #25441 -- Added support for negative filesize to filesizeformat template filter.,"See #5327 
",darkryder,None,2015-10-25T01:55:38Z,2015-10-27T14:42:31Z
5474,Refs #17133 -- Optimized script_url handling in get_script_name,"10ace52a added some regex processing for each request with SCRIPT_URL set.
In a speed critical section, conditionally apply of the regex will save some
resources.
",claudep,None,2015-10-24T09:18:54Z,2015-10-27T13:30:20Z
5473,Fixed #25603 -- Made clear that geometry's SRID is meant in docs for GEOSGeometry.transform.,,sir-sigurd,None,2015-10-24T04:04:40Z,2015-10-24T14:46:34Z
5472,[1.8.x] Fixed Python 3.5 deprecation warnings,"As discussed about adding official Python 3.5 support to Django 1.8: https://groups.google.com/d/topic/django-developers/JlkwHprjqJc/discussion
",timgraham,None,2015-10-24T02:10:54Z,2015-10-26T14:23:28Z
5471,"Revert ""Fixed #25417 -- Added a field check for invalid default values.""","This reverts commit 71ebcb85b931f43865df5b322b2cf06d3da23f69.
",charettes,None,2015-10-23T23:55:51Z,2015-10-27T15:15:51Z
5470,Fixed #16734 -- Set script prefix in django.setup() to allow its usage outside of requests.,,claudep,None,2015-10-23T19:21:03Z,2015-10-29T19:13:51Z
5469,the content attribute of Response should be `bytes` type,"fix the document
",sih4sing5hong5,None,2015-10-23T13:13:57Z,2015-10-23T18:27:06Z
5468,Fixed #17133 -- Properly handled successive slashes in incoming requests,,claudep,None,2015-10-23T13:02:37Z,2015-10-23T20:19:11Z
5467,optimized field_names lookup,,jackcvr,None,2015-10-23T02:30:46Z,2015-10-23T20:24:01Z
5466,Refs #25589 -- Fixed admin_scripts test failure on Windows.,"Traceback (most recent call last):
  File ""tests\admin_scripts\tests.py"", line 646, in test_startapp_unicode_name
    content = f.read()
  File ""lib\encodings\cp1252.py"", line 23, in decode
    return codecs.charmap_decode(input,self.errors,decoding_table)[0]
UnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 46: character maps to <undefined>
",timgraham,None,2015-10-22T23:39:37Z,2015-10-23T00:04:18Z
5465,Fixed #25434 -- Documented HttpRequest.site and created a section for middleware attributes.,"https://code.djangoproject.com/ticket/25434
",timgraham,None,2015-10-22T18:28:41Z,2015-10-28T08:35:00Z
5464,Fixed #25592 -- Fixed misnamed strictly_above PostGIS lookup,"Fixes a regression from 2bd1bbc42. Thanks Daniel Wiesmann for the report.
",claudep,None,2015-10-22T12:49:32Z,2015-10-22T18:38:11Z
5463,Fixed #25592 -- Typo in PostGISOperators,"Fixes `'strictly_above'` dictionary key typo in `PostGISOperators`.

https://code.djangoproject.com/ticket/25592
",dursk,None,2015-10-22T12:37:37Z,2015-10-22T12:57:42Z
5462,Fixed #25589 -- Allowed startapp to create apps with Unicode characters in the name.,"In Python 3, unicode characters are valid identifiers.
It follows that startapp should create a directory even
if its name contains unicode characters.

However, there was previously a validation method which
only allows underscores and alphabets.

This patch added support for unicode in Python 3.
",yoongkang,None,2015-10-22T11:39:00Z,2015-10-22T22:19:45Z
5461,Fixed #25584 -- Documented a pip error when installing Django 1.9.,"https://code.djangoproject.com/ticket/25584
",timgraham,None,2015-10-21T19:04:17Z,2015-12-02T01:49:21Z
5460,Fixed #25588 -- Added spatial lookups to RasterField,"Created first version for lookup functionality. This works for the tests created, but I am not sure if it is a good implementation. I would like to get some feedback on the approach.

Some ideas for structuring of the band level lookup api:
- The default is always the first band, lookups can be done normally for the default
- On the rhs, band specific lookups could be similar to distance lookups, i.e. provide a tuple `(rast, band_nr)` or a triple for distance and relate lookups for a specific band `(rast, band_nr, D(mi=3))` and `(rast, band_nr, 'T*T***FF*')`
- For the lhs I am less sure about a good approach, one option is to add another double underscore part for the band nr, `rast__band_nr__dwithin`.
",yellowcap,None,2015-10-21T18:24:05Z,2016-05-06T13:17:49Z
5459,Removed duplicated entry from AUTHORS.,,sir-sigurd,None,2015-10-21T14:40:45Z,2015-10-22T05:55:05Z
5458,Fixed #25585 -- Allowed `None` to be set as SRID and SRS value for `OGRGeometry`.,"https://code.djangoproject.com/ticket/25585
",sir-sigurd,None,2015-10-21T14:00:43Z,2015-10-22T05:55:05Z
5457,Fixed #25583 -- Allowed calling `transform` with `CoordTransform` even if SRID is invalid.,"https://code.djangoproject.com/ticket/25583
",sir-sigurd,None,2015-10-21T09:33:42Z,2015-10-26T05:08:32Z
5456,Fixed #25397 -- Documented class-based view context variable clash with context processors.,"Documented context possible shadowing of context
processor variables by default implementation of get_context_data.

PS. Previous PR https://github.com/django/django/pull/5451 auto-closed because I made some error in
in my fork. 
",jbzdak,None,2015-10-21T08:35:50Z,2015-10-23T19:24:28Z
5455,Fixed #25580 -- Allowed `None` to be set as SRID value.,,sir-sigurd,None,2015-10-21T05:23:56Z,2015-10-22T05:55:05Z
5454,Fixed #25578 -- Correct the spelling of GitHub,"""GitHub"" was spelled as ""Github"" in some documents, so I fixed them.
",ymyzk,None,2015-10-21T04:54:56Z,2015-10-21T12:07:10Z
5453,Fixed #25604 -- Added makemigrations option --check to exit with non-zero status if changes exist without migrations.,"Useful for CI servers to validate commits are not missing migrations.

Based on the discussion: https://groups.google.com/forum/#!msg/django-developers/zczdY6c9KSg/ZXCXQsGDDAAJ
",jdufresne,None,2015-10-21T01:00:40Z,2016-03-13T23:03:22Z
5452,Fixed #25576 -- Added IOBase methods to response required by TextIOWrapper.,,jdufresne,None,2015-10-20T21:27:28Z,2016-03-13T23:03:24Z
5451,Fixes #25397 --- Documented shadowing of template variables,"Documented context possible shadowing of context
processor variables by default implementation of get_context_data.

Also converted :: literal blocks to .. code-block:: python
(as in contributor documentation).
",jbzdak,None,2015-10-20T21:08:16Z,2015-10-21T08:25:38Z
5450,Fixed #25574 -- Added a warning about clashing dictionary lookups in templates.,"I added some explanation for problems described by the author of #25574 ticket, and added a link toa document that specifies full variable resolution order. 
",jbzdak,None,2015-10-20T17:34:04Z,2015-10-21T15:45:53Z
5449,"Fix quad quoted ("""""""") docstring start",,jayvdb,None,2015-10-20T09:32:00Z,2015-10-20T16:20:33Z
5448,Fixed #25562 -- Skipped a time dependent admin_filters test on Windows.,"https://code.djangoproject.com/ticket/25562
",timgraham,None,2015-10-19T23:54:11Z,2015-10-24T13:44:28Z
5447,Fixed #25571 -- Fixed boolean evaluation of ungettext_lazy,,claudep,None,2015-10-19T19:49:31Z,2015-10-22T13:19:58Z
5446,Fixed #25563 -- Made sure deferred models use their proxied model app cache.,"Thanks to Andriy Sokolovskiy for the report.
",charettes,None,2015-10-19T18:20:25Z,2015-10-20T00:12:58Z
5445,Fixed #25586 -- Fixed possible table cell misalignment in admin's tabular inline.,"This fixes the table body (tbody) to be shifted by one column to the
left.  While the width of td.original and th.original is set to 0 in the
CSS, th.original was not defined.

I cannot really believe that this was broken for so long, and therefore some non-default settings / behaviour might trigger it?!  And/or browser behaviour changed in that regard?  Or some JS got missing?

Anyway, the problem can be seen in both Firefox and Chromium for me.
",blueyed,None,2015-10-19T18:04:59Z,2015-10-21T14:40:29Z
5444,Fixed #25566 -- Added title to admin's closing popup response page,,scop,None,2015-10-19T14:43:47Z,2015-10-20T05:25:39Z
5443,#25367 passing lookup instances to filter method,"This fix allows passing lookup instances to filter method.

Several comments:
- F expressions became real expressions (Expression subclass).
- Expression got a new method - get_source_f_object, which walks through children classes and find if it has F object passed. In that case output_field-related code should be postponed, until compiler resolves it (which cannot be done during lookup init time).
- some code related to query.build_filter method (responsible to lookups/transform parsing, and calculating joins), extracted into separate helper classes - QueryKeywordLookupHelper and QueryObjectLookupHelper. They have common code base, but some of methods work in a different way.

Ticket: https://code.djangoproject.com/ticket/25367
Discussion: https://groups.google.com/forum/#!topic/django-developers/W0OYXhavY68
",Nepherhotep,None,2015-10-19T10:33:45Z,2015-12-30T06:58:14Z
5442,Python 2.6 str.format does not support unindexed parameters,"1c60d07b introduced Python 2.7+ only syntax into django 1.4 branch,
which supports Python 2.6.
",jayvdb,None,2015-10-19T06:26:01Z,2015-10-19T11:41:30Z
5441,Fixed #25567 -- Removed obsolete MEDIA_URL fallback in Media.absolute_path,,claudep,None,2015-10-18T19:16:56Z,2015-10-19T13:40:36Z
5440,"Fixed #25565 -- Removed action="""" from admin forms.","Empty value for action is not valid in HTML 5, but action can be omitted.
http://www.w3.org/TR/html5/forms.html#attributes-for-form-submission
",scop,None,2015-10-18T08:46:45Z,2015-10-19T14:09:45Z
5439,Stable/1.8.x,,ByronMost,None,2015-10-17T22:09:50Z,2015-10-17T23:59:54Z
5438,[1.8.x] Fixed #23372 -- Improved test suite execution time on MSSQL.,"Executing loaddata for each app in Django's test suite is very
expensive on MSSQL due to the re-enabling of constraint checks
that happen each time, even if no fixtures need to be loaded.

django-mssql should set os.environ['BULK_LOAD_INITIAL_DATA'] = 1
for its test suite. This improves the speed by ~20% (2.5 hours).

https://code.djangoproject.com/ticket/23372
",timgraham,None,2015-10-16T17:25:53Z,2015-12-30T22:43:16Z
5437,Fixed #25560 -- Made empty string related name invalid.,"Thanks to Ali Lotfi for the initial report and patch.
",charettes,None,2015-10-16T16:24:26Z,2015-10-16T18:24:00Z
5436,fixed:user-defined management commands maybe repeate,"user-defined commands maybe already exist,if that happened,raise CommandError
",xiaotangyuan,None,2015-10-16T07:06:19Z,2015-10-17T18:55:50Z
5435,Refs #18012 -- Accounted for reverse proxy relations in migrations.,"Thanks to Markus for the suggestion.
",charettes,None,2015-10-16T05:57:27Z,2015-10-20T00:16:33Z
5434,Fix #25558-  Non-deterministic test failure on Windows,"test_clearsessions_command

This test creates three sessions in the file backend.
One with expiration in the past, one with expiration in the future, and one
that has no expiration. However the session cookie age is set to zero, so the
session with no age should already be expired when the sessions are cleared.

On windows we were consistently getting into the situation where the time
to expire was coming back as zero due to timing issues. The check was making
sure that the expiration was less than zero. Thus keeping the session stored
in the backend, and failing the test.

Fix seems to be to check if the expiration age of the session is less than or
equal to zero instead, since it would seem that a session with a time of zero
until it expires is theoretically already expired.
",bgianfo,None,2015-10-15T22:51:33Z,2015-10-17T14:04:12Z
5433,Used SchemaEditor.delete_model() for teardown in schema tests.,"Some third-party database backends (MSSQL) have custom
delete_model() requirements that must be executed.
",timgraham,None,2015-10-15T22:49:51Z,2015-10-16T16:17:27Z
5432,Fix the admin user creation for custom user model,"Little fix, but still :)

And here is the [opened Ticket on Trac](https://code.djangoproject.com/ticket/25557#ticket).

Cheers
",dulacp,None,2015-10-15T14:40:46Z,2015-10-17T19:09:14Z
5431,Fixed #25556 - added DatePart and DateTimePart expressions,"This PR addresses the lacking functionality of: QuerySet filtering by matching the year/month/day part of two separate date fields.

The PR adds DatePart and DateTimePart db lookup expressions (to `django.db.models.expressions`),
enabling complex lookups on certain lookup elements of Date(Time) fields. Namely: year, month, day.

Makes the following query possible:

`MyModel.objects.filter(date1__month=DatePart('date2', 'month'))`

which returns only objects where date1 and date2 fields have the same month.
",ryuusenshi,None,2015-10-15T08:33:41Z,2015-11-10T07:18:58Z
5430,Fixed quotes in GeoQuerySet aggregates examples.,,sir-sigurd,None,2015-10-14T03:27:35Z,2015-10-14T03:46:20Z
5429,Fixed #25517 -- Made Concat function idempotent,"This is the conclusion of #5401
",jarshwah,None,2015-10-13T23:08:46Z,2015-10-17T19:59:11Z
5428,"Fixed #25470 -- Avoided unnecessary, expensive DATETIME typecast on MySQL.","https://code.djangoproject.com/ticket/25470
",felixxm,None,2015-10-13T18:33:45Z,2015-10-22T19:32:55Z
5427,Refs #25535 -- Minor edits to ForeignObject check changes.,"Hi @charettes, @acatton, sorry I didn't have time for a detailed review of https://github.com/django/django/pull/5419 while I was traveling. Please take a look and let me know if anything looks off here. It's mostly cosmetic. By the way, I don't mind backporting this to 1.9 before next week's beta release.
",timgraham,None,2015-10-13T13:18:01Z,2015-10-14T12:25:37Z
5426,Fixed #25519 -- Added support for SCRIPT_NAME for admin view site,"Used request.META['SCRIPT_NAME'] to determine if SCRIPT_NAME is set.
If it is indeed there and site_url is '/' then used this as site_url
",DheerendraRathor,None,2015-10-13T07:00:12Z,2015-10-29T16:08:05Z
5425,Fixed #25346 -- Allowed collectstatic to delete broken symlinks.,"Fixed the bug that `manage.py collectstatic --clear` does not delete broken symlinks.

https://code.djangoproject.com/ticket/25346

`FileSystemStorage.delete` [checks if file exists](https://github.com/django/django/blob/1bbca7961cee20c4ddd453a7d74d316e84f4bbb5/django/core/files/storage.py#L286-L291) before removing file the file.
However, [`os.path.exists`](https://docs.python.org/3/library/os.path.html#os.path.exists) used in `FileSystemStorage.delete` returns `False` for broken symlinks.
[`os.path.lexists`](https://docs.python.org/3/library/os.path.html#os.path.lexists) returns `True` for broken symlinks, so we should use this.

Perhaps I should have changed `FileSystemStorage.delete` to use `os.path.lexists`. I avoided to change `FileSystemStorage.delete`, because changing `FileSystemStorage` has a wide influence.
",ymyzk,None,2015-10-12T06:52:59Z,2015-10-17T18:14:22Z
5424,Fixed #25456 -- Made GenericIPAddressField normalize IPv4 addresses,"Ticket: https://code.djangoproject.com/ticket/25456
",darjeeling,None,2015-10-12T06:06:53Z,2016-01-11T23:46:11Z
5423,Added precision about GeoJSON field outputs,,claudep,None,2015-10-11T10:06:47Z,2015-10-12T19:52:33Z
5422,Fixed #15165 -- Prevented wrong results with perimeter on geodetic field,,claudep,None,2015-10-10T17:48:18Z,2015-12-30T22:38:21Z
5421,Fixed #24687 -- Added select_related() validation for nested non-relational fields.,"The removed test was added in the original select_related() validation
patch (45d4e43d2d25b902e3821b612209afa951a8bcb8), but there doesn't
seem to be any reason for it.

https://code.djangoproject.com/ticket/24687
",timgraham,None,2015-10-10T01:12:45Z,2015-10-10T17:44:40Z
5420,Fixed #25536 -- Adds support for ptpython shell,"Adds support for the ptpython shell. ptpython is very powerful, lightweight shell for Python. ​https://github.com/jonathanslenders/ptpython.
",mdsrosa,None,2015-10-09T22:47:14Z,2015-10-10T01:05:16Z
5419,Fixed #25535 -- Made ForeignObject checks less strict.,"Check that the foreign object `from_fields` are a subset of any unique
constraints on the foreign model.

https://code.djangoproject.com/ticket/25535
",acatton,None,2015-10-09T16:57:15Z,2015-10-12T22:03:58Z
5418,Fixed #25498 -- Documented ST_Distance/ST_Distance_Sphere difference,,claudep,None,2015-10-09T15:16:35Z,2015-10-11T10:26:41Z
5417,Fixed #25533 -- Changed dataypes mappings for GDALRasters,"Changed datatype mapping in `contrib.gis.gdal.raster.const.GDAL_TO_CTYPES` and added corresponding regression test.
",yellowcap,None,2015-10-09T10:47:22Z,2015-10-09T13:35:38Z
5416,Fixed #25501 -- Changed Filebased cache's pickling protocol,"Filebased cache pickling protocol is set to HIGHEST_PROTOCOL.
Previously using the default protocol which causes a TypeError
",dudepare,None,2015-10-09T01:25:47Z,2015-10-20T17:07:51Z
5415,Fixed #22705 -- Fixed QuerySet.bulk_create() on models without any fieds for Oracle.,"Fixed on other backends by 134ca4d.

https://code.djangoproject.com/ticket/22705
",timgraham,None,2015-10-09T01:19:26Z,2015-10-09T18:42:57Z
5414,Fixed #14368 -- Allowed setting a reverse OneToOne relation to None.,"https://code.djangoproject.com/ticket/14368
",timgraham,None,2015-10-08T22:52:08Z,2015-10-09T14:55:50Z
5413,Fixed #25550 -- Deprecated direct assignment to the reverse side of a related set.,"https://code.djangoproject.com/ticket/25550
",timgraham,None,2015-10-08T21:20:36Z,2015-10-27T13:26:19Z
5412,Refs #19722 -- Added a test for querying generic relations of a parent class.,"Fixed in c9a96075fa02b6d52bec748ffdfb413688a15774.

https://code.djangoproject.com/ticket/19722
",timgraham,None,2015-10-08T13:19:02Z,2015-10-08T19:04:38Z
5411,Stable/1.8.2,"Backport of 25f287f6b2f677213605364c33bb37f33feac953 from master
",sevenhe1205,None,2015-10-08T11:35:08Z,2015-10-08T11:36:35Z
5410,Refs #17917 -- Added a test for pickling annotations on fields with callable defaults.,"Fixed in f403653cf146384946e5c879ad2a351768ebc226.

https://code.djangoproject.com/ticket/17917
",timgraham,None,2015-10-07T17:03:32Z,2015-10-07T19:10:07Z
5409,Fixed #25499 -- Added the ability to pass an expression in distance lookups,,claudep,None,2015-10-07T13:11:45Z,2015-10-09T13:28:44Z
5408,Add myself to AUTHORS,"I have accumulated  quite a few contributions over the past few years.
- 2bb1027 Fixed #25322 -- Lazily compiled core.validators regular expressions.
- 3021453 Fixed #20133 -- Added summary to admin deletion confirmation pages.
- 3687aa0 Simplified admin delete confirmation templates using {% elif %}.
- 41ebc48 Fixed #21551 -- Reenabled loading fixtures from subdirectory
- 95eb68c Fixed #17339 -- Factor out has_result into database backend.
- 1184d07 Fixed #14881 -- Modified password reset to work with a non-integer UserModel.pk.
- cbc4115 Fixed #18107 -- Replaced a deprecated import path for GeoIP in docs. Thanks jonash for the report.
- 23d3459 Fixed #17965 -- Definitely dropped support for Python 2.5. Thanks jonash for the initial patch and Aymeric Augustin for the review.
- 9383a27 Removed with_statement imports, useless in Python >= 2.6. Refs #17965. Thanks jonash for the patch.
- 5f9dbef Fixed #17335 -- Added supports_select_related hook for django-nonrel. Thanks, jonash
- 449e84a Fixed #15801 - Incorrect external link for dictConfig; thanks David Niergarth for the report; jonash for the patch.
- fb55a1a Fixed #15747 -- Removed deprecated contrib.gis.db.backend module. Thanks to jonash for the report.
- fd30999 Fixed #15704 -- Made cache tests more reusable by moving the backend path into a class attribute. Thanks for the patch, jonash
- 1386470 Removed a bunch more Python 2.4 workarounds now that we don't support that version. Refs #15702 -- thanks to jonash for the patch.
- a87be35 Removed a bunch of Python 2.4 workarounds now that we don't support it. Refs #15702 -- thanks to jonash for the patch. Splitting this over muliple commits to make it more manageable.
- 5d85460 Fixed #15687 -- Fixed small typo in multidb docs. Thanks, jonash
- ae10b27 Fixed #15369 -- Added missing import in _os module. Thanks, jonash.
- 2a46323 Fixed #14870 -- don't catch AttributeErrors in database router methods, instead check that the method itself exists.  Thanks to jonash for the patch.
- 1fc7c4a Fixed #14596 -- Light refactoring of the cache backends.
",jonashaag,None,2015-10-07T10:57:17Z,2015-10-07T11:48:22Z
5407,Added some function links in translation docs,,claudep,None,2015-10-07T08:47:31Z,2015-10-07T15:28:36Z
5406,[1.8.x] Fixed #25519 - Added get_script_prefix in django-admin site_url,"In django.contrib.admin.sites.AdminSite, when site_url == '/', used
django.core.urlresolvers.get_script_prefix to accomodate SCRIPT_NAME
when site is not hosted in root
",DheerendraRathor,None,2015-10-07T03:47:40Z,2015-10-07T11:43:29Z
5405,refactor some parts,,finalight,None,2015-10-07T02:06:56Z,2015-10-07T02:42:07Z
5404,Refs #25520 -- Tests for IntegrityErrors deleting M2M to proxy models,"Add unit tests that demonstrate the error condition where deleting a
proxy-based object fails if that object has reverse M2M relationships
to a proxy ancestor, using a database that enforces foreign key
integrity constraints (e.g. PostgreSQL, not SQLite)

The root cause is Django does not find/include reverse M2M relationships
to proxy models when collecting objects for deletion via
`get_deleted_objects` etc, these relationships are only included if they
target concrete parent models.

In the new tests:
- two of the four tests pass, because the M2M relationship targets a
  concrete model
- the other two tests fail with integrity errors, because the M2M rel
  targets a proxy model.
",jmurty,None,2015-10-07T00:20:13Z,2015-10-08T14:02:01Z
5403,Fixed #24976 -- Fixed missing form label in tabular inline.,"Updated InlineAdminFormSet to use the value of label_for_field as label
for fields when the field itself does not define a label.

https://code.djangoproject.com/ticket/24976
",matiasb,None,2015-10-06T23:11:09Z,2015-10-21T17:37:34Z
5402,Fixed #25510 -- Allowed runserver to start with incorrect INSTALLED_APPS.,"In that case, the content of INSTALLED_APPS will be ignored until it's
fixed and the autoreloader kicks in. I confirmed this behavior manually.
As explained on the ticket it's hard to write a test for this case.
",aaugustin,None,2015-10-06T19:27:00Z,2015-10-18T08:36:10Z
5401,Fixed #25517 -- Make ConcatPair.coalesce() idempotent,"Modifed the ConcatPair.coalesce() method so that it can recognize
Coalesce() expressions it has previously added and not add them again.
",wsmith323,None,2015-10-06T19:06:30Z,2015-10-13T19:24:57Z
5400,Fixed #25503 -- Fixed system check crash on ForeignKey to abstract model.,"https://code.djangoproject.com/ticket/25503
",felixxm,None,2015-10-06T04:36:09Z,2015-10-08T16:38:28Z
5399,Refs #23076 -- Unit tests for FK constraint errors deleting with M2M to proxy models,"Please see [Trac issue #23076](https://code.djangoproject.com/ticket/23076)

Add unit tests that demonstrate the error condition where deleting a
proxy-based object fails if that object has reverse M2M relationships
to a proxy ancestor, using a database that enforces foreign key
integrity constraints (e.g. PostgreSQL, not SQLite)

The root cause is Django does not find/include reverse M2M relationships
to proxy models when collecting objects for deletion via
`get_deleted_objects` etc, these relationships are only included if they
target concrete parent models.

In the new tests:
- two of the four tests pass, because the M2M relationship targets a
  concrete model
- the other two tests fail with integrity errors, because the M2M rel
  targets a proxy model.
",jmurty,None,2015-10-06T01:26:55Z,2015-10-07T00:20:59Z
5398,Fixed #25508 -- Modified QuerySet.__repr__() to disambiguate it from a list.,"https://code.djangoproject.com/ticket/25508#ticket
",timgraham,None,2015-10-05T23:09:08Z,2015-10-06T17:01:07Z
5397,Fixed #25496 -- Made ModelChoiceField respect prefetch_related().,"https://code.djangoproject.com/ticket/25496
",timgraham,None,2015-10-05T22:22:49Z,2015-10-05T23:25:50Z
5396,Fixed #25506 -- Allowed filtering over a RawSQL annotation,"This generates an error when you want to `annotate(x=RawSQL()).filter(x=...)`.

It looks like a release blocker as well.

Thanks,
",acatton,None,2015-10-05T20:17:40Z,2015-10-14T19:26:35Z
5395,"Refs #12118 -- Allowed ""mode=memory"" in test database names for sqlite","Let user specify in memory database names.

Removed restriction added in 8c99b7920e8187f98cf4d7dbd9918bd6c6da1238.
",xrmx,None,2015-10-05T17:28:57Z,2015-10-06T16:38:05Z
5394,"Fixed #25502 -- Added supported Python versions in 1.7, 1.8 release notes.","https://code.djangoproject.com/ticket/25502
",timgraham,None,2015-10-05T13:18:27Z,2015-10-05T18:20:20Z
5393,Removed SimpleLazyObject workaround for a Python bug.,"Workaround added in fe8484efda257e151d9c1ca5151e546c9262bf0f
",timgraham,None,2015-10-05T12:28:59Z,2015-10-05T13:47:35Z
5392,Fixed #25423 -- Changed error message for unknown template tag to be more helpful,"Adds ""Did you forget to register or load this tag"" to the template parser's invalid block tag error message as suggested in https://code.djangoproject.com/ticket/25423
",pindia,None,2015-10-04T22:22:06Z,2015-10-05T21:33:30Z
5391,Fixed #25500 -- Added option --fail-level to check command.,"This option specifies the level that check command exits with a
non-zero status. Default is `ERROR`.
",jdufresne,None,2015-10-04T18:19:21Z,2016-03-13T23:03:24Z
5390,Fix typo in static files deployment howto.,,snsn,None,2015-10-04T11:30:31Z,2015-10-05T12:06:43Z
5389,Added basic JS tests for OLMapWidget.js,,claudep,None,2015-10-03T10:05:53Z,2015-10-07T07:01:18Z
5388,Fixed #25483 -- Allowed passing non-string arguments to call_command,"Thanks KS Chan for the report.
",claudep,None,2015-10-03T08:02:37Z,2015-10-03T12:41:46Z
5387,[1.8.x] Fixed #25398 -- Revised instances of os.path.join(),"Replaced occurrences of os.path.join(BASE_DIR, 'folder/subfolder')
to os.path.join(BASE_DIR, 'folder', 'subfolder')
",dudepare,None,2015-10-03T06:12:19Z,2015-10-03T10:29:11Z
5386,Refs #15844 -- Added tests for multi-table inheritance related object filtering efficiency.,"Fixed in 97774429aeb54df4c09895c07cd1b09e70201f7d.

https://code.djangoproject.com/ticket/15844
",timgraham,None,2015-10-02T23:57:56Z,2015-10-03T12:30:11Z
5385,"Refs #13203, #9501 -- Added a test for generic relations to child models.","Fixed in 97774429aeb54df4c09895c07cd1b09e70201f7d.

https://code.djangoproject.com/ticket/13203
",timgraham,None,2015-10-02T18:30:39Z,2015-10-02T19:47:25Z
5384,Fixed the external link to the MySQL Connector/Python Django Backend documentation,"Currently, the link in the documentation is broken. This change just fixes the link. I'd like the change to be cherry-picked back as far as possible, if possible.
",nickwilliams-eventbrite,None,2015-10-02T15:13:13Z,2015-10-02T16:36:42Z
5383,"Fixed #25481 -- Added field.help_text to ""Looping over a form's fields"" docs.","https://code.djangoproject.com/ticket/25481
",jonaldomo,None,2015-10-02T14:57:18Z,2015-10-02T17:01:27Z
5382,Fixed #24865 -- Added remove_stale_contenttypes management command.,"The idea is that removing stale contenttypes is not so critical that it needs to happen in a post_migrate handler. Also, it allows a way to run the functionality outside the migration process which is often automated with `--noinput` causing these deletions to be skipped.

https://code.djangoproject.com/ticket/24865
",timgraham,None,2015-10-02T14:53:00Z,2016-09-06T14:51:32Z
5381,Fixed #25037 -- Added request.user to the debug view.,,jonaldomo,None,2015-10-02T14:45:14Z,2015-10-05T13:37:45Z
5380,Refs #13637 -- Removed unused code in GenericRelatedObjectManager,"Appears unused since 585b7acaa359fc1df07269c1a4b4756bdb6703f7.
",timgraham,None,2015-10-02T14:36:04Z,2015-10-02T15:12:46Z
5379,"Fixed #25490 -- Made the logout() view send ""no-cache"" headers.","We've recently run into a few issues with certain browsers caching the logout view when it's a redirect and thus not logging out. It appears that Safari will sometimes cache redirects, even when cookies are set, so when logout is visited a second time, it is never hit and the user is never logged out.

https://discussions.apple.com/thread/5531657

I haven't contributed before so I'll sign the CLA if it's needed, but I'm pretty sure this counts as a trivial change.
",belak,None,2015-10-01T20:03:03Z,2015-10-02T16:30:35Z
5378,Fixed #18012 -- Propagated reverse foreign keys from proxy models to their concrete class.,,charettes,None,2015-10-01T18:59:59Z,2015-10-12T16:35:16Z
5377,Fixed #21042 -- Allowed accessing FileDescriptor on the model class.,"This is consistent with ability to reference other descriptors
on the model class (5ef0c03ae9aca99289737ba6d88a371ad95cf432).

https://code.djangoproject.com/ticket/21042
",timgraham,None,2015-10-01T17:03:56Z,2015-10-01T19:33:25Z
5376,Revise and simplify Windows install instructions for Python 3.5. Incl…,"…ude optional instructions for install virtualenv and virtualenvwrapper.
",FlipperPA,None,2015-10-01T14:58:07Z,2015-10-22T00:27:15Z
5375,Fixed #22938 -- Allowed clearsessions to remove file-based sessions.,"This PR fix https://code.djangoproject.com/ticket/22938

new test indicated:

```
======================================================================
FAIL: test_clearsessions_command (sessions_tests.tests.FileSessionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/ola/DJANGO/src/django/test/utils.py"", line 182, in inner
    return test_func(*args, **kwargs)
  File ""/Users/ola/DJANGO/src/tests/sessions_tests/tests.py"", line 503, in test_clearsessions_command
    self.assertEqual(1, count_sessions())
AssertionError: 1 != 2

----------------------------------------------------------------------
Ran 223 tests in 0.258s
```

set SESSION_ENGINE to use django.contrib.sessions.backends.file
- create few sessions, wait untill they expire (you may use set_expiry, to reduce the waiting time)
- try `django-admin.py clearsessions` directly to clean out expired sessions.

Files should be deleted from your temp dir.
",olatarkowska,None,2015-09-30T10:09:35Z,2015-10-03T15:33:49Z
5374,Fixed #25485 -- Improved deprecation docs for contenttypes reorganization.,"https://code.djangoproject.com/ticket/25485
",timgraham,None,2015-09-29T22:50:21Z,2015-09-29T23:42:31Z
5373,Refs #22384 -- Removed obsolete code for the removal of reversing by dotted path.,,timgraham,None,2015-09-29T15:07:49Z,2015-09-29T18:00:16Z
5372,Standalone script example correction & clarification,"- Added `import django`
- Also added an example django app import to show that these need to be placed after `django.setup()`
",shangxiao,None,2015-09-29T05:36:18Z,2015-09-29T19:09:54Z
5371,Clarified that Model.delete() is not called as a result of a cascading delete.,"Couldn't see any clarification in the docs that delete() on dependent models is not called during a cascading delete, so thought it might be good to explicitly state so.
",shangxiao,None,2015-09-28T13:24:09Z,2015-09-30T12:47:37Z
5370,Fixed #24855 -- Allowed using contrib.auth.login() without credentials.,"Changed django.contrib.auth.login() signature to accept an optional
backend argument.

https://code.djangoproject.com/ticket/24855
",poiati,None,2015-09-27T16:59:35Z,2016-01-07T13:56:41Z
5369,Moved and updated Python license.,,timgraham,None,2015-09-27T00:50:19Z,2015-09-28T13:55:02Z
5368,Fixed #24323 -- Documented @admin.register can't be used with super(XXXXAdmin in __init__().,"https://code.djangoproject.com/ticket/24323
",timgraham,None,2015-09-27T00:29:14Z,2015-09-28T11:27:04Z
5367,Fixed #25468 -- Made DjangoJSONEncoder lazy strings aware,"Thanks Stavros Korokithakis for the report.
",claudep,None,2015-09-26T18:17:59Z,2015-09-27T20:38:29Z
5366,Fixed #25466 -- Added backwards compatibility aliases for LoaderOrigin and StringOrigin.,"https://code.djangoproject.com/ticket/25466
",timgraham,None,2015-09-26T18:10:14Z,2015-09-29T23:15:43Z
5365,Merged serializers_regress with serializers tests,,claudep,None,2015-09-26T12:21:51Z,2015-09-26T17:59:57Z
5364,Affectionately correct use of 'affect' vs 'effect'.,,robhudson,None,2015-09-25T21:49:55Z,2015-09-25T22:35:28Z
5363,Fix help text when there are no password validators,"This avoids having an empty list which is invalid HTML 4.
http://www.w3.org/TR/html4/struct/lists.html#h-10.2
",acatton,None,2015-09-25T21:39:49Z,2015-09-28T19:33:24Z
5362,Fixed #25421 -- Fixed test --keepdb option on Oracle.,,felixxm,None,2015-09-25T20:38:20Z,2015-09-27T07:35:11Z
5361,Fixed IndexError with empty related names,"Hi.
When trying to make migrations for models containing fields with empty ""related_name"", this line raises an IndexError. This tiny patch should fix it.
",alilotfi,None,2015-09-25T19:41:22Z,2015-10-16T16:25:31Z
5360,Fixed #25376 -- Required virtualenv in installation instructions.,"https://code.djangoproject.com/ticket/25376
",timgraham,None,2015-09-25T19:30:04Z,2015-10-01T15:05:48Z
5359,refactoring if by ternary operator,,gabrieldavid98,None,2015-09-25T18:04:21Z,2015-09-25T21:30:48Z
5358,Fixed #25462 -- Removed Model.__unicode__() in favor of @python_2_unicode_compatible.,"…https://code.djangoproject.com/ticket/25462
",timgraham,None,2015-09-25T17:31:25Z,2015-09-25T19:36:48Z
5357,Removed redundancy in admin_changelist tests.,,timgraham,None,2015-09-25T13:37:58Z,2015-09-25T14:41:20Z
5356,Fixed #25464 -- Allowed skipping IN clause on prefetch queries.,"When using prefetch_related() on a large queryset, the prefetch query SQL can be inefficient. Consider this:

```
Category.objects.filter(type=5).prefetch_related('items')
```

If 100.000 categories have type=5, then an IN clause with 100.000 Category IDs is generated to get the Item objects. Even with a custom queryset using a Prefetch() object, the IN clause is generated, even though it is A) redundant, B) sends a potentially multi-megabyte SQL statement over the wire for the database to process, C) may confuse the query planner to generate an inefficient execution plan, and D) doesn't scale:

```
Category.objects.filter(type=5).prefetch_related(Prefetch('items', queryset=Item.objects.filter(category__item=5)))
```

This pull request adds the possibility to skip the IN clause in cases where we are sure that a better queryset will get (at least) the same items as the IN clause would:

```
Category.objects.filter(type=5).prefetch_related(Prefetch('items', queryset=Item.objects.filter(category__item=5), filter_on_instances=False))
```

In my tests, this speeds up prefetch_related() by 20x-50x on large querysets.
",ecederstrand,None,2015-09-25T08:47:04Z,2016-01-29T19:30:55Z
5355,取得最新版本,,ddesign84,None,2015-09-25T03:10:08Z,2015-09-25T03:12:47Z
5354,Optimized docs images and documented the process.,,funkybob,None,2015-09-25T00:29:49Z,2015-10-24T18:58:19Z
5353,Fixed #25451 -- Added advice about organizing tests.,"https://code.djangoproject.com/ticket/25451
",timgraham,None,2015-09-24T18:49:58Z,2015-09-29T23:42:48Z
5352,Fixed #25457 -- Improved formatting of password validation errors in management command output.,"Solution suggested by timgraham.

Sample error message after applying this patch:

``` bash
$ ./manage.py createsuperuser
Username (leave blank to use 'uranusjr'): 
Email address: 
Password: admin
Password (again): admin
This password is too short. It must contain at least 8 characters.
This password is too common.
Password: ^C
Operation cancelled.
```
",uranusjr,None,2015-09-24T18:28:32Z,2015-09-24T23:46:40Z
5351,Refs #25294 -- Added BoundField import for backwards compatibility.,,MoritzS,None,2015-09-24T17:58:32Z,2015-09-24T18:40:22Z
5350,Removed more code per deprecation timeline.,,timgraham,None,2015-09-24T12:51:08Z,2015-09-24T13:34:46Z
5349,Fix minor typo in 1.9 release notes,,solarissmoke,None,2015-09-24T05:10:07Z,2019-11-26T15:36:52Z
5348,Cached decode safe,"Encodes and decodes a cache session backend. If the existing session data is not encoded, it returns it as-is. 
",mcrowson,None,2015-09-23T20:08:35Z,2015-09-23T23:28:53Z
5347,Fixed #25386 -- Warned about differences between Engine and DjangoTemplates.,"https://code.djangoproject.com/ticket/25386
",timgraham,None,2015-09-23T18:50:38Z,2015-09-23T23:19:23Z
5346,typo fix,,donkirkby,None,2015-09-23T17:27:05Z,2015-09-23T17:32:18Z
5345,Fixed #25453 -- Reworded ask_not_null_alteration suggestion of makemigrations command,"https://code.djangoproject.com/ticket/25453
",beniwohli,None,2015-09-23T15:32:19Z,2015-09-23T21:07:30Z
5344,Fixed #25410 -- Fixed empty ClearableFileInput crash on Python 2.,"Reverted ""Fixes #24727 -- Prevented ClearableFileInput from masking
exceptions on Python 2"" and added a regression test.

This reverts commit 5c412dd8a724b263489c1bd7a2fea381460665d7.
",timgraham,None,2015-09-23T13:28:25Z,2015-09-23T14:28:41Z
5343,Fixed #25407 -- Removed network dependency in GeoIP tests.,"https://code.djangoproject.com/ticket/25407

This PR includes 2 commits. 

The first one is for mocking DNS resolution for `geoip2` tests. 
The second one is optional and contains same issue workaround for `geoip` tests. See trac ticket for more details. The second commit can be either thrown away upon check in or squashed. 
",bak1an,None,2015-09-23T13:27:15Z,2015-09-23T17:12:59Z
5342,Refs #25438 Oracle GIS test failures for Django 1.9,"Changed EPSG:3857 (which is not available in Oracle ver. < 11.2.0.3) to EPSG:3785 (which should be available in all backends), tests in progress...
",felixxm,None,2015-09-23T13:15:21Z,2015-10-28T20:56:42Z
5341,Refs #21927 -- Added examples to urls.include() changes in 1.9 release notes.,"original changes: 1e82094f1b6690018228e688303295f83e1c3d9a
",timgraham,None,2015-09-23T12:16:09Z,2015-09-23T13:35:56Z
5340,Fixed #25448 -- Eased GISLookup subclassing with custom lookups,"When someone needs to build a custom backend-specific GIS lookup, it
is much easier done if getting the spatial operator class happens in
a dedicated method (no need to rewrite the entire as_sql() method).
",claudep,None,2015-09-23T07:29:48Z,2015-09-23T20:03:45Z
5339,Fixed #25447 -- Emphasized the need to restart dev server when adding template tags.,"Right now, it is rather easy to miss the fact that adding a new template tag or filter to an app requires a restart. I made that text a note to make it harder to miss (which caused me about 15 minutes of pain earlier today).
",henryfjordan,None,2015-09-22T19:06:41Z,2015-09-22T23:43:49Z
5338,Fix AttributeError in app_config.,"Fix `AttributeError` when `app_config` is missing attribute `models_module`.
",pygeek,None,2015-09-22T16:28:32Z,2015-09-22T16:48:36Z
5337,Fixed #25426 -- RuntimeError pickling SimpleLazyObject,"I worked on this patch because nobody seems interested in this issue. The patch is for saving django version info as unpickler's argument instead of setting it as model instance's attribute which results in RuntimeError. This happens on django 1.8.x with both python3.x/2.x.
please see https://code.djangoproject.com/ticket/25426 for details
",knifenomad,None,2015-09-22T13:04:51Z,2015-09-23T04:34:25Z
5336,Fixed #25426 -- RuntimeError pickling SimpleLazyObject,,knifenomad,None,2015-09-22T12:44:47Z,2015-09-22T12:50:48Z
5335,Ticket 25426,,knifenomad,None,2015-09-22T11:49:08Z,2015-09-22T11:56:39Z
5334,Fixed #25068 -- Added metaclassmaker to resolve metaclass conflicts in migrations,"Ticket: https://code.djangoproject.com/ticket/25068

Superseds: #5183
",MarkusH,None,2015-09-22T02:35:40Z,2016-03-19T10:33:32Z
5333,Cleared up docs about discovering translation strings in Jinja2,,gitaarik,None,2015-09-21T23:18:07Z,2015-09-22T12:54:58Z
5332,Fixed #25439 -- Add `SUCCESS` style to termcolor palettes,,Matt-Deacalion,None,2015-09-21T20:49:58Z,2015-09-23T07:01:47Z
5331,Recommended against default_app_config.,"Most likely this is a losing fight -- people seem to love this small
convention -- but at least the reasons for avoiding it will be
documented.

Refs #25356.
",aaugustin,None,2015-09-21T20:49:23Z,2015-09-22T07:33:59Z
5330,Fixed #24921 -- Allowed ORM write queries after set_autocommit(False).,"This commits lifts the restriction that the outermost atomic block must
be declared with savepoint=False. This restriction was overly cautious.

The logic that makes it safe not to create savepoints for inner blocks
also applies to the outermost block when autocommit is disabled and a
transaction is already active.

This makes it possible to use the ORM after set_autocommit(False).
Previously it didn't work because ORM write operations are protected
with atomic(savepoint=False).
",aaugustin,None,2015-09-21T19:01:03Z,2015-09-21T20:30:55Z
5329,added encode and decode methods to django cache session backend. ticket #23764,"Merged cleanly locally
",mcrowson,None,2015-09-21T17:57:36Z,2015-09-23T18:33:50Z
5328,Refs #23813 -- Moved URLconfs into module and tidied docstrings,"Changes suggested by Tim on pull request #5301
",alasdairnicol,None,2015-09-21T17:57:02Z,2015-09-22T00:11:06Z
5327,Fixed #25441 -- Added support for negative filesize to filesizeformat template filter.,"I need to show the difference of sizes, it can be negative.
",suffrage,None,2015-09-21T15:14:15Z,2015-10-26T15:32:12Z
5326,Updated docstring in `urlresolvers` module,"The `resolve` method in `RegexURLResolver` no longer returns a tuple.
It has returned a `ResolverMatch` object since commit e0fb90b2.
",Matt-Deacalion,None,2015-09-21T14:58:08Z,2015-09-21T18:00:27Z
5325,Fixed #25436 -- Protocol relative openlayers js / update OpenLayers to 2.13.1,"This includes the fix for https://code.djangoproject.com/ticket/25436 and an update to the current bugfix release of the OpenLayers JS lib.
",blueyed,None,2015-09-21T10:39:01Z,2016-08-10T15:20:52Z
5324,Fixed #24509 -- Added Expression support to SQLInsertCompiler,"This is an update/rebase/docs to: https://github.com/django/django/pull/5099
",jarshwah,None,2015-09-21T07:10:16Z,2015-09-22T13:36:18Z
5323,Fixed #9061 -- Added 'can_delete_extra' option to BaseFormSet,"Apologies, this is a follow-up to a previously-closed PR (#4772) as I hadn't responded in time. I've made all suggested improvements and submitted the new PR as advised.

Added in the `can_delete_extra` option along with supporting tests and documentation updates. This option, when set to `False` will prevent the deletion option from displaying for extra forms in formsets.

For further information - https://code.djangoproject.com/ticket/9061
",danielward,None,2015-09-21T07:02:40Z,2016-01-29T20:12:41Z
5322,Made object permission behave like model permission in default ModelBackend,"Refs #13539.
",claudep,None,2015-09-20T17:10:03Z,2015-09-21T08:59:58Z
5321,Fixed #25435 -- Added support for per-site urlconf,,ngnpope,None,2015-09-20T13:21:40Z,2015-09-24T13:38:05Z
5320,Fixed #25434 -- Added missing docs for request.site,"This should also be backported to 1.7 and 1.8 with `.. versionadded:: 1.7`
",ngnpope,None,2015-09-20T10:53:06Z,2015-10-22T18:29:09Z
5319,Fixed #24688 -- Added Oracle support for new-style GIS functions.,"Work in progress to support new style GIS functions.

PR contains no errors but several tests do fail.
",jtiai,None,2015-09-20T10:44:45Z,2015-09-21T17:58:29Z
5318,Fixed #22341 -- Split django.db.models.fields.related,"I took this opportunity to:
- add lots of comments about the implementation of descriptors: they used to be one of the more impenetrable parts of the ORM
- rename them because the class names made me want to ragequit software development (especially the forward accessor for FKs called `ReverseSingleRelatedObjectDescriptor`)
",aaugustin,None,2015-09-19T20:54:47Z,2015-09-21T20:21:25Z
5317,Fixed #25160 (again) -- Moved data loss check on reverse relations.,"Moved data loss check when assigning to a reverse one-to-one relation on
an unsaved instance to Model.save(). This is exactly the same change as
e4b813c but for reverse relations.
",aaugustin,None,2015-09-19T13:42:26Z,2015-09-19T19:10:09Z
5316,Fixed #25431 -- Removed foreign key exclusion in ModelForm._post_clean() self.instance construction.,"Too much field exclusions in form's construct_instance() could lead to some
unexpected missing ForeignKey values. Fixes a regression from 45e049937.
Refs #13776.
",claudep,None,2015-09-19T12:29:54Z,2015-09-21T19:52:44Z
5315,Refs #13110 -- Fixed mistakes in the multiple enclosure feed tests.,,umazalakain,None,2015-09-19T06:01:02Z,2015-09-19T15:23:31Z
5314,Fixed #25430 -- Fixed incorrect RunSQL examples.,"ref: https://code.djangoproject.com/ticket/25430#comment:1

The current documentation for the `RunSQL` operation (https://docs.djangoproject.com/en/dev/ref/migration-operations/#runsql) includes the following example:

```
migrations.RunSQL([""INSERT INTO musician (name) VALUES (%s);"", ['Reinhardt']])
```

That doesn't actually work. The code that actually executes the replacement, in `django.db.migrations.operations.special.RunSQL._run_sql` is:

```
    def _run_sql(self, schema_editor, sqls):
        if isinstance(sqls, (list, tuple)):
            for sql in sqls:
                params = None
                if isinstance(sql, (list, tuple)):
                    elements = len(sql)
                    if elements == 2:
                        sql, params = sql
                    else:
                        raise ValueError(""Expected a 2-tuple but got %d"" % elements)
                schema_editor.execute(sql, params=params)
```

The provided example should instead be:

```
migrations.RunSQL([[""INSERT INTO musician (name) VALUES (%s);"", ['Reinhardt']]])
```
",fcurella,None,2015-09-19T02:38:22Z,2015-09-19T22:19:54Z
5313,Fixed #25424 -- Use force_str for test client URLs.,"urlparse() fails with an AttributeError (""'**proxy**' object has no
attribute 'decode'"") if reverse_lazy is used to look up the URL
(this is exactly the same problem that caused ticket #18776). The
solution is to use force_str() on the path before handing it to
urlparse().
",SoftwareMaven,None,2015-09-18T17:45:28Z,2015-09-19T13:07:21Z
5312,Fixed #25421 -- Fixed test --keepdb option on Oracle.,"This patch is to avoid two exceptions:
- _ORA-01543 - Tablespace already exists_ (in _execute_test_db_creation),
- _ORA-01920 - User already exists_ (in _create_test_user),

when ""--keepdb"" is switch on in Oracle tests. In this special case they are acceptable.
",felixxm,None,2015-09-18T17:06:24Z,2015-09-26T11:53:04Z
5311,Fixed #25269 -- Allowed method_decorator() to accept a list/tuple of decorators.,"https://code.djangoproject.com/ticket/25269

Updated from https://github.com/django/django/pull/5136.
",timgraham,None,2015-09-18T14:26:50Z,2015-09-18T23:07:38Z
5310,Dropped support for Oracle 11.1.,,timgraham,None,2015-09-18T11:19:26Z,2015-09-18T13:22:30Z
5309,Fixed #25409 -- Implemented tagging for url patterns,"Creating a pull request so that changes can be reviewed easily during design discussion.

All tests pass (tested with sqlite).
Documentation to be added based on design discussion on the mailing list.
",atul-bhouraskar,None,2015-09-17T23:54:49Z,2015-10-17T18:59:39Z
5308,Removed obsolete pysqlite documentation.,"These steps are no longer needed as of pysqlite 2.7.0.
https://github.com/ghaering/pysqlite/commit/76f34850be582249d9048e6acb2993943b07d31b
",timgraham,None,2015-09-17T20:11:11Z,2015-09-17T22:44:31Z
5307,Refs #25422 -- Added a test for a template tag with type annotations.,"This is a test as per the discussion in https://code.djangoproject.com/ticket/25422
",krallin,None,2015-09-17T20:09:08Z,2015-09-18T12:20:56Z
5306,Add a failing test for annotated tag functions,"This is a failing test for https://code.djangoproject.com/ticket/25422

I added more detail there. Happy to copy it here if that's more practical!

Cheers,
",krallin,None,2015-09-17T19:34:37Z,2015-09-17T19:51:49Z
5305,Refs #17785 -- Made docstring for sqlite3's get_relations() consistent with other backends.,"This was an obsoleted comment from Django 1.7 before the `DatabaseIntrospection.get_relations` method has been changed in all backends in 1.8 (4c413e23).

The fixed comment is consistent with all other backends. I don't see any similar mistake. (I am updating a custom backend to 1.8 and these comments are useful for me.)
",hynekcer,None,2015-09-17T19:25:13Z,2015-09-18T13:34:06Z
5304,Restricted a couple of test dependencies.,"Since pip 7 now caches wheel files by default, I'm going to remove our own ""wheelhouse"" on Jenkins. This means we need to add more specific versions for packages where the latest version has a compatibility problem with the Django test suite.
",timgraham,None,2015-09-17T18:52:52Z,2015-09-17T19:09:22Z
5303,Fixed #25417/#24636 -- Added validation for DecimalField digits/Added a field check for invalid default values.,"Based on a rebased version of #4514
",charettes,None,2015-09-17T17:09:44Z,2015-09-18T18:37:24Z
5302,Fixed #25400 -- Fixed regression in nonexistent features on gis backends.,"https://code.djangoproject.com/ticket/25400
",timgraham,None,2015-09-17T13:31:34Z,2015-09-17T13:56:24Z
5301,Fixed #23813 -- Added checks for common URL pattern errors,,alasdairnicol,None,2015-09-17T07:18:52Z,2015-09-21T14:16:51Z
5300,Fixed ref to oracle documentation and oracle environment setup documentation,"Fixed ref to oracle documentation and oracle environment setup documentation
",felixxm,None,2015-09-17T05:17:30Z,2015-09-18T16:22:19Z
5299,Fixed #25296 -- Prevented related object cache pollution when create() fails due to an unsaved object.,"https://code.djangoproject.com/ticket/25296

See behavior in `one_to_one.tests.OneToOneTests.test_unsaved_object`: because `Restaurant.objects.create` failed, `place._restaurant_cache` should not exist.

Any feedback is much appreciated!
",raphaelmerx,None,2015-09-17T03:19:35Z,2015-09-20T00:50:32Z
5298,"Fixed #25196 -- Corrected test db name in ""Destroying old test database"" message","Ticket: https://code.djangoproject.com/ticket/25196
",darkryder,None,2015-09-16T17:03:10Z,2015-09-17T16:39:18Z
5297,Fixed #8936 -- Added view permissions and a read-only admin,"This is implementation of ticket [8936](https://code.djangoproject.com/ticket/8936).
It adds 'view' permission to Django models options besides existing 'add', 'delete' and 'edit' permissions. It also changes the behaviour of admin if that permission is set. It completes the CRUD pattern for Django permissions.

The implementation is quite straightforward. Still, there few weak spots, that I am feeling that should be discussed with someone more experienced:
- Model situation: User has defined `ModelAdmin` with custom `has_change_permission()` such that it disallows to change (consequently also view) anything.
  - Then adding view permissions allows superuser to view that `ModelAdmin`.
  - I had to change `RowLevelChangePermissionModelAdmin` in tests for this.
- How should change `RelatedFieldWidgetWrapper`
",PetrDlouhy,None,2015-09-16T16:20:24Z,2016-10-06T00:08:27Z
5296,Fixed #8936 -- Added view permissions and a read-only admin,,PetrDlouhy,None,2015-09-16T16:05:40Z,2015-09-17T10:20:02Z
5295,Typo fix,"Changed An to A
",mcrowson,None,2015-09-16T13:19:44Z,2015-09-16T13:35:08Z
5294,Refs #24215 -- Fixed Python 3.5 compatiblity for unhandled lazy ops error.,"As described in http://bugs.python.org/issue25137 it seems we shouldn't rely on the behavior of < Python 3.4.
",timgraham,None,2015-09-16T13:13:30Z,2015-09-17T14:31:16Z
5293,Fixed #25415 -- made test runner perform system checks,"[Ticket 25415](https://code.djangoproject.com/ticket/25415#ticket)
",adamchainz,None,2015-09-16T13:09:43Z,2016-03-11T16:51:03Z
5292,Refs #24622 -- Documented the change of behavior when using alternative template engines with the test client,"See https://code.djangoproject.com/ticket/24622. This just documents the change in behavior and recommends alternative attributes that could be used instead.
",beniwohli,None,2015-09-16T12:57:57Z,2015-10-22T18:12:16Z
5291,Remove unnecessarily rude terminology.,,stephenpaulger,None,2015-09-16T11:06:02Z,2015-09-16T11:56:34Z
5290,Updated docs coverage example to run in a single process,"This commit adds a note and updates an example in the contributing section of the docs: https://docs.djangoproject.com/en/1.8/internals/contributing/writing-code/unit-tests/#code-coverage. It recommends running the tests in a single process when trying to obtain coverage statistics. Running with the default 4 processes led to underestimating the actual code coverage: http://dpaste.com/1AB9KP9
",davgibbs,None,2015-09-16T02:04:05Z,2015-09-16T12:21:07Z
5289,Refs #24526 -- Made the django logger handle INFO messages.,"Without an explicit 'level', only messages at WARNING or higher
are handled. This makes the config consistent with the docs
which say, ""The django catch-all logger sends all messages at
the INFO level or higher to the console.""
",timgraham,None,2015-09-15T18:34:25Z,2015-09-23T15:53:38Z
5288,Refs #25149 -- Fixed regression in admin date-time widget for timezones on the negative side of UTC.,"Clicking 'Today' or 'Now' for a datetime input would result in 'NaN-NaN-Nan' or 'NaN:NaN:NaN'. This is a regression introduced by https://code.djangoproject.com/ticket/25149.
",gavinwahl,None,2015-09-15T17:46:29Z,2015-09-16T17:16:45Z
5287,Referred to `add_arguments` for deprecated BaseCommand.option_list.,,blueyed,None,2015-09-15T15:12:57Z,2017-03-25T21:43:59Z
5286,Fixed #24496 -- Added CSRF Referer checking against CSRF_COOKIE_DOMAIN.,"https://code.djangoproject.com/ticket/24496

Updated from https://github.com/django/django/pull/4337.
",timgraham,None,2015-09-14T22:48:03Z,2015-09-16T19:55:48Z
5285,Fixed #25373 -- Added warning logging for exceptions during {% include %} tag rendering.,"PR for patch referenced in [ticket 25373](https://code.djangoproject.com/ticket/25373)
",limnick,None,2015-09-14T17:25:07Z,2015-09-22T00:02:33Z
5284,Fixed #25400 - __getattr__ did not raise AttributeError (gis),"With commit d9ff5ef36d3f714736d633435d45f03eac9c17b5 the behaviour of
`hasattr` on `connection.features` has changed, e.g. the following will
be True now always, and was previously so only for Django < 1.5.

```
hasattr(connection.features, 'confirm')
```

This fixes it by raising AttributeError in this case.

I am not sure if this fix is proper - let's see what the tests say about it first.

Ref: https://code.djangoproject.com/ticket/25400.
",blueyed,None,2015-09-14T16:29:01Z,2015-09-17T14:40:26Z
5283,fix type dateimes -> datetimes,,kholidfu,None,2015-09-13T10:40:41Z,2015-09-14T12:50:25Z
5282,Refs #14091 -- Substituted parameters in connection.queries on SQLite.,"Refs #14091.
",aaugustin,None,2015-09-13T07:33:01Z,2015-09-17T21:02:11Z
5281,Fixed #25393 -- Don't fail MySQL add of TextField with unhashable default,"https://code.djangoproject.com/ticket/25393
",scop,None,2015-09-12T19:08:31Z,2015-09-15T06:57:57Z
5280,[WIP] Fixed #25255 -- Marked squashed migration as unapplied when unapplying,"Ticket: https://code.djangoproject.com/ticket/25255

Depends on #5279 to be merged for test
",MarkusH,None,2015-09-12T13:59:35Z,2015-12-29T17:01:31Z
5279,[WIP] Fixed #24800 -- Added logging for applying & unapplying of migrations.,"Ticket: https://code.djangoproject.com/ticket/24800
",MarkusH,None,2015-09-12T13:24:57Z,2015-12-29T17:01:26Z
5278,Refs #6148 -- Meta table api,"The idea is that one can do fancy things (multi-schema setups, shadow table querying, injecting complex subqueries into ORM queries) by changing the Meta.db_table to respect the as_sql() API.

This is work in progress, and I do not target for 1.9 inclusion.
",akaariai,None,2015-09-12T10:28:04Z,2016-02-19T12:10:03Z
5277,Fixed #25390 -- Allowed specifying a start migration in squashmigrations.,"Ticket: https://code.djangoproject.com/ticket/25390
",MarkusH,None,2015-09-12T07:19:16Z,2015-09-19T05:27:33Z
5276,Fixed #25389 -- Fixed pickling a SimpleLazyObject wrapping a model.,"Pickling a `SimpleLazyObject` wrapping a model did not work correctly; in
particular it did not add the `_django_version` attribute added in 42736ac8.
Now it will handle this and other custom `__reduce__` methods correctly.

Also added a regression test.
",benjaminjkraft,None,2015-09-12T06:11:36Z,2015-10-05T13:30:44Z
5275,Fixed #23395 -- Limited line lengths to 119 characters.,"Updated from https://github.com/django/django/pull/5224.
",timgraham,None,2015-09-12T02:39:35Z,2015-09-12T18:27:23Z
5274,[1.8.x] Fixed #25384 -- Ordered imports in newly created migration files,"Ticket: https://code.djangoproject.com/ticket/25384
",MarkusH,None,2015-09-12T02:07:25Z,2015-09-12T11:40:50Z
5273,25386 Explained that debug in class Engine defaults to settings.debug,"[Ticket 25386](https://code.djangoproject.com/ticket/25386) pointed out that options.debug defaults to settings.DEBUG, but the documentation for configuring a class engine and TEMPLATE_DEBUG both claim that they default to False without elaborating on that point. I added a line to the section of documentation configuring a class engine explaining this. 

I did not change the TEMPLATE_DEBUG documentation, because it is deprecated. I will explain how this affects options debug in another pull request. 
",dhanus,None,2015-09-11T22:58:03Z,2015-09-24T01:10:07Z
5272,Fixed #25378 -- Improved tab through experience in admin.,,ryangallen,None,2015-09-11T21:04:48Z,2015-09-23T21:52:46Z
5271,Fixed #25203 -- Documented how to pass Apache environment variables to Django.,"In an effort to address [Ticket 25203](https://code.djangoproject.com/ticket/25203), I added a section to the docs that explains how to pass Apache environment variables into the Django application by modifying the default wsgi.py file. The proposed wsgi.py file has been tested to work with Django 1.4 through 1.8 running on Ubuntu 14.04 with Apache 2.4.
",paulrentschler,None,2015-09-11T16:38:37Z,2015-09-11T17:24:25Z
5270,Fixed #25382 -- Removed obsolete references to DateQuerySet.,,renatooliveira,None,2015-09-11T15:14:58Z,2015-09-11T16:22:40Z
5269,Fixed #25200 -- Updated admin screenshots in docs.,"The files have been updated for the new admin styling, with slight adjustments/renaming to better match the documentation they demonstrate.
",ryangallen,None,2015-09-11T03:18:00Z,2015-09-11T16:02:07Z
5268,Fixed #25404 -- Added line numbers to TemplateSyntaxError strings.,"This makes it much easier to diagnose a test failure when all
you have is the stack trace from an uncaught TemplateSyntaxError.

Ticket: https://code.djangoproject.com/ticket/25404
",djsmith42,None,2015-09-11T03:06:29Z,2015-09-15T16:26:11Z
5267,Fixed #25380 -- Added Postgres.app to the suggested options for PostGIS on OS X.,"The current docs on how to install the GIS software includes a list of many different options on OS X.
Still missing is Postgres.app, which is currently the easiest option for beginners.
",fcurella,None,2015-09-11T01:14:07Z,2015-09-11T12:01:26Z
5266,Fixed a GeoIP2 test failure with the latest GeoIP2 database.,"Düsseldorf now appears as Dusseldorf in the latest version
of the GeoIP2 database.
",timgraham,None,2015-09-11T00:21:00Z,2015-09-11T01:10:10Z
5265,Fixed #25379 -- Removed obsolete information from GeoDjango tutorial.,"ref https://code.djangoproject.com/ticket/25379#ticket
### Update GeoDjango tutorial to Postgres 9.1+ and CreateExtension

The GeoDjango tutorial (https://docs.djangoproject.com/en/1.8/ref/contrib/gis/tutorial/) still instructs to create a db using the spatial template.

Since PostgresSQL 9.1, the preferred way is to use the `postgis` extension instead.

This brings up another issue: should `makemigrations` automatically add a `CreateExtension` operation? Is that even doable?

For now I've simply documented it, but it would be very handy to have it automatically.
",fcurella,None,2015-09-10T22:42:52Z,2015-09-11T00:48:27Z
5264,Fixed #24765 -- Allowed template context updates to flatten a Context.,"The issue with this ticket was if you had a Context and pushed/updated
the context with a context object instead of a dictionary. It would
throw an exception. Thus preventing the ability to flatten a context.

Throws Exception before this PR

``` python
context = Context({'foo': 'bar'})
context.push(Context({'hello': 'world'}))
context.update(Context({'hello': 'world'}))
```

The above actually works now.
",buddylindsey,None,2015-09-10T21:00:32Z,2015-09-11T18:53:02Z
5263,Fixed #25351 -- Added example for database test settings to docs.,,cacoze,None,2015-09-10T19:09:29Z,2015-09-11T12:12:36Z
5262,Fixed #25329 - Don't leave _nodb_connection open,"[Ticket 25329](https://code.djangoproject.com/ticket/25329). Will mean an one extra connection open will occur on a test run.
",adamchainz,None,2015-09-10T16:52:24Z,2015-09-11T06:42:54Z
5261,Refs #20461 -- Dropped runtests' message about parallel processes.,"(EDITED)

The actual number of processes isn't known until `test_runner.run_tests()` loads tests and determines how many TestCases will run.
",aaugustin,None,2015-09-10T16:09:46Z,2015-09-14T21:04:50Z
5260,Fixed #25377 -- Changed Count queries to execute COUNT(*) instead of COUNT('*').,"[Ticket](https://code.djangoproject.com/ticket/25377)
",adamchainz,None,2015-09-10T16:07:28Z,2015-09-14T17:45:43Z
5259,Refs #20461 -- Made tblib optional for a passing test run.,"This was the original intent.
",aaugustin,None,2015-09-10T16:05:43Z,2015-09-10T17:29:24Z
5258,Refs #20461 -- Add tblib to py2 requirements.txt,"https://code.djangoproject.com/ticket/20461#comment:21
",collinanderson,None,2015-09-10T15:11:16Z,2015-09-10T15:24:46Z
5257,Refs #20461 -- Fixed parallel test runner on Python 2.7.,"https://code.djangoproject.com/ticket/20461#comment:20
",collinanderson,None,2015-09-10T15:07:27Z,2015-09-10T16:03:24Z
5256,Fixed #25374 -- Run ModelAdmin checks on instance not on class,"Changes checks.py to work on an instance of a ModelAdmin rather than
the class, so that valid dynamically-generated attributes don't trigger
checks.
",mbox,None,2015-09-10T13:11:20Z,2015-09-11T13:30:56Z
5255,Fixed #24919 -- Allowed disabling of migrations on a per app basis,"https://code.djangoproject.com/ticket/24919
",MarkusH,None,2015-09-10T01:01:32Z,2015-09-12T01:51:45Z
5254,Refs #22258 -- Fixed an unclosed temporary file in fixtures test.,"This prevented the temporary directory from being removed
on Windows.
",timgraham,None,2015-09-09T18:16:56Z,2015-09-09T18:36:18Z
5253,Fixed #25372 -- Fixed autocompletion for options of non-argparse commands.,"Fixes https://code.djangoproject.com/ticket/25372.
",blueyed,None,2015-09-09T14:27:02Z,2017-03-25T21:43:08Z
5252,Refs #25300 -- Fixed issue with importing TextInput,"PR #5172 accidentally uses `django.forms.forms.TextInput` instead of `django.forms.TextInput`.
This breaks the test as soon as the `TextInput` import gets removed from `django.forms.forms` (for examle in my pr #5249).
",MoritzS,None,2015-09-09T13:17:27Z,2015-09-17T10:03:57Z
5251,Fixed #25371 -- Added reverse_sql and reverse_code examples to docs.,"Ticket - https://code.djangoproject.com/ticket/25371
",iambibhas,None,2015-09-09T10:31:17Z,2015-09-09T18:21:45Z
5250,Let template tag folding,"The template tag must writing in one line, for example:
{% include ""math2/paper_block.html"" with bigs=question show_step=1 show_duihao=1 show_myanswer=1 hidden=0 only %}

Now we can write in multi lines, it is more clear:
{% include ""math2/paper_block.html"" with 
bigs=question
show_step=1
show_duihao=1
show_myanswer=1
hidden=0
only
%}

{#
title 
aaaaa
bbbbb
# }
",zii,None,2015-09-09T03:40:11Z,2015-09-09T03:54:38Z
5249,Refs #25294 -- Moved BoundField to django.forms.fields,"~~Only the last commit (225b7ec6fc62c197c8c6af72040e35c6231185f9) is relevant for this pr, it is on top of pr #5164 .~~
",MoritzS,None,2015-09-08T19:34:02Z,2015-09-17T10:06:16Z
5248,[WIP] Fixed #25347 -- Allowed QueryDict.get() to return a list.,"https://code.djangoproject.com/ticket/25347
",timgraham,None,2015-09-08T14:27:54Z,2015-09-08T18:00:44Z
5247,Fixed #25363 - Add test for field pre_save,,davidfischer-ch,None,2015-09-08T09:05:40Z,2015-09-08T14:59:48Z
5246,Fixed minor typos in documentation.,,ngnpope,None,2015-09-07T19:29:31Z,2015-09-07T19:47:24Z
5245,Fixed #25365 -- Visual issues in filter_vertical widget,"Ticket: https://code.djangoproject.com/ticket/25365

Seems I forgot to test this widget carefully when applied SVG icons.

Was:
![was](https://cloud.githubusercontent.com/assets/209663/9721542/b21ec978-55b5-11e5-9d54-2fdff75f8202.png)

Now:
![now](https://cloud.githubusercontent.com/assets/209663/9721548/b9d82f1a-55b5-11e5-8956-909d73c206af.png)
",elky,None,2015-09-07T18:12:53Z,2015-09-07T18:34:30Z
5244,Fixed #19361 -- link to object added to after-save message,"rebased old & dusty patch for https://code.djangoproject.com/ticket/19361
",bak1an,None,2015-09-07T15:36:06Z,2015-11-19T20:51:56Z
5243,Fixed #25356 -- Removed default_app_config from startapp template.,"Also discouraged its use outside the intended use case.

https://code.djangoproject.com/ticket/25356
",timgraham,None,2015-09-07T13:31:01Z,2015-09-07T20:24:29Z
5242,Fixed #25350 -- Added alias --no-input for --noinput,"Ticket: https://code.djangoproject.com/ticket/25350
",raphaelm,None,2015-09-07T13:21:49Z,2015-09-08T12:44:56Z
5241,Fixed #25200 -- Update tutorial screenshots for new admin theme,"Ticket: https://code.djangoproject.com/ticket/25200

Notes: all png files are optimised in terms of filesize.
",elky,None,2015-09-06T22:46:55Z,2015-09-07T12:38:08Z
5240,Fixed #11544 -- Adjust admin css to not depend upon the !important declaration,"Ticket: https://code.djangoproject.com/ticket/11544

Notes:
- All `!important` rules were removed from `contrib.admin` CSS
- Few styles changed by adding parent element dependency to avoid `!important`
- Fixed two minor visual bugs when refactored RTL
- Couple of styles removed because there are no any mention in markup
",elky,None,2015-09-06T20:05:03Z,2015-09-07T12:28:09Z
5239,Removed the unused JoinPromoter.outer_votes attribute.,,charettes,None,2015-09-06T14:41:09Z,2015-09-17T17:49:14Z
5238,Fixed #25358 -- Improved variable name for question in tutorial.,,alasdairnicol,None,2015-09-06T11:35:44Z,2015-09-07T12:15:11Z
5237,Fixed #25357 -- Database deduplication on Oracle.,"This branch is incorrectly named. At first I thought the problem would affect mirrors, in fact it only affects duplicate database configurations.

I extracted this bugfix when I noticed the problem while working on a branch for another feature (#4761). The first commit is needed in that branch.
",aaugustin,None,2015-09-05T19:14:24Z,2015-09-06T11:45:45Z
5236,Updated references to the TEST_* database settings.,"They were removed in Django 1.9.

I could leave the reference to TEST_DEPENDENCIES in the 1.2.4 release
notes because the link points to the right location and the name was
accurate at the time.
",aaugustin,None,2015-09-05T17:22:01Z,2015-09-05T18:31:16Z
5235,Fixed #25355 -- Made two tweaks to docs/topics/db/aggregation.txt.,"Two proposed changes.
",mzaanen,None,2015-09-05T10:36:18Z,2015-09-05T14:20:30Z
5234,Added default value for various default kwargs for QueryDict,"Another discussion on #django highlighted some areas of confusion :)

The function signatures for reference:
- [get()](https://github.com/django/django/blob/master/django/utils/datastructures.py#L121)
- [setdefault()](https://github.com/django/django/blob/master/django/utils/datastructures.py#L149)
- [getlist()](https://github.com/django/django/blob/master/django/utils/datastructures.py#L134)
- [setlistdefault()](https://github.com/django/django/blob/master/django/utils/datastructures.py#L156)
",shangxiao,None,2015-09-05T09:18:50Z,2015-09-05T12:21:22Z
5233,"Fixed #25353 -- Changed LogEntry.action_time to a ""date created"".","https://code.djangoproject.com/ticket/25353#ticket
",timgraham,None,2015-09-04T15:13:23Z,2015-09-04T16:53:26Z
5232,Added links to new security settings introduced in 1.8,"A user on #django pointed out that they were unaware of the new security settings for SSL/HSTS after reading the section https://docs.djangoproject.com/en/1.8/topics/security/#ssl-https
",shangxiao,None,2015-09-04T13:30:30Z,2015-09-04T16:56:43Z
5231,Updated static files howto title to include JavaScript,"This commit to documentation makes it clearer that static files in Django are not limited to CSS and images. It is now in sync with the paragraph text below that says that images, JavaScript and CSS are all examples of static files. The text concerned is the heading at this URL: https://docs.djangoproject.com/en/1.8/howto/static-files/
",davgibbs,None,2015-09-03T23:43:29Z,2015-09-04T12:08:38Z
5230,Fixed #25345 -- Updated links to code.google.com,"There are still occurrences of ""code.google.com"" in the codebase for:
- selenium F.A.Q
- most of mod_wsgi help pages
- http://code.google.com/p/google-diff-match-patch/
- http://code.google.com/p/geodjango-basic-apps/
- http://code.google.com/p/memcached/wiki/NewProgramming#Expiration

As said in the Trac ticket, we should keep the ticket open, waiting for those libraries/third-parties to update their own documentations.
",mlorant,None,2015-09-03T21:26:48Z,2015-09-04T12:20:46Z
5229,Fixed #25348 -- Remove gif/png images from contrib.admin,"Ticket: https://code.djangoproject.com/ticket/25348

Since django has svg images in contrib.admin (which drops support for IE8 and less) we don't need gif/png images anymore.
- All gif/png images removed
- SVG files moved from /svg/ dir to /img/
- New SVG icons for gis app
- CSS clean up: removed unused code -- I double-checked few css class names, they don't mention in the project at all. Correct me if there was a sense to keep them. 

Related to https://github.com/django/django/pull/5186
",elky,None,2015-09-03T20:25:12Z,2015-09-04T13:00:58Z
5228,Fixed #25099 - AdminEmailHandler handles DisallowedHost,,ziima,None,2015-09-03T19:35:45Z,2015-09-04T13:31:51Z
5227,Updated link to mod_wsgi,"Updated to point to readthedocs.
",shangxiao,None,2015-09-03T13:22:08Z,2015-09-03T16:13:22Z
5226,Fix name and prototype for cached_property.__get__ to match Python docs,,funkybob,None,2015-09-03T13:10:32Z,2015-10-26T15:57:51Z
5225,Fixed #25341 -- EmailMessage.message no longer ignores Bcc header,"As the subject says, with code and tests.
Ticket: https://code.djangoproject.com/ticket/25341
",blaze33,None,2015-09-03T08:57:20Z,2015-09-03T10:17:52Z
5224,Fixed #23395 -- Limited line lengths to 119 characters.,"Ticket: https://code.djangoproject.com/ticket/23395
",dodobas,None,2015-09-03T07:18:21Z,2015-09-12T02:40:03Z
5223,Added support for lower case true/false values in NullBooleanSelect.,"Before I spend time writing tests (there are none currently for these widgets) I wanted to get thoughts.

CheckBoxInput supports true, false in all case which can be seen here. https://github.com/django/django/blob/master/django/forms/widgets.py#L508

NullBooleanSelect only supports true false as 'True' or 'False'. I wanted to make them consistent because I ran into an issue when submitting GET requests through Javascript.  This can be seen here. https://github.com/django/django/blob/master/django/forms/widgets.py#L573
",NullSoldier,None,2015-09-02T21:30:44Z,2015-09-04T13:49:51Z
5222,Fixed #25335 -- Fixed regression where QuerySet.iterator() didn't return an iterator.,"https://code.djangoproject.com/ticket/25335
",gavinwahl,None,2015-09-02T19:20:25Z,2015-09-03T11:36:08Z
5221,Fixed #25034 -- Converted caches ImproperlyConfigured error to a system check,"https://code.djangoproject.com/ticket/25034

To do:
- [x] Test cases.
- [x] Add 'caches' tag to system checks docs.
",tomchristie,None,2015-09-02T12:22:30Z,2015-09-18T11:50:52Z
5220,Fixed #20846 -- Changed User.username max_length to 254,,slurms,None,2015-09-01T21:35:10Z,2015-10-28T20:11:46Z
5219,Fixed #20625 -- Custom querysets can be chained multiple times.,"https://code.djangoproject.com/ticket/20625#comment:39
",coady,None,2015-09-01T20:28:47Z,2015-09-17T23:24:25Z
5218,"Fixed #25334 -- Added CSRF_TRUSTED_ORIGINS setting, logic, docs, and tests","This patch adds a new setting, `CSRF_TRUSTED_ORIGINS`, which contains a
list of other domains that are included during the CSRF Referer header
verification for secure (HTTPS) requests.

Tests and documentation have been updated.
",joshkehn,None,2015-09-01T02:46:36Z,2015-09-06T18:22:33Z
5217,Fixed #25331 -- Remove trailing blank lines in docstrings,"The commit also includes 5 additions on two docstring that was on the same line than `""""""` delimiters. Otherwise, it only contains deletion of blank line, using a regex search/replace from `\n\n(\s+)""""""` to `\n\1""""""`. It should have work regardless the indentation of the block (4, 8 or even 12 spaces)

It does not include those without spaces, since some of this strings are not documentation but actual strings displayed to the user, for example, the file [django/setup.py](https://github.com/django/django/blob/05239180c06819b4dc8e6a1d12cbd6d50a31d1ee/setup.py#L92-L94)... Those might need to be check manually, to avoid
",mlorant,None,2015-08-31T20:40:21Z,2015-08-31T21:38:20Z
5216,"Fixed #24994 -- Documented, checked that settings.SECRET_KEY is valid unicode string","Documented that the settings.SECRET_KEY should be valid unicode, and checked
that it does indeed pass our expectations. In case of failure, it emits a
readable warning.
",beerdotpy,None,2015-08-31T20:14:16Z,2016-01-11T23:48:19Z
5215,Fixed #25135 -- Deprecated the contrib.admin allow_tags attribute,"This fixes the problems with #5024 PR, hopefully :)
",olasitarska,None,2015-08-31T17:42:21Z,2015-09-09T09:19:59Z
5214,Fixed #24941 -- Added ModelAdmin.get_exclude() hook,,olasitarska,None,2015-08-31T17:07:39Z,2016-09-16T06:09:38Z
5213,Fixed #23242: Added approximate_date_hierarchy option,"https://code.djangoproject.com/ticket/23242
",gavinwahl,None,2015-08-31T17:01:09Z,2015-10-13T21:06:44Z
5212,Fixed #25144 -- Allowed migrate to create tables for apps without migrations.,"https://code.djangoproject.com/ticket/25144
",timgraham,None,2015-08-31T14:46:01Z,2015-09-04T13:59:05Z
5211,Fixed #25259 -- Added comments to header of generated migration files,"https://code.djangoproject.com/ticket/25259
",MarkusH,None,2015-08-31T11:02:29Z,2015-08-31T12:23:16Z
5210,Fixed #25252 -- Added friendly error message when using .select_related()...,"https://code.djangoproject.com/ticket/25252
",Y3K,None,2015-08-31T03:57:15Z,2015-08-31T05:22:40Z
5209,Rewrote form widget tests as proper unittests.,,prestontimmons,None,2015-08-31T02:25:07Z,2015-09-01T04:57:15Z
5208,Remove unnecessary DBCacheTests.test_clear_commits_transaction,"Spotted whilst copying them to my own cache backend test and trying to run them under `TestCase` as opposed to `TransactionTestCase`.

Was added in 44164c5c308da32a804dfb03ce0bffde2a6b4c56 but the `transaction.commit_unless_managed(using=db)` line was removed in ba5138b1c0253fcf390b7509ad7b954117b3be88 ; thus as far as I can tell the test does nothing but check `clear()` runs.
",adamchainz,None,2015-08-30T19:34:39Z,2015-08-31T13:15:56Z
5207,Fixed #25328 -- Added LiveHTTPSServerTestCase.,"Ticket: https://code.djangoproject.com/ticket/25328

Adding two commits:
1. Refactor.
2. New test case.

It would be great, if you could merge at least the refactor. In case the new test case falls out of scope of core Django, I could then release it as a separate app.

If the new test case is accepted as well, I will add docs for it as well.
",jgoclawski,None,2015-08-30T12:55:21Z,2015-10-28T20:02:33Z
5206,Fixed #25326 -- Added namedtuple example for executing custom SQL.,"Ticket: https://code.djangoproject.com/ticket/25326
",dodobas,None,2015-08-29T14:58:19Z,2015-09-03T17:13:02Z
5205,Fixed #25324 -- Registered ModelAdmins with @admin.register decorator.,"https://code.djangoproject.com/ticket/25324
",Y3K,None,2015-08-28T21:18:02Z,2015-08-31T05:43:40Z
5204,Fixed #25262 - Hid `enable_comments` from FlatPageAdmin,"https://code.djangoproject.com/ticket/25262
",Y3K,None,2015-08-28T19:19:45Z,2015-08-29T12:57:27Z
5203,Fixed #25297 -- Allowed makemessages to work with {% trans %} tags that use template filters.,"More details here: https://code.djangoproject.com/ticket/25297#comment:3
",apocquet,None,2015-08-28T16:04:19Z,2015-09-04T19:12:42Z
5202,Fixed #25320 -- Reverted ManyToManyField.null to False for backwards compatibility.,"https://code.djangoproject.com/ticket/25320
",timgraham,None,2015-08-28T13:27:13Z,2015-09-01T12:43:57Z
5201,Clarified 404.html usage,"Thanks to @kezabelle for reviewing and making more explicit.
",shangxiao,None,2015-08-28T09:08:59Z,2015-08-31T04:54:49Z
5200,Fixed #13110 -- Added support for multiple enclosures in Atom feeds.,"There are no enclosure related tests, should I also create them?

I'll update the docs if the API changes are accepted.
",umazalakain,None,2015-08-28T00:30:43Z,2015-09-18T22:34:02Z
5199,Refs #24590 -- Ensured isolation between autodetector tests,"Ticket: https://code.djangoproject.com/ticket/24590
",MarkusH,None,2015-08-27T22:24:31Z,2015-08-28T05:24:44Z
5198,Fixed #25058 -- Added GenericRelations with related_query_name to the admin's delete confirmation page,"![without related_query_name](https://cloud.githubusercontent.com/assets/3329991/9507116/9e26017a-4c69-11e5-80cb-1d0ddd4ed2c1.png)
",beerdotpy,None,2015-08-26T21:44:17Z,2015-09-03T14:09:53Z
5197,Fixed #25318 -- Made SILENCED_SYSTEM_CHECKS suppress errors/criticals too.,"https://code.djangoproject.com/ticket/25318#ticket
",timgraham,None,2015-08-26T19:52:14Z,2015-08-28T17:36:18Z
5196,Rename the context object from DetailView class.,"The detail.html received an object 'question' via context, so we needed to rename the default object from DetailView class to 'question'. Before it was getting an error. 

``` python
    # file_name: polls/views.py
    context_object_name = 'question'
```
",alephmelo,None,2015-08-26T19:20:21Z,2015-08-27T01:28:49Z
5195,Fixed #25058 -- Added GenericRelations with related_query_name to the admin's delete confirmation page.,"![without related_query_name](https://cloud.githubusercontent.com/assets/3329991/9497214/95e47eb6-4c31-11e5-92ba-da798e57086a.png) This is without related_query_name field.
![with related_query_name](https://cloud.githubusercontent.com/assets/3329991/9497215/961778a2-4c31-11e5-8a7f-848bdd888eea.png)This is with related_query_name field

The bug has been fixed. But the related object is coming first as shown in the image. Should i fix this ?
",beerdotpy,None,2015-08-26T15:01:07Z,2015-08-26T21:27:32Z
5194,Fixed #25322 -- Lazily compiled core.validators regular expressions.,"Don't execute lots of slow `re.compile` calls at module-level in
`django.core.validators`. This saves a few hundert milliseconds when
importing the module for the first time, which is a significant speedup
to the `django-admin.py` command (and possibly other places as well).

The former `re.compile` calls are wrapped in SimpleLazyObjects so
they're executed lazily, i.e. not before they're needed for the first
time.  This could have also been solved by making the regexes
`cached_poperty`s of the `Validator` classes, but that would have broken
backwards compatibility as some of the regexes are assigned to
module-level names (`slug_re`, ...).

This speeds up running `django-admin.py` by about 500ms on my machine.
",jonashaag,None,2015-08-26T07:34:35Z,2015-08-28T17:12:02Z
5193,Fixed #12405 -- Added settings.LOGOUT_REDIRECT_URL.,"After a user logs out via django.contrib.auth.views.logout, they should be
redirected to LOGOUT_REDIRECT_URL is no `next` parameter is provided.
",WhyNotHugo,None,2015-08-26T06:09:09Z,2016-02-04T15:39:51Z
5192,Added linting for JavaScript tests.,,nikolas,None,2015-08-26T04:25:42Z,2015-09-02T17:53:57Z
5191,Correct tutorial05.txt,"Calling response.context['latest_question_list'] returns a bound method to a ListView object.
To get the actual list, that method must be called.
",jeanbjauvin,None,2015-08-25T19:54:43Z,2015-08-26T03:19:50Z
5190,Fixed #24944 -- Added extra_email_context parameter to password_reset() view.,,SujaySKumar,None,2015-08-25T16:30:00Z,2015-09-18T23:03:15Z
5189,Fixed #25308 -- Make MigrationQuestioner respect MIGRATION_MODULES setting,"Updated MigrationQuestioner to use MigrationLoader.migrations_module to insure it is retrieving modules consistently with the rest of the migrations process.

See https://code.djangoproject.com/ticket/25308
",jsatt,None,2015-08-25T05:49:22Z,2015-08-26T18:53:07Z
5188,Updating proj.4 link to new github wiki,,shangxiao,None,2015-08-25T02:51:15Z,2015-08-25T13:58:12Z
5187,Fixed #17375 -- Changed makemessages to use xgettext with --files-from,"Changed the way makemessages invokes xgettext from one call per
translatable file to one call per locale directory (using --files-from).
This allows to avoid https://savannah.gnu.org/bugs/index.php?35027 and,
as a positive side-effect, speeds up localization build.

See https://code.djangoproject.com/ticket/17375 for more details.
",sergeykolosov,None,2015-08-24T23:31:00Z,2015-08-28T19:42:36Z
5186,Fixed #20597 -- Replaced admin GIF/PNG icons by SVG,"https://code.djangoproject.com/ticket/20597

todo:
- [x] update tests for new icon names
- [x] update the ""no"" icon as done in https://github.com/elky/django-flat-theme/pull/14
- [x] Add a mention in the 1.9 release notes
",timgraham,None,2015-08-24T16:16:41Z,2015-08-28T12:54:33Z
5185,Fixed #25299 -- Fixed crash with ModelAdmin.list_display value that clashes with a model reverse accessor.,"https://code.djangoproject.com/ticket/25299
",timgraham,None,2015-08-24T16:06:57Z,2015-08-28T13:10:38Z
5184,Fixed #10827 -- Made create_permissions() clear the ContentType cache.,,guettli,None,2015-08-24T09:49:03Z,2019-09-20T13:27:27Z
5183,Fixed #25068 -- Added metaclassmaker to resolve metaclass conflicts in migrations state.,"https://github.com/django/django/pull/4968

Now it's faster, or more like it's not slowing down ;)
",kosz85,None,2015-08-24T06:15:45Z,2015-09-22T02:38:56Z
5182,Fixed #25246 -- Remove duplicate paths due to a bug related to Python 3 namespace package,"https://code.djangoproject.com/ticket/25246
",caioariede,None,2015-08-24T00:07:39Z,2015-09-02T19:28:27Z
5181,Fixed #25302 -- Prevented BrokenLinkEmailsMiddleware from reporting 404s when Referer = URL.,"Ticket: https://code.djangoproject.com/ticket/25302
",mlorant,None,2015-08-23T18:59:55Z,2015-08-25T08:52:55Z
5180,Fixed #14217 -- Added validation for field name collision when using model inheritance,"The super class has an attribute for each sub class with the same sub class but lower cased. The child elements will inherit inherit this attributes causing errors when you try to initialise an instance of that model (it thinks the fields are all related fields rather than say a CharField).

Because only clash with local fields where being checked and shadow fields were being ignored.
I have added check for shadow fields of parent class . Also added test to check for same
",beerdotpy,None,2015-08-23T12:22:07Z,2015-08-25T20:27:51Z
5179,Ticket#14217,,beerdotpy,None,2015-08-23T11:57:20Z,2015-08-23T12:04:26Z
5178,"Fixed #24743, #24745 -- Improved migration plan handling","The change partly goes back to the old behavior for forwards migrations
which should reduce the amount of memory consumption (#24745). However,
by the way the current state computation is done (there is no
`state_backwards` on a migration class) this change cannot be applied to
backwards migrations. Hence rolling back migrations still requires the
pre-computation and storage of the intermediate migration states.

This improvement also implies that Django does not handle mixed
migration plans anymore. Mixed plans consist of a list of migrations
where some are being applied and others are being unapplied.

https://code.djangoproject.com/ticket/24743
",MarkusH,None,2015-08-23T04:04:05Z,2015-09-19T05:01:42Z
5177,Tweak some examples.,"""Area man/woman"" is confusing to people not familiar with the
conventions of American journalism (like me).
",aaugustin,None,2015-08-22T18:07:09Z,2015-08-22T18:48:59Z
5176,Fixed #24590 -- Cached calls to swappable_setting.,"Ticket: https://code.djangoproject.com/ticket/24590

Supersedes: #4459 
",MarkusH,None,2015-08-22T14:52:11Z,2015-08-27T09:34:19Z
5175,Ticket #14217 fixed,"The super class has an attribute for each sub class with the same sub class but lower cased. The child elements will inherit inherit this attributes causing errors when you try to initialise an instance of that model (it thinks the fields are all related fields rather than say a CharField).
So an exception is thrown when a field with the same lower case name as a subclass is defined.
",beerdotpy,None,2015-08-22T12:58:38Z,2015-08-23T11:54:47Z
5174,Recommend relative imports within Django components.,"django-developers thread:
https://groups.google.com/d/msg/django-developers/11XvmVdx58w/sFrF0pL8LTgJ
",aaugustin,None,2015-08-22T10:40:59Z,2015-08-22T17:59:17Z
5173,Fixed #25280 -- Properly checked regex objects for equality to prevent infinite migrations,"Ticket: https://code.djangoproject.com/ticket/25280
",MarkusH,None,2015-08-22T01:42:56Z,2015-08-27T07:05:28Z
5172,Fixed #25300 -- Added unit tests for BoundField.id_for_label,"Not much to add, as asked by Tim on Trac.
",mlorant,None,2015-08-21T16:51:18Z,2015-08-25T08:52:55Z
5171,Removed BaseForm._raw_value().,"Unused since efb0100ee67931329f17bc9988ecd5f0619cea14.
",timgraham,None,2015-08-21T16:15:43Z,2015-08-21T20:55:09Z
5170,Removed unused attrs argument in BoundField as_*() methods.,"This was never used as of its introduction in
4d596a1f6443eaf5d18d70a18aaac25030c7fc81.
",timgraham,None,2015-08-21T14:51:50Z,2015-08-22T14:32:57Z
5169,Fixed #12952 -- Made admin's history log use field labels.,"Ticket: https://code.djangoproject.com/ticket/12952
",RamezIssac,None,2015-08-21T14:26:41Z,2015-08-25T13:41:34Z
5168,Fixed #23727 -- Inhibited the post_migrate signals when using serialized_rollback.,"https://code.djangoproject.com/ticket/23727
",timgraham,None,2015-08-21T13:46:05Z,2015-08-24T13:35:14Z
5167,Fixed #25295 -- Restored 'no active translation' after language override,"Thanks David Nelson Adamec for the report.
",claudep,None,2015-08-21T12:12:25Z,2015-08-25T08:39:36Z
5166,Refs #19527 -- Allowed bulk_create() to set primary keys for PostgreSQL,"Postgres supports `RETURNING id` when doing a bulk create. With this,
we can set the primary keys on the newly saved objects from the keys
that the database supplied.

Addresses #19527
",acrefoot,None,2015-08-21T06:36:51Z,2015-12-29T16:47:20Z
5165,"Fixed #25047 -- Improved ""Conflicting migrations"" error message.","https://code.djangoproject.com/ticket/25047
",timgraham,None,2015-08-20T23:29:20Z,2015-08-24T12:09:14Z
5164,Fixed #25294 -- Allowed custom BoundFields on forms.,"Ticket: https://code.djangoproject.com/ticket/25294
",MoritzS,None,2015-08-20T18:15:20Z,2015-09-16T14:20:29Z
5163,Fixed #24525 -- Fixed AssertionError in some complex queries.,"https://code.djangoproject.com/ticket/24525
",timgraham,None,2015-08-20T17:06:19Z,2015-09-05T12:24:06Z
5162,Refs #24914 -- Added docs for more auth mixin methods.,"https://code.djangoproject.com/ticket/24914
",timgraham,None,2015-08-20T14:19:23Z,2015-08-20T21:59:23Z
5161,Fixed #25323 -- Fixed selenium test failures with chromedriver 2.18.,"As suggested in https://code.google.com/p/chromedriver/issues/detail?id=1198
",timgraham,None,2015-08-20T00:44:48Z,2015-08-28T18:30:03Z
5160,Refs #12400 -- Added supports_geometry_field_unique_index GIS database feature.,"… geometry fields

https://code.djangoproject.com/ticket/12400

This change introduced new feature to GIS backends ""supports_geometry_field_unique_index"" which is True by default, and False for Oracle.

This PR allows GIS tests on Oracle to be runnable again.
",jtiai,None,2015-08-19T18:43:15Z,2015-08-20T05:03:54Z
5159,Recommend use of JavaScript cookie instead of jQuery cookie,"jQuery cookie is no longer maintained in favor to JavaScript cookie library. This works in the same way and it removes the jQuery dependency.

If you visit the [github](https://github.com/carhartl/jquery-cookie) of jquery-cookie you will be warned with this text:

> # IMPORTANT!
> 
> This project was moved to https://github.com/js-cookie/js-cookie, check [the discussion](https://github.com/carhartl/jquery-cookie/issues/349).
",marctc,None,2015-08-19T12:29:10Z,2015-08-19T14:05:21Z
5158,Fixed #25285 -- Provided unknown command message with plain django-admin.py,"Thanks Maxime Lorant for the report.
",claudep,None,2015-08-19T10:02:04Z,2015-08-19T18:00:28Z
5157,bulk_create sets primary keys on created objects,"Postgres supports `RETURNING id` when doing a bulk create. With this,
we can set the primary keys on the newly saved objects from the keys
that the database supplied.

Addresses #19527
",acrefoot,None,2015-08-19T06:26:58Z,2015-08-19T11:30:23Z
5156,Fixed style issues in testing docs,,MarkusH,None,2015-08-19T02:19:23Z,2015-08-19T11:34:04Z
5155,Fixed #25289 -- Updated admin's jQuery to 2.1.4.,"https://code.djangoproject.com/ticket/25289#ticket
",timgraham,None,2015-08-19T00:16:03Z,2015-08-31T15:03:22Z
5154,Fixed #25284 -- Documented removal of implicit QuerySet __in lookups.,"https://code.djangoproject.com/ticket/25284
",timgraham,None,2015-08-18T23:44:49Z,2015-08-21T15:06:38Z
5153,Added a test to ensure empty sessions are saved.,"This test fails if the `not bool(self._session_key)` condition in `SessionBase.is_empty()` is removed (currently no other tests do).
",timgraham,None,2015-08-18T21:58:55Z,2015-08-20T15:35:46Z
5152,"Consistent capitalization of the ""class-based views"" term across docs","Most often the term is written as “class-based views” in the docs. Documentation for `contrib.messages` is the worst offender with its “Class Based Views”.
",strogonoff,None,2015-08-18T20:04:25Z,2015-08-18T23:08:44Z
5151,Trivial corrections to django/contrib/admin/static/admin/js/urlify.js.,"`urlify.js` converts spaces to hyphens, not underscores, and one of the inline comments had no space between itself and the preceding statement.
",pedromaltez,None,2015-08-18T14:50:41Z,2015-08-18T20:16:31Z
5150,Stable/1.8.x,"can use .from_queryset inside of an AbstractUser's class.  Migrations also fail. 

Traceback (most recent call last):
  File ""./manage.py"", line 15, in <module>
    execute_from_command_line(sys.argv)
  File ""/usr/local/lib/python2.7/site-packages/django/core/management/**init**.py"", line 338, in execute_from_command_line
    utility.execute()
  File ""/usr/local/lib/python2.7/site-packages/django/core/management/**init**.py"", line 330, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File ""/usr/local/lib/python2.7/site-packages/django/core/management/base.py"", line 393, in run_from_argv
    self.execute(_args, *_cmd_options)
  File ""/usr/local/lib/python2.7/site-packages/django/core/management/base.py"", line 444, in execute
    output = self.handle(_args, *_options)
  File ""/usr/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py"", line 205, in handle
    ProjectState.from_apps(apps),
  File ""/usr/local/lib/python2.7/site-packages/django/db/migrations/state.py"", line 178, in from_apps
    model_state = ModelState.from_model(model)
  File ""/usr/local/lib/python2.7/site-packages/django/db/migrations/state.py"", line 441, in from_model
    reconstruct_manager(model._default_manager)
  File ""/usr/local/lib/python2.7/site-packages/django/db/migrations/state.py"", line 425, in reconstruct_manager
    as_manager, manager_path, qs_path, args, kwargs = mgr.deconstruct()
  File ""/usr/local/lib/python2.7/site-packages/django/db/models/manager.py"", line 110, in deconstruct
    % (name, module_name)
ValueError: Could not find manager UserManagerFromUsersQuerySet in django.db.models.manager.
Please note that you need to inherit from managers you dynamically generated with 'from_queryset()'.
[632237 refs]
",mronoffon,None,2015-08-18T14:04:17Z,2015-08-18T14:32:13Z
5149,"Fixed #25285 -- Prevented django-admin from raising ""settings not configured"" on an unknown command.","The project could not exist yet, so it can raise the wrong exception.

See https://code.djangoproject.com/ticket/25285
",mlorant,None,2015-08-18T09:45:08Z,2015-08-25T08:52:54Z
5148,Update validators.py to proper work with idn urls containing port number,"``` python
    def test_validator_passes_idn_urls(self):
        # should not raise
        URLValidator()(u""http://яндекс.ru"")
        URLValidator()(u""http://яндекс.рф/"")
        URLValidator()(u""http://яндекс.рф:80/"")  # this is the case for the fix
        URLValidator()(u""http://яндекс.ru/search?q=искать+по-русски"")
```
",name-no,None,2015-08-18T09:26:11Z,2015-08-18T13:25:43Z
5147,Fixed #25336 -- Activated current language when clicking view_on_site button in admin.,"The issue is in single post admin page, when the post has multi-language, the view_on_site button always navigate to the default language no matter what language the obj is using. The solution is simple to activate the current language and create a url with current language code instead of default language always.
",zoe-stockholm,None,2015-08-18T09:13:29Z,2015-09-02T13:00:22Z
5146,Added two more tests for user entered passwords on creating a superuser,"This commit improves the code coverage of django/contrib/auth/management/commands/createsuperuser.py. It adds two more test cases to check the output for the cases when the user enters two different passwords, and the user enters two blanks as a passwords.
",davgibbs,None,2015-08-18T02:10:25Z,2015-08-18T20:54:20Z
5145,bulk_create sets primary keys on created objects,"Postgres supports `RETURNING id` when doing a bulk create. With this,
we can set the primary keys on the newly saved objects from the keys
that the database supplied.

Addresses #19527
",acrefoot,None,2015-08-17T19:51:17Z,2017-08-16T00:59:55Z
5144,Fixed #25283 -- Allowed HashedFilesMixin to handle URLs with fragment paths,"See http://www.smashingmagazine.com/2013/02/14/setting-weights-and-styles-at-font-face-declaration/

In this case the url.count('..') and url.count('/') could take into
account the #../ fragment, and collectstatic will not find the file,
but it was in its correct place
",msaelices,None,2015-08-17T16:09:29Z,2015-11-12T23:25:05Z
5143,Bootstrapped Django 1.10.,"- Bumped version
- Added stub release notes
- Removed deprecated features
- Increased PBKDF2 iterations

(to be merged after the stable/1.9.x branch is created in mid-September following Django 1.9 alpha)
",timgraham,None,2015-08-17T15:13:43Z,2015-09-23T23:55:34Z
5142,Avoid errors in the edge case that the URLs is like ../fonts/foo.svg#…,"Avoid errors in the edge case that the URLs is like `../fonts/foo.svg#../fonts/foo`, which may be found in some fonts declaration. See http://www.smashingmagazine.com/2013/02/14/setting-weights-and-styles-at-font-face-declaration/

In this case the `url.count('..')` and `url.count('/')` could take into account the `#../` fragment, and collectstatic will not find the file, but it was in its correct place

I think is a trivial error, and I will not create a ticket for that. If you need it, I could create one. 
",msaelices,None,2015-08-17T10:35:33Z,2015-08-17T16:18:08Z
5141,Minor fix in docs for contrib.messages: code formatting in an example,"The piece of example code in question was formatting weirdly on https://docs.djangoproject.com/.
Between first and second keyword arguments there was a visual blank line present.
",strogonoff,None,2015-08-17T10:15:34Z,2015-08-18T19:56:55Z
5140,Refs #21554 -- Added some assertions to a model_inheritance_regress test.,"https://code.djangoproject.com/ticket/21554
",timgraham,None,2015-08-15T23:33:49Z,2015-08-16T00:05:36Z
5139,Fixed #19263 -- Fixed crash when filtering using __in and an empty QuerySet.,"https://code.djangoproject.com/ticket/19263
",timgraham,None,2015-08-15T23:11:54Z,2015-09-04T12:05:28Z
5138,Fixed #25279 -- Made prefetch_related_objects() public,"[Ticket 25279](https://code.djangoproject.com/ticket/25279)
",adamchainz,None,2015-08-15T12:42:28Z,2016-02-27T09:48:40Z
5137,Fixed #19323 -- Added a is_active field to Redirect model.,"https://code.djangoproject.com/ticket/19323
",berkerpeksag,None,2015-08-14T13:21:19Z,2015-08-14T13:48:35Z
5136,Fixed #25269 -- Allowed method_decorator() to accept an iterable of decorators,"ticket: https://code.djangoproject.com/ticket/25269
(updated from https://github.com/django/django/pull/5134)
",zauddelig,None,2015-08-14T11:17:32Z,2015-09-18T14:27:10Z
5135,Fixed #25267 -- Corrected message for admin.E122 error.,"https://code.djangoproject.com/ticket/25267
",zauddelig,None,2015-08-13T08:04:02Z,2015-08-13T16:58:18Z
5134,Fixed #25269 -- Allowed method_decorator() to accept an iterable of decorators,"ticket: https://code.djangoproject.com/ticket/25269
",zauddelig,None,2015-08-13T07:39:05Z,2015-08-14T10:32:39Z
5133,Moved foreign_object models.py into a module.,"(motivated by more additions in https://github.com/django/django/pull/4978)
",timgraham,None,2015-08-12T15:15:18Z,2015-08-14T13:14:53Z
5132,Fixed #25225 -- Simplified code to remove GEOSIndexError,"https://code.djangoproject.com/ticket/25225
",timgraham,None,2015-08-12T12:59:33Z,2015-08-18T23:43:51Z
5131,Initial example of more PEP 257 compliant documentation.,"Example code cleanup mentioned in Trac ticket #25263 
",techdragon,None,2015-08-12T08:18:23Z,2015-08-12T13:15:04Z
5130,Fixed #25205 -- Removed doc references to deprecated GeoManager class.,,timgraham,None,2015-08-11T13:36:35Z,2015-08-11T17:27:35Z
5129,Fixed #25259 -- Added comments to header of generated migration files.,"Fix for https://code.djangoproject.com/ticket/25259 including tests and documentation updates.
",tysonclugg,None,2015-08-11T07:52:59Z,2019-07-23T14:45:55Z
5128,Fixed #25239 -- Corrected makemigrations numbering if the latest migration has a number-only filename.,"https://code.djangoproject.com/ticket/25239
",caioariede,None,2015-08-11T04:43:03Z,2015-08-14T11:29:03Z
5127,Fixed #25254 -- Added attribute in JsonResponse to pass kwargs to json.dumps,,darkryder,None,2015-08-10T15:40:58Z,2015-08-12T14:45:59Z
5126,[1.8.x] Fixed #25160 -- Moved unsaved model instance data loss checkto Model.save(),"(double checking tests pass on backported version)
",timgraham,None,2015-08-10T15:37:24Z,2015-08-10T15:56:56Z
5125,Fixed #24743 -- Grouped consecutive migrations in effective migration plan,"According to a [comment on Trac](https://code.djangoproject.com/ticket/24743#comment:14) this PR speeds up the ModelState rendering by about 90%.

Ticket: https://code.djangoproject.com/ticket/24743
",MarkusH,None,2015-08-10T12:49:26Z,2015-08-23T14:26:02Z
5124,Removed deprecated GeoManager from inspectdb/ogrinspect output.,"refs ea27e26b0907e74ab8d6c46a9694775a310fdc67
",timgraham,None,2015-08-10T12:05:26Z,2015-08-10T14:56:16Z
5123,Fixed #12856 -- Documented BoundField API.,"Ticket: https://code.djangoproject.com/ticket/12856
",MoritzS,None,2015-08-10T11:26:40Z,2015-09-21T12:42:46Z
5122,Fixed #24305 - Allowed shadowing fields on abstract models,"Fields directly inherited from abstract base classes
maybe overriden just like any other python attr.
Inheriting from multiple models/classes with having
the same attribute name, will follow the MRO.

ticket #24305 -- https://code.djangoproject.com/ticket/24305

Thanks  to Marten Kenbeek for the initial patch
",ar45,None,2015-08-09T18:06:55Z,2016-05-16T11:32:55Z
5121,Fixed #24755 -- Hid operations from dependency apps when merging migrations,"https://code.djangoproject.com/ticket/24755
",MarkusH,None,2015-08-09T13:57:17Z,2015-08-18T09:37:54Z
5120,Refs #18081 -- Asserted db constraints are created for fk to proxy models.,,charettes,None,2015-08-08T15:57:38Z,2015-09-23T19:02:33Z
5119,Used skipUnlessDBFeature where appropriate.,,charettes,None,2015-08-08T15:28:16Z,2015-08-08T15:55:06Z
5118,Fixed #25180 -- ArrayFields should not have varchar_patterns_ops or text_patterns_ops indexes,"https://code.djangoproject.com/ticket/25180
",caioariede,None,2015-08-08T12:45:05Z,2015-08-15T14:21:57Z
5117,Refs #25236 -- Discouraged use of ifequal/ifnotequal template tags.,"As there is resistant to deprecating these tags now, documented that these tags shouldn't be used in hopes of deprecating them in the future.
",timgraham,None,2015-08-08T12:15:29Z,2015-08-08T12:24:18Z
5116,Fixed #25249 -- Fixed exception handling in nested test client requests.,"This solves the problem with the following ticket

https://code.djangoproject.com/ticket/25249#ticket

A unit test is provided.
",pscottdevos,None,2015-08-07T19:32:20Z,2017-12-26T22:55:00Z
5115,Fixed #25233 -- Fixed HStoreField.has_changed() handling of initial values.,"https://code.djangoproject.com/ticket/25233
",timgraham,None,2015-08-07T17:09:45Z,2015-08-07T18:32:09Z
5114,Refs #25236 -- Removed ifequal/ifnotequal tags and docs.,"A look at what could be removed if we deprecated it.

https://code.djangoproject.com/ticket/25236
",timgraham,None,2015-08-07T11:28:52Z,2015-08-08T12:36:32Z
5113,Fixed #26014 -- Added WSGIRequest content_type and content_params attributes,"It should also be possible to adjust http/multipartpser.py to reuse this parsing, but it is currently bound quite tightly to requiring META anyway, as it passes it to the FileUploadHandler
",funkybob,None,2015-08-07T05:54:06Z,2016-02-10T23:24:13Z
5112,Fixed #25231 -- Record squashed migrations in the migrate command,"Ensured squashed migrations are recorded as applied when the migrate command is run and all of the original migrations have previously been applied.

New test `test_migrate_record_squashed` fails prior to this change and passes with change to the `migrate` management command.

See https://code.djangoproject.com/ticket/25231
",mlavin,None,2015-08-07T01:15:53Z,2015-08-07T22:17:11Z
5111,Fixed #25241 -- Corrected ModelForm.save() error message when saving invalid form with UUIDField pk.,"Plus some other cleanups.

https://code.djangoproject.com/ticket/25241#ticket
",timgraham,None,2015-08-06T21:59:49Z,2015-08-07T12:52:00Z
5110,Refs #14476 -- Added a test for default annotation name access in aggregate.,"Fixed in f59fd15c4928caf3dfcbd50f6ab47be409a43b01
",timgraham,None,2015-08-06T16:57:01Z,2015-08-06T17:58:11Z
5109,Fixed #24951 -- Fixed AssertionError in delete queries involving a foreign/primary key.,"https://code.djangoproject.com/ticket/24951
",timgraham,None,2015-08-05T20:58:21Z,2015-08-20T14:37:26Z
5108,Fixed #8936 -- Added view permissions and a read-only admin,"This is implementation of ticket [8936](https://code.djangoproject.com/ticket/8936).
It adds 'view' permission to Django models options besides existing 'add', 'delete' and 'edit' permissions. It also changes the behaviour of admin if that permission is set. It completes the CRUD pattern for Django permissions.

The implementation is quite straightforward. Still, there few weak spots, that I am feeling that should be discussed with someone more experienced:
- Model situation: User has defined `ModelAdmin` with custom `has_change_permission()` such that it disallows to change (consequently also view) anything.
  - Then adding view permissions allows superuser to view that `ModelAdmin`.
  - I had to change `RowLevelChangePermissionModelAdmin` in tests for this.
- How should change `RelatedFieldWidgetWrapper`
",PetrDlouhy,None,2015-08-05T14:14:30Z,2015-09-16T16:22:12Z
5107,Fixed #25175 -- Create an alias for the postgresql_psycopg2 database backend,"https://code.djangoproject.com/ticket/25175
",caioariede,None,2015-08-05T14:09:46Z,2015-08-07T13:39:18Z
5106,Fixed #24704 -- Made the runserver autoreloader survive SyntaxErrors.,,aaugustin,None,2015-08-05T10:50:00Z,2015-08-29T20:45:49Z
5105,Fixed #25227 -- Added `ModelForm.get_updated_model()`,"Add utility method get_updated_model() to ModelForm

Additionally, add utility method get_updated_models() to FormSet

Rationale:

While doing the djangogirls tutorial, I noticed that ModelForm.save(commit=False) is given to newcomers as a reasonable way to acquire a form's populated model. This is an antipattern for several reasons:
- It's counterintuitive. To a newcomer, it's the same as `save(save=no)`. 
- It's a leaky abstraction. Understanding it requires understanding that the save method does two things: a) prepare the model, and b) save it to the database.
- It doesn't name its effect or return well.

All these problems are addressed in the current patch. Changes:
- Implement ModelForm.get_updated_model()
- Implement FormSet.get_updated_models()
- Refactor ModelForm.save() and FormSet.save() to allow the above.
- Both the tests and contrib.auth have been modified: any call to save(commit=False) for the purpose of obtaining a populated model has been replaced by get_updated_model(). Tests still pass, I'm confident it's a successful refactor.
  - New tests have been added for the new methods in different contexts (from a ModelForm, from a FormSet, etc).
- documentation has also been modified to showcase the new methods.

Notes:

Uses of ModelForm.save(commit=False) in the codebase have been left alone wherever it was used for its side effects and not for its return value.

The Djangogirls tutorial has a PR that depends on the changes in the present one:

https://github.com/DjangoGirls/tutorial/pull/450
",candeira,None,2015-08-05T06:01:36Z,2015-08-13T17:59:46Z
5104,Fixed #25226 -- Set the model attribute on the base_field in ArrayField,"ArrayField doesn't set the model attribute on the base_field, causing check framework backend specific checks to fail for #5084
",delinhabit,None,2015-08-04T23:28:10Z,2015-08-05T19:02:35Z
5103,Fixed password_reset signature in docs,"`subject_template_name` arg was missing, and `password_reset_form` had the missing argument's value.
",alasdairnicol,None,2015-08-04T14:08:25Z,2015-08-04T17:59:04Z
5102,Fixed #25221 and #25222 -- Added cleanups to django_bash_completion,,scop,None,2015-08-04T14:08:07Z,2015-08-04T21:28:57Z
5101,Fixed #25205 -- Removed references to deprecated GeoManager class,"GeoManager has been deprecated. Docs updated to reflect this.
",BMJHayward,None,2015-08-04T07:16:21Z,2015-08-13T10:19:26Z
5100,Fixed #24484 -- Add helpful message when running tests with models changes without migrations.,"https://code.djangoproject.com/ticket/24484
",pzrq,None,2015-08-04T07:02:21Z,2016-02-26T19:03:26Z
5099,Fixed #24509 -- Added Expression support to SQLInsertCompiler,"Thanks @SmileyChris for help and review at the PyCon sprints!
",AlexHill,None,2015-08-04T04:37:55Z,2015-09-21T07:10:47Z
5098,Fixed #25217 -- Add a warning for ManyToManyField default option,"Added warning when specifying a kwarg of 'default' to a ManyToMany related field. Also changed the warning check for 'validators' to match the same patter as the checks for 'null' and 'default'.
",mjlock,None,2015-08-04T03:22:08Z,2015-08-04T10:57:59Z
5097,Fixed #25215 -- Solved attribute error in HStore form field,"The super() call in HStoreField was passing forms.HStoreField instead of HStoreField.

The test was using the HStore _model_ field on the test form, so it didn't appear as a form field, and could never trigger.

Have corrected the error and added tests, verifying it failed before and works now.
",funkybob,None,2015-08-04T00:52:51Z,2015-08-04T09:20:58Z
5096,Use cached_property for BaseForm.changed_data,"Instead of reimplementing this pattern, use the existing tool.
BaseForm._errors is a different case, as several code paths rely on access to
self._errors to avoid triggering validation.
",funkybob,None,2015-08-04T00:16:11Z,2015-08-04T11:22:38Z
5095,Fixed #25212 -- Documented the RawSQL expression.,"https://code.djangoproject.com/ticket/25212#ticket
",timgraham,None,2015-08-03T20:41:10Z,2015-08-05T12:15:59Z
5094,Fixed #24944 -- Added extra_email_context parameter to password_reset() view.,,SujaySKumar,None,2015-08-03T13:58:29Z,2015-08-25T16:36:08Z
5093,Removed unused Field.get_flatchoices() method.,"Unused since c2ba59fc1da5287d6286e2c2aca4083d5bafe056 (Django 1.0).

Thanks Andy Baker for the report.
",timgraham,None,2015-08-03T12:50:25Z,2015-08-03T17:30:20Z
5092,Actually test get_extra_descriptor_filter,"CC @akaariai

`article.active_description` was never actually called, so `get_extra_descriptor_filter` wasn't being tested.
",AlexHill,None,2015-08-03T10:03:44Z,2015-08-03T12:29:40Z
5091,Add .idea/ to .gitignore,"(`.idea/` is the project folder created by PyCharm)
",AlexHill,None,2015-08-03T09:51:45Z,2015-08-18T23:48:26Z
5090,Fixed #24629 -- Unified the expressions and transform API.,"This is a work in progress, hoping to have it working by the end of pyconau sprints (4th August). The first two commits pave the way for making the initialisation APIs similar, and should probably be merged even if the rest of this patch does not make it.

I don't think there are any compatibility concerns here. The tests that were changed (SQLFunc etc) were wrong to begin with, and worked because the rhs was being passed to `lookup_init`. 
",jarshwah,None,2015-08-03T09:48:37Z,2015-09-27T17:16:57Z
5089,Fixed #25209 -- Removed parallel=True coverage option,"So one won't need to perform a `coverage combine` to have `coverage html` work after a `coverage run ./runtests.py`.
",pzrq,None,2015-08-03T08:26:06Z,2015-08-04T13:32:46Z
5088,Fixed #24988 -- Documented passing a dictionary of ValidationErrors to ValidationError,"Patch for https://code.djangoproject.com/ticket/24988
",excitedleigh,None,2015-08-03T05:33:45Z,2015-08-13T18:17:46Z
5087,Fixed #25211 -- Add USE_X_FORWARDED_PORT setting and HttpRequest.get_port(),"It's be nice to internally have a way to reference the ""real"" port number when behind a proxy.

Today, as an example:

If you were running a load balancer on port 80, which proxied back to an nginx which was running on 8080, it's possible that `get_host()` would resolve your request back to `example.com:8080` instead of the proper `example.com` since `SERVER_PORT` is coming from what nginx was listening on.

This just adds a proper method to `get_port()` and respect an optional `X-Forwarded-Port` header.

The benefits of this being internal to Django, is because anywhere that Django tries to resolve the port internally, we should be utilizing this method. This issue is easy to correct in user-land, but a bit harder when an internal Django method utilizes `SERVER_PORT` directly. The only option is to have a middleware which sets `request.META['SERVER_PORT'] =`request.META['HTTP_X_FORWARDED_PORT']` which is less than ideal IMO since it's overloading the meaning of the variable.

This is also relevant for #4337 since in the wild, we hit an issue with `SERVER_PORT` not reflecting what the upstream actually was, which caused issues. So this would unify and make #4337 leverage the new `get_port()`.
",mattrobenolt,None,2015-08-03T00:04:25Z,2015-08-04T16:01:52Z
5086,Fixed #25191 -- Better error output for assertXMLEqual,"https://code.djangoproject.com/ticket/25191
",caioariede,None,2015-08-02T20:08:05Z,2015-08-04T13:29:16Z
5085,"Fixed #25136 -- Add an example with Count('X', distinct=True) to the …","https://code.djangoproject.com/ticket/25136
",caioariede,None,2015-08-02T17:16:46Z,2015-08-04T14:50:28Z
5084,Fixed #25172 -- Fixed check framework to work with multiple databases,"Fixes check framework handling of multiple databases, when performing field checks:
https://code.djangoproject.com/ticket/25172
",delinhabit,None,2015-08-02T14:37:56Z,2015-08-12T22:09:19Z
5083,allow to use the @register decorator with geoDjango admin,"From Django 1.7, there is a [register](https://docs.djangoproject.com/en/1.8/ref/contrib/admin/#the-register-decorator) decorator for ModelAdmin classes. It  was not possible to use it in geoDjango.
",aroche,None,2015-08-02T09:31:09Z,2015-08-03T11:37:42Z
5082,Fixed #25207 -- Misspelled word in documentation: dialogue,"https://code.djangoproject.com/ticket/25207
",caioariede,None,2015-08-01T21:58:53Z,2015-08-01T23:18:30Z
5081,Fixed #25206 -- Fixed error message when checking a fieldset's fields,,alasdairnicol,None,2015-08-01T21:34:34Z,2015-08-03T12:59:08Z
5080,docs: remove note about sentry/raven not handling wsgi properly in docs,"2.0.7 was released in 2012, and if someone is running this version,
they are likely to have many other issues, including likely
incompatibilities with any modern Django.
",mattrobenolt,None,2015-08-01T19:02:52Z,2015-08-01T23:12:02Z
5079,Fixed #25204 -- Added missing space in runserver logging.,"https://code.djangoproject.com/ticket/25204
",timgraham,None,2015-07-31T16:48:11Z,2015-08-01T12:38:19Z
5078,Fixed #24690 -- Added a warning about mutable defaults for ArrayField/JSONField.,"https://code.djangoproject.com/ticket/24690
",timgraham,None,2015-07-31T16:17:46Z,2015-08-01T11:54:11Z
5077,Stable/1.8.x,"first django pull
",obichima10,None,2015-07-31T09:22:21Z,2015-07-31T11:32:44Z
5076,Allow use_for_related_fields via as_manager(),"The as_manager() method allows easy creation of chain-able managers. One of the most common use cases for these is with related fields. However, as_manager() doesn't currently allow use_for_related_fields to be specified. This patch proposes it could be set simply by way of an attribute on the QuerySet class, in the same way it currently does for Manager classes.

Patch is backwards compatible and includes docs (could be improved).

Ticket --
https://code.djangoproject.com/ticket/25201#ticket

Discussion --
https://groups.google.com/forum/#!topic/django-developers/hVbA6sWElPc
",litchfield,None,2015-07-31T01:50:13Z,2015-07-31T02:10:42Z
5075,Removed unnecessary F() from Func expressions docs,"This makes the example consistent with the [docs](https://docs.djangoproject.com/en/1.8/ref/models/database-functions/#lower) for the built in `Lower()` database function. 
",alasdairnicol,None,2015-07-31T00:44:22Z,2015-07-31T01:14:59Z
5074,Fix MONTH_DAY_FORMAT for Korean(ko) language,"Fix for ticket 25194

https://code.djangoproject.com/ticket/25194
",seungjin,None,2015-07-30T23:48:38Z,2015-07-31T01:01:25Z
5073,Fixed #25089 -- Added password validation to createsuperuser/changepassword.,"https://code.djangoproject.com/ticket/25089
",timgraham,None,2015-07-30T23:36:06Z,2015-08-02T00:19:48Z
5072,Fixed #25188 -- Improved message raised by SimpleTestCase.assertRaisesMessage().,"https://code.djangoproject.com/ticket/25188
",timgraham,None,2015-07-30T19:37:39Z,2015-07-31T13:23:11Z
5071,1.8.3 hstorefield fix,"if hstore field has default value it is already dict and form submit crash with 
",vitaly4uk,None,2015-07-30T18:10:49Z,2015-07-30T18:34:55Z
5070,"Fixed #25198 -- Added optional argument ""include_hidden"" to model_to_dict()","Task description here - https://code.djangoproject.com/ticket/25198
",1st,None,2015-07-30T16:30:31Z,2015-08-07T11:28:15Z
5069,Fixed #25183 -- Fixed non-deterministic GeoIP test.,"google.com doesn't always resolve to an IP inside the United States.
",timgraham,None,2015-07-30T16:19:52Z,2015-07-30T22:19:13Z
5068,Fixed #25196 -- Normalized database representations in test database messages.,,scop,None,2015-07-30T11:08:41Z,2015-09-25T14:29:52Z
5067,Fixed #25189 - Allowed DateTimeField to validate datetime.isoformat() strings,"using new DATETIME_INPUT_FORMATS values which match the naive-datetime case of JSON encoded values.

Tested for:
- a naive `datetime` with microseconds
- a naive `datetime` without microseconds
- a `datetime` with UTC tzinfo (which would end up as a special value ""Z"", which to my awareness isn't parsable by `strptime`)

[Ticket link for reference](https://code.djangoproject.com/ticket/25189)
",kezabelle,None,2015-07-30T07:47:04Z,2015-08-04T18:03:30Z
5066,Fixed #25194 -- Fixed Korean date formatting,"'F' translates a month to Korean name with a month number, so 'F 월' becomes '10 월월', for example, for October.
'F 월' should be fixed to either 'F' or 'n월', and I followed conventions in other languages like Japanese and Chinese.
",donggi,None,2015-07-30T06:48:38Z,2015-08-03T11:38:36Z
5065,Fixed #25190 -- Deprecated callable_obj parameter to assertRaisesMessage().,"https://code.djangoproject.com/ticket/25190#ticket
",timgraham,None,2015-07-29T15:20:29Z,2015-07-30T14:48:58Z
5064,Issue 2,,ChowTheProgrammer,None,2015-07-28T22:00:08Z,2015-07-29T16:43:41Z
5063,Fixed #25186 -- Improved migration's serialization of builtins on Python 2.,"https://code.djangoproject.com/ticket/25186
### What was wrong

When `MigrationWriter.serialize` is given something from the `__builtin__` module, the resulting string and imports also include the `__builtin__` module.

``` python
>>> string, imports = MigrationWriter.serialize(range)
""__builtin__.range"", {""import __builtin__""}
```
### How was it fixed.

Added a special case for when `value.__module__ == '__builtin__'` so that the result is more natural python.

``` python
>>> string, imports = MigrationWriter.serialize(range)
""range"", set()
```
#### Cute animal picture

![tumblr_marlasld1y1rxa4kho1_500](https://cloud.githubusercontent.com/assets/824194/8942560/480af572-3533-11e5-9925-f494f04bcc8f.jpg)
",pipermerriam,None,2015-07-28T20:17:03Z,2015-07-28T22:17:14Z
5062,Fixed #25184. Added support for MaxMind GeoLite2 database format,"Still need to update the docs with deprecation notices, but it's ready for a first review.

The CI configuration will have to be modified to install the necessary libraries (specifically https://github.com/maxmind/libmaxminddb and http://geoip2.readthedocs.org/) and the new databases

see also #5046 
",fcurella,None,2015-07-28T20:05:28Z,2015-07-31T14:12:26Z
5061,Fixed #25185 -- Added support for functools.partial serialization in migrations,"Code for https://code.djangoproject.com/ticket/25185
### What was wrong?

The `MigrationWriter` class did not support serialization of `functools.partial` objects.  These can be quite useful for use as the value for the `default` keyword for model fields.
### How was it fixed.

Since the `functools.partial` object has the three properties `func`, `args`, and `keywords`, the `MigrationWriter` now serializes these individual values and then reconstructs the call to `functools.partial`.

In addition, a special case was required for handling the serialization of functions that are in the `__builtins__` module.
",pipermerriam,None,2015-07-28T17:00:01Z,2016-04-08T11:52:42Z
5060,Fixed #25160 -- Moved unsaved model instance data loss check to Model.save(),"This mostly reverts 5643a3b51be338196d0b292d5626ad43648448d3 and
81e1a35c364e5353d2bf99368ad30a4184fbb653.
",timgraham,None,2015-07-28T15:06:55Z,2015-08-10T13:18:49Z
5059,[WIP] Refs #24121 - Added more reprs,"Bunching slightly more work together, but I'd appreciate any thoughts on the following, before I commit more time to any others I'd care to tackle:
- the `contrib.messages` reprs include the count of messages (loaded and queued), but don't make it clear what the number represents. I'd prefer the message was `[3 messages]` vs `[3]` but I don't know how pluralization should be approached in the repr - ought it go through gettext, or is hardcoding english values ok? or leave as is? or drop the count?
- the `LazySettings` repr changes depending on if it was evaluated. I'm not sure whether that's appropriate, or whether it should call `_setup()` to ensure `_wrapped` is a real `Settings` object (prior to evaluation, trying to glean the settings module from `_wrapped` is an exception)

[Original ticket is here, for reference](https://code.djangoproject.com/ticket/24121)
",kezabelle,None,2015-07-28T14:51:16Z,2015-09-25T14:49:37Z
5058,SQLCompiler: fix get_order_by's docstring with correct return format,,risicle,None,2015-07-28T14:11:21Z,2015-07-28T14:50:29Z
5057,Fixed #25174 -- Moved some details of CheckMessage to the reference guide.,"https://code.djangoproject.com/ticket/25174
",timgraham,None,2015-07-28T13:33:05Z,2015-07-31T12:48:24Z
5056,Refs #25183 -- Added debugging for non-deterministic GeoIP test.,,timgraham,None,2015-07-28T11:24:33Z,2015-07-28T11:58:54Z
5055,Fixed #25181 -- Moved views.generic.dates.timezone_today() to utils.timezone.localdate(),"https://code.djangoproject.com/ticket/25181
",kswiat,None,2015-07-27T20:46:41Z,2016-02-26T19:02:47Z
5054,Fixed #25159 -- Removed brackets from class/function/method signatures in docs.,,timgraham,None,2015-07-27T12:51:15Z,2015-07-27T14:46:29Z
5053,Fixed #6376 -- Allowed usage of custom gettext domains,"Trac ticket: [6376](https://code.djangoproject.com/ticket/6376)

The locale loading system was written in such a way it only loaded locale files
with names 'django'. Modified the process, so the developers can now provide
additional locale filenames using settings.LOCALE_FILENAMES. Updated documentation
to reflect the added changes.
",LiquidPL,None,2015-07-27T12:05:47Z,2015-09-04T19:43:59Z
5052,Fixed #25170 -- Made SimpleTestCase.assertXMLEqual() ignore whitespace outside of tags.,"In every argument passed to `compare_xml` will be applied `split()` function.
All withespaces in the beginning and or end of xml string in `assertXMLEqual` will be ignored.
",quamilek,None,2015-07-27T06:18:30Z,2015-10-28T00:33:38Z
5051,Fixed #25176 -- Prevented a failure in TestCase.setUpTestData() from leaking the transaction.,"[Ticket 25176](https://code.djangoproject.com/ticket/25176#ticket)
",adamchainz,None,2015-07-26T17:03:55Z,2015-08-01T13:04:00Z
5050,Fixed #25110 -- Assertion error in method test_duplicates_ignored fixed.,"Thanks claudep for the patch.
",JMGordon,None,2015-07-26T13:29:30Z,2015-07-27T11:35:56Z
5049,Fixed #25170 -- fixed the assertXMLEqual behavior.,"Fixed the issue that caused two identical XMLs to be treated as
different if one of them had some extra whitespaces in the begining
or the end of the xml string. Now, it is ignoring all whitespaces as it
is expected to be. The corresponding test case was added.

Fix for ticket: https://code.djangoproject.com/ticket/25170
",mishunika,None,2015-07-26T11:57:29Z,2015-07-29T20:24:34Z
5048,Fixed typo in middleware name,,jorgecarleitao,None,2015-07-26T07:48:59Z,2015-07-27T11:18:42Z
5047,Removed brackets from first five txt files (ticket #25159),"Following the instructions for ticket #25159, removed unnecessary brackets from five (not eight) of the txt files
",pharyngeals,None,2015-07-25T20:40:42Z,2015-07-27T12:51:32Z
5046,Fixed #18349 -- Added ipv6 support to django.contrib.gis.geoip.,"Thanks to j and fcurella for original patches.

This is rebased and documented version of previous PR #1986
",MRigal,None,2015-07-25T15:53:00Z,2015-07-29T14:22:57Z
5045,Fixed #24986 -- Added support for annotations in DISTINCT queries,"This pull request is split into two commits for easier review (the first one is a small fix for an inconsistency in some internal code). 

Fix for ticket https://code.djangoproject.com/ticket/24986.
Patch by Valentina Mukhamedzhanova and Donald Harvey @ Django sprint EuroPython 2015.
",megaumi,None,2015-07-25T15:34:10Z,2015-08-15T12:27:35Z
5044,Fixed #25163 -- New hint for non-staff users in admin login page,"This code addresses the issue outlined in https://code.djangoproject.com/ticket/25163 and it's a candidate fix for it.

If the user is logged in as non-staff and attempts to access an admin page, he will get redirected to the login page, which can be a bit misleading, as the user is already authenticated

This PR adds a help text for such case.
",lvisintini,None,2015-07-25T15:28:28Z,2015-07-29T19:10:04Z
5043,Fixed #17464 -- Added save_form() and save_model() to ModelFormMixin,"This enable to do extra work before saving the object to the database,
like setting instance attributes based on other parts of the
request. This fixes https://code.djangoproject.com/ticket/17464.

This approach is inspired by BaseModelAdmin.
",madjar,None,2015-07-25T12:32:06Z,2015-07-25T14:36:18Z
5042,Moving towards female independence in tests,"@alex ~~@gaynor~~ check your privileges  and merge
",bashu,None,2015-07-25T05:39:00Z,2015-07-25T15:54:08Z
5041,Fixed #25095 -- Fixed annotate() + values() group by bug,,timgraham,None,2015-07-24T17:30:00Z,2015-07-27T12:08:08Z
5040,Fixed #25161 -- Encouraged users to install the latest release in docs,"Not sure the wording is perfect, but it's a starting point. Feel free to improve.
",alasdairnicol,None,2015-07-24T14:16:00Z,2015-07-24T17:36:55Z
5039,Simplified MANIFEST.in,"Also fixed missing django/contrib/auth/common-passwords.txt.gz file and added JavaScript tests.

mailing list discussion: https://groups.google.com/d/topic/django-developers/d6UWv53MwhE/discussion

Output of check-manifest:

```
lists of files in version control and sdist do not match!
missing from sdist:
  .editorconfig
  .eslintignore
  .eslintrc
  .gitattributes
  .tx
  .tx/config
you have django/conf/locale/af/LC_MESSAGES/django.mo in source control!
that's a bad idea: auto-generated files should not be versioned
this also applies to the following:
  django/conf/locale/ar/LC_MESSAGES/django.mo
  .... (all mo files)
```
",timgraham,None,2015-07-23T16:20:20Z,2015-07-25T11:22:57Z
5038,Create nonrel-1.7,,keniq,None,2015-07-23T14:39:54Z,2015-07-23T15:07:41Z
5037,Fixed #25168 -- Documented how to avoid foreign key constraint error after upgrading to 1.8.,"https://code.djangoproject.com/ticket/25168
",rwillmer,None,2015-07-23T09:05:46Z,2015-07-31T12:21:16Z
5036,Fixed #12768 -- Fixed QuerySet.raw() regression on FK with custom db_column.,,mdj2,None,2015-07-22T20:13:27Z,2015-07-23T22:47:10Z
5035,Fixed #25143 -- Added ArrayField.from_db_value(),"https://code.djangoproject.com/ticket/25143
",hacknaked,None,2015-07-22T18:12:38Z,2016-02-12T13:50:11Z
5034,[WIP] URL dispatcher API. ,,knbk,None,2015-07-22T15:05:53Z,2015-08-26T23:43:07Z
5033,Update AUTHORS,"Added @chrisjones-brack3t and myself to the AUTHORS file since the 1.9 Access Mixins are based on our work with django-braces.
",kennethlove,None,2015-07-21T22:55:07Z,2015-07-22T01:11:45Z
5032,Fixed #22258 -- Added progress status for dumpdata when outputting to file,,claudep,None,2015-07-21T21:26:25Z,2015-07-24T16:38:59Z
5031,Fixed #25146 -- Allowed method_decorator() to work at the class level,"This change introduces a new feature: it allows the
`django.utils.decorators.method_decorator` to be used to decorate
classes, accepting an additional keyword argument `name`, which is the
name of the method to be decorated.

The benefit of this approach is that less code needs to be written in
order to decorate a class method. This is especially useful when
subclassing Django's generic class-based views. Previously, one would
need to reimplement the method, using boilerplate code, only to be able
to decorate it using `method_decorator`; alternatively, a mixin could be
implemented, but would still be less concise than the solution presented
here.
",zedr,None,2015-07-21T21:04:49Z,2015-08-06T18:04:57Z
5030,Fixed #25156: Added mention of django.setup() to the settings overview,,ubernostrum,None,2015-07-21T17:13:12Z,2015-07-21T21:11:14Z
5029,Corrected HTML-escaping behaviour of url template tag.,"Due to the URL encoding applied by the tag for all parameters that might be
partly controllable by an end-user, there are no XSS/security problems
caused by this bug, only invalid HTML.
",spookylukey,None,2015-07-21T12:44:50Z,2015-07-21T13:07:12Z
5028,Fixed #24126 -- Deprecated current_app parameter to auth views.,"https://code.djangoproject.com/ticket/24126
",timgraham,None,2015-07-21T12:27:30Z,2015-07-21T12:44:48Z
5027,Fixed #25149 -- Replaced window.__admin_utc_offset__ with a data attribute.,"https://code.djangoproject.com/ticket/25149#ticket
",timgraham,None,2015-07-20T20:11:11Z,2015-07-22T21:18:13Z
5026,Fixed #21127 -- Started deprecation toward requiring on_delete for ForeignKey/OneToOneField,"ref https://code.djangoproject.com/ticket/21127
",fcurella,None,2015-07-20T18:28:58Z,2015-07-27T22:32:23Z
5025,[1.8.x] Fixed #25085 -- Overrode Select Widget's __deepcopy__,"https://code.djangoproject.com/ticket/25085
",ericfc,None,2015-07-20T18:03:19Z,2015-07-22T11:24:01Z
5024,Fixed #25135 -- Deprecated the contrib.admin allow_tags attribute,"Initial (naive) stab at deprecating the allow_tags for admin display methods.
",jaap3,None,2015-07-20T15:00:00Z,2015-11-26T11:15:50Z
5023,Replaced six.BytesIO with io.BytesIO,,timgraham,None,2015-07-20T12:03:23Z,2015-07-20T12:24:35Z
5022,"Reword: same password as above to: ""as before""","""As above"" refers to a spatial orientation, which might not be present, for example when the two password fields are shown next to each other. 

""As before"" is free from a spatial orientation and might be better. Unless people are filling in a form backwards (do they do that?).
",wimfeijen,None,2015-07-20T11:54:47Z,2015-07-20T19:53:39Z
5021,Added postgres non-durable settings hint in docs,"Adding this section after the following discussion on django-developers:
https://groups.google.com/d/topic/django-developers/IkRgMxTTzPQ/discussion
",nemesisdesign,None,2015-07-20T10:10:30Z,2015-07-21T17:39:18Z
5020,Fixed #25142 -- Added PermissionRequiredMixin.has_permission() to allow customization,"Related ticket: [#25142](https://code.djangoproject.com/ticket/25142)
",dfunckt,None,2015-07-18T17:08:54Z,2015-07-29T09:16:29Z
5019,Fixed #25138 -- Added view_decorator for CBVs.,"`django.views.generic.view_decorator` takes a function decorator, converts it to a method decorator using `django.utils.decorators.method_decorator`, and applies it to `dispatch` method on the given class. For example:

``` python
from django.views.generic import TemplateView, view_decorator
from django.contrib.auth.decorators import login_required

@view_decorator(login_required)
class ProtectedView(TemplateView):
    template_name = 'secret.html'
```

Trac: https://code.djangoproject.com/ticket/25138
",georgebrock,None,2015-07-18T15:18:45Z,2015-07-20T13:15:28Z
5018,Fixed #25141 -- Diminished GDAL dependence during geojson serialization,"Only require GDAL if contained geometries need coordinate transformations.
",claudep,None,2015-07-18T13:16:57Z,2015-07-20T18:23:07Z
5017,fix docs on ModelAdmin.get_paginator,"it seems that you have changed the [api](https://github.com/django/django/blob/master/django/contrib/admin/options.py#L699) but forgot to update docs,
",aliva,None,2015-07-18T10:39:43Z,2015-07-20T12:09:23Z
5016,Fixed #24623 -- Fixed EmailMessage.attach_file() with text files on Python 3,"Only Python 3 was affected.
",kswiat,None,2015-07-17T20:23:51Z,2015-07-25T17:06:40Z
5015,Refs #25073 -- Copied recently added verbose_names to migrations.,,timgraham,None,2015-07-17T17:48:42Z,2015-07-19T13:37:06Z
5014,Assorted JavaScript ESLint fixes.,,timgraham,None,2015-07-17T13:10:23Z,2015-07-18T11:24:09Z
5013,Fixed db.utils.load_backend() on non-ASCII paths.,,timgraham,None,2015-07-17T12:22:39Z,2015-07-24T12:02:47Z
5012,Tested #23622 -- ordering retained for distinct on fields subqueries,"The ticket was already fixed by
b68212f539f206679580afbfd008e7d329c9cd31.

Thanks to Beauhurst for commissioning the work on this ticket.
",akaariai,None,2015-07-17T06:34:52Z,2015-07-20T14:20:50Z
5011,Fixed #24365 inspectdb should generate PositiveIntegerFields for unsi…,"…gned fields in mysql
",earthling-shruti,None,2015-07-17T04:34:54Z,2015-07-20T05:12:56Z
5010,Fixed #16501 -- Added an allow_unicode parameter to SlugField.,"https://code.djangoproject.com/ticket/16501
",timgraham,None,2015-07-16T22:11:41Z,2015-07-17T18:06:28Z
5009,Allowed installing closure with pip for admin JavaScript compression.,,timgraham,None,2015-07-16T21:50:50Z,2015-07-17T17:25:59Z
5008,Fixed #25125 -- Docs update on the cookie naming conventions,"A cookie name setting can be whatever you want (as long as it's different from the other cookie names in your application).
",kswiat,None,2015-07-16T21:43:00Z,2015-07-17T20:03:31Z
5007,Fixed #25042 -- Adding RemoteUserAttrMiddleware.,"The middleware updates user attributes and groups based on REMOTE_USER_\* values.
",adelton,None,2015-07-16T15:09:33Z,2017-12-28T17:10:11Z
5006,Fixed #25120 -- Deprecated egg template loader.,"https://code.djangoproject.com/ticket/25120
",timgraham,None,2015-07-16T13:35:56Z,2015-07-16T15:31:35Z
5005,Fixed typo in docs on translation.,"In docs/topic/i18n/translation.txt there was a typo in templatetag name.
Changed header from get_current_languages to get_current_language.
",seler,None,2015-07-16T10:21:15Z,2015-07-16T11:32:22Z
5004,Fixed #25132 -- Added the get_value() method to the QuerySet class,"The method gets a single value from a single object and returns it.
I also covered get() with tests that match get_value()'s tests.
",thedrow,None,2015-07-16T10:12:19Z,2015-07-16T17:28:47Z
5003,Refs #24919 -- Made test models serializable for migrations.,,timgraham,None,2015-07-16T01:24:21Z,2015-07-21T13:20:17Z
5002,Fixed #25095 -- Fixed annotate() + values() group by bug,,mitchelljkotler,None,2015-07-15T21:30:35Z,2015-07-24T17:31:35Z
5001,Fixed #25125 -- Added a check for SESSION_COOKIE_NAME and LANGUAGE_COOKIE_NAME collision,"- check framework plugged into sessions app
- 'SESSION_COOKIE_NAME and LANGUAGE_COOKIE_NAME are different' check.
",kswiat,None,2015-07-15T18:49:45Z,2015-07-16T21:40:52Z
5000,Fixed #25128 -- Fixed SQLite SchemaEditor crash when adding a ForeignObject field.,,timgraham,None,2015-07-15T18:40:08Z,2015-07-15T19:38:29Z
4999,Filtered out 'base' from database backend choices error message.,,timgraham,None,2015-07-15T14:20:44Z,2015-07-24T12:03:01Z
4998,Fixed #25124 -- Override Select in SelectDateWidget,"More easily override the use of Select in SelectDateWidget by referring to it via an attribute on SelectDateWidget instead of referring to it directly.

Trac: https://code.djangoproject.com/ticket/25124
",georgebrock,None,2015-07-15T03:00:13Z,2015-07-15T14:26:35Z
4997,[WIP] Switching test suite to use migrations,"Not all tests passing yet.

On my system this increases the test suite from 5 minutes to 6 minutes for SQLite.
",timgraham,None,2015-07-15T00:56:22Z,2015-07-17T11:54:00Z
4996,Fixed #25123 - Incorrect makemessage help text,"https://code.djangoproject.com/ticket/25123
",canassa,None,2015-07-14T09:35:31Z,2015-07-14T11:36:44Z
4995,Fixed #25121 -- Added a warning that filtering sensitive information from error reporting isn't bulletproof,"https://code.djangoproject.com/ticket/25121#ticket
",timgraham,None,2015-07-13T22:12:51Z,2015-07-14T11:14:32Z
4994,[1.4.x] Fixed #25119 -- Disabled wheel support.,"https://code.djangoproject.com/ticket/25119
",timgraham,None,2015-07-13T20:05:59Z,2015-07-14T11:29:02Z
4993,Refs #24121 - Added more meaningful repr to HttpResponse (& specific subclasses),"[Ticket is here](https://code.djangoproject.com/ticket/24121).
Trying to find the balance between providing useful information and brevity; suggestions welcome. 
- Some `repr()` components aren't addressable as an attribute (`content type` & `allowed methods`) but provide valuable info. I've opted for including the data even if it isn't directly addressable.
",kezabelle,None,2015-07-13T14:43:01Z,2015-07-15T13:02:12Z
4992,Added tests for ticket #24090,"Ticket #24090 was already fixed by
b68212f539f206679580afbfd008e7d329c9cd31, this commit adds tests to
verify this is indeed the case.

Thanks to Beauhurst for commissioning the work on this ticket.
",akaariai,None,2015-07-13T08:06:56Z,2015-07-13T17:14:28Z
4991,Explicitly pass rounds as rounds to bcrypt.gensalt,,funkybob,None,2015-07-13T02:28:32Z,2015-07-13T16:36:12Z
4990,Fixed #25117 -- Added Romanian char map for Javascript slug generation,"Fix for [Ticket 25117](https://code.djangoproject.com/ticket/25117)

Romanian characters missing in admin SlugField when using prepopulate_fields.
",ionescu77,None,2015-07-12T22:17:33Z,2015-07-13T17:48:53Z
4989,Ticket #25116 -- Removed long-broken admindocs bookmarklets,"Refs [ticket #25116](https://code.djangoproject.com/ticket/25116).
",benspaulding,None,2015-07-12T20:38:53Z,2015-07-13T16:25:14Z
4988,Fixed #25115 -- Made admindocs view bookmarklet reverse the URL rather than hardcode it,"See [ticket #25115](https://code.djangoproject.com/ticket/25115).
",benspaulding,None,2015-07-12T20:20:25Z,2015-07-13T16:48:37Z
4987,Fixed #24984 -- Added reference to Jinja2 static tag instructions,"Added a note to staticfiles documentation that references the
instructions for configuring and using the static template tag with
Jinja2.
",vallarfax,None,2015-07-12T18:11:14Z,2015-07-13T11:39:06Z
4986,Fixed #24919: Add option to not migrate test databases,"This solves https://code.djangoproject.com/ticket/24919 by adding a new `MIGRATE` sub-setting of `DATABASES['TEST']` that can be set to `False` to make the database from scratch using a new autodetector-direct-into-migrations approach contained in Creation.
",andrewgodwin,None,2015-07-12T16:42:11Z,2015-09-19T00:22:02Z
4985,Fixed #25073 -- Added verbose_name to fields that were missing it,"Addressed the concerns raised in https://github.com/django/django/pull/4957
",szilveszter,None,2015-07-12T15:47:45Z,2015-07-12T17:45:12Z
4984,Add __not_in filter field lookup (TRAC #25113),,tschuy,None,2015-07-12T12:52:10Z,2015-07-12T13:36:20Z
4983,Fixed #25108 -- Fixed a test which checks None content_type in ImageF…,"https://code.djangoproject.com/ticket/25108
",double-y,None,2015-07-12T03:57:55Z,2015-07-13T19:05:09Z
4982,Update where I live.,,alex,None,2015-07-11T11:47:09Z,2015-07-12T14:36:20Z
4981,Update timezones.txt,"The text I changed and the `Note` below it were contradicting each other.
",kevbo,None,2015-07-10T22:13:42Z,2015-07-11T14:41:59Z
4980,Improved whitespace in debug templates.,"Removed extra blank lines in the template text debug template,
and prevented overindentation in the HTML debug template.

Before & after:

![before](https://cloud.githubusercontent.com/assets/411869/8628160/9a4881e2-271e-11e5-9a94-d72264e6f8f2.png)

![after](https://cloud.githubusercontent.com/assets/411869/8628163/9da1df78-271e-11e5-8e3e-a0fcd2846a5b.png)

![before1](https://cloud.githubusercontent.com/assets/411869/8628164/a04279a4-271e-11e5-91e4-bbecfce3e6ba.png)

![after2](https://cloud.githubusercontent.com/assets/411869/8628165/a17b2622-271e-11e5-8fea-5f1be9cad250.png)
",timgraham,None,2015-07-10T20:14:18Z,2015-07-13T23:51:07Z
4979,Fixed #25103 -- Update documentation for FileResponse,"https://code.djangoproject.com/ticket/25103
",dursk,None,2015-07-10T16:36:31Z,2015-07-10T17:48:55Z
4978,Fixed #25064 -- Allowed empty join columns,"[Trac ticket](https://code.djangoproject.com/ticket/25064)

This cleans up ON clause generation in `Join.as_sql()`, so that it generates valid SQL as long as either joining columns or extra restrictions are provided by the join field, and raising `ValueError` if neither are provided by the field, instead of generating an invalid ON clause.

The substance of the fix is [this one-line addition to datastructures.py](https://github.com/django/django/commit/ec0ed0bd8db17676cc7fa64cc06e510504776926#diff-2a2517e5f15e44b5bf7ad8f970a00cb7). The following commit 23c3a55f2dc89c8c7ca37abc7b62de992b550c55 reorganises `Join.as_sql()` to be a little clearer and adds the exception.
",AlexHill,None,2015-07-10T08:37:00Z,2015-08-15T11:27:38Z
4977,Fixed #25099 - Cleaned up HttpRequest representations in error reporting.,,ziima,None,2015-07-10T08:10:26Z,2015-09-02T09:49:02Z
4976,Fixed #25097 -- Added BaseModelFormSet.delete_existing() hook,"https://code.djangoproject.com/ticket/25097#ticket
",litchfield,None,2015-07-10T06:03:38Z,2015-07-14T13:07:45Z
4975,Fixed #25019 -- Added UUID support in DjangoJSONEncoder,"Backport of https://code.djangoproject.com/ticket/25019 to the 1.8.x branch as per discussion with @freakboy3742 in mailing list.
",yarbelk,None,2015-07-10T05:35:55Z,2015-07-10T07:04:14Z
4974,Fixed #25081 -- Prevented DISTINCT ON ordering from being cleared in get().,"Also added a regression test for the ordering clearing optimisation performed in `get()` since no tests were failing if we simply removed the `clone = clone.order_by()` below and adjusted a test to correctly test captured queries SQL.
",charettes,None,2015-07-09T18:48:19Z,2015-07-09T20:01:40Z
4973,Fixed #25093 -- Added __len__ attribute to utils.datastructures.OrderedSet,"Are test cases needed?
",darkryder,None,2015-07-09T18:02:39Z,2015-07-10T01:21:35Z
4972,Add fix in case if site variable doesn't exists.,"_site_ variable is referenced outside for loop where it is discarded. Added check if site variable exists at all (it could be done via try/catch block too).

```
Environment:

Request Method: GET
Request URL: http://localhost:5000/sitemap.xml

Django Version: 1.8
Python Version: 2.7.6

Traceback:
File ""/home/<??>/.virtualenvs/bunited/local/lib/python2.7/site-packages/django/core/handlers/base.py"" in get_response
  132.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)
File ""/home/<??>/.virtualenvs/bunited/local/lib/python2.7/site-packages/django/contrib/sitemaps/views.py"" in inner
  17.         response = func(request, *args, **kwargs)
File ""/home/<??>/.virtualenvs/bunited/local/lib/python2.7/site-packages/django/contrib/sitemaps/views.py"" in sitemap
  75.     if hasattr(site, 'latest_lastmod'):

Exception Type: UnboundLocalError at /sitemap.xml
Exception Value: local variable 'site' referenced before assignment
```
",akegalj,None,2015-07-09T16:23:03Z,2015-07-21T20:51:01Z
4971,Fixed #25072 -- Prevented GDALRaster memory to be uncollectable,"Setting GDALRaster.bands as a cached property is creating a circular
reference with objects having **del** methods, which means the memory
can never be freed.
",claudep,None,2015-07-09T09:21:03Z,2015-07-10T18:14:49Z
4970,Fixed #14286 -- Added BigAutoField model field.,"https://code.djangoproject.com/ticket/13774
https://code.djangoproject.com/ticket/14286
",alesasnouski,None,2015-07-09T08:57:52Z,2016-02-02T12:40:08Z
4969,"Fixed #25089, #25090 -- Added password validation to UserCreationForm, changepassword, createsuperuser; Fix html escape bug",,alexbecker,None,2015-07-09T08:12:27Z,2015-07-30T23:36:20Z
4968,Fixed #25068 -- Added metaclassmaker to resolve metaclass conflicts in migrations state.,"Added tests as you wished.
",kosz85,None,2015-07-09T06:17:29Z,2015-08-24T06:21:34Z
4967,Fixed #25087 -- The proposal to allow the extend default permissions.,"From discussion on https://groups.google.com/forum/#!topic/django-developers/Exaq5Nn4Ckg
",djbaldey,None,2015-07-09T06:08:34Z,2015-07-31T12:22:19Z
4966,Fixes #25086 -- Allow mass updating of fields in unpersisted model objects,"Fixes #25086.

Sometimes we have an unpersisted model instance generated from, say, a factory. Before saving this to the database, we might want to do some additional processing to update the fields.

I think it's a good idea to provide a helper method to mass update the fields, particularly if it's a model with many fields. 
",yoongkang,None,2015-07-09T04:27:39Z,2015-07-14T11:45:12Z
4965,Fixed #25085 -- Overrode Select Widget's __deepcopy__,,ericfc,None,2015-07-09T00:06:40Z,2015-07-14T15:56:41Z
4964,Fixed #25083 -- Added SessionAuthenticationMiddleware to auth installation docs,"Correction to my previous PR (https://github.com/django/django/pull/4963)

The (new in 1.7) django.contrib.auth.middleware.SessionAuthenticationMiddleware is an incredibly important security improvement that insures a user's other sessions are logged out after a password change.  We should add it to the >1.7 docs on auth installation as a default.
",pirate,None,2015-07-08T19:06:46Z,2015-07-10T12:41:33Z
4963,Fixed #25083 Add SessionAuthenticationMiddleware to auth topic,"The (new in 1.7) django.contrib.auth.middleware.SessionAuthenticationMiddleware is an incredibly important security improvement that insures a user's other sessions are logged out after a password change.  We should add it to the >1.7 docs on auth installation as a default.
",pirate,None,2015-07-08T18:54:47Z,2015-07-08T20:35:43Z
4962,response.context_data -> response.context,"As far as a I know `response.context_data` should be `response.context`
",vaultah,None,2015-07-08T18:18:59Z,2015-07-08T19:10:50Z
4961,Fixed #24716 -- Deprecated Field._get_val_from_obj(),"The method duplicates the functionality of Field.value_from_object()
and has the additional downside of being a privately named public
API method.
",timgraham,None,2015-07-08T16:39:01Z,2015-07-14T13:14:35Z
4960,Fixed #25068 Added metaclassmaker to resolve metaclass conflicts,,kosz85,None,2015-07-08T12:34:12Z,2015-07-22T14:54:03Z
4959,Fixed #25079 -- Added warning if both TEMPLATES and TEMPLATE_* settings are defined.,"Django ignores the value of the TEMPLATE_\* settings if TEMPLATES is also set,
which is confusing for users following older tutorials. Raise a system check
warning in this circumstance to explain what is going wrong.

Removes the TEMPLATE_DIRS from the test settings file; this was marked
for removal in 1.10 but no tests fail if it is removed now.

Refs https://code.djangoproject.com/ticket/25079
",danielroseman,None,2015-07-07T19:47:04Z,2015-07-13T21:51:27Z
4958,Fixed #25078 -- Added support for disabled form fields,,claudep,None,2015-07-07T19:11:33Z,2015-07-16T17:37:50Z
4957,"Fixed #25073 -- The field ""content_type"" in model Permission has no translation",,djbaldey,None,2015-07-07T04:19:12Z,2015-07-07T12:49:12Z
4956,"Fixed #25073 -- The field ""content_type"" in model Permission has no translation",,djbaldey,None,2015-07-07T04:07:59Z,2017-08-16T01:00:11Z
4955,Fixed #25052 -- Added password validation to UserCreationForm.,"https://code.djangoproject.com/ticket/25052
",timgraham,None,2015-07-06T18:16:45Z,2015-07-20T18:03:08Z
4954,Update Memcached documentation comment,"Link to Memcached docs was no longer valid. Updated to new location
",mrfuxi,None,2015-07-06T13:50:56Z,2015-07-06T14:14:48Z
4953,Callable transforms,"PR for review purpose.
",loic,None,2015-07-06T08:28:24Z,2016-01-29T19:41:57Z
4952,Fixed ETag based ConditionalGet,"304 response code should return 304 response code, it doesn’t work otherwise.
",lucianmarin,None,2015-07-05T14:52:31Z,2015-07-07T18:19:55Z
4951,Refs #4960 -- Fixed selenium test failures for CharField strip changes.,,timgraham,None,2015-07-04T17:28:01Z,2015-07-06T12:55:12Z
4950,migrations: loader: warn in case an explicit migration module is not found,"Logging a warning in this case helps with tracking down errors where you
have an invalid entry in MIGRATION_MODULES.

Does this make sense?
Is it OK to add `logging` here?
",blueyed,None,2015-07-03T23:05:06Z,2017-03-25T21:42:55Z
4949,Fixed #25059 - validate punycoded TLDs in URLValidator,,alexey-sveshnikov,None,2015-07-03T16:47:55Z,2016-02-11T15:55:39Z
4948,Replaced try..except usage by context manager in custom lookups tests,"I left `YearLteTests` test case as is because it is using setUp and tearDown for each of test method.
",coldmind,None,2015-07-03T16:26:24Z,2015-07-07T16:05:12Z
4947,Fixed #22990 - Cleanse request POST if required,,ziima,None,2015-07-03T08:45:57Z,2015-07-16T17:21:03Z
4946,Fixed #25055 -- Made m2m long name testing friendlier for 3rd party databases,,manfre,None,2015-07-03T02:18:43Z,2015-07-03T13:01:01Z
4945,Added necessary dict() call to from_db example code,"This is a very small fix to the sample code documentation for from_db. The call to zip() alone just returns a list (or a zip object in Python 3).
",lunoho,None,2015-07-02T23:06:42Z,2015-07-03T13:09:49Z
4944,Fixed #25054 -- Added app_label to swapped model AttributeError,"This is useful if you have swapped a model for one with the same name but
in another app - ""User has been swapped with User"", etc.

Signed-off-by: Chris Lamb chris@chris-lamb.co.uk
",lamby,None,2015-07-02T17:44:35Z,2015-07-02T18:19:42Z
4943,Fixed #25050 -- Allowed serialization of models with deferred fields.,"If the object's class is a model with deferred fields, retrieve the
original model and use it for the serialization.
",cecedille1,None,2015-07-02T17:23:21Z,2015-07-03T12:04:58Z
4942,Fixed #25053 -- Made admin templates use |safe with password help_text,,ataylor32,None,2015-07-02T16:46:04Z,2015-07-02T18:02:58Z
4941,Fixed #22804 -- Warn on unsafe value of 'sep=' in Signer,,jaap3,None,2015-07-02T15:09:16Z,2015-11-26T11:20:06Z
4940,Fix customauth model reference in documentation,,zzzeid,None,2015-07-01T22:07:36Z,2015-07-02T03:31:09Z
4939,Fixed #24917 -- Made admindocs show model methods with arguments,,zanderle,None,2015-07-01T21:48:01Z,2015-09-07T19:19:51Z
4938,Fixed some unclosed objects,"Need to do some cleanup after reading files/streams/etc
",coldmind,None,2015-07-01T21:40:12Z,2015-07-06T14:11:35Z
4937,Replaced isinstance test by field attribute,,claudep,None,2015-07-01T14:33:44Z,2015-07-11T08:28:57Z
4936,Fixed #24982 -- Split staticfiles tests into multiple files,"Ticket: https://code.djangoproject.com/ticket/24982
",MoritzS,None,2015-07-01T11:57:27Z,2015-09-17T10:24:14Z
4935,Update docs/howto/static-files/,"Corrected internal quotes to be different from external quotes
",isedwards,None,2015-07-01T10:46:53Z,2015-07-03T10:57:27Z
4934,Fixes #25040 - When recursing through relations skip GenericForeignKey,,kairichard,None,2015-07-01T07:24:01Z,2015-07-02T16:53:05Z
4933,Refs #23621 -- Fixed warning message when reloading models.,"Changed model_name.app_label to app_label.model_name.
",knbk,None,2015-06-30T18:44:54Z,2015-06-30T19:02:13Z
4932,Stable/1.8.x,,aksinghdce,None,2015-06-30T03:17:37Z,2015-06-30T10:20:50Z
4931,Some little code fixes,,coldmind,None,2015-06-29T20:30:17Z,2015-06-29T21:14:59Z
4930,"Fixed #24994 -- Documented, checked that settings.SECRET_KEY is valid unicode string.","Documented that the settings.SECRET_KEY should be valid unicode, and checked
that it does indeed pass our expectations. In case of failure, it emits a
readable warning.
",bipsandbytes,None,2015-06-29T03:19:43Z,2015-08-31T20:21:26Z
4929,Fixed #25034 -- don't evaluate settings on import,,evansd,None,2015-06-28T21:27:18Z,2015-07-02T22:52:23Z
4928,Sorted imports in __init__.py files.,,timgraham,None,2015-06-27T15:27:18Z,2015-06-27T16:58:12Z
4927,"Fixed #25032 - When next value is missing, redirect to main /admin/ page, not to self.",,adelton,None,2015-06-26T19:57:55Z,2015-07-03T12:53:41Z
4926,[POC] #24721 -- Test extensions,"Proof of concept code to demonstrate test extensions, with the two main examples implemented.

Other possible use cases:
- Alternative data stores - a RedisExtension which selects an empty redis db and flushes it after each test
- Queue management - record celery tasks which have been queued and/or called by means of a custom Broker
- Setting up an external authentication system

Thoughts:
- Recursively iterating through the test suite classes to add `_extensions` is kinda ugly, but I deemed it preferable to the alternative code which would involve a global set of extensions. If nothing else, this will be easier to test.
- ~~As yet, I have not added a setting. There is some merit in `TEXT_EXTENSIONS` rather than subclassing the test runner, but given we already have `TEST_RUNNER`, and this functionality is dependent on the test runner being a subclass of our `DiscoverRunner`, I'm not sure it's worth worrying.~~
- ~~Current code in `TestCase` is not robust to the absence of `_extensions`.~~
- ~~Might be nice to allow the customisation of extensions on individual `TestCase` classes.~~
- Instead of attaching to `mail.outbox` and `messages.outbox`, how about attaching `TestCase._env` where such objects could live?
- Adding assertion helper methods could be nice too, but would be very magical
",mjtamlyn,None,2015-06-26T16:20:33Z,2015-12-24T22:04:51Z
4925,Fixed #25030 - observe existing (external) authentication even for POST.,,adelton,None,2015-06-26T15:45:06Z,2020-01-13T14:59:08Z
4924,Fixed #25029 - New PersistentRemoteUserMiddleware for logon-page-only external authentication.,,adelton,None,2015-06-26T14:56:24Z,2015-07-03T06:24:09Z
4923,Used field.clone() where applicable,,MarkusH,None,2015-06-26T13:06:36Z,2015-06-28T15:02:28Z
4922,Fix destructor errors,,claudep,None,2015-06-25T21:48:49Z,2015-06-26T11:42:31Z
4921,Updated GeoIP test for newer versions,,claudep,None,2015-06-25T19:48:42Z,2015-06-25T20:20:10Z
4920,Refs #24127 -- Added documentation for HttpRequest.current_app.,"Separate PR from #4919 so it might be backported. 
",knbk,None,2015-06-25T17:31:56Z,2015-06-25T18:11:19Z
4919,Fixed #24127 -- Changed the default current_app to the current namespace.,"Changed the `url` template tag to use `request.resolver_match.namespace` as a
default for the `current_app` argument if `request.current_app` is not set.

https://code.djangoproject.com/ticket/24127
",knbk,None,2015-06-25T16:59:16Z,2015-07-27T13:16:22Z
4918,Fixed #23791 -- Corrected object type check for pk__in=qs,"When the pk was a relation field, qs.filter(pk__in=qs) didn't work.
",akaariai,None,2015-06-25T15:33:53Z,2015-06-29T11:50:22Z
4917,Fixed #25031 -- Fixed a regression in the unordered_list template filter.,"Fixed behavior of internal walk_items for cases such as ['a', 'a', ['b']].
",noamkush,None,2015-06-25T10:57:53Z,2015-06-27T13:41:35Z
4916,Renamed deprecation warnings on master,,timgraham,None,2015-06-24T18:39:27Z,2015-06-24T20:37:18Z
4915,Fixed #25017 -- Allowed customizing the settings.DISALLOWED_USER_AGENTS response.,"https://code.djangoproject.com/ticket/25017
",SujaySKumar,None,2015-06-24T10:12:35Z,2015-06-27T12:47:04Z
4914,Fixed #24941 -- Added ModelAdmin.get_exclude() hook,,SujaySKumar,None,2015-06-24T08:25:26Z,2015-07-21T11:40:54Z
4913,Fixed #25019 - DjangoJSONEncoder lacks UUID,,lukas-hetzenecker,None,2015-06-23T20:58:28Z,2015-06-24T16:44:57Z
4912,Improved coverage configuration,,MarkusH,None,2015-06-23T18:53:35Z,2015-06-23T19:37:14Z
4911,Fixed #25016 -- Reallowed non-ASCII values for ForeignKey.related_name on Python 3.,"add tests and implement for [25016](https://code.djangoproject.com/ticket/25016#comment:3)
",sih4sing5hong5,None,2015-06-23T06:09:26Z,2015-06-26T13:13:43Z
4910,Refs #25002 -- Fixed an Oracle test failure introduced by 73040e584a9,"Thanks to Tim Graham for the report.
",charettes,None,2015-06-23T03:55:46Z,2015-07-10T02:50:59Z
4909,Added Ola Sitarska to a team page 🎉,"Finally got around to do it (took me a while, I know :blush:) 
",olasitarska,None,2015-06-22T19:12:45Z,2015-06-22T19:45:52Z
4908,[1.8.x] Renamed RemovedInDjango20Warning to RemovedInDjango110Warning.,,timgraham,None,2015-06-22T18:01:44Z,2015-06-24T17:36:58Z
4907,Fixed #25001 -- Doc'd caveat about collectstatic and removing INSTALLED_APPS.,"https://code.djangoproject.com/ticket/25001
",timgraham,None,2015-06-22T16:02:07Z,2015-06-22T16:45:47Z
4906,Renamed Django 2.1 deprecations to 3.0.,,timgraham,None,2015-06-22T12:34:36Z,2015-06-24T17:37:08Z
4905,Refs #23804 -- RasterField initialization only if HAS_GDAL,"The automatic instantiation of GDALRaster instances on field values fails if gdal is not installed.
",yellowcap,None,2015-06-22T10:24:17Z,2015-06-23T20:12:58Z
4904,Update formatting of example html template code in translation.txt,"Updated formatting of example html template code, according to good practice as explained in Two Scoops of Django
",wimfeijen,None,2015-06-22T08:58:54Z,2015-06-22T19:42:27Z
4903,Fixed #24983 -- Clarified domain in sites framework documentation.,"Clarified the domain name to be the fully qualified domain name of the
Web site.
",bipsandbytes,None,2015-06-21T23:51:32Z,2015-06-22T18:25:50Z
4902,Fixed #25005 - Made date and time fields with auto_now/auto_now_add use effective default,"https://code.djangoproject.com/ticket/25005

Also fixed autodetector in migrations to skip promt for default for these fields.

Opened against master since we will not backport it to 1.8
",coldmind,None,2015-06-21T10:49:45Z,2016-03-11T17:25:22Z
4901,Used mock for custom questioner instead of inheritance in tests,,MarkusH,None,2015-06-21T08:50:27Z,2015-06-23T16:21:55Z
4900,Fixed #24887 -- Removed one-arg limit from models.aggregate,"Cleaning up #4767. Thanks @gchp for the patch.
",jarshwah,None,2015-06-21T05:23:02Z,2015-06-27T15:45:03Z
4899,Refs #25006 -- Added a '6 p.m.' option to the admin's time picker.,,timgraham,None,2015-06-20T23:48:28Z,2015-06-22T11:52:32Z
4898,Fixed #24978 -- Escape special characters in fixture paths (Windows),"Fix #4855 for Windows. This pull request should be squashed with 98df288ddaba9787e4a370f12aba51c2b9133142 to avoid having issue on Windows when checking out between this fix and 98df288ddaba9787e4a370f12aba51c2b9133142.
",Gagaro,None,2015-06-20T17:12:03Z,2015-06-20T18:24:17Z
4897,Updated release process for new release schedule.,,timgraham,None,2015-06-20T12:59:10Z,2015-06-25T15:43:42Z
4896,Fixed #25000 -- Fixed cast to string for lazy objects.,"Implemented `__str__` and `__unicode__` in Python 2 and `__str__` and
`__bytes__` in Python 3 to return the string-representation of the
proxied object, not the proxy itself, if the lazy object didn't have
a string-like object in its resultclasses.

https://code.djangoproject.com/ticket/25000
",knbk,None,2015-06-20T12:18:17Z,2015-06-23T13:18:13Z
4895,Support GDAL 2.0,,claudep,None,2015-06-20T11:56:53Z,2015-06-20T13:08:54Z
4894,Use %r in the TextNode repr to show newlines better.,"If the TextNode contains a newline, the old %s code will look like this:

```
<Text Node: '
Last
'>
```

With %r, it will look like this:

```
<TextNode: u'\nLast\n'>
```
",nedbat,None,2015-06-20T11:41:21Z,2015-06-30T13:55:35Z
4893,Fixed #14200 -- Added a fallback if HttpRequest.urlconf is None.,"Made BaseHandler fall back to settings.ROOT_URLCONF if
HttpRequest.urlconf is set to None, rather than raising
ImproperlyConfigured.

https://code.djangoproject.com/ticket/14200
",knbk,None,2015-06-20T11:12:56Z,2015-06-20T22:53:21Z
4892,"Fixed #25009 - User.objects.create_user(...,is_staff=True) raises TypeError","https://code.djangoproject.com/ticket/25009
",pahko,None,2015-06-20T04:26:34Z,2015-06-22T15:40:49Z
4891,Fixed #25005 - Made DateTime and DateTimeField with auto_now/auto_now_add use effective default,"https://code.djangoproject.com/ticket/25005

This is PoC.
If `auto_now` or `auto_now_add` are used, no need to ask for default value, need to use effective default.

I'm opening it against 1.8, but I doubt if this behavior need to be changed for 1.8.
This changes seems something for 1.9.
",coldmind,None,2015-06-19T22:33:14Z,2015-06-21T10:50:31Z
4890,Added Tomek Paczkowski bio to the team page,"I'm very honoured to have been invited to the Django team.
As per @carljm's email, here's my short bio.
",oinopion,None,2015-06-19T16:14:47Z,2015-06-19T17:01:31Z
4889,Fixed #25004 -- Updated OpenLayers-based widget to OpenLayers 3,,claudep,None,2015-06-19T08:16:47Z,2017-01-03T09:06:24Z
4888,Fixed #20197 -- Made XML serializer fail loudly when outputting unserializable chars,,claudep,None,2015-06-19T06:46:23Z,2015-06-19T18:55:53Z
4887,Fixed #25002 -- Used PostgreSQL column type alteration USING clause.,"Thanks to Dirk Uys for the report.
",charettes,None,2015-06-19T01:59:31Z,2015-06-22T13:36:51Z
4886,Fixed #24997 -- Enabled bulk_create on a proxy model,"This patch enables `SomeProxyModel.objects.bulk_create(objs)`, which previously raised a `ValueError`. The real difficulty with bulk insertion is the multi-table case, and this patch correctly detects when a proxy model inherits from some other multi-table models.

The tests pass on Mac OS 10.10.2, Python 3.4.3 with both Sqlite 2.6.0 and PostgreSQL 9.4.4.

See https://code.djangoproject.com/ticket/24997.
",wkschwartz,None,2015-06-18T23:08:26Z,2015-07-02T18:01:40Z
4885,Fixed #24940 -- Made model managers hashable,"https://code.djangoproject.com/ticket/24940
",MarkusH,None,2015-06-18T20:01:16Z,2015-06-19T17:06:21Z
4884,Fixed #24962 -- Added newline to characters escaped by contrib.admin.utils.quote(),"Thanks alito for the report and patch.
",timgraham,None,2015-06-18T19:48:33Z,2015-06-18T20:13:39Z
4883,Fixed #15760 -- Added JavaScript hooks for admin inlines,"Ticket: https://code.djangoproject.com/ticket/15760
",RamezIssac,None,2015-06-18T16:35:43Z,2015-09-21T19:38:08Z
4882,Fixed #20203 - Allowed custom default manager name for the abstract model,"https://code.djangoproject.com/ticket/20203

There are no direct commit message with `Fixed #20203`, because ticket issue resolved by fixing the indirect problem.
Also removed some old unused code.
",coldmind,None,2015-06-18T15:17:41Z,2015-06-30T01:27:49Z
4881,Fixed #24995 -- Fixed renaming a ForeignKey target on MySQL,,EikeDehling,None,2015-06-18T14:30:03Z,2015-07-21T20:52:18Z
4880,Fixed #24944 -- Added extra_email_context parameter to password_reset() view.,,SujaySKumar,None,2015-06-18T12:51:03Z,2015-08-03T13:59:32Z
4879,Fixed #25018 -- Changed simple_tag to apply conditional_escape to its output.,"This is a security hardening fix to help prevent XSS (and incorrect HTML)
for the common use case of simple_tag.

Thanks to Tim Graham for the review.
",spookylukey,None,2015-06-18T09:01:45Z,2015-06-29T12:17:24Z
4878,Fixed #24865 -- Added a feature to remove stale content types,"Added an additional argument to `update_contenttypes` to automatically remove stale content types during migrations. Added tests and a new utility method to expose this functionality to users.
",Protosac,None,2015-06-18T00:59:04Z,2015-07-24T12:29:23Z
4877,Changed Oracle test-db-creation to use an explicit main-db-connection,"rather than just relying on manipulation of settings to determine which
invocation of connection.cursor() opens a connection to the test database
and which opens a connection to the main database.

This is a slight improvement in its own right, but should help significantly with the implementation of the Oracle part of test parallelization (see PR #4761 ).
",shaib,None,2015-06-17T21:44:51Z,2015-06-21T09:55:40Z
4876,install.txt: Link to FAQ for Python compatibility,"As suggested by timograham. The pevious text in install.rst was outdated.
Problem reported by the_drow on IRC.
",rfleschenberg,None,2015-06-17T14:44:59Z,2015-06-17T15:36:42Z
4875,Refs #9619 -- Added a test for Field.from_db_value() calls on QuerySet.values(),"ref.: https://code.djangoproject.com/ticket/9619
#9619 is fixed with Django v1.8 and the change from **to_python()** to **from_db_value()**

But there is no unittest for it.

Here i add a test. But i must also add **from_db_value()** to test existing test model field.
",jedie,None,2015-06-17T13:24:09Z,2015-06-17T16:23:27Z
4874,[WIP] #24993 Test custom model fields 1.7.x,"Add unittests for ""Custom Model field"" described here:

​https://docs.djangoproject.com/en/1.7/howto/custom-model-fields/#the-subfieldbase-metaclass

Discussion: https://groups.google.com/forum/#!topic/django-developers/nYhZYyLcV1g
Ticket: https://code.djangoproject.com/ticket/24993
",jedie,None,2015-06-17T10:21:54Z,2015-06-17T13:25:37Z
4873,Fixed #24992 merge subfieldbase-metaclass example code in docs,"https://docs.djangoproject.com/en/1.7/howto/custom-model-fields/#the-subfieldbase-metaclass contains three code examples:
- for Python 2 only
- for Python 3 only
- for Python 2+3 using six.with_metaclass()

What's about to remove the first two examples and leave only the six.with_metaclass() example?!?

Discussion: https://groups.google.com/forum/#!topic/django-developers/nYhZYyLcV1g
Ticket: https://code.djangoproject.com/ticket/24992
",jedie,None,2015-06-17T10:12:12Z,2015-06-17T10:49:11Z
4872,Fixed #24966 - Added ALLOWED_HOSTS to deploy check,,raiderrobert,None,2015-06-16T20:08:56Z,2015-07-15T13:20:21Z
4871,[WIP] Fixed #24989 -- Added migrations API documentation,"[skip ci]
",MarkusH,None,2015-06-16T16:55:31Z,2015-07-06T17:14:30Z
4870,Refs #23763 -- Fixed Python 3.5 PendingDeprecationWarning in LazyStream.,"Fixed ""PendingDeprecationWarning: generator 'LazyStream.read.<locals>.parts'
raised StopIteration"" per PEP 0479.
",timgraham,None,2015-06-16T16:03:04Z,2015-06-17T11:08:55Z
4869,Fixed #24948 -- Fixed crash when uploading bitmap images in forms.ImageField,"https://code.djangoproject.com/ticket/24948
",coldmind,None,2015-06-16T15:26:15Z,2015-06-16T18:39:43Z
4868,Fixed #24966 -- Made an empty ALLOWED_HOSTS raise ImproperlyConfigured when DEBUG=False,"See discussion here for details: https://groups.google.com/forum/#!topic/django-developers/nIrbGjyOsNY
",raiderrobert,None,2015-06-16T13:26:54Z,2015-06-16T19:47:41Z
4867,Fixed #24970 -- Added --managers and --admins options to sendtestemail management command.,,rolo,None,2015-06-16T13:24:55Z,2015-06-22T11:22:48Z
4866,Fixed #11331 -- Removed disconnect_all() from pylibmc backend,"This in reference to #11331. `libmemcached` manages its own connections fairly well.
",lericson,None,2015-06-16T07:55:05Z,2016-09-01T14:46:16Z
4865, Fixed #20916 -- Added Client.force_login() to bypass authentication during a test login.,"…on when logging in during tests.
",jdufresne,None,2015-06-16T04:39:28Z,2016-03-13T23:03:28Z
4864,Fixed #24987 -- Changed Client.login() to login user with is_active=False,,jdufresne,None,2015-06-16T00:47:20Z,2016-03-13T23:03:30Z
4863,Fixed flake8 warnings on Python 3.,,timgraham,None,2015-06-15T14:42:31Z,2015-06-15T17:12:45Z
4862,Removed django.utils.functional.total_ordering(),"Don't think Python < 2.7.3 support is needed anymore.
",timgraham,None,2015-06-15T14:13:29Z,2015-06-15T17:18:56Z
4861,Removed support for Python 3.3.,"discussion: https://groups.google.com/d/topic/django-developers/5ZtPdG-eRRw/discussion
",timgraham,None,2015-06-15T13:45:39Z,2015-06-18T13:20:25Z
4860,Corrected to not erroneously mention email as being required.,"Email field isn't required.
",elena,None,2015-06-15T12:43:25Z,2015-06-15T13:00:17Z
4859,Fix #24972 -- index recreate check on MySQL composed index delete,"Trac bug: https://code.djangoproject.com/ticket/24972

In the fix for #24757, the call to
DatabaseSchemaEditor._constraint_names passed a string as the
column_names argument, which is expected to be an iterable of column
names and is converted to a list inside the method.

_constraint_names then attempted to match each constraint against a list
containing each individual character of the foreign key's name as a
separate item, causing it to always return empty, so
_delete_composed_index tried to recreate the FK index even if it already
existed.

It also passed in the Django ORM field name (e.g. `myfk`), rather than
the database column name (e.g. `myfk_id`).
",excitedleigh,None,2015-06-15T01:33:02Z,2015-06-15T21:31:08Z
4858,Fixed #24828 -- Allowed migration optimization across AlterFooTogether,"Prerequisite: #4857
",MarkusH,None,2015-06-14T09:44:13Z,2015-06-15T22:46:56Z
4857,Updated migration optimizer,,MarkusH,None,2015-06-14T00:47:38Z,2015-06-14T18:59:07Z
4856,Fixed #24971 -- Made startapp generate an apps.py,"Adding support for App config on the default app creation.
",MounirMesselmeni,None,2015-06-13T13:49:54Z,2015-06-16T11:09:05Z
4855,Fixed #24978 -- Escape special characters in fixture paths,"Ticket: https://code.djangoproject.com/ticket/24978
",MoritzS,None,2015-06-13T10:28:34Z,2015-09-17T10:23:56Z
4854,Fixed #21695 -- Add asvar option to blocktrans.,"Bojan Mihelac provided the initial patch. I have added more tests, documentation, and tweaked the setting of asvar to match how `trans` does it. https://code.djangoproject.com/ticket/21695
",dracos,None,2015-06-12T12:54:28Z,2015-07-01T14:03:44Z
4853,Fixed #24834 -- Fixed get_current_site() when Host header contains port.,"When the Host header contains a port, looking up the Site record fails
as the host will never match the domain.
",ngnpope,None,2015-06-11T22:29:10Z,2015-06-18T14:19:45Z
4852,Added ALLOWED_HOSTS and SERVER_EMAIL details to deployment checklist.,,timgraham,None,2015-06-11T14:06:07Z,2015-06-11T17:44:28Z
4851,PEP-8 style indentation of code blocks in forms documentation,,nimasmi,None,2015-06-11T13:36:18Z,2015-06-11T16:22:55Z
4850,Update ChoiceFieldRenderer object,"Allow easier extendability of ChoiceFieldRenderer objects.
",GravyHands,None,2015-06-11T12:08:34Z,2015-06-11T14:17:59Z
4849,Fixed #24968 -- Removed bad horizontal scrollbar appearing on admin changelist page.,"It is a simple css/UI bugfix in the admin changelist view
",zauddelig,None,2015-06-11T08:18:40Z,2015-06-11T15:57:57Z
4848,[WIP] Fixed #15667 -- Added template-based widget rendering.,,prestontimmons,None,2015-06-11T00:02:23Z,2016-04-23T18:15:39Z
4847,Added new author Sutrisno Efendi,"I've added some translations to Indonesian
",kangfend,None,2015-06-10T22:18:50Z,2015-06-11T02:17:59Z
4846,Fixed #24979 -- Removed usage of inspect.getargspec().,"https://groups.google.com/d/topic/django-developers/NZskysjasx8/discussion
",timgraham,None,2015-06-10T21:40:43Z,2015-09-15T11:23:27Z
4845,Fixed #24950 -- Added unicode_literals to models.py in app template,"Thanks to Tim Graham for the patch
",MarkusH,None,2015-06-10T21:09:00Z,2015-06-11T14:39:04Z
4844,Fixed #24914 -- Added authentication mixins for CBVs,"- [x] Integrate django-braces code
- [x] Add tests
- [x] Update / adjust docs
- [x] Outline differences to django-braces
- [x] Add migration guide for django-braces users
",MarkusH,None,2015-06-10T21:06:59Z,2015-06-17T21:20:12Z
4843,Fixed #24965 -- Make LiveServerTestCase.live_server_url accessible from class,"Ticket: https://code.djangoproject.com/ticket/24965
",MoritzS,None,2015-06-10T16:05:36Z,2015-09-17T10:23:17Z
4842,Fixed #24963 -- Adds seekable property to files in python3,,carsongee,None,2015-06-10T14:46:46Z,2015-06-12T14:18:03Z
4841,[1.8.x] Fixed #24903 -- Fixed assertRaisesMessage on Python 2.7.10.,"A regression found in in Python 2.7.10 rc1 wasn't reverted for the final
release: https://bugs.python.org/issue24134

Backport of several commits from master:
- c2bc1cefdcbbf074408f4a4cace88b315cf9d652
- a0175724b086127a4e13612042961d3ba88d6bd9
- e89c3a46035e9fe17c373a6c9cd63b9fd631d596
",timgraham,None,2015-06-09T19:54:37Z,2015-06-09T22:46:10Z
4840,Add links to all auth docs pages from index.,"Refs ticket 24961.
",danielroseman,None,2015-06-09T15:37:23Z,2015-06-09T16:44:22Z
4839,Changed FeedDoesNotExist to missing import Feed.,"FeedDoesNotExist is not used in the documentation example. Feed import is missing.
",argaen,None,2015-06-09T15:05:35Z,2015-06-09T16:38:29Z
4838,Clarify the default form widget for `DecimalField` in documentation,"The default form widget for the `DecimalField` model field is `NumberInput` if `Field.localize` is `False`. Otherwise it's `TextInput`.
",Matt-Deacalion,None,2015-06-09T14:26:27Z,2015-06-09T16:33:53Z
4837,Fix typos in python3 doc,,nikolas,None,2015-06-09T13:37:14Z,2015-06-09T14:38:01Z
4836,Fixed #24914 -- Added authentication mixins for CBVs,"Supersedes #4749.
",MarkusH,None,2015-06-09T12:49:33Z,2015-06-11T23:37:57Z
4835,Fixed #24943 -- Update contributing tutorial to use virtualenv,"See ticket: https://code.djangoproject.com/ticket/24943
",alimony,None,2015-06-08T21:57:07Z,2015-06-16T08:02:13Z
4834,Fixed #24958: Fixed inline forms using UUID-PK parents with auto-PK children,"The fix for issue #24377 fixed using inline forms with parent and
child objects that use UUIDs as primary keys, but did not cover
the case where a parent object used a UUID for a primary key along
with a child object that used an AutoField for a primary key.
It also fixes the case where a parent object has an AutoField
primary key with a UUID alternate key, and the child object is
related to the parent's alternate key.
",jhoos,None,2015-06-08T19:55:46Z,2015-06-26T13:16:38Z
4833,Minor edits to password validation tests/docs (refs #16860).,"@erikr, my other question is if there would be any benefit to including a `code` for each validation error.
",timgraham,None,2015-06-08T17:30:46Z,2015-06-10T12:02:49Z
4832,Fixed #24952 -- Fixed example SQL in Func() expressions docs,,alasdairnicol,None,2015-06-08T14:15:00Z,2015-06-08T15:04:13Z
4831,Fixed tests for refs #24767 on databases that don't support microseconds.,,timgraham,None,2015-06-08T13:12:48Z,2015-06-08T16:29:23Z
4830,Make flatatt docstring match reality.,"The spirit of the docstring was correct, but referred to an outdated version of the function.
",schinckel,None,2015-06-08T09:16:14Z,2017-06-12T01:08:23Z
4829,Fixed #24946 - Implemented Field.register_lookups() method,"https://code.djangoproject.com/ticket/24946

Also added missing test for specifically Field.register_lookup() method.

I did not use `register_lookups` for the places where there field is registering only one lookup. 
",coldmind,None,2015-06-07T19:40:18Z,2015-06-08T05:55:10Z
4828,Fixed #18247 -- Added cast to NUMERIC for Decimals on sqlite,"On sqlite the SUM() of a decimal column doesn't have a NUMERIC type so when comparing it to a string literal (which a Decimal gets converted to in django) it is not compared as NUMERIC as may be expected.

Added CAST to NUMERIC type when using a SQL function that is expected to return a Decimal

Ran all tests in sqlite.
",NEOatNHNG,None,2015-06-07T00:26:58Z,2015-06-30T22:29:42Z
4827,Move jQuery files to vendor subdirectory,"This was discussed in #4577.  This will hopefully make it more clear which files are independently maintained outside of Django.
",treyhunner,None,2015-06-07T00:19:06Z,2015-06-07T20:24:29Z
4826,Fixed #23190 -- Make Paginator.page_range an iterator,"This change fixes an inconsistency in the nature of
`Paginator.page_range`'s return value across major versions of
Python, ultimately caused by `range`'s behaviour in 2.x and 3.x.

Fixes https://code.djangoproject.com/ticket/23190

This problem was first noted in https://code.djangoproject.com/ticket/23088
",zedr,None,2015-06-06T19:41:59Z,2015-07-03T15:35:49Z
4825,Fixed #24945 -- PostgreSQL fuzzystrmatch support.,"Just as I was in the area adding the trigram code, I thought I might as well take a look at this very similar functionality. I use Double Metaphone on my (Django powered) site http://theatricalia.com/ so that e.g. http://theatricalia.com/search?q=katie+stevens resolves to Katy Stephens.
",dracos,None,2015-06-06T19:32:00Z,2016-07-18T09:33:14Z
4824,Fixed #24908 -- Duplicate readonly field rendering.,"ModelAdmin added readonly_fields to exclude, but would not un-declare
them if they were overridden, causing the readonly field to be rendered
twice.

https://code.djangoproject.com/ticket/24908
",jpic,None,2015-06-06T11:52:31Z,2015-07-03T09:35:00Z
4823,Fixed GIS tests,"Patch from https://github.com/django/django/commit/0a899157836cc4c3d3980ab6a70b2f37bbb7ba97#commitcomment-11550904 .
",dracos,None,2015-06-06T08:18:33Z,2015-06-06T08:38:49Z
4822,Fixed #24908: readonly for overridden form fields would cause double rendering.,"https://code.djangoproject.com/ticket/24908
",jpic,None,2015-06-06T01:30:36Z,2015-06-06T11:53:02Z
4821,Investigating admin double rendering of readonly fields.,,jpic,None,2015-06-06T01:28:28Z,2015-06-06T01:29:21Z
4820,Added Markus Amalthea Magnuson to AUTHORS.,"Made some contributions in the past, seems like I never got around to adding myself :)

https://github.com/django/django/commits?author=alimony
",alimony,None,2015-06-06T00:05:09Z,2015-06-16T08:02:53Z
4819,Fixed #12437 -- Added css_classes to Form._html_output().,"See ticket: https://code.djangoproject.com/ticket/12437
",alimony,None,2015-06-05T22:57:13Z,2015-06-16T08:02:44Z
4818,Fixed #24937 -- fix serialization of Date(Time)RangeField.,"Use the DjangoJSONEncoder so that datetime and date are encoded appropriately.
https://code.djangoproject.com/ticket/24937
",dracos,None,2015-06-05T21:02:43Z,2015-06-06T12:41:13Z
4817,Fixed #24881: clarify order_with_respect_to documentation,"see https://code.djangoproject.com/ticket/24881.
",karyon,None,2015-06-05T20:19:06Z,2015-06-19T11:03:09Z
4816,Import sqlite3 instead of _sqlite3,"adapt and ProgrammingError are both available on the sqlite3 module. There's no need to import the internal _sqlite3 module.
",funrollloops,None,2015-06-05T19:47:25Z,2016-05-13T16:44:20Z
4815,Fixed #24938 -- add PostgreSQL trigram support.,"Discussed briefly with @mjtamlyn at DjangoCon Europe. Not sure if it's useful or important enough to be in core, but thought I'd try coding it anyway :)
",dracos,None,2015-06-05T18:58:55Z,2016-05-13T16:40:58Z
4814,Fixed #24796 -- Added a hint on placement of SecurityMiddleware in MIDDLEWARE_CLASSES.,"https://code.djangoproject.com/ticket/24796
",marissazhou,None,2015-06-05T15:55:13Z,2015-06-08T16:33:14Z
4813,Fixed #24126 - deprecated current_app as a keyword,"Currently current_app is being passed in certain views inside
the django.contrib.admin.views module, but this behavior is deprecated
since Django 1.8.

A decorator is used to capture current_app as a keyword and raise a
deprecation warning while preserving the behavior for backwards
compatibility.
",lukawoj,None,2015-06-05T15:50:35Z,2015-07-21T12:27:40Z
4812,Fixed #24910 -- Allowed createsuperuser to create multiple users with…,"… the same username if USERNAME_FIELD is not unique

Clarified docs to say that a non-unique USERNAME_FIELD is permissable
as long as the custom auth backend can support it.
",alasdairnicol,None,2015-06-05T15:32:47Z,2015-06-06T13:33:30Z
4811,Fix for ticket 12685,,mthornhill,None,2015-06-05T15:02:39Z,2015-06-10T13:59:15Z
4810,Fixed #24924 -- Join promotion for multiple Case expressions,"Fixes https://code.djangoproject.com/ticket/24924. Test case provided by @robline.

I would love some review on this. This is a follow up to the fix for https://code.djangoproject.com/ticket/24766 which was handled by @akaariai in be9d645346a20a6c394bf70d47b1b1d5c81ff530.

There are potentially related/overlapping PRs #4794 and #4801.
",mlavin,None,2015-06-05T15:00:11Z,2015-06-05T16:23:24Z
4809,Fixed #24932 -- Add Cast expression,,Ian-Foote,None,2015-06-05T14:23:05Z,2018-08-26T22:14:11Z
4808,Fixed #22404 -- Added a view that exposes i18n catalog as a JSON,"Added a `json_catalog` view to `django.views.i18n`, which returns a JSON response containing translations, formats, and a plural expression for the specified language.

Based on @manologab's solution https://github.com/manologab/django/tree/ticket_22404, somewhat refactored, with tests improved and documentation added.
",sergeykolosov,None,2015-06-05T14:11:35Z,2015-08-05T13:15:40Z
4807,Fixed #24915 - Added stricter session key validation,"Changed _session_key attribute to a property and implemented basic
validation in the setter. The session key must be 'truthy' and
at least 8 characters long. Otherwise, the value is set to None.

https://code.djangoproject.com/ticket/24915
",david-bannon,None,2015-06-05T13:58:51Z,2015-06-07T00:05:00Z
4806,Fixed #24690 - Add ArrayField Mutable Default Warning,"Add ArrayField Mutable Default Warning
",marissazhou,None,2015-06-05T13:46:14Z,2015-07-31T16:17:59Z
4805,Fixed #24877 -- Call process_exception on exceptions raised in render,,sephii,None,2015-06-05T13:35:29Z,2015-07-03T16:08:28Z
4804,[WIP] Fixed #24935 -- Refactored conditional GET handling,"first basis for discussion
",syphar,None,2015-06-05T13:30:10Z,2015-08-15T13:09:44Z
4803,Fixed #13751 -- Avoid open redirect issue with whitelist,"Added a new settings REDIRECT_WHITELIST_URLS to allow a list of urls for redirection outside the application host. The match is done in utils.http.is_safe_url(). All tests passed, and the new setting has been documented.
",marcaurele,None,2015-06-05T13:21:55Z,2015-06-17T19:25:17Z
4802,Fixed #24690 - Add ArrayField Mutable Default Warning,"Add ArrayField Mutable Default Warning
",marissazhou,None,2015-06-05T13:08:26Z,2015-06-05T13:45:47Z
4801,Fixed #25367 -- allowed expressions in filter(),"Allow expressions to be used in filter() clause.

Also, add Q() object to query by resolve_expression().
",akaariai,None,2015-06-05T11:19:10Z,2015-09-14T05:02:53Z
4800,Fixed #24925 -- cast dates and times in Value,"Add `Value.as_mysql` method to `cast` datetimes, dates and times to their
corresponding MySQL types.
",Ian-Foote,None,2015-06-05T11:07:02Z,2018-08-26T22:13:50Z
4799,Fixed #24912 -- Used get_db_prep_value() when getting instance attribute value in get_prefetch_queryset(),"This resolves a problem for non-PostgreSQL databases when using
prefetch_related with a source model that uses a UUID primary key.
",brki,None,2015-06-05T11:05:22Z,2015-06-15T13:38:29Z
4798,Added new author Girish Kumar,,girishkumarkh,None,2015-06-05T10:52:27Z,2015-06-09T16:48:31Z
4797,Fixed #24933: Make FormSet management forms optional,"The default behaviour is to trust the management form if provided and fall back to extracting the number from submitted data otherwise.

This is an example implementation of https://code.djangoproject.com/ticket/24933
",patrys,None,2015-06-05T10:46:36Z,2015-09-01T14:42:15Z
4796,Fixed #24862 -- Improved PostGIS database connection error message,"Thanks brycenesbitt for the patch.
",sephii,None,2015-06-05T10:46:11Z,2015-06-05T19:59:45Z
4795,Refs #24833 - Renamed vars in solve_lookup_type to be more consistent,,coldmind,None,2015-06-05T10:13:21Z,2015-06-05T15:22:23Z
4794,Fixed #24833 - Changed references check to look on expressions instead of aggregates,"This is to make to make `Case` expressions work with `.exclude()`.

https://code.djangoproject.com/ticket/24833
",coldmind,None,2015-06-05T10:07:39Z,2015-06-05T15:04:14Z
4793,Fixed #24925 -- Document using Coalesce on MySQL,"Add warning for using Coalesce with python values on MySQL and document
workaround.
",Ian-Foote,None,2015-06-05T09:55:04Z,2015-06-05T10:25:13Z
4792,Fixed #22571 -- Added clarification about auto_now_add=True,"Related to: https://code.djangoproject.com/ticket/22571
",yamila-moreno,None,2015-06-05T09:36:56Z,2015-06-05T14:17:36Z
4791,Fixed #24926 -- Removed outdated information from deployment,"Fixing this bug: https://code.djangoproject.com/ticket/24926
",yamila-moreno,None,2015-06-05T08:41:50Z,2015-06-05T10:13:36Z
4790,Fixed #24929 -- permission_required decorator should take any iterable,"https://code.djangoproject.com/ticket/24929

There is no reason why permission_required only takes lists and tuples
of permissions, while has_perms itself can take any iterable. This
commit makes the behaviour consistend with the new mixins from #24914
and other parts of Django where both strings and iterables of strings
are accepted (see e.g. model._meta.ordering),
",raphaelm,None,2015-06-05T08:10:39Z,2015-06-08T22:09:28Z
4789,Cleanup: Removed the try-except-fail antipattern from tests,"Found cases where testing code was doing

```
try:
    whatever
except (some excption type):
    self.fail(""exception shouldn't be thrown"")
```

replaced it with just

```
whatever
```

as this makes the unexpected errors easier to debug, and the tests
would fail just as much and aren't rendered less readable.
",shaib,None,2015-06-05T07:38:16Z,2015-06-05T11:04:35Z
4788,Fixed #24927 -- Relied on six's python_2_unicode_compatible implementation,"https://code.djangoproject.com/ticket/24927
",MarkusH,None,2015-06-05T00:16:44Z,2015-06-05T07:35:05Z
4787,Fixed #24907 -- Updated contribution guide with a more recent example ticket,"See ticket: https://code.djangoproject.com/ticket/24907
",alimony,None,2015-06-05T00:08:09Z,2015-06-16T08:03:25Z
4786,Refs #22728 - Added missing tests for defaults__exact case,,coldmind,None,2015-06-04T23:29:49Z,2015-06-05T09:33:04Z
4785,Fixed #19210 -- Handling of leap years in django.utils.timesince,"django.utils.timesince used to ignore leap years which lead to big
inaccuracies as soon as you used it on big time spans. This is the
most simple fix for this bug, as explained in the ticket.
",raphaelm,None,2015-06-04T22:52:44Z,2015-06-05T07:58:53Z
4784,Fixed #24927 -- Used python_2_unicode_compatible from six,"python_2_unicode_compatible is now included in six, so include that function from inside django.utils.encoding instead. https://code.djangoproject.com/ticket/24927

I wondered if the encoding should be deprecated and the code should all be updated to refer to it in the new location, but I thought that perhaps six may change its behaviour at some point in future and you'd want to be able to switch back to a Django specific version. (See e.g. discussion of the six PR at https://bitbucket.org/gutworth/six/pull-request/48 for things six might do in future.)
",dracos,None,2015-06-04T22:36:44Z,2015-06-05T17:56:20Z
4783,Fixed #13910 -- Added generator based rendering (streaming) of templates and supporting views,"This is a port of https://github.com/django/django/pull/1037 (https://code.djangoproject.com/ticket/13910) to master.

What has been done:
- Added stream method to Template and Node classes
- Added stream function to template.loader
- Added stream_to_response shortcut, similar to render_to_response
- Added stream shortcut, similar to render
- Added stream functionality to defaulttags that would benefit from it
- Added StreamingTemplateResponse and SimpleStreamingTemplateResponse to complement the existing non-streaming template response classes
- Added generic StreamingTemplateView
- Tests
- Documentations
",Gagaro,None,2015-06-04T21:16:13Z,2019-04-02T06:54:27Z
4782,Use get_db_prep_value when getting instance attribute value in get_pr…,"…efetch_queryset

This resolves a problem for non-PostgreSQL databases when using
prefetch_related with a source model that uses a UUID primary key.
",brki,None,2015-06-04T17:40:45Z,2015-06-06T14:31:45Z
4781,Fix #24769 - Cast optparse verbosity argument to an integer for better backwards compatibility,"Based on https://github.com/django/django/pull/4628

This PR adds tests and fixes the same problem (verbosity argument being string) when -v option was not specified.

A few questions:
- @freakboy3742 brought up the question of backwards compatibility when old management commands actually expect string, but reading https://code.djangoproject.com/ticket/24769 and https://code.djangoproject.com/ticket/24518 , it seems that it wasn't considered much of an issue.
- Is there a better way than assert in the test management command for ensuring that the verbosity option is actually int?
",rivol,None,2015-06-04T17:10:35Z,2015-06-15T22:41:46Z
4780,Fixed #22276 -- Surfaced ValidationError to end-user if management form is invalid,"This is a new implementation of #3634 
",patrys,None,2015-06-04T17:00:50Z,2015-09-30T17:28:46Z
4779,Fixed #22728 - Prohibited lookups usage for get_or_create and update_or_create,"https://code.djangoproject.com/ticket/22728
",coldmind,None,2015-06-04T16:46:37Z,2015-06-04T22:50:09Z
4778,Fixed #24925 -- Add testcase for Coalesce bug on MySQL,"A datetime passed to `Coalesce` is converted to a string in MySQL. This means an annotated value is a string, not a datetime.
",Ian-Foote,None,2015-06-04T16:40:23Z,2015-06-05T10:24:34Z
4777,Fixed #24829 -- Allowed usage of TemplateResponse in error handlers,"https://code.djangoproject.com/ticket/24829

If a class based generic view is specified as an error handler, the template is
supposed to be rendered in advance, otherwise it raises
ContentNotRenderedError.
",ana-balica,None,2015-06-04T16:39:29Z,2015-06-17T21:12:20Z
4776,"Removed datetime_cast_sql, which is never overridden or used anywhere in Django.","Done as a PR rather than a direct commit to give some chance to interested parties to stop it
",shaib,None,2015-06-04T16:29:57Z,2015-07-01T05:16:47Z
4775,Fixed #24882 -- Documented Migration.run_before,"https://code.djangoproject.com/ticket/24882

This is my first Django PR. Not sure if I should update the status of the ticket as well. Instead, I will post a link to this PR. Please let me know if some other mode of notification is preferable.

Thanks.
",mcbhenwood,None,2015-06-04T16:25:52Z,2015-06-06T13:00:56Z
4774,Fixed #4960 -- Added 'strip' option to CharField,"Added `strip` option to CharField, which when `True` will instruct clean to strip whitespace from the value. Any non-text values will be ignored.

For further information - https://code.djangoproject.com/ticket/4960
",danielward,None,2015-06-04T16:04:35Z,2015-09-21T06:24:57Z
4773,Fixed #24922 -- Added system check for templates setting,"If `'loaders'` is present in the `TEMPLATES` options together with
`APP_DIRS` set to `True`, the template engine raises an exception. This
conflict is detected by the system check `templates.E001`
",sergei-maertens,None,2015-06-04T16:01:07Z,2015-06-06T23:41:16Z
4772,Fixed #9061 -- Added 'can_delete_extra' option to BaseFormSet,"Added in the `can_delete_extra` option along with supporting tests and documentation updates. This option, when set to `False` will prevent the deletion option from displaying for extra forms in formsets.

For further information - https://code.djangoproject.com/ticket/9061
",danielward,None,2015-06-04T15:43:18Z,2015-09-21T06:26:19Z
4771,Fixed #24906 -- Fixed ResolverMatch.app_name for nested namespaces.,"Set ResolverMatch.app_name to the full path of nested application
namespaces.

https://code.djangoproject.com/ticket/24906
",knbk,None,2015-06-04T15:42:50Z,2015-06-06T14:45:30Z
4770,Fixed #19542: Made mirroring databases for tests work with Oracle,"No tests are provided because there is no sane way to test database
settings within the Django test suite.

(but I did make sure that testing in general works after this, also when no mirrors are used)
",shaib,None,2015-06-04T15:37:47Z,2015-06-05T10:51:32Z
4769,Ticket 24474 new,,gannetson,None,2015-06-04T15:32:09Z,2015-06-04T15:32:28Z
4768,Fixed #24191 -- Documented Form.changed_data,"Thanks rhertzog and Björn Påhlsson for the suggestion.
",alasdairnicol,None,2015-06-04T15:26:59Z,2015-06-04T17:52:04Z
4767,Fixed #24887 -- Removed one-arg limit from models.aggregate,,gchp,None,2015-06-04T15:26:57Z,2015-06-26T12:50:44Z
4766,Fixed #24744 - Fixed relabeled_clone in Transform,"That fixes problems with usage transforms in subqueries.
I also added missing tests for postgresql fields.
",coldmind,None,2015-06-04T15:20:02Z,2015-06-06T13:16:24Z
4765,Fixed #24923 -- error out nicely when using aggregates in order_by,,akaariai,None,2015-06-04T14:54:22Z,2015-07-13T12:38:02Z
4764,Fixed #24474 -- Allowed configuring the admin's empty change list value.,"This is the 2nd PR for this feature. 
Fixed all tests now.
",gannetson,None,2015-06-04T14:46:50Z,2015-06-05T01:06:52Z
4763,[WIP] Tasks prototype,,HonzaKral,None,2015-06-04T14:22:01Z,2015-10-28T20:55:10Z
4762,[WIP] Parallelize tests (attempt 2),,aaugustin,None,2015-06-04T14:14:34Z,2015-06-04T17:20:48Z
4761,Fixed #20461 -- Allowed running tests in parallel.,,aaugustin,None,2015-06-04T14:14:28Z,2015-09-10T14:12:39Z
4760,Fixed #24728 -- Rename mime_type to content_type for syndication feeds,"Renamed the mime_type properties of RssFeed and Atom1Feed to
content_type and start deprecation for the old names.
",raphaelm,None,2015-06-04T14:03:09Z,2015-06-04T21:57:22Z
4759,Fixed #24899 -- Split migrations autodetector._detect_changes() method,"This would be my first functional commit. I've kept the underscore notation as these are methods that run as part of `_detect_changes`, and I've moved the comments into the individual methods.
",amarksteadman,None,2015-06-04T13:59:59Z,2015-06-05T06:55:28Z
4758,Fixed #24859 -- Make UUID field raise TypeError on bad value,"For consistency with AutoField. I'm not entirely sure `get_prep_value` is the best place to do this validation, please advise if not.
",cole,None,2015-06-04T13:51:41Z,2015-06-06T23:49:14Z
4757,Fixed #18166 -- Added form_kwargs support to formsets.,"By specifying form_kwargs when instantiating the formset, or overriding
the `get_form_kwargs` method on a formset class, you can pass extra
keyword arguments to the underlying `Form` instances.

Includes tests and documentation update.
",sergei-maertens,None,2015-06-04T13:19:19Z,2015-06-05T21:15:41Z
4756,Fixed #7060 -- Added a note about race conditions to the tutorial,"This is a proposal for a note in the tutorial. Feel free to suggest any changes.
",raphaelm,None,2015-06-04T13:10:56Z,2015-06-04T15:01:37Z
4755,"Fixed #24921, No Database objects can be created with set_autocommit(False)",,shabda,None,2015-06-04T13:08:29Z,2015-06-06T14:28:11Z
4754,Fixed #22634 -- Changed Session and SessionStore to be easily extendable,"Introduced abstract base model for Session, and properties enabling the developer to override session model class used by session store and the session store class used by the model.

Allowed to override `KEY_PREFIX` via the `cache_key_prefix` property.

This PR follows up https://github.com/django/django/pull/2667 ; it covers review suggestions from the original PR, and addresses the recent changes in models/migrations, namely not being able to import `models.py` of an application which is not in `INSTALLED_APPS`.

The patch itself looks much simpler with `git diff -C` so that the copies are detected (`cached_db` → `base_cached_db`, `db` → `base_db`).

Changes to the initial migration file are made in order for it to conform to the latest Django code, these can not be included as a separate migration file (`makemigrations` detects no changes).
",sergeykolosov,None,2015-06-04T12:59:23Z,2015-08-27T19:04:24Z
4753,Fixed #23516 -- Made include tag cache parsed Template objects.,"Fixes <a href=""https://code.djangoproject.com/ticket/23516"">#23516</a>. This also speeds up for loops that render the same template multiple times.
",dracos,None,2015-06-04T11:57:59Z,2015-06-06T13:26:00Z
4752,Changed 'content' to 'description',"In English, 'content' is not typically used as a singular noun (ie: the phrase ""a piece of content"" is preferable to ""a content"").

The phrase ""add optional content"" would also be acceptable, but this change is the least disruptive to the documentation.
",amarksteadman,None,2015-06-04T10:37:33Z,2015-06-04T11:12:53Z
4751,Fixed #24677 -- made TextField to_python return a string,"Small fix for #24677. There was no TextField specific test class to went ahead and added one.
",rolo,None,2015-06-04T10:33:01Z,2015-06-04T13:04:33Z
4750,Refs #24125 -- Added a test to ensure that we can render the admindocs TemplateDetailView,"Without throwing an exception when using more than one Engine
This adds tests for 511a53b3142551a1bc3093ed1b6655f57634f510

Refs #24125.
",kairichard,None,2015-06-04T10:31:44Z,2015-06-12T00:28:33Z
4749,Fixed #24914 -- Added basic permission mixins to contrib.auth,"https://code.djangoproject.com/ticket/24914

An initial version of implementation and tests is in the pull request, documentation is yet to be done. Comments on the code are very welcome.

This proposal provides all the and only the functionality of all three authentication decorators from contrib.auth.

While it is slightly differently implemented, it tries to stay compatible with the widely-used 3rd-party package django-braces in terms of parameter and method names. django-braces does have more functionality than the decorators have, but implementing this functionality in django itself is outside the scope of this ticket.
",raphaelm,None,2015-06-04T09:46:49Z,2015-06-09T12:49:45Z
4748,Fixed #24629 -- Added Func.as_transform and use it in Unaccent.,"Functions and Transforms have obvious potential for overlap, so provide an easy way to generate a Transform from a Lookup. Unaccent in contrib.postgres is a prime example, so dogfood it as well.
",mjtamlyn,None,2015-06-04T09:25:52Z,2015-09-29T08:28:29Z
4747,Fixed #24908: exclude wouldn't apply on inherited form fields.,"If a ModelForm overrides a form field which would have been
automatically instanciated for a form field, then extending that model
form with this field in Meta.exclude should indeed exclude that field.

At this point, the test fails and the excluded field ends up in
base_fields.
",jpic,None,2015-06-04T08:43:50Z,2015-06-06T11:23:11Z
4746,Doc fix: Tutorial 1: app structure: include migrations dir,"In Tutorial 1, after creating polls/urls.py, you're given an updated tree view of the what the app structure should look like.

The app structure does not include a migrations/ directory, even though the directory it is listed earlier in the same tutorial.
",the-real-ed,None,2015-06-04T07:11:55Z,2015-06-04T09:01:32Z
4745,Fixed #24911 -- use model as a named argument,,317070,None,2015-06-03T23:14:22Z,2015-06-30T17:57:35Z
4744,Refs #24628 -- Added a second test and a docstring comment to avoid regression.,,carljm,None,2015-06-03T19:47:00Z,2015-06-04T01:22:03Z
4743,Fixed #24904 -- Fixed nested namespaces in current_app.,"Fixed reverse() to correctly handled nested namespace lookups
in current_app.

https://code.djangoproject.com/ticket/24904
",knbk,None,2015-06-03T17:16:18Z,2015-06-05T15:48:31Z
4742,Fix ImportError message in import_string,"It used the wrong variable for module path, which resulted in funny errors like „Module ""path.to.module.SomeClass"" does not define a ""SomeClass"" attribute/class”.
",ktosiek,None,2015-06-03T15:11:44Z,2015-06-06T15:46:03Z
4741,Fixed #24837 -- field__contained_by=Range,"Provide `contained_by` lookups for the equivalent single valued fields related
to the range field types. This acts as the opposite direction to 
rangefield__contains.

With thanks to schinckel for the idea and initial tests.
",mjtamlyn,None,2015-06-03T11:59:00Z,2015-06-04T18:30:49Z
4740,Fixed #24890 -- Added warning to collectstatic when static files have clashing names,"See ticket: https://code.djangoproject.com/ticket/24890
",alimony,None,2015-06-03T09:21:09Z,2015-06-16T08:03:26Z
4739,Applied db_table conversion to fix schema tests on Oracle.,,timgraham,None,2015-06-02T23:18:35Z,2015-06-02T23:47:28Z
4738,Fixed #24628 -- Fixed applied status for squashed migrations.,,carljm,None,2015-06-02T20:26:50Z,2015-06-03T19:50:23Z
4737,Added headings to i18n template tags and filters.,,timgraham,None,2015-06-02T19:42:47Z,2015-06-02T19:51:34Z
4736,Add git attribute merge=union for release notes,"This will stop annoying merge conflicts for release notes by forcing git to take two both sets of additions on these files. See this article for more info: https://about.gitlab.com/2015/02/10/gitlab-reduced-merge-conflicts-by-90-percent-with-changelog-placeholders/
",adamchainz,None,2015-06-02T15:12:33Z,2015-06-02T21:11:57Z
4735,Fixed #24897 -- Allowed using choices longer than 1 day with DurationField,"https://code.djangoproject.com/ticket/24897
",zauddelig,None,2015-06-02T09:09:04Z,2015-06-02T16:40:53Z
4734,Fixed #24896 -- Doc'd clickjacking protection doesn't overwrite X-Frame-Options header.,"Ticket https://code.djangoproject.com/ticket/24896
Current documentation doesn't specify the behaviour of clickjacking protection middleware or view decorators when the X-Frame-Options header is already set. This add a 'note' that the existing header will not be modified by the clickjacking protection.
",wsot,None,2015-06-02T04:16:39Z,2015-06-02T13:02:40Z
4733,Fixed #24893 -- Fixed lack of unique constriant when changing a field from primary_key=True to unique=True,"First commit is https://github.com/django/django/pull/4730, but added here because the fix for this ticket uses it.
",timgraham,None,2015-06-01T23:33:16Z,2015-06-02T13:32:30Z
4732,Fixed #24895 -- Fixed loading a pair of squashed migrations with a dependency.,,carljm,None,2015-06-01T23:24:05Z,2015-06-02T18:12:05Z
4731,Fixed #24894 -- Added TransactionNow() database function to django.contrib.postgres,"[Ticket 24894](https://code.djangoproject.com/ticket/24894) , previously discussed on PR #4722 which implements `Now()`.
",adamchainz,None,2015-06-01T22:13:21Z,2015-06-16T09:27:42Z
4730,Fixed #24892 -- Fixed quoting of SQL when renaming a field to AutoField in PostgreSQL,,timgraham,None,2015-06-01T21:11:25Z,2015-06-02T13:15:52Z
4729,"Fixed #24481 -- New ""sql"" command based on migrations","This implements part of https://code.djangoproject.com/ticket/24481 as it reimplements the `sql` command using the migration autodetector fed straight into the loader via a new `from_changes` method.

This same path can also be used to drive test database creation without running through existing migrations, in theory. This PR is not yet complete - a few more of the `sql*` commands can probably be emulated.
",andrewgodwin,None,2015-06-01T15:09:25Z,2015-12-29T18:17:55Z
4728,Fixed #24883 -- Added MigrationGraph.__repr__(),"MigrationGraph now has a **repr** method to
aid with debugging.

See: https://code.djangoproject.com/ticket/24883
",yoongkang,None,2015-06-01T12:49:47Z,2015-06-01T14:48:45Z
4727,Simplified wording in QuerySet.update() docs.,"Avoiding the repetition of the same words makes it easier to read and comprehend the docs.
",mxlian,None,2015-06-01T08:18:38Z,2015-06-01T13:43:00Z
4726,Refs #3254 -- Added full text search to contrib.postgres.,"Work in progress to add full text search support to contrib.postgres.

To do list:
- [x] Search a single char or text field for term(s) using a __search lookup
- [x] Search multiple fields via annotation
- [x] Set the dictionary used for the search
- [x] Assign weights to fields used in search
- [x] Use OR, NOT, weights in queries
- [ ] ~~Use prefixes and phrases in queries~~
- [x] Rank search results (annotate + order_by)
- [ ] ~~Highlight results (annotate)~~
- [x] Match against a defined column (not providing the trigger code)
- [x] Tests for combinations (AND/OR etc) of Vectors and Queries
- [x] Topic documentation
- [x] Reference documentation
",mjtamlyn,None,2015-05-31T22:09:22Z,2016-04-30T16:43:59Z
4725,Fixed #24880 -- Added more explicit docs on select_for_update() on SQLite.,"[#24880](https://code.djangoproject.com/ticket/24880) - Be more explicit about what happens and what doesn't when using `select_for_update()` on backends that do not support `SELECT ... FOR UPDATE`.
",suligap,None,2015-05-31T18:22:51Z,2015-06-01T12:53:53Z
4724,Fixed #21927 -- Made application and instance namespaces more distinct.,"Made URL application namespaces be set in the included URLconf, and
instance namespaces in the call to include(). Deprecated other ways
to set application and instance namespaces.
",knbk,None,2015-05-30T14:35:07Z,2015-06-08T19:13:17Z
4723,Fixed #24873 -- Prevented Prefetch objects from being overwritten.,"[Ticket 24873](https://code.djangoproject.com/ticket/24873)

Also I don't know if this could be considered a release blocker or not and where to discuss about it. `Prefetch` was introduced in Django 1.7 and this bug is there since the beginning. It keeps `Prefetch` from being used in applications with lots of relations.
",Gagaro,None,2015-05-29T18:04:02Z,2015-06-22T19:07:46Z
4722,Fixed #24866 -- Added Now() database function,"[Ticket 24866](https://code.djangoproject.com/ticket/24866)
",adamchainz,None,2015-05-29T15:05:05Z,2015-06-03T07:39:49Z
4721,Refs #23643 -- Fixed debug view regression on Python 2.,"Updated from https://github.com/django/django/pull/4530.
",timgraham,None,2015-05-29T13:32:04Z,2015-05-29T16:50:46Z
4720,Fixed #24831 - Fixed pickling queryset with prefetch_related after objects deletion,"https://code.djangoproject.com/ticket/24831

Not sure this approach is right - maybe we should cache `related_model` for all `ForeignObjectRel` inheritors except M2M one?
",coldmind,None,2015-05-29T11:51:28Z,2015-06-02T14:07:37Z
4719,Optimise tutorial images,"Optimise the updated PNGs in the tutorial using:
    optipng -o7 -zm1-9 -strip all *.png
    advpng -z4 *.png
",funkybob,None,2015-05-29T04:58:49Z,2015-05-29T05:35:37Z
4718,Added contrib.auth migration for refs #13147.,,timgraham,None,2015-05-28T19:26:51Z,2015-05-28T23:15:05Z
4717,Fixed #24851 -- Fixed crash with reverse one-to-one relation in ModelAdmin.list_display,"In 1.8, `get_field()` returns reverse relations so we need to filter them out for backwards compatibility.
",timgraham,None,2015-05-27T15:50:19Z,2015-05-28T14:51:15Z
4716,Docs: Removed unused import in example code in docs/topics/auth/default.txt,,kevinmarsh,None,2015-05-27T12:32:46Z,2015-05-27T13:41:48Z
4715,Fixed #24817 - Prevented loss of null info in MySQL field renaming,"Previous PR - https://github.com/django/django/pull/4714
Opening against master.

https://code.djangoproject.com/ticket/24817
",coldmind,None,2015-05-26T22:20:11Z,2015-05-28T14:09:19Z
4714,[1.8.x] Fixed #24817 - Prevented loss of null info in MySQL field renaming,"https://code.djangoproject.com/ticket/24817
",coldmind,None,2015-05-26T21:24:07Z,2015-05-26T22:11:31Z
4713,Fixed #24836 -- Made force_text() resolve lazy objects.,"https://code.djangoproject.com/ticket/24836
",timgraham,None,2015-05-26T20:49:09Z,2015-05-27T13:49:51Z
4712,Fixed #24847 -- Items set on a RequestContext after creation get lost,"https://code.djangoproject.com/ticket/24847
",pwmarcz,None,2015-05-26T19:40:14Z,2015-05-27T14:09:14Z
4711,"Fixed #24340 -- Added nested deconstruction for list, tuple and dict values","Nested deconstruction should recursively deconstruct items within list, tuple and dict values.

Supersedes #4129

https://code.djangoproject.com/ticket/24340
",MarkusH,None,2015-05-26T14:34:12Z,2015-08-21T00:43:11Z
4710,widgets.txt very light edits,,garwoodpr,None,2015-05-26T14:28:02Z,2015-05-26T14:48:47Z
4709,fields.txt very light edits,"For your review and consideration, please find very light edits to the fields.txt document. Thanks
",garwoodpr,None,2015-05-25T14:13:07Z,2015-05-25T14:50:28Z
4708,Fixed #24848 -- Fixed ValueError for faulty migrations module.,"Added apps to unmigrated apps if they had a migrations.py file
or an empty migrations folder.

https://code.djangoproject.com/ticket/24848
",knbk,None,2015-05-24T19:41:33Z,2015-05-25T17:59:43Z
4707,Fixed #24788 - Allow Forms to specify a prefix at the class level,"https://code.djangoproject.com/ticket/24788
",pwmarcz,None,2015-05-24T18:46:14Z,2015-05-26T00:24:13Z
4706,Fixed #24835 - exists() incorrect after annotation with Count(),"https://code.djangoproject.com/ticket/24835

I followed the same approach as in `QuerySet._values()`. Seems hacky but I couldn't figure out a better way.
",pwmarcz,None,2015-05-24T18:16:56Z,2015-05-26T00:47:47Z
4705,Implement has_changed in HStoreField to correctly handle empty one,"HStore Form Field falsely report has_changed. Implementing a custom has_changed method for this kind of field, we avoid comparing a default empty string '' with an empty dict {}
",andreagrandi,None,2015-05-24T15:00:43Z,2015-05-24T15:33:01Z
4704,decorators.txt light edits,"Light edits to decorators.txt for your review and consideration.
",garwoodpr,None,2015-05-24T13:31:04Z,2015-05-25T11:39:20Z
4703,Fixed #24846 -- Added support to MySQL DatabaseSchemaEditor.skip_default() for all blob/text data types,"[Ticket 24846](https://code.djangoproject.com/ticket/24846)
",adamchainz,None,2015-05-24T11:50:40Z,2015-05-31T00:40:56Z
4702,validation.txt light edits,"For your review and consideration please find very light grammatical edits to this document. Thanks
",garwoodpr,None,2015-05-24T01:57:13Z,2015-05-25T17:20:02Z
4701,[WIP] Fixed #13614 -- Replaced SelectFilter2 by jQuery-based code,,claudep,None,2015-05-23T17:57:17Z,2015-07-24T12:33:35Z
4700,Trac #7835: Test only models doc,"The following pull request is purely to add some documentation on how to add models that will only get created during unit tests.

Trac Ticket: https://code.djangoproject.com/ticket/7835

One concern that I have is that I have added this below [Using the Django test runner to test reusable applications](https://docs.djangoproject.com/en/1.8/topics/testing/advanced/#using-the-django-test-runner-to-test-reusable-applications). To me, I feel that both sections are talking about different ways of creating test only models but I understand if the community feels that this is a duplicate.
",khoobks,None,2015-05-23T14:02:38Z,2015-08-14T11:07:18Z
4699,Fixed #24699 -- Added aggregate support for DurationField on Oracle,"This works, but I'd like to hear some thoughts on putting ""private"" expressions in `backends.<vendor>.functions`. 

The `IntervalToNumber` and `NumberToInterval` expressions are extremely bare bones. If they were going to be public then I'd probably build them out a little better. As a quick example, I'd add support for changing the second argument of `NumberToInterval` from `SECOND` to something user supplied.

But mainly, I'm wondering whether we should add expressions into each of the backends, and then reference them from the public API as I'm doing below. Is this where they belong? If yes, should we default to making everything public?

My thoughts on this are that expressions in the backend are fine, but they should be documented and rugged enough for public API.
",jarshwah,None,2015-05-23T08:18:51Z,2015-05-31T00:45:32Z
4698,Fixed #22316 -- add time filters to TimeField.,"It looks like this was implemented for non-SQLite backends in 1.7 (as a side effect of <a href=""https://code.djangoproject.com/ticket/16187"">#16187</a>), and this commit adds support for SQLite. https://code.djangoproject.com/ticket/22316
",dracos,None,2015-05-22T19:18:40Z,2015-06-05T02:30:42Z
4697,Fixed #24826 -- Accounted for filesystem-dependent filename max length,"Thanks Raphaël Hertzog for the report and help on the patch, and Tim Graham
for the review.
",claudep,None,2015-05-22T17:45:01Z,2015-05-22T18:56:52Z
4696,formsets.txt datetime vs string examples,"For your review and consideration;

1) View this doc as it renders on the website you will see that line 456 is the wrong font color/weight. I wonder if line 457 an extraneous  <hidden tag> is causing this issue. Also line 457 does not make sense, and is out of place without an explanation being provided for it. So I clipped it. Hope it fixes the issue.

2) The significant, repeating issue in this document relates to the example code blocks, which demonstrate setting the pub_date value to a string:

> > > data = {
> > > ...     # clipped code
> > > ...     'form-0-pub_date': '1904-06-16',
> > > ...     # clipped code

This causes is_valid() to return False for each example it occurs in,  because pub_date actually requires a datetime object, as is established in the first block of code: 

> > > class ArticleForm(forms.Form):
> > > ...     title = forms.CharField()
> > > ...     pub_date = forms.DateField()

The simple solution is to change each instance from a string to a datetime object: 

> > > data = {
> > > ...     # clipped code
> > > ...     'form-0-pub_date': datetime.date(1904-06-16),
> > > ...     # clipped code

... and then everything works. 

I am happy to suggest this, but have not made the changes. I searched this history of this doc to see if there was a discussion as to why this might be intentionally 'wrong' (i.e., for some aesthetic reason), but can't find anything along those lines. To complicate this issue, about half of the references in this document are properly referencing the datetime object. 

Lines with proper datetime.date syntax: 
line(s): 68, 392, 393, 428, 429, 435, 436, 437, 452, 453, 488, 489, 492, 

Lines with improper 'string' syntax: 
line(s): 154, 276, 278, 318, 320, 360, 362, 417, 420, 423, 477, 480,
",garwoodpr,None,2015-05-22T14:54:24Z,2015-05-22T15:30:05Z
4695,BaseRangeField should use base_field's prepare_value method. Ref: #24841,"The `BaseRangeField` doesn't do the `base_field`'s `prepare_value` method on the submitted range values, so the base field preparations are not applied to the values.

For the basic types, this isn't a problem, but for `DateTimeRangeField` it is, because the `DateTimeField` (`DateTimeRangeField`'s `base_field`) does a timezone conversion on the submitted values, but `DateTimeRangeField` leaves the timezone as is.

What then happens is that datetimes displayed by the field are in UTC, but they are submitted as the local timezone.
",villiers-s,None,2015-05-22T14:48:15Z,2015-05-25T16:08:28Z
4694,Refs #24840 -- Added GDALRaster warp and transform methods.,"- The warp method allows altering any parameters of the raster (geotranform, datatype, srid, etc
- The transform method allows reprojecting the raster into a different srid
",yellowcap,None,2015-05-22T13:22:37Z,2015-06-24T16:33:06Z
4693,#24839: add deprecation warning to templates page for django.contrib.webdesign,,wsot,None,2015-05-22T13:05:20Z,2015-05-22T13:40:29Z
4692,Fixed documentation to match changes in #24149.,"With ticket #24149 (commit
9ec8aa5e5d42ac4529846f7eae6bf4982800abff), Django uses lists instead
of tuples for settings.
",cschur,None,2015-05-22T10:50:23Z,2015-05-22T13:42:20Z
4691,Fixed #24811 -- Added details on installing PostgreSQL extensions.,,timgraham,None,2015-05-21T18:20:29Z,2015-05-24T02:13:45Z
4690,index.txt basic grammar edits and SQL statements,"For your review and consideration please find basic edits to this document, and two topics for discussion below. 

The two topics which require clarification: 
1)  In the 'fieldsets' and 'get_fieldsets' discussions on lines: 284 and 1367; the text suggests 'a list of two-tuples', but technically this is a 'two-tuple tuple'. I left it as is, because a list of two-tuples actually sounds less confusing, but seems to be technically wrong. Please weigh in on this issue. 

2) SQL statements on lines 1100-1101; 1113-1114; and 1129-1130 
Of the primary SQL flavors regularly referenced through the documentation (PostgreSQL, sqLite and MySQL), only PostgreSQL has the ILIKE statement. Unless clarification is added to the document at the point where ILIKE statements are referenced which explains the statement is exclusive to PostgreSQL when constructing case-insensitive searches, LIKE is a better representation of a SQL statement (even novices know the LIKE statement). Below please find the references to case-sensitivity searching in SQL by their respective sources.  

PostgreSQL:
""The key word ILIKE can be used instead of LIKE to make the match case-insensitive according to the active locale. This is not in the SQL standard but is a PostgreSQL extension."" (http://www.postgresql.org/docs/8.3/static/functions-matching.html)

sqLite:
""The default configuration of SQLite only supports case-insensitive comparisons of ASCII characters."" (https://www.sqlite.org/faq.html)

MySQL
""  string comparisons are case insensitive by default. This means that if you search with col_name LIKE 'a%', you get all column values that start with A or a."" (https://dev.mysql.com/doc/refman/5.0/en/case-sensitivity.html)

I do not have write privileges to the repo, so if these changes are appropriate, please commit.  
Thank you.
",garwoodpr,None,2015-05-21T15:10:36Z,2015-05-22T00:24:21Z
4689,QuerySet.__get__ for safety as class attribute.,"If the queryset has been added as a class attribute, clone the queryset to avoid confusing bugs where instances share the same queryset and it gets evaluated, sliced, etc.

Had some discussion with Loic.
",MikeAmy,None,2015-05-21T05:27:19Z,2015-05-23T08:01:09Z
4688,Fixed #24834 -- Fixed get_current_site() when Host header contains port.,"When the Host header contains a port, looking up the Site record fails
as the host will never match the domain.
",ngnpope,None,2015-05-20T22:57:22Z,2015-06-02T20:23:59Z
4687,Test isolation backports,,charettes,None,2015-05-20T17:03:17Z,2015-07-10T02:50:55Z
4686,clarity changes to tutorial02.txt,"Please find light edits, clarifications of muddy descriptions, a new newbie hint, and the inclusion of a call out for the need to create two essential classes (QuestionAdmin and ChoiceInline).

In this pull request, I am not proposing any changes to the images included with the tutorial series, but I will return in a separate series of pull requests to outline the need for standardized cropping, propose an (updated) date series, and suggest a simple naming scheme, (i.e., Figure One, Figure Two, etc.,) so images can be referenced between individual lessons of the tutorial, regardless of their initial/actual position. 

These edits are provided for your review and consideration. Please commit the changes that are appropriate as I do not have write privileges to the repo.  Thank you.
",garwoodpr,None,2015-05-20T16:39:28Z,2015-05-22T00:25:55Z
4685,Fixed #24826 -- Accounted for filesystem-dependent filename max length,"Thanks Raphaël Hertzog for the report and help on the patch.
",claudep,None,2015-05-20T16:39:06Z,2015-05-22T18:56:48Z
4684,Clear floats with clear rather than overflow.,"I've been dissecting Django admin's model choice widget changes recently ( https://github.com/jpic/test_input_relation it has a bit of history too because it was initially related to [#24784](https://code.djangoproject.com/ticket/24784) ) and found something a bit weird in the new CSS, which kind of breaks the ability to have a dynamic widget (ie. a javascript menu or autocompletion) in a clean manner (without fixing the flow with custom JS).

Shouldn't we use the .clear class defined in base.css to clear floats instead ?

Isn't .form-row is meant to contain .field-box which have float:left ?

In this case, shouldn't we need .form-row to contain an element that will clear
the floats ?

This would remove the need to hide overflow and enable rich dynamic widgets
(ie. js menus) without hacks.

Let me know what you think.
",jpic,None,2015-05-20T12:35:23Z,2015-05-26T12:35:18Z
4683,Missing a whitespace.,,ly0,None,2015-05-20T11:00:30Z,2017-02-22T00:43:38Z
4682,Conversion of many tests to SimpleTestCase.,"This builds on top of #4522.

I plan to squash all commits if required, it was just easier working this way.
",charettes,None,2015-05-19T21:04:31Z,2015-07-10T02:50:58Z
4681,"Fixed #11154, #17904 -- Added creation of proxy model permissions","I just updated @charettes' patch in #146, and added release notes.

**Edit:** Tickets links:
- https://code.djangoproject.com/ticket/11154
- https://code.djangoproject.com/ticket/17904
",acatton,None,2015-05-19T15:37:06Z,2015-12-29T23:31:49Z
4680,tutorial01.text light edits,"Light edits to tutorial01 for your review and consideration.
I do not have write privileges to the repo, so if these edits are acceptable, please commit. 
Thank you
",garwoodpr,None,2015-05-19T14:37:21Z,2015-05-19T16:33:51Z
4679,Add Riccardo Magliocchetti to AUTHORS,,xrmx,None,2015-05-19T14:14:26Z,2015-05-19T16:34:23Z
4678,lTuple validators,"Tuples afford immutability, which looks cleaner in a model definition.

Signed-off-by: Chris Lamb chris@chris-lamb.co.uk
",lamby,None,2015-05-19T13:33:25Z,2015-05-22T00:26:44Z
4677,Fixed #24705 -- Fixed negated Q objects in expressions.,"Avoided split_exclude() for Q when used as an expression.
",akaariai,None,2015-05-19T11:41:18Z,2015-05-20T13:41:36Z
4676,Fixed #24818 -- Prevented models.CharField accepting a string as max_length,"…length
",alasdairnicol,None,2015-05-19T09:49:12Z,2015-05-19T12:13:47Z
4675,Refs #24553 -- Stopped overriding contrib.auth.urlpatterns in auth_tests,"This avoid leakage of urls between tests. The perils of mutable data structures :)
",xrmx,None,2015-05-19T09:15:47Z,2015-05-19T11:45:02Z
4674,Fixed #24813 -- Documented {% include %} debug behavior variance,"Added doc note about difference in handling of missing template by
include tag based on DEBUG setting.
",akulakov,None,2015-05-18T21:15:39Z,2015-05-21T23:52:42Z
4673,overview.txt audience clarification,"Non-programmers will not reach this point; the true audience is a novice.
I do not have write privileges to this repo, if this change is appropriate, please commit. 
Edits to the entire tutorial will follow.
",garwoodpr,None,2015-05-18T13:26:24Z,2015-05-20T07:50:47Z
4672,Fixed #24812 -- Fixed app registry RuntimeWarnings in schema and migrations tests.,"https://code.djangoproject.com/ticket/24812
",timgraham,None,2015-05-18T13:13:57Z,2015-05-18T14:17:47Z
4671,Fixed #24784 -- Fixed visibility regression in admin's FK widget.,,timgraham,None,2015-05-18T11:56:06Z,2015-05-20T01:28:08Z
4670,Added tzinfo to a test to fix RuntimeWarning.,,timgraham,None,2015-05-18T01:17:34Z,2015-05-18T10:58:30Z
4669,Added docs for assertRaisesMessage as context manager.,,timgraham,None,2015-05-17T20:27:28Z,2015-05-18T14:08:00Z
4668,New method examples and edits to sessions.txt,"Please find new examples for session method calls and light edits for your review and consideration.
I do not have write privileges to the repo, so if these edits are okay, please commit. 
Thanks!
",garwoodpr,None,2015-05-17T14:58:54Z,2015-05-17T22:36:34Z
4667,Update request-response.txt,"Simple edits to the request-response file for your review and consideration. 
I do not have write access to the repo, so if these edits are okay, please commit.  
Cheers!
",garwoodpr,None,2015-05-17T03:05:02Z,2015-05-18T13:45:59Z
4666,Removed redundant list() calls.,,timgraham,None,2015-05-16T13:16:55Z,2015-05-16T14:47:15Z
4665,Fixed #24732 -- Reorder tutorial to cover basics before bells and whistles,"Besides moving the admin part to the end of the tutorial I also needed to make some minor changes to reflect the new order of some parts.
",jllorencetti,None,2015-05-16T00:24:09Z,2015-05-28T19:20:17Z
4664,[1.8.x] Fixed #24802 -- Delayed GDAL check for OSMGeoAdmin,"Backport of a37dcfd0a38cff24eb4fb5e3858791aa5428c853 from master
",timgraham,None,2015-05-15T13:21:42Z,2015-05-15T13:42:38Z
4663,Updated the python shell example to python 3.4.3 in the simple install guide.,,KamranMackey,None,2015-05-15T10:36:28Z,2015-05-16T21:44:57Z
4662,Fixed #24805 -- Delayed check for locale_dir in makemessages,"Thanks Wim Feijen for the report.
",claudep,None,2015-05-15T08:25:57Z,2015-05-18T12:13:58Z
4661,Fixed #24774 -- Made Site domain attribute unique,,piotrjakimiak,None,2015-05-14T18:15:56Z,2015-05-16T12:44:43Z
4660,Fixed #24791 -- Added fallback when 'postgres' database isn't available,,claudep,None,2015-05-14T17:29:23Z,2015-05-15T16:45:37Z
4659,Fixed runtests --reverse regression,"This fixes a regression with runtests.py --reverse after
bd53db5eab05099ae371348529c6428e0da95c6a

We need to have some care in tests to not leaking models
registration in the default AdminSite.
",xrmx,None,2015-05-14T12:32:38Z,2015-05-14T13:59:10Z
4658,Fixed #24799 -- Fixed deleting of empty session cookie when using SESSION_COOKIE_DOMAIN,,blopker,None,2015-05-14T06:23:30Z,2015-05-15T15:25:58Z
4657,Fixed #24783 -- Refactored template library registration.,"Apologies in advance for the big patch. This refactoring had to touch a lot of files. Below is an outline of what changed.
## API Overview:

The `Engine` class now accepts a dictionary of library paths. For example:

```
{
    'i18n': 'django.templatetags.i18n',
    'myapp_tags': 'myapp.templatetags.myapp_tags',
    ...
}
```

These values are stored as `Engine.libraries`. Each of these paths are imported and stored as a module in a dict: `Engine.template_libraries`. This is similar to how `Engine.loaders` and `Engine.template_loaders` works.

The `DjangoTemplates` class now also accepts a `libraries` argument.  Additionally, it runs discovery on the `templatetags` packages of each installed application. The results are collated and passed to the `Engine` instance.

The `{% load %}` tag is simplified to do a dict lookup on the `Engine` rather than running imports.

The big change is that libraries are now imported when the backend and engines are instantiated. This means syntax and import errors in template tag modules are now raised when the backend is instantiated rather than when a template is first compiled with a `{% load %}` tag.

Further, besides the builtins, instantiating `Engine` directly won't register any libraries not explicitly specified, e.g.  `django.templatetags.i18n`, etc.

I chose this implementation for the following reasons:
1. There should be one obvious way to handle tags. The old `LoadNode` looped through template tag modules in installed apps trying to import the library. Adding a dict lookup for `Engine.libraries` as an addition rather than a replacement here leads to odd code.
2. The DTL `{% load %}` tag shouldn't require `django.apps`, or installed apps at all, to be used. This is only possible if knowledge of installed applications is removed from the `LoadNode` and encapsulated instead on the engine.
3. The `Engine` class should be explicitly configurable without needing any knowledge of Django modules outside DTL.
## Outline of code changes:

django.template.backends.django
- Added `DjangoTemplates.get_template_libraries` which discovers template libraries in installed packages.
- Modified `DjangoTemplates.__init__` to do discovery and pass libraries to the internal `Engine`.

django.template.engine
- Added `builtins` and `libraries` argument to the `Engine` class.
- Added `default_builtins` attribute to the `Engine` class. This is copied and
  extended by the `builtins` argument.
- Added `Engine.template_libraries` and `Engine.template_builtins`
  attributes. These are passed to the `Parser`.

django.template.base
- Added `libraries` and `builtins` argument to `Parser`.
- `Template.compile_nodelist` updated to pass `libraries` and `builtins` to `Parser`
  from `self.engine`.
- Removed `libraries` and `builtins` globals.
- Moved library related code to `django.template.library`.

django.template.library (new module)
- Separated `SimpleNode` and `InclusionNode` as top-level classes in
  `django.template.base`. These take extra argument now rather being defined
  at runtime with closures.
- Removed django.template.base.generic_tag_compiler. Was used only by
  `Library.inclusion_tag`.
- Removed `get_templatetags_modules`.
- Simplified `import_library` error checking and removed
  `is_library_missing`. This isn't needed since errors are caught at compile
  time.

django.template.defaulttags
- `LoadNode` now looks for libraries with a dict lookup on
  `Parser.libraries` rather than running imports.

django.contrib.admindocs.views
- Fixed to find installed template tags from `Engine.getdefault()` rather than
  doing it's own discovery.

tests/template_backends
- Added discovery-related tests for libraries and builtins to
  `template_backends.test_django`.

tests/template_tests
- Updated tests to explicitly specify the tags they need when instantiating
  `Engine`.
- Moved `testtags` from `template_tests.utils` to their own file rather than using the `register_test_tags` decorator.
- Updated tests that now fail when the backend is instantiated.
- Updated `setup` decorator to allow libraries to be specified per test
  class.
",prestontimmons,None,2015-05-13T23:05:29Z,2015-05-21T19:46:10Z
4656,Removed unnecessary arguments in .get method calls,"Removed passing None as default for `get` calls.

Should I create ticket for this PR?
",piotrjakimiak,None,2015-05-13T18:55:15Z,2015-05-14T13:36:59Z
4655,Fixed #24757 -- Recreated MySQL index when needed during unique_together removal,,claudep,None,2015-05-13T16:17:51Z,2015-05-15T15:08:17Z
4654,Tidy spacing in generated migrations.,"```
# -*- coding: utf-8 -*-
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
```

vs

```
# -*- coding: utf-8 -*-

from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models

class Migration(migrations.Migration):
    dependencies = [
        ('clients', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
```

(MIght be tempting to further separate imports that start with ""import "" for ultimate niceness.)
",lamby,None,2015-05-13T15:44:50Z,2015-05-13T20:59:37Z
4653,[WIP] #24743 -- Grouped consecutive migrations in effective migration plan,"This is a PoC PR for https://code.djangoproject.com/ticket/24743
",MarkusH,None,2015-05-13T14:21:21Z,2015-08-10T00:02:19Z
4652,Fixed #24751 -- Fixed HStoreField isnull lookup.,"https://code.djangoproject.com/ticket/24751
",timgraham,None,2015-05-13T13:56:35Z,2015-05-13T14:34:22Z
4651,"Fixed #24757 -- Reverted ""Prevented unneeded index creation on MySQL-InnoDB""","This reverts commit 2ceb10f3b02cbebad6ed908880f49a7c3e901d12 (refs #14180).
",timgraham,None,2015-05-13T12:50:59Z,2015-05-15T14:44:29Z
4650,Fixed #24630 -- Clarified docs about RunPython transactions.,,timgraham,None,2015-05-13T12:24:16Z,2015-05-17T22:52:36Z
4649,Fixed broken link in settings docs,"Should be merged to 1.8 branch too.
",piotrjakimiak,None,2015-05-13T08:55:19Z,2015-05-13T11:02:54Z
4648,Fixed #24776 -- Improved error from dumpdata,,inglesp,None,2015-05-13T08:45:18Z,2015-05-22T15:09:34Z
4647,Fixed #24789 -- Example code positional arguments,"Corrected positional parameter order for example post_save signal 
receiver.

Arguments shown in example code (signal, sender, instance) appeared to 
be the incorrect positional arguments for a post_save signal (which 
might start as: sender, instance, created), as documented:
​https://docs.djangoproject.com/en/1.8/ref/signals/#post-save
",cdrice,None,2015-05-13T01:24:00Z,2015-05-13T22:58:33Z
4646,runserver: move DEFAULT_PORT into Command attribute,"Allow a subclass of Command to easily override the default port value
",mattrobenolt,None,2015-05-12T06:24:19Z,2015-05-12T12:55:46Z
4645,Fixed 24782 -- Add TestCase.assertFormValid,"Before adding documentation and tests is this implementation okay?
",delgiudices,None,2015-05-11T21:32:00Z,2015-07-03T15:55:06Z
4644,Fixed #24698 and #24712: Implement get_db_prep_value for ForeignKey,"ForeignKey was not deferring to related field for get_db_prep_lookup. As a result, the db_prep_save value would differ from db_prep_lookup value for foreign keys pointing to fields that implement a custom get_db_prep_value.

Add a tests checking specifically for a ForeignKey to a UUIDField.
",abhaga,None,2015-05-11T18:02:28Z,2015-05-13T02:08:59Z
4643,Fixed #24748 -- Fixed incorrect GROUP BY on MySQL in some queries,"When the query's model had a self-referential foreign key, the
compiler.get_group_by() code incorrectly used the self-referential
foreign key's column (for example parent_id) as GROUP BY clause
when it should have used the model's primary key column (id).
",timgraham,None,2015-05-11T15:35:28Z,2015-05-11T15:50:59Z
4642,Fixed #24766 -- join promotion for Case expressions,"This should fix the bug.

I'm really, really busy right now. I can't work any more on this right now. Volunteers to finish this welcome.
",akaariai,None,2015-05-11T06:49:19Z,2015-05-11T15:16:43Z
4641,Fixed #24777 -- Added support for statement_timeout in the database backends.,,jdufresne,None,2015-05-10T17:02:01Z,2019-01-04T20:24:34Z
4640,Update querysets.txt,,harisibrahimkv,None,2015-05-10T07:19:38Z,2015-05-10T08:31:33Z
4639,Light edits to forms/index.html,"Please find grammar edits for review and consideration.
I do not have write privileges to repo, so if edits are okay, please commit. Thanks
",garwoodpr,None,2015-05-10T03:19:07Z,2015-05-15T22:05:17Z
4638,UUIDField: Don't redundantly remove hyphens,"This works just fine in any version of python.

```
$ python
Python 2.7.9 (default, Dec 13 2014, 22:20:22)
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import uuid; uuid.UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
>>> exit()
$ python2.6
Python 2.6.9 (unknown, Sep  9 2014, 15:05:12)
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import uuid; uuid.UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
$ python3
Python 3.4.3 (default, Feb 25 2015, 21:28:45)
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import uuid; uuid.UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
$ pypy
Python 2.7.9 (9c4588d731b7fe0b08669bd732c2b676cb0a8233, Mar 31 2015, 07:55:22)
[PyPy 2.5.1 with GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>>> import uuid; uuid.UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
UUID('a6bdbb77-a2d7-4989-bf16-eb1b147141b4')
```

Also worth noting the docstring in cpython's source: https://github.com/python/cpython/blob/2.7/Lib/uuid.py#L103-L126

Technically, a bunch of different string formats are acceptable.
",mattrobenolt,None,2015-05-10T00:48:08Z,2015-05-11T11:13:40Z
4637,Refs #23763 -- Silenced SimpleTestCase.assertRaisesMessage() deprecation warning on Python 3.5.,"Adapted the method for a backwards incompatible change introduced
in https://bugs.python.org/issue24134
",timgraham,None,2015-05-09T23:19:48Z,2015-05-16T14:47:15Z
4636,Fixed #24742 -- Made runserver.check_migrations ignore read-only databases,"Thanks Luis Del Giudice for the report.
",claudep,None,2015-05-09T15:07:11Z,2015-05-13T16:32:22Z
4635,Mocked db.connections in test_runner tests,,claudep,None,2015-05-09T14:38:02Z,2015-05-09T15:06:17Z
4634,Fixed #24767 -- Added Greatest and Least expressions,"For [ticket #24767](https://code.djangoproject.com/ticket/24767).
",Ian-Foote,None,2015-05-09T13:42:14Z,2015-06-05T10:24:11Z
4633,Added SSL support to the `runserver` development server.,"The Django admin `runserver` command now optionally supports SSL. The
server key and certificate files can be specified independently or as a
concatenated certfile. The admin command documentation and test cases
have been updated accordingly.

Some changes were necessary in the django.core.servers.basehttp module.
Specifically SecureWSGIServer and SecureWSGIRequestHandler were added as
SSL-enabled versions of their similarly named parent classes. The run
function needed to be abstracted slightly to support variable server and
handler classes originating in the `runserver` command itself. Rather
than adding additional parameters for the certfile and keyfile
arguments, the explicit ipv6 parameter was removed in favor of a kwargs
dict to make the run function more generic.

The SecureWSGIServer class deliberately uses an ssl_version of
ssl.PROTOCOL_SSLv23. With the socket thusly wrapped, a more permissive
set of SSL/TLS versions are accepted by the development server. This
flagrantly disregards the security recommendations made in response to
the discovery of the POODLE vulnerability. However, the development
server is not intended for production use, so this not of serious
concern.

Furthermore, the ssl package is imported within the `__init__` method of
the SecureWSGIServer so as not to contribute to the overhead of
importing the basehttp module elsewhere.
",sjberry,None,2015-05-09T13:29:32Z,2015-05-19T13:43:19Z
4632,Fix order of super arguments in SimpleTestCase doc,"See the [super docs](https://docs.python.org/2/library/functions.html#super).
",Ian-Foote,None,2015-05-09T11:09:19Z,2018-08-26T22:15:12Z
4631,Fixed #24156 - Fixed inner related name of ManyToManyField,"Fixes situation when parent abstract model declares related_name='+',
so child models will have invalid queryset.

https://code.djangoproject.com/ticket/24156#comment:4
",coldmind,None,2015-05-09T11:05:12Z,2015-05-12T23:16:09Z
4630,Fixed #24773 -- Provide a json() method on a test response.,,andymckay,None,2015-05-09T05:41:50Z,2015-05-25T15:43:12Z
4629,Minor edits to docs/topics/http/urls.txt ,"Assumption Error line 313- 315
In the example /credit/reports/ django will actually throw an exception, because 
  url(r'^reports/(?P<id>[0-9]+)/$', credit_views.report)
will only match if there is an named group <id> that follows reports (i.e., ‘reports/123/‘)

The least confusing way to allow both 'credit/reports/' and
'credit/reports/123/' to match is to add another line to the extra_patterns list:
  url(r'^reports/$’, credit_views.report),
see this new line included as line 304 
- i actually like prefixing/suffixing better, but that concept is the very next example.
",garwoodpr,None,2015-05-09T02:49:38Z,2015-05-15T22:05:32Z
4628,"Fixed #24769 -- Added integer casting of ""verbosity"" option with optparse parser.","The optparse parser is being used if `BaseCommand.options_list` is being
used, which might be the case for apps like django-pdb or django-ipdb.

This regressed in 85686386 (#19973).

It would be nice to have some test for this.
I've looked at https://github.com/django/django/pull/4449, which attempted to fix this in another way, but the tests do not really apply here, do they?

Initial report for Django: https://code.djangoproject.com/ticket/24769
",blueyed,None,2015-05-08T20:51:38Z,2015-06-14T01:29:04Z
4627,Fixed #24444 -- Updated contrib.admin visual theme to use django-flat-theme,"Hi there,

Discussion in [Django Developers Group](https://groups.google.com/forum/#!topic/django-developers/HJAikaEBqJ4).

My [django-flat-theme](https://github.com/elky/django-flat-theme) app seems to be pretty popular according to github and pypi stats (even djangoproject.com [uses](https://github.com/django/djangoproject.com/pull/427) it), so I decided that it's time to try to make it part of Django. 

Few notes:
- New theme contains CSS changes only. All changes are about colors, margins, sizes. No any markup changes.
- To test how it's look like please use [demo app](https://github.com/elky/django-flat-theme), it's pretty easy to install.
- I'm working on [icon font feature](https://groups.google.com/forum/#!searchin/django-developers/icons/django-developers/BvZkqCaVVQs/OT2OUZYzbIgJ) to replace graphic icons. This feature will touch markup and it seems too big for this PR. So I'm going to make another PR later.

![df93dade-ceaf-11e4-9b88-aacf33b4eb3c](https://cloud.githubusercontent.com/assets/209663/7543652/a2881b1c-f5df-11e4-87f1-f41eb96ec705.png)

Feedback and contribution are welcome.
",elky,None,2015-05-08T19:20:02Z,2015-09-16T17:50:18Z
4626,Fixed #24771 -- Simplified ModelForm._post_clean(),"https://code.djangoproject.com/ticket/24771
",pzrq,None,2015-05-08T14:12:19Z,2015-05-08T16:21:16Z
4625,Replaced multiple startswith with single accepting tuple,,piotrjakimiak,None,2015-05-08T07:37:18Z,2015-05-08T12:47:29Z
4624,Fixed #24763 -- Moved DoesNotExist exception to model docs.,"Attempting to address ticket: https://code.djangoproject.com/ticket/24763

Previously, the documentation had references to exception
django.core.exceptions.DoesNotExist.  This exception is
actually created in django.db.models.ModelBase.

This change updates references in the docs to
django.core.exceptions.DoesNotExist to instead point at
 django.db.models.Model.DoesNotExist.  Additionally,
the ModelDoesNotExist details were moved out of the
django.core.exceptions section because that's not where
they live.
",davidkrisch,None,2015-05-08T01:49:40Z,2015-05-08T17:06:55Z
4623,Add missing self in Query Expression example,,Ian-Foote,None,2015-05-07T22:15:13Z,2015-05-08T00:19:51Z
4622,Used LogEntry methods to check LogEntry action_flag in __str__,,piotrjakimiak,None,2015-05-07T20:59:09Z,2015-05-08T01:03:28Z
4621,Fixed logging regression introduced in bbe28496d32f76ca161f5c33787d6ad62267fcc6,,timgraham,None,2015-05-07T16:12:44Z,2015-05-08T00:13:15Z
4620,Typo in 1.8 release notes,"""is not be performed"" -> ""is not performed""
",exonian,None,2015-05-07T10:33:50Z,2015-05-07T12:53:53Z
4619,Changes to docs/ref/settings.txt ,"Series of grammatical changes to docs/ref/settings.txt for your review and consideration.
",garwoodpr,None,2015-05-07T03:44:21Z,2015-05-21T23:21:14Z
4618,[docs] small fix in examples for geoqueryset's ``relate`` lookup,,slafs,None,2015-05-06T13:52:04Z,2015-05-06T13:59:31Z
4617,Fixed #24207 -- Added 25D-type geometry field support to ogrinspect,"Thanks Michael Diener for the report and sample data.
",claudep,None,2015-05-06T10:01:21Z,2015-05-06T18:33:13Z
4616,Made some tests run on non-GIS databases,,claudep,None,2015-05-05T18:11:38Z,2015-05-05T18:28:49Z
4615,[1.7.x] Refs #21357 -- Added a working session example to the docs.,"Feel free to adjust the text or the example.
",sbaechler,None,2015-05-05T14:01:38Z,2015-05-05T16:38:55Z
4614,Removed uneeded sitemaps/models.py file.,,timgraham,None,2015-05-05T12:53:47Z,2015-05-05T13:12:35Z
4613,Ticket-24753: Add test which demonstrates issue,#NAME?,mdentremont,None,2015-05-05T12:12:01Z,2015-05-06T13:35:45Z
4612,Fixed #24748 -- incorrect GROUP BY on MySQL in some queries,"When the query's model had a self-referential foreign key, the 1.8
compiler.get_group_by() code incorrectly used the self-referential
foreign key's column (for example parent_id) as GROUP BY clause
when it should have used the model's primary key column (id).
",akaariai,None,2015-05-05T11:36:51Z,2015-05-11T15:35:46Z
4611,Fixed #24752 -- query crash when reusing Case expressions,"Case expressions weren't copied deep enough (self.cases list was
reused resulting in an error).

This one should be ready for merge if tests pass.
",akaariai,None,2015-05-05T10:58:57Z,2015-05-05T15:40:54Z
4610,Backport Ticket #21357 -- Fixed test client session initialization to Django 1.7,"The test client will now create a session when it is first accessed
if no session already exists. This is the behavior as documented in the 1.7 Docs.
https://docs.djangoproject.com/en/1.7/topics/testing/tools/#persistent-state
",sbaechler,None,2015-05-05T09:01:11Z,2015-05-05T13:16:20Z
4609,Allowed ModelSignal to be deferred until after commit,"For discussion, see https://groups.google.com/forum/#!topic/django-developers/qWTL40W4Erw.
",adamsc64,None,2015-05-05T03:23:53Z,2015-05-05T03:24:48Z
4608,Fixed #24736 -- Documented the Sitemap.limit attribute,"Document the limit attribute in Sitemap class which can be overridden to lower the number of urls being included per page.
",abhaga,None,2015-05-04T17:50:50Z,2015-05-05T13:19:16Z
4607,Fixed #24685 -- Fixed check for template name unicity.,"Thanks Preston Timmons for the report.
",aaugustin,None,2015-05-03T19:44:17Z,2015-05-04T05:39:25Z
4606,Avoid server failure on absence of _sqlite3.,"The nice behaviour for import was dropped during reorganizing
of db classes in commit 28308078f397d1de36fd0da417ac7da2544ba12d.
This reverts the original behaviour.

This could happen for example if running on a server with hardened security where python was compiled without sqlite3 libs/headers.
",midlis,None,2015-05-03T17:45:42Z,2015-05-04T17:00:31Z
4605,accept callable storage function,"To dynamically determin and set the storage class in FileField,
that possible inside the callable function, so we can safely access the settings without influencing
the migrations.
",omidraha,None,2015-05-03T16:32:35Z,2015-05-05T23:45:51Z
4604,accept callable storage,"To dynamically determin and set the storage class in `FileField`,
that possible inside the callable function, so  we can safely access the settings without influencing
the migrations.
",omidraha,None,2015-05-03T15:44:19Z,2015-05-03T15:54:13Z
4603,Fixed #24105: Pass the path returned by upload_to through the get_valid_name of storage,,abhaga,None,2015-05-03T04:30:27Z,2015-05-13T00:15:14Z
4602,Added my bio.,,prestontimmons,None,2015-05-02T21:03:11Z,2015-05-02T21:28:39Z
4601,Refactor adaptation and conversion of aware datetimes,"The main goal of this branch is to allow using databases where datetimes aren't stored in UTC when time zone support is enabled, as explained in [ticket 23820](https://code.djangoproject.com/ticket/23820).

This required dropping the global adapters and converters that were hardcoded to use UTC on databases that don't support timezones. The first four commits take care of this.

The last three commits implement related cleanups.
",aaugustin,None,2015-05-02T20:41:16Z,2015-05-17T08:24:13Z
4600,Fix pep8 on AbstractUser maximum length and better visual indent,"Remove `invalid` code from username validator `RegexValidation` as its defaults to `invalid` https://docs.djangoproject.com/en/1.4/ref/validators/#django.core.validators.RegexValidator.code
",ikonitas,None,2015-05-02T17:59:59Z,2015-05-05T17:00:23Z
4599,Fix typo in translation import statement,,jpadilla,None,2015-05-02T12:24:22Z,2015-05-02T18:19:27Z
4598,Simplify timezone.is_aware/naive,"While working on something else, I noticed that I could simplify the code in places where Django manipulates UTC offsets, hence this drive-by PR.

If the tests pass, and perhaps if someone :+1: it, it should be good to go.
",aaugustin,None,2015-05-02T12:14:22Z,2015-05-02T19:11:54Z
4597,Fixed #24737 -- Removed unnecesary kwargs in UserManager._create_user(),,delgiudices,None,2015-05-02T09:27:44Z,2015-05-03T01:08:23Z
4596,Fixed #24736 - Replaced magic Sitemap max items,"This is a small change which turns the 50000 Sitemap max item
limit into a customizable value in the default global settings.
",Miserlou,None,2015-05-02T01:09:27Z,2015-05-02T07:13:08Z
4595,Fixed #24734 -- Added CBGV advanced docs,,akulakov,None,2015-05-01T19:51:15Z,2015-05-30T19:28:09Z
4594,Moved migration exception classes to shared module,"This PR aims to provide a base cleanup before introducing more helpful exceptions in migrations when something fails.
",MarkusH,None,2015-05-01T18:52:15Z,2015-05-02T11:09:35Z
4593,Fixed #21803 -- Added support for post-commit hooks,"This PR is an attempt to introduce django-transaction-hooks into Django.

Ticket: https://code.djangoproject.com/ticket/21803
Recent discussion: https://groups.google.com/forum/#!topic/django-developers/qWTL40W4Erw

Todo:
- [X] Port existing test suite into Django's test suite
- [X] Morph `TransactionHooksDatabaseWrapperMixin` into Django's `BaseDatabaseWrapper`
- [x] Fix the issue described in https://github.com/carljm/django-transaction-hooks/issues/10
- [x] Port/adapt docs
",pelme,None,2015-05-01T18:13:25Z,2015-06-30T18:51:47Z
4592,Fixed #24676 -- Fixed help text positioning in ``contrib.admin`` filter_* widgets.,"https://code.djangoproject.com/ticket/24676
",timgraham,None,2015-05-01T13:33:20Z,2015-05-01T19:36:50Z
4591,Fixed #24713 -- Redirect loop detection in test client is incorrect,"Raising RedirectCycleError only when already on the same view more than twice.
If the count should be other than 2 please let me know.
",MounirMesselmeni,None,2015-05-01T12:09:36Z,2015-05-13T15:29:50Z
4590,Fixed #24733 -- Passed the triggering exception to 40x error handlers,,claudep,None,2015-05-01T11:42:07Z,2015-05-11T20:04:01Z
4589,"Updated capitalization in the word ""JavaScript"" for consistency","A simple documentation update, amending the word ""JavaScript"" in places where it has a lower case ""J"" or ""S"".
",dhodder,None,2015-04-30T19:45:48Z,2015-05-01T17:28:22Z
4588,"Fixed #24857 -- Added ""python -m django"" entry point.","The entry point `django` would be a more obvious name than `django-admin`, and `python -m django` is a pretty obvious way to run the primary django command (`django-admin`). Add those methods of use as valid points of entry.

Note that I'm using ""obvious"" in my above description to mean that it's likely guessable by a newcomer to Django, not that it should have been so obvious that I'm complaining that it's not already added.
",ryanhiebert,None,2015-04-30T16:13:49Z,2015-09-08T01:12:58Z
4587,Fixed model_regress test failure on non-ASCII path; refs #24717.,,timgraham,None,2015-04-30T11:12:39Z,2015-04-30T12:30:40Z
4586,Only insert cache item into the database when there is no item already i...,"I made a change to the cache db backend to only do an insert when it's needed.

When there is already an result and its not expired the insert is going to fail so it could be skipped.

Or am I missing something?
",bobkarreman,None,2015-04-30T08:47:30Z,2015-05-11T15:26:41Z
4585,Fixed #24706 - Made ModelForm's _post_clean handle ValidationError exceptions,"[Ticket link](https://code.djangoproject.com/ticket/24706) for reference.
",kezabelle,None,2015-04-30T08:24:43Z,2015-09-07T18:39:23Z
4584,Fixed #24725 -- Allowed renaming of target models in ManyToMany relations,"This is a regression caused by introducing rendered migration states in
1aa3e09c2043 and the _meta refactoring in fb48eb05816b.

https://code.djangoproject.com/ticket/24725
",MarkusH,None,2015-04-29T23:45:33Z,2015-04-30T11:40:29Z
4583,Add WKT geometry types,"CURVEPOLYGON and CIRCULARSTRING are commonly supported geometry types that are missing from this expression. This causes the Geometry constructor to fail when trying to read them from a database.
",rbrtmrtn,None,2015-04-29T21:24:43Z,2015-04-30T15:14:33Z
4582,Fixed #24729 - Don't flush test db when keeping it.,,coady,None,2015-04-29T21:20:12Z,2015-04-30T13:52:27Z
4581,Fixed #10941 -- Added querystring helper methods to Page class,"Brings the old patch attached to https://code.djangoproject.com/ticket/10941 to current master. The idea is the same, the implementation slightly changed, tests added and documentation updated.
",fdemmer,None,2015-04-29T21:18:02Z,2015-07-25T12:20:21Z
4580,Mention `translation.override()` context manager in docs,"The only example on using translations outside of views and templates
uses the clumsy try/finally and doesn't mention the convenient
`override` context manager.

I think this is pretty trivial thus no ticket. If it needs one, please let me know.
",dmedvinsky,None,2015-04-29T17:46:06Z,2015-04-30T01:23:13Z
4579,Fixed #24727 -- Prevented ClearableFileInput from masking exceptions on Python 2,"Please see the following Trac ticket:

https://code.djangoproject.com/ticket/24727#ticket
",bluezio,None,2015-04-29T16:00:47Z,2015-05-04T13:44:46Z
4578,Fixed #24724 -- Fixed GIS initialization crash on Windows.,,timgraham,None,2015-04-29T13:01:35Z,2015-05-01T20:19:08Z
4577,Fixed #22463 -- Added code style guide and JavaScript linting (EditorConfig and ESLint),"Add JSHint and EditorConfig files as recommended in draft [DEP 3](https://github.com/django/deps/blob/master/draft/0003-javascript-tests.rst).

This pull request is related to #4573 which adds JavaScript unit tests.  This pull request was split out of #4573 by request of @timgraham.
",treyhunner,None,2015-04-29T04:54:06Z,2015-06-27T22:35:33Z
4576,Fixed #24717 -- Fixed test failures for RHEL6 SCL,"The test test_unpickling_when_appregistrynotready in the package
model_regress.test_pickle fails on RHEL6 systems running python 2.7
from a RedHat Software Collection (SCL) because this test runs an
external python script with a stripped system environment. RedHat SCLs
work by setting a number of system environment variables when these are
stripped out by this test the python 2.7 interpreter is no longer able
to function properly because it can not find the system libraries needed
from the SCL. The solution I propose is to use mock to modify the system
environment directly instead of passing a stripped environment. I tested
this commit using using python 3.4.3 on Windows 7, and python 2.7 on
Windows 7, Debian 7.8, and RHEL6 with SCLs enabled.

Note that on Unix/Linux systems the code as it was before could also
break on local installs of python to a home directory or /usr/local for
example since it was not passing variables such as LD_LIBRARY_PATH to
the python script it executes.
",timgraham,None,2015-04-28T22:59:18Z,2015-04-29T16:33:44Z
4575,Fixing import typo in translation documentation,"Changing ugettext_lazy import to ungettext_lazy
",MounirMesselmeni,None,2015-04-28T16:31:21Z,2015-04-28T16:54:19Z
4574,Fixed #24720 -- Moved append slash checking in CommonMiddleware to process_response(),"Addresses issue #24720 - using middleware.common to append slashes causes extra overhead to all requests that do not end in a slash

https://code.djangoproject.com/ticket/24720

To avoid resolving the url twice for all urls that do not end in a
slash - only check if we should add the slash if we receive a 404
response in _process_response_ (if we are prepending www  it still does
the check in _process_request_ to avoid multiple redirects)

Avoiding this double url resolution speeds up the affected requests by about 5%

This pull request exposes a bug(?!?) in the TestClient (see
_test_client_regress.tests.ContextTests.test_nested_requests_).  It
appears that returning a redirect from process_response behaves
differently than returning a redirect from process_request that leads
to extra context being added to the response.context when making 
nested calls.  Possibly related to the _template_rendered_ signal (or not).
",electricjay,None,2015-04-28T05:56:22Z,2015-07-31T16:05:22Z
4573,Implemented DEP 0003: Add JavaScript unit tests,"As detailed in [DEP 3](https://github.com/django/deps/blob/master/draft/0003-javascript-tests.rst).  Uses QUnit with Blanket for code coverage and requires Node _only when running from the command-line_.  All tests run in the browser wiithout any external dependencies.
## Browser Usage

Without measuring code coverage:
- Open `./js_tests/tests.html` in your web browser and read the results

With measured code coverage:
1. Execute `python -m SimpleHTTPServer`
2. Open `http://localhost:8000/js_tests/tests.html?coverage` in your web browser and read the results

Note that Node.js **is NOT required** to run the JavaScript tests in a web browser.
## Command-line Usage
1. Install Node.js
2. Run `npm install` to install all local Node dependencies
3. Run `npm test` to run the tests and read the results

Note that Grunt **does NOT need to be installed** globally.

The minimum code coverage threshold can be set with the `globalThreshold` variable in `Gruntfile.js`.
",treyhunner,None,2015-04-27T23:25:44Z,2015-07-01T09:18:27Z
4572,Fixed #24719 - Related lookup type check handles iterators.,,coady,None,2015-04-27T22:31:10Z,2015-04-28T14:51:49Z
4571,Fixed #24708 -- Handled non-string values in GenericIPAddressField.to_python(),"Handled a case of GenericIPAddressField raising an exception if non
strings are passed in.
",Pradeek,None,2015-04-27T16:25:17Z,2015-05-06T11:04:52Z
4570,Fixed #24714 -- Tidied up usage of assertEqual in tests,#NAME?,alasdairnicol,None,2015-04-27T13:51:03Z,2015-04-28T13:36:53Z
4569,Use assertIsInstance in tests,"Follows similar tidy up in 09f8652765
",alasdairnicol,None,2015-04-27T09:56:45Z,2015-04-27T12:44:27Z
4568,2 regression tests provided for bug #23643,"These are regression tests for https://code.djangoproject.com/ticket/23643
raw fix provided in https://github.com/django/django/pull/4530, but still I have not investigated if there are further implications (i.e: if that patch really solves the issue).

I hope tests will help
",feroda,None,2015-04-27T06:43:19Z,2015-05-19T13:37:33Z
4567,Fixed #24715 -- Renamed Oracle Sequence and Triggers when renaming table.,"When the migration renames an Oracle table, it does not currently rename the sequences and triggers.  This renames them also if there is an auto_field.
",johnrtipton,None,2015-04-27T01:56:17Z,2015-12-30T10:34:31Z
4566,Fixed #24693 -- Added label and label_lower property to Options,"Ticket : https://code.djangoproject.com/ticket/24693
",delgiudices,None,2015-04-26T21:14:12Z,2015-05-02T14:59:11Z
4565,Fixed #13008 -- Changed never_cache to effect actually never caching.,"https://code.djangoproject.com/ticket/13008
",mbertheau,None,2015-04-26T17:20:03Z,2015-04-28T21:52:57Z
4564,Fix #24707 url resolution: better error for uncallable view passed via import,,hjwp,None,2015-04-26T13:23:06Z,2015-04-26T17:21:53Z
4563,Fix #24707 - url resolution: uncallable views passed via import raise a better error,"Wasn't sure to make the PR against master or 1.8.x, but it applies cleanly and merges on both...
",hjwp,None,2015-04-26T13:06:01Z,2015-04-26T13:23:52Z
4562,Fixed #24716 -- Deprecated Field._get_val_from_obj(),"The method duplicates the functionality of `Field.value_from_object`
and has the additional downside of being a privately named public
API method.

All usage of the method in django.\* libraries have been replaced
with a call to getattr, to reduce the overhead of an additional,
unecessary function call.

No unittests are added, since this is just the removal of a single method, 
which was already amply tested by the serialization tests.
",ovangle,None,2015-04-26T06:36:10Z,2015-05-22T17:39:07Z
4561,Fixed #24703 -- Changed squashmigrations to use a MigrationLoader.,"Changed squashmigrations to not instantiate a MigrationExecutor,
but to directly use a MigrationLoader instance instead.

https://code.djangoproject.com/ticket/24703
",knbk,None,2015-04-25T14:22:05Z,2015-04-25T15:43:31Z
4560,Fixed a typo and formatting consistency in testing tools docs,"I changed ""appears"" to ""appear"" and emphasized the word ""not"" to match
the rest of the document.
",adamzap,None,2015-04-25T01:58:02Z,2015-04-25T10:24:09Z
4559,"Fixed #23387 -- Keep ""Save as new"" button after validation errors","This PR addresses @timgraham's comments on #4265.
",adamzap,None,2015-04-25T01:44:11Z,2015-05-02T23:49:40Z
4558,Fixed #24701 -- Converted model manager names to unicode in migrations,"Ticket: https://code.djangoproject.com/ticket/24701
",MarkusH,None,2015-04-25T01:09:39Z,2015-04-25T16:21:20Z
4557,Add missing comma in LocMemCache example,"For consistency with the other examples.
",nikolas,None,2015-04-24T20:09:12Z,2015-04-25T00:29:36Z
4556,"Fixed #24119, #24120 -- Formalized debug integration for template backends",,prestontimmons,None,2015-04-24T19:55:44Z,2015-05-06T22:49:22Z
4555,Added lazyness to contrib.gis imports,,claudep,None,2015-04-24T17:23:38Z,2015-05-01T12:20:44Z
4554,Fixed #24700 -- Regex tidy up in http docs,"My first PR to Django!
",marcuspen,None,2015-04-24T16:06:51Z,2015-04-24T17:10:54Z
4553,Dep 191: Composite fields,"An early cut of the implementation of [DEP 191](https://github.com/django/deps/blob/master/draft/0191-composite-fields.rst) for composite fields. DEP192 will be implemented separately, although some partial implementation of various hooks which will be required for the implementation of standalone composite fields is included, appropriately commented.

Please feel free to review even though implementation is incomplete, it is complete enough for your comments to be valuable (otherwise I wouldn't have submitted the PR). This is a rather large change which will require community consensus.

Done
- Observables and some standard observable collection implementations
- Serialization/deserialization of composite fields
- Implementation of `django.db.models.constrain` factory method
- Custom lookup and transform implementation
- Refactoring of sql compiler to support `values` and expressions spanning multiple columns in a row of a result set

Still to do:
- Serialization
- Apply composite field constraints and indexes to the database table
- Migrations
- Update proposal
",ovangle,None,2015-04-24T15:52:30Z,2015-04-27T08:39:13Z
4552,Updated standard MIDDLEWARE_CLASSES in docs.,"The documentation for the default value of `MIDDLEWARE_CLASSES` set by `django-admin startproject` was out of date.  Updated it to match what is in `django/conf/project_template/project_name/settings.py`.
",living180,None,2015-04-24T13:03:09Z,2015-04-24T13:40:27Z
4551,Fixed #24695 -- Tidied up a couple of regexes in the CBV docs,"Thanks datakid for the report
",alasdairnicol,None,2015-04-24T10:18:00Z,2015-04-24T13:24:36Z
4550,Fixed #24696 -- Made CSRF_COOKIE computation lazy if not set.,"Only compute the CSRF_COOKIE when it is actually used.  This is a
significant speedup for clients not using cookies.

Changes results of the “test_token_node_no_csrf_cookie” test:  It gets
a valid csrf token now which seems like the correct behavior.

This speeds up trivial views by about 40%
",electricjay,None,2015-04-24T06:38:33Z,2017-09-01T13:09:29Z
4549,Fixed #24257 -- Updated i18n's handling of messages with percent signs,"The in-depth explanation of these changes:
https://code.djangoproject.com/ticket/24257#comment:4
",beck,None,2015-04-24T05:14:59Z,2015-08-12T15:24:08Z
4548,Fixed #24649 -- Allowed using Avg aggregate on non-numeric field types.,"https://code.djangoproject.com/ticket/24649
",timgraham,None,2015-04-24T00:34:01Z,2015-04-25T17:20:53Z
4547,Fixed failures with older Spatialite versions,,claudep,None,2015-04-23T14:23:42Z,2015-04-23T16:54:46Z
4546,Fixed #24689 -- Fixed DetailView methods with deferred QuerySet,"When using DetailView with a deferred queryset get_template_names would construct template name from a proxied model. This pull request implements a check if an object is deferred uses `proxy_for_model` in case of deferred objects.
",artisavotins,None,2015-04-23T07:35:50Z,2015-04-25T23:50:12Z
4545,Support role based permission management,"Decouple User management and Permission management is terribly necessary for large enterprise. Role based permission management saves django admins from assign permissions for every employee, and let other staffs, such as team leaders to define roles and assign members to and move members between different roles. Django admins will only focus on permission management for roles.

This commit supplies an app that manage UserRole and a backend as AUTH_BACKEND.
",collinmsn,None,2015-04-23T04:23:35Z,2015-04-23T11:22:53Z
4544,Match admin URL reverse documentation,"The docs at https://docs.djangoproject.com/en/1.8/ref/contrib/admin/#admin-reverse-urls
states that admin URLs take the parameter ""object_id""
",graingert,None,2015-04-22T10:39:12Z,2015-04-24T14:41:27Z
4543,Create component.md,,wonderfan,None,2015-04-22T09:24:53Z,2015-04-22T09:26:01Z
4542,Fixed #24682 -- update generic editing view links,"Updated links for CreateView and UpdateView in _Class-based generic views flattened index_ to point to `ModelFormMixin` instead of `FormMixin`.
",speg,None,2015-04-21T13:51:29Z,2015-04-21T14:27:51Z
4541,Fixed #24681 -- Removed Unicode bug in BrokenLinkEmailMiddleware.,,Code0x58,None,2015-04-21T12:55:19Z,2015-04-21T20:10:19Z
4540,"Fixed #24665 - Model field relational attributes are None by default, not False","The values in the attributes for fields with relations were `True` or `False` for relational fields, but `None` by default for non-relational fields. Now, these values are always `False` by default for all fields (incl. non-relational). 
The documentation now says, that all fields (incl. non-relational) will have values in the relational attributes set to `False`, instead of saying, that the values will be meaningful only for relational fields.
",janpriessnitz,None,2015-04-21T09:30:38Z,2015-04-29T16:57:33Z
4539,Fixed #24613 -- Added example to `defer` documentation,,Naddiseo,None,2015-04-21T02:15:59Z,2015-04-22T23:19:51Z
4538,Fixed #24675 --Implemented an option to avoid unnecessary queries to MySQL since MySQL 5.6,"https://code.djangoproject.com/ticket/24675#ticket

Since MySQL 5.6 setting MYSQL_AUTO_IS_NULL is unnecessary. Implementing this eliminates one query in every connection resulting in better performance.

http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html#sysvar_sql_auto_is_null

System Variable Name    sql_auto_is_null
Variable Scope  Global, Session
Dynamic Variable    Yes
Permitted Values    Type    boolean
Default 0
",ssjunior,None,2015-04-20T19:39:20Z,2016-06-16T16:43:38Z
4537,Fixed oneword misstype in intro.txt,"Just a oneword misstype in [class-based-views/intro#Decorating class-based views](https://docs.djangoproject.com/en/dev/topics/class-based-views/intro/#decorating-class-based-views) documentation.
",manevant,None,2015-04-20T18:04:20Z,2015-04-20T18:12:19Z
4536,Fixed #24667 --- Repaired cardinality test,"One of the tests in model_fields was broken due to the use of
generators. List comprehension was used to make this particular
test working.
",yoongkang,None,2015-04-20T12:41:40Z,2015-04-20T15:14:27Z
4535,get_all_related_objects backwards compatible replacement: doc amendment,"The example backwards compatible replacement for `Model._meta.get_all_related_objects` doesn't include a check for OneToOneFields so isn't fully 100% backwards compatible. This PR includes that check (would also be appropriate for the stable/1.8.x branch).

To illustrate:

```
class A(models.Model):
    pass
class B(models.Model):
    a = models.ForeignKey('A')
class C(models.Model):
    a = models.OneToOneField('A')

A._meta.get_all_related_objects()
[<ManyToOneRel: core.b>, <OneToOneRel: core.c>]

[f for f in A._meta.get_fields() if f.one_to_many and f.auto_created]
[<ManyToOneRel: core.b>]

 [f for f in A._meta.get_fields() if (f.one_to_many or f.one_to_one) and f.auto_created]
[<ManyToOneRel: core.b>, <OneToOneRel: core.c>]
```
",nealtodd,None,2015-04-20T12:22:21Z,2015-04-20T14:00:19Z
4534,Refactor PasswordResetTokenGenerator to be a bit more extensible,"This makes the `key_salt` an instance level property so a subclass can easily redefine, and splits out the logic to generating the `value` piece of the HMAC.

The reasoning for this is so that a subclass can override the `_make_hash_value` without having to copy/paste all of the logic from within `_make_token_with_timestamp`.

I'd also be open to making these methods `public` and removing the prefixed underscore to allow documenting better for public consumption.

Also, worth noting that I think this is more valuable now with the ability to define custom `User` objects entirely. This allows anyone to say which fields on their `User` are significant when it comes to generating this hash.
",mattrobenolt,None,2015-04-20T01:52:17Z,2015-04-20T18:29:06Z
4533,[1.8.x] Refs #24591 -- Optimized cloning of ModelState objects.,"Changed ModelState.clone() to create a deepcopy of self.fields.

https://code.djangoproject.com/ticket/24591
",knbk,None,2015-04-19T21:59:47Z,2015-04-20T23:23:59Z
4532,Fixed #23271 -- unicode exception on makemessages,"In makemassages, not using universal_newlines in Popen call.
Popen(universal_newlines=True) encodes the gettext output
using DEFAULT_LOCALE_ENCODING, which may through
Unicode exception.

This also solves a test failure in some configurations
(i18n.test_extraction.BasicExtractorTests)
",daphshez,None,2015-04-19T19:12:28Z,2015-11-18T11:59:14Z
4531,Fixed #11078 -- documentation update.,"Updated documentation of Proxy models to match actual meta attributes behaviour.

See [ticket #11078](https://code.djangoproject.com/ticket/11078)
",marco-santamaria,None,2015-04-19T15:22:09Z,2015-04-19T15:29:44Z
4530,Refs #23643-- Fixed exception.__traceback__ AttributeError in debug view for py2,"This is just a raw fix I have not investigated how it can be possibile that python2 has 2 exceptions in that point of execution. 

If the exceptions behaviour is wrong then the fix could do, else we have to manage multiple exceptions other than **traceback** attribute retrieval. 

I don't know enough python now, but I have preferred to give a raw patch because of the ""release critical"" severity.
",feroda,None,2015-04-19T13:39:10Z,2015-05-29T13:34:40Z
4529,Fixed #24654 -- Based ordering circular references detection on columns. ,"Thanks to Elmar Bucher for the report Tim for the help reproducing.
",charettes,None,2015-04-19T06:10:47Z,2015-04-20T19:51:02Z
4528,Encapsulate SECRET_KEY generation logic,"Move the logic of generating the SECRET_KEY value to django/core/management/utils.py so it can be reused by projects doing their own custom project initialization. This avoids copy/pasting the SECRET KEY logic and allows for backwards compatibility if the logic is ever updated.

The code is inside the startproject's command handle method (/django/core/management/commands/startproject.py) and is not used or imported anywhere else.

Example project benefiting from this change: https://github.com/mayan-edms/mayan-edms/blob/master/mayan/apps/main/management/commands/initialsetup.py
",ghost,None,2015-04-18T08:25:59Z,2016-02-11T13:08:33Z
4527,Add link to the code of conduct from contributing guides.,"This is inspired by Angluar.js
(https://github.com/angular/angular/blob/master/CONTRIBUTING.md), among others.
Thanks to Jeff Triplett for the prod.
",jacobian,None,2015-04-17T16:15:50Z,2015-04-17T23:42:47Z
4526,Fixed #24660 -- Reduced interdependencies between gCBV methods,"Generic class based views method interdependencies are reduced
by changing get_context_data() and get_template_names() to make
them not depend on object and object_list attributes.
",akulakov,None,2015-04-17T15:56:09Z,2015-05-30T19:06:46Z
4525,Remove cases of six.iter* wrapped in a list(),"There's absolutely no advantage [and a mild performance hit] to using six.iter*
in these cases.  The list immediately consumes the iterator.
",funkybob,None,2015-04-17T14:41:33Z,2015-04-19T06:41:32Z
4524,Fixed #24657 - Fixed incorrect context in include tag example,"Before the example, the expected output is: `""Hello, John""`, but
the value of the `person` variable in the context is `john` (lowercase)
",patpatpatpatpat,None,2015-04-17T07:45:27Z,2015-04-17T11:55:58Z
4523,Fixed #24655 -- RelatedFieldWidgetWrapper admin widget JS static url,"RelatedFieldWidgetWrapper now uses a call to static to resolve 'admin/js/related-widget-wrapper.js'
",ewhitmire,None,2015-04-17T00:14:09Z,2015-04-17T15:25:08Z
4522,#24652 -- SimpleTestCase should prevent execution of database queries,"- [x] Mention in the release notes.
- [x] Come up with a decent assertion message.
",charettes,None,2015-04-16T19:46:51Z,2015-07-10T02:50:53Z
4521,Fixed #24159 -- compilemessages runs across apps.,"This updates the command to match the documentation, which states it runs over all .po files.
https://code.djangoproject.com/ticket/24159
",dracos,None,2015-04-16T12:01:27Z,2015-06-05T01:03:28Z
4520,Fixed #21652 -- Added notification when processing objects in loaddata,"Added a running count of the objects processed by loaddata when
verbosity >= 3.
",timgraham,None,2015-04-16T12:00:38Z,2015-04-16T13:44:27Z
4519,Fixed #24605 -- incorrect reference to alias in subquery,"Thanks to charettes and priidukull for investigating the issue, and to
kurevin for the report.
",akaariai,None,2015-04-16T05:44:58Z,2015-04-16T13:24:23Z
4518,Fixed #16501 -- Added a unicode parameter to models.SlugField and forms....,"This is a rebase and update of pull request #3729 

Added unicode support to URLify and prepopulate scripts.
Matched unicode regex with current one.

Fixed an indentation error

Renamed unicode parameter to allow_unicode
",kutenai,None,2015-04-15T20:45:11Z,2015-07-16T22:12:28Z
4517,Closed #11028 -- Regression test for admin search on m2m fields,"Searching with the admin across Many2Many Field raised a
Programming Error before cf70c96ce08bec8834ada695451cc915f7558dbd.
The added tests for regression.
",albertoconnor,None,2015-04-15T15:06:23Z,2015-04-15T16:58:59Z
4516,Fixed #24615 -- ordering by expression not part of SELECT,"Fixed queries where an expression was used in order_by() but the
expression wasn't in the query's select clause (for example the
expression could be masked by .values() call)

Thanks to Trac alias MattBlack85 for the report.
",akaariai,None,2015-04-15T05:52:19Z,2015-04-16T07:44:58Z
4515,Documentation enhancement - Added HTTP_ACCEPT to the HttpRequest example...,"... list
",adminq80,None,2015-04-14T22:50:11Z,2015-04-16T11:40:23Z
4514,Fixed #24636 -- Added validator to DecimalField to ensure that it respects max_digits/decimal_places.,"https://code.djangoproject.com/ticket/24636
",iuliachiriac,None,2015-04-14T22:25:54Z,2015-09-18T13:00:37Z
4513,Fixed #24593 - fixed number formatting of readonly IntegerFields in admin,,xblitz,None,2015-04-14T21:16:59Z,2015-04-14T21:50:41Z
4512,Fixed #24643 -- Added get_context_data() method to FormMixin,,akulakov,None,2015-04-14T21:10:04Z,2015-04-25T00:18:05Z
4511,Fixed #24349 -- Limited domain name labels to 63 characters in EmailValidator,"@timgraham Ref: [pull request](https://github.com/django/django/pull/4273)
",atmb4u,None,2015-04-14T18:59:21Z,2015-04-17T22:09:03Z
4510,Fixed #23727 -- Inhibited the post_migrate signals when using serialized...,"When using a TransactionTestCase-based class with serialized_rollback set to
True, after creating the database and running its migrations (along with
emitting the post_migration signal), the content of the database is serialized
to _test_serialized_contents.  Without this fix, after the first test case,
_fixture_teardown would flush the tables but then the post_migrate signal would be
emitted and new rows (with new PK's) would be created in the django_content_type
table.  Then, when starting the second or any subsequent test cases in a suite,
_fixture_setup attempts to deserialize the content of _test_serialized_contents,
but these rows are identical to the rows already in the database, except for
their PK's.  This causes an IntegrityError due to a uniqueness constraint in the
django_content_type table.
This change made it so that, in the above scenario, the post_migrate signal is
not emitted after flushing the tables, since it will be repopulated during
_fixture_setup.

The problem is simple to reproduce with the following app test code:

```
class TestIt(TransactionTestCase):
    serialized_rollback = True

   def test_one(self):
       self.assertTrue(True)

   def test_two(self):
       self.assertTrue(True)
```

however this proved to be very difficult to write a test case for in the
django unit tests framework because the framework requires that the test case
class's 'available_apps' attribute be non-None, but doing so would cause the
suppression of the post_migrate signal to be emitted anyway.
",tbeadle,None,2015-04-14T18:53:06Z,2015-08-21T13:46:17Z
4509,Fixed #23984 - Added Javascript i18n documentation,"This fleshes out the documentation around all of the exported
Javascript functions available from the `javascript_catalog`
view.
",toastdriven,None,2015-04-14T16:26:51Z,2015-04-16T12:16:12Z
4508,Fixed #23727 - Change TEST_NON_SERIALIZED_APPS to include contenttypes.,"When using a TransactionTestCase-based class with serialized_rollback set to
True and without this fix, then starting the second or any subsequent test
cases in a suite would cause _fixture_setup to attempt to insert the rows in
the django_content_type table that already exist there, causing an
IntegrityError.  This was because the contenttypes app registers a
post_migrate signal to repopulate its table.  However,
TransactionTestCase._fixture_setup, would call deserialize_db_from_string,
which would attempt to re-add those same rows.  This change was added so that
deserialize_db_from_string would not attempt to re-add those rows.

This is simple to reproduce with the following app test code:
class TestIt(TransactionTestCase):
   serialized_rollback = True

   def test_one(self):
       self.assertTrue(True)

   def test_two(self):
       self.assertTrue(True)

However, this proved to be very difficult to write a test case for in the
django unit tests framework because the framework requires that the test case
class's 'available_apps' attribute be non-None, but doing so causes a different
code path to be executed (the post_migrate signal is not sent during the
database flush) and the bug is not exposed.
",tbeadle,None,2015-04-14T15:31:43Z,2015-04-14T16:11:37Z
4507,Fixed #24385 -- Added tests for distinct sum issue fixed in c7fd9b242d2d63406f1de6cc3204e35aaa025233,"Ticket reference: https://code.djangoproject.com/ticket/24385

Copied the test from the reporter's project. Validates this usage of Sum and distinct in the ORM.
Bisect shows that this was fixed in commit: c7fd9b242d2d63406f1de6cc3204e35aaa025233
",kutenai,None,2015-04-14T15:01:45Z,2015-04-14T22:58:33Z
4506,Fixed #24640 -- Added AbstractUser.get_display_name(),,atmb4u,None,2015-04-14T13:00:54Z,2015-04-14T22:50:36Z
4505,Correcting migrate help,"The help for migrate fake did not have a full stop after, which makes it quite difficult to read in the terminal.
",joedborg,None,2015-04-14T11:33:33Z,2015-04-14T12:10:49Z
4504,Fixed #16609 -- Fixed duplicate admin results when searching nested M2M relations,"Admin change lists contains duplicate results when searching/filtering with M2M traversals. This was fixed earlier in issue #16609 but only when the M2M relation was at the first level on the displayed object.
This commit fixes the issue even when the M2M is at deeper levels behind a foreign key.
",sampaccoud,None,2015-04-14T09:27:18Z,2015-05-06T13:57:15Z
4503,Update builtins.txt - formatting style,"Change true/false to the corresponding True/False Python notation and remove quotations marks around the last ""no"", which can be confusing, since they are not present on previous examples
",mlorant,None,2015-04-14T08:43:30Z,2015-04-14T11:06:26Z
4502,Fixed #24595 -- Prevented loss of null info in MySQL field alteration,"Changes are a bit more invasive that initially thought.
",claudep,None,2015-04-14T07:40:06Z,2015-04-17T09:03:10Z
4501,"Fixed #12199 -- Added the ability to use ""as"" with the {% firstof %} template tag.","Updated from https://github.com/django/django/pull/4490
",craigls,None,2015-04-14T02:34:12Z,2015-04-14T11:20:27Z
4500,Fixed #24277 -- Added exception when dict used in QuerySet filtering,,alexandrinaw,None,2015-04-13T23:09:36Z,2015-04-14T18:01:03Z
4499,Adding test case for issue 21144 fixed in commit c21e86ab9e3e5ebd6d245d0...,"Added unittests for issue 21144 which was resolved by commit c21e86ab9e3e5ebd6d245d038cb0cb352cd84c3a
",vaskalas,None,2015-04-13T22:22:32Z,2015-04-14T14:01:58Z
4498,Fixed #21652: Added notification when processing objects in loaddata,"Added an output to verbose==3 level to output a running count of the
objects processed per fixture.
",yitzc,None,2015-04-13T22:18:09Z,2015-04-16T12:00:51Z
4497,Fixed #24639 -- ValidationError respects SafeData.,"This is a fix for [ticket 24639](https://code.djangoproject.com/ticket/24639), provided that the state table in the ticket is actually what we desire.
",jambonrose,None,2015-04-13T22:12:57Z,2015-06-02T20:21:45Z
4496,Fixed #12952 -- Made admin history messages use model verbose name,"[Ticket: Models history doesn't use verbose names](https://code.djangoproject.com/ticket/12952)

This was a ticket which had a patch that needed improvement. The latest patch was attached 4years ago.

While there has been some effort to maintain consistency in the original author's code for the feature there was a test rewrite.
",agamdua,None,2015-04-13T21:53:56Z,2015-07-03T16:20:33Z
4495,Fixed #24638 -- Added support for SQL comments in queries,"[Ticket 24638](https://code.djangoproject.com/ticket/24638#ticket)
",adamchainz,None,2015-04-13T21:13:40Z,2020-04-14T15:51:23Z
4494,Fixed #24637 -- Fixed database introspection with SQLite 3.8.9.,"This fix is backward compatible with version before Sqlite 3.8.9.
",peterfarrell,None,2015-04-13T20:56:27Z,2015-04-14T17:06:33Z
4493,Update related.py,"Changed error message template to be unicode, so that if the interpolated variable ""self.field.remote_field.model._meta.object_name"" is unicode, the ValueError is properly raised, rather than throwing an error about trying to encode the error message itself.
",davidstockwell,None,2015-04-13T20:21:39Z,2015-04-14T11:35:29Z
4492,added tests for admin.utils.display_for_field with numbers,,xblitz,None,2015-04-13T18:58:53Z,2016-01-12T11:19:02Z
4491,Fixed #24635 -- Updated deprecated urls.py examples in default project template.,"Changes according to https://code.djangoproject.com/ticket/24635

I've modified the `startproject` URL patterns examples to reflect deprecations in Django 1.8.
",jambonrose,None,2015-04-13T16:40:11Z,2015-04-14T16:59:31Z
4490,"Fixed #12199 -- Added the ability to use ""as"" with the {% firstof %} template tag.",,craigls,None,2015-04-13T16:20:10Z,2015-04-14T02:09:30Z
4489,Refs #24625 -- Filtered docutils warnings output in tests,"Instead of setting `warning_stream` in the docutils config overrides
to `False` I opted for filtering the stderr in the tests to keep the
error output showing up in server logs.
",MarkusH,None,2015-04-13T15:28:15Z,2015-04-14T09:27:08Z
4488,Fixed #24603 - Allowed Context.update() to be used as a context manager.,"This changed Context.update() to act similarly to Context.push() when used as a
context manager.
",tbeadle,None,2015-04-13T15:01:01Z,2015-04-14T12:03:26Z
4487,Fix 24424: migration autodetector won't remove last field on models being deleted,"Previously the migration auto-detector would produce transition states with invalid tables (for some backends) when removing models with only relation fields. The `generate_deleted_models()` method would first generate a RemoveField operation for each relation field, and then generate a DeleteModel operation at the end. 

In the case where the model being removed only has relation fields, this produces a state where there are no fields on the model, or a table without any columns. This breaks on SQLite (and MySQL, from what I gather).

This patch uses a simple field counter to make sure the last field on a model is not removed before the DeleteModel operation.
",jwineinger,None,2015-04-13T12:42:47Z,2015-04-23T12:26:57Z
4486,bugfix: support defaults which are unhashable (e.g. JsonField default={}...,"bugfix: support defaults which are unhashable.
As an example now JsonField(default={}) causes an exception while executing the migration.
",ronkonigsberg,None,2015-04-13T12:03:40Z,2015-05-06T00:30:38Z
4485,docs: add missing word in wsgi deployment howto,"added the word ""one""
",afriza,None,2015-04-13T10:16:36Z,2015-04-14T01:08:03Z
4484,Updated template tests to create their own engine.,"This continues work to treat Django templates as a library.
",prestontimmons,None,2015-04-12T18:50:56Z,2015-04-20T14:55:35Z
4483,Update models.py,"PEP 257 - Improved docstring. 
",ghost,None,2015-04-12T11:21:19Z,2015-04-13T12:40:17Z
4482,[WIP] Fixed #24629 -- Allowed Func to be used as Transform,"This is an experiment to see how a backwards compatible translation layer could help with the disconnect between Func and Transform.

The basic idea is that Funcs can return themselves wrapped in a Transform that proxies methods back to the Func. I'm not in love with this idea, but I think it might have a place if we decide we'd like to not break the Transform API so soon after it has been released.
",jarshwah,None,2015-04-11T14:17:40Z,2015-08-03T09:50:24Z
4481,Fixed #24624 -- Replaced obsoleted rel.opts in admindocs view,"Thanks Scott Sanders for the report. Refs #24381.
",claudep,None,2015-04-11T09:11:03Z,2015-04-11T13:37:22Z
4480,Fixed #24621 -- Fixed and documented SessionBase.pop's second argument,"https://code.djangoproject.com/ticket/24621
",adamzap,None,2015-04-11T03:28:27Z,2016-04-20T08:18:58Z
4479,Fixed #24374 -- Called Template._render in IncludeNode,"Is it this simple?

I didn't replace the check for the `render` method on line 149.

This patch does not change my results from running the tests with sqlite.
",adamzap,None,2015-04-11T02:12:51Z,2015-04-11T02:44:45Z
4478,Fixed #24625 -- Prevented arbitrary file inclusion in admindocs,"Ticket: https://code.djangoproject.com/ticket/24625
",MarkusH,None,2015-04-10T18:30:23Z,2015-04-11T19:32:50Z
4477,Fixed #24607 -- Fixed handling of natural keys in models that use inheritance,"this PR concerns my bug report https://code.djangoproject.com/ticket/24607

@timgraham I have rebased it on master and added tests, as you asked in my previous PR https://github.com/django/django/pull/4473

In the last commit, I have also explained (and fixed) why it must be the case that use_natural_primary_keys => use_natural_foreign_keys.
",denys-duchier,None,2015-04-10T14:59:24Z,2015-08-04T23:00:28Z
4476,[REVIEW] Incorrect duplicate app message,"Fixed issue that was issuing duplicate app names where there were no dup...licates x.apps.core, is being reported as dupliacte but confirmed not
",rosscdh,None,2015-04-10T07:24:44Z,2015-04-16T11:20:36Z
4475,"False positive warning of fields.W342, while setting a ForeignKey to primary_key","Here is my Model:
class DiagAuthConfig(models.Model):
    client = models.ForeignKey(DiagClient, primary_key=True)

I got a warning of (fields.W342) Setting unique=True on a ForeignKey has the same effect as using a OneToOneField.

Since it's a primary key, it's unique of course. So I don't think I should got this warning.
",keelung,None,2015-04-10T01:50:03Z,2015-04-10T08:50:17Z
4474,Bug 24611: call field.get_db_prep_save() when updating remote field from...,"... model instance
",jwineinger,None,2015-04-09T18:50:24Z,2015-04-13T16:18:53Z
4473,first stab at properly handling natural keys combined with inheritance,"this PR concerns my bug report https://code.djangoproject.com/ticket/24607

it seems to work on my test example.
",denys-duchier,None,2015-04-09T18:00:36Z,2015-04-09T22:53:35Z
4472,Update index.txt,"Syntax error
",andredelorme,None,2015-04-09T15:27:32Z,2015-04-09T17:45:19Z
4471,Removed unused methods in GIS adapter.,"Added in 35f934f5a7d9eb79a69f33de84854aa9a506b912. Refactors seem to have obsoleted it.
",timgraham,None,2015-04-09T12:59:03Z,2015-05-01T13:59:16Z
4470,Fixed #24474 -- Make empty_value_diplay a property in admin,"Add param to ModelAdmin to set the empty value display:
ModelAdmin.empty_value_display.

Add property on ModelAdmin custom fields to set
empty_value_display for individual fields.

Add method to set empty value display on admin site level:
AdminSite.set_empty_value_display().
",gannetson,None,2015-04-09T06:44:42Z,2015-05-22T00:28:14Z
4469,Use mock.patch in migrations tests,"Currently some of the migrations tests rely on the fact 'input' is aliased
because of six, instead of using mock.patch.  Replace this code with proper
use of mock.patch.

Also, replace one case of excessively specific python version check with
testing six.PY3
",funkybob,None,2015-04-09T01:06:03Z,2015-04-09T09:04:31Z
4468,Fixed #24609 --  Made ConcatPair on MySQL use CONCAT_WS(),"https://code.djangoproject.com/ticket/24609
",adamchainz,None,2015-04-08T21:33:16Z,2015-04-09T14:17:52Z
4467,Fixed #24497 -- Added Widget.supports_microseconds attribute,,wdmgsm,None,2015-04-08T16:16:29Z,2015-05-06T11:20:38Z
4466,[documentation] improve a bit registration/login.html,"Hello,

In the example template here https://docs.djangoproject.com/en/1.8/topics/auth/default/#django.contrib.auth.views.login two extremely common patterns are missing:
- inform the user that he has been redirected to this page because he doesn't have the rights to see it
- link to password reset workflow

I can only see very few situations where those two features aren't wanted, thus, it seems a reasonable idea to include them in the reference example.

This pull request is split into two commits, this allow cherry-picking if only a part of it is accepted.

Kind regards,
",Psycojoker,None,2015-04-08T09:17:29Z,2015-05-22T00:47:12Z
4465,Fixes #24598 -- Allowed overriding default content type in responses,"Allows a HttpResponseBase sub-class to override the default content type without losing the auto-appended charset= value.
",funkybob,None,2015-04-08T01:49:25Z,2015-04-12T14:32:39Z
4464,Fixed #24544 -- Fixed get_image_dimensions() on image buffers that Pillow fails to parse (based on artscoop work),"It looks like https://github.com/django/django/pull/4401 haven't been updated in a few days.
Since I need this fix as well, I updated @artscoop PR from @timgraham feedback.
The tests should now pass.
",frifri,None,2015-04-07T22:38:27Z,2015-04-07T23:52:58Z
4463,Fixed typo in docs.,,lampslave,None,2015-04-07T17:46:56Z,2015-04-07T18:00:26Z
4462,Fixed #24578 -- Fixed crash with QuerySet.update() on FK to O2O fields.,,timgraham,None,2015-04-07T13:23:05Z,2015-04-09T12:24:28Z
4461,Minor typo mistake fixed.,"Changed ""shows all the question"" to ""shows all the questions"", minor typo.
",marios-zindilis,None,2015-04-07T05:00:55Z,2015-04-07T11:42:01Z
4460,Fixed #24591 -- Optimized cloning of ModelState objects.,"Changed ModelState.clone() to create a shallow copy of self.fields
and self.managers.

https://code.djangoproject.com/ticket/24591
",knbk,None,2015-04-06T21:01:21Z,2015-04-21T00:05:52Z
4459,Fixed #24590 -- Cached calls to swappable_setting.,"Moved the lookup in `Field.swappable_setting` to `Apps`, and added
an `lru_cache` to cache the results.

https://code.djangoproject.com/ticket/24590
",knbk,None,2015-04-06T18:11:14Z,2015-08-22T14:53:32Z
4458,Refs #24397 -- Sped up model reloading in ProjectState.,"Created `bulk_update()` context manager on `StateApps`. Sped up unregistering
models in `reload_models()` by using this context mananger.

Follow-up patch for https://code.djangoproject.com/ticket/24397. 
",knbk,None,2015-04-06T16:26:53Z,2015-04-20T18:42:55Z
4457,Merging migrations from 1.8 code changes to Django 1.7.7,,pkascheev,None,2015-04-06T15:40:37Z,2015-04-06T15:43:43Z
4456,Forms: specify which file contains example code.,"From my beginner perspective it is not obvious where form code should be placed. Some googling suggests it belongs in forms.py. This PR attempts to make that clear.
",eest,None,2015-04-06T05:55:28Z,2015-04-07T19:06:41Z
4455,Fixed #22993 -- Deprecated skipIfCustomUser,"https://code.djangoproject.com/ticket/22993
",chrisjluc,None,2015-04-06T02:35:44Z,2015-04-07T13:54:18Z
4454,Fixed 34585 -- Removed repetitive double quote guards.,,jdufresne,None,2015-04-05T17:23:32Z,2016-03-13T23:03:46Z
4453,Fixed #24584 -- Fixed MySQL microsecond handling with older MySQLdb driver,,jdufresne,None,2015-04-04T20:54:17Z,2016-03-13T23:03:42Z
4452,Fixed #23879 -- Replaced conditional discovery by test skipping,,claudep,None,2015-04-04T16:14:35Z,2015-04-18T13:19:52Z
4451,Fixed #24581 -- Added an exception when ManyToManyField._get_m2m_attr() fails to match,"This fixes https://code.djangoproject.com/ticket/24581
",patrys,None,2015-04-04T09:58:36Z,2015-07-31T17:08:28Z
4450,Fixed #24513 -- Make sure a model is only rendered once during reloads,"This fixes https://code.djangoproject.com/ticket/24513
",patrys,None,2015-04-03T21:46:59Z,2015-04-07T12:53:07Z
4449,Fixed #24518 - Convert verbosity arguments to int,"Prior to the argparse conversion, all the verbosity arguments were being converted to ints. After the conversion, all verbosity arguments were left as-is. The difference wasn't picked up by the unit tests, because they all pass ints to call_command().

This bug breaks all of these management commands on Python 3, and this pull request fixes that.
",bkonkle,None,2015-04-03T21:01:31Z,2015-04-04T11:46:44Z
4448,django,"django
",visualtecnologicc,None,2015-04-03T19:04:39Z,2015-04-03T22:21:32Z
4447,Fixed #24573 -- Considered new related models for reloading,"https://code.djangoproject.com/ticket/24573
",MarkusH,None,2015-04-03T16:45:21Z,2015-06-11T23:37:57Z
4446,Fixed typos in `YEAR_MONTH_FORMAT` description.,,sir-sigurd,None,2015-04-03T12:39:21Z,2015-10-22T05:55:33Z
4445,Fixed #24569 -- Made some translation functions accept None value,"get_language() can return None when translations are deactivated.
Thanks Nicola Peduzzi for the report.
",claudep,None,2015-04-03T10:17:21Z,2015-04-04T08:56:27Z
4444,Fixed #24571 -- Restored testserver positional arguments parsing,"Thanks Domas Lapinskas for the report.
",claudep,None,2015-04-03T09:29:43Z,2015-04-04T08:48:06Z
4443,Fixed minor typo in Cryptography section of 1.8 release notes,"Very minor doc fix
",IanLee1521,None,2015-04-03T07:13:58Z,2015-04-03T11:27:25Z
4442,Fixed #24571 Command Error when use testserver,,Parkayun,None,2015-04-03T06:50:05Z,2015-04-03T09:33:32Z
4441,Updated docstring for firstof tag to reflect new auto-escaping behavior.,,prestontimmons,None,2015-04-03T03:33:49Z,2015-04-03T11:29:22Z
4440,Removed docs for removed transaction APIs.,,timgraham,None,2015-04-03T00:37:56Z,2015-04-15T19:06:50Z
4439,Fix typo in django.core.files.File docs,"The docstring for django.core.files.File contains ""chucks"" instead of ""chunks"".
",Hooksie,None,2015-04-02T23:32:03Z,2015-04-03T10:36:08Z
4438,Fixed #24564 - Moved AbstractBaseUser and BaseUserManager so they can be...,"... used without auth in INSTALLED_APPS. I left the docs as-is, referring to `django.contrib.auth.models.AbstractBaseUser`. Not sure if you want to bless this new location, or just leave it as an implementation detail for the (probably rare) times someone needs it.
",dcwatson,None,2015-04-02T16:57:43Z,2015-05-05T16:07:58Z
4437,Fixed #24562 -- Renamed get_major_version() to get_main_version(),"This reflects the actual behavior of the method.
",timgraham,None,2015-04-02T16:41:45Z,2015-04-06T13:31:52Z
4436,Added item to the release checklist.,"Once a stable branch is created, it needs to be added
to readthedocs so that PDF and ePub files can be generated.

Refs #24568
",bmispelon,None,2015-04-02T15:52:42Z,2015-04-09T14:09:03Z
4435,Fixed #24566 -- Added support for serializing timedelta,"Thanks to knbk for the report.
",bmispelon,None,2015-04-02T14:51:05Z,2015-04-02T15:38:52Z
4434,Allow 'choices'-check to work for callables.,"Related ticket: https://code.djangoproject.com/ticket/24561
",EnTeQuAk,None,2015-04-02T04:45:29Z,2015-04-02T10:58:08Z
4433,Fixed #9739 - Made Admin prefill DateTimeField from URL,"Added the ability to prepopulate SplitDateTimeWidgets from a URL.
Added a test for ModelAdmin.get_changeform_initial_data. Added
documentation for prepopulating ManyToManyFields and DateTimeFields.
",RidleyLarsen,None,2015-04-02T03:55:37Z,2015-08-01T12:26:45Z
4432,[1.8.x] Fixed #24562 -- Fixed mistakes in tests unveiled by version bump to 1.8.1.,,timgraham,None,2015-04-01T23:18:37Z,2015-04-02T12:14:00Z
4431,Fixed #24560 -- Added a --dry-run mode to the createcachetable command,"https://code.djangoproject.com/ticket/24560
",adamchainz,None,2015-04-01T22:05:22Z,2015-04-09T16:18:03Z
4430,Fix typo in 1.9 release notes,"""validate"" was superseded by ""check"", not the other way round. This is a correction to 20e4e8fc79.
",monoidal,None,2015-04-01T20:48:37Z,2015-04-01T23:02:52Z
4429,Fixed #24558 -- Made dumpdata mapping ordering deterministic. ,"It's missing some tests.
",charettes,None,2015-04-01T19:45:42Z,2015-04-02T19:23:21Z
4428,Added Ryan Hall to AUTHORS. Refs #24554,,ryanahall,None,2015-04-01T18:30:49Z,2015-04-01T23:06:12Z
4427,Fixed #24604 -- Added JSONField to contrib.postgres.,"TODO:
- [x] Docs

This adds a JSONField to django.contrib.postgres using the underlying jsonb data type available on Postgres 9.4+. We do not support the json data type due to the fact it lacks an equality operator and is generally otherwise a bit useless.

The implementation seems to be remarkably simple all things considered, making good use of existing code for hstore and a bit of transform magic.
",mjtamlyn,None,2015-04-01T18:19:07Z,2015-05-30T22:11:25Z
4426,Clarify use of context manager in SQLite schema editor,"Wrap a large chunk of relevant code in a single context manager instead of wrapping smaller chunks in multiple context managers.

This is just a minor cleanup of #4122 that didn't work before #4130 was merged.
",AlexHill,None,2015-04-01T17:07:55Z,2015-04-03T14:04:48Z
4425,Refs #24500 -- Avoided locale.getpreferredencoding in makemessages,"Fixes a regression introduced in 53c2cf1e.
",claudep,None,2015-04-01T16:39:46Z,2015-04-01T18:05:15Z
4424,Fixed behavior of InclusionNode.,"This makes the InclusionNode cache-safe by removing the render-time
side effects to it's nodelist. Further, this changes usage of
NodeList.render to Template.render to ensure values are properly cleaned
up from the render_context stack.

Refs #23441 and #24555.
",prestontimmons,None,2015-04-01T14:07:18Z,2015-04-01T17:19:41Z
4423,Refs #24215 -- Improved error message for unhandled lazy ops.,"Before #4130, the condition in `StateApps` where lazy field operations were pending after all models loaded gave an error message which listed the field pointing at the missing model. Due to the refactor that introspection into the lazy operation was lost, and the error message was simplified to simply show the name of the missing model.

This restores the more informative error message, and lists all missing models and related fields, not just the first encountered.
",AlexHill,None,2015-04-01T11:41:07Z,2015-09-16T14:58:32Z
4422,Reusable apps don't use AUTH_USER_PROFILE,"Please add a third warning to the AUTH_USER_PROFILE docs. Many developers new to django get this wrong: use a OneToOneField or inheritance.
",guettli,None,2015-04-01T11:17:08Z,2015-04-06T23:50:17Z
4421,[1.8.x] Speedup migration rendering,"Backport of #4151 to 1.8
",MarkusH,None,2015-04-01T00:38:29Z,2015-04-01T09:30:09Z
4420,Fixed #24375 -- Added Migration.initial property,"Added Migration.initial property to be check when
--fake-initial arg is used, initial will be set to
True for all initial migrations (this is particularly
useful when initial migrations are split). Users may
also set `initial = True` manually.
",akulakov,None,2015-03-31T20:40:23Z,2015-07-13T19:58:53Z
4419,[WIP] Fixed #24554 -- Added preserve state option to mutate_state,"In reference to https://code.djangoproject.com/ticket/24554

Like I've mentioned in the ticket, I'm not convinced this is the best solution (or even safe) since state was intended to be immutable, but I am curious what you guys think. Additionally, it only solves half the problem for us since migration time is still lengthy. All expected test cases are passing locally with this change.
",ryanahall,None,2015-03-31T17:58:20Z,2015-03-31T21:22:21Z
4418,fix typo in docs/topics/cache.txt,,Alerion,None,2015-03-31T14:51:53Z,2015-04-01T01:16:54Z
4417,Fixed minor typo in docs of urlize filter,,joostrijneveld,None,2015-03-31T13:37:27Z,2015-04-01T10:26:20Z
4416,Fixed #22598 -- Allowed make_aware to work with ambiguous datetime,"I wrote this patch before discovering the ticket (which was wontfixed), but I believe this patch takes a different approach. https://code.djangoproject.com/ticket/22598

Where the original reporter wanted to try different settings until it worked, this patch allows the user to resolve the ambiguity if they choose.

Still need to finish off the tests (and docs), and I need to work out whether or not make_naive would need similar options.
",jarshwah,None,2015-03-31T06:01:07Z,2015-10-25T06:37:23Z
4415,Fixed #24538 -- Allow self in Jinja context,"Rendering a Jinja template with self in the context threw an error. While self is a reserved variable in Jinja, including self in the context is not an error, so Django should respect that.

The bug report can be found at https://code.djangoproject.com/ticket/24538
",timheap,None,2015-03-31T04:39:44Z,2015-04-01T17:16:44Z
4414,Documented jinja2 install requirement.,,timgraham,None,2015-03-31T00:57:26Z,2015-03-31T11:45:16Z
4413,Fixed duplicate variable declaration in DatabaseSchemaEditor,,coldmind,None,2015-03-30T20:02:27Z,2015-03-30T23:24:24Z
4412,Refs #23643 -- Added plain text report of exception chain.,"As mentioned in #3535, I've forgot to update the plain-text output in copy&paste box. Here's the fix. It produces following output:

```
Traceback:

File ""/Users/tricoder/Projects/django/testdebug/testdebug/urls.py"" in view
  7.         raise AttributeError('Top level')

The above exception (Top level) was the direct cause of the following exception:

File ""/Users/tricoder/Projects/django/testdebug/testdebug/urls.py"" in view
  10.             raise ValueError('Second exception') from explicit

During handling of the above exception (Second exception), another exception occurred:

File ""/Users/tricoder/Projects/django/django/core/handlers/base.py"" in get_response
  131.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)


File ""/Users/tricoder/Projects/django/testdebug/testdebug/urls.py"" in view
  12.             raise IndexError('Final exception')

Exception Type: IndexError at /
Exception Value: Final exception
```

I haven't created new ticket for this PR. Is it OK?
",tricoder42,None,2015-03-30T18:32:55Z,2015-06-01T12:24:29Z
4411,Fixed sessions test on Python 3.5.,"SimpleCookie.**repr**() changed in
https://hg.python.org/cpython/rev/88e1151e8e02
",timgraham,None,2015-03-30T16:31:24Z,2015-03-31T12:41:40Z
4410,Fixed #24553 -- Added the list of applications to the context of admin views," Pass the list of available applications to more views so it is possible to show a menu with them.

Discussion on list:
​https://groups.google.com/forum/#!searchin/django-developers/having$20the$20app/django-developers/SLwh7zJmkTQ/RPUABdNYuCIJ
",xrmx,None,2015-03-30T13:06:46Z,2015-05-14T12:33:05Z
4409,Fixed #24556 -- Added note about transport security to passwords documentation,"The 'Password management in Django' page is comprehensive on the subject
of storing passwords in the server. But was missing out a key point
about password security: traffic between client and server needs to be
encrypted when sending user's login details.

Personally, I found the existing documentation so comprehensive that I
thought 'great, someone has thought about all this for me and I don't
need to worry about password security' and forgot all about the need for
HTTPS until someone reminded me (several weeks later). So I think there
needs to be a note on this page about HTTPS.
",ssssam,None,2015-03-30T10:35:59Z,2015-04-03T14:59:23Z
4408,Fixed #24550 -- Added migration operation description to sqlmigrate output,"https://code.djangoproject.com/ticket/24550
",MarkusH,None,2015-03-29T15:37:34Z,2015-03-30T14:33:12Z
4407,#24514 -- When building migrations remove models import when it's not needed,"https://code.djangoproject.com/ticket/24514
",chrisjluc,None,2015-03-29T00:10:30Z,2015-04-10T11:09:24Z
4406,Fixed #15590 -- Document how the name of a FileField can be changed,"Documented how the name attribute of a FileField can be changed to an
existing file. Added example code.

Thanks simon29 for report, and @freakboy3742, floledermann,
jacob, claudep and @collinanderson for discussing the task.
",jorgebg,None,2015-03-28T19:36:25Z,2015-03-30T14:39:03Z
4405,"Fixed #24100 -- Dispatched migration plan, state and loader to post_migrate signal","https://code.djangoproject.com/ticket/24100
",MarkusH,None,2015-03-28T19:23:18Z,2015-12-18T01:16:07Z
4404,Fixed #24537 -- Ignored field order in RenameModel detection,"https://code.djangoproject.com/ticket/24537
",MarkusH,None,2015-03-28T18:00:20Z,2015-03-28T20:01:30Z
4403,Small typo fix,"Changed `pk1=` to `pk=1`.
",SaeX,None,2015-03-28T10:06:46Z,2015-03-28T11:41:13Z
4402,Documentation trivial fix: 2 blocks of code weren't highlighted,"Hello,

For whatever reason, those 2 blocks weren't highlighted in the documentation. This patch fix this. You can see the current version of documentation regarding those 2 blocks here: https://docs.djangoproject.com/en/dev/topics/auth/default/#authentication-in-web-requests

This also affect stable/1.7.x and stable/1.8.x. I don't know what is the policy for this situation: should I open 2 others pull requests? If you want to do it by hand, just do a cherry-pick in those 2 branchs:

```
git cherry-pick be1a0432dc76ae861a828c5976e93c7e19f33b4e
```

Kind regards,
",Psycojoker,None,2015-03-28T05:50:02Z,2015-03-28T11:51:30Z
4401,Fixed #24544 -- Fixed get_image_dimensions() on image buffers that Pillow fails to parse,"Fix django/core/files/images.py `get_image_dimensions` not catching a `struct.error` exception on a too short buffer fed to the PIL Image parser. Tests and faulty valid image provided. Fixes #24544
",artscoop,None,2015-03-27T19:58:56Z,2015-04-07T23:14:11Z
4400,Fixed #15779 -- Fixed UserChangeForm regression introduced by 1791a7e75,"Thanks Tim Graham for reporting the regression.
",claudep,None,2015-03-27T19:09:20Z,2015-03-28T08:25:14Z
4399,Dropped support for PostgreSQL 9.0.,,timgraham,None,2015-03-27T11:56:26Z,2015-03-27T16:15:47Z
4398,Fix image dimension detection exception checking,"Fixes https://code.djangoproject.com/ticket/24544
The code is broken at least in these alive django versions: 1.4, 1.6, 1.7 and 1.8
Does not need tests since it's a test per se.
",artscoop,None,2015-03-27T09:51:25Z,2015-03-27T11:58:21Z
4397,Fixed #19259 -- Added group by selected primary keys support.,"- [x] Enable the `allows_group_by_selected_pks` feature flag only for PostgreSQL 9.1+
- [x] Avoid unnecessary group by foreign keys
",charettes,None,2015-03-26T21:04:37Z,2015-03-30T02:08:50Z
4396,Fixes #24510 --- Improves documentation around FileField,"Improves the documentation around the FileField.

Code now has a couple of examples and better notes that different storage backends are available and that they might have different effects to that of the default storage.
",mattseymour,None,2015-03-26T08:43:49Z,2015-03-26T23:22:52Z
4395,Corrected typo in documentation,"There was a documentation typo in this pull request, which was merged: https://github.com/django/django/pull/3898

This pull request fixes the typo.
",seddonym,None,2015-03-25T17:40:54Z,2015-03-25T17:45:05Z
4394,Fixed #13750 - Added regression test and patch,"Added a regression test that verifies that accessing an image field on a model
returns a closed file reference. Also added a patch that correctly determines whether
a file should be closed or not.
",aethemba,None,2015-03-25T14:15:22Z,2015-07-02T22:27:26Z
4393,Fixed #22394 -- Refactored built-in datetime lookups to transforms.,"https://code.djangoproject.com/ticket/22394
",jdufresne,None,2015-03-25T12:18:00Z,2016-03-13T23:03:41Z
4392,"Fixed #23658 -- Provides the password to PostgreSQL from ""dbshell"" command","The password from settings.py, if present, is written in a temporary
.pgpass file whose name is given to psql using PGPASSFILE environment
variable.
",nirgal,None,2015-03-24T17:07:13Z,2015-06-30T22:23:14Z
4391,Removed the null handler in Django's default logging config.,"It's unused since f0f327bb.
",timgraham,None,2015-03-24T12:27:57Z,2015-03-24T12:48:23Z
4390,Stable/1.6.x closed,,wakaryry,None,2015-03-24T01:42:35Z,2015-03-24T09:44:18Z
4389, Fixed #24526 -- Combined django.request/security loggers with the root logger.,"https://code.djangoproject.com/ticket/24526
",timgraham,None,2015-03-23T22:28:08Z,2015-04-25T00:40:05Z
4388,Fixed #24385 and #10060 - added distinct to all Aggregates,,camillobruni,None,2015-03-23T16:10:21Z,2015-03-25T13:37:22Z
4387,Fixed #24521 -- Added support for serializing frozensets in migrations.,,bmispelon,None,2015-03-23T14:39:40Z,2015-03-23T15:04:43Z
4386,Fixed #22938 -- Modified session expiry date to allow cleanup of file based sessions,"This PR fix https://code.djangoproject.com/ticket/22938

set SESSION_ENGINE to use django.contrib.sessions.backends.file
- create few sessions, wait untill they expire (you may use set_expiry, to reduce the waiting time)
- try `django-admin.py clearsessions` directly to clean out expired sessions.

Files should be deleted from your temp dir.
",olatarkowska,None,2015-03-23T11:57:49Z,2015-09-30T10:10:13Z
4385,Fixed #25991 -- New startegy to filter exclude() splitting,"This commit tries to fix queries which filter against a multijoin multiple times in the same query, when at least one of the filter clauses is negated. Previously all negated multijoin filter clauses were pushed to separate subqueries, now they are pushed to same subquery if the filters target the same multijoin.

Example: qs.exclude(authors__age__gte=20, authors__age__lte=30): currently, this generates two different subqueries, after this pr, just one subquery is generated.
",akaariai,None,2015-03-23T10:42:49Z,2016-02-20T12:38:07Z
4384,partial fix for issue#11390,"https://code.djangoproject.com/ticket/11390

Avoid creating another model instance, with the associated recreation of default field values. For example, with the field below, this PR reduces the calls to get_default_title from 3 to 2 when viewing the ""add item"" admin page.

```
class Article(models.Model):
    title = models.CharField(max_length=50, default=get_default_title)
```

See [sample Django project](https://github.com/tomviner/callable_as_default) to reproduce this.
",tomviner,None,2015-03-22T20:50:46Z,2015-03-23T15:32:46Z
4383,Fixed #19910 -- Added slash to i18n redirect if APPEND_SLASH is set.,"This introduced a force_append_slash argument for request.get_full_path which
is now also used by RedirectFallbackMiddleware and CommonMiddleware when
handling redirects for settings.APPEND_SLASH.
",bpeschier,None,2015-03-22T20:00:00Z,2015-03-28T09:16:26Z
4382,Fixed #24505 -- Multiple m2m fields to same 'to' with disabled related_name,"This fixes a bug with multiple many to many fields to the same `to` model and `related_name` set to `+`.

This happens because Django is still using backwards relations internally so multiple fields with the same `related_name` are sometimes overridden and the last field defined wins.

There is still a bug with Django not throwing an exception when defining m2m fields with the same `related_name` and backwards relation enabled but I think it's slightly different from this one and should be managed differently.

Ideally we would refactor the ORM so that it doesn't use backwards relations internally when disabled but this particular fix was easy to implement (although hard to find) so I would be happy with it.

I had to change a few tests so I would like somebody to take a look at them and double-check that it makes sense if possible.
",marcofucci,None,2015-03-22T19:34:48Z,2015-03-26T23:01:23Z
4381,Changed model file field to not save the whole instance,"Model.file.save() and Model.file.delete() would update the whole instance, which feels a bit unexpected to me and could lead to errors.

``` .python
# Example 1
article = Article.objects.get(pk=1)
article.title = ""Bad title""
# ... many lines later ...
article.image.save(image_file)  # will save image AND overwrite title

# Example 2
article = Article.objects.get(pk=1)
image_file = get_image_file()  # download image, could take awhile..
# at the same time in different place
article.title = ""Updated title""
article.save()
# back to our file, download just finished
article.image.save(image_file)  # will overwrite ""Updated title""
```
",alexallah,None,2015-03-22T19:03:37Z,2015-03-23T13:13:09Z
4380,Fixed #24134 -- Document short options for django-admin.py,"I added some missing short options to the documentation page of django-admin.py.
I also improved the consistency by putting the short and long version of the command into section headline (and removing it, when needed, from the description text).
",staeff,None,2015-03-22T16:08:17Z,2015-03-25T15:37:57Z
4379,Fixes #24484 -- Add helpful message when running tests with models changes without migrations,"This PR adds a check into the `test` management command which looks for model changes that are not reflected in a migration. If it finds any, it will close the tests with an error.

I think it would be useful to turn this into a system check so it gets run on other management commands. One issue with that though is we would need to find a way to prevent this check from running on the `makemigrations` command. Let me know if you think that would be useful and I'll look into it.
",kaedroho,None,2015-03-22T15:56:21Z,2015-09-03T18:31:48Z
4378,Fixed #23814 -- Documented apps refactored out of Django.,"- `formtools` page removed from `docs/ref/contrib`.
- `localflavor` page removed from `docs/topics`.
- Removed dangling mentions and links to the removed apps throughout
  the docs.
- Created a dedicated page `External packages` to refer the user to the
  relevant third-party projects.
",ghost,None,2015-03-22T15:54:52Z,2015-03-25T12:47:33Z
4377,Refs #18586 -- Split up tests.m2m_through_regress,,exonian,None,2015-03-22T15:52:59Z,2015-03-24T16:55:49Z
4376,Fixed #23814 -- Documented apps refactored out of Django.,"- A note on the removal of `formtools` added to
  `docs/internals/deprecation/`. See
  https://docs.djangoproject.com/en/dev/releases/1.8/.
- `formtools` page removed from `docs/ref/contrib`.
- `localflavor` page removed from `docs/topics`.
- Removed dangling mentions and links to the removed apps throughout
  the docs.
- Created a dedicated page `Extra packages` to refer the user to the
  relevant third-party projects.
",ghost,None,2015-03-22T14:48:07Z,2015-03-22T15:54:17Z
4375,Fixed #23697 -- Improved field filtering error,"Previous message indicated that 'Relation fields do not support nested
lookups'; replaced this with a message more like the pre-1.7 error
message, that instead lists the fields which are available.

Added test for new error message
",exonian,None,2015-03-22T14:02:00Z,2015-03-23T14:32:25Z
4374,Fixed #24441 -- Change get_image_dimensions return value for broken images,"# Django London Sprint

Thanks @davide-ceretti for pairing up
",raulcd,None,2015-03-22T13:50:19Z,2015-03-25T16:43:11Z
4373,Fixed #24520 -- document supports_microseconds widget property,,wdmgsm,None,2015-03-22T13:34:56Z,2015-05-06T17:32:22Z
4372,#23764 cache.SessionStore does not respect settings.SESSION_SERIALIZER,"Have fixed `cache.SessionStore` to respect the SESSION_SERIALIZER setting.
The `django.contrib.sessions.backends.cache` now `.encode`s in the .save method and `.decode`s in the load method.

I'm not sure how to add regression tests for this. One option is to add this to the test.session_tests.tests.SessionTestsMixin:

``` python
    def test_save_encodes(self):
        # regression test for #23764
        session = self.backend()
        session.encode = mock.MagicMock(return_value='encoded')
        session['some key'] = 'some unencoded value'
        session.save()
        session.encode.assert_called_with({'some key': 'some unencoded value'})
```

but this tests for breaks `tests.sessions_tests.tests.CookieSessionTests` because that backend gives self.serializer to the signer instead of using it directly. I don't want to put an ugly 

``` python
def test_save_encdoes(self):
  pass
```

in there.
",r4vi,None,2015-03-22T12:21:01Z,2016-07-26T14:25:15Z
4371,Fixed #23666 -- Added note for running unit tests on Windows,"This is a simple addition to the [unit test documentation page](https://docs.djangoproject.com/en/1.7/internals/contributing/writing-code/unit-tests/) with a note about Windows users.
",AnSavvides,None,2015-03-22T11:29:34Z,2015-03-24T14:47:24Z
4370,Fixed 24519: Clarify best placing of templates folder in tutorial02,"Improved tutorial documentation about templates folder.
",pkatseas,None,2015-03-22T11:12:21Z,2015-03-24T22:29:48Z
4369,Fixed 24501 -- Improve user_passes_test documentation,"Improved the documentation around the user_passes_test.
- Adds headings similar to login_required section
- Alters raw example by using `redirect` instead of `HttpResponse`
",mattseymour,None,2015-03-22T11:06:00Z,2015-03-24T14:30:21Z
4368,Fixed #23814 -- Edit localflavor documentation,"Edited localflavor doc to point to the external package documentation,
leaving just the 'How to migrate' section in Django.
",yakky,None,2015-03-22T10:54:22Z,2015-03-22T14:37:38Z
4367,Fixed #18586 -- assigned Cleanup/optimization,"Cut some bigs tests functions to unitary tests functions.
",alainivars,None,2015-03-22T10:08:34Z,2015-03-22T12:22:27Z
4366,#24514 -- When building migrations remove models import when it's not needed,"https://code.djangoproject.com/ticket/24514

Since this is for 1.7.x, do I create a new pull request for master?
",chrisjluc,None,2015-03-22T07:58:35Z,2015-03-23T15:07:37Z
4365,Switched to use assertEqual instead of assertEquals.,,berkerpeksag,None,2015-03-22T03:30:25Z,2015-03-22T15:41:07Z
4364,Fixed #24281 -- Improved docs for timezone handling for auto_now and auto_now_add,"https://code.djangoproject.com/ticket/24281
",chrisjluc,None,2015-03-22T00:47:40Z,2015-03-29T21:39:09Z
4363,Added unit test case for contrib.admin.models.LogEntry.get_edited_object() for ticket #24244.,"Added unit test case for contrib.admin.models.LogEntry.get_edited_object()  in tests.admin_views.tests for ticket #24244.
",varunsharma,None,2015-03-21T22:10:06Z,2015-10-27T14:30:01Z
4362,Fixed #24361 -- Clarified docs on reconfiguring logging.,"https://code.djangoproject.com/ticket/24361
",timgraham,None,2015-03-21T18:07:36Z,2015-03-24T16:27:05Z
4361,Fixed #12400 -- Allowed geometry fields in unique_together,,claudep,None,2015-03-21T16:39:43Z,2015-03-23T18:53:47Z
4360,Fixed #16362 -- Allowed lookaround assertions in url patterns.,,bpeschier,None,2015-03-21T12:24:45Z,2015-03-28T09:16:36Z
4359,Fixed #24500 -- Fixed makemessages encoding problems retrieving gettext version.,,timgraham,None,2015-03-21T11:48:32Z,2015-03-21T13:10:20Z
4358,Fixes #24518 -- Cast verbosity to int when using OptionParser,,jthi3rry,None,2015-03-21T02:25:23Z,2015-03-21T10:02:37Z
4357,Fixed #23520 -- Explained that custom plural forms should be avoided,"Thanks aruseni for the report.
",claudep,None,2015-03-20T19:04:32Z,2015-03-20T19:47:55Z
4356,Fixed #24515 -- Fixed DjangoTranslation plural handling,,claudep,None,2015-03-20T18:48:37Z,2015-03-21T09:28:58Z
4355,Fix behaviour of make_template_fragment_key for None values,"This fixes issue #24516.
",wetneb,None,2015-03-20T17:58:53Z,2015-03-20T23:30:02Z
4354,"Fixed numpy instance check, failed when numpy was False.","Thanks to Tim Graham for pointing this out. Refs #23804.
",yellowcap,None,2015-03-20T17:09:09Z,2015-03-22T18:30:39Z
4353,Fixed #13525 -- Added tests and documentation for nested parameters.,"When reversing, only outer parameters are used if captured parameters are
nested. Added tests to check the edge cases and documentation for the
behaviour with an example to avoid it.
",bpeschier,None,2015-03-20T13:50:19Z,2015-03-28T09:16:43Z
4352,Fixed #24508 -- Made annotations reflective,"We should backport this to 1.8 to be consistent with `filter(a=2+F())`.
",jarshwah,None,2015-03-20T04:49:10Z,2015-03-22T06:34:53Z
4351,Add Loek van Gent as author,,gannetson,None,2015-03-19T14:37:50Z,2015-03-19T14:52:06Z
4350,Fixed mistake in comment for escape_filter,,code-tree,None,2015-03-19T07:11:55Z,2015-03-19T11:22:32Z
4349,Fixed #24485 -- Allowed combined expressions to set output_field,"This follows on from https://github.com/django/django/pull/4329 and https://github.com/django/django/pull/4336 which didn't actually solve the problem.

Created a new type to wrap other expressions currently named `Wrapped`. I'm not set on the name. I'm not even sure if we want to go to this much trouble to fix the problem.

A workaround _could_ be:

```
expires_at = models.F('active_at') + models.F('duration')
expires_at._output_field = models.DateTimeField()
```

But that exploits internals (accessing the `_output_field` property). I've implemented the workaround as a test `test_mixed_type_annotation_numbers_alternate` which we can remove if we don't want to go down that path.
",jarshwah,None,2015-03-19T03:11:39Z,2015-03-22T06:38:55Z
4348,Fixed build failure introduced by refs #23757.,,timgraham,None,2015-03-18T22:46:43Z,2015-03-18T23:17:07Z
4347,Refs #24469 -- Revisit strategy of escaping Django's form elements in non-Django forms,"For more information see https://code.djangoproject.com/ticket/24469
",MoritzS,None,2015-03-18T20:44:57Z,2015-09-17T10:22:52Z
4346,Refs #24483 -- Added tests for deconstruction of Field.choices,,timgraham,None,2015-03-18T12:25:26Z,2015-03-18T17:56:42Z
4345,Fixed #24499 -- Dropped support for PostGIS 1.5.,"https://code.djangoproject.com/ticket/24499#ticket
",timgraham,None,2015-03-17T15:18:29Z,2015-04-25T17:05:57Z
4344,Fixed ticket_24498 - Remove migration db config while running unit tests,"While running tests it should ignore migration database settings if specified.
",mmartincevic,None,2015-03-17T14:53:10Z,2015-03-18T23:14:57Z
4343,Fixed #24479 -- Added system check to prevent both ordering and order_wrt,,jdufresne,None,2015-03-17T14:44:29Z,2016-03-13T23:03:47Z
4342,Fixed ticket_24498 - Remove migration db config while running unit tests,,mmartincevic,None,2015-03-17T14:20:23Z,2015-03-17T14:51:29Z
4341,Fixed ticket_24498,"Remove migration database config while running unit tests
",mmartincevic,None,2015-03-17T14:18:44Z,2015-03-17T14:19:05Z
4340,Remove run migrations while running unit tests,,mmartincevic,None,2015-03-17T13:43:42Z,2015-03-17T14:17:13Z
4339,Fixed #23804 -- Added RasterField for PostGIS,"- I think this  be for PostGIS >= 2.0 only, but I am not sure how to check for that
- Lacks documentation since its a first draft
- Very basic testing, needs more complete tests.

Refs #23804.
",yellowcap,None,2015-03-17T13:01:16Z,2015-06-22T10:49:23Z
4338,Require SRID as parameter for GDALRaster instantiation,"Earlier versions of `GDAL` do not allow the srid to be  set to `0`, so it should be a required parameter to ensure compatibility.
",yellowcap,None,2015-03-17T10:48:57Z,2015-03-22T18:30:41Z
4337,Fixed #24496 -- Checked CSRF Referer against CSRF_COOKIE_DOMAIN.,"Right now, if you try to share a CSRF token across a subdomain without https, everything works great since the Referer header isn't validated.

But over https, we want to be a bit more strict and make sure that the Referer is from another secure site, and also that the Referer matches where we think it should be coming from. The canonical source for where we think it should be from is `CSRF_COOKIE_DOMAIN`.

If we set our `CSRF_COOKIE_DOMAIN` to `.example.com`, that means our CSRF validation should work for `www.example.com` and `foo.example.com`. Not just strictly the domain the request is coming from.
",mattrobenolt,None,2015-03-17T09:59:41Z,2015-09-14T22:50:00Z
4336,Refs #24485 -- Renamed some expression types,"Renamed ExpressionNode -> Expression to provide a friendlier base name that is semi-public.
Renamed Expression -> CombinedExpression to avoid the name clash, and to better describe the purpose of the type.

Thanks to Carl, Tim, and yoyoma from Trac for providing input.
",jarshwah,None,2015-03-17T00:40:47Z,2015-03-17T12:40:53Z
4335,Fixed #24490 -- Set LogEntry.change_message when adding an object.,,kaedroho,None,2015-03-16T21:56:52Z,2015-03-20T22:25:36Z
4334,Fixed  #24495 -- Allow unsaved instance in ForeignKey check to be bypassed,"This pull request implements an `allow_unsaved_instance_assignment` flag which can be used by custom related fields to opt-out of the new check implemented in: https://github.com/django/django/commit/5643a3b51be338196d0b292d5626ad43648448d3
",kaedroho,None,2015-03-16T20:15:14Z,2015-03-18T23:10:27Z
4333,Fixed #24493 - Added setdefault method to BaseContext.,,prestontimmons,None,2015-03-16T14:55:45Z,2015-03-16T17:14:27Z
4332,Implement `get_object_or_none`,"Often, when writing API-based Django application, I have a need to send different JSON replies based on which object was not found. I always end-up writing this every time. So added it thinking that many people will be needing this too.
",dhilipsiva,None,2015-03-16T10:21:20Z,2015-03-16T14:22:15Z
4331,Fixed #24417 -- Add get_list_select_related method to ModelAdmin.,,gannetson,None,2015-03-16T10:03:47Z,2015-03-19T12:56:48Z
4330,Added comma to improve readability,"This sentence in the docs was otherwise a run-on sentence.
",DasAllFolks,None,2015-03-16T06:06:00Z,2015-03-16T12:18:06Z
4329,Fixed #24485 -- Documented method to provide output_field to mixed F expressions,"This should probably be back ported to avoid redundant tickets being created since the solution is non-obvious to someone without internal knowledge.

When `F(datetime) + F(delta)` are combined in a query, the expression is unable to determine the output type without special casing the code. Since F expressions do not accept an output_field argument, another type is required to provide an output_field at a higher layer.

The other option would be:

```
finish = F('start') + F('duration')
finish.output_field = DateTimeField()
Race.objects.annotate(finish=finish)
```

But I find that less palatable.
",jarshwah,None,2015-03-16T05:15:35Z,2015-03-16T16:00:31Z
4328,Fixed #24486 -- Fixed error with datetime and DurationField arithmetic,"Fixes an issue on backends that don't support native duration types for `F('duration_field')` and `datetime` arithmetic. This will need to be back ported to 1.8.
",jarshwah,None,2015-03-16T04:55:29Z,2015-03-17T12:36:51Z
4327,Fixed #24488 -- Made `create_default_site` use default pk of 1.,"Fixed `create_default_site` to use a default value in case
`settings.SITE_ID` is not set.

https://code.djangoproject.com/ticket/24488
",knbk,None,2015-03-15T22:59:05Z,2015-03-16T17:31:39Z
4326,Fixed #24483 -- Greedily consume choices iterators,"If Field.choices is provided as an iterator, consume in `__init__` instead
of using itertools.tee (which ends up holding everything in memory
anyway). Fixes bug where deconstruct was consuming iterator but
bypassing the call to `tee`.
",davidszotten,None,2015-03-15T19:15:20Z,2015-03-24T15:45:58Z
4325,Fixed #24424 - sqlite schema editor causes SQL syntax error,"Replaces [pull request #4223](https://github.com/django/django/pull/4223)
",adnam,None,2015-03-15T18:33:26Z,2015-03-30T09:28:33Z
4324,Fixed #13750 - Added documentation for image field behavior and added re...,"Added documentation for image field behavior and added regression test

Added a regression test that verifies that accessing an image field on a model
returns a closed file reference. Also added documentation to docs/topics/fiels.txt
that mentions this behavior.
",aethemba,None,2015-03-15T15:17:29Z,2015-03-25T14:17:58Z
4323,Added missing punctuation within the documentation.,"Added full stops to some comments inside code blocks in tutorial 5.
",HerHde,None,2015-03-15T15:03:43Z,2015-03-16T12:25:19Z
4322,Fixed typo in migrations docs,"""effect"" is the noun and ""affect"" the verb.
",MoritzS,None,2015-03-15T10:18:49Z,2015-03-18T19:41:00Z
4321,Fixed #24476 -- Added context manager/decorator for overriding prefix.,"Tests were using an undocumented keyword argument for easily overriding
script prefix while reversing. This is now changed into a test utility
which can be used as decorator or context manager.
",bpeschier,None,2015-03-15T10:16:46Z,2015-03-19T07:26:21Z
4320,Fix router examples allow_migrate crash,"allow_migrate requires model parameter to have default value None, as described in reference documentation (same file but before examples):
https://docs.djangoproject.com/en/1.8/topics/db/multi-db/#allow_migrate

Otherwise it crashes with error:

File ""c:...\site-packages\django\db\utils.py"", line 347, in allow_migrate
    allow = method(db, app_label, **hints)
TypeError: allow_migrate() takes exactly 4 arguments (3 given)
",adrianandreias,None,2015-03-15T09:06:41Z,2015-03-16T13:39:56Z
4319,Fixed #18556 - Allowed RelatedManager.add() to execute 1 query where possible.,"https://code.djangoproject.com/ticket/18556
",timgraham,None,2015-03-15T01:10:57Z,2015-07-28T10:58:21Z
4318,Fixed #24480 -- Marked strings in contrib.gis templates for translation.,,timgraham,None,2015-03-14T18:37:04Z,2015-03-14T19:21:12Z
4317,Fixed #23960 -- Removed http.fix_location_header,"Purposefully left several commits unmerged, as this might (temporarily) explain some choices.
",claudep,None,2015-03-14T11:14:37Z,2015-03-18T17:27:59Z
4316,Fed tuples to startswith when appropriate,,claudep,None,2015-03-13T19:08:40Z,2015-03-13T20:58:51Z
4315,Documented gdal DataSource encoding parameter,,claudep,None,2015-03-13T15:35:48Z,2015-03-13T15:40:53Z
4314,Fixes #24478: Add default value for NUMBER_GROUPING in Icelandic,"The USE_THOUSAND_SEPARATOR setting is not working when format localizing Icelandic numbers.
A properly formatted number in Icelandic should be: 1.000.000,0 - however - when using the `localize` template tag to format numbers, no thousand separators appear. This is due to the fact that in django/utils/numberformat.py no grouping occurs unless there is a non-zero value for the NUMBER_GROUPING variable in the active locale.

https://code.djangoproject.com/ticket/24478
",saevarom,None,2015-03-13T15:06:36Z,2015-03-13T15:58:54Z
4313,Fixed #23746 -- Added a pre_capture_queries signal that clears query caches.,"The signal is sent before entering a capturing context (assertNumQueries /
CaptureQueriesContext), letting listeners pre-clear some query caches.
Thanks to that the number of queries doesn't depend on execution history.

Disabled the cache clearing (by disconnected the signal temporarily) for
contenttypes tests that actually test cache priming.

Increased the expected number of queries in a few prefetch_related tests
as they now can't rely on having content types cached.

Reverted fixes from #17377, #20432 and #23746 as they are no longer needed.
",timgraham,None,2015-03-13T14:44:37Z,2015-03-13T16:14:08Z
4312,Fixed #23034 -- Added migration support for ManyToMany through model.,"Added auto-created models to project state, while preventing
conventional creation/deletion as this is handled elsewhere.
This allows the auto-detector to pick up any changes to custom
or auto-created through models. Added support for switching
between the two by explicitly renaming through models in a specific
many-to-many field.

https://code.djangoproject.com/ticket/23034
",knbk,None,2015-03-13T14:17:08Z,2018-07-20T02:07:01Z
4311,Custom template tags docfix,"Minor doc fixes in the custom-template-tags page.
",IanLee1521,None,2015-03-13T06:50:30Z,2015-03-13T12:26:22Z
4310,Deleted stray tick mark in docs,"This is causing the following to show up in the docs (https://docs.djangoproject.com/en/1.7/ref/models/fields/#django.db.models.Field):

""...you can either subclass any of the built-in fields or write a Field` from scratch.""
",DasAllFolks,None,2015-03-12T22:56:50Z,2015-03-12T23:16:49Z
4309,Add myself to AUTHORS,"References #4197
",ifedapoolarewaju,None,2015-03-12T17:53:38Z,2015-03-12T23:26:43Z
4308,Fixed #24394 -- Fixed ImproperlyConfigured Error,"Fixed ImproperlyConfigured Error when running any unit test
and the default database entry in settings is an empty dictionary.
",akulakov,None,2015-03-12T17:14:26Z,2015-03-26T01:07:07Z
4307,Fixed #24474 -- Allowed configuring the admin's empty change list value.,,gannetson,None,2015-03-12T15:35:59Z,2015-04-09T00:41:08Z
4306,Ticket 24226,"Make admin change list empty value configurable through settings.
",gannetson,None,2015-03-12T14:59:38Z,2015-03-12T15:36:06Z
4305,Fixed #24364 -- Doc'ed that ManifestStaticFileStorage shouldn't be used during testing.,"This PR is intended for ticket #24364 and adds a small piece of documentation.
",aethemba,None,2015-03-12T12:42:12Z,2015-03-12T13:24:31Z
4304,24364,"This pull request adds simple documentation for ticket #24364.
",aethemba,None,2015-03-12T11:31:55Z,2015-03-12T12:41:36Z
4303,Fixed #24122 -- Added redirection to translated url after setting language,"Thanks gbdlin for the initial patch.
",claudep,None,2015-03-12T08:40:06Z,2015-03-13T15:48:50Z
4302,docs for iri_to_uri use = for comparision instead of ==,,ldrumm,None,2015-03-12T02:48:35Z,2015-03-12T12:48:18Z
4301,Fixed typo in ModelForm's documentation,"I found this typo in a code example in ModelForm's documentation . I think many moons ago the code example used to be the 'pub_date' field. But then it was changed to 'headline' and one line got missed!
",eupharis,None,2015-03-11T23:23:46Z,2015-03-11T23:58:53Z
4300,Fixed spacing in setup.cfg,"setup.py adds these spaces when distributing.
",collinanderson,None,2015-03-11T18:58:14Z,2015-03-11T19:31:19Z
4299,Fixed #24468 -- Made signed cookies cache backend resilient to unpickling exceptions.,,timgraham,None,2015-03-11T18:23:32Z,2015-03-14T23:14:06Z
4298,Fixed typo in current_app deprecation note.,,prestontimmons,None,2015-03-11T15:59:07Z,2015-03-11T16:35:36Z
4297,Fixed #24467. Always include prepopulate.js to avoid JS errors,"As I mentioned in https://code.djangoproject.com/ticket/24467 - we need to include ""prepopulate.js"" file always.

This bug is in Django 1.7.5 and maybe in older releases. I use 1.7.5 and fixed this bug in development branch. If I need to do this fix in other branch (for example 1.7.x) please assist me on this way.

Thank you.
Anton
",1st,None,2015-03-11T10:18:29Z,2015-03-12T15:56:59Z
4296,Fixed #24472 - Defined internal types explicitly for related fields,"https://code.djangoproject.com/ticket/24472
",coldmind,None,2015-03-11T10:01:54Z,2015-07-02T22:28:22Z
4295,Create kidd,,kiddx01,None,2015-03-11T07:13:37Z,2015-03-11T07:15:46Z
4294,Update models.py,"When editing an object from the admin, the initial selection does not correspond to the selections stored in the database. Returning value instead of qs solves the problem.
",spadarian,None,2015-03-10T23:45:07Z,2015-03-11T00:33:09Z
4293,Fixed #24471 -- Enhanced urlize regex to exclude quotes and angle brackets.,"https://code.djangoproject.com/ticket/24471#ticket
",timgraham,None,2015-03-10T23:27:22Z,2015-03-11T12:06:59Z
4292,Fixed escaping regression in urlize filter.,"Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.
",timgraham,None,2015-03-10T22:59:26Z,2015-03-10T23:13:27Z
4291,"Fixed #24469 -- Fixed escaping of forms, fields, and media in non-Django templates.","See https://code.djangoproject.com/ticket/24469 for more information
",MoritzS,None,2015-03-10T20:46:54Z,2015-03-18T13:12:04Z
4290,Fixed #24463 -- Removed old functionality from HttpRequest,"https://code.djangoproject.com/ticket/24463
",gitaarik,None,2015-03-10T16:35:22Z,2015-03-11T18:36:07Z
4289,Fixed #24466 -- Added JavaScript escaping in a couple places in the admin.,,timgraham,None,2015-03-10T12:42:11Z,2015-03-30T23:16:17Z
4288,Fix typo in database.txt,"Fix typo in documentation.
",calvin,None,2015-03-10T09:11:17Z,2015-03-10T11:13:07Z
4287,Fixed #24414 -- Added examples of Prefetch object usage to the docs.,"As always, feedback and comments are welcome.
",sww,None,2015-03-10T05:25:18Z,2015-03-11T16:39:34Z
4286,Fixed #24253 -- Documented staff_member_required decorator,"Added staff_member_required section to auth/default.txt
",akulakov,None,2015-03-09T18:55:21Z,2015-03-13T19:47:11Z
4285,Fixed #24382 -- Allowed unicode chars inside formatted numbers,"Thanks Jacob Rief for the report.
",claudep,None,2015-03-09T16:58:13Z,2015-03-09T17:56:42Z
4284,Include template filename in case of TemplateSyntaxError,"If a template inherit from another templates, its very difficult to tell which template is causing the syntax error.
This commit show the file name of the template causing the syntaxt error
",ramast,None,2015-03-09T16:41:38Z,2015-03-09T16:51:03Z
4283,Fixed #24464 -- Made built-in HTML template filter functions escape their input by default.,,timgraham,None,2015-03-09T13:17:49Z,2015-03-09T13:32:03Z
4282,Refs #23559: warned about letting users edit User model in admin interface,"This adds a warning to the beginner tutorial that you shouldn't give normal users permission to edit the User model, as that amounts to giving them superuser rights. Some more work should be done to completely solve issue #23559, because there should also be more detailed information elsewhere in the documentation about how to safely let regular users administer the User model.
",remcokranenburg,None,2015-03-08T20:01:06Z,2015-03-13T12:51:18Z
4281,Fixed #9596 -- Added date transform for DateTimeField,"This change allows querying `DateTimeField`s by the date portion. Such as:

```
Articles.objects.filter(published_at__date=datetime.date.today())
```

Some concerns and questions:
1. I do not use Oracle DB. The Oracle implementation was created by reading Oracle documentation and other web searches. It has not been tested, nor is it known to be correct. Feedback from Oracle developers would be appreciated. All other built-in backends were tested.
2. Should I add a `TimeTransform` while I'm at it? To allow users to query on the time portion of a `DateTimeField`. If others think it is a good idea, I wouldn't mind adding it.
3. In DB backend `operations.py`, when converting a column to a timezone, should the timezone be returned as a format parameter to the SQL string (as in MySQL and Postgres) or should the timezone be embedded in the returned SQL string (as in Oracle)?

Thanks. All feedback appreciated.
",jdufresne,None,2015-03-08T19:24:21Z,2016-08-25T15:24:36Z
4280,Fixed #21661 -- Improved Authentication Views documentation,"Ticket:
https://code.djangoproject.com/ticket/21661
",gitaarik,None,2015-03-08T18:38:48Z,2015-03-08T19:38:01Z
4279,Fixed #12943 -- Allowed unnamed arguments to be propagated in includes,"Propagated unnamed arguments as positional arguments into included
urlconfs if no named arguments are defined. Positional and keyword
arguments are never combined.
",bpeschier,None,2015-03-08T17:34:33Z,2015-03-19T07:26:30Z
4278,"Fixed #24460, improved HttpRequest.build_absolute_uri documentation","To explain why it doesn't allow scheme switching (HTTP/HTTPS)
Ticket:
https://code.djangoproject.com/ticket/24460#comment:4
",gitaarik,None,2015-03-08T15:05:30Z,2015-03-08T17:38:34Z
4277,WIP Add failing test case for admin filter_horizontal refresh data loss.,"This is test that demonstrates the data loss problem from Django Trac issue 22955.

https://code.djangoproject.com/ticket/22955
",benkonrath,None,2015-03-08T14:58:10Z,2015-03-26T17:30:36Z
4276,Fixed #16860 --  Added password validation to django.contrib.auth,"- [x] Aggregate all validation errors.
- [x] Aggregate all requirements with HTML lists.
- [x] Call a method on each validator after a successful change.
- [x] Validator for most common passwords.
- [x] See whether similarity errors can be made more specific.
- [x] Look into performance impact of current similarity validator.
- [x] Tests
- [x] Docs
- [x] Look into alternative way for validators to return their failures per Aymeric's suggestion.
- [x] Look into alternative design which does not require a global setting.
- [x] Ensure the common password list is cached.
- [x] Add validator to check for fully numerical passwords.
- [x] Release notes

https://code.djangoproject.com/ticket/16860
Mailing list discussion on: https://groups.google.com/forum/#!topic/django-developers/9GBhgGXmEKs
",mxsasha,None,2015-03-08T14:47:10Z,2015-06-22T00:01:27Z
4275,Fixed #23173 -- Fixed incorrect stripping of SCRIPT_URL,"Fixed incorrect stripping of SCRIPT_URL
",bpeschier,None,2015-03-08T14:07:53Z,2015-03-19T07:26:36Z
4274,Fixed #23926 -- Show better validation error when creating custom permis...,"...sions that are too long.
",joeribekker,None,2015-03-08T12:46:16Z,2015-03-16T16:17:50Z
4273,Fixed #24349 --email domain validation regex will accept upto 63 on gTLD,"@timgraham please find cleaned up commit here for merging. replacing previous pull request https://github.com/django/django/pull/4149/

email domain validation regex will accept upto 63 on gTLDs and also simplified the regular expression
",atmb4u,None,2015-03-08T11:12:27Z,2015-03-25T22:08:58Z
4272,Fixed #24013 -- Fixed escaping of reverse prefix.,"Prefix was treated as a part of the url pattern, which it is not.
Improved tests to conform with RFC 3986 which allows certain
characters in path segments without being escaped.
",bpeschier,None,2015-03-08T10:16:27Z,2015-03-19T07:26:50Z
4271,Fixed #24456 -- Update modelforms.txt table of Form/Model refs,"Added links to the Form/Model table to the field reference docs to
point to their individual field references
",butstevetho,None,2015-03-08T09:22:23Z,2015-03-10T16:50:47Z
4270,Fixed #21523 - Support for mock dates in DateField.to_python(),,auvipy,None,2015-03-07T19:10:24Z,2015-03-14T18:59:21Z
4269,Fixed #24432 -- Extended documentation for ManyToManyFields that reside ...,"...in and refer to the same model.
",florisdenhengst,None,2015-03-07T17:47:42Z,2015-03-10T00:55:32Z
4268,Fixed #23784. -- Added reminder to add AdminEmailHandler to LOGGING,"Docs state that you need an AdminEmailHandler in your LOGGING to ensure that
emails are being sent to the project admins
",nschagen,None,2015-03-07T16:57:25Z,2015-03-10T11:14:08Z
4267,Fixed typos and updated spelling wordlist.,,florisdenhengst,None,2015-03-07T16:35:06Z,2015-03-07T18:21:15Z
4266,Made runserver use leave_locale_alone,,claudep,None,2015-03-07T16:24:12Z,2015-03-09T18:01:12Z
4265,Fixed #23387 -- Error when saving inline formsets as new after a validation error,"https://code.djangoproject.com/ticket/23387
",tino,None,2015-03-07T15:15:02Z,2015-05-01T17:31:32Z
4264,Fixed #23838: added missing `__iter__` to LazyObject,"Adds the `__iter__` method to `LazyObject`.

I changed the `test_iter` unittest, because before my change it was relying on `__getitem__`, which python uses when `__iter__` is not available, but since I implemented `__iter__`, the `__getitem__` method isn't used anymore, but to test if `__iter__` really works (and it doesn't fall back to `__getitem__`), I had to create a custom object that only implements `__iter__` and not `__getitem__`.

Ticket:
https://code.djangoproject.com/ticket/23838
",gitaarik,None,2015-03-07T15:02:26Z,2015-03-08T14:43:12Z
4263,Fixed #24419 -- Add sendtestemail management command,"Fixed #24419 -- Add sendtestemail management command
",gannetson,None,2015-03-07T14:02:13Z,2015-03-20T16:05:41Z
4262,Fixed #23986 -- Collectstatic --clear fails if the static dir doesn't ex...,"...ist yet
",sztrovacsek,None,2015-03-07T13:54:53Z,2015-03-11T18:49:48Z
4261,Fixed #23407 -- Extended coverage of makemigrations --noinput option.,"Changed --noinput option to suppress all user prompts, not just
when combined with --merge.

https://code.djangoproject.com/ticket/23407
",knbk,None,2015-03-07T13:08:53Z,2015-03-08T18:46:20Z
4260,Fixed #24457 -- Translated messages output by runserver,,claudep,None,2015-03-07T13:02:40Z,2015-03-07T16:24:43Z
4259,Fixed #24455 -- Fixed crash in debug view with lazy objects,"Refs #24455
",bpeschier,None,2015-03-07T12:20:23Z,2015-03-19T07:27:01Z
4258,Fixed #16891 -- Make QuerySet.delete() return the number of rows matched,,alesasnouski,None,2015-03-07T12:00:12Z,2015-05-22T17:28:49Z
4257,Fixed #23993 -- Added form.media to the admin login template.,"https://code.djangoproject.com/ticket/23993
",dakrauth,None,2015-03-07T10:59:56Z,2015-03-07T12:06:42Z
4256,Refactored DeleteView to be compatibale with SuccessMessageMixin and moved tests to tests/messages_tests to fix the merged conflicts,,auvipy,None,2015-03-07T10:48:52Z,2016-01-18T13:04:47Z
4255,Fixed #23903 -- Configured Sphinx to autogenerate django-admin manpage,"https://code.djangoproject.com/ticket/23903

This adds a line to the sphinx configuration to, in addition to the full manpage, generate a specific manpage for django-admin when running `make man` (outputting in the usual `docs/_build/man`). I also updated the current manpage in `docs/man/django-admin.1` from the newly generated file.

Perhaps there should be some process to ensure `docs/man/django-admin.1` is updated from the docs timely.
",mxsasha,None,2015-03-07T10:43:29Z,2015-03-10T12:17:22Z
4254,Cleaned up the template debug implementation.,,prestontimmons,None,2015-03-07T07:41:16Z,2015-03-20T12:59:18Z
4253,Fixed urlize regression with entities in query strings,,claudep,None,2015-03-06T20:57:35Z,2015-03-06T21:23:47Z
4252,Fixed #24427 -- Stopped writing migration files in dry-run mode when merging,"- Avoid writing migration to file when dry_run=True
- Write migration to stdout when verbosity=3

https://code.djangoproject.com/ticket/24427
",johngian,None,2015-03-06T13:32:40Z,2015-03-16T18:16:38Z
4251,Simplified command to display path to Django source files,"In my opinion there is no need for the sys imports and that stuff. All it does, is removing the current directory from the sys.path for the lookup. But when you are in your site-packages directory, the django installation from this site package is the one that python would use. Also: one liners are nicer to copy and paste.
",saschalalala,None,2015-03-06T10:00:47Z,2015-03-11T14:37:26Z
4250,Fixed #20846 -- Change username max_length to 254,"https://code.djangoproject.com/ticket/20846
",collinanderson,None,2015-03-06T02:17:29Z,2015-04-23T12:07:12Z
4249,Fixed #24451 -- Deprecated comma-separated {% cycle %} syntax.,"https://code.djangoproject.com/ticket/24451
",timgraham,None,2015-03-05T17:44:14Z,2015-03-07T13:10:08Z
4248,Docs example failed to close StringIO.,"Trivial pull request updating docs. Given example in docs does not close StringIO() which should be closed before assertion.
",richardroyal,None,2015-03-05T16:07:45Z,2015-03-07T09:44:35Z
4247,Fixed test_notafile_error to pass on Windows.,"This test failed because a different error code is raised on Windows when
opening a directory. Since the particular message isn't as important to this
test as the fact that the original IOError is reraised, this fixes the test
by making the assertion more generic.
",prestontimmons,None,2015-03-05T15:24:07Z,2015-03-05T17:14:57Z
4246,Fixed #24243 -- Allow resolving of partial file names,"Allow resolving of partial file names (including paths)
that are not known by HashedFilesMixin.
",atleta,None,2015-03-05T14:55:10Z,2016-04-26T04:26:48Z
4245,Fixed #24243 -- Allow resolving of partial file names (e.g. paths) that are not known,"A fix that allows resolving of partial file names (e.g. directories) that are not known by HashedFilesMixin . This way backends using HashedFilesMixin are in line with the default static file storage implementation. Also, this is a needed functionality a lot of times, when creating the final file names in JS.
",atleta,None,2015-03-05T14:41:11Z,2015-03-05T14:54:41Z
4244,Fixed #20488 -- Added copy and move methods to the storage API,#NAME?,kux,None,2015-03-05T13:37:31Z,2020-09-02T17:23:17Z
4243,Fixed admin selenium tests broken by fixture removal.,"@jarshwah Oops, `LiveServerTestCase` uses `TransactionTestCase` so it doesn't have `setUpTestData()`. This look okay to you?
",timgraham,None,2015-03-05T13:23:14Z,2015-03-05T22:52:25Z
4242,Updated docs on logging in users.,"Updated note on `authenticate` to stress that authentication should be
successful before you log in a user.
",knbk,None,2015-03-05T12:14:23Z,2015-03-05T17:18:38Z
4241,Remove rel usage,"Start making Rel objects like real field instances. First steps are:
- Some attribute and method changes on Rel objects
- Introduce remote_field, the idea is that self.remote_field.remote_field == self
- Deprecate field.rel

The reason why I introduced remote_field and deprecated rel is that currently hasattr(field.rel, 'rel') is False, and there exists code that relies on this. After the change, field.remote_field.remote_field == field, that is the Rel object has remote_field just like other relational fields.

The changes cascade to all sorts of smaller and bigger fixes in Django. Most notably some badly bit-rotted code in Admin was refactored.

I'd like to get this included in Django as soon as possible. This patch changes lines all over Django, and I'm afraid this one will get a lot of rebase conflicts if left to linger.

Refs #23417
",akaariai,None,2015-03-05T11:01:14Z,2015-08-28T08:17:24Z
4240,Fixed #24171 -- failure with complex aggregate query and expressions,"The query used a construct of qs.annotate().values().aggregate() where
the first annotate used an F-object reference, and the .values() and
.aggregate() calls referenced that F-object.

Also made sure the inner query's select clause is as simple as possible,
and made sure .values().distinct().aggreate() works correctly.
",akaariai,None,2015-03-05T07:56:33Z,2015-03-09T11:52:32Z
4239,Fixed #24420 -- Allowed ordering by case expressions,"I'm fairly sure that the WhereNode need not return a cloned copy, but I'm not certain. Another option for fixing this bug is to store the intermediate `When.resolve_expression()`, and generate SQL with that new value, rather than overwriting the existing condition property. We'd need to implement `contains_aggregate` on Q() objects if that were to happen though.
",jarshwah,None,2015-03-05T06:13:44Z,2015-03-06T02:31:09Z
4238,moved definition of chunks out of timesince function,"this speeds up the timesince function/filter substantially. With the following, completely unscientific, ""benchmark"", I measured a speed-up of roughly 300x

```
import random
import timeit
import datetime
from django.utils import timezone
from django.utils.timesince import timesince

random.seed(0)

now = timezone.now()
datetimes = [now - datetime.timedelta(seconds=random.randint(0, 2**16)) for n in range(1000)]

def doit():
    for d in datetimes:
        timesince(d)

timer = timeit.Timer(doit)

print timer.repeat(5, number=10)
```

Before:

```
[82.95916604995728, 78.85510802268982, 83.29391980171204, 81.92009782791138, 82.44019603729248]
```

After:

```
[0.2534639835357666, 0.2476367950439453, 0.24594998359680176, 0.2475271224975586, 0.24568581581115723]
```

While this benchmark is completely synthetic and of little value, we do see measurable performance increases on real-world pages with lots of `timesince` filters
",beniwohli,None,2015-03-04T19:33:42Z,2015-03-05T08:42:32Z
4237,Fixed #24428 -- Fixed has_changed for fields with coercion,"Thanks Carsten Fuchs for the report.
",claudep,None,2015-03-04T19:21:32Z,2015-03-05T12:47:48Z
4236,Fixed #19538 -- Removed window.__admin_media_prefix__ from admin templates.,"https://code.djangoproject.com/ticket/19538
",timgraham,None,2015-03-04T18:55:02Z,2015-03-05T12:19:53Z
4235,Fixed #24447 Migrations do not add a FK constraint for an existing column,"Migrations failed when introducting foreign keys. The code
didn't detect this case - if old_field.rel doesn't exist
alter_field() must always create the foreign key and ONLY if
.rel exists it must check .db_constraint, too. Since no .rel
also means there was no foreign key before.

Additional:
- I have this change for 1.7.x too
- If needed I can try to write a test
",ganwell,None,2015-03-04T18:03:36Z,2015-03-07T13:11:27Z
4234,Fixed #24426 -- Displayed admin actions panel when show_full_result_count=False,,timgraham,None,2015-03-04T17:08:47Z,2015-03-04T18:57:19Z
4233,Fixed #24435 -- Prevented m2m field removal and addition in migrations when changing blank,"https://code.djangoproject.com/ticket/24435
",MarkusH,None,2015-03-04T08:43:44Z,2015-08-22T12:00:02Z
4232,Django Admin Fresh Look,"### Description

Ticket [#24444](https://code.djangoproject.com/ticket/24444#ticket) 

Inspired by a new djangoproject.com site. Looks modern, fresh and clean.

New look contains CSS changes only. Intentionally. All changes are about colors, margins, sizes. Nothing major. No **any** markup changes.
### Requirements

Django 1.8+
### Font

New theme uses [Roboto](http://www.google.com/fonts/specimen/Roboto) webfonts. Font includes Latin, Latin Extended, Cyrilic, Cyrilic Extended, Greek, Greek Extended subsets.

Not sure about others. I will appreciate if someone would test admin interface with **i18n** to find any font issues.
### Testing

Tested in:
- IE7+ (IE7 and IE8 are OK in terms of graceful degradation)
- FF30+ (Windows, Ubuntu, OSX)
- Chrome 35+ (Windows, Ubuntu, OSX)
- Safari 8 (OSX)
### Screenshot Examples
#### Login Page

![screenshot 2015-03-03 22 28 00](https://cloud.githubusercontent.com/assets/209663/6468201/4d95ba4c-c1f5-11e4-8e51-54938ebcd3b9.png)
#### Dashboard

![screenshot 2015-03-03 22 29 37](https://cloud.githubusercontent.com/assets/209663/6468218/6895e0c4-c1f5-11e4-8cc5-e8ac66518349.png)
#### List of Filtered Objects

![screenshot 2015-03-03 22 30 10](https://cloud.githubusercontent.com/assets/209663/6468228/7d6bcb6c-c1f5-11e4-9996-a53ddc965aac.png)
#### New Object

![screenshot 2015-03-03 22 30 40](https://cloud.githubusercontent.com/assets/209663/6468234/8a657ce6-c1f5-11e4-9161-566ecbcf5975.png)
### Feedback

Feedback and contribution are welcome.
",elky,None,2015-03-03T18:11:29Z,2015-12-10T16:29:16Z
4231,Fix ordering of inner prefetch related lookups,"Inner prefetch related lookups were shifted to `all_lookups` (in `prefetch_related_objects` function) in reverse order.
Fix shifts them in the correct order.

Assume this model diagram:
A -(m2m)-> B -(m2m)-> C -(m2m)-> D
Now have this code:

``` python
A.objects.prefetch_related(
    'B',
    queryset=B.objects.prefetch_related(
        Prefetch(
            'C',
            to_attr='myC'
        ),
        'myC__D'
    )
)
```

`all_lookups` will have `['B__myC__D', 'B__myC']`. The B prefix is after normalizing.
But the correct order should be `['B__myC', 'B__myC__D']`.

Also see https://docs.python.org/2/library/collections.html#collections.deque.extendleft :
""Note, the series of left appends results in reversing the order of elements in the iterable argument.""
",eliyahen1,None,2015-03-03T11:50:06Z,2015-03-03T18:29:52Z
4230,Removed outdated docstring for get_admin_url,,mathiasuk,None,2015-03-03T09:32:40Z,2015-03-03T12:47:44Z
4229,Fixed #24399 -- Made filesystem loaders use more specific exceptions.,,prestontimmons,None,2015-03-02T20:27:22Z,2015-03-04T22:21:59Z
4228,Add padding to list items on debug.py - ticket_24440,"When viewing debug output, or any code which generates a stack trace, the CSS for debug.py does not contain enough padding for nested list items. This results in a dark grey border which directly touches the line of code it contains. This makes it difficult to read.

This ticket is a request, along with screenshots and patch, to add 5px of padding on two list item CSS declarations.

Before:
![debug-screenshot-before](https://cloud.githubusercontent.com/assets/563460/6448478/e1697108-c0df-11e4-9812-498b47c47cd9.png)

After:
![debug-screenshot-after](https://cloud.githubusercontent.com/assets/563460/6448481/e4b3e410-c0df-11e4-9d5e-7f43eca306ff.png)

Trac ticket link: https://code.djangoproject.com/ticket/24440#no1
",commadelimited,None,2015-03-02T19:27:58Z,2015-03-24T01:27:15Z
4227,Fixed #24439 -- Remove make_object_list as needed.,"Bug fix to https://code.djangoproject.com/ticket/24439#ticket
",jambonrose,None,2015-03-02T18:22:38Z,2015-03-02T18:34:10Z
4226,Fixed MySQL build failure introduced by refs #24390.,"Added table_name back to _create_index_sql() to prevent
duplicate index names on MySQL.
",timgraham,None,2015-03-02T17:49:50Z,2015-03-02T18:34:37Z
4225,Fixed #13015 -- Clarified language about model instances attached to forms.,,timgraham,None,2015-03-02T13:52:55Z,2015-03-02T23:55:04Z
4224,Fixed #24360 -- Delayed internal LocaleMiddleware variable initialization,"Failing in a middleware `__init__` is preventing proper debug view.
",claudep,None,2015-03-02T11:16:21Z,2015-03-02T19:07:24Z
4223,Fixed #24424 - sqlite schema editor causes SQL syntax error,"Resolved problem described in [Ticket 24424](https://code.djangoproject.com/ticket/24424) and provided unit test.

[Edit] I mucked up this pull request so I created a new one: #4325
",adnam,None,2015-03-02T09:42:31Z,2016-06-07T12:23:15Z
4222,Fixed #17401 -- Made SelectDateWidget.render reflect wrong value,"Thanks Marcin Wrobel for the initial patch.
",claudep,None,2015-03-01T20:26:28Z,2015-03-01T20:41:50Z
4221,Fixed #24369 -- Prevented crash when flushing before db migration,"Thanks Thomas Tanner for the report.
",claudep,None,2015-02-28T15:38:40Z,2015-03-05T07:58:49Z
4220,Utilize dictionary comprehension sugar,"4468c08d7 replaced a lot of the old `dict()` comprehensions with the new style, but missed this one
",frewsxcv,None,2015-02-28T00:01:30Z,2015-03-02T17:31:41Z
4219,Remove ableist language in intro tutorial,,ashaindlin,None,2015-02-27T22:00:07Z,2015-05-18T12:09:39Z
4218,Fixed #24372 - Replaced TokenParser usage with traditional parsing.,,prestontimmons,None,2015-02-27T19:49:33Z,2015-03-02T23:25:52Z
4217,Fixed #24413 -- Prevented translation fallback for English,"Thanks Tomasz Kontusz for the report and Baptiste Mispelon for
analysis.
",claudep,None,2015-02-27T19:20:50Z,2015-02-28T09:09:53Z
4216,Fixed #24418 -- Prevented crash in refresh_from_db with null fk,"Thanks Johannes Lerch for the report and Tim Graham for the test
case.
",claudep,None,2015-02-27T17:22:17Z,2015-02-27T19:24:48Z
4215,Updated a link in the README,"The current link to contribute code doesn't link to anything real helpful, so I changed it
to an actual link in the documentation that is very helpful.
",epicserve,None,2015-02-27T15:32:16Z,2015-03-02T13:24:14Z
4214,Fixed #24405: Make admin related object code overridable,"Consolidate it in one file and move the dom related stuff to the
template so it is easily overridable.
",xrmx,None,2015-02-27T10:36:56Z,2015-03-24T15:53:46Z
4213,Fixed #24115 -- Allowed bcrypt hashers to upgrade passwords on rounds change.,,timgraham,None,2015-02-26T19:06:49Z,2015-03-30T23:03:46Z
4212,Time zone support is enabled by default not disabled,"Time zone support is enabled by default not disabled
",gam-phon,None,2015-02-26T18:14:05Z,2015-02-26T18:20:50Z
4211,Fixed #24416 -- uggettext_lazy in email addresses.,"(An alternative fix in sanitize_address would be something like:

```
if isinstance(addr, six.string_types) or isinstance(addr, Promise):
```

but I don't see any other Django code that tests for lazy strings in that way.) 
",medmunds,None,2015-02-25T21:24:08Z,2015-03-13T16:34:23Z
4210,Fixed #24379 -- Documented that example for RemoteUser disables ModelUser,"The example given in the howto for authenticating remote user gives an
example AUTHENTICATION_BACKENDS which lacks the default ModelBackend.

I added a paragraph explaining that this means that login forms will not
work without it.
",RossBrunton,None,2015-02-25T19:07:29Z,2015-03-03T00:55:20Z
4209,Fixed #24390 -- Made migration constraint names deterministic,"- no more random table hashes on python 3
",karolyi,None,2015-02-25T18:53:47Z,2015-04-03T20:27:29Z
4208,Fixed #24411 -- Avoided dict key/method clash in admin delete views.,,timgraham,None,2015-02-25T12:17:28Z,2015-03-05T16:59:32Z
4207,Fixed #24409 -- Combined the app_directories and filesystem loader implementation,"This uses the simpler implementation of `load_template_source` from the app directories loader. You wouldn't see the special message that the filesystem loader creates anyway, unless you were calling `load_template_source` directly from a loader instance.
",prestontimmons,None,2015-02-24T20:37:34Z,2015-03-02T12:54:35Z
4206,Fixed #24391 -- Made BoundField.value() cache callable values.,,timgraham,None,2015-02-24T17:35:23Z,2015-02-25T01:06:46Z
4205,Fixed #24406 -- Improved SelectFilter js to use click events,"The SelectFilter widget uses `<a href=""javascript: function(){...}"">` to execute javascript. This is problematic if one wishes to customize the widget, since the href javascript is executed after events are handled. This change modifies the javascript to use click events to handle button behavior: `someElement.addEventListener('click', function() {...});`
",rjagerman,None,2015-02-24T16:02:34Z,2015-02-27T08:10:19Z
4204,Fixed #24395 -- Ensured inline ModelsForms have an updated related instance.,,timgraham,None,2015-02-24T12:38:41Z,2015-02-24T16:51:31Z
4203,Fixed #24395 - update the inline_formset.forms fk instances in save(),,timgraham,None,2015-02-24T11:21:14Z,2015-02-24T14:47:17Z
4202,Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().,"The semantics stay the same but the new syntax allow the use of
keep_lazy as a decorator with the @-syntax.
It also makes sure that type parameters are passed to lazy,
which would result in an error otherwise.

The cleanups introduced in this change also incidentally fix #20222.
",uruz,None,2015-02-24T10:49:58Z,2015-08-28T18:46:31Z
4201,Added missing backtick,"Nothing much to say, added the missing back tick. Only applies to version 1.7 as formwizard was removed in Django 1.8
",IanLee1521,None,2015-02-24T04:16:54Z,2015-02-24T07:11:19Z
4200,allows ungettext_lazy to accept a long or an int as the number,"See https://code.djangoproject.com/ticket/24401
",pegler,None,2015-02-24T02:53:32Z,2015-02-24T03:01:21Z
4199,Fix typos in comments: retrives -> retrieves,,nikolas,None,2015-02-24T02:20:09Z,2015-02-24T11:32:09Z
4198,Fixed #24397 -- Sped up rendering multiple model states.,"Set `apps.ready` to `False` when rendering multiple models to prevent
cache invalidation on each separate render.

https://code.djangoproject.com/ticket/24397#ticket
",knbk,None,2015-02-23T22:08:12Z,2015-03-08T13:55:06Z
4197,Fixed #24226 -- Changed admin EMPTY_CHANGELIST_VALUE from (None) to -,"Fixes #24226
",ifedapoolarewaju,None,2015-02-23T16:16:55Z,2015-03-12T14:05:37Z
4196,Refs #24366 -- Fixed recursion depth error in migration graph.,"Changed MigrationGraph.forwards_plan and MigrationGraph.backwards_plan
to cache values of subtrees and retry when generating the whole tree in
one run exceeded the maximum recursion depth. Worst-case this doubles the
effective maximum recursion depth, best case this allows for limitless
recursion, depending on the order of MigrationGraph.nodes. Provided a
cleaner stack trace and error message in case it still fails.

Partially fixed a regression introduced in #4173 and unmarked `migrations.test_graph.GraphTests.test_recursion_depth` as an expected failure. 

https://code.djangoproject.com/ticket/24366
",knbk,None,2015-02-23T14:01:55Z,2015-03-29T14:14:29Z
4195,Improve use of tempfile in tests,"I have larger changes coming in this area, but I'd like to start by merging these two commits.

They're self-contained and valuable in themselves.
",aaugustin,None,2015-02-23T10:42:24Z,2015-02-23T18:54:46Z
4194,Fixed #24381 -- removed ForeignObjectRel opts and to_opts,"These cached properies were causing problems with pickling, and in
addition they were confusingly defined: field.rel.model._meta was
not the same as field.rel.opts.

Instead users should now use field.rel.related_model._meta inplace of
field.rel.opts, and field.rel.to._meta in place of field.rel.to_opts.
",akaariai,None,2015-02-23T07:35:32Z,2015-02-23T12:26:01Z
4193,Fixed #24391 -- Call initial callable only once for .value(),"@timgraham - this addresses https://code.djangoproject.com/ticket/24391 without changing the API. 

I've tested this manually, locally.
",orokusaki,None,2015-02-23T03:14:40Z,2015-02-24T23:50:25Z
4192,[WIP] Remove testing fixtures,"Test fixtures are really slow and harder to reason about than data created within the TestCase, so I've began the process of converting fixtures into the equivalent setUpTestData method.

I'm partially automating the object generation by inserting print statements into `django.core.serializers.base`:

```
# def build_instance(Model, data, db):
 print('{}.objects.create({})'.format(str(Model.__name__), ', '.join(""{}={}"".format(k, repr(v)) for k, v in six.iteritems(data))))

# DeserializedObject(object).save:
if self.m2m_data and save_m2m:
            #print('obj = {}.objects.get(pk={})'.format(self.object.__class__.__name__, self.object.pk))
            for accessor_name, object_list in self.m2m_data.items():
                #print('obj.{}.add({})'.format(accessor_name, ', '.join(str(obj) for obj in object_list)))
                setattr(self.object, accessor_name, object_list)
```

I then copy/paste, rearrange, and run the test suite again to verify everything is passing. So far so good.

There aren't a lot of test modules with fixtures anymore, so completing this shouldn't take an extraordinarily long time. We could probably live with the messiness of the auto-generated m2m syntax, but let me know if you'd prefer that cleaned up too.

Are we happy with the conversion of fixtures within our own test suite? I'll specifically leave the fixtures test module alone so that we're still able to test fixture loading within tests.
",jarshwah,None,2015-02-23T01:21:06Z,2015-08-09T08:45:09Z
4191,[1.7.x] Fixed 24352 -- Coercing ManyRelatedManager to string raises StopIteracion exception. ,"Fixed Coercing ManyRelatedManager to string raises Stopteration exception
",gmunumel,None,2015-02-23T01:12:47Z,2015-02-26T16:05:50Z
4190,Refactor migrations commands tests,"Ensure that running the tests doesn't write in the code tree.
",aaugustin,None,2015-02-22T22:07:11Z,2015-02-23T21:33:41Z
4189,Break long lines in code examples.,"The website only renders code blocks at 96 chars, and therefore long code lines get wrapped. Manually breaking the lines prevents the wrapping from occurring.
",IanLee1521,None,2015-02-22T19:48:44Z,2015-02-23T12:46:42Z
4188,Fixed #23762 -- clarified CACHE_MIDDLEWARE_ANONYMOUS_ONLY deprecation in...,"Made changes to 1.8.txt and deprecation.txt to clarify that the CACHE_MIDDLEWARE_ANONYMOUS_ONLY setting deprecation warning only applied to `CacheMiddleware` but not `UpdateCacheMiddleware` to avoid confusing users when the setting was deprecated in 1.8
",kenkam,None,2015-02-22T18:06:38Z,2015-03-07T09:17:54Z
4187,Fixed #24359 -- Cleaned up docs/ref/exceptions.html,"Tried to address confusion reported in ticket + other beautification to a neglected doc.
",timgraham,None,2015-02-22T15:26:16Z,2015-02-27T18:51:44Z
4186,Updated tutorial to use explicit relative imports.,,timgraham,None,2015-02-22T15:06:47Z,2015-02-22T19:20:40Z
4185,Datetime localization for Azerbaijani language,"Added translation for absent language names and datetime strings (moved to Transifex),
Added datetime format for Azerbaijani locale
",mastizada,None,2015-02-22T02:00:40Z,2015-02-23T12:38:03Z
4184,Fixed #24305 -- Added the ability to shadow abstract fields.,"Allowed to override abstract or virtual fields inherited from base
models. Abstract fields can only be overridden if they don't exist
on any concrete base model. Overriding with `None` removes the field.
Passing `locked=True` to the field disallows overriding that field.

https://code.djangoproject.com/ticket/24305
",knbk,None,2015-02-21T23:13:48Z,2015-06-13T19:18:04Z
4183,Fixed #21495 - Add a setting for CSRF Header name,,gregorth,None,2015-02-21T22:07:08Z,2015-03-05T20:03:58Z
4182,[WIP] Quarantine filesystem writes,"Discussion: https://groups.google.com/d/msg/django-developers/sM4x2sG7JJE/g569wNUvQkUJ
",aaugustin,None,2015-02-21T20:53:08Z,2015-03-07T14:58:15Z
4181,Fixed #24376 -- added verbose_name arg to UUIDField,"@timgraham @claudep - this replaces #4178 (which can now be closed), and includes the the requested test updates. I created some Git funkiness, so I nuked my fork and re-forked Django.
- https://code.djangoproject.com/ticket/24376
",orokusaki,None,2015-02-21T18:34:19Z,2015-02-21T19:24:42Z
4180,Fixed #24381 -- Fixed pickling of QuerySets that filter on reverse FKs.,"I am not suggesting this is the correct solution, but hopefully it will point someone in the correct direction.
",timgraham,None,2015-02-21T18:01:01Z,2015-05-29T13:02:37Z
4179,Faster staticfiles tests,"This PR makes the tests go from 7,7s to 2,9s on my machine (and I have a SSD).

Small win, but good to take anyway!
",aaugustin,None,2015-02-21T13:05:34Z,2015-02-21T16:53:20Z
4178,Fixed #24376 -- Added verbose_name arg to UUIDField.__init__,"@timgraham @claudep I tested this simple patch manually, locally.

https://code.djangoproject.com/ticket/24376
",orokusaki,None,2015-02-21T03:55:47Z,2015-02-21T18:36:20Z
4177,"Typo in a comment, no biggie","Typo in a comment, no biggie
",donkirkby,None,2015-02-20T22:48:29Z,2015-02-21T01:12:06Z
4176,Fixed #24377 -- Fixed model inline formsets with primary key's that have defaults.,,timgraham,None,2015-02-20T20:46:11Z,2015-02-23T14:01:44Z
4175,Fixing PBKDF2PasswordHasher comments to reflect reality,"Comments indicate 20,000 iterations, code is actually set at 24,000 iterations. 
",frankwiles,None,2015-02-20T20:32:15Z,2015-02-20T21:01:57Z
4174,Use AUTH_USER_MODEL for UserCreationForm and UserChangeForm,"I just noticed that there are `UserCreationForm` and `UserChangeForm` forms.
As they are now, the lack of support for custom User models is a hindrance.

Using `get_user_model` should make them the recommended way instead of re-inventing the wheel in most User-based web apps.

Related to that, I think a `signup` view would be an awesome addition to the `django.contrib.auth.views` family!
",syndbg,None,2015-02-20T17:51:16Z,2015-03-12T13:04:20Z
4173,Fixed #24366 -- Optimized traversal of migration dependency graphs.,"https://code.djangoproject.com/ticket/24366
",knbk,None,2015-02-20T14:29:50Z,2015-02-23T11:56:38Z
4172,Fixed #24373 -- Added run_validators to ArrayField.,"Thanks to DavidMuller for the report.
",mjtamlyn,None,2015-02-20T11:34:19Z,2015-02-20T11:52:55Z
4171,Fixed #24343 -- Ensure db converters are used for foreign keys.,"Joint effort between myself, Josh, Anssi and Shai.
",mjtamlyn,None,2015-02-20T10:36:25Z,2015-02-20T11:37:20Z
4170,Removed a non-obvious side-effect of assigning Context.template.,"Explicit is better than implicit.
",aaugustin,None,2015-02-19T22:21:28Z,2015-02-20T21:28:25Z
4169,Fixed #24341 -- Added specific error messages to RangeField subclasses,,foresmac,None,2015-02-19T21:38:48Z,2015-02-23T16:06:21Z
4168,Fixed #24358 -- Corrected code-block directives for console sessions.,"Switched the code blocks from bash to console in the Django
documentation and ensured the appropriate lines had a leading $.
",sww,None,2015-02-19T03:26:42Z,2015-02-22T14:36:27Z
4167,Cleaned up template loader tests.,"If I can be entertained here, I'd like to clean up `template_tests/test_loaders.py`. I have a number of tests I want to add to this file from work on #3475. This cleanup makes that a bit nicer.

Some explanation on a few of the changes:

1) I modified the egg loader tests to clean up after themselves. They were modifying sys.modules without putting the changes back.

2) I moved `PriorityLoader` and `PriorityCachedLoader` into `GetTemplateTests`. I'll be adding additional tests to this test group as well.

3) I used `get_template` in favor of `loader.get_template`, etc.

4) I removed the `test_empty_egg` egg test. That to me was redundant with `test_non_existing`.

The rest of the changes are mainly cleaning up docstrings and indentation.
",prestontimmons,None,2015-02-18T22:41:30Z,2015-02-24T13:00:31Z
4166,Fix typo in django.core.servers.basehttp,"Small thing, but I found a typo while looking at the implementation of basehttp.
",avidal,None,2015-02-18T21:52:44Z,2015-02-20T00:32:52Z
4165,Fixed #24324 -- Fixed migrations test failure on Oracle.,,timgraham,None,2015-02-18T17:52:59Z,2015-02-18T21:02:04Z
4164,Remove unused foreign_key_re variables in MySQL/Oracle DB backends,"I saw these when researching how the backends work. They were last referenced in the outgoing code of commit 4536359887b34eea5e7b8cf6864d9092b46c2980 for MySQL and the Oracle one seems to have been copy/pasted in during the creation of the backend in cac7675f247da325cb862a312804fe64845d1155.
",adamchainz,None,2015-02-18T14:54:56Z,2015-02-18T15:23:26Z
4163,Fixed #20889 -- Prevented BadHeaderError when Python inserts newline,"Workaround for http://bugs.python.org/issue20747.
In some corner cases, Python 2 inserts a newline in a header value
despite `maxlinelen` passed in Header constructor.
",claudep,None,2015-02-18T09:15:58Z,2015-02-19T19:41:54Z
4162,Fixed #24307: Avoided nullable-to-nullable column modifications on Oracle,,shaib,None,2015-02-17T22:56:26Z,2015-02-19T00:51:56Z
4161,Set context.template instead of context.engine while rendering.,"This opens more possibilities, like accessing context.template.origin.

It also follows the chain of objects instead of following a shortcut.
",aaugustin,None,2015-02-17T22:04:51Z,2015-04-03T16:26:33Z
4160,Simplified and updated committing code guidelines.,,timgraham,None,2015-02-17T21:04:06Z,2015-02-20T01:45:01Z
4159,Fixed #23811 -- Added a guide for using git bisect.,,timgraham,None,2015-02-17T19:38:08Z,2015-02-20T01:20:01Z
4158,[WIP] Alt implementation for #24343,"Alternative implementation for https://github.com/django/django/pull/4134
",jarshwah,None,2015-02-17T02:58:37Z,2015-02-20T11:34:40Z
4157,Fixed #24290 -- Skipped postgres_tests if not running with PostgreSQL.,,timgraham,None,2015-02-16T23:28:06Z,2015-02-17T11:36:06Z
4156,Moved contrib.contenttypes tests out of contrib.,,timgraham,None,2015-02-16T20:56:46Z,2015-02-16T23:06:27Z
4155,[1.7.x] Fixed #24354 -- Prevented repointing of relations on superclasses when migrating a subclass's name change,"When renaming a class the migrations framework follows all references backwards in order to repoint their foreign keys to the new location. However, the current implementation doesn't differentiate between relations by virtue of a direct relation to the subclass and those that it inherits from a superclass.

This change explicitly checks that the model that each found relation field belongs to is the same one being renamed. Without this, any project that has a renamed subclass will generate superfluous migrations for the parent class on every invocation of makemigrations, leaving incorrect migrations in eggs and spurious database records if not caught.
",MatthewWilkes,None,2015-02-16T20:52:43Z,2015-03-14T19:35:42Z
4154,Do not repoint relations on superclasses when migrating a subclass's name change,"When renaming a class the migrations framework follows all references backwards in order to repoint their foreign keys to the new location. However, the current implementation doesn't differentiate between relations by virtue of a direct relation to the subclass and those that it inherits from a superclass.

This change explicitly checks that the model that each found relation field belongs to is the same one being renamed. Without this, any project that has a renamed subclass will generate superfluous migrations for the parent class on every invocation of makemigrations, leaving incorrect migrations in eggs and spurious database records if not caught.
",MatthewWilkes,None,2015-02-16T19:54:37Z,2015-02-16T20:54:14Z
4153,Fixed #24350 -- Freshened up database install topic section.,,timgraham,None,2015-02-16T19:23:23Z,2015-02-16T20:00:35Z
4152,"Fixed #24351, #24346 -- Added app_label to the signature of allow_migrate.",,loic,None,2015-02-16T19:21:25Z,2015-02-20T14:39:08Z
4151,Speedup migration rendering,"https://code.djangoproject.com/ticket/24554
",MarkusH,None,2015-02-16T18:50:17Z,2015-04-01T00:14:22Z
4150,Fixed #24299 -- Added an auth migration to ensure contenttypes is migrated.,"Without this migration, the auth signal handlers will fail if migrating
only auth.
",timgraham,None,2015-02-16T17:57:33Z,2015-02-16T19:55:36Z
4149,Ticket 24349 - email domain validation regex will accept upto 63 on gTLD,"email domain validation regex will accept upto 63 on gTLDs and also simplified the regular expression
",atmb4u,None,2015-02-16T17:40:43Z,2015-03-08T11:13:05Z
4148,Fixed #24335 -- Bumped required psycopg2 version to 2.4.5 (2.5 for contrib.postgres).,,timgraham,None,2015-02-16T17:19:00Z,2015-02-17T11:22:37Z
4147,Removed unnecessary __init__ definition from DebugLexer.,,prestontimmons,None,2015-02-16T15:37:39Z,2015-02-16T18:00:25Z
4146,Fixed 24286: Moved django/core/files/locks.py to django/utils/locks.py,"ticket_24286: moved django/core/files/locks.py to django/utils/locks.py
",gmunumel,None,2015-02-16T13:44:04Z,2015-03-06T12:56:05Z
4145,Fixed #24345 -- Isolated sitemaps_tests from contenttypes_tests; refs #11505,,knbk,None,2015-02-16T13:07:31Z,2015-02-16T13:43:18Z
4144,Fixed #24328 -- cleaned up _get_fields() implementation,"In addition to the cleanup, this patch does the following changes to
the meta API:
- proxy models have now always the exact same set of fields as their
  parent models
- proxy model relations are now handled in _relation_tree
- the _relation_tree doesn't now return duplicate fields
- relations to proxy child models of the current models are now
  returned in some cases where they weren't before
  (include_parents=False). The include_parents flag was used in effect
  to restrict including fields from _child_ models.
- virtual fields now respect include_parents flag

To implement the last feature virtual fields now have originating_model
attribute which tells the topmost non-abstract parent containing the
field.

In addition some minor cleanups were made.
",akaariai,None,2015-02-16T12:45:09Z,2015-02-20T20:10:15Z
4143,24346: AuthRouter docs,"https://code.djangoproject.com/ticket/24346#ticket
",pzrq,None,2015-02-16T07:59:44Z,2015-02-16T23:47:44Z
4142,Simplified Options._get_fields(); refs #24328.,,timgraham,None,2015-02-15T23:45:41Z,2015-02-20T14:24:37Z
4141,Add import of my_view to example.,"Simple change to add import of `my_view` to example in docs.
",IanLee1521,None,2015-02-15T22:25:36Z,2015-02-17T19:06:56Z
4140,Fixed #23892 -- Clarified compatibility policy for migrations.,"https://code.djangoproject.com/ticket/23892
",carljm,None,2015-02-15T19:43:27Z,2015-02-16T15:12:46Z
4139,Documented how to set up the Jinja2 environment.,"This may also help with ""Why do context processors not work in Jinja2
templates?"" etc.
",aaugustin,None,2015-02-15T16:32:33Z,2015-02-15T19:45:37Z
4138,Deprecated TEMPLATE_DEBUG setting.,,aaugustin,None,2015-02-15T14:43:10Z,2015-02-15T19:49:36Z
4137,Isolated auth_tests from contenttypes_tests; refs #11505.,,timgraham,None,2015-02-15T03:06:23Z,2015-02-15T03:32:18Z
4136,Fixed #24324 -- Fixed crashes when project path contains a non-ascii character,"(commit messages to be cleaned up before commit)
",timgraham,None,2015-02-15T02:04:08Z,2015-02-18T12:27:44Z
4135,Added return value to DurationField.prepare_value,"@timgraham this is in response to my prior pull request (sorry for all the added friction - this is sort my first time actually patching Django, other than Docs and a couple patches back in the SVN days). Let me know if you need anything updated in this.
",orokusaki,None,2015-02-14T21:37:23Z,2015-02-14T23:39:29Z
4134,Fixed #24343 -- Ensure db converters are used for foreign keys.,"This may not be the best way of doing this.

@jarshwah - you made some changes to db_converters to use `Col` objects, I don't know whether it's appropriate to work out when we have a foreign key and set the output field to the correct (i.e. related) type.

I believe it will fix the ticket, it certainly fixes the added failing test.
",mjtamlyn,None,2015-02-14T19:39:47Z,2015-02-17T23:30:06Z
4133,Fixed #24531 -- Improved CommaSeparatedIntegerField validation.,"`','`, `'1,,1'`, `',1'` etc are no longer considered as valid
comma-separated integer lists.

Additionally, you can now easily create integer list validators
with a custom separator instead of a comma using the function
`django.core.validators.int_list_validator`.
",BertrandBordage,None,2015-02-14T14:33:15Z,2015-03-25T22:52:33Z
4132,Ticket 24318,,aaugustin,None,2015-02-14T08:54:49Z,2015-02-14T17:53:21Z
4131,Fixed #24335: Range fields not supported in psycopg2 < 2.5,"If the version of psycopg2 is smaller than 2.5, don't attempt to
define the django.contrib.postgres.fields.ranges.Range field and
associated subclasses.

Also, added documentation noting that the classes are unavailable
",ovangle,None,2015-02-14T07:00:47Z,2015-02-16T17:19:44Z
4130,Fixed #24215 -- Refactor of lazy model operations,"See #3984 for history – this is a new pull request based on master instead of stable/1.8.x.

I've bumped the deprecation warning for `add_lazy_relation` to `RemovedInDjango21`, and documented the deprecation.

I've also consolidated the commits into a smaller number of logical chunks.

CC @timgraham @carljm @charettes @akaariai
",AlexHill,None,2015-02-14T04:04:42Z,2015-09-07T23:18:48Z
4129,"Fixed #24340 -- nested deconstruction should recursively deconstruct items within list, tuple and dict values",,gasman,None,2015-02-14T01:25:24Z,2015-05-26T14:34:36Z
4128,Fixed #24339 -- Added timedelta check and tests for DurationField.prepare_value,"I've run the body of the tests in my shell locally, but haven't run the test suite locally. These commits fix https://code.djangoproject.com/ticket/24339
",orokusaki,None,2015-02-13T22:26:18Z,2015-02-14T21:25:16Z
4127,Fixed #24289 -- Reversed usage of Field.many_to_one and one_to_many.,,loic,None,2015-02-13T18:57:47Z,2015-02-13T19:38:50Z
4126,[1.7.x] Fixed #24337 - Added stronger documentation warning about automatic fake-initial.,"https://code.djangoproject.com/ticket/24337
",carljm,None,2015-02-13T18:50:01Z,2015-02-13T19:12:54Z
4125,Fixed #24320 - Use field.value_to_string() in serialization while handling FK,,coldmind,None,2015-02-13T14:23:26Z,2015-02-13T17:45:10Z
4124,Fixed #24315 -- Fixed auth.views.password_reset_confirm() with a UUID user.,,timgraham,None,2015-02-13T14:16:01Z,2015-02-13T14:57:55Z
4123,[1.8.x] Fixed #24320 - Use smart_text in serialization while handling FK field value,"I used the the same principle as it used in XML serialization (https://github.com/django/django/blob/47b23ca2ee4d26a50895adf0fba19020b27d8d84/django/core/serializers/xml_serializer.py#L104)
",coldmind,None,2015-02-13T12:13:04Z,2015-02-13T12:54:57Z
4122,Refs #24215 -- Safer table alterations under SQLite,"Table alterations in SQLite require creating a new table and copying data over from the old one. This change ensures that no Django model ever exists with the temporary table name as its db_table attribute.

I ran into this while refactoring Django's lazy model operations. See PR #3984 and [discussion of this specific change on django-developers](https://groups.google.com/forum/#!topic/django-developers/KTmiKneaGXE).
",AlexHill,None,2015-02-13T04:21:21Z,2015-03-25T08:17:44Z
4121,Refs #14030 -- Added tests for Value aggregates,"e2d6e14662d780383e18066a3182155fb5b7747b simplified Value expressions, but I was too aggressive when altering the tests.

@pope1ni pointed out (https://github.com/django/django/commit/e2d6e14662d780383e18066a3182155fb5b7747b#commitcomment-9712894) that two tests were refactored to be duplicates of each other. I've re-added the original tests and kept one of the refactored tests. This should provide full coverage of Value expression combinations.
",jarshwah,None,2015-02-12T23:13:30Z,2015-02-13T00:23:41Z
4120,Fixed #24332 -- Fixed contrib.sites create_default_site() when 'default' DATABASES is empty.,,timgraham,None,2015-02-12T19:01:35Z,2015-02-13T12:05:30Z
4119,Fixed #24333 -- Fixed admin history view crash with non-integer slug.,,timgraham,None,2015-02-12T18:42:07Z,2015-02-12T19:21:03Z
4118,Fixed #24334 -- Allowed admin password reset to work with non-digit custom user model pk.,,timgraham,None,2015-02-12T18:26:59Z,2015-02-13T14:50:45Z
4117,Added a test for UUIDField serialization; refs #24320.,,timgraham,None,2015-02-12T14:57:33Z,2015-02-12T15:18:35Z
4116,"[1.6.x] Fixed casing of ""GeoDjango"".",,sir-sigurd,None,2015-02-12T08:34:34Z,2015-10-22T05:55:49Z
4115,Refs #24215 -- Prevented pending lookup pollution by abstract models.,,charettes,None,2015-02-12T07:11:26Z,2015-12-04T15:48:48Z
4114,Fixed #24319 -- Added validation for UUID model field,,jarshwah,None,2015-02-12T02:25:37Z,2015-02-12T23:00:45Z
4113,Fixed #24161 -- Stored the user primary key as a serialized value in the session.,"This allows using a UUIDField primary key along with the JSON session
serializer.

Thanks to Trac alias jamesbeith for the report and Simon Charette
for the initial patch.
",timgraham,None,2015-02-11T19:58:32Z,2015-02-12T12:40:40Z
4112,[1.8.x] Moved tests out of contrib.,,timgraham,None,2015-02-11T17:11:02Z,2015-02-11T17:36:00Z
4111,Refs #14497 -- Handle empty readonly admin FileFields,,collinanderson,None,2015-02-11T16:41:02Z,2015-02-11T18:01:34Z
4110,cache.txt: ``0`` forces to immediately expire,"More explicit docs: cache timeout:  `0` forces to immediately expire
Changed it at two places. Russ Magee:
https://groups.google.com/d/msg/django-users/iScpF2dSg98/-aFcj3mKhjIJ
",guettli,None,2015-02-11T15:00:20Z,2015-02-12T15:33:17Z
4109,Custom Admin views documentation,"Slightly improved the documentation relating to adding custom admin views, directing people
to the way template variables are included and the base template.

This is against Django 1.7, so I'm not sure if it'll work with the dev branch
",kennydude,None,2015-02-11T10:22:51Z,2015-02-13T15:35:09Z
4108,Fix `utils.http.same_origin` to comply with RFC6454 (Trac #24321),"Trac Ticket: https://code.djangoproject.com/ticket/24321#ticket

According to RFC6454 (http://tools.ietf.org/html/rfc6454#section-3.2.1) this should both be true:

``` python
>>> from django.utils.http import same_origin
>>> same_origin('http://google.com', 'http://google.com')
True
>>> same_origin('http://google.com', 'http://google.com:80')
False
```

Quote:

> All of the following resources have the same origin:
> 
>   http://example.com/
>   http://example.com:80/
>   http://example.com/path/file
> 
>   Each of the URIs has the same scheme, host, and port components.

Django's `same_origin` uses the standard urllib, which will return an empty port if none is explicitly specified, which is why I have extended the `same_origin` method to use a protocol-to-port-mapping if no port is explicitly declared.
",lukasklein,None,2015-02-11T10:20:29Z,2015-02-12T08:01:11Z
4107,Refs #14030 -- Improved expression support for python values,"Parsing non-expressions now only wraps strings in `F()` and everything else as `Value()`. Thanks @charettes for the idea.
",jarshwah,None,2015-02-11T05:41:08Z,2015-02-11T21:49:01Z
4106,Moved tests out of contrib.,,timgraham,None,2015-02-10T12:31:53Z,2015-02-11T16:47:34Z
4105,Fixed #24301 - Added general and statistics aggregate functions for PostgreSQL,"https://code.djangoproject.com/ticket/24301

Feature is implemented (for general and statistics functions.)
",coldmind,None,2015-02-10T11:54:36Z,2015-03-30T14:44:55Z
4104,Split DTL context creation into its own function.,"This reduces the length of rope RequestContext gives users to hang
themselves with.

Thanks Alex Hill for the report.
",aaugustin,None,2015-02-10T09:30:19Z,2015-02-23T20:37:20Z
4103,"Subclass template.Node instead of Node, for consistency.","`PrefixNode` and `StaticNode` are both subclassing `Node` but with a different syntax. Are they actually sub-classing different parents? If not, we can consolidate this to one syntax.

It looks like `django.template.base.Node` and `django.template.Node` both point to the same class (https://github.com/django/django/blob/master/django/template/__init__.py#L62)
",nikolas,None,2015-02-10T03:19:16Z,2015-02-12T13:06:35Z
4102,Removed Django 1.7 MIDDLEWARE_CLASSES upgrade check.,,timgraham,None,2015-02-10T00:17:10Z,2015-02-10T11:33:17Z
4101,Fixed #24200 -- Made introspection bypass statement cache,"https://code.djangoproject.com/ticket/24200

Oracle will no longer close connections when table columns have changed. Busting the cache with an increasing counter for `get_table_description` solves the stale table description problem.

The following tests fail when commenting out the line that increases the counter:
- test_add_field (migrations.test_operations.OperationTests)
- test_alter_order_with_respect_to (migrations.test_operations.OperationTests)
- test_remove_field (migrations.test_operations.OperationTests)
- test_remove_fk (migrations.test_operations.OperationTests)
- test_alter (schema.tests.SchemaTests)
",jarshwah,None,2015-02-10T00:01:48Z,2015-02-10T22:56:41Z
4100,Disallowed importing concrete models without an application.,"Removed fragile algorithm to find which application a model belongs to.

Fixed #21680, #21719. Refs #21794.
",aaugustin,None,2015-02-09T21:45:11Z,2015-02-10T21:02:11Z
4099,[1.8.x] Sorted imports with isort; refs #23860.,"Backport of 0ed7d155635da9f79d4dd67e4889087d3673c6da from master
",timgraham,None,2015-02-09T18:57:24Z,2015-02-09T20:00:52Z
4098,Removed some obsolete absolute_imports.,,timgraham,None,2015-02-09T18:38:37Z,2015-02-09T18:55:08Z
4097,"Fixed #24225, #24264, #24282 -- Recursively rebuilt all related models as soon as one changed","The current (Django 1.8+) `ProjectState` implementation suffers from incomplete updates of relations between models.

Given the models `A`, `B`, `C` are related by foreign keys like `A.bs --> B` and `B.cs --> C`.

Right now: If a field is added to `A`, the model is removed from a state and rerendered as `A*`. In order to fix the reverse relation from `B` to `A*`, `B` is rerendered as `B*`. So far so good. However, Django doesn't rerender `C` which still points to `B` and not `B*`. This eventually leads to problems, not just the one shown in [#24225](https://code.djangoproject.com/ticket/24225) but also [#24264](https://code.djangoproject.com/ticket/24264) and [#24282](https://code.djangoproject.com/ticket/24282).

The pull request introduces recursively removing and reloading of all referenced models. This _should_ fix the errors mentioned above.

However, I'm currently struggling with fixing 4 test cases:

``` python
======================================================================
ERROR: test_alter_order_with_respect_to (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/markus/Coding/django/tests/migrations/test_operations.py"", line 1261, in test_alter_order_with_respect_to
    rendered_state.get_model(""test_alorwrtto"", ""Rider"").objects.create(pony=pony, friend_id=1)
  File ""/home/markus/Coding/django/django/db/models/manager.py"", line 127, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File ""/home/markus/Coding/django/django/db/models/query.py"", line 399, in create
    obj = self.model(**kwargs)
  File ""/home/markus/Coding/django/django/db/models/base.py"", line 460, in __init__
    setattr(self, field.name, rel_obj)
  File ""/home/markus/Coding/django/django/db/models/fields/related.py"", line 627, in __set__
    self.field.rel.to._meta.object_name,
ValueError: Cannot assign ""<Pony: Pony object>"": ""Rider.pony"" must be a ""Pony"" instance.

======================================================================
ERROR: test_create_model_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/markus/Coding/django/tests/migrations/test_operations.py"", line 274, in test_create_model_m2m
    stable.ponies.add(p1, p2)
  File ""/home/markus/Coding/django/django/db/models/fields/related.py"", line 991, in add
    self._add_items(self.source_field_name, self.target_field_name, *objs)
  File ""/home/markus/Coding/django/django/db/models/fields/related.py"", line 1124, in _add_items
    (self.model._meta.object_name, obj)
TypeError: 'Pony' instance expected, got <Pony: Pony object>

======================================================================
ERROR: test_rename_model_with_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/markus/Coding/django/tests/migrations/test_operations.py"", line 568, in test_rename_model_with_m2m
    pony.riders.add(rider)
  File ""/home/markus/Coding/django/django/db/models/fields/related.py"", line 991, in add
    self._add_items(self.source_field_name, self.target_field_name, *objs)
  File ""/home/markus/Coding/django/django/db/models/fields/related.py"", line 1124, in _add_items
    (self.model._meta.object_name, obj)
TypeError: 'Rider' instance expected, got <Rider: Rider object>

======================================================================
ERROR: test_run_python (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/markus/Coding/django/tests/migrations/test_operations.py"", line 1567, in test_run_python
    operation.database_backwards(""test_runpython"", editor, project_state, new_state)
  File ""/home/markus/Coding/django/django/db/migrations/operations/special.py"", line 185, in database_backwards
    self.reverse_code(from_state.apps, schema_editor)
  File ""/home/markus/Coding/django/tests/migrations/test_operations.py"", line 1551, in inner_method_reverse
    Pony.objects.filter(pink=1, weight=3.55).delete()
  File ""/home/markus/Coding/django/django/db/models/query.py"", line 592, in delete
    collector.collect(del_query)
  File ""/home/markus/Coding/django/django/db/models/deletion.py"", line 225, in collect
    sub_objs = self.related_objects(related, batch)
  File ""/home/markus/Coding/django/django/db/models/deletion.py"", line 245, in related_objects
    **{""%s__in"" % related.field.name: objs}
  File ""/home/markus/Coding/django/django/db/models/query.py"", line 781, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File ""/home/markus/Coding/django/django/db/models/query.py"", line 799, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File ""/home/markus/Coding/django/django/db/models/sql/query.py"", line 1199, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File ""/home/markus/Coding/django/django/db/models/sql/query.py"", line 1224, in _add_q
    current_negated=current_negated, connector=connector, allow_joins=allow_joins)
  File ""/home/markus/Coding/django/django/db/models/sql/query.py"", line 1129, in build_filter
    self.check_related_objects(field, value, opts)
  File ""/home/markus/Coding/django/django/db/models/sql/query.py"", line 1034, in check_related_objects
    self.check_query_object_type(v, opts)
  File ""/home/markus/Coding/django/django/db/models/sql/query.py"", line 1015, in check_query_object_type
    (value, opts.object_name))
ValueError: Cannot query ""Pony object"": Must be ""Pony"" instance.

----------------------------------------------------------------------
```

While debugging and trying to fix the first test (`test_alter_order_with_respect_to`) I added the following lines right before line 1260:

``` python
print(""Pony(old):"", id(project_state.apps.get_model(""test_alorwrtto"", ""Pony"")), ""Pony(new):"", id(new_state.apps.get_model(""test_alorwrtto"", ""Pony"")))
print(""Pony(old).apps:"", project_state.apps.get_model(""test_alorwrtto"", ""Pony"")._meta.apps, ""Pony(new).apps:"", new_state.apps.get_model(""test_alorwrtto"", ""Pony"")._meta.apps)
print(""Rider(old).apps:"", project_state.apps.get_model(""test_alorwrtto"", ""Rider"")._meta.apps, ""Rider(new).apps:"", new_state.apps.get_model(""test_alorwrtto"", ""Rider"")._meta.apps)
print(""Pony via Rider.pony(old):"", id(project_state.apps.get_model(""test_alorwrtto"", ""Rider"").pony.field.rel.to), ""Pony via Rider.pony(new):"", id(new_state.apps.get_model(""test_alorwrtto"", ""Rider"").pony.field.rel.to))
print(""Pony via Rider.pony(old).apps:"", project_state.apps.get_model(""test_alorwrtto"", ""Rider"").pony.field.rel.to._meta.apps, ""Pony via Rider.pony(new).apps:"", new_state.apps.get_model(""test_alorwrtto"", ""Rider"").pony.field.rel.to._meta.apps)
```

and got the following output

```
Pony(old): 42174888 Pony(new): 42185624
Pony(old).apps: <django.db.migrations.state.StateApps object at 0x7fce09ae87f0> Pony(new).apps: <django.db.migrations.state.StateApps object at 0x7fce09ae8a90>
Rider(old).apps: <django.db.migrations.state.StateApps object at 0x7fce09ae87f0> Rider(new).apps: <django.db.migrations.state.StateApps object at 0x7fce09ae8a90>
Pony via Rider.pony(old): 41647288 Pony via Rider.pony(new): 42185624
Pony via Rider.pony(old).apps: <django.db.migrations.state.StateApps object at 0x7fce09ae87f0> Pony via Rider.pony(new).apps: <django.db.migrations.state.StateApps object at 0x7fce09ae8a90>
```

What one can see: the ""Pony"" model in `new_state` is correctly refreshed and linked in the foreign key from ""Rider"". However, the ""Pony"" model in `project_state` (old state) differs from the one referenced by the foreign key from the old ""Rider"" model.

If anybody has an idea what I'm missing since a couple of hours, I'm grateful for any suggestions!
",MarkusH,None,2015-02-09T18:15:54Z,2015-02-16T18:46:06Z
4096,[1.8.x] Silenced deprecation warning in refs #24287 test.,,timgraham,None,2015-02-09T17:35:09Z,2015-02-09T17:51:27Z
4095,Missing space for timesince separator (es_MX),"This fixes times to read as: ""1 hora, 38 minutos"" instead of ""1 hora,38 minutos""
",Kronuz,None,2015-02-09T17:28:46Z,2015-02-09T17:52:03Z
4094,Update my email address in AUTHORS,"It changed ty
",jart,None,2015-02-09T14:02:44Z,2015-02-09T14:47:09Z
4093,Fixed #24302 -- Added DurationField.formfield(),,timgraham,None,2015-02-09T13:16:32Z,2015-02-09T15:21:39Z
4092,Unify local imports (consistency),"Inside `django.db.backends.mysql`, we can refer to `.schema`
instead of `django.db.backends.mysql.schema`.

This improves consistency with other similar imports.
",mvasilkov,None,2015-02-09T12:53:40Z,2015-02-09T13:24:15Z
4091,Simplify the implementation of lazy SQL queries in debug.,"This has similar performance implications as:
- 8099d33b6553c9ee7de779ae9d191a1bf22adbda
- 82e0cd15711c7171aed7af5e481967cc721c9642
",alex,None,2015-02-09T05:41:46Z,2015-02-09T05:57:04Z
4090,[WIP] Fixed #24200 -- Cleared statement cache on Oracle,"I've implemented statement cache purging for oracle, so we no longer have to close the connection when columns are altered. I didn't remove the feature incase other backends (third party) made use of it. Instead, I added an overridable function which backends can use to define the behaviour for what they do when django determines there are old columns that are being persisted.

I haven't done docs yet, but will do so if this is accepted.

As for testing, I couldn't figure out a way to write a test that stressed this function. I added a return statement to the top of `clear_old_columns` and ran most of the test suite (introspection, migrations, schema) and couldn't replicate any issues with stale column info.

If someone can give me an idea of how to write a test that'd fail without the persists old column feature, I'll add that in.

@shaib what are your thoughts here?
",jarshwah,None,2015-02-09T02:30:25Z,2015-02-10T00:02:53Z
4089,Admin views tests cleanups.,"Two cleanups in the `admin_view` tests.

The first one moves a test method from a case to a more appropriate one. The `test_custom_model_admin_templates` test made no sense in the `AdminViewPermissionsTest` case.

The second commit converts `AdminViewPermissionsTest` to use `setUpTestData` and use `client.login` and `logout` where the test isn't explicitly testing the login view behavior. I also moved the `test_delete_view` method definition to be with the other `test_(add|change|history)_view` ones.
",charettes,None,2015-02-09T01:16:53Z,2015-02-09T20:09:18Z
4088,Fixed #15779 -- Allowed 'add' primary key in admin edition,"Thanks Marwan Alsabbagh for the report.
",claudep,None,2015-02-08T19:57:29Z,2015-03-27T19:06:48Z
4087,"Fixed #17716 -- Prevented include('...', app_name='...') without a namespace.",,timgraham,None,2015-02-08T18:47:47Z,2015-02-12T13:29:51Z
4086,Added check_apps_ready() to Apps.get_containing_app_config(),,timgraham,None,2015-02-08T18:40:18Z,2015-02-08T19:53:07Z
4085,Simplify how the lazy CSRF token is implemented.,"This significantly improves performance on PyPy. The previous implementation would generate a new class on every single request, which is relatively slow.
",alex,None,2015-02-08T18:24:38Z,2015-05-22T17:27:07Z
4084,Do not generate a new lazy wrapper on each invocation.,"This dramatically improves performance on PyPy. The following benchmark:

```
python -mtimeit -s ""from django.utils.functional import allow_lazy; from django.utils.translation import ugettext_lazy; f = allow_lazy(lambda s: s, str)"" ""f(ugettext_lazy('abc'))""
```

goes from 390us per loop to 165us.
",alex,None,2015-02-08T18:15:21Z,2015-02-09T00:29:24Z
4083,Missing comma in Russian translation,,amyodov,None,2015-02-08T07:33:02Z,2015-02-08T17:08:37Z
4082,Updates to mod_wsgi documentation,"Added updates to mod_wsgi documentation. This was brought on by several days of my trying to figure out how to properly configure Apache to host a django site at a subdirectory `http://example.com/mydjangosite` and having everything work properly.

This ideally would become the defacto location to document this case for those seeking an answer:

http://stackoverflow.com/questions/18424852/configure-django-on-sub-directory/28244894 
http://serverfault.com/questions/563225/django-wsgi-application-in-a-subdirectory
http://stackoverflow.com/questions/1466708/run-django-with-url-prefix-subdirectory-app-works-but-urls-broken
http://stackoverflow.com/questions/1036186/django-apache-redirect-problem
...

In the end I was able to [answer](http://stackoverflow.com/questions/18424852/configure-django-on-sub-directory/28244894) this by stumbling upon [Graham Dumpleton's post](http://blog.dscpl.com.au/2012/10/requests-running-in-wrong-django.html).
",IanLee1521,None,2015-02-07T22:14:36Z,2015-03-13T00:10:21Z
4081,Fix #24181 -- THOUSAND_SEPARATOR strings are reversed,"Original patch by hannal. Fixes the reversed thousand_sep string bug with intcomma template tag in L10N.
",varunsharma,None,2015-02-07T21:52:08Z,2018-02-26T15:01:23Z
4080,Fixed #24299 -- Fixed ContentType creation error message,,sir-sigurd,None,2015-02-07T20:47:52Z,2015-10-22T05:56:14Z
4079,Revert #24075,"Reverted fix preventing a migration crash when unapplying `contrib.contenttypes`’s or `contrib.auth`’s first migration ([#24075](https://code.djangoproject.com/ticket/24075)) due to severe impact on test performance ([#24251](https://code.djangoproject.com/ticket/24251)) and problems in multi-database setups ([#24298](https://code.djangoproject.com/ticket/24298)).
",MarkusH,None,2015-02-07T18:37:18Z,2015-02-07T19:31:39Z
4078,Fixed #24254 -- Don't return extra select columns for subquery,"For a subquery to be valid, it cannot return more than one column, so we
don't want any extra columns.
",inglesp,None,2015-02-07T17:00:34Z,2015-08-15T23:24:30Z
4077,Fixed docs typo,,inglesp,None,2015-02-07T16:57:53Z,2015-02-07T17:46:51Z
4076,Replaced hardcoded URLs in admin_* tests,"Refs #15779.
",claudep,None,2015-02-07T15:54:23Z,2015-02-08T19:55:44Z
4075,Fixed #24278 - Fixed serialization of migration operations.,"Changed MigrationWriter _serialize_path to work with deconstructed
operations. Deconstruction of operations returns the name of the class
as the first value, not the full import path.
",knbk,None,2015-02-07T01:57:57Z,2015-04-05T18:31:00Z
4074,Fixed #15579 - Added ability to skip parent deletion while deleting a child,"https://code.djangoproject.com/ticket/15579

This is an example how this can be implemented.
If it is good-to-go, I will add some documentation.
",coldmind,None,2015-02-06T23:21:05Z,2015-03-17T12:34:16Z
4073,Fixed #24294 -- Updated staff_member_required decorator,"Updated staff_member_required decorator to work similarly to
login_required decorator -- handle both no-args and with-arguments
calls. Added
`test_staff_member_required_decorator_works_with_argument()` test.
",akulakov,None,2015-02-06T21:53:37Z,2015-03-02T18:26:49Z
4072,Fixed #24295 -- Allowed ModelForm meta to specify field classes.,,loic,None,2015-02-06T20:57:07Z,2015-02-13T12:15:34Z
4071,Fixed #24291 - Fixed migrations with unused swappable models,"Changed ModelState from_model to use an empty list if the model was an unused
swappable model.
",knbk,None,2015-02-06T14:01:43Z,2015-02-24T17:16:02Z
4070,Fixed #24275 -- Used autopep8 to format migration files,"After discussion on https://github.com/django/django/pull/4064
",darkryder,None,2015-02-06T13:59:56Z,2015-03-14T22:34:32Z
4069,Removed gather_profile_stats.py,"This script uses the unmaintained hotshot module (gone on Python 3)
and doesn't seem to be Django specific in any way.
",timgraham,None,2015-02-06T13:00:24Z,2015-02-06T13:16:07Z
4068,Hid Django installation message when verbosity is 0.,"This message was introduced to help people figure out quickly when they
aren't running the tests against the copy of Django they're editing.
There's no reason to display it when verbosity is set to 0. It defaults
to 1.
",aaugustin,None,2015-02-06T11:34:08Z,2015-02-06T11:57:11Z
4067,Removed old import aliases.,,timgraham,None,2015-02-05T23:43:33Z,2015-02-06T00:54:26Z
4066,Caused friendly error to be raised in case that Model is in a models.py ...,"...outside an installed app.

Ticket: https://code.djangoproject.com/ticket/24287#ticket
",jMyles,None,2015-02-05T22:11:59Z,2015-02-09T14:45:22Z
4065,Added UUIDField.deconstruct(),,timgraham,None,2015-02-05T21:14:27Z,2015-02-06T00:15:52Z
4064,Fixed #24275 - Migration files now comply with PEP8 line wrapping word limit by default [WIP],"I understand that there aren't any unit tests in this PR now. However this is just a checkpoint in order to get a review. I've verified the output of the clean method of the CleanWriter class for quite a few test files in the interactive shell.
",darkryder,None,2015-02-05T21:07:12Z,2015-02-06T14:20:02Z
4063,[WIP] Fixed #20461 -- Added support for running Django's test suite in parallel,,aaugustin,None,2015-02-05T20:44:03Z,2015-06-04T14:13:54Z
4062,Fixed #24225 -- Updated model states during related field deletion,"When a related field is deleted, the related model is updated. As
unchanged models are shared in migration states, this patch forces
the related model to be re-rendered so as the change applies to a
new copy of the related model.
",claudep,None,2015-02-05T17:20:19Z,2015-03-15T17:02:08Z
4061,Accelerated post_migrate signal in tests,"Refs #24251
",MarkusH,None,2015-02-05T13:39:25Z,2015-02-16T18:47:27Z
4060,Fixed #24285 -- Made for_user argument optional for {% get_admin_log %} tag ,"Using `{% get_admin_log 10 as admin_log %}` (without the `for_user` option) raises a `TypeError`: `
unorderable types: str() >= int()` (testing with Python 3.4.2 and Django 1.7.1).

The code had repeated the `.select_related('content_type', 'user')[:self.limit]` logic in two code branches (`if` and `else`) and in commit c2d59e55 (2002.10.14) one branch had a fix changing `self.limit` to `int(self.limit)`, but only in the `else` branch.
The problem was probably never discovered because the admin site only uses this template with the `for_user` option specified.
",yairchu,None,2015-02-05T13:22:15Z,2015-03-20T12:33:57Z
4059,Fixed #4960 -- Made form.CharField strip values,"Add ""strip"" option to CharField
Set ""strip"" option false for RegexField
",funkybob,None,2015-02-05T12:33:44Z,2015-07-01T21:47:34Z
4058,Improve handling of template backend loading exceptions,"See https://code.djangoproject.com/ticket/24265
",aaugustin,None,2015-02-05T10:55:55Z,2015-02-05T19:07:22Z
4057,Fixed test broken by 71ada3a8e689a883b5ffdeb1744ea16f176ab730.,"During direct assignment, evaluating the iterable before the transaction
is started avoids leaving the transaction dirty if an exception is raised.
This is slightly more wasteful but probably not enough to warrant a change
of behavior.
",loic,None,2015-02-05T09:34:43Z,2015-02-05T10:32:15Z
4056,Don't use nullable char fields in example.,"It's a bad idea to use nullable char fields, so let's have this just be `blank=True` in the example.
",tomchristie,None,2015-02-05T09:10:10Z,2015-02-05T10:41:39Z
4055,Added a test for refs #24279,"This issue was fixed in afe0bb7b13bb8dc4370f32225238012c873b0ee3.
",akaariai,None,2015-02-05T08:39:22Z,2015-02-06T12:44:26Z
4054,Added SQL to doc wordlist.,"(intentional error is for testing)
",timgraham,None,2015-02-05T01:57:49Z,2015-02-05T03:17:18Z
4053,Fixed #24146 -- Allowed model._meta.get_field() to be used after apps.models_ready,,PirosB3,None,2015-02-04T23:23:40Z,2015-02-11T02:47:17Z
4052,Fixed E265 comment errors.,"alternative to #4005 that simply removes most of the GIS comments.
",collinanderson,None,2015-02-04T21:59:49Z,2015-02-05T15:54:11Z
4051,Removed direct manipulation of settings in auth tests; refs #21230.,,timgraham,None,2015-02-04T14:57:51Z,2015-02-04T15:41:15Z
4050,docs: cross reference patches and new contributors pages,"Add a reference to submitting patches in the ""Write your first patch""
tutorial. This is useful because the page is the first result when searching
""django patches"" so that people looking for a reference of submitting patches
can find the relevant documentation.

For a similar reason reference in the ""Advice for new
contributors"" page the ""First django patch"" tutorial since it covers
the basics tools and workflow.
",xrmx,None,2015-02-04T14:46:27Z,2015-02-05T15:59:44Z
4049,Fixed #24241 - Fixed copying models in StateApps,"Fixed the issue that StateApps.clone did not create a copy of the
models in self.all_models. Changed copy method of all_models to use
a ModelState rather than deepcopy to create a new model class.

Ticket: https://code.djangoproject.com/ticket/24241
",knbk,None,2015-02-04T14:01:35Z,2015-02-21T22:23:36Z
4048,Fix docs typo.,"Noticed this while I was browsing around a bit.
",jschneier,None,2015-02-04T06:04:28Z,2015-02-04T12:34:50Z
4047,Refactored tests that rely on an ImportError for Python 3.5 compatibility,"A change in Python test discovery [1] causes the old packages that raised
an error to be discovered; now we use a common directory that's
ignored during discovery. Refs #23763.

[1] http://bugs.python.org/issue7559
",timgraham,None,2015-02-03T23:07:34Z,2015-02-03T23:31:51Z
4046,Fixed #24235 -- Removed is_usable attribute from template loaders.,,prestontimmons,None,2015-02-03T22:37:35Z,2015-02-04T12:49:02Z
4045,Fixed #15321 -- Honored ancestors unique checks.,,charettes,None,2015-02-03T20:51:20Z,2015-02-03T23:57:42Z
4044,Cleaned up formatting in template_tests.test_custom.,"This limits lines to 120, updates to direct imports, and splits the tests into a few test case.
",prestontimmons,None,2015-02-03T20:46:59Z,2015-02-04T14:49:15Z
4043,Fixed #24266 -- Changed get_parent_list to return a list ordered by MRO.,"Thanks to @ar45 for the initial patch.
",charettes,None,2015-02-03T20:18:30Z,2015-02-03T21:41:17Z
4042,"Added a ""Writing migrations"" how-to.",,timgraham,None,2015-02-03T18:10:52Z,2015-02-03T18:47:04Z
4041,Fixed #24112 -- Fixed counting of html elements if needle has no root element,"The `parse_html` method (at the bottom of test/html.py) creates a instance of Parser and feeds in the html. The parser starts with a RootElement and adds to it as it parses, meaning that what parse_html gets back always has an additional RootElement above the rest of the HTML. It then removes this if it can, ie, if the RootElement only has one child (ie, the given HTML had a root element of its own).

This means that if the html passed to `parse_html` has no root node, it will retain its RootElement from the parser.

We can then check this when counting to see if the needle HTML has multiple top level elements. If it does, then counting becomes much more fiddly, so my current patch just raises a ValueError.

There aren't any tests as I couldn't find any existing ones for this module. Should things within the `test` module get tests?
",plumdog,None,2015-02-03T15:37:08Z,2015-04-23T12:10:05Z
4040,"Fixed #14497 -- Improved admin widget for ""read only"" FileFields","Based on patch by Adam J Forster, Paul Collins and Julien.
",xrmx,None,2015-02-03T14:25:40Z,2015-02-04T14:07:14Z
4039,Fixed #24263 -- Prevented extra queries on BaseDateDetailView with a custom queryset.,"Thanks jekka-ua for the report and patch.
",timgraham,None,2015-02-03T13:48:22Z,2015-02-03T14:15:34Z
4038,"end sentence, and -ly in ordinals is superfluous","The second part i don't feel strongly about, but it feels out of place to me
as -ly in ordinals is considered superfluous. Especially in this case, as there
is no secondly, etc.
",minusf,None,2015-02-03T13:11:32Z,2015-02-03T17:27:50Z
4037,"new PO files don't contain ""CHARSET"", and are utf8 by default","a simple patch regarding the PO files charset `admonition` in `translation.txt`:
newly generated PO files do not contain the string CHARSET, but

`""Content-Type: text/plain; charset=UTF-8\n""`

and are UTF-8 by default.
",minusf,None,2015-02-03T12:50:02Z,2015-02-06T12:46:08Z
4036,Refs #24267 -- Implemented lookups for related fields,"Previously related fields didn't implement get_lookup, instead
related fields were treated specially. This commit removed some of
the special handling. In particular, related fields return Lookup
instances now, too.

Other notable changes in this commit is removal of support for
annotations in names_to_path(), and making relational fields, and
especially ForeignObjectRel subclasses a lot more like normal fields.
",akaariai,None,2015-02-03T08:18:34Z,2015-03-05T11:21:07Z
4035,Skip empty strings and Nones in MIDDLEWARE_CLASSES,"If we skip empty strings and Nones while loading middleware the code to
skip middleware in settings.py when DEBUG is set is trivial:

```
MIDDLEWARE_CLASSES = (
    ...
    '' if DEBUG else 'middlewareNotRequiredWhileDebugging',
)
```
",MattHardcastle,None,2015-02-02T23:34:07Z,2015-02-03T17:23:55Z
4034,Fixed #18651 -- Enable optional assignments for simple tag.,,prestontimmons,None,2015-02-02T20:31:01Z,2015-02-03T15:45:58Z
4033,Removed query.alias_diff(),"This function is unused since 6fe2b001dba45134d7c10729c57959995e241a88
",timgraham,None,2015-02-02T02:11:20Z,2015-02-02T02:38:46Z
4032,Removed Query.raise_field_error(),"This method was inadvertently reintroduced in
f59fd15c4928caf3dfcbd50f6ab47be409a43b01
",timgraham,None,2015-02-02T00:58:28Z,2015-02-02T01:27:05Z
4031,Removed InlineAdminForm.field_count(),"This method is unused since 337d102b8612503bb9dc712bfbf07432a9a96302
",timgraham,None,2015-02-02T00:36:39Z,2015-02-02T01:15:24Z
4030,(proof of concept) inspectdb database defaults,,collinanderson,None,2015-01-31T20:00:48Z,2015-01-31T23:49:31Z
4029,Fixed expressions test on Python 3.5; refs #23763.,,timgraham,None,2015-01-31T19:22:29Z,2015-02-02T01:11:39Z
4028,Update,"Update
",vamsi,None,2015-01-31T16:46:49Z,2015-01-31T16:50:09Z
4027,Fixed #24214 -- Replaced GeoQuerySet methods by database functions,"TODO: Oracle GIS backend
",claudep,None,2015-01-31T16:45:06Z,2015-04-24T17:25:55Z
4026,Fixed #24252 -- Forced lazy __str__ to unicode on Python 2,"Thanks Stanislas Guerra for the report.
",claudep,None,2015-01-31T15:08:00Z,2015-02-03T17:27:06Z
4025,Removed PostgreSQL DatabaseWrapper._set_isolation_level().,"This method is unused/untested since 8717b0668caf00ec5e81ef5a1e31b4d7c64eee8a.
",timgraham,None,2015-01-31T02:43:41Z,2015-01-31T16:09:35Z
4024,Fixed #24255 -- specify 'fields' parameter in modelformset_factory / inlineformset_factory examples,,gasman,None,2015-01-30T23:18:09Z,2015-02-02T15:48:10Z
4023,fix unbalanced parentheses,,MarkAWard,None,2015-01-30T17:34:02Z,2015-01-31T13:19:12Z
4022,Fixed #14483 -- Allowed using subqueries with GIS lookups,,claudep,None,2015-01-30T16:40:43Z,2015-01-30T19:28:19Z
4021,"Reverted ""Fixed #6785 -- Made QuerySet.get() fetch a limited number of rows""","This reverts commit da79ccca1d34f427952cce4555e598a700adb8de.

This optimized the unsuccessful case at the expense of the successful one.
",timgraham,None,2015-01-30T16:28:56Z,2015-01-30T17:53:24Z
4020,Fixed #23932 -- Added docs on how to migrate unique fields ,,akulakov,None,2015-01-30T14:49:38Z,2015-02-05T21:43:03Z
4019,Fixed #24208 -- Documented changes in private model relations.,,timgraham,None,2015-01-30T13:25:01Z,2015-01-31T16:03:18Z
4018,Fixed #24249 -- Improved field shadowing validation in model multi-inheritance,"Improve forbidding field shadowing in model
multi-inheritance more than one generation.
",ar45,None,2015-01-30T09:45:19Z,2015-07-20T17:29:37Z
4017,Fix custom fields doc,,akulakov,None,2015-01-29T21:59:00Z,2015-01-30T13:29:57Z
4016,Use `.format` for Python 3 compatibility,"This is recommended for Python 3. It would also be worth considering just doing something like `' '.join(self.first_name, self.last_name)` but I was trying to maintain the same semantics as the original code here.
",monokrome,None,2015-01-29T19:14:05Z,2015-01-30T00:56:52Z
4015,Removed ForeignObjectRel.get_lookup_constraint() (unused).,,timgraham,None,2015-01-29T17:54:55Z,2015-01-29T18:33:08Z
4014,Cleanup schema tests,,MarkusH,None,2015-01-29T14:51:44Z,2015-02-05T19:13:17Z
4013,Fixed #24052 -- Added note on ``dependencies`` property,"Added note on migrating data between models belonging to two separate
apps.
",akulakov,None,2015-01-29T14:51:27Z,2015-03-13T17:27:13Z
4012,Fixed #24164 -- Fixed Oracle GIS limited aggregation test failure.,,timgraham,None,2015-01-29T14:12:28Z,2015-01-30T11:35:49Z
4011,Fixes #24240 -- don't die when GZipping a Unicode StreamingHttpResponse.,"make_bytes() assumed that if the Content-Encoding header is set, then everything had already been dealt with bytes-wise, but in a streaming situation this was not necessarily the case.

make_bytes() is only called when necessary when working with a StreamingHttpResponse iterable, but by that point the middleware has added the Content-Encoding header and thus make_bytes() tried to call bytes(value) (and dies). If it had been a normal HttpResponse, make_bytes() would have been called when the content was set, well before the middleware set the Content-Encoding header.

This commit removes the special casing when Content-Encoding is set, allowing unicode strings to be encoded during the iteration before they are e.g. gzipped. This behaviour was added a long time ago for #4969 and it doesn't appear to be necessary any more, as everything is correctly made into bytes at the appropriate places.

Two new tests, to show that supplying non-ASCII characters to a StreamingHttpResponse works fine normally, and when passed through the GZip middleware (the latter dies without the change to make_bytes()). Removes the test with a nonsense Content-Encoding and Unicode input - if this were to happen, it can still be encoded as bytes fine.
",dracos,None,2015-01-29T10:04:34Z,2015-02-03T17:20:09Z
4010,Fixed #24242 -- Do not flush zfile each write.,"Flushing after every write can lead to the gzipped streamed content being larger than the original content; each flush adds a 5/6 byte type 0 block. Removing this means buf.read() may return nothing, so only yield if that has some data. Testing shows without the flush() the buffer is being flushed every 17k or so, and compresses the same as if it had been done as a whole string.
",dracos,None,2015-01-29T08:37:49Z,2015-02-04T18:12:55Z
4009,Sorted imports with isort.,"Refs #23860 and https://github.com/django/django/pull/4008.

This mostly takes the thinking out of an unimportant process and is one less thing to code review as we'll have this as on automated check on CI.

(pending feedback and a careful review)
",timgraham,None,2015-01-29T00:35:48Z,2015-02-06T13:21:05Z
4008,Fixed #23860 -- Documented import order convention.,"To give a taste of the automated results: https://github.com/django/django/pull/4009
",timgraham,None,2015-01-29T00:35:33Z,2015-02-06T20:24:35Z
4007,added warning on ``dependencies`` property when migrating data across tw...,"refs #24052
",akulakov,None,2015-01-28T18:48:43Z,2015-01-29T14:49:15Z
4006,Fixed #24231 -- Document Options.local_fields and app-registry requirements of Meta API.,,carljm,None,2015-01-28T18:21:57Z,2015-02-09T23:07:01Z
4005,Fixed flake8 E265 comments,,collinanderson,None,2015-01-28T17:49:08Z,2015-02-06T14:31:16Z
4004,[1.4.x] Fixed #24238 -- Removed unused WSGIRequestHandler.get_environ(),"Also moved the test as it wasn't running.
",timgraham,None,2015-01-28T17:33:32Z,2015-01-28T18:18:44Z
4003,Removed threading fallback imports.,"Django imports threading in many other places without fallback.
",timgraham,None,2015-01-28T14:56:56Z,2015-01-28T15:29:36Z
4002,Refs #24236 - Defined internal type explicitly for related fields,"https://code.djangoproject.com/ticket/24236

As for me, this problem exists because fore related fields internal type is not defined.
For example, if I want to inherit these fields to add some minor changes, I will need to define internal type manually.

This also needs to be backported to 1.7/1.8
",coldmind,None,2015-01-28T14:51:38Z,2015-03-02T13:56:16Z
4001,Fixed #24223 - SessionMiddlewareTests now use django.test.TestCase,"See https://code.djangoproject.com/ticket/24223 for more info
",matt-leach,None,2015-01-28T14:08:08Z,2015-01-30T01:20:54Z
4000,Removed pickle import dance.,"six already falls back appropriately.
",timgraham,None,2015-01-28T13:53:34Z,2015-01-29T18:42:10Z
3999,Fixed #23617 -- Added get_pk_value_on_save(),"The method is mainly intended for use with UUIDField. For UUIDField we
want to call the field's default even when primary key value is
explicitly set to None to match the behaviour of AutoField.
",akaariai,None,2015-01-28T11:52:27Z,2015-02-03T14:26:25Z
3998,[1.7.x] Fixed #24236 -- Treated inherited m2m fields as such if they don't define get_internal_type(),"https://code.djangoproject.com/ticket/24236
",MarkusH,None,2015-01-28T11:27:00Z,2015-02-09T16:31:09Z
3997,Fixed #24230: Added translated name to language info dictionary.,"See https://code.djangoproject.com/ticket/24230 for more info.
",tricoder42,None,2015-01-28T09:53:23Z,2015-06-02T20:06:02Z
3996,"Clean up ""many"" relational descriptors.",,loic,None,2015-01-28T03:27:02Z,2015-02-16T13:41:15Z
3995,Fixed #24229 -- Validate floats representing integers as integers.,,jdufresne,None,2015-01-27T21:06:44Z,2016-03-13T23:03:55Z
3994,Refs #24154 -- Added deprecation release notes,,jarshwah,None,2015-01-27T04:32:35Z,2015-01-27T04:39:47Z
3993,[1.9] Fixed #24053 -- removed css related to IE6&7,"Removed the main IE6&7 css file from the admins page.
Also removed the image related to the css file ""inline-delete-8bit.png"",
as well as the line from the template that included the css file:
django/contrib/admin/templates/admin/base.html
",seanwestfall,None,2015-01-27T04:08:27Z,2015-01-28T19:50:21Z
3992,Fixed #24168 -- Allowed selecting a template engine in a few APIs.,"Specifically in rendering shortcuts, template responses, and class-based
views that return template responses.
",aaugustin,None,2015-01-26T20:58:26Z,2015-02-03T07:34:55Z
3991,Removed versionadded/changed notes for 1.7.,,timgraham,None,2015-01-26T20:50:23Z,2015-02-02T02:05:23Z
3990,Fixes #24221 - Use precompiled regexp for percent-placeholder matching.,"See https://code.djangoproject.com/ticket/24221 for more info.
",tricoder42,None,2015-01-26T10:24:56Z,2015-01-26T16:46:57Z
3989,Fixed #24220 - Allowed lazy objects for success_url,"See https://code.djangoproject.com/ticket/24220 for more info
",tricoder42,None,2015-01-26T10:11:08Z,2015-01-26T17:42:18Z
3988,Changed Azerbaijani language name in Django locales,"Changed Azerbaijani language name for Django locales

Azerbaijani language name is not correct, so it displays wrong in language switcher. First letter should be upper case and all open source communities in Azerbaijan are using 'Azərbaycanca' as language name (Mozilla, RoR, Ubuntu and etc.).
",mastizada,None,2015-01-26T01:08:05Z,2015-01-28T11:48:56Z
3987,[1.4.x] Fixed #24158 -- Allowed GZipMiddleware to work with streaming responses,"Backport of django.utils.text.compress_sequence and fix for
django.middleware.gzip.GZipMiddleware when using iterators as
response.content.
",kilrogg,None,2015-01-25T22:26:05Z,2015-01-27T00:24:37Z
3986,Fixed #24219 -- Deprecated django.forms.extras.,,loic,None,2015-01-25T15:48:31Z,2015-01-27T15:43:21Z
3985,Fixed #24197 -- Handled staticfiles settings changes during tests,"Cleared caching in staticfiles_storage and get_finder when relevant settings are changed.

See https://code.djangoproject.com/ticket/24197

Note that changes to `STATICFILES_FINDERS` were already handled but I added a test for it mostly for completeness.

I didn't add a minor release note since I wasn't sure if it was necessary for this clean up/bug fix. Also I wasn't sure whether this would be back ported to 1.8.X or whether it would land in 1.9. Happy to add it as needed.
",mlavin,None,2015-01-25T15:10:47Z,2015-02-04T15:54:56Z
3984,Fixed #24215 -- Refactor of lazy model operations,"See Trac ticket at https://code.djangoproject.com/ticket/24215.
",AlexHill,None,2015-01-24T15:48:04Z,2015-08-03T23:41:54Z
3983,[1.8.alpha1] Fixed #24209 -- Wrong configured encoded headers RFC 2231,"This fixes wrongly configured Content-type headers as per RFC 2231.

Not sure what we want to do when the header is of the type:

```
title*='This%20is%20%2A%2A%2Afun%2A%2A%2A
```

As per RFC I think we should raise a Wrong Header Exception as RFC says that the two delimiters `'`` MUST be present. (The current behaviour is continue silently as you can see at the unit tests):

```
   Note also that the single quote
   delimiters MUST be present even when one of the field values is
   omitted.  This is done when either character set, language, or both
   are not relevant to the parameter value at hand.  This MUST NOT be
   done in order to indicate a default character set or language --
   parameter field definitions MUST NOT assign a default character set
   or language.
```

We also do not implement the section 4.1 of the RFC. I can raise a PR with section 4.1:
http://tools.ietf.org/html/rfc2231#section-4.1 
",raulcd,None,2015-01-24T12:22:22Z,2015-01-27T19:16:41Z
3982,[1.7.x] Fixed #24104 - Fixed check to look on field internal type instead of class instance,"https://code.djangoproject.com/ticket/24104

Backport of #3865 to 1.7.x
",coldmind,None,2015-01-23T22:24:34Z,2015-01-27T14:38:09Z
3981,Fixed #24205 -- Deprecated Signal.disconnect weak parameter.,,timgraham,None,2015-01-23T17:43:12Z,2015-01-23T19:59:54Z
3980,Fixed test_runner test failure on Python 3.5; refs #23763.,"Python change is http://bugs.python.org/issue22032
",timgraham,None,2015-01-23T13:30:29Z,2015-01-23T21:42:39Z
3979,Fixed #24207 -- Changed multi_geom default to TRUE,"setting a better default value to reduce errors.   To remove  gtype check because gdal cannot always guess if multi or not.   Reason is the multi- will always work with layermapper and non multi will NOT on import.  For example it does not work on Shapefiles with both mulit and non multi geometries.
",mdiener21,None,2015-01-23T10:22:45Z,2015-03-04T18:51:59Z
3978,[1.6.x] Fixed #4444 - Made runserver suppress 'broken pipe' errors,"One handler in WSGIServer, to catch the error when raised from
SocketServer.BaseServer's finish_request, and one in WSGIRequestHandler
(by creating a subclass of ServerHandler), to catch the error when
raised in wsgiref.handlers.BaseHandler's finish_response.

(cherry picked from commit 9253042d53d61b23b3f727a00c41e8089be73836)

---

Backporter note: is this the correct way to get patches backported to still supported versions? Shall I do the same for 1.7?
",jaywink,None,2015-01-23T08:07:33Z,2015-01-23T12:35:34Z
3977,Split staticfiles tests in multiple files,"I made this pull request based on a suggestion made by @timgraham, to improve the structure of the staticfiles test files.

This PR split the tests.py file in multiple files according its scope. Follow the suggested structure:

test_base.py

```
BaseStaticFilesTestCase(object)
StaticFilesTestCase(BaseStaticFilesTestCase, TestCase)
BaseCollectionTestCase(BaseStaticFilesTestCase)
CollectionTestCase(BaseCollectionTestCase, StaticFilesTestCase)
TestDefaults(object)
TestHashedFiles(object)
```

test_collections.py

```
TestFindStatic(CollectionTestCase, TestDefaults)
TestCollection(CollectionTestCase, TestDefaults)
TestCollectionClear(CollectionTestCase)
TestCollectionExcludeNoDefaultIgnore(CollectionTestCase, TestDefaults)
TestNoFilesCreated(object)
TestCollectionDryRun(CollectionTestCase, TestNoFilesCreated)
TestCollectionFilesOverride(CollectionTestCase)
TestCollectionNonLocalStorage(CollectionTestCase, TestNoFilesCreated)
TestCollectionCachedStorage(TestHashedFiles, BaseCollectionTestCase, BaseStaticFilesTestCase, TestCase)
TestCollectionManifestStorage(TestHashedFiles, BaseCollectionTestCase, BaseStaticFilesTestCase, TestCase)
TestCollectionSimpleCachedStorage(BaseCollectionTestCase, BaseStaticFilesTestCase, TestCase)
TestCollectionLinks(CollectionTestCase, TestDefaults)
```

test_liveserver.py

```
LiveServerBase(StaticLiveServerTestCase)
StaticLiveServerChecks(LiveServerBase)
StaticLiveServerView(LiveServerBase)
```

tests.py

```
TestConfiguration(StaticFilesTestCase)
TestTemplateTag(StaticFilesTestCase)
CustomStaticFilesStorage(storage.StaticFilesStorage)
TestStaticFilePermissions(BaseCollectionTestCase, StaticFilesTestCase)
```

test_serve.py

```
TestServeStatic(StaticFilesTestCase)
TestServeDisabled(TestServeStatic)
TestServeStaticWithDefaultURL(TestServeStatic, TestDefaults)
TestServeStaticWithURLHelper(TestServeStatic, TestDefaults)
TestServeAdminMedia(TestServeStatic)
```

test_finder.py

```
FinderTestCase(object)
TestFileSystemFinder(StaticFilesTestCase, FinderTestCase)
TestAppDirectoriesFinder(StaticFilesTestCase, FinderTestCase)
TestDefaultStorageFinder(StaticFilesTestCase, FinderTestCase)
TestMiscFinder(TestCase)
```
",diegoguimaraes,None,2015-01-23T02:41:27Z,2015-07-13T18:09:12Z
3976,Fix #24204 - Add character remaining count to fields with maxlengths,"I have a bunch of questions/would like review.
- Proper placement of the chars remaining and if it needs to be that much text (maybe just a character count instead of the phrase ""character(s) remaining"") since it looks a bit cluttered.

![chars_remaining](https://cloud.githubusercontent.com/assets/2245080/5866311/097afe50-a25e-11e4-87b1-5a4dd872f9bf.png)
- Should this also be used for email fields. The email widget is the same as the TextInput widget currently in admin.contrib.widgets.
- Should styling be separated out like that, it doesn't look as through there is any separate css styling in the admin.contrib.widgets file.
- General implementation, I had to duplicate the code from forms.widgets.

Also a shout out to https://github.com/timmyomahony/django-charsleft-widget from which I got the original idea.
",jschneier,None,2015-01-22T22:26:48Z,2015-01-23T01:08:44Z
3975,Fixed #24201 -- Added order_with_respect_to support to GenericForeignKey,"See Trac ticket at https://code.djangoproject.com/ticket/24201.
",AlexHill,None,2015-01-22T21:19:57Z,2015-08-27T13:22:11Z
3974,Isolated a flatpages test; refs #11505.,,timgraham,None,2015-01-22T20:26:02Z,2015-01-22T20:50:32Z
3973,Fixed #24149 -- Normalized tuple settings to lists.,"- Normalized all the tuples in the settings to tuples
- Fixed documentation for the changed parameters
- I'll squash all the commits after and if this PR is verified.
",darkryder,None,2015-01-22T20:21:31Z,2015-02-03T20:07:34Z
3972,#24203 adding multiple fields to same model should attempt to run single ALTER TABLE statement,"Initial ideas for how this could be optimised. Origin: https://code.djangoproject.com/ticket/24203
",peterlauri,None,2015-01-22T19:30:06Z,2015-01-22T19:32:16Z
3971,Fixed #24210 Cleaned up relational fields __init__().,,loic,None,2015-01-22T15:57:23Z,2015-01-27T15:37:27Z
3970,1.5.x backports of security fixes,,bmwiedemann,None,2015-01-22T10:48:29Z,2015-01-22T11:42:45Z
3969,Fixed #23940 -- Removed an explicit __exact lookup.,"refs #23940
",charettes,None,2015-01-22T06:45:21Z,2015-01-29T19:45:13Z
3968,fixes #15321,"Models._get_unique_checks() does not
return grandparents' unique checks
",ar45,None,2015-01-22T03:18:24Z,2015-02-03T20:54:48Z
3967,Fixed #24184 -- Prevented automatic soft-apply of migrations regardless of the schema differences,"https://code.djangoproject.com/ticket/24184
",MarkusH,None,2015-01-21T23:19:27Z,2015-02-13T13:46:57Z
3966,[1.7.x] Prevented unclose file warnings using StreamingHttpResponse #3965,,collinanderson,None,2015-01-21T22:36:04Z,2015-01-22T08:04:52Z
3965,[1.7.x] Fixed #24193 -- Prevented unclosed file warnings in static.serve(),"This regression was caused by 818e59a3f0. The patch is inspired
by the FileResponse class in later Django versions.
",claudep,None,2015-01-21T20:03:01Z,2015-01-23T08:02:25Z
3964,Removed inaccurate docstring from dispatcher.py and deprecated an unused...,"... argument from disconnect.
",apollo13,None,2015-01-21T18:27:37Z,2015-01-23T17:50:23Z
3963,Fixed #24211 -- Removed ValuesQuerySet() and ValuesListQuerySet().,,loic,None,2015-01-21T16:36:09Z,2015-01-30T15:06:38Z
3962,Fixed small inconsistency when handling aggregate's default_alias.,"Refs #14030.
",loic,None,2015-01-21T05:48:58Z,2015-01-21T17:47:28Z
3961,Fixed #24190 -- Clarified len(queryset),"https://code.djangoproject.com/ticket/24190
",collinanderson,None,2015-01-20T15:23:14Z,2015-01-24T15:18:49Z
3960,Refs #24163 -- Fixed failing Oracle test when migrating from FK to O2O,,MarkusH,None,2015-01-20T13:23:17Z,2015-01-20T16:45:16Z
3959,Update django.contrib.auth.decorators.py,"Having a default `login_url` of `settings.LOGIN_URL` is a bit more explicit and readable than giving it a default value of `None` and later in `_wrapped_view` resolving the `login_url` or `settings.LOGIN_URL` if the first was none. 

`login_required` and `permission_required` don't really need to be changed, but it's better for consistency.
",syndbg,None,2015-01-20T12:39:12Z,2015-01-20T15:01:18Z
3958,Fixes #24169 -- More arrayfield specific lookups.,"varchar()[] cannot compare itself to text[]

Thanks to joelburton for the patch.
",mjtamlyn,None,2015-01-20T09:54:01Z,2015-01-20T10:23:06Z
3957,Fixed #23617 -- Documented caveats with pk=UUIDField.,"Setting another field type than AutoField as the primary key does not necessarily guarantee AutoField like behaviour.
",mjtamlyn,None,2015-01-20T09:23:20Z,2015-01-30T19:39:37Z
3956,Fixed typos,,ataylor32,None,2015-01-20T05:19:53Z,2015-01-20T17:19:06Z
3955,Fixed a query failure on Python 3.5; refs #23763.,"The failure was introduced in Django by
c7fd9b242d2d63406f1de6cc3204e35aaa025233 and the change in
Python 3.5 is https://hg.python.org/cpython/rev/a3c345ba3563.

Sample test failure:

```
======================================================================
ERROR: test_tickets_1878_2939 (queries.tests.Queries1Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/tim/code/django/tests/queries/tests.py"", line 217, in test_tickets_1878_2939
    self.assertEqual(Item.objects.values('creator').distinct().count(), 3)
  File ""/home/tim/code/django/django/db/models/query.py"", line 313, in count
    return self.query.get_count(using=self.db)
  File ""/home/tim/code/django/django/db/models/sql/query.py"", line 447, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File ""/home/tim/code/django/django/db/models/sql/query.py"", line 405, in get_aggregation
    for alias, expression in inner_query.annotation_select.items():
  File ""/home/tim/code/cpython/Lib/_collections_abc.py"", line 509, in __iter__
    for key in self._mapping:
  File ""/home/tim/code/cpython/Lib/collections/__init__.py"", line 112, in __iter__
    yield curr.key
AttributeError: 'NoneType' object has no attribute 'key'
```
",timgraham,None,2015-01-20T02:11:19Z,2015-01-20T13:15:47Z
3954,Fixed #24183 -- Fixed wrong comparisons in Substr,"Parameters were not being checked correctly, so it wasn't possible to use expressions as arguments for  `pos` or `length`.
",jarshwah,None,2015-01-20T00:48:50Z,2015-01-20T01:10:39Z
3953,Fixed #24153 -- Fixed cookie test compatibility with Python 3.4.3+,,timgraham,None,2015-01-19T20:15:25Z,2015-01-29T17:33:55Z
3952,Updated my e-mail address in AUTHORS.,,jwilk,None,2015-01-19T20:15:06Z,2016-03-13T18:56:16Z
3951,Fixed #24163 -- Removed unique constraint after index on MySQL,"https://code.djangoproject.com/ticket/24163
",MarkusH,None,2015-01-19T14:36:04Z,2015-01-19T15:54:48Z
3950,Cleaned up expressions,"Fixes some cruft that was accidentally left in. Adds repr methods to the majority of expressions. Renames CombinableMixin to Combinable.

I was also going to add a commit to introduce the concept of Resolvable, but it was unclear which methods should be moved to that type, and it unnecessarily complicated the implementation so I ditched the idea.

I can split the changes here into multiple commits if need be, and add tickets for each one also.
",jarshwah,None,2015-01-19T11:49:32Z,2015-01-28T00:02:05Z
3949,Fixed incorrect method used: validate instead of check,"In previous commits changed the call of check to validate. That generates errors because of no method called validate is present in current class or parent.
",olivergs,None,2015-01-19T09:57:05Z,2015-01-19T11:27:40Z
3948,Fixed #24170 -- Implemented decompress for BaseRangeField widgets,"Introduce a new range widget `RangeWidget` to be used for BaseRangeField as part of new Postgres ranges supported.

Suggested by @charettes [here](https://code.djangoproject.com/ticket/24170#comment:3)
",ngzhian,None,2015-01-19T00:14:35Z,2015-01-23T00:42:06Z
3947,Fixed #24174 -- Fixed extra order by descending,"Fixed a regression where the ordering direction was ignored for extra(order_by=..) where the table name was also referenced:

```
.extra(order_by=['-table.col'])
```
",jarshwah,None,2015-01-18T23:39:23Z,2015-01-19T01:53:26Z
3946,fixed #24177 - doc inspectdb database view support,"Fix https://code.djangoproject.com/ticket/24177#ticket
",luzfcb,None,2015-01-18T22:01:55Z,2018-04-24T04:40:13Z
3945,Removed legacy ORM lookup support per deprecation timeline; refs #16187.,"deprecated in 20bab2cf9
",timgraham,None,2015-01-18T20:03:09Z,2015-01-19T16:12:43Z
3944,Removed IPAddressField per deprecation timeline; refs #20439.,,timgraham,None,2015-01-18T01:51:31Z,2015-01-19T16:18:54Z
3943,Fixed #24155 -- Maintained kwargs and import order in migration writer,"https://code.djangoproject.com/ticket/24155
",MarkusH,None,2015-01-17T19:42:18Z,2015-01-20T00:55:21Z
3942,Fixed #18773 -- Added logging for template variable resolving,"Added a django.template logger with a default console handler.  Added
logging if there is an exception while resolving variables in a
template. Added corresponding tests and updated logging
documentation. Updated AdminField to prevent colsole output about
is_readonly not being defined.
",cpsimpson,None,2015-01-17T18:38:34Z,2015-03-27T23:25:57Z
3941,Fixed #22423 -- Leveraged MySQL 5.6 spatial functions,"Thanks Viswanathan Mahalingam for the report and initial patch.
",claudep,None,2015-01-17T15:32:33Z,2018-04-09T12:40:49Z
3940,Fix for Persian locale params,"Reference: http://lh.2xlibre.net/locale/fa_IR/
",remohammadi,None,2015-01-17T13:55:41Z,2015-01-31T19:26:11Z
3939,Fixed #24154 -- Backends can now check support for expressions,"This fixes a bug where complex aggregates may not have been checked by the backend. It also extends the utility to all expression types that may need to be checked.

Obviously correct expressions like `Col` do not opt in to checking - since they will work across all backends.

There are no docs because this is not a public API. 3rd party expressions should not opt into checking, because backends can not know if they are supported or not.

The backend method `check_aggregate_support` has been renamed to `check_expression_support` and a warning inserted. Unsure whether or not this should be documented in release notes separately, or just as part of #24106.
",jarshwah,None,2015-01-17T05:12:11Z,2016-12-31T19:00:51Z
3938,Fixed #22232 -- Raised custom exception for recursive template extends,"Fixed the RuntimeError Recursion Depth Exceeded caused in the case of templates being loaded cyclicly.
Added tests for template extension using variable names as well as constant file names.
",darkryder,None,2015-01-17T04:17:03Z,2015-03-14T20:35:22Z
3937,Fixed #24165 -- Added request.messages,"https://code.djangoproject.com/ticket/24165
",collinanderson,None,2015-01-17T03:45:55Z,2015-01-18T18:07:53Z
3936,Fixed typo in 'Django Template Language',,davidrobles,None,2015-01-17T01:48:23Z,2015-01-17T02:06:21Z
3935,Cleaned up migration writer tests,,MarkusH,None,2015-01-17T00:08:48Z,2015-01-17T19:30:54Z
3934,Removed some compatibility bits for Python 3.2.,,timgraham,None,2015-01-16T23:50:14Z,2015-01-17T14:02:26Z
3933,Fix typo in Response object description.,,rickhutcheson,None,2015-01-16T22:51:03Z,2015-01-16T23:18:36Z
3932,Fixed #24161 -- Stored the user primary key as a database prepared value,"refs #19463

Thanks to Trac alias jamesbeith for the report.
",charettes,None,2015-01-16T21:31:00Z,2019-03-16T21:43:32Z
3931,Fixed #24092 -- Widened base field support for ArrayField.,"rebased from https://github.com/django/django/pull/3878
",timgraham,None,2015-01-16T20:02:56Z,2015-01-16T21:16:41Z
3930,Fixed #24160 -- Fixed test suite error on Windows,"https://code.djangoproject.com/ticket/24160
",collinanderson,None,2015-01-16T16:43:09Z,2015-01-16T17:04:08Z
3929,Changed some tuples into lists in the docs,"https://groups.google.com/d/msg/django-developers/h4FSYWzMJhs/ljiHfyPkwPQJ
",collinanderson,None,2015-01-16T15:31:27Z,2015-01-19T17:23:08Z
3928,Fix typo in template caching doc,"Noticed this while reading the docs for django.core.cache.utils.make_template_fragment_key.  I did not check the code, but it makes sense for the objects in the _vary_on_ arguments to be strings.
",merwok,None,2015-01-15T22:09:13Z,2015-01-19T18:51:07Z
3927,Fixed #897 -- [WIP] Reverse m2m in model forms and the admin,"https://code.djangoproject.com/ticket/897
",collinanderson,None,2015-01-15T22:08:34Z,2015-03-13T21:22:24Z
3926,Refs #24148 -- Documented the bug with case expressions in SQLite < 3.7....,"...0

I've done some testing, and SQLite 3.7.0 is the first version where the failing test case passes.
",michalmo,None,2015-01-15T21:48:16Z,2015-01-16T00:43:19Z
3925,Make expresison tests work without Pillow,,collinanderson,None,2015-01-15T17:41:50Z,2015-01-15T19:03:56Z
3924,Fixed #23850 -- Fixed a migrations test failure on Mac OSX & Python 3,"https://code.djangoproject.com/ticket/23850
",collinanderson,None,2015-01-15T16:05:52Z,2015-01-16T00:47:39Z
3923,Fixed #24135 -- Made RenameModel rename many-to-many tables.,"https://code.djangoproject.com/ticket/24135
",timgraham,None,2015-01-15T14:57:12Z,2015-01-16T01:40:21Z
3922,Simplified a bit GeoAggregate classes,,claudep,None,2015-01-15T12:26:44Z,2015-01-16T09:43:50Z
3921,Fixed #23935 -- Example Failing test case.,"https://code.djangoproject.com/ticket/23935
",collinanderson,None,2015-01-15T02:08:55Z,2015-01-15T20:06:39Z
3920,Fixed #24152 -- Deprecated GeoQuerySet aggregate methods,,claudep,None,2015-01-14T21:40:36Z,2015-01-16T18:55:00Z
3919,Fixed incorrect error message,"(sorry about the double pull request here. replaces #3916)
",collinanderson,None,2015-01-14T18:43:33Z,2015-01-14T19:51:26Z
3918,Fixed #24146 -- Allow using get_field() early in the process,"https://code.djangoproject.com/ticket/24146
",collinanderson,None,2015-01-14T18:32:04Z,2015-01-17T10:00:45Z
3917,Moved check_aggregate_support to BaseSpatialOperations,,claudep,None,2015-01-14T18:24:48Z,2015-01-14T21:40:14Z
3916,Fixed incorrect error message in get_fields().,,collinanderson,None,2015-01-14T18:15:14Z,2015-01-14T18:44:16Z
3915,Fixed #20488 -- Added copy and move methods to the storage API,#NAME?,kux,None,2015-01-14T17:24:07Z,2015-03-05T13:40:33Z
3914,Removed unused import,,claudep,None,2015-01-14T08:15:10Z,2015-01-14T08:32:12Z
3913,Fixed #24147 -- Prevented managers leaking model during migrations,"https://code.djangoproject.com/ticket/24147
",MarkusH,None,2015-01-13T17:22:26Z,2015-01-14T15:14:09Z
3912,Fixed #24146 -- Allow using get_field() early in the process,"https://code.djangoproject.com/ticket/24146

This would modify the API (maybe there's a better way to do this).

I also don't know a good way to test this. There's a good `books_contributed` example model, but the admin checks need to run on it.
",collinanderson,None,2015-01-13T17:18:01Z,2015-01-14T18:34:22Z
3911,tweaked a bad model example,,collinanderson,None,2015-01-13T16:28:56Z,2015-01-13T16:54:26Z
3910,Fixed #24136 -- Prevented crash when convert_extent input is None,"Thanks Max Demars for the report.
",claudep,None,2015-01-13T16:06:37Z,2015-01-13T16:45:51Z
3909,Read and write support for pixel values in GDALBands,"- Allow instantiation of GDALRasters from json/dict data
- Added read and write support for GDALBand pixel values throught `data` attribute.
- Added setter functions for some other `GDALRaster` and `GDALBand` properties: `srs`, `geotransform`, `nodata_value`.
- Support for `GDALFlushCache` in gdal C prototypes
- Added private flush method to GDALRaster to make sure all
  data is written to files when file-based rasters are changed.
- Replaced `.ptr` with `._ptr` for internal pointer attribute

The idea behind the instantiation of GDALRasters from `json` or `dict`  data is to have a flexible way of converting DB values into GDALRaster instances.

PostGIS Rasters, SpatialLite Rasters and Oracle GeoRasters are all defined quite differently and do not follow a common standard. This is why the instanciation of GDALRasters needs to be flexible, the idea is to have the DB wrappers/adapters to convert the differnt output from the databases into a common format: a dictionary with the parsed data.

Refs #23804.
",yellowcap,None,2015-01-13T16:03:15Z,2015-03-22T18:31:09Z
3908,Fixed #24145 -- Changed POST redirect error to be raised on PUT and PATCH too,"ref #24145
",samuelcolvin,None,2015-01-13T13:42:48Z,2015-01-29T20:24:28Z
3907,Fixed #24143 - Changed Http404 usages in docs to use instantiated versions,"Preferring `raise Http404(""message"")` over `raise Http404`
",kezabelle,None,2015-01-13T08:22:06Z,2015-01-16T14:42:14Z
3906,Efficient QuerySet.__contains__,"Doing `x in qs` current involves iterating over every single row in the
database. This allows the search to be done in the database with the
indexed primary key.
",gormster,None,2015-01-13T06:27:03Z,2015-01-13T07:16:44Z
3905,Replaced inner functions by class methods.,"refs #24031
",charettes,None,2015-01-13T00:57:37Z,2015-01-15T18:07:56Z
3904,Fixed #24099 -- Removed contenttype.name deprecated field,"Ticket: https://code.djangoproject.com/ticket/24099
Supersedes: https://github.com/django/django/pull/3858
",MarkusH,None,2015-01-13T00:48:25Z,2015-01-16T19:26:07Z
3903,Fixed #24139 -- Evaluate reason_phrase on demand based on status_code.,,jdufresne,None,2015-01-12T22:49:03Z,2016-03-13T23:03:49Z
3902,Fixed #24137 -- Use default reason phrases from HTTP standard.,,jdufresne,None,2015-01-12T22:13:51Z,2016-03-13T23:03:55Z
3901,Fixes #24138 - make modelform_factory public,,jschneier,None,2015-01-12T21:52:49Z,2015-01-12T22:45:07Z
3900,Fixed #24124 -- Used default context_processors in tests.,"Patch from Aymeric

https://code.djangoproject.com/ticket/24124
",collinanderson,None,2015-01-12T21:27:31Z,2015-01-12T21:37:59Z
3899,Fixed #22603 -- Organized django.db.backends classes,"Not sure if `DatabaseWrapper` classes should remain in `base.py` or if it's more clear to have them in a new `wrapper.py` file as I've done. Some `base.py`'s have version checking logic so it seemed a bit cleaner to have the wrapper separated from that, and also every other `DatabaseFoo` class is in `foo.py`.
",timgraham,None,2015-01-12T20:23:44Z,2015-01-14T19:19:01Z
3898,Refs #14645 -- Documented bug with exclude() and multi-value relations,"Described in this ticket: https://code.djangoproject.com/ticket/14645
",seddonym,None,2015-01-12T16:13:00Z,2015-03-25T17:42:24Z
3897,Fixed #24124 -- Changed context_processors in the default settings.py,"https://code.djangoproject.com/ticket/24124
https://groups.google.com/d/topic/django-developers/WlK_7OoThaQ/discussion
",collinanderson,None,2015-01-12T15:50:14Z,2015-01-12T18:22:46Z
3896,Made Django's templates get their own language variables.,"Refs #24117

This is the minimum change needed for the current context_processors proposal.

https://code.djangoproject.com/ticket/24117
",collinanderson,None,2015-01-12T13:30:48Z,2015-01-12T15:56:57Z
3895,Fixed #24133 -- Replaced formatting syntax in success_url placeholders,"Thanks Laurent Payot for the report.
",claudep,None,2015-01-12T11:04:05Z,2015-01-12T21:52:19Z
3894,Fixed #24075 -- Prevented running post_migrate signals when unapplying initial migrations of contenttypes and auth,"https://code.djangoproject.com/ticket/24075
",MarkusH,None,2015-01-12T01:55:57Z,2015-01-14T20:12:57Z
3893,Mention flup6 for deploying on FastCGI + Python 3.x.,"See ticket: https://code.djangoproject.com/ticket/24130
",davidfstr,None,2015-01-11T20:22:41Z,2015-01-11T20:36:50Z
3892,Updated supports_binary_field flag for MySQL-Python3,"The current recommended MySQL driver for Python 3 (mysqlclient)
does support binary fields. Refs #20377.
",claudep,None,2015-01-11T20:21:44Z,2015-01-22T13:59:22Z
3891,Fixed #24129 -- Added indicator that migrations are rendering the initial state,"https://code.djangoproject.com/ticket/24129

The first commit is part of #3890 
",MarkusH,None,2015-01-11T20:20:39Z,2015-01-12T18:25:51Z
3890,Fixed #24123 -- Used all available migrations to generate the initial migration state,"Thanks Collin Anderson for asking me the right questions

https://code.djangoproject.com/ticket/24123
",MarkusH,None,2015-01-11T20:13:52Z,2015-01-12T17:43:43Z
3889,Fixed #23878 -- Move Query and Prefetch documentation,"Previously they were in queries.txt, as per discussion on the ticket, they have been moved to the bottom of querysets.txt, with relevant links added into the same page.
",ngzhian,None,2015-01-11T20:07:39Z,2015-01-12T16:38:49Z
3888,Fixed #24053 -- Removed contrib.admin css for IE6&7,"Removed the main IE6&7 css file from the admins page.
Also removed the image related to the css file ""inline-delete-8bit.png"",
as well as the line from the template that included the css file:
django/contrib/admin/templates/admin/base.html
The reasons for doing this is specified on the ticket:
https://code.djangoproject.com/ticket/24053

All tests passed during the test suite run from tests/runtests.py on
sqlite.
",seanwestfall,None,2015-01-11T20:03:56Z,2015-01-27T15:44:26Z
3887,Fixed #23913 -- Deprecated the `=` comparison in `if` template tag.,,timgraham,None,2015-01-11T19:39:47Z,2015-01-11T20:23:48Z
3886,Docs - Auth example - Password not hashed,"I have followed the ""Full Example of Custom User Authentication"" in docs and, when I tested all worked fine except for the password field that was saved on clear form on database when I was syncing the database.

This is happened because doc states that the password field should be directly saved into the model, avoiding the password hashing.
Calling method _set_password_ solved the problem for me, so I updated the example in this commit.
",torre76,None,2015-01-11T14:03:01Z,2015-01-11T17:50:40Z
3885,Fixed #24118 -- Added --debug-sql option for tests.,"This will need documentation and preferably some tests if we decide it's a feature we like.

From the ticket:

> It's a common problem (_especially_ when working on ORM code) to want to print the complete sql queries run during a failing test, especially when parts of the run sql are in the traceback...

Example output:

```
> ./runtests.py expressions --debug-sql
Testing against Django installed in '/Users/marc/code/django/django'
Creating test database for alias 'default'...
Creating test database for alias 'other'...
.........s...............................s...F.Es...
======================================================================
ERROR: test_invalid_operator (expressions.tests.FTimeDeltaTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/marc/code/django/tests/expressions/tests.py"", line 779, in test_invalid_operator
    1/0
ZeroDivisionError: integer division or modulo by zero

----------------------------------------------------------------------
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e0', u'2010-06-25', u'2010-06-25', 0.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:15:30.747000'); args=[u'e0', u'2010-06-25', u'2010-06-25', 0.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:15:30.747000']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e1', u'2010-06-25', u'2010-06-26', 253000.0, u'2010-06-26 12:15:30.747000', u'2010-06-26 12:15:31'); args=[u'e1', u'2010-06-25', u'2010-06-26', 253000.0, u'2010-06-26 12:15:30.747000', u'2010-06-26 12:15:31']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e2', u'2010-06-22', u'2010-06-25', 3600000000.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:16:14.747000'); args=[u'e2', u'2010-06-22', u'2010-06-25', 3600000000.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:16:14.747000']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e3', u'2010-06-25', u'2010-06-30', 76080000000.0, u'2010-06-29 12:15:30.747000', u'2010-06-30 09:23:30.747000'); args=[u'e3', u'2010-06-25', u'2010-06-30', 76080000000.0, u'2010-06-29 12:15:30.747000', u'2010-06-30 09:23:30.747000']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e4', u'2010-06-15', u'2010-07-05', 777600000000.0, u'2010-06-25 12:15:30.747000', u'2010-07-05 12:15:30.747000'); args=[u'e4', u'2010-06-15', u'2010-07-05', 777600000000.0, u'2010-06-25 12:15:30.747000', u'2010-07-05 12:15:30.747000']
(0.000) QUERY = u'SELECT ""expressions_experiment"".""id"", ""expressions_experiment"".""name"", ""expressions_experiment"".""assigned"", ""expressions_experiment"".""completed"", ""expressions_experiment"".""estimated_time"", ""expressions_experiment"".""start"", ""expressions_experiment"".""end"" FROM ""expressions_experiment"" ORDER BY ""expressions_experiment"".""name"" ASC' - PARAMS = (); args=()

======================================================================
FAIL: test_durationfield_add (expressions.tests.FTimeDeltaTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/marc/code/django/tests/expressions/tests.py"", line 793, in test_durationfield_add
    self.fail()
AssertionError: None

----------------------------------------------------------------------
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e0', u'2010-06-25', u'2010-06-25', 0.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:15:30.747000'); args=[u'e0', u'2010-06-25', u'2010-06-25', 0.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:15:30.747000']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e1', u'2010-06-25', u'2010-06-26', 253000.0, u'2010-06-26 12:15:30.747000', u'2010-06-26 12:15:31'); args=[u'e1', u'2010-06-25', u'2010-06-26', 253000.0, u'2010-06-26 12:15:30.747000', u'2010-06-26 12:15:31']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e2', u'2010-06-22', u'2010-06-25', 3600000000.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:16:14.747000'); args=[u'e2', u'2010-06-22', u'2010-06-25', 3600000000.0, u'2010-06-25 12:15:30.747000', u'2010-06-25 12:16:14.747000']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e3', u'2010-06-25', u'2010-06-30', 76080000000.0, u'2010-06-29 12:15:30.747000', u'2010-06-30 09:23:30.747000'); args=[u'e3', u'2010-06-25', u'2010-06-30', 76080000000.0, u'2010-06-29 12:15:30.747000', u'2010-06-30 09:23:30.747000']
(0.000) QUERY = u'INSERT INTO ""expressions_experiment"" (""name"", ""assigned"", ""completed"", ""estimated_time"", ""start"", ""end"") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = (u'e4', u'2010-06-15', u'2010-07-05', 777600000000.0, u'2010-06-25 12:15:30.747000', u'2010-07-05 12:15:30.747000'); args=[u'e4', u'2010-06-15', u'2010-07-05', 777600000000.0, u'2010-06-25 12:15:30.747000', u'2010-07-05 12:15:30.747000']
(0.000) QUERY = u'SELECT ""expressions_experiment"".""id"", ""expressions_experiment"".""name"", ""expressions_experiment"".""assigned"", ""expressions_experiment"".""completed"", ""expressions_experiment"".""estimated_time"", ""expressions_experiment"".""start"", ""expressions_experiment"".""end"" FROM ""expressions_experiment"" ORDER BY ""expressions_experiment"".""name"" ASC' - PARAMS = (); args=()
(0.001) QUERY = u'SELECT ""expressions_experiment"".""id"", ""expressions_experiment"".""name"", ""expressions_experiment"".""assigned"", ""expressions_experiment"".""completed"", ""expressions_experiment"".""estimated_time"", ""expressions_experiment"".""start"", ""expressions_experiment"".""end"" FROM ""expressions_experiment"" WHERE ""expressions_experiment"".""start"" = ((django_format_dtdelta(\'+\', ""expressions_experiment"".""start"", ""expressions_experiment"".""estimated_time""))) ORDER BY ""expressions_experiment"".""name"" ASC' - PARAMS = (); args=()
(0.001) QUERY = u'SELECT ""expressions_experiment"".""id"", ""expressions_experiment"".""name"", ""expressions_experiment"".""assigned"", ""expressions_experiment"".""completed"", ""expressions_experiment"".""estimated_time"", ""expressions_experiment"".""start"", ""expressions_experiment"".""end"" FROM ""expressions_experiment"" WHERE ""expressions_experiment"".""end"" < ((django_format_dtdelta(\'+\', ""expressions_experiment"".""start"", ""expressions_experiment"".""estimated_time""))) ORDER BY ""expressions_experiment"".""name"" ASC' - PARAMS = (); args=()
(0.001) QUERY = u'SELECT ""expressions_experiment"".""id"", ""expressions_experiment"".""name"", ""expressions_experiment"".""assigned"", ""expressions_experiment"".""completed"", ""expressions_experiment"".""estimated_time"", ""expressions_experiment"".""start"", ""expressions_experiment"".""end"" FROM ""expressions_experiment"" WHERE ""expressions_experiment"".""end"" >= ((django_format_dtdelta(\'+\', (django_format_dtdelta(\'+\', ""expressions_experiment"".""start"", ""expressions_experiment"".""estimated_time"")), \'01:00:00\'))) ORDER BY ""expressions_experiment"".""name"" ASC' - PARAMS = (); args=()

----------------------------------------------------------------------
Ran 52 tests in 0.315s

FAILED (failures=1, errors=1, skipped=3)
Destroying test database for alias 'default'...
Destroying test database for alias 'other'...
```
",mjtamlyn,None,2015-01-10T23:00:27Z,2015-01-12T08:19:47Z
3884,Fixed #17785 -- Preferred column names in get_relations introspection,"Thanks Thomas Güttler for the report and the initial patch.
",claudep,None,2015-01-10T22:17:33Z,2015-01-12T19:01:21Z
3883,Multiple template engines - continued,,aaugustin,None,2015-01-10T22:11:26Z,2015-01-12T20:31:21Z
3882,Fixed #24117 -- Made admin not require context_processors,"https://code.djangoproject.com/ticket/24117
",collinanderson,None,2015-01-10T21:28:35Z,2015-01-12T18:24:48Z
3881,Fixed #24110 -- Revised the backwards migration process,"https://code.djangoproject.com/ticket/24110
",MarkusH,None,2015-01-10T20:36:39Z,2015-01-11T00:11:02Z
3880,Improved template ugrading docs.,"Recommending Template(template_code) was dumb. Described alternatives.
",aaugustin,None,2015-01-10T20:13:03Z,2015-01-10T20:20:08Z
3879,Fixed #9893 -- Allowed using a field's max_length in the Storage.,"Updated from https://github.com/django/django/pull/3369.
",timgraham,None,2015-01-10T19:25:11Z,2015-01-16T01:59:30Z
3878,Fixed #24092 -- Widened base field support for ArrayField.,"Several issues resolved here, following from a report that a `base_field` of `GenericIpAddressField` was failing.

We were using `get_prep_value` instead of `get_db_prep_value` in `ArrayField` which was bypassing any extra modifications to the value being made in the base field's `get_db_prep_value`. Changing this broke datetime support, so the postgres backend has gained the relevant operation methods to send dates/times/datetimes directly to the db backend instead of casting them to strings. Similarly, a new database feature has been added allowing the uuid to be passed directly to the backend, as we do with timedeltas.

On the other side, psycopg2 expects an `Inet()` instance for ip address fields, so we add a `value_to_db_ipaddress` method to wrap the strings on postgres. We also have to manually add a database adapter to psycopg2, as we do not wish to use the built in adapter which would turn everything into `Inet()` instances.

Main question: Do I need to ensure that we properly support `ArrayField(IPAddressField())` given that `IPAddressField()` is deprecated, or can the answer to the inevitable bug report be ""don't use `IPAddressField()`?
",mjtamlyn,None,2015-01-10T18:23:44Z,2015-01-17T09:29:31Z
3877,Added Josh Smeaton bio to team,,jarshwah,None,2015-01-10T02:50:03Z,2015-01-10T03:07:39Z
3876,Fixed #24089 -- Added check for when ModelAdmin.fieldsets[1]['fields'] isn't a tuple.,"Change to check for tuple/list on the label 'fields' of fieldsets field of ModelAdmin.
Ticket 24089
",arcturusannamalai,None,2015-01-10T00:30:47Z,2015-01-12T18:49:18Z
3875,Fixed #23967 -- Added formats for Greek,"Please take a look at the discussion of #3696.
",spapas,None,2015-01-09T22:10:01Z,2015-01-10T16:37:13Z
3874,Fixed #24097 -- Prevented AttributeError in redirect_to_login,"Thanks Peter Schmidt for the report and the initial patch.
",claudep,None,2015-01-09T21:23:39Z,2015-01-10T09:15:59Z
3873,Fix CustomUserBadRequiredFields docstring typo.,,hellysmile,None,2015-01-09T19:09:43Z,2015-01-09T19:34:31Z
3872,Fixed invalid polish e-mail validation msg translation,"Polish translation for „Enter valid email” was copied over from ""Enter
a valid username."", producing confusing and incorrect error message
for validate_email validator. 
",rafalp,None,2015-01-09T18:49:12Z,2015-01-09T19:36:02Z
3871,Non digits custom user model primary key password lookup.,"If custom user model for example uses UUID as PK, admin password change form cannot be opened.

Another way is dirty hack for custom UserAdmin like

https://gist.github.com/hellysmile/97637aa3b9f69d12692f
",hellysmile,None,2015-01-09T18:10:17Z,2015-02-12T18:44:48Z
3870,Added best practices for versionadded/changed annotations.,"Please review for clarity or any questions you have that aren't addressed.
",timgraham,None,2015-01-09T17:56:21Z,2015-01-09T18:24:23Z
3869,Fixed #24094 -- Enable template tests to run individually.,,prestontimmons,None,2015-01-09T16:06:23Z,2015-01-09T16:45:22Z
3868,Fixed #24060 -- Added OrderBy Expressions,"This is the initial implementation of being able to use expressions in the order_by clause. It's still a bit rough around the edges. Still need:
- [x] Lots more tests
- [x] Documentation
- [x] ~~Implement NULLS LAST/FIRST~~ Cutting due to time

I think I'm on the right track though. Eventually I'd like to move a lot of the order processing from the compiler and into the expression itself, but that's polish that can wait until another version.
",jarshwah,None,2015-01-09T15:21:25Z,2015-01-14T06:38:19Z
3867,Minor release notes fix,,tchaumeny,None,2015-01-09T09:41:27Z,2015-01-09T12:39:56Z
3866,"WIP to fix #24100, #24067 -- Made pre and post_migrate signals dispatch the migration plan.","I'd like to try to write a fix for both tickets to see if `plan` is sufficient to fix both issues.
",charettes,None,2015-01-09T04:26:54Z,2019-03-16T21:43:35Z
3865,Fixed #24104 - Fixed check to look for internal type of field instead of class instance,"See https://github.com/alex/django-taggit/issues/285 for example where this issue can be present.
Some custom related fields can not have a default, but in the same time they will be not inheritors of `ManyToManyField`.
",coldmind,None,2015-01-08T22:56:40Z,2015-01-22T17:51:05Z
3864,Fixed typo in 1.8 release notes,,sephii,None,2015-01-08T20:57:28Z,2015-01-08T21:03:23Z
3863,Isolated some cache tests; refs #23947.,"This reverts a change made in 40c60efecc0fc73f0b2320b44d684586b52ee799
which was incorrect and caused CacheKeyWarnings.
",timgraham,None,2015-01-08T17:52:06Z,2015-01-08T18:16:02Z
3862,Fixed #24102 - add name to unique_together in create_model,,dnozay,None,2015-01-08T17:41:03Z,2015-03-25T16:48:49Z
3861,Create __main__.py,"It's always irked me that I had to start an interactive interpreter to discover which version of django I was running. This module takes advantage of Python's recently-added ability to run a package.

After the addition of this module, the command `python -m django` reports various useful version data. Here's a sample output from a current virtual environment:

```
(training-site)airhead:training-site sholden$ python -m django
Django version 1.7.2
Loaded from /Users/sholden/.virtualenvs/training-site/lib/python2.7/site-packages/django
Python 2.7.2 (default, Oct 11 2012, 20:14:37)
[GCC 4.2.1 Compatible Apple Clang 4.0 (tags/Apple/clang-418.0.60)]
```

I'm not sure how to integrate a test for this feature, and will happily take advice from more experienced devs. This just scratches an itch for me. I hope this file will always stay small!
",holdenweb,None,2015-01-08T17:30:16Z,2015-01-09T03:38:56Z
3860,Fixed #24101 -- Fixed flaky admin_views selenium tests; refs #7361.,,timgraham,None,2015-01-08T17:21:59Z,2015-01-08T18:53:03Z
3859,Fixed #24098 -- Added no-op attributes to RunPython and RunSQL,"https://code.djangoproject.com/ticket/24098
",MarkusH,None,2015-01-08T17:06:18Z,2015-02-16T18:48:21Z
3858,Fixed #24099 -- Removed contenttype.name deprecated field,"This finsishes the work started on #16803.
",claudep,None,2015-01-08T16:36:44Z,2015-01-16T19:31:52Z
3857,Fixed #23953 -- Changed makemigrations numeration,"Changed numeration behaviour in makemigrations after squashing.
Now migrations numeration goes after the latest existing migration
instead of the squashed one.

---

All useful comments and improvements are strongly welcome :)
",proitm,None,2015-01-08T13:28:52Z,2015-01-29T17:57:08Z
3856,Returned None for get_language when translations are deactivated,,claudep,None,2015-01-08T10:12:26Z,2015-01-08T16:46:54Z
3855,Fixed #24095 -- Prevented WarningLoggerTests from leaking a warnings filter.,"https://code.djangoproject.com/ticket/24095#ticket
",timgraham,None,2015-01-07T23:51:50Z,2015-01-08T13:50:48Z
3854,Refs #23822 -- Made MigrationOptimizer aware of model managers,"https://code.djangoproject.com/ticket/23822
",MarkusH,None,2015-01-07T21:02:31Z,2015-01-08T00:16:15Z
3853,Fixed #24093 -- Prevented MigrationWriter to write operation kwargs that are not explicitly deconstructed,"https://code.djangoproject.com/ticket/24093
",MarkusH,None,2015-01-07T20:43:28Z,2015-01-08T02:24:49Z
3852,Fixed #21231 -- Enforced a max size for POST values read into memory,"Enforce a maximum size for form field values read into memory.
Based on https://github.com/django/django/pull/3020 and https://github.com/django/django/pull/2403.
",edevil,None,2015-01-07T18:46:06Z,2016-04-26T22:35:01Z
3851,Allowed creation of objects with NULL DurationFields,,jarshwah,None,2015-01-07T11:24:46Z,2015-01-07T13:34:51Z
3850,Fixed null handling in Value expression,"In some rare cases, Oracle is unable to convert `Value(None)` into the correct NULL type, so we do it explicitly. https://github.com/django/django/pull/3825 has hit this corner case and has tests that fail without this change. Better to add this separately.
",jarshwah,None,2015-01-07T10:54:31Z,2015-01-08T00:08:49Z
3849, Fixed #22583 -- Allowed RunPython and RunSQL to provide hints to the db router.,,loic,None,2015-01-07T09:47:00Z,2015-01-09T18:22:29Z
3848,Fixed #12663 -- Formalized the Model._meta API for retrieving fields.,"Thanks to Russell Keith-Magee for mentoring this Google Summer of
Code 2014 project and everyone else who helped with the patch!
",timgraham,None,2015-01-07T00:26:38Z,2015-01-07T00:58:56Z
3847,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),"`field_name` was not fully add and will trigger the bug when using a hidden field with a unmatch `row_ender`.
",raully7,None,2015-01-06T09:51:16Z,2015-01-16T01:20:23Z
3846,Fixed #24022 -- Deprecated the ssi tag.,,prestontimmons,None,2015-01-05T20:48:41Z,2015-01-06T00:35:49Z
3845,Multiple template engines docs,,aaugustin,None,2015-01-05T20:36:46Z,2015-01-10T19:20:25Z
3844,Fixed test failures introduced in refs #23861.,,timgraham,None,2015-01-05T19:18:15Z,2015-01-05T19:36:41Z
3843,Fixed #23815 -- Prevented UnicodeDecodeError in CSRF middleware,"Thanks codeitloadit for the report and living180 for investigations.
",claudep,None,2015-01-05T17:26:25Z,2015-01-06T07:44:19Z
3842,Close files in FileResponse refs #24072,,collinanderson,None,2015-01-05T17:08:01Z,2015-01-05T19:56:59Z
3841,Renamed internally used flag for detecting managers built from QuerySets with as_manager(),"This rename is intended to prevent confusion with the variable naming which @loic pointed out to me.
",MarkusH,None,2015-01-05T13:40:42Z,2015-01-05T16:15:59Z
3840,Fixed #24078 -- Removed empty strings from GenericIPAddressField,"The empty string as a value is not supported for GenericIPAddressField on Postgres due to the inet type. Oracle was also coercing nulls to the empty string when retrieving data which was different from the other backends.
",jarshwah,None,2015-01-05T10:34:27Z,2015-01-07T13:12:30Z
3839,Updated release instructions with latest process.,,timgraham,None,2015-01-03T19:56:38Z,2015-01-06T18:54:21Z
3838,Fixed #24073 -- Deactivated translations when leave_locale_alone is False,,claudep,None,2015-01-03T19:29:37Z,2015-01-07T19:13:00Z
3837,[1.7.x] Increased the default PBKDF2 iterations.,,timgraham,None,2015-01-03T18:38:18Z,2015-01-03T19:08:57Z
3836,Fixed #24072 -- Added FileResponse,"https://code.djangoproject.com/ticket/24072
",collinanderson,None,2015-01-03T17:08:23Z,2015-01-05T15:52:20Z
3835,Fixed #24070 -- Added topics beside the Tutorials parts for clarification,"Updated the documentation front page to mention the topic names beside the tutorial parts.

Thanks timgraham for the patch and claudep for the review.
",iambibhas,None,2015-01-03T09:52:13Z,2015-01-03T13:49:07Z
3834,Removed extraneous super call in LiveServerTestCase,"Refs #21281. Thanks Tim Graham and Thomas Chaumeny for investigations.
",claudep,None,2015-01-03T09:16:21Z,2015-01-03T13:33:01Z
3833,Removed formtools entries from MANIFEST.in.,"```
warning: no files found matching '*' under directory 'django/contrib/formtools/templates'
    warning: no files found matching '*' under directory 'django/contrib/formtools/tests/templates'
    warning: no files found matching '*' under directory 'django/contrib/formtools/tests/wizard/wizardtests/templates'
```
",berkerpeksag,None,2015-01-03T02:04:57Z,2015-01-03T13:30:13Z
3832,Fixed #23861 -- Added an API to deprecate model fields.,"https://code.djangoproject.com/ticket/23861
",timgraham,None,2015-01-02T18:58:42Z,2015-01-05T16:41:51Z
3831,Fixed: #23940 -- Added checks for 'exact' fieldnames,"Adds a system check on base field to ensure that no feilds are given the
name 'exact' as this is conflicting with the SQL keyword.
",nicwest,None,2015-01-02T18:57:27Z,2015-01-06T18:55:21Z
3830,Refs #22608 -- Used cached_property for lower case conversions of model and field names in migrations,"This PR supersedes #3545 
",MarkusH,None,2015-01-02T18:04:47Z,2015-01-07T14:23:35Z
3829,Updated six to 1.9.0.,,timgraham,None,2015-01-02T17:57:28Z,2015-01-03T12:44:30Z
3828,Fixed #8280 -- Allowed management command discovery for eggs,"Thanks jdetaeye for the report, and bhuztez and jdetaeye for the
initial patches.
",claudep,None,2015-01-02T17:14:02Z,2015-01-05T16:21:28Z
3827,Fixed #9104 -- Moved FieldDoesNotExist to core.exceptions,"Cherry pick of f96990ff71d30a7397b07367e93404d816ad085b
",PirosB3,None,2015-01-02T14:40:40Z,2015-01-02T15:47:08Z
3826,Fixed #24069 - make ServerHandler a new style class,"Patch for https://code.djangoproject.com/ticket/24069
",pelme,None,2015-01-02T12:00:53Z,2015-01-02T17:08:58Z
3825,Fixed #24031 -- Added CASE expressions,"I'm opening this PR for review of my implementation of CASE expressions.
It's working with tests passing on SQLite, postgres and MySQL with python 2.7, 3.2, 3.3 and 3.4 (except MySQL + python 3.2).

There are some issues however:
- API needs to be finalized. I've discussed this with @jarshwah and am currently using two classes `SearchedCase` and `SimpleCase`, with an entry point class `Case`, that returns one of those two depending on the arguments. You can see how Case expressions could be used with each of the classes and then we can drop some of the names once a decision has been made.
- No documentation - waiting on API decision.
- I added tests for the interaction of `QuerySet.update` with Case expressions and all the Field types, and came across some issues with `Value` expressions and `DurationField`. I've fixed these in separate commits in this PR. How should I proceed with this? Make tickets for the issues? The fixes work, but I'd appreciate review from the authors of those pieces of code @mjtamlyn and @jarshwah.
- In some cases I've made the `as_sql` methods depend on the type of query compiler (detecting sql update). This works but needs to be better, maybe adding methods to `SQLCompiler` and overriding for `SQLUpdateCompiler`. Input appreciated on this.

This is without the bulk_update code. I'll do a separate PR for that if it is wanted.
",michalmo,None,2015-01-02T10:42:59Z,2015-01-12T23:17:05Z
3824,Fixed #23908 -- Made the admin XHTML5 compatible.,"More of just a proposal: https://code.djangoproject.com/ticket/23908#comment:9
",collinanderson,None,2015-01-02T04:08:57Z,2015-01-02T14:58:45Z
3823,Removed double newline from output of migrate --list,"refs [#23359](https://code.djangoproject.com/ticket/23359) and PR https://github.com/django/django/pull/3153#issuecomment-68471839
",MarkusH,None,2015-01-01T14:48:41Z,2015-01-05T21:06:54Z
3822,Fixed #23749 -- Added an example of using database routers in migrations,"The ticket https://code.djangoproject.com/ticket/23749 explains the issue where the `schema_editor.connection.alias` should be documented.  It is now documented with some examples included.
",splbio,None,2015-01-01T03:26:36Z,2015-01-03T17:07:16Z
3821,Fixed #24064 - Prevented database access in compile time in spatialite models,"Here is the patch that can fix problem.
Ideas about improvements are welcome.
",coldmind,None,2014-12-31T20:02:17Z,2015-01-02T17:13:46Z
3820,Refs #18586 -- Split up tests.defer.DeferTests.test_defer,,timgraham,None,2014-12-31T16:07:41Z,2014-12-31T19:16:13Z
3819,Ignored warnings correctly in test_get_formsets_with_inlines_returns_tuples.,"The subclass check in ModelAdmin.get_formsets_with_inlines() wasn't
tested correctly because of the super() call in
EpisodeAdmin.get_formsets().
",berkerpeksag,None,2014-12-31T00:28:16Z,2014-12-31T22:40:55Z
3818,Fixed #23891 -- Moved deprecation of IPAddressField to system check framework.,,timgraham,None,2014-12-30T21:07:19Z,2015-01-29T17:33:04Z
3817,Removed db.backends methods which only call super().,,timgraham,None,2014-12-30T16:31:59Z,2014-12-30T16:58:05Z
3816,[1.7.x] Fixed #24063 -- Locale code validation too strict,"The locale code can contain variant after @, so let's allow the
validation of it to pass.

Backport of 7c4393689f2e54993d57958d02a4757d84133d50 from master.
",nijel,None,2014-12-30T14:45:18Z,2015-01-08T08:44:52Z
3815,Fixed #24063 -- Locale code validation too strict,"The locale code can contain variant after @, so let's allow the
validation of it to pass.
",nijel,None,2014-12-30T14:45:14Z,2015-04-25T00:32:57Z
3814,Added test case to check for an intermediate swappable model change in migration state,"Ticket: https://code.djangoproject.com/ticket/22563
",MarkusH,None,2014-12-30T14:32:36Z,2014-12-30T15:39:26Z
3813,"[PoC] [WIP] [Don't merge] Modular i18n. Refs #14974, #19480","I've just updated this from a first attempt in June 2013 to current master. Figured it'd be better to have it on GitHub.

Curently it only serves to show it would be possible to make Django runtime translation more modular by:
- Keeping backward compatibility
- Keeping the ability to don't impact runtime performance when USE_I18N = False

Things missing are:
- Abstraction for translatable literal/entities extraction functionality
- etc.

See [ticket #14974](https://code.djangoproject.com/ticket/14974) for discussion and some real-world requirements a more general solution would need to cater for.
",ramiro,None,2014-12-30T12:30:21Z,2019-01-23T13:12:43Z
3812,Refs #23271 -- Fixed breakage by 6fb9dee4 under Python2+Windows.,,ramiro,None,2014-12-29T22:09:33Z,2014-12-30T00:08:40Z
3811,Fixed #23581 -- Prevented extraneous DROP DEFAULT statements.,,timgraham,None,2014-12-29T21:28:29Z,2014-12-30T17:27:14Z
3810,Moved DatabaseCreation.data_types properties to DatabaseWrapper.,,timgraham,None,2014-12-29T20:31:04Z,2014-12-31T13:34:26Z
3809,Fixed #24245 -- Added introspection for database defaults.,"Needed for tests for migrations handling of database defaults.
",timgraham,None,2014-12-29T16:42:44Z,2015-01-31T17:38:03Z
3808,Disallow URL pattern names that contain colons,".. as this leads to ambiguous namespace references.
",lamby,None,2014-12-29T13:57:57Z,2015-01-10T16:10:02Z
3807,Fixes #23271,,ramiro,None,2014-12-29T02:12:28Z,2014-12-29T16:13:58Z
3806,Fixed #23753 -- Oracle failure with Coalesce,"This fixes the Oracle errors on CI when mixing CharFields and TextFields. We cast each input to Coalesce to NCLOB when the output of the expression is expected to be TextField (database NCLOB). We can't do this with a converter because the inputs need to be cast, not just the output.
",jarshwah,None,2014-12-28T22:18:50Z,2014-12-29T08:50:20Z
3805,Fixed #21255 -- Closed connections after management command ran,"Thanks kabakov.as@gmail.com for the report.
",claudep,None,2014-12-28T17:20:21Z,2014-12-29T18:04:43Z
3804,Converted middleware tests to use RequestFactory.,,berkerpeksag,None,2014-12-28T04:30:10Z,2014-12-29T18:06:17Z
3803,Fix typo in custom lookups howto.,,EnTeQuAk,None,2014-12-28T00:11:34Z,2017-03-23T09:22:26Z
3802,Fixed #24056 -- Fixed syntax error for highlighting,"https://code.djangoproject.com/ticket/24056
",collinanderson,None,2014-12-27T23:59:51Z,2014-12-28T00:00:49Z
3801,Fixed #20488 -- Added copy and move methods to the storage API,"- implemented these methods in the default FileSystemStorage
- fix issue with storage tests: each test from FileStorageTests
  was run twice (when inheriting from a TestCase class all test_
  methods are ran in the subclass as well)

Previous incarnations of the same PR:

https://github.com/django/django/pull/1206
https://github.com/django/django/pull/2664
",kux,None,2014-12-27T19:39:17Z,2015-01-14T17:24:45Z
3800,Fixed #22279 -- Prevented dummy backend going through DatabaseErrorWrapper,"Thanks Daniel Hahler for the report.
",claudep,None,2014-12-27T15:22:44Z,2014-12-29T18:07:28Z
3799,Fixed #24000 -- Corrected contrib.sites default site creation in a multiple database setup.,,timgraham,None,2014-12-27T14:07:49Z,2014-12-27T15:44:06Z
3798,[1.7.x] Fixed #24051 -- Made schema infrastructure honor tablespaces,"Partial backport of 30cbd5d36. Thanks Douglas J. Reynolds for the
report and initial patch.
",claudep,None,2014-12-27T11:43:52Z,2014-12-27T14:15:58Z
3797,Fixed #24055 -- Keep reference to view class for resolve(),"https://code.djangoproject.com/ticket/24055
",collinanderson,None,2014-12-27T07:17:53Z,2015-01-17T15:10:34Z
3796,[1.7.2] Fixed #24051 -- Backported code from master to 1.7.2.,"Prevent table from being created in default schema when the
schema is specified in the model or in the settings.

For ticket #24051
",douglasjreynolds,None,2014-12-27T01:49:40Z,2014-12-28T01:41:10Z
3795,Replaced sqlall in some bash_completion/admin_scripts tests.,"sqlall is going away in Django 1.9, so now's a good time to remove
its usage where it's not important.
",timgraham,None,2014-12-26T23:27:18Z,2014-12-26T23:54:34Z
3794,Tutorial template clarification,"I think many people end up editing {% block title %} and don't notice the
result.

Example: https://groups.google.com/d/msg/django-users/owfKzOn1Yfo/Vr4dOwN1ByEJ
",collinanderson,None,2014-12-26T22:55:51Z,2014-12-26T23:30:09Z
3793,Fixed #22728 - Prohibited lookups usage for get_or_create,"Patch proposes how this problem can be solved.
I decided to make this backwards incompatible, because the way django does it now should not be encouraged.

One more thing - ticket is about `get_or_create`, but I think `update_or_create` should have the same behavior.
",coldmind,None,2014-12-26T22:19:40Z,2015-06-04T16:47:02Z
3792,Fixed #24054 -- Enabled sqlsequencereset for apps with migrations.,"https://code.djangoproject.com/ticket/24054
",timgraham,None,2014-12-26T20:28:16Z,2014-12-26T21:44:09Z
3791,Removed supported for syncing apps without migrations per deprecation timeline,"Not to be merged until the stable/1.8.x branch is created in mid-January.

Created in part as a research branch to see what code with be removed by various database deprecations and to see what still needs to be deprecated as part of [#22340](https://code.djangoproject.com/ticket/22340).
",timgraham,None,2014-12-26T16:10:08Z,2015-01-18T20:59:31Z
3790,Refs #18586 -- Split m2m_signals test,,AmiZya,None,2014-12-26T03:33:44Z,2015-03-22T12:33:15Z
3789,Fixed #23866 -- Harmonized refs to Django documentation from code,,claudep,None,2014-12-25T12:33:36Z,2014-12-27T12:50:52Z
3788,"typo: change ""data"" to ""truth""","This doc currently says ""the single, definitive source of data about your data.""  I'm pretty confident the first 'data' is supposed to be 'truth', as the DRY principle is usually stated in terms of a 'single source of truth.'
",brianjscoles,None,2014-12-25T04:15:10Z,2014-12-25T11:58:16Z
3787,Fixed #24041 -- Document primary key change of value,"Documentation (ref and topic) on what happens when primary key is changed and saved.

https://code.djangoproject.com/ticket/24041
",helenst,None,2014-12-24T19:24:54Z,2014-12-24T20:07:16Z
3786,Fixed #14180 -- Prevented unneeded index creation on MySQL-InnoDB,"Thanks zimnyx for the report.
",claudep,None,2014-12-24T14:57:20Z,2014-12-27T11:55:09Z
3785,Fixed #24045 -- Removed useless mark_safe() call in trans_null.py,,timgraham,None,2014-12-24T12:54:31Z,2014-12-28T01:34:30Z
3784,Ticket 23831,,aaugustin,None,2014-12-23T21:40:01Z,2014-12-27T17:13:53Z
3783,Refs #18586 -- Split up tests.defer.DeferTests.test_defer,"https://code.djangoproject.com/ticket/18586
",wearp,None,2014-12-23T21:34:58Z,2015-01-04T08:06:32Z
3782,Fixed #24037 -- Prevented data loss possibility when changing Meta.managed.,"The migrations autodetector now issues AlterModelOptions operations for
Meta.managed changes instead of DeleteModel + CreateModel.

https://code.djangoproject.com/ticket/24037
",timgraham,None,2014-12-23T17:33:49Z,2014-12-23T19:27:36Z
3781,Fixed #24008 -- ValidationError crashes with list of dicts,,GreyZmeem,None,2014-12-23T15:59:50Z,2014-12-31T19:46:45Z
3780,Fixed #24035 -- Clarified docs on CACHE_MIDDLEWARE_KEY_PREFIX vs KEY_PREFIX,,frankier,None,2014-12-23T13:47:32Z,2014-12-24T08:33:24Z
3779,Fixed #24268 -- removed Query.having,"The idea is to split the where and having parts in compiler stage. This should be faster on those queries that do not use aggregates, and the logic is easier to implement in compiler.
",akaariai,None,2014-12-23T13:09:52Z,2015-02-04T14:30:47Z
3778,Refs #2443 -- Move the durationfield converter logic.,"This reduces how frequently this logic is run significantly.

Thanks to Anssi for the suggestion.
",mjtamlyn,None,2014-12-23T10:12:23Z,2014-12-23T10:42:10Z
3777,Refs #2443 -- fixed format_dtdelta on SQLite,,akaariai,None,2014-12-23T09:51:39Z,2014-12-23T13:27:54Z
3776,Fixed #24042 -- Added db.models.Field.db_generated,"References https://code.djangoproject.com/ticket/24042

[The documentation](​https://docs.djangoproject.com/en/dev/howto/custom-model-fields/#emulating-built-in-field-types) on `Field.get_internal_type` implies that it should define custom behavior and ensure that database-correct behavior is followed. For Postgres (though not for sqlite), specifying `get_internal_type()` to be ""AutoField"" fails to correctly set the field, leading to errors like this:

``` pytb
test_auto_field (field_subclassing.tests.CustomField) ... ERROR

======================================================================
ERROR: test_auto_field (field_subclassing.tests.CustomField)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/lucaswiman/opensource/django/tests/field_subclassing/tests.py"", line 128, in test_auto_field
    o.save()
  File ""/Users/lucaswiman/opensource/django/django/db/models/base.py"", line 694, in save
    force_update=force_update, update_fields=update_fields)
  File ""/Users/lucaswiman/opensource/django/django/db/models/base.py"", line 722, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File ""/Users/lucaswiman/opensource/django/django/db/models/base.py"", line 803, in _save_table
    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
  File ""/Users/lucaswiman/opensource/django/django/db/models/base.py"", line 842, in _do_insert
    using=using, raw=raw)
  File ""/Users/lucaswiman/opensource/django/django/db/models/manager.py"", line 131, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File ""/Users/lucaswiman/opensource/django/django/db/models/query.py"", line 954, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File ""/Users/lucaswiman/opensource/django/django/db/models/sql/compiler.py"", line 931, in execute_sql
    cursor.execute(sql, params)
  File ""/Users/lucaswiman/opensource/django/django/db/backends/utils.py"", line 65, in execute
    return self.cursor.execute(sql, params)
  File ""/Users/lucaswiman/opensource/django/django/db/utils.py"", line 95, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File ""/Users/lucaswiman/opensource/django/django/db/backends/utils.py"", line 65, in execute
    return self.cursor.execute(sql, params)
IntegrityError: null value in column ""id"" violates not-null constraint
DETAIL:  Failing row contains (null).
```

The attached diff adds a regression test which fails on postgres databases with the error above. I also fixed all other uses of `isinstance(..., AutoField)` I could find in the code.

The immediate motivation for this is writing integration tests which use django-salesforce on a CI system that uses a postgres database. I've filed a separate issue there, though I think fixing the behavior in Django to match the documentation would be a preferable solution. [The package maintainer for django-salesforce agrees](​https://github.com/django-salesforce/django-salesforce/issues/90#issuecomment-67932443).
### How to Reproduce

Check out the master branch and apply my diff from the tests/ directory. Run the tests with a settings file pointing to a postgres database:

```
PYTHONPATH=..:$PYTHONPATH ./runtests.py --verbosity=2 --failfast field_subclassing --settings=test_postgres
```

It will fail with the above stack trace.
### Testing

I verified that the regression test fails without the remainder of the diff. I also verified that the tests still pass on the default test_sqlite file.
",lucaswiman,None,2014-12-23T09:29:27Z,2015-11-12T00:26:37Z
3775,Upgrade jQuery from 1.11.1 to 1.11.2,"refs https://code.djangoproject.com/ticket/23355
",collinanderson,None,2014-12-23T01:33:06Z,2014-12-23T10:26:39Z
3774,Ensure TypedChoiceField validates any non-empty value,"This ensures that a '0' value in an integer-based TypedChoiceField gets validated correctly.

Previously this would not ever get validated, as passing a '0' value would skip any kind of field validation:

```
class MyForm(forms.Form):
    choice = forms.TypedChoiceField(choices=[], coerce=int)
```
",dcramer,None,2014-12-22T20:25:23Z,2014-12-23T23:02:18Z
3773,M2M __in filtering after a Count annotation,"See [ticket#24039](https://code.djangoproject.com/ticket/24039)

After annotating and filtering a queryset for the number of m2m related objects, subsequent filters using `__in` falsely return an empty result.

In this PR, the first test passes to demonstrate the expected behavior.  The following test—which is really the same logic as the first test, only written differently—fails.

Also see some pdb output from my personal project to show this in action: http://dpaste.com/3JQYWTZ#line-31

Specifically, **it is the annotated _filter_ that triggers the bug**.

Consider this output:

``` python
>>> annotated_query = Book.objects.annotate(c=Count('authors'))
>>> annotated_query.filter(authors=author1).filter(authors=author2).filter(authors=author3)
[<Book: Python Web Development with Django>]
>>> annotated_query.filter(authors__in=[author1, author2, author3])
[<Book: Python Web Development with Django>]
```

versus this output with the annotated filter:

``` python
>>> annotated_query = Book.objects.annotate(c=Count('authors')).filter(c=3)
>>> annotated_query.filter(authors=author1).filter(authors=author2).filter(authors=author3)
[<Book: Python Web Development with Django>]
>>> annotated_query.filter(authors__in=[author1, author2, author3])
[]
```
",dustinfarris,None,2014-12-22T08:48:33Z,2014-12-22T17:36:12Z
3772,Fixed #23959 -- Added topic about system checks in deployment,,alexanderschulze,None,2014-12-22T01:57:23Z,2014-12-22T19:14:54Z
3771,Fixed #24036 -- Added ignore_warnings decorator,,claudep,None,2014-12-21T23:26:16Z,2014-12-30T17:20:48Z
3770,Multiple template engines,"This PR contains the bulk of the multiple template engines project.

It's still missing tests for the new code in django.template.loaders.
",aaugustin,None,2014-12-21T22:00:13Z,2014-12-28T21:01:35Z
3769,[1.7.x] Fixed #24008 -- ValidationError crashes with list of dicts,"ValidationError crashes if initialised with list which contains dicts.
Example:

```
>>> ValidationError([{'1': 'one', '2': 'two'}])
Traceback (most recent call last):
  File ""<console>"", line 1, in <module>
  File ""/home/am/.virtualenvs/test/local/lib/python2.7/site-packages/django/core/exceptions.py"", line 121, in __init__
    self.error_list.extend(message.error_list)
AttributeError: 'ValidationError' object has no attribute 'error_list'
```
",GreyZmeem,None,2014-12-21T21:32:42Z,2014-12-23T16:02:27Z
3768,Ticket 24008 1 7,,GreyZmeem,None,2014-12-21T21:24:30Z,2014-12-23T16:02:28Z
3767,Fixed #24033 -- Oracle durationfield,"Use `INTERVAL DAY(9) TO SECOND(6)` on Oracle instead of a bigint of microseconds. This should be much more performant.
",mjtamlyn,None,2014-12-21T14:51:02Z,2014-12-23T10:39:02Z
3766,Fixed #17946 -- Fixed deserialization for self-referencing M2M fields,"Thanks Philip Mountifield for the report and analysis.
",claudep,None,2014-12-21T14:15:43Z,2014-12-23T15:04:23Z
3765,Fixed #24034 -- Don't always overwrite deconstruct path.,"Made deconstruct path overwriting for ArrayField conditional, so it only occurs when the deconstructed field is an instance of ArrayField itself and not a subclass.

See ticket https://code.djangoproject.com/ticket/24034.
",kostko,None,2014-12-21T10:27:50Z,2014-12-22T00:41:13Z
3764,Fixed #22461 -- Support for if-unmodified-since in condition decorator,"see ticket https://code.djangoproject.com/ticket/22461
",ttanner,None,2014-12-20T20:35:45Z,2014-12-24T17:34:56Z
3763,Correct scoping of savepoint example,,dcramer,None,2014-12-20T20:00:46Z,2014-12-21T14:19:29Z
3762,Fixed #22295 -- Replaced permission check for displaying admin user-tools,"AdminSite currently requires users to have is_staff explicitly set in order to login, i.e. only staff members can login.
The way it is hardcoded in AdminSite and its templates makes it difficult to create custom AdminSites which allow certain non-staff members (e.g. with special permissions) to login.

With this PR, custom AdminSites only need to override has_permission and login_form to change the login requirements.

ticket  https://code.djangoproject.com/ticket/22295
(old https://code.djangoproject.com/ticket/24032)
",ttanner,None,2014-12-20T17:22:23Z,2014-12-31T21:52:18Z
3761,Merge pull request #1 from django/master,"Update
",aktech,None,2014-12-20T16:55:46Z,2014-12-20T16:55:59Z
3760,Redirect to translated url after setting language,"Implemented redirection to proper, translated URL after language was changed. This fixes not changing language preference at all when using i18n_patterns and redirecting to 404 page when translated urls are used (and no i18n_patterns used, because if used, language won't change at all).
",gbdlin,None,2014-12-19T12:10:32Z,2014-12-24T17:36:02Z
3759,Moved version directives to the bottom of the loaddata section.,,berkerpeksag,None,2014-12-19T04:51:48Z,2014-12-19T12:09:56Z
3758,Made unpickling test CWD-independent,"Refs #24007.
",claudep,None,2014-12-18T20:41:09Z,2014-12-19T19:13:57Z
3757,Fixed #21414 -- Removed usage of RelatedObject and deprecated it.,"The django.db.models.related module is now deprecated. The functionality
was moved to ForeignObjectRel which is accessible from field.rel.
RelatedObject was accessible from field.related.
",timgraham,None,2014-12-18T19:42:15Z,2014-12-23T16:01:30Z
3756,[1.7.x] Factorized create_index_sql expression,"Backport of 6072f17d0 from master, with one test reinforced.
",claudep,None,2014-12-18T15:01:14Z,2014-12-18T20:19:43Z
3755,Fixed #23788 (2) -- Improved gettext version checker,"Thanks Tim Graham for the report and initial patch.
",claudep,None,2014-12-18T13:41:10Z,2014-12-18T15:07:42Z
3754,Fixed #23753 -- Added a suite of SQL Functions,"This is a work in progress, but not too far off being code complete. I thought it was better to open a PR rather than have people try to track individual commits on my fork.

A few notes at this point in time:
- ~~I plan on renaming Concat to ConcatPair (name TBD), and renaming ConcatMany to Concat.~~
- Some backends allow an arbitrary number of args to Concat, but I've chosen implementation simplicity by implementing multi-concat the same across all backends. If performance differences can be shown, I'll revisit this choice.
- ~~Some functions validate args in init, others in resolve expression. I think I'll standardise on init, since objects should be fairly complete on instantiation.~~
- I won't be implementing Case/When just yet. Michal on the ML has a better implementation than the one I had prototyped, and I'll let Michal finish and submit a PR for that part.
- ~~Tests are basic and should probably cover a lot more failure states.~~
- ~~Docs. They'll come last as always.~~

Are we happy about the namespacing? Is `models.functions.*` an OK place?
",jarshwah,None,2014-12-18T09:48:28Z,2014-12-27T08:10:09Z
3753,Refs #24020 -- return expressions from get_group_by_cols(),"Initial preparation for PR3669.
",akaariai,None,2014-12-18T09:04:39Z,2014-12-18T13:01:34Z
3752,Convert global settings to list subclass,"The style is unclear and inconsistent about whether the settings are preferred to be lists or tuples. A discussion in the mailing list seems to indicate a consensus that lists are preferred, but backward compatibility _may_ be a concern that needs to be considered.

I've implemented a `ConfList` list subclass that is able to act like a tuple in some tricky cases that might otherwise throw errors. Based on recent posts on the mailing list, the `ConfList` subclass is likely to be discarded in favor of simply documenting the backward incompatibility.

I updated the default template to use lists, and I've started working my way through the tutorial, and then on to the rest of the docs. There's still a bunch more to go through.
",ryanhiebert,None,2014-12-18T06:53:42Z,2015-04-30T15:39:53Z
3751,Python 2.7.9 is out.,,collinanderson,None,2014-12-18T02:52:09Z,2014-12-18T17:01:10Z
3750,Fixed #24017 -- Add python_2_unicode_compatible in db/migrations,,jschneier,None,2014-12-17T23:44:17Z,2014-12-21T21:12:59Z
3749,Fix python3 / python2 issue in tests,"If I run tests using `python3 runtests.py`, I get a failure because my
python binary is python2.

Refs #24007

```
collin@anakin:~/django1.8/tests$ PYTHONPATH=.. python3 runtests.py model_regress.test_pickle
Testing against Django installed in '/home/collin/django1.8/django'
Creating test database for alias 'default'...
Creating test database for alias 'other'...
.Traceback (most recent call last):
  File ""/home/collin/django1.8/tests/tmpeqwmbhyl.py"", line 9, in <module>
    article = pickle.loads(data)
  File ""/usr/lib/python2.7/pickle.py"", line 1382, in loads
    return Unpickler(file).load()
  File ""/usr/lib/python2.7/pickle.py"", line 858, in load
    dispatch[key](self)
  File ""/usr/lib/python2.7/pickle.py"", line 886, in load_proto
    raise ValueError, ""unsupported pickle protocol: %d"" % proto
ValueError: unsupported pickle protocol: 3
F.
======================================================================
FAIL: test_unpickling_when_appregistrynotready (model_regress.test_pickle.ModelPickleTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/collin/django1.8/tests/model_regress/test_pickle.py"", line 85, in test_unpickling_when_appregistrynotready
    result = subprocess.check_output(['python', script.name])
subprocess.CalledProcessError: Command '['python', '/home/collin/django1.8/tests/tmpeqwmbhyl.py']' returned non-zero exit status 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/collin/django1.8/tests/model_regress/test_pickle.py"", line 87, in test_unpickling_when_appregistrynotready
    self.fail(""Unable to reload model pickled data"")
AssertionError: Unable to reload model pickled data

----------------------------------------------------------------------
Ran 3 tests in 0.062s

FAILED (failures=1)
Destroying test database for alias 'default'...
Destroying test database for alias 'other'...
```
",collinanderson,None,2014-12-17T22:52:36Z,2014-12-18T01:09:48Z
3748,Fixed #24014 -- Unified OGRException and GDALException,,claudep,None,2014-12-17T21:05:21Z,2014-12-18T10:29:07Z
3747,Fixed #24007 -- Ensure apps registry's ready before unpickling models,"This prevents AppRegistryNotReady errors when unpickling Django
models from an external script.
",claudep,None,2014-12-17T16:28:47Z,2014-12-17T17:42:39Z
3746,Refs #24001: Added regression test for html.strip_tags,"Added regression test to check for runaway execution in html.strip_tags.
",mhall1,None,2014-12-17T13:30:09Z,2014-12-17T14:34:31Z
3745,[1.6.x] Refs #24001: Added regression test for html.strip_tags,"Added regression test to check for runaway execution in html.strip_tags.
",mhall1,None,2014-12-17T13:08:03Z,2014-12-17T13:13:08Z
3744,Fixed display of lists after website redesign,"Issue: django/djangoproject.com#197
",MarkusH,None,2014-12-17T13:04:30Z,2014-12-17T13:34:06Z
3743,Fixed #24002 -- GenericRelation filtering targets related model's pk,"Previously Publisher.objects.filter(book=val) would target
book.object_id if book is a GenericRelation. This is inconsistent to
filtering over reverse foreign key relations, where the target is the
related model's primary key.
",akaariai,None,2014-12-17T08:04:13Z,2014-12-17T13:19:15Z
3742,保持一致,"与版本库保持一致
",fangpeng,None,2014-12-17T01:29:54Z,2014-12-17T01:33:42Z
3741,Merge pull request #1 from django/master,"与原作者保持一致
",fangpeng,None,2014-12-17T01:25:01Z,2014-12-17T01:25:55Z
3740,Fixed the formatting of one section of the security page,,alex,None,2014-12-16T23:54:16Z,2014-12-17T00:02:23Z
3739,Fixed #23998 -- Added datetime.time support to migrations questioner,"When trying to use datetime.time(10) value for a django.db.models.fields.TimeField model default value on the default value questioner the system raises this exception:

```
The datetime module is available, so you can do e.g. datetime.date.today()
>>> datetime.time(10)
Traceback (most recent call last):
File ""manage.py"", line 10, in <module>
  execute_from_command_line(sys.argv)
[....]
File ""/Users/tuxskar/.virtualenvs/caluny/lib/python2.7/site-packages/django/db/migrations/questioner.py"", line 126, in ask_not_null_addition
    return eval(code, {}, {""datetime"": datetime_safe})
  File ""<string>"", line 1, in <module>
TypeError: 'module' object is not callable
```

This patch fix it
",tuxskar,None,2014-12-16T23:36:55Z,2014-12-22T12:29:10Z
3738,Merge pull request #1 from django/master,"与原作者保持一
",fangpeng,None,2014-12-16T16:53:44Z,2014-12-16T17:23:30Z
3737,Fixed #23893: Added tzinfo to constant datetime in unit test,"Added tzinfo to y2k constant (01/01/2000) in
custom_lookups.tests.DateTimeLookupTests.test_datetime_output_field
to fix warning message regarding naive datetimes.

Using default timezone from config (since pytz may not be available).
",mhall1,None,2014-12-16T07:24:41Z,2014-12-16T12:22:38Z
3736,Fixed #23893: Added tzinfo to constant datetime in unit test,"Added tzinfo to y2k constant (01/01/2000) in custom_lookups.tests.DateTimeLookupTests.test_datetime_output_field to fix warning message regarding naive datetimes. Using default timezone from config (since pytz may not be available).
",mhall1,None,2014-12-16T07:08:42Z,2014-12-16T07:16:59Z
3735,Fixed #23983 - Fixed a crash in migration when adding `order_with_respect_to` to table with data,"Need to check `if not field.has_default()` to give users ability to set default in migration if they need it
",coldmind,None,2014-12-16T00:36:41Z,2014-12-16T15:58:49Z
3734,Fixed #16028 - Moved defaultfilters tests into template_tests.,,prestontimmons,None,2014-12-15T22:15:27Z,2014-12-16T19:46:31Z
3733,Fixed reverse test execution for migration manager tests,,MarkusH,None,2014-12-15T21:44:44Z,2014-12-30T15:40:33Z
3732,Fixed #23987 - Sqlite should always use effective_default,,coldmind,None,2014-12-15T14:22:02Z,2014-12-15T18:41:49Z
3731,Added es_MX translation to django.contrib.humanize.,,xzased,None,2014-12-15T04:44:30Z,2014-12-15T05:57:12Z
3730,Fixed #23992 -- Optimized reorder_suite functions using OrderedSet,"Django test suite setup takes 30s less after that patch. The problem was that the `if test not in bins[...]` have an inherent O(n) complexity, because they require implicit iteration over `bins[...]`.
",tchaumeny,None,2014-12-14T12:38:55Z,2014-12-14T16:29:34Z
3729,Fixed #16501 -- Added a unicode parameter to models.SlugField and forms.SlugField.,"https://code.djangoproject.com/ticket/16501
",berkerpeksag,None,2014-12-14T08:54:20Z,2015-04-16T00:43:47Z
3728,Fixed #23497 -- Made admin system checks run for custom AdminSites.,"https://code.djangoproject.com/ticket/23497
",berkerpeksag,None,2014-12-14T03:29:38Z,2014-12-17T14:21:08Z
3727,"Fixed #23991: Apparently, Oracle doesn't need the decimal field converter","Somewhat surprisingly, this passes the full test-suite.
@mjtamlyn @jarshwah  care to comment?
",shaib,None,2014-12-13T23:05:46Z,2014-12-16T13:08:10Z
3726,Fixed #23947 -- Django's test suite doesn't pass in reverse order with PostgreSQL,"Some suggestions to fix the problem when running Django's test suite using PostgreSQL database. With these changes, tests using Sqlite and PostgreSQL are running ok in both reverse and normal order.
",diegoguimaraes,None,2014-12-13T22:33:56Z,2014-12-16T01:22:37Z
3725,[1.4.x] Fixed #23990 -- Fix SyntaxError with Python 3,,amatellanes,None,2014-12-13T17:10:55Z,2014-12-13T17:13:14Z
3724,Removed empty gis models.py,"Refs #22645.
",claudep,None,2014-12-13T15:24:22Z,2014-12-13T16:10:54Z
3723,Fixed #23812 - Changed django.utils.six.moves.xrange imports to range,"Changed all usages of django.utils.six.moves.xrange to django.utils.six.moves.range.
",mhall1,None,2014-12-13T13:13:29Z,2014-12-13T17:46:40Z
3722,Fixed #23989 -- Korean translation of timesince filter is wrong.,"https://code.djangoproject.com/ticket/23989
",devunt,None,2014-12-13T12:16:56Z,2014-12-13T12:53:56Z
3721,[1.7.x] Fixed #23986 -- clear_dir no longer fails if dir doesn't exist,"If the target directory didn't exist when running `collectstatic
--clear` then an OSError exeception would be raised. After this
fix, if the directory doesn't exist then the clear_dir function
will return early. If by chance the user has a file matching the
name of the target directory a NotADirectoryError will now be raised.
",roebuk,None,2014-12-13T00:50:23Z,2014-12-15T21:56:55Z
3720,Fixed template tag spacing,,kevinmarsh,None,2014-12-12T13:29:07Z,2014-12-12T14:35:05Z
3719,fixed #23674 - corrected field initial processing,"invalid initial data shoudn't breaks form.changed_data
",gregorth,None,2014-12-11T20:45:42Z,2014-12-12T13:53:15Z
3718,Fixed #23982 -- Added doc note on generating Python 2/3 cross-compatible migrations.,"Fixes #23982, and reverts the auto-conversion of `related_name` added in #23455.
",carljm,None,2014-12-11T19:56:22Z,2014-12-12T20:05:39Z
3717,Fix typo.,,alimony,None,2014-12-11T18:28:25Z,2014-12-11T18:40:31Z
3716,Fixed #22645 -- Restored the GIS models in models.py.,"This reverts commit cebd8753c65ec33730f495bb7085f34884f7c3d6
and does some additional cleanup.
",timgraham,None,2014-12-11T18:06:23Z,2014-12-30T17:27:33Z
3715,Fixed #23956 -- Fixed migration creation for multiple table inheritance,"Ticket: https://code.djangoproject.com/ticket/23956
",MarkusH,None,2014-12-11T17:04:23Z,2014-12-11T20:16:23Z
3714,"Fix ""language_bidi"" filter wrongly named ""bidi"" in doc","Thanks :)
",yohanboniface,None,2014-12-11T15:30:32Z,2014-12-11T17:12:51Z
3713,Fixed #23977 -- Added setdefault method to HttpResponse,"Ticket #23977. Created set_default method for more convenient default headers setting in HttpResponse.
",proitm,None,2014-12-10T20:17:11Z,2014-12-11T18:58:25Z
3712,Fixed postgis test database initialization,"Refs #20968. Allow querying template_postgis presence without
existing test database.
",claudep,None,2014-12-09T14:31:25Z,2014-12-12T19:10:11Z
3711,Fixed #23975 -- Sent pre_migrate signal if all apps have migrations.,"https://code.djangoproject.com/ticket/23975
",timgraham,None,2014-12-09T13:47:00Z,2014-12-16T23:39:36Z
3710,Fixed #23884 -- Moved FlatPageSitemap into django.contrib.flatpages.,"https://code.djangoproject.com/ticket/23884
",berkerpeksag,None,2014-12-09T00:05:16Z,2014-12-15T22:02:45Z
3709,Clean up d.c.sites cache after each test,"`django.contrib.sites.models.Site` instances are cached in a global variable `SITE_CACHE`, which can make tests interfere with each other.
For instance, before this commit, tests are failing when run in the following order:
`python tests/runtests.py contenttypes_tests.tests.ContentTypesViewsTests.test_shortcut_with_absolute_url syndication_tests`
",tchaumeny,None,2014-12-08T22:53:12Z,2014-12-08T23:10:31Z
3708,fixed #23674 - corrected field initial processing,"invalid initial data shoudn't breaks form.changed_data
",gregorth,None,2014-12-08T22:46:24Z,2014-12-11T20:49:14Z
3707,"Refs #23964 -- Added warning about case-insensitive, unique fields used with formsets",,jdufresne,None,2014-12-08T15:58:39Z,2016-03-13T23:03:55Z
3706,"Added a ""htmlview"" target.","This is a very helpful helper if you build and test
documentation updates in your development env.

Copied from CPython's Doc/Makefile.
",berkerpeksag,None,2014-12-07T23:34:44Z,2015-01-27T04:23:10Z
3705,"Fixed #23971 -- Added ""no date""/""has date"" options to admin date filter","I don't know if you guys will find this useful, its just something I've needed for my system, as I only populate sent DateTimes on Messages once they've been sent.
",rynomster,None,2014-12-07T20:08:44Z,2015-04-16T17:28:47Z
3704,Fix register_lookup() class name in doc example,,pquentin,None,2014-12-07T20:02:33Z,2020-02-06T05:52:37Z
3703,fixed #23674 fixed way of populing initial data,"if form didn't pass validation we don't use that
data for popolating initial instead of we use original
initial data.
",gregorth,None,2014-12-06T23:18:38Z,2014-12-08T23:10:54Z
3702,Add missing dot,,rutsky,None,2014-12-06T21:50:54Z,2014-12-07T13:02:21Z
3701,Fixed #23968 -- Replace list comprehension with generator comprehension when possible,,jdufresne,None,2014-12-06T21:20:07Z,2016-03-13T23:03:55Z
3700,Fixed #23405 - Fixed asking for default value for `CharField` and `TextField` in migrations,"I think modifying autodetector will be enough.
When migration will be applying, `django.db.backends.schema.BaseDatabaseSchemaEditor#effective_default` set correct value (empty string) for `TextField` and `CharField`, if they are blank, but NOT NULL.
",coldmind,None,2014-12-06T20:52:58Z,2015-01-08T21:40:39Z
3699,Fix docs typo,,inglesp,None,2014-12-06T12:57:45Z,2014-12-06T14:23:31Z
3698,Adds pre_migration methods to DatabaseWrapper to support SpatiaLite,,kenial,None,2014-12-06T11:53:21Z,2014-12-07T00:33:44Z
3697,Fixed #20968 -- Checked Spatialite metadata on connection creation,,claudep,None,2014-12-06T10:09:29Z,2014-12-08T21:23:31Z
3696,Fixed #23967 -- Added formats for Greek,"For ticket #23967 (https://code.djangoproject.com/ticket/23967#ticket)
",spapas,None,2014-12-06T09:52:02Z,2015-01-09T22:10:20Z
3695,Fixed #23966: Adds `SELECT InitSpatialMetaData();` query execution,"This query needs to be executed once at least, before migrating SpatiaLite-backend databases.
",kenial,None,2014-12-06T09:36:26Z,2014-12-06T14:18:14Z
3694,Added RasterSource/GDALBand GDAL objects,"Based on Daniel Wiesmann's raster branch. Refs #23804.
",claudep,None,2014-12-05T21:10:18Z,2014-12-23T15:40:58Z
3693,Cleaned up a note in docs/topics/db/sql.txt.,"The note under [Passing parameters into raw()](https://docs.djangoproject.com/en/dev/topics/db/sql/#passing-parameters-into-raw) would look better without the title.
",wrwrwr,None,2014-12-05T18:08:46Z,2014-12-06T14:26:27Z
3692,Fixed #23955 - remove {{ form.id }} and add {{ form.pubdate }} for forms...,"...ets Doc
[master] Fixed #23955 - remove {{ form.id }} and add {{ form.pubdate }} for formsets Doc
",you-n-g,None,2014-12-05T16:03:20Z,2014-12-05T16:33:08Z
3691,[1.5.x] Fixed #23955 - remove {{ form.id }} and add {{ form.pubdate }} f...,"...or formsets Doc

I find this bug https://code.djangoproject.com/ticket/23955 and try fix it
",you-n-g,None,2014-12-05T15:53:02Z,2014-12-05T16:29:37Z
3690,[1.6.x] Fixed #23955 - remove {{ form.id }} and add {{ form.pubdate }} f...,"I find this bug https://code.djangoproject.com/ticket/23955 and try fix it
",you-n-g,None,2014-12-05T15:52:34Z,2014-12-05T16:29:31Z
3689,Fixed #23955 - remove {{ form.id }} and add {{ form.pubdate }} for forms...,"I find this bug https://code.djangoproject.com/ticket/23955 and try fix it
",you-n-g,None,2014-12-05T15:51:28Z,2014-12-05T16:29:55Z
3688,[1.7.x] Fixed #23955 - remove {{ form.id }} and add {{ form.pubdate }} f...,"I find this bug https://code.djangoproject.com/ticket/23955 and try fix it
",you-n-g,None,2014-12-05T15:50:29Z,2014-12-05T16:29:24Z
3687,Fixed #23822 -- Added support for serializing model managers in migration,"Ticket: https://code.djangoproject.com/ticket/23822
- [x] Implementation
- [x] User documentation
- [x] Reference documentation
- [x] Tests
",MarkusH,None,2014-12-05T03:11:53Z,2014-12-15T15:55:24Z
3686,Fixed #23957 -- Started deprecation toward requiring session verification,,timgraham,None,2014-12-04T17:49:21Z,2014-12-05T12:43:09Z
3685,Fixed #23954 -- Added special text/varchar PostgreSQL indexes in migrations,"Thanks adityagupta104 for the report.
",claudep,None,2014-12-04T17:10:40Z,2014-12-04T20:41:05Z
3684,SimpleTestCase should not be used when data is created,"That might cause the error I observed here http://djangoci.com/job/django-pull-requests/1921/database=sqlite3,python=python3.2/testReport/junit/syndication_tests.tests/SyndicationFeedTest/test_atom_feed/, though I'm not sure since I cannot reproduce it...
",tchaumeny,None,2014-12-04T14:26:44Z,2014-12-04T18:27:54Z
3683,Fixed #23920 -- Fixed MySQL crash when adding blank=True to TextField.,,timgraham,None,2014-12-04T14:12:32Z,2014-12-04T15:59:29Z
3682,"Fixed #23857 -- Fixed admin crash with ""save as new"" and deleting inline",,timgraham,None,2014-12-04T13:24:11Z,2014-12-12T17:09:51Z
3681,Refs #20392 -- Loads fixtures once within TestCase,"Following suggestions on https://code.djangoproject.com/ticket/20392 and https://groups.google.com/forum/#!topic/django-developers/deADv5ZaL6o, this PR takes advantage of the class level transaction in `TestCase` to load fixtures within `setUpClass`.
",tchaumeny,None,2014-12-04T13:09:52Z,2014-12-12T14:19:20Z
3680,Fixed #23958 - Rewrote filter tests as unit tests.,,prestontimmons,None,2014-12-04T02:56:28Z,2014-12-06T15:59:49Z
3679,Fixed #23947 -- Django's test suite doesn't pass in reverse order,"Fixed inconsistent tests when running Django's test suite with --reverse option.
",diegoguimaraes,None,2014-12-04T02:16:46Z,2014-12-07T02:49:58Z
3678,Typo!,#NAME?,benjaoming,None,2014-12-04T00:43:06Z,2014-12-04T00:54:12Z
3677,Fixed #12118 - Added ability to share sqlite in-memory database in threads.,"Sqlite3 with version >=3.7.13 can share in-memory database between threads.
Built-in sqlite module of python2 comes without ability to specify in-memory database name as URI, but since python3.4 can do this,
So, need to use database name as URI to prevent fails in tests.
I'm returning URI manually, if database name is specified as `:memory:` in settings to give ability to use shared cache without specifying it manually (people will have this after update).
",coldmind,None,2014-12-03T23:31:27Z,2014-12-31T00:32:35Z
3676,fix QueryDict docs typo,,thikonom,None,2014-12-03T22:27:41Z,2014-12-03T23:42:19Z
3675,fix QueryDict docs typo,,thikonom,None,2014-12-03T22:15:04Z,2014-12-03T22:19:09Z
3674,Converted recently refactored templates tests to SimpleTestCase.,"These test methods don't need DB setup/teardown.

Refs #23768 and b872134b.
",ramiro,None,2014-12-03T20:53:35Z,2014-12-28T18:37:05Z
3673,Added a test to verify headers set by default middleware; refs #23939.,,timgraham,None,2014-12-03T14:47:04Z,2014-12-03T19:25:37Z
3672,Fixed #23939 -- Moved session verification out of SessionAuthenticationMiddleware.,,timgraham,None,2014-12-03T12:39:32Z,2014-12-03T18:42:36Z
3671,"Fixed ""no such test method"" error in template_tests.","Without this patch, you couldn't run an individual test
case in template_tests.

Refs #23768
",berkerpeksag,None,2014-12-03T11:23:24Z,2014-12-03T12:45:27Z
3670,Less c,,PirosB3,None,2014-12-03T09:50:47Z,2014-12-03T20:43:56Z
3669,Fixed #24020 -- Refactored SQL compiler to use expressions & refactored select_related() implementation,"This pull requests does two important changes to the ORM:
  1) The ORM uses internally expressions. SELECT clauses are expressions, ORDER BY clauses are expressions and so on. The conversion to expressions is currently done in the compiler to keep the scope of the
patch somewhat manageable.
  2) The way select_related() queries are implemented is refactored. The compiler sets up the query, and the QuerySet iterator() uses the data generated by the compiler. Previously both the compiler and the iterator calculated the select columns which resulted in a bad DRY violation. The new way is 30% faster on djangobench query_select_related tests.
  3) Queries now have context variable. In essence this is a store for custom per-query variables. The context is currently used only internally, but exposing it in the QuerySet API could be a good addition. Things like choosing the time zone, SRID for gis or active language could be implemented using context.
  4) Database converters now work on expressions instead of internal_type. It is of course possible to get the internal type from expression.output_field.get_internal_type(). In addition converters now have access to context.

Tests pass on SQLite and PostgreSQL. There are still some failures on MySQL. Tests likely fail on Oracle, but I haven't tested this yet.
",akaariai,None,2014-12-03T07:29:47Z,2015-01-09T06:34:07Z
3668,Fixed #23950 -- Don't call deconstruct on classes in MigrationWriter,"https://code.djangoproject.com/ticket/23950
",gavinwahl,None,2014-12-03T02:02:17Z,2014-12-03T13:33:13Z
3667,[1.7.x] Fixed #23939 -- Moved session verification out of middleware.,"https://code.djangoproject.com/ticket/23939
",timgraham,None,2014-12-02T21:12:30Z,2014-12-30T17:29:42Z
3666,Soc2014 meta refactor upgrade flags get field tree 2,,PirosB3,None,2014-12-02T19:49:45Z,2014-12-03T20:44:08Z
3665,Fixed #23938 -- Added migration support for m2m to concrete fields and vice versa,"Ticket: https://code.djangoproject.com/ticket/23938
",MarkusH,None,2014-12-02T18:27:19Z,2014-12-30T15:40:13Z
3664,Fixed #23946 - Runserver command socket error decoded to utf-8,,coldmind,None,2014-12-02T14:14:06Z,2014-12-02T17:02:35Z
3663,Fixed incorrect use of rst section heirarchy in form fields docs.,"Correct that `UUIDField` is not on list with other fields.

HTML currently looks as follows:

```
<li><a class=""reference internal"" href=""#slugfield""><tt class=""docutils literal""><span class=""pre"">SlugField</span></tt></a></li>
<li><a class=""reference internal"" href=""#timefield""><tt class=""docutils literal""><span class=""pre"">TimeField</span></tt></a></li>
<li><a class=""reference internal"" href=""#urlfield""><tt class=""docutils literal""><span class=""pre"">URLField</span></tt></a></li>
</ul>
</li>
<li><a class=""reference internal"" href=""#uuidfield""><tt class=""docutils literal""><span class=""pre"">UUIDField</span></tt></a></li>
<li><a class=""reference internal"" href=""#slightly-complex-built-in-field-classes"">Slightly complex built-in <tt class=""docutils literal""><span class=""pre"">Field</span></tt> classes</a><ul>
<li>
```

After this change: 

```
<li><a class=""reference internal"" href=""#slugfield""><tt class=""docutils literal""><span class=""pre"">SlugField</span></tt></a></li>
<li><a class=""reference internal"" href=""#timefield""><tt class=""docutils literal""><span class=""pre"">TimeField</span></tt></a></li>
<li><a class=""reference internal"" href=""#urlfield""><tt class=""docutils literal""><span class=""pre"">URLField</span></tt></a></li>
<li><a class=""reference internal"" href=""#uuidfield""><tt class=""docutils literal""><span class=""pre"">UUIDField</span></tt></a></li>
</ul>
</li>
<li><a class=""reference internal"" href=""#slightly-complex-built-in-field-classes"">Slightly complex built-in <tt class=""docutils literal""><span class=""pre"">Field</span></tt> classes</a><ul>
```
",elena,None,2014-12-02T05:43:58Z,2014-12-02T12:17:29Z
3662,Ensure foreign_object tests reset language properly.,"This makes sure activated translations are always deactivated.
",prestontimmons,None,2014-12-02T04:58:24Z,2014-12-02T12:32:20Z
3661,typo,"typo
",jerry-dumblauskas,None,2014-12-02T02:54:38Z,2014-12-02T12:28:52Z
3660,Fixed #23913 -- Deprecation of `=` comparison in `if` template tag,"This is a pull request for ticket [#23913](https://code.djangoproject.com/ticket/23913) that deprecates the ""feature"" that allows for comparison in `if` template tag using `=` operator (instead of `==`). There was some dicussion in the tickets if this change should be made, but I believe that we shouldn't let people create wrong coding patterns, even if it means that one day they will have to fix mistakes of using this undocumented feature in their old code.

I am not entirely sure that this is how you do deprecation path and I also couldn't find docs for that in contribution guidelines, so I'd be happy to fix whatever I did wrong :)
",olasitarska,None,2014-12-01T22:10:34Z,2015-01-11T19:40:14Z
3659,Fixed #23945 -- Made default site use the configured SITE_ID.,"Please see [#23945](https://code.djangoproject.com/ticket/23945).
",wrwrwr,None,2014-12-01T21:42:34Z,2014-12-02T08:08:05Z
3658,Refs #18586 -- Split up model_inheritance.ModelInheritanceTest,"https://code.djangoproject.com/ticket/18586
",alexanderad,None,2014-12-01T20:08:38Z,2014-12-03T23:55:14Z
3657,Fixed #18586: rewrote model_package.ModelPackageTests.test_models_packages,"Ticket https://code.djangoproject.com/ticket/18586
",alexanderad,None,2014-12-01T13:24:09Z,2014-12-01T17:56:18Z
3656,Fixed #23909 -- Prevented crash when collecting SQL for RunSQL,"Thanks James Rivett-Carnac for the report and Markus Holtermann
for the review.
",claudep,None,2014-12-01T10:16:13Z,2014-12-01T20:00:35Z
3655,Fixed #23941 -- Aggregating over decimal field regression,"This patch fixes the regression but probably isn't ready for commit just yet. 

What this patch does is ignores the ""max_digits"" and ""decimal_places"" arguments of a DecimalField for all annotations. Setting your own arbitrary digits/decimals makes no sense with regards to aggregation, but it may make sense for other annotations.
",jarshwah,None,2014-12-01T06:29:09Z,2014-12-13T13:03:46Z
3654,Address problems of #10060 with a documentation note.,"This issue does not look to be solved atm. and too many people have bothered with it.

I suggest adding a note / tip that introspecting the .query property is always a good idea and that especially combining several aggregations yields the wrong results.
",benjaoming,None,2014-11-30T23:03:52Z,2014-12-04T00:19:21Z
3653,Fixed #23880 -- Added missing index_together handling for SQLite,"Ticket: https://code.djangoproject.com/ticket/23880
",MarkusH,None,2014-11-30T17:14:56Z,2014-12-01T19:32:00Z
3652,Fixed #5986 -- Added ability to customize order of Form fields,"It is sometimes necessary to alter the order in which fields are rendered, or remove individual fields, especially when subclassing forms.
With this patch one can easily override the default order with a list of field names.

Ticket https://code.djangoproject.com/ticket/23936
",ttanner,None,2014-11-30T14:58:09Z,2015-03-16T13:13:31Z
3651,Fixed #23935 -- Convert decimals to fixed point in django.utils.numberformat.format,,xblitz,None,2014-11-30T08:34:40Z,2015-04-13T14:47:35Z
3650,WIP: use wsgi.file_wrapper,,collinanderson,None,2014-11-29T22:10:05Z,2014-12-09T18:05:25Z
3649,Fixed #23289 -- Added mock as a test dependency.,,timgraham,None,2014-11-29T16:50:53Z,2014-12-01T21:10:22Z
3648,Added GDAL raster driver support,"Based on Daniel Wiesmann's work.
",claudep,None,2014-11-29T16:00:13Z,2014-12-02T19:01:14Z
3647,Fixed #23807 -- Ignored non-digits in psycopg2 version,,coldmind,None,2014-11-29T14:41:27Z,2014-12-01T23:43:08Z
3646,Fixed #23933 -- Made override_settings(DATABASE_ROUTERS) affect the master router.,"Please see [#23933](https://code.djangoproject.com/ticket/23933).
",wrwrwr,None,2014-11-29T13:46:14Z,2014-12-02T08:08:16Z
3645,Fixed #23922 -- Corrected parsing of URLs containing a # char in RequestFactory.,"https://code.djangoproject.com/ticket/23922
",berkerpeksag,None,2014-11-29T06:48:33Z,2014-12-28T04:32:16Z
3644,Fixed #17890 -- Added a extra_context parameter to AdminSite.password_change().,"https://code.djangoproject.com/ticket/17890
",berkerpeksag,None,2014-11-29T06:20:26Z,2014-11-29T18:01:01Z
3643,Fixed #23930 -- Added copies of captured_std* managers from CPython's test.support.,"Please see [#23930](https://code.djangoproject.com/ticket/23930).
",wrwrwr,None,2014-11-28T23:28:04Z,2014-12-02T08:08:17Z
3642,Fixed #23931 -- Incremented creation_counter for managers created via db_manager(),"This ensures managers created in this way are not inadvertently set as
the default manager.

Trac ticket here: https://code.djangoproject.com/ticket/23931
",rhettg,None,2014-11-28T20:27:10Z,2015-03-14T22:55:56Z
3641,Fixed #23929 -- Added more tests for create_default_site.,"Please see [#23929](https://code.djangoproject.com/ticket/23929#ticket).
",wrwrwr,None,2014-11-28T16:50:33Z,2014-12-02T08:08:07Z
3640,Added send_email method to PasswordResetForm,"Similar to Django 1.7, PasswordResetForm now has a send_mail method. This is very useful, as this method can then be overriden.

In many applications, we want to reuse password resetting functionality of Django but there is a different mechanism for sending emails (let it be a call to RESTful API, a Celery task, mailx etc).

Please let me know what do you think about this proposed change.
",RichardKnop,None,2014-11-28T14:09:20Z,2014-11-28T14:32:58Z
3639,Fixed #23423 -- Added unaccent lookup in django.contrib.postgres,,tchaumeny,None,2014-11-28T14:01:12Z,2014-11-28T23:24:05Z
3638,Refactored order_with_respect_to tests Refs #18586,,helenst,None,2014-11-27T22:27:12Z,2014-12-04T16:07:07Z
3637,Fixed #23934 -- Fixed regression in admin views obj parameter.,"The _create_formsets function is a helper function which is used inside
the changeform_view method in several places. To generate formsets,
it first checks if we are inside the add_view method by seeing if obj.pk resolves to True,
that is, seeing if obj was recently created and hasn't had a primary key value
assigned yet. Unfortunately, this is a heuristic and isn't always appropriate.
In particular, this method doesn't give correct results if the primary key value
was explicitly passed inside the model's creation form. The proposed solution
is to pass another parameter to _create_formsets and use it for checking.
",kbr-,None,2014-11-27T18:34:46Z,2014-12-02T14:34:09Z
3636,Fixed a double article in model forms docs.,"A stray ""a"" above the first example in the section on [overriding default form fields](https://docs.djangoproject.com/en/dev/topics/forms/modelforms/#overriding-the-default-fields).
",wrwrwr,None,2014-11-27T15:32:05Z,2014-11-27T23:28:09Z
3635,Add default charset to render_javascript_catalog,"While doing a site scan with skipfish I found that responses from javascript_catalog were missing the charset. Clearly this has been harmless so far but let's try fixing it up anyway.

Please note this patch has (sadly) not been tested - it might not even compile... Hopefully I've followed your style guidelines but apologies if not.
",sitsofe,None,2014-11-27T11:36:43Z,2014-11-27T14:27:55Z
3634,Fixed #22276 -- Surfaced ValidationError to end-user if management form is invalid,"This change was accepted as part of https://code.djangoproject.com/ticket/22276
",patrys,None,2014-11-27T11:11:23Z,2015-04-23T12:01:19Z
3633,Fixed #23925 -- Allowed settings.AUTHENTICATION_BACKENDS to reference import aliases,"Added the right auth backend path in session, based on the
path defined in settings.AUTHENTICATION_BACKENDS and not on
the actual path of the backend object.
",sdeprez,None,2014-11-27T09:52:11Z,2014-11-28T15:48:09Z
3632,Fixed #21587 -- Raised deprecation warnings correctly.,,berkerpeksag,None,2014-11-27T03:45:32Z,2014-11-29T00:01:41Z
3631,Fixed #23768 -- Rewrote template tests as unit tests,,prestontimmons,None,2014-11-27T03:31:16Z,2014-12-03T00:19:14Z
3630,Fixed #23924 -- Made EmailMessage raise TypeError for type checks,"This change avoids silently producing broken `To`, `Cc` and `Bcc` headers when passed a string instead of a list of strings.
",martinblech,None,2014-11-27T02:19:35Z,2014-12-07T15:31:22Z
3629,Fixed #23847 -- Improved the email_check example.,"https://code.djangoproject.com/ticket/23847
",berkerpeksag,None,2014-11-27T02:19:16Z,2014-11-27T11:18:21Z
3628,Removed redundant numbered parameters from str.format().,"Since Python 2.7 and 3.1, ""{0} {1}"" is equivalent to ""{} {}"".
",berkerpeksag,None,2014-11-27T00:49:45Z,2014-12-04T04:03:21Z
3627,Update db.py,"It seems inappropriate to create a new session record just because one does not exist yet.

This means that is a developer calls request.session (just to read what is there, or if it is empty) that a new record will be written to the db.  It seems more appropriate to write to the db when something is actually modified.
",ericpeterson-l,None,2014-11-26T22:30:17Z,2014-11-26T23:10:18Z
3626,Fixed #23923 -- Promoted Django's deprecation warnings to errors in runtests.py,"https://code.djangoproject.com/ticket/23923
",timgraham,None,2014-11-26T21:22:20Z,2014-11-29T15:27:49Z
3625,Fixed #23901 -- Added how to use Homebrew for installing SpatiaLite,"Adds how to use Homebrew for installing SpatiaLite tools.
A note for syncdb when using SpatiaLite.
",kenial,None,2014-11-26T03:52:51Z,2014-11-26T19:19:53Z
3624,Fixed #23910 -- Added reply_to parameter to EmailMessage,,martinblech,None,2014-11-26T03:06:08Z,2014-12-07T15:30:43Z
3623,Fixed #5372 -- Added prefech to ModelAdmin inline ForeignKeys,"Made sure the admin prefetches foreign key fields for inline models.
",charettes,None,2014-11-25T22:47:33Z,2015-02-17T17:24:43Z
3622,Fixed #23915 -- Made sure m2m fields through non-pk to_field are allowed in the admin.,"... in the admin.

refs #23754, #23862
",charettes,None,2014-11-25T19:28:43Z,2014-11-25T20:29:38Z
3621,Fixed #23914 -- Improved {% now %} to allow storing its result in the context.,,bmispelon,None,2014-11-25T18:30:27Z,2014-11-25T21:13:00Z
3620,Fixed #23801 - Added warning when max_length is used with IntegerField,"just a starting idea
",MattBlack85,None,2014-11-25T16:17:16Z,2014-11-26T23:59:47Z
3619,Fixed #23898 -- Added missing context to admin's deleted_selected view.,,timgraham,None,2014-11-25T15:53:26Z,2014-11-25T18:38:13Z
3618,Fix object references in OneToOneTests.test_foreign_key,"It seems that as the result of a copy-paste-o, there were several incorrect references being made in the assertions in this test.  The test just passed by fluke because the IDs happened to be the same.

Some of the assertions which used to exist had also been been removed, seemingly because they failed when Django's query behaviour changed to introduce checking of object types as well as PK values, but no one realised that the assertions were referencing the wrong objects!  So now that the references have been fixed, I've restored those assertions as well.

All tests pass.
",adamalton,None,2014-11-25T11:26:01Z,2014-11-25T14:50:29Z
3617,Fixed #23911 -- Added support for buffer file uploads in the test client,"This patch renders the use of NamedTemporaryFile for file upload testing unnecessary
",ttanner,None,2014-11-25T10:56:06Z,2014-12-04T12:43:45Z
3616,Minor correction of inconsistency in manage.py docs,"Nowadays (since 1.7) manage.py actually does three things (debatable, depending on definition of ""thing"") before delegating. In the current paragraph text it states that it does two things, but then goes on to list three things. This tiny pull request (my first for Django) fixes this minor documentation inconsistency.
",richardolsson,None,2014-11-25T06:19:59Z,2014-11-25T12:52:44Z
3615,"Fixed #23901 -- Unable to load the SpatiaLite library extension ""/usr/local/lib/libspatialite.dylib""","This is Workaround for libspatialite 4.2.0 package on Homebrew, it requires mod_spatialite.dylib, if it exists.
- ticket link: https://code.djangoproject.com/ticket/23901
",kenial,None,2014-11-25T01:57:01Z,2014-11-26T02:46:36Z
3614,Workaround for libspatialite 4.2.0 package on Homebrew: it requires mod_...,"...spatialite.dylib, if it exists.
",kenial,None,2014-11-25T01:52:49Z,2014-11-25T02:05:51Z
3613,Fixed #23899 -- Added version note in settings.py,"Added `django_version` to `TemplateCommand`'s template context and a version note to the `settings.py` template.
",martinblech,None,2014-11-24T19:39:26Z,2014-11-25T15:05:36Z
3612,Typo: 'it is defined on' not 'it is defined it',,tomviner,None,2014-11-24T15:29:54Z,2014-11-25T23:16:02Z
3611,Removed workaround for lack of os.getpid() in Jython.,"The Jython bug was fixed in http://bugs.jython.org/issue1518

refs #23905
",timgraham,None,2014-11-24T15:15:35Z,2014-11-24T19:10:54Z
3610,Unused variable ``absolute_http_url_re``,"This variable isn't referenced anywhere else in the codebase

```
$ ag absolute_http_url_re
django/http/request.py
25:absolute_http_url_re = re.compile(r""^https?://"", re.I)
```
",mattrobenolt,None,2014-11-24T06:10:15Z,2014-11-24T12:05:04Z
3609,Fixed #12982 -- Added a ``get_or_set`` method to the BaseCache backend.,"https://code.djangoproject.com/ticket/12982
",berkerpeksag,None,2014-11-23T18:33:52Z,2015-03-14T18:33:15Z
3608,Fixed #23900 - Added missing imports for Preventing header injection exa...,,kevgathuku,None,2014-11-23T18:02:55Z,2014-11-24T09:06:33Z
3607,"fixed #23898 delete_selected's context, missing admin_site.each_context()","fixes delete_selected's context passed to template, as it misses admin_site.each_context(), and thus always renders default values for site_header, site_title and site_url.
",redouane,None,2014-11-23T14:11:38Z,2014-11-25T15:53:45Z
3606,Fixed #13694 -- Made SafeMIMEText's constructor compatible with MIMEText.,"https://code.djangoproject.com/ticket/13694
",berkerpeksag,None,2014-11-23T01:13:31Z,2014-12-01T08:41:30Z
3605,Refactor template engine as library,"This pull request fixes Trac ticket #17093.
",aaugustin,None,2014-11-22T21:53:19Z,2014-11-23T21:03:22Z
3604,Silenced a flake8 warning.,"../tests/shortcuts/views.py:45:1: E302 expected 2 blank lines, found 1

Just saw this at http://djangoci.com/job/django-pull-requests/1725/database=sqlite3,python=python2.7/console
",berkerpeksag,None,2014-11-22T19:40:42Z,2014-11-22T21:34:38Z
3603,Fixed #23894 -- Made deconstruct methods favor kwargs over args,"Ticket: https://code.djangoproject.com/ticket/23894
",MarkusH,None,2014-11-22T18:11:50Z,2014-12-30T15:41:30Z
3602,Fixed #23892 -- Made deconstructible classes forwards compatible,"Ticket: https://code.djangoproject.com/ticket/23892
",MarkusH,None,2014-11-22T16:36:29Z,2014-11-23T16:27:02Z
3601,Avoided rewrapping Contexts in render_to_response.,"This change preserves backwards-compatibility for a very common misuse
of render_to_response which even occurred in the official documentation.

It fixes that misuse wherever it happened in the code base and docs.

Context.**init** is documented as accepting a dict and nothing else.
Since Context is dict-like, Context(Context({})) could work to some
extent. However, things get complicated with RequestContext and that
gets in the way of refactoring the template engine. This is the real
rationale for this change.
",aaugustin,None,2014-11-22T08:50:16Z,2014-11-22T17:05:22Z
3600,Allow users to specify an authentication backend when manually authentic...,"...ating

I've recently come across an interesting use case in which I needed to target a specific AUTHENTICATION_BACKEND when authenticating specific users.  I couldn't find a clean way to do this so I thought it might be best to submit a request and see how others felt about it.
",cherepski,None,2014-11-22T02:24:55Z,2014-12-24T17:39:25Z
3599,Fixed #23887 -- Returned Bad Request for multipart parsing fails,"Thanks Antti Häyrynen and Tim Graham for the report.
",claudep,None,2014-11-21T20:50:19Z,2014-11-22T13:24:39Z
3598,Updated testing documentation following 498ae3a36069e2d,#NAME?,tchaumeny,None,2014-11-21T17:37:27Z,2014-11-24T18:11:54Z
3597,Fixed #21587 -- Added a deprecation warning for RedirectView.permanent.,"https://code.djangoproject.com/ticket/21587
",berkerpeksag,None,2014-11-21T17:05:22Z,2014-11-25T14:53:01Z
3596,"docs: release-process typo ""to development""","""to develop"" rather than ""to development""
",tomviner,None,2014-11-21T16:43:50Z,2014-11-23T00:45:42Z
3595,Fixed #23889 -- Use quote_name_unless_alias on mysql,"https://code.djangoproject.com/ticket/23889
",collinanderson,None,2014-11-21T16:38:48Z,2014-11-21T21:45:42Z
3594,Fixed #23888 -- Forced File.__repr__ to return string,,sir-sigurd,None,2014-11-21T14:50:18Z,2015-10-22T05:56:17Z
3593,Update django.po,"same line,seems like a 'bug'.^^...
",sayseesea,None,2014-11-21T12:56:55Z,2014-11-21T13:29:11Z
3592,Updated info about Permission.max_length,"updated docs in accordance with cf252dbe
",sir-sigurd,None,2014-11-21T12:14:38Z,2014-11-24T20:50:15Z
3591,Fixed #18586 Adding basic.tests.ModelTests.test_object_creation and signals.tests.Sig...,"Fixed #18586 basic.tests.ModelTests.test_object_creation and signals.tests.SignalTests.test_basic
",jayachandp,None,2014-11-21T11:20:40Z,2014-11-21T15:40:18Z
3590,Fixed #23883 -- Stop flatatt modifying its argument,"The `django.forms.utils.flatatt` function modifies the dict passed in, deleting any boolean attributes it encounters. Calling the function twice using the same dict that contains boolean attributes will thus result in different output, as the boolean attributes have been deleted:

``` python
>>> attrs = {'hello': 'world', 'data-true': True, 'data-false': False}
>>> flatatt(attrs)
' hello=""world"" data-true'
>>> flatatt(attrs)
' hello=""world""'
```

The function should not modify the dict passed in like it does, leaving it unchanged. Fixing this will make the function behave as expected when called with the same dict twice.

https://code.djangoproject.com/ticket/23883#ticket
",timheap,None,2014-11-21T01:43:01Z,2014-11-21T08:46:30Z
3589,Fixed #23859 -- Fixed duplicate index error on Oracle,"Ticket: https://code.djangoproject.com/ticket/23859#comment:6

Refers to regression introduced in #3563 
",MarkusH,None,2014-11-20T16:12:42Z,2014-11-20T19:44:57Z
3588,Added missing backticks to form validation docs,,alasdairnicol,None,2014-11-20T15:37:02Z,2014-11-20T16:10:35Z
3586,Fixed #23780 -- Added ability to configure natural keys from a tuple on meta,"Using a model's meta to define a list of fields to use for natural keys. Eliminates the double implementation of natural keys needed in order to use them, also supports inheritance. 
",scrummyin,None,2014-11-20T13:42:10Z,2014-11-27T23:41:18Z
3585,Fixed #23877 -- aggregation's subquery missed target col,"Aggregation over subquery produced syntactically incorrect queries in
some cases as Django didn't ensure that source expressions of the
aggregation were present in the subquery.
",akaariai,None,2014-11-20T12:30:41Z,2014-11-27T12:11:49Z
3584,Fixed #23876 -- Removed dead code in SQLAggregateCompiler.,,carljm,None,2014-11-20T11:18:30Z,2014-11-20T12:03:21Z
3583,Fixed #23875 -- cleaned up query.get_count(),"The query.get_count() can be significantly cleared up due to expressions API changes.
",akaariai,None,2014-11-20T10:34:13Z,2014-11-27T11:27:31Z
3582,Fixed #12098 -- Simplified HttpRequest.__repr__().,"https://code.djangoproject.com/ticket/12098
",berkerpeksag,None,2014-11-20T09:29:02Z,2014-11-20T13:52:36Z
3581,Fixed #23873 -- Improved GIS error message when GEOS is not installed.,,carljm,None,2014-11-20T02:11:40Z,2014-11-20T02:38:29Z
3580,Backported pull request #3564 from master to 1.7.x,,MarkusH,None,2014-11-19T22:14:38Z,2014-11-20T09:41:33Z
3579,Added AutoField introspection for MySQL and PostgreSQL,"Refs #23748
",claudep,None,2014-11-19T21:35:32Z,2017-01-29T11:14:46Z
3578,Fixed #23872 -- Removed sensitivity of migrations tests to CWD.,,carljm,None,2014-11-19T21:09:52Z,2014-11-19T22:04:38Z
3577,Fixed #23871 -- Removed promotion of MySQL warnings to errors in DEBUG mode.,,timgraham,None,2014-11-19T19:40:00Z,2014-12-02T19:15:56Z
3576,Fixes #23714 -- `date` filter during DST change,"The except block catching all exceptions is ugly, but I can't rely on `pytz` library, which is optional, and therefore I can't catch `pytz.exceptions.AmbiguousTimeError` exception.
",tricoder42,None,2014-11-19T08:39:05Z,2015-03-30T18:08:22Z
3575,Remove manual caching in globals,"This PR takes advantage of `lru_cache` to remove many uses of the `global` keyword.

I've always been at war with `global` :-)
",aaugustin,None,2014-11-18T20:55:44Z,2014-11-19T20:49:55Z
3574,Remove text-mangling of default values.,"I don't seem to get any failures with this locally. Would need a ticket and docs for merge, making this a PR for the CI.

The behaviour is weird at present - if you pass a fixed value then we force to text, but we don't for callable defaults, implying tht we support non-text values elsewhere. I've had some issues to fix or work around in contrib.postgres as a result of this code.
",mjtamlyn,None,2014-11-18T20:27:48Z,2014-12-09T09:13:31Z
3573,Fixed #23865 -- documented how to assign errors to a field in Model.clean(),"...n()
",alasdairnicol,None,2014-11-18T18:02:15Z,2014-11-21T18:03:25Z
3572,Fixed 22248 -- Fixed backwards model renaming,,stratoukos,None,2014-11-18T12:32:49Z,2016-05-13T14:24:49Z
3571,Fixed #23863 -- Made runtests accept the keepdb option.,"refs #20550
",charettes,None,2014-11-18T09:54:38Z,2014-11-21T16:43:04Z
3570,Fixed #23867 -- removed DateQuerySet hacks,"Removed DateQuerySet and all related classes to it. Previously Django used a Compiler subclass to implement value conversions for DateQuerySets. Now with the new expressions and converters APIs this isn't necessary any more. We can just use plain queryset methods and an expression to implement what we want.

The code now calls expression.get_db_converters(), where it applied blindly expression.convert_value before. The biggest problem currently is that expression.get_db_converters() is called _after_ database's get_converters method. The comments in the code say that the expression.convert_value should  be called first. I believe I need to make some more changes here before the build passes.
",akaariai,None,2014-11-18T09:19:21Z,2015-04-18T13:47:04Z
3569,Deprecate calling a SQLCompiler instance.,,carljm,None,2014-11-18T01:05:53Z,2014-11-19T15:04:50Z
3568,Fixed #23754 -- Always allow reference to the primary key in the admin,"This change will allow dynamically created inlines ""Add related"" button to
work correcly as long as their associated foreign key is pointing to the primary
key of the related model.

Also adjusted `get_inline_instances()` documentation to deal with another
possible edge case.

Thanks to amorce for the report, Julien Phalip for the initial patch
and Collin Anderson for the review.
",charettes,None,2014-11-18T00:23:39Z,2014-11-25T18:35:37Z
3567,Fix link target markup,"This markup for a code block is redundant with the code-block directive below,
and blocks the following line from working as link target.
",merwok,None,2014-11-17T23:22:36Z,2014-11-18T00:20:40Z
3566,Fixed #23860 -- Documented imports order convention.,"Please see [#23860](https://code.djangoproject.com/ticket/23860).
",wrwrwr,None,2014-11-17T23:05:28Z,2015-01-29T00:37:23Z
3565,Fixed #23862 -- Made sure m2m fields through to_field correcly work.,,charettes,None,2014-11-17T22:45:46Z,2014-11-21T21:04:24Z
3564,Cleanup autodetector tests,,MarkusH,None,2014-11-17T22:14:29Z,2014-11-20T09:41:39Z
3563,Fixed #23859 -- Fixed a migration crash when a field is renamed that is part of an index_together,"Ticket: https://code.djangoproject.com/ticket/23859
",MarkusH,None,2014-11-17T18:12:54Z,2014-11-17T20:51:46Z
3562,Fixed #23410 -- Avoid unnecessary rollbacks in related apps when migrating backwards.,,carljm,None,2014-11-17T17:17:20Z,2014-11-19T23:15:32Z
3561,Fixed #23853 -- added Join class to replace JoinInfo,"Replace ORM's JoinInfo namedtuple with a Join class. The idea is that the Join class actually produces the whole join and also contains additional join information (for example, is this join equal to some other already existing join?)
",akaariai,None,2014-11-17T08:21:41Z,2014-11-28T12:31:00Z
3560,Fixed #23849 -- Documented the locmem.Loader class.,,prestontimmons,None,2014-11-16T23:32:30Z,2014-11-19T04:17:49Z
3559,Ticket 23840,"Fixed https://code.djangoproject.com/ticket/23840
",iljamaas,None,2014-11-16T21:29:32Z,2014-11-17T08:23:05Z
3558,Removed support for function-based template loaders.,"They were deprecated in Django 1.2 but not all the supporting code was
removed in Django 1.4. Since the remaining code was unlikely to be
functional (pun intended) e.g. it would crash unless the loader
function had an is_usable attribute, this commit completes the removal
immediately instead of starting another deprecation path.
",aaugustin,None,2014-11-16T21:11:37Z,2014-11-16T21:46:53Z
3557,Fixed #23758 -- Allowed more than 5 levels of subqueries,"- intentional breakage with recursion limit
- extents the alphabet ( to use multi letter ) for get alias prefix

executed from `test_subquery_condition` (queries.tests.Queries1Tests)
",piotrpawlaczek,None,2014-11-16T20:08:17Z,2014-12-31T13:50:33Z
3556,Avoid calling allow_migrate if unneeded,"It will simply avoid a function call and potential logic in
`allow_migrate` if there is no need to
",twidi,None,2014-11-16T09:27:05Z,2014-11-17T17:35:07Z
3555,Cleanup template loaders,,aaugustin,None,2014-11-16T07:50:19Z,2014-11-16T21:02:42Z
3554,Renamed qn to compiler,"This is a tidy up of method arguments previously called `qn` which previously stood for ""quote_names"". The actual object passed to most of these methods is now a `compiler`, which has the quote_name function as it's `__call__` method, to preserve compatibility.
",jarshwah,None,2014-11-16T03:05:10Z,2014-11-18T01:06:23Z
3553,Fixed #18714 -- Added 'fuzzy' compilemessages option,"https://code.djangoproject.com/ticket/18714
",bak1an,None,2014-11-15T23:06:48Z,2014-11-18T21:53:09Z
3552,Designated Django 1.8 as the next LTS.,"As discussed among the core team at Django Under the Hood.
",timgraham,None,2014-11-15T21:18:36Z,2014-11-16T08:06:39Z
3551,Reduce calls to state.render in migrations,"`state.render` is actually very long, so this commit easily reduce the
number of times it needs to be called by moving some calls only after
`allowed_to_migrate` was called (to avoid calling render states we won't
need). Useful when `allow_migrate` returns false

No new tests because the full test suit still pass and there is nothing new.
",twidi,None,2014-11-15T20:44:15Z,2014-11-17T17:45:33Z
3550,Fixed #15727 -- Add support for Content-Security-Policy header support for SecurityMiddleware,,rudolphfroger,None,2014-11-15T20:23:56Z,2015-04-17T22:43:58Z
3549,Fixes a race condition in the documentation.,"The example for django.contrib.admin.ModelAdmin.get_form modifies
self.exclude. However, since ModelAdmin instances are global and have no
thread- or request-locality, this is not safe for concurrent
requests.[1] This updated documentation demonstrates a safe method to
override admin forms on a per-request basis.

[1] https://groups.google.com/forum/#!topic/django-users/AmoUDtEefyA
",psagers,None,2014-11-15T19:43:38Z,2014-11-16T11:25:05Z
3548,Fixed #21612 -- Respect to_field in qs update,,kmtracey,None,2014-11-15T19:42:07Z,2014-11-16T14:45:11Z
3547,updating the documentation for #23814,,burhan,None,2014-11-15T19:39:14Z,2014-11-27T16:02:28Z
3546,Fixed #23844 -- Used topological sort for migration operation dependency resolution,"Fixes https://github.com/django/django/pull/3525
",patrys,None,2014-11-15T19:28:10Z,2014-11-20T17:51:32Z
3545,Optimize Optimizer,"Speeds up migration optimization by about 60% by:
- Moving list construction from MigrationOptimizer.reduce() and .can_optimize_through() to module scope
- Caching result of name.lower() (and similar attributes) on Operation subclasses via @cached_property
",ulope,None,2014-11-15T19:09:48Z,2015-01-05T11:02:30Z
3544,"DO NOT MERGE -- WIP for refs #11580 -- Added Oracle-specific ""contains"" lookup","A suggestion for a general way to do backend-specific lookups
",shaib,None,2014-11-15T18:58:02Z,2015-03-25T21:46:44Z
3543,Fixed #23742 -- Added an option to reverse tests order.,"Please see [#23742](https://code.djangoproject.com/ticket/23742).
",wrwrwr,None,2014-11-15T18:37:19Z,2014-11-27T23:29:27Z
3542,Fixed #13165 -- Added edit and delete links for admin related fields.,"- [x] Don't add change and edit links for `<select multiple>`
- [x] Document `get_object()` breakages
- [x] Document `response_delete()` breakages
- [x] Add a release note
",charettes,None,2014-11-15T18:01:43Z,2019-03-16T21:43:03Z
3541,Fixed #23838: LazyObject is missing __iter__,"Adds the `__iter__` method in `LazyObject`. Unit tests for this are included.
",gitaarik,None,2014-11-15T17:42:29Z,2014-11-27T16:10:32Z
3540,RFC: optimize migration optimizer loop,"Previously, the optimizer started over from the beginning whenever it optimized something. This can be optimized by skipping all the unchanged operations before the modified one. 
Example:

A, B, C, D

Assume C and D have been merged into E:

A, B, E

Then it's not necessary to try to reduce A and B again, instead one can start with A and E.

**The RFC part:** My implementation doesn't seem to be fully correct. Without the additional reduce method, a test fails.
",Tilka,None,2014-11-15T16:42:52Z,2014-12-31T13:27:36Z
3539,Fixed #23793 -- Updated the documentation of the password_reset_done,,yigitguler,None,2014-11-15T16:24:56Z,2014-11-15T16:45:30Z
3538,Fixed #23839 -- Always allow referencing the primary key in the admin's querystring,,jphalip,None,2014-11-15T16:12:51Z,2014-11-18T00:24:11Z
3537,Fixed #23682 -- Enhanced circular redirects detection in tests.,"Please see [#23682](https://code.djangoproject.com/ticket/23682).
",wrwrwr,None,2014-11-15T15:51:22Z,2014-11-27T23:29:19Z
3536,Fixes #23837: Replace list.pop(0) by deque.popleft() in dfs function in ...,"...migrations
",Zweedeend,None,2014-11-15T15:41:15Z,2014-11-28T08:27:45Z
3535,Fixes #23643 - Show exception chain in debug template for Py3k,"https://code.djangoproject.com/ticket/23643#no4
",tricoder42,None,2014-11-15T15:05:49Z,2015-03-30T18:09:58Z
3534,Minor caption change at the password_reset_done view & template.,"The old captions were creating confusion for the developers and users.
It was displaying a success message even if it didn't send an email at all.

Submitted for the ticket 23793.
",yigitguler,None,2014-11-15T14:58:07Z,2014-11-15T15:49:36Z
3533,Fixed #23794 - FieldDoesNotExist error in migration with deleted fields and unique_together constraint,"The code in `check_dependency` is too specific. For instance the `any` function for `operation.unique_together=set([])` always returned `False` which caused the bug to happen. This PR contains following changes:
- added test case for this bug
- added simplified condition

https://code.djangoproject.com/ticket/23794
",apragacz,None,2014-11-15T14:54:26Z,2014-11-21T15:58:06Z
3532,Demonstrate ticket 15101 is indeed fixed.,"Before Django 1.7 calling extent on a GeoQueryset together with a limit did not work. This test shows that it has been fixed with the aggregrates-with-limit fix from ticket 12886 (see https://code.djangoproject.com/ticket/12886#comment:15).

Reference: https://code.djangoproject.com/ticket/15101
",jsmits,None,2014-11-15T14:48:57Z,2016-10-05T19:05:07Z
3531,fixed #23834 -- added test and fix to check for default null on ArrayField,,ddaan,None,2014-11-15T14:16:58Z,2014-11-15T15:37:03Z
3530,Fixed #23832 -- timezone aware Storage API.,"Added an `aware` parameter to the relevant Storage methods, with
False/None returning naive objects, True returning aware objects,
and None (the default) deprecated for 2.0, allowing a transition
to a future where we only return aware objects (or at least we
return aware objects by default).
",jaylett,None,2014-11-15T14:16:57Z,2015-03-14T22:48:17Z
3529,Fixed #23712 -- field_name no longer raises KeyError,"`field_name` was added in 053de6131af83c (#5749) to the part that
builds the output list but not to the part that inserts hidden fields
to the last row when the last row doesn't end with `row_ender`.

Added the `field_name` to the dict in said location.
",wadevries,None,2014-11-15T13:43:54Z,2015-01-07T14:38:46Z
3528,Fixed #23829 -- Allowed customizing the ping_google sitemap URL,"This pull requests fixes the actual problem with #23829 and also makes the command work if django.contrib.sites is not installed.

`django.contrib.sites` will default to the current requests to get the domain, but this is not applicable when running as a management command.

I could not find any existing tests for this, so I did not know which tests to enhance. However, I will work on writing some mocks to ensure that the request is being passed correctly.
",burhan,None,2014-11-15T13:33:19Z,2015-03-25T20:44:53Z
3527,Ticket #23829 -- Enhanced documentation for ping_google(),"https://code.djangoproject.com/ticket/23829
",dbrgn,None,2014-11-15T13:22:46Z,2014-11-15T13:51:42Z
3526,Fixed #23585 - Corrected internal comment.,"Removed misleading comment and provide correct one, explaining
idea behind hardcoded CSRF template context processor.
",gregorth,None,2014-11-15T13:14:22Z,2014-11-16T09:24:22Z
3525,Use topological sort for migration operation dependency resolution,"rather than an ad-hoc algorithm

The topological sort was included from https://bitbucket.org/ericvsmith/toposort
I imagine that this is preferred over creating creating a dependency.
",vanschelven,None,2014-11-15T12:41:43Z,2014-11-15T19:27:27Z
3524,Fixed #23690 - fixed examples of manual rendering of form fields,"Documentation for rendering form fields manually is now updated to use fields id_for_label instead of hardcoded values with additional mention of label_tag for alternative generation of complete label tag.
",nmundar,None,2014-11-15T12:35:02Z,2014-11-16T09:21:12Z
3523,Fixed #23825 -- Added notes for the class-based-view scenario to the CSRF doc page.,"https://code.djangoproject.com/ticket/23825
",ghost,None,2014-11-15T12:20:26Z,2014-11-15T18:35:58Z
3522,Fixed #20435 Reorder template tags docs.,"Introduced the various shortcuts before explaining the more complex parser/render functionality.

Also removed non-decorator syntax: it's been years since Django supported a Python version without decorators.
",danielroseman,None,2014-11-15T12:13:07Z,2014-11-17T16:39:55Z
3521,Fixes #23799 squashmigrations optimize conditionally,"This commit fixes this issue
https://code.djangoproject.com/ticket/23799

It has tests and implementation
",yamila-moreno,None,2014-11-15T11:57:33Z,2014-11-15T12:53:04Z
3520,"Make expired session clearing on database backend scale better, ticket #23830","https://code.djangoproject.com/ticket/23830
",adamchainz,None,2014-11-15T11:24:36Z,2014-11-20T16:21:13Z
3519,Moved bilateral transform fetching to models.lookups,"Move the implementation of bilaterals from sql.Query to models.lookups. Reasons:
1. sql.Query doesn't need to know anything about bilaterals
2. If transforms are used in other context than Lookup's lhs value (in Expressions for example), then we can still apply the transforms.

I can create a ticket for this if needed, but I think this is rather minor change which can go in without a ticket. @timgraham if you are happy with this change then please commit. 
",akaariai,None,2014-11-15T11:22:20Z,2014-11-17T17:07:07Z
3518,Fixed #21753 -- Raised exception when both `form_class` and `fields` are...,"... specified.

https://code.djangoproject.com/ticket/21753
",berkerpeksag,None,2014-11-15T11:18:06Z,2014-11-23T19:08:45Z
3517, Fixed #23543 -- Added documentation on testing management commands,"https://code.djangoproject.com/ticket/23543
",dbrgn,None,2014-11-15T11:14:32Z,2014-11-24T15:33:48Z
3516,Fixed #23827 -- TZ behavior in Storage API ref doc,"This is derived from the current behaviour of FileSystemStorage.
Note that since this was not previously documented, other
implementations may not currently conform.
",jaylett,None,2014-11-15T11:05:40Z,2014-11-15T14:13:33Z
3515,add hint that migration table is created when migrate wasn't run on first execution of runserver,,mfa,None,2014-11-15T10:55:08Z,2014-11-15T19:05:20Z
3514,added test checking __contains__ operator in LazyObject,"Tests for ticket https://code.djangoproject.com/ticket/23782
",mrbox,None,2014-11-15T10:48:34Z,2014-11-15T11:01:57Z
3513,Added tests/README.rst,"Every time I want to run the test suite, I have to google until I find
the docs about how to do it. This commit adds a QUICKSTART.rst file
with the necessary commands in it. For all other documentation, it
simply points to the upstream docs.
",dbrgn,None,2014-11-15T10:31:24Z,2014-11-16T08:16:47Z
3512,Fixed #21363 -- Added datetime.timedelta support to TimestampSigner.unsi...,"...gn().

https://code.djangoproject.com/ticket/21363
",berkerpeksag,None,2014-11-15T10:03:36Z,2014-11-16T01:44:43Z
3511,Better signposting in templatetags documentation,"Provide links to shortcut decorators from template tag introductoin

https://code.djangoproject.com/ticket/23826#ticket
",danielroseman,None,2014-11-15T09:00:40Z,2014-11-15T09:50:32Z
3510,Fixed #23665 -- Added a note about precedence of the USE_L10N setting in,"the MONTH_DAY_FORMAT and YEAR_MONTH_FORMAT documentations.

https://code.djangoproject.com/ticket/23665
",berkerpeksag,None,2014-11-15T08:07:20Z,2014-11-15T09:07:50Z
3509,Fix problems with unicode numbers.,,ruema,None,2014-11-14T19:22:34Z,2014-11-19T02:22:43Z
3508,Update base.py,"The function takes one argument.
",gulfpearl,None,2014-11-13T20:01:45Z,2014-11-15T08:43:47Z
3507,Fixed #23817 -- updated docs on QuerySet evaluation,"Refs #22503
",koniiiik,None,2014-11-13T19:45:57Z,2014-11-20T14:35:18Z
3506,Fixed #23812 - Replaced every range and xrange with django.utils.six.moves.range,,Siecje,None,2014-11-13T17:25:24Z,2014-11-19T18:54:24Z
3505,Updated localflavor docs. Fixed #23809,,shabda,None,2014-11-13T07:20:06Z,2014-11-13T10:35:01Z
3504,Fixed #23806 -- Added a test case for settings.DISALLOWED_USER_AGENTS.,"Any suggestions or feedback is welcome.
",sww,None,2014-11-13T05:23:24Z,2014-11-13T08:47:30Z
3503,Fixed #23795 -- Fixed a regression in custom form fields,"Custom form fields having a `queryset` attribute but no
`limit_choices_to` could no longer be used in ModelForms.

Refs #2445.

Thanks to @artscoop for the report.
",bmispelon,None,2014-11-12T20:28:30Z,2014-11-12T21:40:04Z
3502,Use xrange iterator to generate characters for get_random_bytes,,graingert,None,2014-11-12T12:59:18Z,2014-11-15T09:23:41Z
3501,Raised SuspiciousFileOperation in safe_join.,"Added a test for the condition safe_join is designed to prevent.

Previously, a generic ValueError was raised. It was impossible to tell
an intentional exception raised to implement safe_join's contract from
an unintentional exception caused by incorrect inputs or unexpected
conditions. That resulted in bizarre exception catching patterns, which
this patch removes.

Since safe_join is a private API and since the change is unlikely to
create security issues for users who use it anyway -- at worst, an
uncaught SuspiciousFileOperation exception will bubble up -- it isn't
documented.
",aaugustin,None,2014-11-11T18:13:06Z,2014-11-11T19:38:03Z
3500,Fixed #23799 -- squashmigrations --no-optimize still optimizes,"I opted to not remove it because it might become useful when the migration optimizer breaks for some reason.
",Tilka,None,2014-11-11T14:09:38Z,2014-11-18T06:44:52Z
3499,Fixed #23788 -- Used new JavaScript support in recent gettext,"JavaScript string extraction support has been added in gettext
0.18.3.
",claudep,None,2014-11-11T08:45:27Z,2014-11-11T21:55:45Z
3498,Fixed #23796 -- Reduced reduce() usage,"django.core.exceptions.ValidationError.messages() and
django.db.backends.schema.BaseDatabaseSchemaEditor._alter_field():
Replaced reduce(operator.add, ...) w/more terse, explicit sum()

django.core.management.commands.makemigrations.Command.handle_merge():
This reduce() did nothing and would break with larger sequences.
A reduce(operator.eq, ...) accumulates bools and can't generically check
equality of all items in a sequence.
",bradmwalker,None,2014-11-11T04:16:32Z,2014-11-20T19:36:52Z
3497,Fix FormFields w/ queryset but no limit_choices_to,"Django assumes a form field with a `queryset` attribute always has a `limit_choices_to` attribute.
For example, a field programmatically altered to have a `queryset` attribute (which works fine), may not be altered to also have a `limit_choices_to` attribute. So the assumption and code are wrong.
Fix proposed for master, affects 1.7 and above.
",artscoop,None,2014-11-11T03:46:12Z,2014-11-12T20:30:10Z
3496,Fix a typo in 1.7 release notes,,aruseni,None,2014-11-11T00:48:15Z,2014-11-11T01:01:54Z
3495,Fixed #22407 -- Added BaseEmailHandler to allow customizing mail senders.,"https://code.djangoproject.com/ticket/22407
",berkerpeksag,None,2014-11-10T21:24:02Z,2014-11-15T09:02:13Z
3494,Fixed #23792 -- Added test.utils.freeze_time() context manager.,"Ticket https://code.djangoproject.com/ticket/23792, see http://djangoci.com/job/django-pull-requests/1528/database=postgres,python=python3.4/testReport/junit/django.contrib.formtools.tests.wizard.test_cookiestorage/TestCookieStorage/test_reset_cookie/
",tchaumeny,None,2014-11-10T18:35:37Z,2014-12-22T12:47:31Z
3493,Refactored expressions tests. Refs #18586,,shabda,None,2014-11-10T13:54:34Z,2014-12-11T23:26:23Z
3492,Simplified Query.build_lookup(),"Splitted Query.build_lookup() to two parts, and added some clarifying comments.

Please merge after sanity check.
",akaariai,None,2014-11-10T13:36:28Z,2014-11-11T06:08:43Z
3491,Refactored custom manager tests. Refs #18586,,shabda,None,2014-11-10T12:42:51Z,2014-12-11T22:48:12Z
3490,Simplified MySQL storage engine detection,"MySQL 5.1 introduced a specific table (http://dev.mysql.com/doc/refman/5.1/en/engines-table.html) for detecting engines support.

Since Django support MySQL > 5.5, we can query that table directly.
",tchaumeny,None,2014-11-09T22:14:31Z,2014-11-10T17:17:06Z
3489,Removed legacy code from old transaction system,,tchaumeny,None,2014-11-09T21:44:23Z,2014-11-10T19:35:23Z
3488,Fixed a typo,,aruseni,None,2014-11-09T21:34:09Z,2014-11-10T15:45:17Z
3487,Fixed #23781 -- Added a new GeoJSON serialization format for GeoDjango,,claudep,None,2014-11-08T16:18:58Z,2014-11-15T17:09:50Z
3486,Fixed #14664 -- Logged a warning if MiddlewareNotUsed is raised in DEBUG mode.,"https://code.djangoproject.com/ticket/14664
",berkerpeksag,None,2014-11-07T19:59:44Z,2014-11-27T19:05:40Z
3485,Ticket #23778 -- Add a code snippet in the advanced testing documentatio...,"...n showing how to run tests outside de test runner.
",Starou,None,2014-11-07T17:13:26Z,2014-11-21T20:11:07Z
3484,Fixed #23745 -- Improved migrate speed,"Of course, commit c7ea633 will not be eventually included, it only serves to measure performance.
",claudep,None,2014-11-07T16:22:17Z,2015-01-02T15:24:45Z
3483,Refactored custom pk tests. Refs #18586,"tests.custom_pk.tests.CustomPKTests was migrated from doctests
And so was very long
Broke this into smaller methods
",shabda,None,2014-11-07T15:30:59Z,2014-12-11T22:16:12Z
3482,Fixed #23775 -- Added docs for --bisect and --pair runtests options.,,timgraham,None,2014-11-07T10:05:53Z,2014-11-27T23:29:53Z
3481,Fixed #16358 - Failure to set a memcache key deletes the key,"Default Memcached configuration allows for a maximum object of 1MB and
will fail to set the key if it is too large. The key will be deleted from
memcached if it fails to be set. This is needed to avoid an issue with
cache_db session backend using the old value stored in memcached, instead
of the newer value stored in the database.
",manfre,None,2014-11-07T05:01:20Z,2014-11-14T03:10:22Z
3480,Fixed #23326 - DatabaseCache.incr is atomic,,manfre,None,2014-11-07T03:40:29Z,2014-12-03T12:54:51Z
3479,Fixed #11919 -- Added a DPASTE_URL setting to customize the dpaste featu...,"...re.

https://code.djangoproject.com/ticket/11919
",berkerpeksag,None,2014-11-07T02:23:36Z,2014-12-24T21:09:58Z
3478,Fixed #24011-- Added Range fields for contrib.postgres,"TODO:
- [x] Custom lookups
- [x] Validators
- [x] Form fields
- [x] Documentation

Provisional lookup/transform list:
- contains
- contained_by
- overlap
- fully_lt
- fully_gt
- not_lt
- not_gt
- adjacent_to
- startswith (lowerbound)
- endswith (upperbound)
- isempty

Proposed validators:
- Non-empty
- MinValue (applies to lower bound)
- MaxValue (applies to upper bound)

Two basic variants of form fields, one assumes all ranges are `[)` and has just two copies of the base field's inputs. The other also includes two checkboxes labelled ""include lower bound"" and ""include upper bound"". To get an empty range, you would enter the same value twice (e.g. (0, 0)).
",mjtamlyn,None,2014-11-06T20:22:27Z,2015-01-10T16:18:57Z
3477,Fixed #18119 -- Added a DomainNameValidator validator.,"https://code.djangoproject.com/ticket/18119
",berkerpeksag,None,2014-11-06T19:31:05Z,2016-09-27T01:59:34Z
3476,Fixed #23770 -- Changed serialization strategy for floats with respect to NaN and Inf,"Thanks to w0rp for the report
",MarkusH,None,2014-11-06T11:32:20Z,2014-11-06T17:17:20Z
3475,Fixed #15053 -- Improved template extending algorithm.,,prestontimmons,None,2014-11-06T02:56:00Z,2015-04-23T08:08:46Z
3474,Merge pull request #1 from django/master,"合并更新
",knight008848,None,2014-11-05T13:38:50Z,2014-11-05T14:04:26Z
3473,Fixed #23750 -- django.core.checks.register can now be used as function,"See https://code.djangoproject.com/ticket/23750
",averybigant,None,2014-11-05T06:09:50Z,2014-11-11T15:36:36Z
3472,Mysql db check should handle None db_type returns. Ticket 23761,"When implementing a custom field type with a db_type() method that returns None, on Django 1.6 and below we would signify not to create a column at all.
With Django 1.7, this causes a crash with the mysql backend.
The issue is already fixed in master and this simply backports the safety check.

Backport from e910340#diff-14.

https://code.djangoproject.com/ticket/23761
",adepue,None,2014-11-05T03:11:40Z,2014-11-13T10:12:10Z
3471,Mysql db check should handle None db_type returns. Ticket 23761,"When implementing a custom field type with a db_type() method that returns None, on Django 1.6 and below we would signify not to create a column at all.
With Django 1.7, this causes a crash with the mysql backend.
The issue is already fixed in master and this simply backports the safety check.

Backport from https://github.com/django/django/commit/e9103402c0fa873aea58a6a11dba510cd308cb84#diff-14.

https://code.djangoproject.com/ticket/23761
",adepue,None,2014-11-05T03:05:32Z,2014-11-05T03:11:00Z
3470,Mysql db check should handle None db_type returns. ,"When implementing a custom field type with a db_type() method that returns None, on Django 1.6 and below we would signify not to create a column at all.
With Django 1.7, this causes a crash with the mysql backend.
The issue is already fixed in master and this simply backports the safety check.

Backport from https://github.com/django/django/commit/e9103402c0fa873aea58a6a11dba510cd308cb84#diff-14.

https://code.djangoproject.com/ticket/23761
",adepue,None,2014-11-05T03:03:35Z,2014-11-05T03:04:45Z
3469,Added a dummy class for HTMLParserError.,"Just looking for someone to +1 this approach.
",timgraham,None,2014-11-05T01:59:57Z,2014-11-05T15:33:49Z
3468,Updated six to 1.8.0.,,timgraham,None,2014-11-05T01:39:46Z,2014-11-05T02:24:04Z
3467,Fixed #21429 -- Added builtin logging support to BaseCommand.,"https://code.djangoproject.com/ticket/21429
",berkerpeksag,None,2014-11-05T01:37:18Z,2015-04-16T17:26:18Z
3466,Fixed #23531 -- Added CommonMiddleware.response_redirect_class.,"https://code.djangoproject.com/ticket/23531
",berkerpeksag,None,2014-11-04T20:20:40Z,2014-11-04T23:13:12Z
3465,Update index.txt example with recursivity on obsolete function get_formsets,"example with recursivity on obsolete function get_formsets
",azman0101,None,2014-11-04T17:07:04Z,2014-11-04T17:08:22Z
3464,Fixed #20392 -- Wrapped TestCase into a class-wide transaction,"The goal of this PR is to allow the creation of initial test data once for a `TestCase`, through the class method `setupTestData` (see https://code.djangoproject.com/ticket/20392).
",tchaumeny,None,2014-11-03T23:40:27Z,2014-12-03T15:38:39Z
3463,typo fixes - https://github.com/vlajos/misspell_fixer,,vlajos,None,2014-11-03T22:48:36Z,2014-11-04T02:00:26Z
3462,Fixed #23757 -- Added 3D introspection support to Spatialite backend,,claudep,None,2014-11-03T21:05:20Z,2015-03-18T18:29:45Z
3461,Fixed #21978 -- Added optional gunicorn support to runserver.,,berkerpeksag,None,2014-11-03T14:44:12Z,2015-04-16T17:25:01Z
3460,Fixed versionchanged indentation in docs/.,,berkerpeksag,None,2014-11-03T10:31:01Z,2014-11-04T08:22:01Z
3459,Fixed #23376 -- Make documentation about required Storage methods consistent.,"The following methods **should** be implemented, but are not required:
- Storage.delete()
- Storage.exists()
- Storage.listdir()
- Storage.size()
- Storage.url()

Updated documentation to reflect this fact and give a couple of examples
where some methods may not be implemented. Add a warning that not
implementing some methods will result in a partial (possibly broken)
interface.

Ticket: https://code.djangoproject.com/ticket/23376 
",lolripgg,None,2014-11-03T09:50:52Z,2014-11-03T11:49:24Z
3458,Optimized migrate process,"This is a proof-of-concept patch to improve migration speed by keeping the project state between migrations and mutate the state instead of systematically recreate a new state.
",claudep,None,2014-11-01T14:53:05Z,2014-11-07T16:17:48Z
3457,Fixed #5405 -- Added support for reStructured text in admindocs for model docstrings,"https://code.djangoproject.com/ticket/5405

Refered to https://github.com/django/django/pull/760 for help
@elvard wrote code to support it, but it needed to be modified, in order to merge
@gkmngrgn added tests that also needed to be modified
",zanderle,None,2014-11-01T14:29:43Z,2014-11-03T20:31:46Z
3456,Brought CSRF documentation up-to-date.,"- CSRF middleware moved from django.contrib to django.middleware in Django 1.4
- It is activated by default in MIDDLEWARE_CLASSES
",tchaumeny,None,2014-10-31T22:43:04Z,2014-11-03T12:49:19Z
3455,Fixed #23730 -- Moved support for SimpleCookie HIGHEST_PROTOCOL pickling to http.cookie,,timgraham,None,2014-10-31T18:53:33Z,2014-11-12T18:19:34Z
3454,Fixed #18456 -- Escape path returned by `HttpRequest.get_full_path()`.,"https://code.djangoproject.com/ticket/18456
",berkerpeksag,None,2014-10-31T15:45:05Z,2014-11-03T14:54:13Z
3453,Fixed #21281 -- Made override_settings act at class level when used as a...,"... TestCase decorator

See https://code.djangoproject.com/ticket/21281. This is also a prerequisite for https://code.djangoproject.com/ticket/20392.
",tchaumeny,None,2014-10-31T14:30:21Z,2014-11-03T19:19:44Z
3452,Fixed #23738 -- Allowed migrating from NULL to NOT NULL with the same default value,"Ticket: https://code.djangoproject.com/ticket/23738
",MarkusH,None,2014-10-31T13:12:41Z,2014-11-01T21:13:37Z
3451,Fixed #23731 -- Fixed migrations crash when adding blank GeometryFields on PostGIS.,"https://code.djangoproject.com/ticket/23731
",timgraham,None,2014-10-31T13:06:11Z,2014-10-31T22:38:53Z
3450,Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL,"Ticket: https://code.djangoproject.com/ticket/23715
",MarkusH,None,2014-10-31T11:05:55Z,2014-10-31T12:11:15Z
3449,Fixed #23670 -- Prevented partial import state during module autodiscovery,"Ticket: https://code.djangoproject.com/ticket/23670
",MarkusH,None,2014-10-31T10:23:00Z,2014-10-31T12:11:21Z
3448,Adjust documentation about django admin documentation generator,"Django admindocs is used for documenting templates, template tags and filters, which is why it skips
model methods that take arguments - that makes it not a perfect match for project documentation
purposes, which is what the documentation was proposing. I changed this part of documentation
in order to remove the misleading part.
",zanderle,None,2014-10-30T19:50:38Z,2014-10-30T22:20:03Z
3447,Fixed #23468 -- settings.FIXTURE_DIRS checks in loaddata command,"If settings.FIXTURE_DIRS contains duplicates or a default fixture
directory (app_name/fixtures), the ImproperlyConfigured is raised.
https://code.djangoproject.com/ticket/23468
",kswiat,None,2014-10-30T18:57:34Z,2014-10-31T23:04:43Z
3446,Fixed #23733 -- Manage multi-apps dependencies when squashing,"See https://code.djangoproject.com/ticket/23733, following https://code.djangoproject.com/ticket/23556
",twidi,None,2014-10-30T16:44:47Z,2014-10-31T19:07:28Z
3445,Fixed #23152 -- Added support for transactional Spatialite metadata initialization.,,timgraham,None,2014-10-30T16:14:21Z,2014-10-31T19:57:57Z
3444,Fixed #23575 -- Added a code example for custom AdminSite.,,berkerpeksag,None,2014-10-30T11:57:42Z,2014-10-30T13:00:54Z
3443,Fixed #23725 -- Modify documentation to keep consistency using settings.AUTH_USER_MODEL,"Instead of using django.contrib.auth.User use settings.AUTH_USER_MODEL
",raulcd,None,2014-10-30T10:28:57Z,2014-10-30T12:29:51Z
3442,Converted seealso directives to use 4 space indendation.,,berkerpeksag,None,2014-10-30T05:46:33Z,2014-10-30T19:05:30Z
3441,Fixed #23728 -- Added --exit flag to makemigrations,"If no changes are found, makemigrations calls sys.exit(1). Users can use this to check for changes that need a migration as part of an automated test suite, continuous deployment, or other system.

See [ticket 23728](https://code.djangoproject.com/ticket/23728) and the [django-developers mailing list](https://groups.google.com/forum/#!topic/django-developers/I3M6B-wYYd8) for discussions.
",timheap,None,2014-10-29T23:28:32Z,2014-11-29T10:32:50Z
3440,Add cross reference to topic about saving objects in formsets,"The reference is needed here.
",paschembri,None,2014-10-29T15:34:13Z,2014-10-29T17:40:13Z
3439,"Fixed #18731 -- Added an example about customizing ""makemessages"" comman...","...d.
",berkerpeksag,None,2014-10-29T14:41:38Z,2014-10-30T12:46:43Z
3438,Update models.py,"Skip ChoiceField in ModelChoiceField init forbids to use a custom choices argument.
",sdenel,None,2014-10-29T08:47:27Z,2014-10-29T10:06:10Z
3437,FIRST_DAY_OF_WEEK for Ukrainian,,slollo,None,2014-10-29T00:40:16Z,2014-10-30T13:20:11Z
3436,Fixed #23719 -- Fixed MySQL 5.6 crash with GeometryFields in migrations.,,timgraham,None,2014-10-28T22:52:32Z,2014-10-29T12:23:05Z
3435,Fixed #23724 Overwrite mode in django,"Overwrite mode copies the files to the target even
    if the files in the target are newer than the source.
    This doesn't delete the static folder or overwrite
    if the source and destination are the same.
",prathik,None,2014-10-28T16:47:54Z,2014-10-29T14:31:13Z
3434,Overwrite option for collectstatic,"In overwrite mode the files are overwritten even
if the destination is newer than the source. This
doesn't delete any existing files in STATIC_ROOT.
This is a fix for #23724
",prathik,None,2014-10-28T16:21:49Z,2014-10-28T16:37:06Z
3433,Fixed #20495 -- Added login failure events to security logger.,"https://code.djangoproject.com/ticket/20495
",berkerpeksag,None,2014-10-28T11:14:48Z,2015-01-28T13:58:52Z
3432,Fixed #23620 -- Used more specific assertions in the Django test suite.,"Refs #23620.
",berkerpeksag,None,2014-10-28T10:04:07Z,2014-11-03T17:01:09Z
3431,Fixed #23721 -- check_related_objects without calling __iter__,"https://code.djangoproject.com/ticket/23721
",collinanderson,None,2014-10-28T01:38:17Z,2014-10-28T08:05:48Z
3430,Fixed #23614 -- Changed the way the migration autodetector orders unique/index_together,"Ticket: https://code.djangoproject.com/ticket/23614

This patch only solves the problem for one situation: removing a field. Renaming a field and keeping it in the `index/unique_together` option shouldn't be a problem, since `_generate_altered_foo_together` works on the renamed fields.
",MarkusH,None,2014-10-28T00:55:14Z,2014-10-29T17:29:32Z
3429,Renamed datetimes-argument,"In the sourcecode the first named argument is named `field_name` and not `field`.
https://github.com/django/django/blob/master/django/db/models/query.py#L662
and
https://github.com/django/django/blob/stable/1.7.x/django/db/models/query.py#L650
",omeinusch,None,2014-10-27T22:19:00Z,2014-10-27T23:48:52Z
3428,Fixed typo in squashing migrations documentation,"The [squashing migrations documentation](https://docs.djangoproject.com/en/1.7/topics/migrations/#squashing-migrations) should read ""Django will then write it back out"" instead of ""them""
",bahoo,None,2014-10-27T21:25:38Z,2014-10-27T21:55:27Z
3427,Fixed #13181 -- Added support for callable choices to forms.ChoiceField,"The code comes from https://code.djangoproject.com/attachment/ticket/13181/with_callable_choice_iterator.diff by vanschelven.

This addresses https://code.djangoproject.com/ticket/13181.
",inglesp,None,2014-10-27T20:23:32Z,2014-11-04T16:28:22Z
3426,Fixed #23641 -- Moved post_migrate signals registration for contrib apps to AppConfig.ready,"In the case of the sites app this solves a problem appearing when
Apps.set_installed_apps (override/modify_settings) is used before
sending the post_migrate signal -- create_default_site handler is
not executed in such a case.

To elaborate a bit, the signal is connected with the sender attribute
equal to an AppConfig instance; the signal dispatcher stores its id to
identify the sender that we're interested in receiving the signals
from. Apps.set_installed_apps reinstantiates all of the app configs,
and thus when the migration machinery emitts signals using apps from
the global registry as senders, their ids don't match those stored by
the dispatcher. Signal handlers registered prior to set_installed_apps
don't get called.

Moving the ""connect"" to AppConfig.ready ensures that the signal will
be registered with any new app config instance. Note however that
the ready method may be executed more than once during testing, so
some signals need to be protected from double registration.
",timgraham,None,2014-10-27T14:27:32Z,2014-11-27T23:29:10Z
3425,Fixed #23717 -- Fixed makemessages crash when STATIC_ROOT=None,,claudep,None,2014-10-27T08:36:31Z,2014-10-27T13:03:49Z
3424,Fixed documentation of make_password arg name,"Optional argument name is `hasher`, not `hashers`
",coagulant,None,2014-10-27T05:06:02Z,2014-10-27T10:40:29Z
3423,create Spatialite metadata in one trans if possible,"Spatialite 4.1.0 supports an argument to InitSpatialMetaData() to create
all the metadata within one transaction to speed up the operation
significantly on some systems. ticket #23152
",cardoe,None,2014-10-26T06:09:36Z,2014-10-30T16:14:41Z
3422,Fixed #23446 -- Officially recommended mysqlclient as MySQL driver,,claudep,None,2014-10-25T09:06:39Z,2014-10-27T10:57:27Z
3421,"Limited lines to 119 characters in django/{contrib,db}.","Refs #23395.

https://code.djangoproject.com/ticket/23395
",berkerpeksag,None,2014-10-25T04:42:53Z,2014-10-29T12:16:43Z
3420,Removed simplejson inventory file from docs/conf.py.,,berkerpeksag,None,2014-10-25T04:32:37Z,2014-10-25T15:49:54Z
3419,Fix #23699 -- Flush command initial_data handling,"The flush command will not load initial data for migrated apps.
This will align the behavior of the command with its help text.

Same fix as pull request #3404. Got messed up with rebasing and started a new branch.
",tony-zhu,None,2014-10-24T19:33:37Z,2014-10-27T11:05:03Z
3418,Fixed #23652 -- Restored database name after destroying test database,"Thanks Bjarkias for the report.
",claudep,None,2014-10-24T12:57:18Z,2015-02-18T14:59:10Z
3417,Fixed versionchanged indentation in topics/testing/advanced.txt.,,berkerpeksag,None,2014-10-24T04:00:20Z,2014-10-24T19:43:26Z
3416,Fix typo in JsonResponse documentation,"There is a typo in the JsonResponse documentation where it shows how to change the default JSON encoder. The word 'different' should be used, rather than 'differ'.
",jamesdoherty,None,2014-10-23T20:04:22Z,2014-10-24T11:49:39Z
3415,Fixed #23707 -- Prevented discovery of duplicated tests,,claudep,None,2014-10-23T18:17:13Z,2014-10-23T19:04:41Z
3414,Fixed #23702 -- Fixed adding an explicit id field on SQLite.,"https://code.djangoproject.com/ticket/23702
",timgraham,None,2014-10-23T16:26:12Z,2014-12-29T15:07:01Z
3413,Fixed #23444 -- Deprecated django.contrib.admin.helpers.InlineAdminForm.original_content_type_id,,timgraham,None,2014-10-23T12:56:15Z,2014-10-25T12:04:22Z
3412,Fixed markup in unit-tests.txt.,"The body of versionchanged directive should be indented. Currently, it
looks confusing to me:

https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests
",berkerpeksag,None,2014-10-23T05:04:22Z,2014-10-23T12:23:45Z
3411,Improved warning message when reloading models. Refs #23621.,"Thanks @dfunckt and Tim Graham.
",loic,None,2014-10-22T18:32:29Z,2014-10-22T19:13:53Z
3410,Fixed #23621 -- Warn for duplicate models when a module is reloaded.,"Previously a RuntimeError was raised every time two models clashed
in the app registry. This prevented reloading a module in a REPL;
while it's not recommended to do so, we decided not to forbid this
use-case by turning the error into a warning.

Thanks @dfunckt and Sergey Pashinin for the initial patches.
",loic,None,2014-10-22T16:26:20Z,2014-10-22T18:33:23Z
3409,Fixed #23630 -- Made AlterModelTable rename auto-created M2M tables.,,timgraham,None,2014-10-22T14:00:46Z,2014-10-23T20:05:04Z
3408,Fix for #23700 Non-deterministic static files test failures on Windows and #23701 Removing an unwanted check in collectstatic.py,"#23700 Non-deterministic static files test failures on Windows:

PermissionError: [WinError 5] Access possibly raised when write
    permission on the parent directory is not there. In any case
    a permission check there would help. We might want to assert false
    when there is no permission to create the folder. Haven't added it
    in case it is handled elsewhere.
#23700 Removing an unwanted check in collectstatic.py:

Checking whether prefixed_path is not in self.copied_files seems
to be unnecessary since it is already being checked in the start
and there doesn't seem to be any place where self.copied_files is
getting modified after that.

Apologies for the mixups. A little new to this.
",prathik,None,2014-10-22T05:23:38Z,2014-10-22T17:28:09Z
3407,Removed unused import from the JSON serialization example.,"This is a leftover from 5612f54bd56086e2a375e86474ec734c172e7d1f.
",berkerpeksag,None,2014-10-22T03:06:36Z,2014-10-22T04:25:53Z
3406,Allowed test from refs #23612 to be run from a directory other than tests.,,timgraham,None,2014-10-22T00:54:39Z,2014-10-22T19:26:55Z
3405,Allow customizable JSONENcoder,"Would be really handy to not have to subclass the serializer to change the encoder.
",chancez,None,2014-10-21T23:08:09Z,2014-10-21T23:19:19Z
3404,Fix ticket 23699 Migrate in unittest still loads initial data,"Fixed #23699 Migrate in unittest still loads initial data
",tony-zhu,None,2014-10-21T21:51:40Z,2014-10-24T19:43:30Z
3403,Removed unneeded override_system_checks,"Refs #23685.
",claudep,None,2014-10-21T18:56:23Z,2014-10-21T20:41:17Z
3402,Fixed #23663 -- Initialize output streams for BaseCommand in __init__().,,loic,None,2014-10-21T18:15:27Z,2014-10-22T02:32:14Z
3401,#17906 -- Fix docs error introduced in commit 1ea44a3,"Issue #17906 was relatively recently, but the equivalent code sample for `firstof` in the documentation still incorrectly showed the `|safe` filter.
",ralphje,None,2014-10-21T12:09:00Z,2014-10-21T13:09:40Z
3400,Checking for the same thing in an array twice,"Same item was being checked in the array for presence and absence. Changed this to an if else statement.
",prathik,None,2014-10-21T11:28:52Z,2014-10-21T17:01:18Z
3399,Fixed #23621 -- Warn for duplicate models instead of raising an exception,"Enables code reloading, e.g. from Python shell.
",dfunckt,None,2014-10-21T11:06:32Z,2014-10-22T16:28:48Z
3398,Fixed #23444 -- Prevented unnecessary ContentType object creation when using inlines,"Migrated from this PR:
https://github.com/django/django/pull/3201
",a1tus,None,2014-10-20T21:41:10Z,2014-10-23T12:57:44Z
3397,Fixed #21740 -- Allowed test client data to be an empty string,"This fixes a regression introduced by 2a31d00933.
Thanks tony-zhu for the report.
",claudep,None,2014-10-20T20:35:52Z,2014-10-21T07:18:26Z
3396,"Fixed #23695 -- condition decorator would return 200 for HEAD request, if ETag is not used","https://code.djangoproject.com/ticket/23695
",Forever-Young,None,2014-10-20T20:23:30Z,2014-10-21T15:14:55Z
3395,Fixed #23679 -- Fixed null introspection for char/text fields,"Thanks Paul Dejean for the report.
",claudep,None,2014-10-20T18:08:17Z,2014-10-20T20:37:54Z
3394,Updated cached_property to preserve docstring of original function,"Solution borrowed from http://pydanny.com/cached-property.html
",jsma,None,2014-10-19T22:36:47Z,2014-10-20T22:10:18Z
3393,Fixed #23685 -- Made call_command skip checks by default,,claudep,None,2014-10-19T19:36:00Z,2014-10-20T15:27:27Z
3392,Fixed #23321 -- Generated .mo files at setup time,,claudep,None,2014-10-19T18:57:30Z,2014-11-26T17:07:55Z
3391,Fixed #23686 -- Tweak color output of the system check framework.,,loic,None,2014-10-19T14:42:54Z,2014-10-22T04:28:27Z
3390,Fixed a typo in urlencode documentation.,"In the [reference docs](https://docs.djangoproject.com/en/dev/ref/utils/#module-django.utils.http), a similar docstring in sources is fine.
",wrwrwr,None,2014-10-19T09:13:30Z,2014-10-19T16:11:51Z
3389,Fixes #23684 -- Use correct pip package name for ImageField Pillow HINT,"If you use an ImageField without installing the Pillow package, a field hint mentions that you should ""pip install pillow"". The correct package name is ""Pillow"" with an uppercase P. 

See: https://code.djangoproject.com/ticket/23684
",nicholasserra,None,2014-10-19T01:12:31Z,2014-10-19T06:48:32Z
3388,Fixed #21196 -- Removed index on test field causing MySQL specific failure,"See also http://stackoverflow.com/a/1814594
",tchaumeny,None,2014-10-19T00:29:58Z,2014-10-19T06:48:55Z
3387,Add missing Dutch translations,"Some Dutch translations were missing. Here are some new translations.
",steffann,None,2014-10-18T17:38:27Z,2014-10-18T23:52:19Z
3386,Fixed #23583 -- More selectively ignored static/media roots,"Fixed a regression introduced by 28efafa24c.
Thanks Michal Čihař for the report and initial patch.
",claudep,None,2014-10-18T10:08:38Z,2014-10-21T18:22:06Z
3385,Updated formtools docs to point at new package outside the Django repo.,"Refs #23677.
",jezdez,None,2014-10-17T20:51:13Z,2014-11-26T14:42:52Z
3384,"Fixed #23676 -- Dropped phrase ""by default"" from FieldField for clarity",,jdufresne,None,2014-10-17T20:03:09Z,2016-03-13T23:03:59Z
3383,Fixed #23650 -- Prevented migrate to call check framework three times,"Thanks Ilya Baryshev for the report.
",claudep,None,2014-10-17T12:18:06Z,2014-10-17T18:24:36Z
3382,add file name,"In openstack swiftclient and other clients, typically used to determine whether a file exists:

if xxx_file:

So if not name, returns false, this will cause a lot of errors.

see django.core.files.base.File
",duanhongyi,None,2014-10-17T03:51:56Z,2014-10-17T05:01:29Z
3381,Fixed IRC channel name in submitting-patches.txt.,"The development channel is #django-dev.
",berkerpeksag,None,2014-10-16T13:57:40Z,2014-10-16T14:59:20Z
3380,Fixed #23664 -- Provided a consistent definition for OrderedSet.__bool__,"This also defines `QuerySet.__bool__` for consistency though this should not have any consequence as `bool(qs)` used to fallback on `QuerySet.__len__` in Py3.
",tchaumeny,None,2014-10-16T11:11:21Z,2014-10-16T12:17:53Z
3379,"Fix #23662 - Make __nonzero__(), __len__() lazy","QuerySet.**nonzero**(), QuerySet.**len**() caused unexpected behaviour by unnecessary queryset evaluation.
Methods rewritten using proper lazy methods of QuerySet.
",alekseismyshliaev,None,2014-10-16T08:54:21Z,2014-10-16T23:17:41Z
3378,"Fixed #23615 -- Validate that a Model instance's ""check"" attribute is a method.","PR used to trigger CI builds. Refs. #3362.
",loic,None,2014-10-16T07:10:13Z,2014-10-16T16:32:04Z
3377, Fixed #23668 -- Changed make_aware() and make_naive() to use the current timezone by default,"When calling `make_aware()`, either `get_current_timezone()` or `get_default_timezone()` seem to be a logical default. In my opinion, `get_current_timezone()` is seems more correct most of the time. That is, when handling a naive datetimes, converting it to the current time zone is the most typical operation. This change makes using `make_aware()` easier to use as it will now generally do the right thing by default. If the user wants to use a different timezone, the option is still available.
",jdufresne,None,2014-10-16T03:28:06Z,2016-03-13T23:03:58Z
3376,Fixed #20221 -- Functions with mark_safe() can result in SafeText,,jdufresne,None,2014-10-16T01:10:11Z,2016-03-13T23:03:56Z
3375,Update migrations.txt with note about DEBUG.,"Updating migrations.txt with a short note on the behavior of settings.DEBUG, Django saving all the queries it runs in that mode, and its affect on large data migrations.
",daidoji,None,2014-10-15T23:34:51Z,2014-10-22T18:14:43Z
3374,Very minor pep8 fix,"Found this very minor pep8 issue in one of the logging code samples I was using.
",IanLee1521,None,2014-10-15T21:52:42Z,2014-10-15T22:56:49Z
3373,Added Bashar Al-Abdulhadi to AUTHORS,"made django 100% arabized https://www.transifex.com/projects/p/django/language/ar/ , https://twitter.com/_Bashar/status/468845303668695040
",Bashar,None,2014-10-15T19:20:42Z,2014-10-15T19:39:38Z
3372,Fixed #23660 -- Moved sort_dependencies to core.,"https://code.djangoproject.com/ticket/23660
",collinanderson,None,2014-10-15T15:38:04Z,2014-10-15T20:07:52Z
3371,Fixed #23659 -- Kept annotate() args ordering,,claudep,None,2014-10-15T13:53:32Z,2014-10-16T07:28:20Z
3370,"Fixed #23637 -- Removed TUX, lighttpd, and Cherokee as common.","https://code.djangoproject.com/ticket/23637
",collinanderson,None,2014-10-15T12:29:18Z,2014-10-15T13:02:45Z
3369,Fixed #9893 -- Filename could exceed max_length on a collision,"Passing max_length argument into the Storage's save() and get_available_name() methods.
Rewriting get_available_name() so filenames do not exceed max_length when there is a collision.
Adding test for the case.
",pavel-shpilev,None,2014-10-15T07:52:36Z,2015-01-10T19:26:15Z
3368,"Fixed #23615 -- Validate that a Model instance's ""check"" attribute is a method.","PR used to trigger CI builds. Refs. #3362.
",loic,None,2014-10-15T07:19:39Z,2014-10-16T17:31:17Z
3367,Fixed #23649 -- Made Oracle test-db creation drop test-user earlier when...,"... needed

Checked database destruction for ORA-29857, which happens when objects of
some types are left over in an old test database (notably, such objects
are created by the GIS backend). When this happens, we can resolve the
issue by dropping the test-user (if we are allowed to).

An alternative approach, to just switch the order of creation (so that,
if the test user exists and can be dropped, it is always dropped before
the tablespace) was considered; but since the user creation depends on
the tablespace, this would necessitate separating the dropping of the user
from its creation -- a change I am reluctant to make.
",shaib,None,2014-10-15T00:09:00Z,2014-10-17T02:03:39Z
3366,Fixed #23651 -- Isolated non-existent fixture tests,,claudep,None,2014-10-14T21:18:37Z,2014-10-15T07:19:31Z
3365,Fixed #23656 -- Made FormMixin.get_form's form_class argument optional.,,charettes,None,2014-10-14T20:21:05Z,2014-10-30T23:11:46Z
3364,Fix UnicodeDecodeError,"If permission details contains non-ASCII symbols this line produces UnicodeDecodeError, eg:
`task_cloner | Задание на клонирование | Может набирать задания` 
-> 
`UnicodeEncodeError: 'ascii' codec can't encode characters in position 33-39: ordinal not in range(128)`.
",utter-step,None,2014-10-14T16:17:59Z,2014-10-14T21:47:22Z
3363,Fixed #23629 -- Allowed autodector to detect changes in Meta.db_table.,"Thanks Naddiseo for reporting.
",tian-yi,None,2014-10-14T14:23:13Z,2014-10-20T17:17:30Z
3362,"Fixed #23615 -- Validate that a Model instance's ""check"" attribute is a ...","...method.

The ""check"" name is a reserved word used by Django's Check framework,
and cannot be redefined as something else other than a method, or the Check
framework will raise an exception.

This change amends the django.core.checks.model_check.check_all_models()
function, so that it verifies that a model instance's attribute ""check""
is actually a method, before calling it and collecting the error
messages.

A test is also provided, and this specific violation is documented and assigned
the id ""fields.E008"".

This fixes https://code.djangoproject.com/ticket/23615
",zedr,None,2014-10-14T13:23:00Z,2014-10-17T12:25:37Z
3361,Clarify usage of serialized_rollback for certain test classes,"[This ticket](https://code.djangoproject.com/ticket/23640) highlighted that it is not overly clear that the serialized_rollback attribute should be used for tests inheriting from StaticLiveServerTestCase and LiveServerTestCase. The documentation only referenced TransactionTestCase, from which the others inherit. It may not be obvious to users that these classes inherit from TransactionTestCase, so I just added a mention of this here.
",gchp,None,2014-10-14T13:17:14Z,2014-10-14T16:14:15Z
3360,Added line clarifying relationship betweek blocks and includes,"https://code.djangoproject.com/ticket/12008

Adds the clarification stated by russellm in comments above. Is in line with phrasing in a similar note in the ssi section on the same page.
",ConorMcGee,None,2014-10-14T13:04:20Z,2014-10-16T14:59:10Z
3359,Fixed #22977 -- Check clashes between related_name and manager name,"https://code.djangoproject.com/ticket/22977
",kswiat,None,2014-10-13T23:00:15Z,2015-07-15T20:54:07Z
3358,Fixed #23558 -- documented slugify limitations,,dhoffman34,None,2014-10-13T22:17:46Z,2014-10-30T13:08:39Z
3357,Fixed #23558 -- documented slugify limitations,,dhoffman34,None,2014-10-13T20:53:31Z,2014-10-13T22:14:06Z
3356,Fixed 23628 - AlterModelOptions should ignore ordering of permissions ...,"...and default_permissions

This patch makes the migration introspector ignore the ordering of list and tuple type options  `permission` and `default_permission` so that a new migration isn't created even if the value of the tuples didn't change.
",Naddiseo,None,2014-10-13T17:03:55Z,2014-10-17T13:22:20Z
3355,Fixed #23534 -- Added documentation on blocktrans tags,"Mentioned that other block tags are not allowed inside
a blocktrans template tag.

Thanks to edu2004eu for reporting the issue.
",machineperson,None,2014-10-13T15:51:18Z,2014-10-13T15:52:41Z
3354,Added documentation on blocktrans tags (issue #23534),"Mentioned that other block tags are not allowed inside
a blocktrans template tag. 
",machineperson,None,2014-10-13T15:07:08Z,2014-10-13T15:50:53Z
3353,Fixed #23606 -- Implement the RequestFactory trace() method,"The RequestFactory class did not implement a trace() method, and
therefore raised an AttributeError when used to create TRACE requests.

This change implements a factory method that returns a very basic TRACE
request object, which should be suitable for most test cases.

It also reworks the original TestClientTests suite so that the following
conditions are checked:

```
- The test factory can create requests for all the HTTP/1.1 methods;
- The GET request test is tested separately;
- The TRACE request is tested with a test view that simulates the
  echo response, according to rfc2616.
```

This fixes https://code.djangoproject.com/ticket/23606
",zedr,None,2014-10-13T11:23:59Z,2014-10-28T14:11:49Z
3352,Memcached cache backend docs cleanup,"Consistent casing, minor typo fixes, reduced rhetoric.
",tomdyson,None,2014-10-13T10:25:56Z,2014-10-13T11:24:35Z
3351,Added a test for #23617 -- UUID fields using uuid.uuid4 as the default,"This new test checks that instances of fields.UUIDField, having the
default set to the uuid.uuid4 callable, will automatically generate a
valid UUID4 identifier, if one is not provided.

The test was created as an attempt to replicate [#23617](https://code.djangoproject.com/ticket/23617). It follows the related Django Developer Docs [example](https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.UUIDField).
",zedr,None,2014-10-13T09:20:35Z,2014-10-23T13:25:35Z
3350,Fixed #19508 -- Implemented uri_to_iri as per RFC.,"Supersedes https://github.com/django/django/pull/2919 and https://github.com/django/django/pull/2932.
",loic,None,2014-10-13T07:40:23Z,2014-10-15T19:37:14Z
3349,Fixed #23558 -- documented slugify limitations,,dhoffman34,None,2014-10-13T00:40:34Z,2014-10-13T20:50:10Z
3348,Fixed #23638 -- Prevented crash while parsing invalid cookie content,"Thanks Philip Gatt for the report.
",claudep,None,2014-10-12T18:58:28Z,2014-10-13T15:40:17Z
3347,Fixed #23642 -- Made LocMemCache.incr() thread-safe as documented,"See https://code.djangoproject.com/ticket/23642, the following script generated random results before the patch:

``` Python
import threading

from django.core.cache.backends.locmem import LocMemCache

cache = LocMemCache('test', {})

cache.set('foo', 0)

def increment(key):
    cache.incr(key)

threads = []
for i in range(20):
    t = threading.Thread(target=increment, args=('foo',))
    t.start()
    threads.append(t)

for t in threads:
    t.join()

print cache.get('foo')   # Random results — 20 is expected
```
",tchaumeny,None,2014-10-12T13:43:24Z,2014-11-21T17:40:35Z
3346,Fixed #23639 -- Fixed doc error in RegexValidator.regex,"Thanks to @claudep for the report and the original patch.
",doriczapari,None,2014-10-12T11:56:42Z,2014-10-12T12:00:47Z
3345,"Partial fix for #21113, saving change_message in english and parsing bef...","...ore displaying.
",jooyous,None,2014-10-12T05:28:29Z,2014-12-24T23:56:42Z
3344,Fixed #23579 -- Changed GEOSGeometry.__str__ to include the SRID,,claudep,None,2014-10-11T19:46:28Z,2014-10-16T07:31:44Z
3343,Fixed #23468 -- Checks for settings.FIXTURE_DIRS,"If there are duplications or default fixture paths for applications (app/fixture) in settings.FIXTURE_DIRS, checks will return Warning.
",kswiat,None,2014-10-11T19:15:35Z,2014-10-31T23:10:47Z
3342,Fixed #23546 -- Added kwargs support for callproc for oracle,"add kwargs or args parameters to callproc method for those backends that support more parameters for callproc method (e.g cx_oracle) 
https://code.djangoproject.com/ticket/23546
already tested on ubuntu 12.04 server(amd64) with oracle XE 11g
",averybigant,None,2014-10-11T18:22:51Z,2015-03-23T15:21:10Z
3341,Fixed #23300 -- TestCase.assertTemplateUsed passes erroneously on an HttpResponse,"Thanks zags for the report and bmispelon for the patch
",davide-ceretti,None,2014-10-11T16:58:04Z,2014-11-03T19:35:13Z
3340,Allow apps with no models module to still have migrations,"Basically a4737bf6ae reapplied.
",claudep,None,2014-10-11T14:04:35Z,2014-10-24T13:24:24Z
3339,Add my bio to team docs,"What the hell does one write in one of these, anyway?
",funkybob,None,2014-10-11T05:33:38Z,2014-10-11T11:46:41Z
3338,Added Jaap Roes to AUTHORS,"I've never been sneaky enough to add myself to the authors in any of these commits https://github.com/django/django/commits?author=jaap3
",jaap3,None,2014-10-10T13:25:23Z,2015-11-26T11:15:32Z
3337,Fixed #23613 -- Deprecated django.utils.checksums,"All of this is under the assumption that https://github.com/django/django-localflavor/pull/122 will get merged
",jaap3,None,2014-10-10T11:48:20Z,2015-11-26T11:16:06Z
3336,Fixed #23625 - Removed CacheClass shim,,jaap3,None,2014-10-10T11:24:16Z,2015-11-26T11:16:14Z
3335,Update my author entry,,batiste,None,2014-10-10T07:32:18Z,2014-10-10T12:01:35Z
3334,Avoid requiring sqlparse for a test.,"Refs #23426. Thanks Markus Holtermann for the suggestion.
",collinanderson,None,2014-10-09T16:41:56Z,2015-01-15T01:21:17Z
3333,Fixed #23627 -- Allowed register_lookup to work as a decorator.,"Both patterns are now used in the test suite which should be enough to verify this works fine. The change was rather simple.
",mjtamlyn,None,2014-10-09T16:06:00Z,2014-10-09T17:48:13Z
3332,Fixed #20349 -- Don't load django.test when not testing.,"Could be a controversial change, but it lowers the memory footprint by almost a megabyte.
https://code.djangoproject.com/ticket/20349
",collinanderson,None,2014-10-09T15:56:50Z,2014-12-24T16:26:39Z
3331,Skip another test if sqlparse is not available,"Test was added for: https://code.djangoproject.com/ticket/23426
",collinanderson,None,2014-10-09T15:05:34Z,2015-01-15T01:21:15Z
3330,Updated my bio.,"This better reflects why I was invited to the team.
",collinanderson,None,2014-10-09T12:23:44Z,2015-01-15T01:21:14Z
3329,Fixed #23063 -- Convert \n and \r to \r\n when using the SMTP backend as...,"... per RFC.
",apollo13,None,2014-10-09T12:19:41Z,2014-10-12T20:03:45Z
3328,Fixed #23623 -- Reduced memory consumption when generating ModelChoiceField choices,"See https://code.djangoproject.com/ticket/23623#ticket
",tchaumeny,None,2014-10-09T11:16:18Z,2014-11-21T17:40:34Z
3327,Fixed #23616 - AttrbuteError in BaseModelAdmin.lookup_allowed() fix,"Added check if hasattr(), else, param is set to None to avoid AttributeError.
See https://code.djangoproject.com/ticket/23616
",kswiat,None,2014-10-08T22:22:54Z,2014-10-10T19:56:10Z
3326,Fixed #23420 - broken warning for unbound naive datetime objects,"Fixes issue with warning message displayed for unbound naive datetime objects when `USE_TZ` is True. Adds unit test that demonstrates the issue (discoverable when using a custom lookup in MySQL) and clarifies docs.

Ticket [#23420](https://code.djangoproject.com/ticket/23420)
",chosak,None,2014-10-08T20:53:52Z,2018-10-19T13:40:21Z
3325,Add myself to AUTHORS and register authorship of ed37f7e,"This commit is a record that ed37f7e was my contribution.
Thanks Loic Bistuer for reviewing it.
",aericson,None,2014-10-07T21:15:24Z,2014-10-07T21:30:51Z
3324,Update loaddata.py,"Changed check for path separator so that paths are normalized on Windows, Mac and Linux. This allows relative paths to fixtures to be specified as '[path]/fixtures/[name].json' which is not currently working in Windows 8.1.

After running the test suite, I am getting 7295 tests passed, 8 expected failures and 684 skipped. 
",alsoicode,None,2014-10-07T18:26:13Z,2014-10-10T11:41:52Z
3323,Fixed #23605 -- added relabeled_clone() method to sql.Query,"The problem manifested itself in rare cases where at least double nested
subquery's filter condition might target non-existing alias.

Thanks to Trac alias ris for reporting the problem.
",akaariai,None,2014-10-07T13:06:02Z,2014-11-20T18:54:45Z
3322,Added Tom Christie to core team.,":sparkles: :space_invader: :sparkles: 
",tomchristie,None,2014-10-07T08:29:17Z,2014-10-08T08:30:02Z
3321,Fixed #23611 -- update_or_create failing from a related manager,"update_or_create from the RelatedManager would cause an IntegrityError
since the instance was missing in the kwargs.
",aericson,None,2014-10-07T08:01:50Z,2014-10-07T22:01:41Z
3320,Fixed #23609 -- Changed behavior when dropping a NULL constraint to update rows with NULL to default,"Ticket: https://code.djangoproject.com/ticket/23609
",MarkusH,None,2014-10-06T23:56:25Z,2014-10-09T23:04:15Z
3319,Fix for #20982 -- forms.BooleanField field issue,"Fix for ticket #20982. Confer: https://github.com/abhillman/django/commit/d06f37a3344040d957a730db30d1b58bcae3a8fd
",abhillman,None,2014-10-06T21:08:03Z,2014-10-06T21:40:41Z
3318,Fixed #23593 -- Fixed crash in AdminEmailHandler with non-ASCII characters in request.,"https://code.djangoproject.com/ticket/23593
",timgraham,None,2014-10-06T20:11:28Z,2014-10-25T12:07:29Z
3317,bio: some punctuation tweaks.,,collinanderson,None,2014-10-06T17:24:03Z,2015-01-15T01:21:14Z
3316,Fixed #23594 -- Fixed deepcopy on ErrorList.,"Thanks Troy Grosfield for the report and Tim Graham for the tests.
",loic,None,2014-10-06T16:22:34Z,2014-10-06T19:59:56Z
3315,my bio,,collinanderson,None,2014-10-06T16:07:51Z,2015-01-15T01:21:13Z
3314,movable django migrations,"Hello, it would be nice, if we be able to move the migration from one application to another.

For example, we have local app with FooModel:

```
class FooModel(models.Model):
    first_field = models.CharField(max_length=255)
    second_field = models.CharField(max_length=255)
```

and some third-party app with BazModel.
If we want add new field to BazModel in the our project, we use method contribute_to_class in foo.models:

```
models.ManyToManyField(FooModel, blank=True, null=True).contribute_to_class(BazModel, 'foo_field')
```

New migration added to /path_to_third_party_app/migrations/, and we move it to /path_to_proj/foo/migrations/. It need to store changes in models of third-party applications in project.
",ChangeSomeCode,None,2014-10-06T15:16:43Z,2014-10-07T11:03:21Z
3313,Fix references in docs/ref/contrib/admin/index.txt,"According to the recommendation in [Sphinx doc](http://sphinx-doc.org/markup/inline.html#cross-referencing-arbitrary-locations).

This allows to translate references names in documentation translations.
",Alerion,None,2014-10-06T13:19:43Z,2014-10-06T14:46:36Z
3312,Updated assertQuerysetEqual documentation following 311b3ad9db94,"Related to https://github.com/tchaumeny/django/commit/311b3ad9db94c3e04f929c2622be4f10d759f45e
",tchaumeny,None,2014-10-05T21:14:55Z,2014-11-21T17:40:24Z
3311,Fixed #23604 -- Allowed related m2m fields to be references in the admin.,,nanuxbe,None,2014-10-05T18:18:57Z,2014-10-06T13:41:10Z
3310,"Allow reloading the same app, #23621","The exception made it impossible to use IPython autoreloading.
This error is to prevent loading of different modules (with same base name) but it also blocks autoreloading of absolutely the same app.

original reopened ticket:
https://code.djangoproject.com/ticket/22280
new ticket:
https://code.djangoproject.com/ticket/23621
",pashinin,None,2014-10-05T11:48:40Z,2014-10-22T16:28:53Z
3309,"Fixed #23597 -- Clarified {Single,Multiple}ObjectMixin.model docs","https://code.djangoproject.com/ticket/23597

I added a new ""Default managers"" heading under the Managers topic to be able to refer to the paragraph I wanted to. (I also think it's probably important enough to warrant its own heading).
",isbadawi,None,2014-10-05T01:27:31Z,2014-10-06T12:24:31Z
3308,Fixed #22064 -- Add check for related_name,"Validates that related_name is a valid Python id or ends with a '+' and
it's not a keyword. Without a check it passed silently leading to
unpredictable problems.

Thanks Konrad Świat for the initial work.
",aericson,None,2014-10-05T00:08:14Z,2014-10-06T20:06:42Z
3307,Fixed #23602 -- Add comment on get_absolute_url regarding user input,"https://code.djangoproject.com/ticket/23602
",MarkusH,None,2014-10-04T17:57:05Z,2014-10-06T17:28:17Z
3306,Refactored Model lookup tests. Refs #18586,"Test Model lookup refactoring that were coming from doctests.
",browniebroke,None,2014-10-04T17:41:24Z,2014-10-07T16:05:25Z
3305,Fixed #23601 -- Prevent possible side-import through admindocs,"Ticket https://code.djangoproject.com/ticket/23601
",MarkusH,None,2014-10-04T17:06:23Z,2014-10-06T13:33:29Z
3304,Ticket 23600,"Make django.core.files.storage.default_storage take account of overriding of the following settings:

MEDIA_URL
FILE_UPLOAD_PERMISSIONS
FILE_UPLOAD_DIRECTORY_PERMISSIONS
",duncanparkes,None,2014-10-04T14:16:12Z,2014-10-08T22:15:47Z
3303,Fixed typo in comment,,numerodix,None,2014-10-04T06:41:56Z,2014-10-04T12:00:52Z
3302,Refactored some tests where is len(). Changed to count().,"Hello, 

I done this changes, becouse len(qs) will hit the database with select \* from table whereas qs.count() will hit the db with select count(*) from table. So count() here fits better.

Sorry for typo in commit massage ""Refaktored"".
Maybe on pull You can change this?
Thanks :)
",jelenak,None,2014-10-03T17:50:53Z,2014-10-08T18:53:48Z
3301,WIP: setup() before checks,"Seeing what the damage is.
",collinanderson,None,2014-10-03T16:49:45Z,2015-01-15T01:21:12Z
3300,Better error message: Models aren't loaded yet. Ensure django.setup() has been called.,"I'm hoping a better error message here could help some people out. I can open a ticket if needed.

I realize there's other error messages too, but I think this is the most important one.
",collinanderson,None,2014-10-03T13:52:24Z,2015-01-15T01:21:12Z
3299,Fixed typo.,,ticalcster,None,2014-10-02T12:42:36Z,2014-10-02T13:09:07Z
3298,Fixed #23583 - Makemessages for javascript,"Makemessages looks in STATIC and MEDIA dirs for javascript files.

See https://code.djangoproject.com/ticket/23583
",nijel,None,2014-10-02T07:06:13Z,2014-10-14T19:06:07Z
3297,Fixed #23580 -- Changed NullBooleanField to handle required arguemnt.,"Changed NullBooleanField to handle the required argument. When
required is True, values True and False validate while None is
invalid. To keep existing behavior with older version of Django,
NullBooleanField has required=False by default.
",jdufresne,None,2014-10-01T21:47:46Z,2016-03-13T23:04:05Z
3296,Fix signature for QuerySet.values_list,"`flat` kwarg had been missing
",jnothman,None,2014-10-01T14:24:52Z,2014-10-01T17:10:08Z
3295,[1.7.x] Fixed #23578 -- Changed examples in docs to use patterns,,alasdairnicol,None,2014-10-01T00:11:39Z,2014-10-01T01:03:49Z
3294,Attic/magic removal,"Do I need this pull request or will I just access it from the public page? Thanks.
",xIRvGMSEBooc44a0b7yx,None,2014-09-30T20:04:50Z,2014-10-01T00:25:00Z
3293,Fixed #15089 -- Allowed contrib.sites to lookup the current site based on request.get_host().,"https://code.djangoproject.com/ticket/15089
",timgraham,None,2014-09-30T17:27:41Z,2014-10-02T09:46:07Z
3292,Fix column default handling in schema editor,"Previous code would issue a DROP DEFAULT right after a SET DEFAULT in
the wrong cases (e.g. for PostgreSQL that supports it).
",mpessas,None,2014-09-30T05:25:07Z,2014-09-30T11:30:48Z
3291,Fixed #8149 -- Fixed File.__iter__() to handle other newline types.,"Fixed File to use universal newlines. The following are recognized as
ending a line: the Unix end-of-line convention '\n', the Windows
convention '\r\n', and the old Macintosh convention '\r'.
",jdufresne,None,2014-09-30T02:25:42Z,2016-03-13T23:04:00Z
3290,Fixed #23489 -- Added numpy 1.9+ support in template lookups,,timgraham,None,2014-09-29T23:52:18Z,2014-09-30T00:41:52Z
3289,Fixed #23365 -- Added support for serializing timezone-aware datetimes to migrations.,,timgraham,None,2014-09-29T18:31:39Z,2014-09-30T00:55:05Z
3288,Fixed #23569 -- Allow use fileConfig() in logging,"settings.LOGGING_CONFIG assumes dictConfig(). If you're using a different logging config function, django sends it a dictionary of options as the first argument. It looks like the intention was to initialize a default set of options with a dictionary, and then allow the user settings to override. 

This little change should fix that. 

https://code.djangoproject.com/ticket/23569
",sethrh,None,2014-09-29T18:18:48Z,2014-10-10T22:49:42Z
3287,Fixed #23567 -- made assertQuerysetEqual check Counter equality when ord...,"...ered=False
",tchaumeny,None,2014-09-29T15:18:33Z,2014-11-21T17:40:17Z
3286,Fix typo in docs - topics/db/managers/,,gregplaysguitar,None,2014-09-29T03:41:06Z,2014-09-29T11:46:17Z
3285,"Added cross-referencing links to templates, migrations, models, settings","Following comments and what has already been done, I added links to the bottom of the topics pages for templates, settings, models, and migrations that go to the corresponding reference pages. I also added links to the top of ref/settings, ref/migration-operations, and ref/templates/index that go to the corresponding topics pages.
",duane9,None,2014-09-27T22:16:13Z,2014-09-29T22:17:00Z
3284,Fixed #16731 -- Made pattern lookups work properly with F() expressions,"See https://code.djangoproject.com/ticket/16731#comment:11
",tchaumeny,None,2014-09-27T10:54:41Z,2014-11-28T10:45:19Z
3283,Fixed #22738 -- made finer distinctions for when Boolean is not detected on Oracle,"This is first served as a PR for two purposes:

1) To let interested parties review it
2) To verify by Jenkins that the fix indeed works.
",shaib,None,2014-09-26T21:23:59Z,2014-09-27T07:01:33Z
3282,"Replaced set([foo, ...]) by {foo, ...} literals.","Using literals is optimal as it avoids a list creation and a function call — this won't make any big performance difference but since it also is the nominal way to create a set in Python2.7+ and does not affect readability there is no reason not to use it.

For reference:

``` bash
$ python2.7 -m timeit -n 1000000 -r 5 -v 'set([""foo"", ""bar"", ""baz"", ""qux""])'
raw times: 0.784 0.678 0.686 0.753 0.777
1000000 loops, best of 5: 0.678 usec per loop

$ python2.7 -m timeit -n 1000000 -r 5 -v '{""foo"", ""bar"", ""baz"", ""qux""}'
raw times: 0.198 0.207 0.19 0.237 0.274
1000000 loops, best of 5: 0.19 usec per loop
```

See also http://doughellmann.com/2012/11/12/the-performance-impact-of-using-dict-instead-of-in-cpython-2-7-2.html
",tchaumeny,None,2014-09-26T13:46:55Z,2014-09-28T17:17:45Z
3281,Fixed #23560 -- Fixed MigrationWrite to handle builtin types without imp...,"...orts.
",loic,None,2014-09-26T11:26:57Z,2014-09-26T17:45:56Z
3280,Fixed #23556 -- Raise a more meaningful error message when migrations refer to an unavailable node,"https://code.djangoproject.com/ticket/23556
",MarkusH,None,2014-09-26T10:22:46Z,2014-10-30T17:09:01Z
3279,Update LICENSE,,testgmail,None,2014-09-26T08:12:12Z,2014-09-26T10:29:18Z
3278,Fixed #22738 -- Abstracted boolean field type introspection,,claudep,None,2014-09-26T06:45:32Z,2014-09-26T18:14:45Z
3277,Second solution for IndexError problem in QuerySet,"This is a fix for problem described in ticket #23555 https://code.djangoproject.com/ticket/23555

I've sent a pull request with a fix already https://github.com/django/django/pull/3274
But if somebody thinks the code becomes too complicated and prefers to use try/catch despite the problem then I propose this solution with special exception class. Now you can use this safely anywhere:

```
try:
    return qs[0]
except QuerySetIndexError:
    return None
```
",artemrizhov,None,2014-09-25T23:25:05Z,2014-10-08T18:55:11Z
3276,Fixed #23455 -- Force related_name to be a string during deconstruction,"Ticket: https://code.djangoproject.com/ticket/23455
",MarkusH,None,2014-09-25T18:26:14Z,2014-09-25T22:35:48Z
3275,Factorized schema_editor() at BaseDatabaseWrapper level,,claudep,None,2014-09-25T18:00:53Z,2014-09-26T06:51:27Z
3274,Fixed potential problem with IndexError in QuerySet.first(),"The current implementation may suppress internal IndexError exceptions.

Please see ticket 23555 for more details. https://code.djangoproject.com/ticket/23555#ticket
",artemrizhov,None,2014-09-25T17:58:41Z,2014-10-08T19:51:28Z
3273,Refactored m2m_through tests. Refs #18586,"Refactored old tests that were rewritten 1:1 from doctests.
",davide-ceretti,None,2014-09-24T22:41:28Z,2014-09-25T18:30:20Z
3272,Added a test for fixing the ticket #23551,"Fixed a wrong evaluation of the `$COMP_CWORD` in `tests/bash_completion/tests.py` and added a test for the bug reported in #3246.
",marco-buttu,None,2014-09-24T18:03:21Z,2014-09-25T14:31:00Z
3271,"Fixed #22959, #23473","https://code.djangoproject.com/ticket/22959
https://code.djangoproject.com/ticket/23473
",MarkusH,None,2014-09-24T17:13:17Z,2014-09-24T18:35:01Z
3270,Cleanup some django.contrib.gis tests and fix random failure.,"I wanted to fix the random `django.contrib.gis.tests.geoapp.tests.GeoQuerySetTest.test_make_line` failure happening on some builds and I realized that the assertion functions used needed some cleanup too. I put it all in this PR.

The `tolerance=10e-5` parameter might look arbitrary, but since it's the minimum precision of the ref_line coordinates I think there is no need to check with a better precision.
",tchaumeny,None,2014-09-24T17:07:10Z,2014-09-26T18:44:29Z
3269,Add SuspiciousOperation to list of caught exceptions,,graingert,None,2014-09-24T13:57:11Z,2014-09-24T17:05:00Z
3268,Fixed #23448 -- Update ISO_INPUT_FORMATS to allow date filtering for ISO8601 dates,"I'm updating PR #3195 for the [#23448](https://code.djangoproject.com/ticket/23448) ticket, taking into consideration feedback that was left.
",jpadilla,None,2014-09-24T04:03:05Z,2019-10-09T10:22:07Z
3267,Fixed #23426 -- Allow parameters in migrations.RunSQL,"Ticket: https://code.djangoproject.com/ticket/23426
",MarkusH,None,2014-09-23T21:49:22Z,2014-10-31T09:34:53Z
3266,Fixed #23426 -- Don't require double percent sign in RunSQL without parameters,"Ticket: https://code.djangoproject.com/ticket/23426
",MarkusH,None,2014-09-23T21:48:54Z,2014-09-24T17:04:29Z
3265,Fixed #23538 -- Added SchemaEditor for MySQL GIS.,,timgraham,None,2014-09-23T19:30:03Z,2014-09-25T17:54:43Z
3264,Bail early on formsets.all_valid check,"There's no reason to iterate over all formsets after the first one is invalid

This can also be done as:

``` python
def all_valid(formsets):
    return not any(not formset.is_valid() for formset in formsets)
```

But I find that harder to parse personally.
",mattrobenolt,None,2014-09-23T09:16:52Z,2014-09-23T16:30:21Z
3263,"Fixed #23539 -- replace references to extra, min_num, max_num with get_*",,bigjust,None,2014-09-22T21:46:36Z,2014-09-24T10:34:10Z
3262,Fixed #23338 -- Added warning when unique=True on ForeignKey,"This PR is similar to #3196 but with the tests and the updated documentation as requested.
",diegoguimaraes,None,2014-09-22T18:22:14Z,2016-01-06T18:05:16Z
3261,Merged one_to_one_regress into the one_to_one test package.,,loic,None,2014-09-22T17:31:35Z,2014-09-22T23:55:36Z
3260,Fixed #8408 -- Added ModelAdmin option to avoid expensive COUNT(),"A full `SELECT COUNT(*) FROM ""foo""` is performed on admin pages even when the current list being displayed is restricted to a small subset of entries.

This extra query result — which can be very expensive on large tables as explained in https://code.djangoproject.com/ticket/8408 — is used for two purposes:
1. Displaying a ""99 results (103 total)"" link next to the search field
2. Determining whether the table contains at least one entry so that the actions form is shown.

With this PR, if `ModelAdmin.show_full_result_count` is set to `False`, the link in 1 is replaced by ""99 results (See all)"" and the actions form is always shown — which shouldn't be a problem.

Also, I think https://code.djangoproject.com/ticket/8851 could be a next step after that, as it would allow the default admin page for models with many instances to be filtered by default, so that it doesn't take too long to load.
",tchaumeny,None,2014-09-22T17:16:24Z,2014-09-26T18:44:08Z
3259,Fixed #23537 -- Added Oracle GIS SchemaEditor.,,timgraham,None,2014-09-22T17:13:35Z,2014-09-26T00:40:21Z
3258,Update template customization tutorial text,"Ticket #23535 - The text wasn't completely clear on what you actually have to change
",velis74,None,2014-09-22T13:40:37Z,2014-09-22T19:25:11Z
3257,Fixed #23532 -- Fixed Macedonian locale date formats,"The Macedonian locale (mk_MK) date format currently has an extra dot after the year. The date shouldn't end with a dot.

Current format: '%d.%m.%Y. %H:%M:%S' 25.10.2006. 14:30:59
Correct format: '%d.%m.%Y %H:%M:%S' 25.10.2006 14:30:59
",dekomote,None,2014-09-22T10:39:25Z,2014-09-22T16:09:02Z
3256,Normalize get_queryset() of RelatedObjectDescriptor and ReverseSingleRelatedObjectDescriptor.,,loic,None,2014-09-22T09:23:21Z,2014-09-23T19:30:39Z
3255,Corrected the date/datetime format in mk_MK locale,"The Macedonian locale (mk_MK) date format currently has an extra dot after the year. The date shouldn't end with a dot.

Correct format: '%d.%m.%Y %H:%M:%S' 25.10.2006 14:30:59
Current format: '%d.%m.%Y. %H:%M:%S' 25.10.2006. 14:30:59
",dekomote,None,2014-09-21T23:01:57Z,2014-09-22T11:57:24Z
3254,Fixed #23531 -- Added CommonMiddleware.response_redirect_class,"Will add doc changes and whatnot if this behavior is accepted.
- [ ] Tests
- [ ] Docs
- [ ] Changelog
",mattrobenolt,None,2014-09-21T22:14:40Z,2014-11-24T03:36:39Z
3253,[POC] Class based indexes,,mjtamlyn,None,2014-09-21T19:37:52Z,2015-11-25T10:12:43Z
3252,Don't recommend sudo in more places,"In a similar vein as https://github.com/django/django/pull/3244
",frewsxcv,None,2014-09-21T17:59:50Z,2014-09-22T19:51:31Z
3251,Changed Oracle test-user creation to grant privileges instead of roles,"because the roles (specifically RESOURCE) are deprecated.
Also added optional support for creating views in tests.
",shaib,None,2014-09-21T17:19:58Z,2014-09-24T02:10:32Z
3250,Fixed #23512 -- Made migration docs about initial_data clearer,"Thanks @abhillman and @Markush2010 for submitting the ticket.
",olasitarska,None,2014-09-21T15:48:04Z,2014-09-21T18:21:04Z
3249,Fixed #23527 -- Removed Cheetah references in docs,"Thanks to @aaugustin for submitting the [ticket](https://code.djangoproject.com/ticket/23527).
",olasitarska,None,2014-09-21T15:31:42Z,2014-09-21T16:04:03Z
3248,Fixed #23529 -- Replaced comments tag library with humanize in docs,"I replaced removed comments tag library example in docs with humanize tag library. 

Ticket: https://code.djangoproject.com/ticket/23529
",olasitarska,None,2014-09-21T15:17:58Z,2014-09-21T15:33:23Z
3247,Fixed #18782 -- Prevented flush with views,,claudep,None,2014-09-21T14:35:08Z,2014-09-23T18:14:49Z
3246,Fixed a bug that appears by using the bash autocompletion with Python 3.,"My environment is Python 3.4 and Linux Mint 17. When using the django autocompletion, a TAB-completion after a command gives me an exception. For instance, typing a TAB after `django-admin startproject`:

```
$ django-admin startproject Traceback (most recent call last):
      ...
  File "".../django/core/management/__init__.py"", line 262, in autocomplete
    options = sorted((k, v) for k, v in options if k.startswith(curr))
TypeError: unorderable types: bool() < NoneType()
```

That happens because at line 225 the `options` list is initilized as:

```
options = [('--help', None)]
```

and at line 263:

```
options = sorted((k, v) for k, v in options if k.startswith(curr))
```

But since `options` contains `--help` twice, in Python 3 we get an error comparing a `bool` with `None`:

```
>>> sorted([('foo', True), ('--help', False), ('--help', None)])
Traceback (most recent call last):
    ...
TypeError: unorderable types: NoneType() < bool()
```

That obviously does not happen in Python 2. The doctring of `autocomplete()` says:

```
>>> from django.core.management import ManagementUtility
>>> for line in ManagementUtility.autocomplete.__doc__.splitlines()[10:15]:
...     print(line)
... 

        Subcommand options are saved as pairs. A pair consists of
        the long option string (e.g. '--exclude') and a boolean
        value indicating if the option requires arguments. When printing to
        stdout, an equal sign is appended to options which require arguments.
```

So, how come `options` is initialized with the pair `('--help', None)` instead of `('--help', False)`?
",marco-buttu,None,2014-09-20T14:50:11Z,2014-09-25T12:17:04Z
3245,Fixed #22310 -- Documented exact usage of SECRET_KEY,"https://code.djangoproject.com/ticket/22310
",mxsasha,None,2014-09-20T08:06:46Z,2014-10-04T07:21:50Z
3244,Don't recommend using sudo when installing uwsgi,"This was added with https://github.com/django/django/commit/c0e73a4909832e0db7cac5345128979a21529786 but I feel that this is something we shouldn't be recommending users to do.

cc-ing @aaugustin just in case there was a valid reason for this.
",mattrobenolt,None,2014-09-20T06:00:06Z,2014-09-21T17:59:50Z
3243,Fixed Oracle GIS gml() test failure introduced by e910340; refs #18757.,"@mjtamlyn, one more test failure related to the converters change. The results of [GeoQuerySet.gml()](https://github.com/django/django/blob/9d30412a5ad1c72b3d319b4c2bceacb53a0ff1da/django/contrib/gis/db/models/query.py#L168-L179v) aren't coerced to a string. `extra_select_fields.get('gml')` here doesn't return a field so the converters aren't run. I hope you can suggest a more elegant solution.
",timgraham,None,2014-09-19T17:27:35Z,2014-09-22T12:14:18Z
3242,Converted GIS lookups to use the new Lookup API,"This is not ready yet, mainly the Oracle part is missing. Let's see what the CI server thinks about it...
",claudep,None,2014-09-19T16:21:42Z,2014-10-09T19:40:20Z
3241,Made a GIS test work on Oracle.,,timgraham,None,2014-09-19T14:05:37Z,2014-09-19T19:04:25Z
3240,Silenced some deprecation warnings in contrib.sitemaps; refs #22384.,,loic,None,2014-09-18T22:41:44Z,2014-09-26T17:45:04Z
3239,Fixed #23522 -- Changed reverse() to return a text string; not bytes,,jdufresne,None,2014-09-18T22:17:08Z,2016-03-13T23:04:06Z
3238,Fixed Oracle GIS failures introduced by e9103402c0; refs #18757.,"alternate approach: https://github.com/django/django/pull/3237
",timgraham,None,2014-09-18T19:45:19Z,2014-09-19T12:19:22Z
3237,Fixed Oracle GIS failures introduced by e9103402c0; refs #18757.,"alternate approach: https://github.com/django/django/pull/3238
",timgraham,None,2014-09-18T19:00:54Z,2014-09-19T12:19:00Z
3236,Fixed #23514 -- Prevented queries in PostGISOperations init,"Thanks Mattia Procopio for the report.
",claudep,None,2014-09-18T16:17:22Z,2014-09-18T18:02:07Z
3235,Fixed #23488 -- Added get_username to AnonymousUser.,"`django.contrib.auth.models.AnonymousUser` now implements `get_username()` as `User` does.

See https://code.djangoproject.com/ticket/23488.

Putting the `versionadded` block within the list of attributes and methods of `AnonymousUser` (just above the mention of `get_username`), did not feel right: it seemed to apply to all attributes and methods below. Moving `get_username()` at the end did not feel right either. This is why I put the `versionadded` block separately.
",dbaty,None,2014-09-18T07:29:52Z,2014-09-18T14:49:58Z
3234,Fix #23366: Warn about pending migrations and continue execution,"Fix to issue #23366 https://code.djangoproject.com/ticket/23366
",dgbc,None,2014-09-18T00:07:24Z,2014-10-30T13:37:35Z
3233,WIP -- fixing Oracle GIS test.,,timgraham,None,2014-09-17T23:47:42Z,2014-09-18T16:25:52Z
3232,Added feature flag for geometry_field_introspection; refs #22632 and #23504.,,timgraham,None,2014-09-17T21:59:37Z,2014-09-18T11:36:06Z
3231,Added a feature flag for add_srs_entry support; refs #22632 and #23504.,,timgraham,None,2014-09-17T21:17:29Z,2014-09-18T11:31:28Z
3230,fixed #23503 -- fixed renaming of model with self-referential m2m field,,sir-sigurd,None,2014-09-17T15:34:35Z,2014-11-24T20:50:04Z
3229,Fixed #23495 -- Stopped swallowing real settings import error,"Thanks papaloizouc for the report.
",claudep,None,2014-09-17T08:45:16Z,2014-09-17T15:16:14Z
3228,"Fixes #23499 - Error in built-in template tag ""now"" documentation","https://code.djangoproject.com/ticket/23499

Small documentation change. I built the documentation (`make html`) and there were no errors. 
",JDougherty,None,2014-09-17T03:51:54Z,2014-09-17T07:25:11Z
3227,Fixed #23497 -- Made admin system checks run for custom AdminSites,"- Create system_check_errors in django.contrib.admin.sites
- Modifies register() to store results of admin_check in
  system_check_errors
- Modifies checks to read from system_check_errors instead of re-running
  all of the checks
",amosson,None,2014-09-16T19:49:44Z,2014-12-15T13:25:48Z
3226,fixed #23065 -- quote constraint names in SQL,,sir-sigurd,None,2014-09-16T14:54:54Z,2014-11-24T20:50:06Z
3225,Fixed #23493 -- Added bilateral attribute to Transform,"https://github.com/django/django/pull/3284 is a prerequisite for that PR as `PatternLookup` uses the same mechanism to turn a ""transformed"" rhs into some SQL as it does for an `F` expression (relying on `pattern_ops`).
",tchaumeny,None,2014-09-16T13:22:11Z,2014-10-29T12:29:13Z
3224,"Stable/1.7.x ""django-admin.py startproject mysite"" command cause the ""conhost.exe"" exploding in the processing","About the ""django-admin.py startproject mysite"" command cause the ""conhost.exe"" exploding in the processing.

I build the environment according to the official document in homepage, everything go well. 

$ python -c ""import django; print(django.get_version())""     output  1.7  

but when I use command ""django-admin.py startproject mysite""

It didn't show nothing in the CMD and the CMD.exe keeping invoking the ""conhost.exe"" until the system break down.

Environment:
Window7 sp1 professianl
python 3.4
django 1.7
",lane128,None,2014-09-16T07:36:16Z,2014-09-16T12:31:22Z
3223,Fixed #19820 -- Provide the user with more helpful deserialization error message,"This pull supersedes https://github.com/django/django/pull/3098

To answer @timgraham in the previous pull:

> What do you mean by ""partial fix""? If we commit this should we leave the ticket open?

The original pull request only dealt with specific errors, mainly with invalid foreign keys, but would still give bad error messages for invalid pks and regular fields. This new PR should fix most/all of that with the exception of deserializing XML; I think the xml deserializer may still raise unhelpful error messages.
",Naddiseo,None,2014-09-15T18:01:31Z,2015-04-09T14:57:15Z
3222,Fixed #23421 -- Corrected TEST SERIALIZE setting.,"https://code.djangoproject.com/ticket/23421
",timgraham,None,2014-09-15T15:23:03Z,2014-09-24T18:47:02Z
3221,Fixed #23450 - transient failure of test_far_expiration,"The cookie expiration date is now taken directly from
the expires parameter. However, I'm keeping the current
logic of adding 1 second to max_age, to ensure that expires
is never later than (now + max_age).
",pwmarcz,None,2014-09-15T02:38:32Z,2015-05-24T19:43:23Z
3220,#22340  -- Moved more DDL to schema editors,"This series of commit move part of DatabaseCreation work to schema editors. The main achievement here is to make migrate use schema editor for syncing unmigrated apps.
",claudep,None,2014-09-14T20:43:42Z,2014-12-23T19:20:16Z
3219,[contib.postgres] HStorefield,"Beginnings of an `hstore` implementation. TODO:
- [x] support migrations to create the extension and register with psycopg2
- [x] expand the field definition, including restriction of variables
- [x] form field
- [x] add lookups
- [x] docs
- [x] validator

There is a design decision to make: do we want a simplistic hstore field which follows the rules of hstore itself - restricts to strings and null, or do we want something a bit more clever like `django-hstore` provides that does some json encoding on non-string types? I currently lean towards the former as we will also have support for a `jsonb` field for more rich data. This would also remove a lot of complexity from the `django-hstore` implementation - descriptors, subclasses of dict etc.
",mjtamlyn,None,2014-09-14T08:40:53Z,2014-11-04T11:21:15Z
3218,Removed seconds from all locale time output formats.,"As discussed on Django dev mailing list.
",maltebeckmann,None,2014-09-13T08:47:11Z,2014-09-13T21:30:31Z
3217,Fixed #23461 -- Added EMAIL_TIMEOUT setting,"The `timeout` parameter was added to the SMTP backend in [#21271](https://code.djangoproject.com/ticket/21271), but done awkwardly to avoid using a setting. Now that we are fine adding the [setting](https://groups.google.com/d/msg/django-developers/ZWpRbTwTxmo/VJ93xb5V5qoJ), I'm adding it.

Based on [00535e8e6b402cab29ea3dbb7b4cc470f9839678](https://code.djangoproject.com/changeset/00535e8e6b402cab29ea3dbb7b4cc470f9839678/).
",jpadilla,None,2014-09-13T02:55:34Z,2014-09-13T13:34:23Z
3216,Fixed #23482 -- Changed SingleObjectMixin to use both pk and slug ,"Previously, if a URL contained both a pk and slug kwarg, the object
would be looked up by only the pk. The slug was ignored. This could
potentially allow for an insecure direct object reference [0] security
hole in a Django applications. Now, when both the pk and slug are
available, look up the object by both fields. If the look up fails, 404
as before.

[0] https://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References
",jdufresne,None,2014-09-13T01:31:31Z,2016-03-13T23:04:00Z
3215,Fixed #23483 -- Prevented ImproperlyConfigured with dotted app names,"Made sure the app labels stay unique for the AppConfigStubs, so migrations wouldn't fail if two dotted app names has the same last part (e.g. django.contrib.auth and vendor.auth)
",szilveszter,None,2014-09-12T20:16:58Z,2014-09-12T21:00:06Z
3214,Fixed #23474 - Schema migrations can inadvertently destroy data,"My usage of `get_migration_by_prefix` looks a bit funky, I'm not sure if there's a better way.

I haven't run the tests, or written any new tests yet.
",valtron,None,2014-09-11T22:37:45Z,2014-09-15T19:05:47Z
3213,Added link to LogRecord attributes in logging.txt,,gabejackson,None,2014-09-11T19:38:58Z,2014-09-11T19:42:56Z
3212,Added LogRecord attributes reference to logging.txt,,gabejackson,None,2014-09-11T10:08:22Z,2014-09-11T19:39:21Z
3211,Correct grammar,,mbertheau,None,2014-09-10T13:54:47Z,2014-09-10T14:34:25Z
3210,Fixed an instance of 'an' before a word beginning with a consonant.,,colons,None,2014-09-10T08:46:06Z,2014-09-10T11:17:48Z
3209,Fixed #23460 -- Allow a literal `%s` to be passed through extra select,"- [x] Tests
- [x] Docs
- [x] Changelog
",mattrobenolt,None,2014-09-10T07:24:58Z,2014-09-26T17:02:51Z
3208,Note re migrations importing custom fields,"See https://groups.google.com/forum/#!topic/django-developers/x7YSPAakX0Y
",gregplaysguitar,None,2014-09-09T22:54:01Z,2014-09-09T23:06:43Z
3207,Fixed #23452 -- Do not create migration on empty foo_together model option,"Ticket: https://code.djangoproject.com/ticket/23452
",MarkusH,None,2014-09-09T21:41:16Z,2014-09-10T11:59:02Z
3206,Fixed #23403 -- Fixed crash in contrib.sitemaps if lastmod returned a date rather than datetime.,,timgraham,None,2014-09-09T17:36:55Z,2014-09-12T00:00:57Z
3205,Fixed #23398 -- Added helpful error message when runserver is accessed via HTTPS,,timgraham,None,2014-09-09T15:34:03Z,2014-09-18T18:57:28Z
3204,Fixed missing trailing parenthesis in docs/releases/1.7.txt,,zyegfryed,None,2014-09-09T14:00:07Z,2014-09-09T14:05:43Z
3203,Fixed #11775 -- Made ABSOLUTE_URL_OVERRIDES work with models that don't define get_absolute_url(),"https://code.djangoproject.com/ticket/11775
",timgraham,None,2014-09-09T12:38:33Z,2014-09-09T15:12:39Z
3202,Fixed #23453 -- project_template sys.dont_write_bytecode = True,"https://code.djangoproject.com/ticket/23453
",collinanderson,None,2014-09-09T02:05:39Z,2015-01-15T01:21:11Z
3201,Fixed #23444 -- Prevented unnecessary ContentType object creation when using inlines,"ContentType object is mistakenly created for `through` model of M2M relation when it is used in inline.
",a1tus,None,2014-09-09T00:36:16Z,2014-10-20T21:51:25Z
3200,Update 1.7 release notes re: User.get_absolute_url,"`ABSOLUTE_URL_OVERRIDES` no longer works for the default auth.User model, as [explained here](http://stackoverflow.com/questions/25734384/accessing-user-get-absolute-url-in-django-1-7), and this should be reflected in the 1.7 release notes.

As a side note, a solution is proposed here: https://code.djangoproject.com/ticket/11775

I would think that this warrants a newly documented backwards incompatible change in 1.7, but figured would hold off on that to see what people have to say about this first.
",danxshap,None,2014-09-09T00:09:48Z,2014-09-09T15:36:20Z
3199,Fixed #23399 -- Optimized django.utils.http.int_to_bas36(),"Thanks liminspace for the patch and Keryn Knight for benchmarking.
",timgraham,None,2014-09-08T23:46:23Z,2014-09-09T11:23:04Z
3198,Fixed #23451 -- Fixed typo in _get_foreign_key,"Fixed problem in `django.forms.models._get_foreign_key`. Who tries to throw ValueError, but passes badly string with not enough specifiers. So, instead it threw ValueError with cryptic message.

https://code.djangoproject.com/ticket/23451
",petraszd,None,2014-09-08T20:04:23Z,2014-09-08T21:23:10Z
3197,Fixed broken test from da160d440f,,MarkusH,None,2014-09-08T20:03:06Z,2014-09-09T11:24:39Z
3196,Fixed #23338 -- Added warning when unique=True on ForeigKey,"Added a warning when unique is set to True on a ForeignKey, telling
the user to replace it with a OneToOneField and remove unique=True.
",JoLinden,None,2014-09-08T17:49:09Z,2014-09-26T20:46:47Z
3195,Adding the ISO8601 format to the utils.format class.,"This will allow django_filters and django_rest_framework to properly filter by iso 8601 formatted date time strings. Currently those two projects pull in the ISO_INPUT_FORMATS dictionary from django.utils.format to determine if a string passed in is formatted as a date time. Currently all ISO8601 dates passed into the rest framework are not correctly filtered. This change addresses that by allowing them to be parsed and filtered correctly.
",jaegerpicker,None,2014-09-08T02:08:29Z,2014-09-25T14:01:14Z
3194,Fixed #23418 -- Fail when migration deconstruct produces invalid import,"Ticket: https://code.djangoproject.com/ticket/23418
",MarkusH,None,2014-09-08T01:03:06Z,2014-09-09T11:24:51Z
3193,Fixed #23415 -- Add fields for unmanaged and proxy model migrations,"Ticket: https://code.djangoproject.com/ticket/23415
",MarkusH,None,2014-09-08T00:27:59Z,2014-09-25T16:38:25Z
3192,Fixed #23196 -- Don't translate empty string as gettext metadata,"Returns empty value of corresponding type in case of empty string.
",yrik,None,2014-09-07T12:28:29Z,2014-09-21T15:12:02Z
3191,Fixed typo in docs/howto/custom-lookups.txt.,,zyegfryed,None,2014-09-07T09:29:30Z,2014-09-07T10:44:59Z
3190,Fixed #23434 -- Coerce Oracle bool params to int,"Oracle boolean query parameters are coerced to the strings ""1"" and ""0"" rather than the ints 1 and 0. This causes issues when trying to write a query like:

```
cursor.execute(""SELECT %s as bool_value ..."", True)
```

These kinds of queries can be generated with #2496 , and prevent result converters from operating on the correct type. By changing the parameters to integers, we get the appropriate type back from the database (a number), and the converters correctly change that value to the appropriate bool.
",jarshwah,None,2014-09-07T02:30:57Z,2014-09-08T14:12:59Z
3189,Fixed #23305 -- Added documentation item,"Warned against importing models in **init**.py

This PR addresses this Trac ticket: https://code.djangoproject.com/ticket/23305

Although this doc modification might not be a perfect fit in applications.txt, it seemed better than other alternatives.

I tested this locally, which generated this html when doing a `make html`:

```
<div class=""admonition warning"">
<p class=""first admonition-title"">Warning</p>
<p class=""last"">Additionally, avoid importing models in __init__.py; doing so leads to
inconsistent behavior.</p>
</div>
```
",brycecaine,None,2014-09-06T23:06:51Z,2014-09-08T14:07:09Z
3188,Fixed #23443 -- Corrected erroneous FieldError message,,tchaumeny,None,2014-09-06T22:28:53Z,2014-09-26T18:40:53Z
3187,Fixed #23307 -- Edited max_num section of formsets doccumentation,"Clarified the way max_num limits the output of formsets.
Added two new example snippets to show different scenarios where max_num affects the output of formsets.
",Octowl,None,2014-09-06T21:37:52Z,2014-09-08T17:24:25Z
3186,create a new shortcut to get object or return None value,"I use django in my work and I love it.

And today I do my first contribution for django. It's very simple but enough useful.

I use this function in a file in my project, mainly when I work with forms. But I think that will be best be in shortcuts file django.

Thanks
",vsanasc,None,2014-09-06T20:50:34Z,2014-09-07T01:58:09Z
3185,Closed #23365 -- Makemigrations allows timezone-aware datetimes,"When a user is adding a new, non-nullable datetime field to their model, 
they're now able to use django util's timezone module to supply a 
timezone-aware value. The prompt also shows an example using the 
preferred timezone.now() instead of datetime's naive now().
",rmutter,None,2014-09-06T20:46:47Z,2014-09-29T21:57:28Z
3184,"Ticket #23281 - Extended ""concrete"" reference",,oromero,None,2014-09-06T19:24:56Z,2014-09-08T12:46:40Z
3183,Fixed #23441: Maximum recursion depth exceeded in templates,"When using custom `inclusion_tag` with recursion in templates
and `django.template.loaders.cached.Loader` for template loader.
",vstoykov,None,2014-09-06T18:12:26Z,2015-04-01T16:37:47Z
3182,"Refs #23430 -- gunicorn wants a module, not file","my bad on the original patch
",collinanderson,None,2014-09-06T15:14:11Z,2015-01-15T01:21:10Z
3181,fixed the tix #23376 doc inconsistency of the Storage API,,masterfung,None,2014-09-06T13:40:59Z,2014-09-08T16:59:09Z
3180,fix #23436 Use abspath for BASE_DIR in settings.py,"cf https://code.djangoproject.com/ticket/23436, not using abspath can open you up to weirdness depending on how settings.py is imported...
",hjwp,None,2014-09-06T10:02:31Z,2014-09-06T11:08:49Z
3179,Fixed #23431 -- Allowed inline and hidden references to admin fields.,"This fixes a regression introduced by the 53ff096982 security fix.

Thanks to @a1tus for the report.

refs <a target=""_new"" href=""https://code.djangoproject.com/ticket/23329"">#23329</a>.
",charettes,None,2014-09-06T01:06:15Z,2014-09-08T19:50:43Z
3178,Fixed #22161 - Extended send() documentation to mention empty recipients case,"... will not raise exception
",oromero,None,2014-09-06T00:34:35Z,2014-09-06T00:40:41Z
3177,Fix for #22951,"This is a fix for [Issue #22951](https://code.djangoproject.com/ticket/22951).

The code checks whether the object being passed to `deep_deconstruct` is a `type`. This change will account for types and classes that have `deconstruct`, but are not instantiated, during the migration serialization process.

A single basic test has been added.
",jambonrose,None,2014-09-06T00:13:58Z,2014-09-08T17:40:47Z
3176,Fixed #23350 -- changed mod_wsgi auth example to use less memory,"The docs as written use two copies of the code. This changes the docs to use
one copy of the code in the main interpreter.

See https://code.djangoproject.com/ticket/23350
",x110dc,None,2014-09-06T00:10:45Z,2014-09-09T13:32:53Z
3175,Fixed #23340 -- naturaltime documentation doesn't match behavior,"https://code.djangoproject.com/ticket/23340
",collinanderson,None,2014-09-05T23:58:07Z,2015-01-15T01:21:09Z
3174,simplified gunicorn deployment docs,"https://code.djangoproject.com/ticket/23430
",collinanderson,None,2014-09-05T23:44:44Z,2015-01-15T01:21:08Z
3173,Fixed #23380 for transient failure of admin list filter test,"See discussion on Trac here: https://code.djangoproject.com/ticket/23380

Unable to duplicate the Jenkins failure, but visual inspection says this should work.
",baylee,None,2014-09-05T23:25:25Z,2014-09-06T00:09:19Z
3172,Close #22882. Fixed `UnicodeDecodeError`s in commands.,,fcurella,None,2014-09-05T22:46:53Z,2014-09-06T14:09:25Z
3171,Prevent possible recursion limit issue in migration planning,"This switches out the recursive depth first search for stack based approach.

Additionally adds test that replicates original potential problem.
",bwreilly,None,2014-09-05T22:35:25Z,2014-09-05T22:37:16Z
3170,Close #23429. Coerce `WSGIRequestHandler` log messages to `str`,,fcurella,None,2014-09-05T22:08:58Z,2014-09-09T15:39:00Z
3169,Prevent possible recursion limit issue in migration planning,"This switches out the recursive depth first search for stack based approach.

Additionally adds test that replicates original potential problem.
",bwreilly,None,2014-09-05T21:29:57Z,2014-09-05T21:49:29Z
3168,Fixed #23318 -- Passed PostgreSQL database options to dbshell,,fcurella,None,2014-09-05T21:14:35Z,2014-12-24T23:57:52Z
3167,Fixed #23398 -- Added helpful error message when runserver is accessed via HTTPS,,fcurella,None,2014-09-05T20:30:08Z,2014-09-09T15:46:56Z
3166,Add note to 1.7 release docs to account for db creation prior to running runserver,"Add note to miscellaneous section of 1.7 release docs to account for requirement for database creation prior to running runserver command.

ticket no: 23427 https://code.djangoproject.com/ticket/23427
",patrickbeeson,None,2014-09-05T20:22:43Z,2014-09-06T00:00:20Z
3165,Typo,"Sorry, again :)
",zyegfryed,None,2014-09-05T17:06:31Z,2014-09-05T18:31:39Z
3164,Fixed punctation,"Added missing periods.
",zyegfryed,None,2014-09-05T16:16:40Z,2014-09-05T17:12:16Z
3163,Fixed imports in `Sitemap for static views` example,"The imports shown in the sitemaps documentation for hypothetical `sitemaps.py` and `urls.py` files would lead to import errors if copy/pasted.
",jsma,None,2014-09-05T01:07:40Z,2014-09-05T11:10:36Z
3162,Ticket 23417 -- Added Chinese locale/translations,,timgraham,None,2014-09-04T17:35:20Z,2014-09-10T13:11:54Z
3161,Fixed #23416 -- Make sure DatabaseCreation respects checks.,"Migrations respected `Field.db_parameters()['check']`, but DatabaseCreation was still using just `Field.db_type()`.

[Ticket](https://code.djangoproject.com/ticket/23416)

@bmispelon @andrewgodwin

I believe this fixes the problem. The alternative is to attempt to rework the changes made in d22b291890c1736a40c0ad97448c7318df2eebb2 so as to maintain backwards compatibility that `db_type()` returns the check constraint, but it comes separately from `db_parameters()`. Given `db_type()` is public API I don't see a way to fix this.

This should be backported to 1.7.X and included in a 1.7.1 release, probably quite soon as it influences `CREATE TABLE` statements for any field using `CHECK` if not using migrations.
",mjtamlyn,None,2014-09-04T15:37:09Z,2014-09-06T18:04:34Z
3160,Typo,"Indicate me whether I need to create a ticket on the Django bugtracker to reference that small issue.
",zyegfryed,None,2014-09-04T15:09:20Z,2014-09-04T17:35:10Z
3159,Fixed documentation links to Query Expression API,"Those links are currently broken in the documentation and lead to a 404 page.

See https://docs.djangoproject.com/en/1.7/ref/models/lookups/ and look for the _Query Expression API_ links.
",tchaumeny,None,2014-09-04T13:40:04Z,2014-09-12T07:47:52Z
3158,Limited lines to 119 characters in django/,"refs #23395.
",timgraham,None,2014-09-04T13:23:05Z,2014-09-05T13:26:31Z
3157,Fixed #23409 -- Extract PasswordResetForm.get_users method for easier password-reset policy customization.,,carljm,None,2014-09-03T17:52:06Z,2014-09-03T18:31:46Z
3156,correct a Chinese translation and add some translations,"The translation ""注意他们都是大区分大小写的"" is error!
add translation of ""Password reset” and ""Password change""
",twz915,None,2014-09-03T12:12:52Z,2014-09-03T15:48:10Z
3155,update Chinese translation error and optimize,"The translation ""注意他们都是大区分大小写的"" is error!
add translation of ""Password reset” and ""Password change""
",twz915,None,2014-09-03T12:04:02Z,2014-09-03T12:07:18Z
3154,Fixed #23396 -- Ensured ValueQuerySets are not checked by check_related_objects,"Renamed method for checking compatibility

Renamed method from check_query_object_type to is_compatible_query_object_type
to avoid conflict with Query.check_query_object_type. The notation is
more appropriate given the nature of the method returning a Boolean.

Added is_compatible_query_object_type to basic.tests.ManagerTest.QUERYSET_PROXY_METHODS

Ensured QuerySet.is_compatible_query_object_type isn't copied to Manager

Removed ticket reference, refactored logic in QuerySet.is_compatible_query_object_type

Removed intermediate variable from test

Added ticket reference in test comment

Fixed Test
",gabejackson,None,2014-09-03T09:39:24Z,2014-10-21T14:40:16Z
3153,Fixed #23359 -- Added showmigrations command to list migrations and show migration plan,"https://code.djangoproject.com/ticket/23359

This pull request moves the `--list` argument from the `migrate` command to a new `showmigrations` command and additionally adds a `plan` option on that one.

The PR can be used instead of #3116 but it needs some doc update (deprecated in 1.8 as well as mentioning in `docs/ref/django-admin.txt`)
",MarkusH,None,2014-09-03T08:56:47Z,2015-01-01T14:46:55Z
3152,Fix indefinite article,"English is a amazing language
",frewsxcv,None,2014-09-03T03:27:40Z,2014-09-03T15:49:47Z
3151,Fixed #23397 -- Strip whitespace from base64 during chunking.,"This insures the actual base64 content has a length a multiple of 4.
Also add a test case for the failure.
",jhobbs,None,2014-09-02T17:32:47Z,2014-09-15T11:46:40Z
3150,Fixed #23396 - Ensure ValueQuerySets are not checked by check_related_objects,"See https://code.djangoproject.com/ticket/23396#ticket
",gabejackson,None,2014-09-02T13:32:37Z,2014-09-03T09:40:32Z
3149,Fixed #22918 -- migrations.operations.SeparateDatabaseAndState crashes (...and has no tests),"An update of the pull request https://github.com/django/django/pull/3146

Fixes this issue: https://code.djangoproject.com/ticket/22918

Fixes both the lack of tests, and the broken `SeparateDatabaseAndState` implementation.
I'd imagine that this would also require #a7ac5f018726694e3a79180ef97f2813c715fac0 and #a8521a2c228bd9e981dc8a2bea4e26f4544a52a7 to be reverted.
",etianen,None,2014-09-02T08:28:41Z,2014-09-02T12:11:58Z
3148,fix typo in the documentation,"Update signals.txt

Fix missing import in code example
",mr-africa,None,2014-09-02T06:00:10Z,2014-09-02T12:14:57Z
3147,Fixed ping_google command to use argsparse,"Fixed ping_google command to use new argsparse model and be retrocompatible with old syntax
",olivergs,None,2014-09-01T10:38:33Z,2014-09-02T09:40:14Z
3146,Fixing bug in migrations.SeparateDatabaseAndState,"The `migrations.SeparateDatabaseAndState` class currently appears to not work, which makes an ironic sort of sense, given https://code.djangoproject.com/ticket/22918

This patch fixes what seems to be an obvious error in the code, allowing the migration to actually run. Before this patch, attempting to use `migrations.SeparateDatabaseAndState` in a migration failed with the following traceback:

```
Creating test database for alias 'default'...
Traceback (most recent call last):
  File ""./manage.py"", line 10, in <module>
    execute_from_command_line(sys.argv)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/__init__.py"", line 385, in execute_from_command_line
    utility.execute()
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/__init__.py"", line 377, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/commands/test.py"", line 50, in run_from_argv
    super(Command, self).run_from_argv(argv)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/base.py"", line 288, in run_from_argv
    self.execute(*args, **options.__dict__)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/commands/test.py"", line 71, in execute
    super(Command, self).execute(*args, **options)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/base.py"", line 338, in execute
    output = self.handle(*args, **options)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/commands/test.py"", line 88, in handle
    failures = test_runner.run_tests(test_labels)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/test/runner.py"", line 147, in run_tests
    old_config = self.setup_databases()
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/test/runner.py"", line 109, in setup_databases
    return setup_databases(self.verbosity, self.interactive, **kwargs)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/test/runner.py"", line 299, in setup_databases
    serialize=connection.settings_dict.get(""TEST_SERIALIZE"", True),
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/db/backends/creation.py"", line 374, in create_test_db
    test_flush=True,
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/__init__.py"", line 115, in call_command
    return klass.execute(*args, **defaults)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/base.py"", line 338, in execute
    output = self.handle(*args, **options)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/core/management/commands/migrate.py"", line 160, in handle
    executor.migrate(targets, plan, fake=options.get(""fake"", False))
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/db/migrations/executor.py"", line 63, in migrate
    self.apply_migration(migration, fake=fake)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/db/migrations/executor.py"", line 97, in apply_migration
    migration.apply(project_state, schema_editor)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/db/migrations/migration.py"", line 107, in apply
    operation.database_forwards(self.app_label, schema_editor, project_state, new_state)
  File ""/Users/dave/Workspace/crfs_products/venv/src/django/django/db/migrations/operations/special.py"", line 27, in database_forwards
    database_operation.database_forwards(self, app_label, schema_editor, from_state, to_state)
TypeError: database_forwards() takes 5 positional arguments but 6 were given
```

This patch doesn't fix the related issue of no unit tests for `migrations.SeparateDatabaseAndState` (https://code.djangoproject.com/ticket/22918). I suspect that writing unit tests for DB migrations is rather specialised, so I'm assuming that the author of the new (and generally excellent) Django 1.7 migrations will handle this better than I could.
",etianen,None,2014-09-01T09:36:45Z,2014-09-02T08:28:42Z
3145,Ticket #22990 sensitive post,,ziima,None,2014-09-01T09:28:23Z,2015-04-16T17:13:29Z
3144,Fixed #22920 -- Avoid masking some exceptions.,"If loading an application trigger an ImportError, the details of that
error were lost in some cases. Thanks Ben Davis for the report.
",aaugustin,None,2014-08-31T16:55:24Z,2014-09-08T21:18:19Z
3143,Removed sentence from docs about migrate prompting to add a superuser,,orokusaki,None,2014-08-31T16:25:40Z,2014-08-31T16:33:00Z
3142,Fixed #23336 -- Added support to urlize for arbitrary link attributes.,"Added support to urlize (django.utils.html.urlize) for arbitrary link
attributes. urlize can now accept a dictionary of attribute-value pairs
which will be converted into attribute-pairs within each link
created by urlize.
",logston,None,2014-08-30T21:17:25Z,2014-09-08T12:52:00Z
3141,Fixed #23388 -- Made django.utils.timezone.override usable as a decorator,,tchaumeny,None,2014-08-30T18:07:42Z,2014-09-12T07:48:02Z
3140,Documented translation.override as a decorator.,,charettes,None,2014-08-29T21:25:02Z,2014-08-29T23:51:51Z
3139,Update Daniele Procida's bio,,evildmp,None,2014-08-29T15:38:20Z,2014-08-29T16:22:43Z
3138,Fixed #23384 -- Allowed overriding part of a dictionary-type setting,"This change is needed for upcoming changes where settings might be
grouped in a parent dictionary.
",claudep,None,2014-08-29T12:55:32Z,2014-09-02T17:46:44Z
3137,Fixed #23370 -- defer() fails with inherited models,"Related ticket: https://code.djangoproject.com/ticket/23370
",dfunckt,None,2014-08-29T11:17:05Z,2014-08-30T11:16:20Z
3136,Fixed #23055 -- Made generic admin filter obey ModelAdmin queryset.,"Thanks to Trac user synasius and Ola Sitarska for helping in identifying
the issue and helping with the test case.
",ramiro,None,2014-08-28T20:31:23Z,2020-06-25T13:13:53Z
3135,Fix override decorator,"See https://code.djangoproject.com/ticket/23381#ticket
",tchaumeny,None,2014-08-28T20:29:52Z,2014-09-12T07:48:09Z
3134,Document correct kwarg for post_migrate signal,"@aaugustin changed the kwarg for the signal in https://github.com/django/django/commit/d562527a160f420c6af0d2736ad4e6c87b0d2ef1, and presumably overlooked to change the docs in this spot.
",maikhoepfel,None,2014-08-28T19:15:49Z,2014-08-28T19:32:23Z
3133,Fixed #23379 -- Corrected a referencing issue in sql_create.,"Thanks to Trac alias flakfizer for the report.
",charettes,None,2014-08-28T18:19:33Z,2014-08-28T19:18:57Z
3132,Update django.po,"Short translations of months Jan. and Feb. were wrong.  Jan. should be Қаң. Feb. should be Ақп.
",bayalievu,None,2014-08-28T09:55:08Z,2014-08-28T12:23:38Z
3131,Update django.po,"Short translations of months Jan. and Feb. were wrong.  Jan. should be Қаң. Feb. should be Ақп.
",bayalievu,None,2014-08-28T09:54:26Z,2014-08-28T09:54:49Z
3130,Fixed #23375 -- Added missing security issues to the archive.,"Also adjusted the pre-release process to prevent future omissions.
",charettes,None,2014-08-28T03:05:10Z,2014-08-28T14:49:27Z
3129,Fixed #23349 -- Improved `RunPython` documentation.,"Documented that the `apps` parameter is not the same as `orm` in South
Simplified language for `RunPython` as recommended in another pull request.
",Naddiseo,None,2014-08-27T21:10:18Z,2014-08-27T21:27:32Z
3128,Fixed #17101 -- Integrated django-secure and added check --deploy option,"For background info, please see the [django-developers thread](https://groups.google.com/d/topic/django-developers/t8ybImtdnpM/discussion).
",timgraham,None,2014-08-27T19:33:40Z,2014-09-12T19:08:44Z
3127,Improve `RunPython` documentation. (#23349),,Naddiseo,None,2014-08-27T16:37:50Z,2014-08-27T21:11:15Z
3126,Fixed 23371 -- Changed en_GB first day of the week to Monday.,"There is occasional debate over this, but the normal week in the UK
runs Monday to Sunday.

For evidence - here's the calendar of the UK parliament:
http://services.parliament.uk/calendar/

And a couple of support threads suggesting Americans change their
locale to en_GB on Microsoft and Apple in order to get their calendars
to start the week on Monday:

http://answers.microsoft.com/en-us/winphone/forum/wp8-wpemail/how-do-i-change-the-first-day-of-the-week-in/37c27997-1a18-4e51-91b4-fe2b3cd26496
http://forums.macrumors.com/showthread.php?t=1460577
",duncanparkes,None,2014-08-27T15:30:55Z,2014-09-01T12:41:15Z
3125,Fixed comments in en_GB formats.py file.,"Changed comments in en_GB formats file replacing 'pm' with 'p.m.' to
match what is actually output.
",duncanparkes,None,2014-08-27T14:40:16Z,2014-09-02T17:37:40Z
3124,Fixed url of Django git repository.,"The url for cloning Django in the instructions for running the unit tests
had a colon where it should have had a /.
",duncanparkes,None,2014-08-26T23:53:04Z,2014-08-27T08:22:43Z
3123,Fixed #23368 -- Overhauled the Welsh formats.py file.,"The only debatable thing here is setting FIRST_DAY_OF_WEEK to 1.
The only examples of calendars I can find in Welsh start on Monday,
for example, the calendar on S4C (the only all Welsh TV station).

http://www.s4c.co.uk/clic/c_clicschedule.shtml

Monday is also the first day of the week in modern en_GB usage,
though the formats.py file there doesn't yet reflect this.

For issue #23368.
",duncanparkes,None,2014-08-26T23:24:42Z,2014-09-10T00:49:51Z
3122,Removed comment references to kwargs that don't exist,"The comment for the `__init__` function contained references to old kwargs which are no longer present, assigned, or checked for. This pull request simply updates that comment.
",danielsamuels,None,2014-08-26T19:31:33Z,2014-08-29T13:12:55Z
3121,Fixed #4444 - Made runserver suppress 'broken pipe' errors,"I have posted about this pull request on the django-developers mailing list at https://groups.google.com/forum/#!topic/django-developers/_oC_PAxxnQI . I did this because there is a very old existing wontfix ticket ([#4444](https://code.djangoproject.com/ticket/4444)) on this topic and so am hopefully following the contribution guidelines.

Ticket #4444 was opened in May 2007, and marked wontfix in September 2007 saying ""The best we could is to have a more explicit error message."" - hopefully this might count as such an error message :smile:

This pull request builds upon a previous patch posted to the django-developers list and outputs ""Broken pipe"" instead of a traceback for such an error. I get these frequently (e.g. hit refresh before your previous page has finished loading to sometimes get it).

I hope this can be considered for inclusion, as I think it tidies up a common issue with runserver output that will especially confuse people new to Django. Do let me know if I've gone about fixing it in the wrong way, or if I should do something differently.
",dracos,None,2014-08-26T15:06:05Z,2014-11-28T16:04:59Z
3120,Document that we should also offer sha256 checksums for packages,"SHA1 is rapidly being deprecated for most applications, and Django should offer SHA256 signatures.
",alex,None,2014-08-26T15:02:58Z,2014-09-02T19:01:36Z
3119,fixed distinct() not implemented,"I'm using queryset.distinct()
no Exception and don't work!!!

So fixed it!
",gshmu,None,2014-08-26T08:57:03Z,2014-09-02T16:02:23Z
3118,Fixed #21775 -- Allowed customization of Oracle tablespace parameters,,jarshwah,None,2014-08-26T05:57:12Z,2014-09-17T13:57:28Z
3117,Reverse MySQL type SHORT to a SmallIntegerField.,"Fixes #23357
",jdufresne,None,2014-08-26T05:25:41Z,2016-03-13T23:04:08Z
3116,Fixed #23359 -- Add ability to show migration plan,"https://code.djangoproject.com/ticket/23359
",MarkusH,None,2014-08-24T23:47:50Z,2015-01-05T20:52:49Z
3115,Alphabetized AUTHORS,,halit,None,2014-08-24T17:43:24Z,2014-08-25T01:21:49Z
3114,[Soc2014] Official meta API,,PirosB3,None,2014-08-24T15:04:36Z,2015-01-07T00:59:49Z
3113,Fix a translation mistake,"`Şifre` is a wrong translation of `Password`. This should be ""Parola""
",fatiherikli,None,2014-08-24T12:01:32Z,2014-08-24T12:47:55Z
3112,"makemessages -l takes a locale name, not a language code.","Hi.  I'm new to translation in Django.  I read the docs for makemessage and had a lot of trouble getting translation on my web site to work properly.  It's only after a lot of messing around that I realised that makemessages should be passed a locale name not (as the docs say) a language code.

I added Indonesian as an example of where the locale code doesn't include a country code.  

I think no trac ticket needed, as there is no functionality change, and use of language code rather than locale name is a typo.
",CapnKernel,None,2014-08-24T03:08:44Z,2014-08-27T08:14:28Z
3111,Fixed #23355 -- Updated admin jQuery to 1.11.1.,,timgraham,None,2014-08-23T19:43:39Z,2014-08-24T19:27:56Z
3110,Added release preparation step about dates in notes.,,ramiro,None,2014-08-23T17:11:51Z,2014-08-23T23:14:38Z
3109,Removed some more hardcoded backends in GIS tests,,claudep,None,2014-08-23T13:57:58Z,2014-08-26T18:11:04Z
3108,Fixed #2750 -- Documented ManyToManyField ignoring default,,jarshwah,None,2014-08-23T10:24:32Z,2014-08-24T00:36:04Z
3107,"[1.7.x] Fixed #23352 -- Added tests for MigrationGraph.{forwards,backwards}_plan","Backports of eaf4ed0 from master
",rsalmaso,None,2014-08-23T09:46:12Z,2014-08-24T06:22:57Z
3106,"Fixed #23352 -- Added tests for MigrationGraph.{forwards,backwards}_plan","Test for ValueError raised by MigrationGraph.forwards_plan and
MigrationGraph.backwards_plan.
",rsalmaso,None,2014-08-23T09:45:57Z,2014-08-24T06:22:50Z
3105,Fixed #23075 -- Added documentation on novalidate attribute and made it default for admin,"https://code.djangoproject.com/ticket/23075
",mxsasha,None,2014-08-23T08:30:48Z,2014-08-26T12:50:33Z
3104,"Fixed #23346: Look up method impls on the real object, not resultclasses","https://code.djangoproject.com/ticket/23346

This makes the code easier to understand, in my opinion. I couldn't figure out why methods were being pulled off of resultclasses when the real object is available. This patch simplifies the situation and gets rid of the `__dispatch` table completely.

Co-Authored-By: Rocky Meza rmeza@fusionbox.com
",gavinwahl,None,2014-08-22T16:34:34Z,2014-12-26T16:31:15Z
3103,Fixed #13749 - Link from admin-site to site,"Related to ticket https://code.djangoproject.com/ticket/13749
",areski,None,2014-08-22T14:32:12Z,2014-08-27T12:38:56Z
3102,Fixed #23342 Clarify warning about _time_ not _datetime_,"Because at least 3 of us just misread it! (Thanks to apollo13 for
suggested wording)
",doismellburning,None,2014-08-22T10:27:10Z,2014-08-22T15:39:58Z
3101,[1.7.x] Fixed #23341 -- Better stacktrace error for makemigrations,"Refs https://code.djangoproject.com/ticket/23341 and PR https://github.com/django/django/pull/3100
",rsalmaso,None,2014-08-22T08:13:20Z,2014-08-24T06:21:05Z
3100,Fixed #23341 -- Better stacktrace error for makemigrations,"Show the migration display name when references
nonexistent migration(s)

Refs https://code.djangoproject.com/ticket/23341
",rsalmaso,None,2014-08-22T08:13:10Z,2014-08-24T06:20:58Z
3099,Fix urlsafe_base64_decode on python3,"Make `urlsafe_base64_encode` and `urlsafe_base64_decode` round-trip on python3 as well as python2.
",Ian-Foote,None,2014-08-22T08:03:29Z,2014-08-26T07:41:20Z
3098,Proposed partial fix for issue #19820,"This is a partial fix for issue #19820. It provides the users a better error message by giving: the model being deserialized; the model's pk, if any; and what the current field value is.
",Naddiseo,None,2014-08-21T21:20:53Z,2014-09-15T18:01:43Z
3097,Fixed #23167 - Add __repr__ to BaseForm,"related to https://code.djangoproject.com/ticket/23167
",areski,None,2014-08-21T17:09:38Z,2014-08-22T19:59:58Z
3096,Fixed #23329 -- Allowed to_field references from non-registered parent models.,"Thanks to Trac alias Markush2010 for the detailed report.
",charettes,None,2014-08-21T15:58:03Z,2014-09-06T00:23:45Z
3095,Fixed #23327 - Add 'zero' syntax to migrate help message,"related to https://code.djangoproject.com/ticket/23327
",areski,None,2014-08-21T12:42:02Z,2014-08-22T18:05:18Z
3094,RedirectResponse option to check the host of the url,"Proposed addition.

When redirecting it's often useful to redirect to the 'next' url which is passed from the browser. This variable might be altered before it gets back to us and so we want to check that the host is a known local host and approved. Because we don't want this to be checked all the time, it's optional in the proposed code.
",doctormo,None,2014-08-20T21:14:09Z,2014-10-27T12:48:22Z
3093,Fixed #23322 -- Use resolved swappable model for dependency resolution during makemigrations,"Patch for https://code.djangoproject.com/ticket/23322
- [x] Patch
- [x] Tests
",MarkusH,None,2014-08-20T14:58:56Z,2014-08-20T21:25:56Z
3092,"Fixed #17707, #20734 -- Added examples to URL namespacing docs.","If you prefer reading rendered HTML, all edits are from this section to the bottom of the page.
http://techytim.com/django/17551/topics/http/urls.html#url-namespaces
",timgraham,None,2014-08-20T14:23:00Z,2014-08-26T18:36:38Z
3091,[1.7.x] Fixed #23302 -- Added --name/-n option to makemigrations command,"Refs https://code.djangoproject.com/ticket/23302
",rsalmaso,None,2014-08-20T06:51:37Z,2014-08-22T23:36:00Z
3090,Fixed #23302 -- Added --name/-n option to makemigrations command,"Add a --name option to makemigrations command
Refs https://code.djangoproject.com/ticket/23302
",rsalmaso,None,2014-08-20T06:50:53Z,2014-09-03T05:51:24Z
3089,Continued working on replacement of hardcoded backends in GIS tests,,claudep,None,2014-08-19T19:51:16Z,2014-08-23T13:55:06Z
3088,Refs #23323 -- Allow the use of translation.override as a decorator,"This PR allows the use of `translation.override` as a decorator, as suggested in https://code.djangoproject.com/ticket/16690#comment:2

Although a comment in this ticket suggests that it is not useful, I have experienced several cases where it is. For instance, I have some functions which are sending mail and I want those mails to be translated in some default language which is not the one of the user doing the action. Having the function decorated is better in terms of readability than a long `with` statement which introduces heavy indentation.

When turning `translation.override` into a `decorator`, I realized there was some duplicated code in Django doing exactly what a `ContextDecorator` (https://docs.python.org/3/library/contextlib.html#contextlib.ContextDecorator) is doing. The first commit backports a simple implementation of `ContextDecorator` and uses it where appropriate.
",tchaumeny,None,2014-08-19T17:06:02Z,2014-08-28T16:03:30Z
3087,Added validation of current_step in formtool wizard,"ManagementForm now validates the submitted current_step to prevent
errors due to malicious data.
",bluec0re,None,2014-08-19T16:26:52Z,2014-08-26T13:51:14Z
3086,NoReverseMatch not silenced.,,wsmith323,None,2014-08-19T15:05:13Z,2014-08-19T15:10:00Z
3085,Added sphinx extension to ease generation of ticket links.,,timgraham,None,2014-08-19T14:23:35Z,2014-08-20T18:39:21Z
3084,Fixed #23316 -- Supported 'datetime.time' in migrations.,"I found migrations does supports datetime.datime and datetime.date but not datetime.time. 
example:

```
class TestModel(models.Model):
    open_time = models.TimeField(default=datetime.time(11, 0))   # Error
```

So I create datetime.time support patch and attach here. (Github Pull Request)
",shlee322,None,2014-08-19T13:25:20Z,2014-09-23T06:58:10Z
3083,Fixed #21648 -- Deprecated is_admin_site option to auth.views.password_reset(),,timgraham,None,2014-08-18T14:41:03Z,2014-08-24T16:31:12Z
3082,Fixed Documentation - review code-block::python which force syntax highlighting,"code-block:: python it forces the syntax highlighting even if there are errors so we only need it when the auto-syntax highlighting doesn't work and we can't or don't want to fix the example
",areski,None,2014-08-18T14:32:09Z,2014-08-19T20:45:26Z
3081,Fixes #23309 -- Fix call_command to parse args correctly,"Refs https://code.djangoproject.com/ticket/23309 (and https://code.djangoproject.com/ticket/23306)
",rsalmaso,None,2014-08-17T22:41:46Z,2014-08-18T21:25:16Z
3080,Replaced HAS_SPATIAL_DB by testing database feature,"Refs #22632. This should be the base for using more database
features to exclude specific backends in GIS tests.
",claudep,None,2014-08-17T18:20:47Z,2014-08-19T16:13:11Z
3079,Refs #23306 -- Added django.core.management.exec_command,"Added a new way to call/execute commands to be able to use --name option
Refs https://code.djangoproject.com/ticket/23306
",rsalmaso,None,2014-08-17T16:18:44Z,2014-08-17T21:11:11Z
3078,Fixed #23313 -- representation of RawQuery with parameters passed as dict,"https://code.djangoproject.com/ticket/23313
",movEAX,None,2014-08-17T10:26:38Z,2014-08-29T11:23:15Z
3077,Update README.rst,,drewwalk4,None,2014-08-17T03:11:13Z,2014-08-18T12:37:26Z
3076,Fixed #23303 -- Add BEGIN and COMMIT statements to the output of sqlmigr...,"...ate.
",bmispelon,None,2014-08-16T15:23:00Z,2014-08-18T16:56:19Z
3075,Fixed #23298 -- Made makemessages actually ignore specified dirs on Wind...,"...ows.

This was detected by two failures in the i18n.test_extraction of our
test suite.

Refs #20422, refs #22336
",ramiro,None,2014-08-15T19:33:34Z,2020-06-25T13:13:56Z
3074,Documentation fixes on topics logging - add code-block and fix 3 spaces indentation,"There is no ticket related.
",areski,None,2014-08-15T18:01:33Z,2014-08-18T14:35:24Z
3073,Fixed #23296 - Fix RunPython code sample in Migration Operations,"Related to ticket https://code.djangoproject.com/ticket/23296
",areski,None,2014-08-15T17:29:51Z,2014-08-15T17:57:42Z
3072,Fixed #23295 -- Removed unnecessary fix_location_header requset.get_host() check,"https://code.djangoproject.com/ticket/23295
",collinanderson,None,2014-08-15T16:41:52Z,2015-01-15T01:21:08Z
3071,Documentation RunSQL - add example and emphasis that sqlparse is required,"There is no ticket opened for this change, let me know if we need one.

I found that example for RunSQL is very good to have specially as this is all quite new to Django
",areski,None,2014-08-15T14:45:32Z,2014-12-27T13:10:32Z
3070,Fixed #23294 -- Add related_name to existing migrations.,"https://code.djangoproject.com/ticket/23294

Refs #23288

Thanks to Florian Apolloner for the review.
",collinanderson,None,2014-08-15T14:08:21Z,2015-01-15T01:21:07Z
3069,Fixed #23278 - Add documentation for django.db.backends.schema logger,"related to https://code.djangoproject.com/ticket/23278
",areski,None,2014-08-15T12:19:37Z,2014-08-15T18:06:30Z
3068,Documentation fix - link to BinaryField class,,areski,None,2014-08-15T11:06:34Z,2014-08-15T11:19:01Z
3067,Fixed #23270 -- Added selected reverse relations to the only fields,,vladimiroff,None,2014-08-14T17:19:50Z,2014-12-18T07:58:56Z
3066,Update api.txt,"Fix a grammar error.
",azalea,None,2014-08-14T16:00:19Z,2014-08-14T16:21:06Z
3065,Fixed #21579 -- Made LocaleMiddleware respect script prefix.,"Thanks buettgenbach at datacollect.com for the report and patch.
",timgraham,None,2014-08-14T13:38:06Z,2014-08-14T14:27:36Z
3064,Fix #23291 -- Don't add Unicode varname/value to environment.,"Windows doesn't like that and it's causes 114 failures in the
admin_scripts tests with Python 2.x.
",ramiro,None,2014-08-14T11:19:50Z,2014-08-14T15:37:29Z
3063,Fixed #20133 - Admin: Add deletion summary (credits to jonash),"ticket https://code.djangoproject.com/ticket/20133
",areski,None,2014-08-14T11:18:36Z,2014-08-14T17:57:13Z
3062,Fixed #23283 - defaults for remaining BooleanField in the docs,,olasitarska,None,2014-08-14T06:48:13Z,2014-08-14T07:31:33Z
3061,Fixed #23283 - default=False for BooleanField in the documentation,,olasitarska,None,2014-08-13T20:29:36Z,2014-08-13T22:24:58Z
3060,Fixed #21132 -- Removed the useless app_name argument to AdminSite.,"Thanks MarkusH for the report.
",timgraham,None,2014-08-13T19:24:38Z,2014-08-14T13:07:07Z
3059,Refs #23276 -- Added missing url() in some places.,"(is URLconf really the word we use?)
",collinanderson,None,2014-08-13T18:09:59Z,2015-01-15T01:21:06Z
3058,Improve documentation on deconstruct() method - add listing for tuple of three things,"This is not related to any ticket as it might be straightforward enough.

Note, the layout and readability of the deconstruct is much better with this patch.
",areski,None,2014-08-13T16:02:48Z,2014-08-13T16:41:50Z
3057,Fixed occasional selenium test failure on Jenkins with Chrome 36.,"Previously find_element_by_id('id_password') on the next line failed with
NoSuchElementException and selenium.page_source was
<html xmlns=""http://www.w3.org/1999/xhtml""><head></head><body></body></html>.

Possibly related: https://code.google.com/p/selenium/issues/detail?id=1969.
",timgraham,None,2014-08-13T15:34:42Z,2014-08-13T23:51:21Z
3056,Fixed #23224 - Document EmailValidator domain whitelist parameter,,areski,None,2014-08-13T15:00:18Z,2014-08-14T17:30:26Z
3055,Fixed #23224 - Document EmailValidator domain whitelist parameter,"related to https://code.djangoproject.com/ticket/23224
",areski,None,2014-08-13T14:20:25Z,2014-08-13T15:00:42Z
3054,Fixed 20368 -- Make TECHNICAL_500 more resilient.,"This limits large variables and non-utf-8 in the TECHNICAL_500 output.
",wdoekes,None,2014-08-13T13:36:07Z,2014-08-14T08:47:52Z
3053,Refactoring from #20133 on deletion confirmation Admin (credits to jonash),"This is the refactoring part that has been removed from the ticket #20133 
https://code.djangoproject.com/ticket/20133
",areski,None,2014-08-13T13:25:52Z,2014-08-13T14:29:31Z
3052,Fixed #20133 - Admin: Add deletion summary (credits to jonash),"Related to https://code.djangoproject.com/ticket/20133
",areski,None,2014-08-13T13:03:54Z,2014-08-14T11:19:17Z
3051,[1.7.x] Fixed #23277 -- Backport patterns() documentation changes.,"https://code.djangoproject.com/ticket/23277
",collinanderson,None,2014-08-12T20:31:38Z,2015-01-15T01:21:05Z
3050,[1.7.x] Refs #23276: Removed bad examples of passing views as strings to url(),"https://code.djangoproject.com/ticket/23276
",collinanderson,None,2014-08-12T18:15:56Z,2015-01-15T01:21:04Z
3049,Stopped stripping microseconds with MySQL backend,"Refs #19716.
",claudep,None,2014-08-12T15:37:58Z,2014-10-28T14:07:55Z
3048,Fixed #23276 -- Deprecated passing views as strings to url().,,timgraham,None,2014-08-12T15:04:48Z,2014-08-12T18:01:05Z
3047,"Fixed #18757, #14462, #21565 -- Reworked database-python type conversions","Make resolve_columns a permanent fixture, remove convert_values.

Current implementation passes on sqlite at least, but does destroy performance. Need a nicer converter-collection based approach. Also some tests that we can use the new override from_db_value, and that [#21565](https://code.djangoproject.com/ticket/21565) is fixed in the process.
- [x] Make the tests pass
- [x] Refactor to use ""convertor-collector"" based system
- [x] Add tests for [#21565](https://code.djangoproject.com/ticket/21565)
- [x] Add tests for [#14462](https://code.djangoproject.com/ticket/14462)
- [x] Add documentation for `from_db_value` and appropriate test suite for it
",mjtamlyn,None,2014-08-12T12:12:58Z,2014-09-03T19:36:27Z
3046,Fixed #21160 -- in_bulk on SQLite with more than 999 ids,"SQLite has 1000 query parameters limit, so fetching more than 999
objects in a single query doesn't work. This caused in_bulk() to fail
when issued more than 1000 ids. The in_bulk() method now fetches objects
in correctly sized batches to avoid the parameter limit problem.

Patch based on work done by Trac alias NiGhTTraX.
",akaariai,None,2014-08-11T12:25:00Z,2014-08-29T12:01:41Z
3045,Fixed #23269 -- Deprecated django.utils.remove_tags() and removetags filter.,"Also the unused, undocumented django.utils.html.strip_entities() function.
",timgraham,None,2014-08-11T11:50:44Z,2014-08-15T12:22:14Z
3044,"Improved FAQ (NoSQL, Jinja2, scalability/stability). Refs #23016","I did three improvements in reference to this ticket: https://code.djangoproject.com/ticket/23016
",olasitarska,None,2014-08-11T11:45:21Z,2014-08-12T19:55:30Z
3043,Fixed #23267 - Typo in Translation documentation,,olasitarska,None,2014-08-11T10:03:11Z,2014-08-11T10:07:17Z
3042,Fix typo in 1.8 release notes,,mbertheau,None,2014-08-11T09:34:52Z,2014-08-11T11:07:41Z
3041,Fixed #23261 -- Deprecate old style list support for unordered_list,"For some reason I cannot see the `.. deprecated:: 2.0` note in the docs. But they don't work for other deprecation notices either. Not sure what I'm doing wrong there.
",jaap3,None,2014-08-11T07:54:30Z,2015-11-26T11:15:58Z
3040,Fixed #19570 - management command options to match command line use,"Related to ticket https://code.djangoproject.com/ticket/19570
",areski,None,2014-08-10T14:24:03Z,2014-08-12T16:44:54Z
3039,Fixed #23266 -- Prevented extra query when checking for object types in query relation lookups in case of QuerySet.,,coder9042,None,2014-08-10T12:56:23Z,2016-10-14T12:49:30Z
3038,Fixed #22985 -- Made call_command accept option name parameter,"Note that I only added the functionality for new-style argparse commands, as optparse is now deprecated.
",claudep,None,2014-08-09T19:11:55Z,2014-08-12T20:02:47Z
3037,Fixed #23262 -- SelectFilter2.js Enter Key,"https://code.djangoproject.com/ticket/23262
",collinanderson,None,2014-08-08T18:25:15Z,2015-01-15T01:21:04Z
3036,Fixed #23258 - Add note that Form.add_error is new in 1.7 in 'Form and field validation',"related to https://code.djangoproject.com/ticket/23258
",areski,None,2014-08-08T15:48:31Z,2014-08-08T15:53:23Z
3035,#23257 -- Docs updated for new django-jython release,"I have just done a new release of ​django-jython, which supports Django 1.7. Here is the updated Django documentation.
",beachmachine,None,2014-08-08T14:23:33Z,2014-08-08T16:48:28Z
3034,Fixed #23260: defaultfilters.unordered_list should work for generators,,jaap3,None,2014-08-08T13:44:14Z,2015-11-26T11:19:32Z
3033,Fixed #23259 -- Corrected insertion order of extra() select_params for c...,,rajivm,None,2014-08-08T10:23:36Z,2014-08-11T06:37:20Z
3032,migrations: support serializing datetime.time,,wkornewald,None,2014-08-08T10:22:38Z,2014-08-19T13:37:17Z
3031,Original formatting,,PirosB3,None,2014-08-08T09:31:19Z,2014-08-08T09:34:50Z
3030,Fix for #22982,"Here's a fix for https://code.djangoproject.com/ticket/22982

To fix I've fallen back to the `repr` method for `GenericRelatedObjectManager`s, as the `str` method results in an exception
",jacobh,None,2014-08-07T06:33:26Z,2014-08-07T18:46:33Z
3029,Fixed #23162 -- Renamed Field._has_changed() to has_changed(),"Renamed all the occurrences of _has_changed() to has_changed().
",gmunumel,None,2014-08-07T03:39:31Z,2014-08-15T12:27:08Z
3028,Fixed #23162 -- Renamed Field._has_changed() to has_changed(),"Renamed Field._has_changed() occurrences to has_changed() and
added an API reference.
",gmunumel,None,2014-08-07T01:34:02Z,2014-08-07T02:21:27Z
3027,Fix docs typo removing the deprecated 'mimetype' in favor of 'content_type',,muattiyah,None,2014-08-07T00:35:12Z,2014-08-07T02:31:15Z
3026,Fixed #9893 -- Filename could exceed max_length on collision,"Passing max_length argument into the Storage's save() and get_available_name() methods.
Rewriting get_available_name() so filenames do not exceed max_length when there is a collision.
Adding test for the case.
",pavel-shpilev,None,2014-08-05T10:49:49Z,2014-10-15T07:39:14Z
3025,Fixed #23130 -- BooleanField should not override 'blank' if choices are specified,#NAME?,tb123,None,2014-08-05T01:51:54Z,2016-07-09T22:55:59Z
3024,Fixed #23136 -- Added a message when sqlclear does nothing,"Added a default message when the command sqlclear has not
tables to update.
",gmunumel,None,2014-08-05T00:34:21Z,2014-08-18T21:13:17Z
3023,Removed code that assumed BooleanField could be null.,"Such a field will no longer pass model validation.
",timgraham,None,2014-08-04T23:56:16Z,2014-08-05T11:50:49Z
3022,[1.6.x] Fixed #23136 - Added a message when sqlclear does nothing,"Added a message when there is not tables to drop with sqlclear
command.
",gmunumel,None,2014-08-04T23:18:53Z,2014-08-04T23:20:12Z
3021,[1.6.x] Fixed #23136,"Added a message when there is not tables to drop with sqlclear command.
",gmunumel,None,2014-08-04T22:37:47Z,2014-08-04T22:51:33Z
3020,Fixed #21231 -- Added mechanism to limit request data upload size.,"Added settings.DATA_UPLOAD_MAX_MEMORY_SIZE, similar to the existing
FILE_UPLOAD_MAX_MEMORY_SIZE, and raised SuspiciousOperation on
requests that exceed it.
",timgraham,None,2014-08-04T16:43:00Z,2015-08-14T10:29:30Z
3019,bugfix 19139: Make OpenLayersWidget respect GeoModelAdmin's modifiable attribute,"ref https://code.djangoproject.com/ticket/19139
",fcurella,None,2014-08-04T16:17:06Z,2014-09-12T06:50:01Z
3018,Fixed #23183 - Use timestamp when uploading duplicate filenames,"related to https://code.djangoproject.com/ticket/23183
",areski,None,2014-08-04T16:06:16Z,2014-08-08T18:26:55Z
3017,Update django.po,"replace the string ""Staff-Account"" from the german translation file.
",bessl,None,2014-08-04T15:23:20Z,2014-08-04T15:25:37Z
3016,Fixed a typo in comment in django/utils/version.py,,SITZ,None,2014-08-04T13:56:29Z,2014-08-04T14:24:02Z
3015,Fixed #23169 - documentation small fix,"related to ticket https://code.djangoproject.com/ticket/23169
",areski,None,2014-08-04T11:30:43Z,2014-08-04T12:31:04Z
3014,Refactor of fix for Ticket 22232,"This is a refactor of NathanRSmith's fix for ticket #22232
",seamr,None,2014-08-04T07:49:47Z,2014-11-03T19:42:49Z
3013,[1.7.x] Fixed #23159 -- Skipped non-conrete fields in migrations.,"https://code.djangoproject.com/ticket/23159

It makes sense to skip non-concrete fields in the migrations framework.
Otherwise IMHO the way django 1.7 would treat these non-concrete fields would be really inconsistent (sad). It slighlty differs already from django models than django model forms (which is daunting), and it would differ in a new way in the migration framework (not nice at all).
I hope you can consider these points in this new awsome feature that is the migration framework. I'm pretty sure one of these two solutions won't break existing tests and would ensure maximum compatibility, hence benefit future django versions lot.
",nemesisdesign,None,2014-08-03T19:28:03Z,2014-08-05T01:59:21Z
3012,Fixed #23160 -- Correctly rename models with self referential fields.,"Thanks to whitews AT gmail for the report.
",charettes,None,2014-08-03T19:04:21Z,2014-08-04T14:37:19Z
3011,Fixed #23158 - Documentation error on pagination p.page_range,"related to ticket https://code.djangoproject.com/ticket/23158
",areski,None,2014-08-03T11:48:24Z,2014-08-03T19:31:57Z
3010,Fixed #23156 -- Added missing BinaryField.deconstruct() method.,,bmispelon,None,2014-08-03T11:03:44Z,2014-08-03T13:25:56Z
3009,Fixed #23151 -- Deprecated RegexField.error_message.,,timgraham,None,2014-08-02T22:34:46Z,2014-08-03T15:22:14Z
3008,Fixed #23157 -- Improved file upload performance when many duplicate names exist,"Storage.get_available_name() handled conflicts by exhaustively testing
each alternative name, starting at one until a free name was found.

In some scenarios this would lead to pathological performance due to
stat()ing many files, potentially causing I/O and reducing cache
effectiveness by warming the metadata of previously cold files.

This preserves the existing name scheme (incrementing integers), but
uses bisection to find a free name. Given a name that is duplicated
10,000 times, the number of exists() calls is reduced from 10,000 to 24.

```
['highest', None, 'got', 0, 'num stats', 1]
['highest', 0, 'got', 1, 'num stats', 6]
['highest', 1, 'got', 2, 'num stats', 6]
['highest', 2, 'got', 3, 'num stats', 6]
['highest', 3, 'got', 4, 'num stats', 6]
['highest', 4, 'got', 5, 'num stats', 6]
['highest', 5, 'got', 6, 'num stats', 6]
['highest', 6, 'got', 7, 'num stats', 6]
['highest', 7, 'got', 8, 'num stats', 6]
['highest', 8, 'got', 9, 'num stats', 6]
['highest', 9, 'got', 10, 'num stats', 6]
['highest', 10, 'got', 11, 'num stats', 7]
['highest', 100, 'got', 101, 'num stats', 12]
['highest', 1000, 'got', 1001, 'num stats', 18]
['highest', 10000, 'got', 10001, 'num stats', 24]
['highest', 100000, 'got', 100001, 'num stats', 32]
['highest', 1000000, 'got', 1000001, 'num stats', 38]
['highest', 10000000, 'got', 10000001, 'num stats', 44]
```

It is compatible with the old approach, except that if random parts of
the range are freed through deletion, previously the lowest index would
always be picked, while this approach will only repopulate indices
falling on a bisection midpoint. It doesn't seem possible to emulate the
old approach without calling either listdir() or repeatedly calling
exists() as before.

Ideally Django would use some randomized scheme, although this might be
a surprising change for existing installs. Time-based names are another
option but could still potentially break larger installs.
",dw,None,2014-08-02T17:54:24Z,2014-08-08T18:27:11Z
3007,Fix grunt placement,"I think this might be a better structure.  What do you think?
",treyhunner,None,2014-08-02T04:21:47Z,2014-08-02T04:39:23Z
3006,Fixed #23148 -- A few tutorial tweaks,"https://code.djangoproject.com/ticket/23148
",collinanderson,None,2014-08-02T01:34:02Z,2015-01-15T01:21:02Z
3005,Fixed #23145 -- Dropped support for Oracle < 11.1,,timgraham,None,2014-08-01T16:54:15Z,2014-08-01T23:33:52Z
3004,"Fixed #23144 -- Dropped support for MySQL 5.0, 5.1.",,timgraham,None,2014-08-01T15:11:16Z,2014-08-02T16:18:01Z
3003,[WIP]Fixed #16193 -- Added qunit to test javascript.,"Added qunit tests to test suite. Currently needs more tests to be written. Uses node and grunt to run the test suite from the command line with phantomjs. Uses jshint for linting.
- [ ] Fix jshint errors.
- [ ] Add missing tests.

This doesn't fix the more general problem of javascript testing any django application, but it does at least allow us to unit test most of the admin javascript.
",slurms,None,2014-07-31T23:07:53Z,2014-12-24T18:11:46Z
3002,Fixed #23061: Avoided setting a limit on a query for get with select_for...,"..._update on Oracle

Thanks Michael Miller for reporting the issue.
",shaib,None,2014-07-31T22:54:52Z,2014-08-05T11:52:59Z
3001,Update base.py,"  File ""python2.7/site-packages/django/core/management/base.py"", line 229, in run_from_argv
    s = '%s: %s' % (e.**class**.**name**, e)
UnicodeEncodeError: 'ascii' codec can't encode characters in position 6-11: ordinal not in range(128)

Thanks @  angelo-peng
",gshmu,None,2014-07-31T03:29:29Z,2014-07-31T13:12:20Z
3000,Adds 'true' and 'false' to `NullBooleanField`.,"JavaScript serializations of forms will sometimes render the boolean values as the strings 'true' and 'false', in lower case. Rather than repeat boilerplate in the JavaScript to circumvent this, it seems reasonable to allow Django to understand the lower-case versions of the booleans.

Related to [ticket 23129](https://code.djangoproject.com/ticket/23129)
",wlonk,None,2014-07-29T17:20:15Z,2014-08-02T19:50:02Z
2999,Documentation typo on django.contrib.admins.app.SimpleAdminConfig,"The 'app' subpackage does not exist, should be 'apps' (django.contrib.admin.apps.SimpleAdminConfig)
",DZPM,None,2014-07-29T16:12:58Z,2014-07-29T16:30:44Z
2998,Fixed #23107 -- no-color option won't work for output of runserver command,"related to ticket https://code.djangoproject.com/ticket/23107
",areski,None,2014-07-29T13:20:52Z,2014-07-30T17:00:11Z
2997,Fixed #7220 -- Allowed AbstractBaseUser.last_login to be null.,,timgraham,None,2014-07-29T12:58:16Z,2014-08-01T21:58:08Z
2996,Use JsonResponse in CBV examples.,,timgraham,None,2014-07-29T12:01:22Z,2014-07-31T17:47:04Z
2995,Fixed #2443 -- Added DurationField,"This has been added to core as well following design decision taken in https://code.djangoproject.com/ticket/2443

This field was never merged due to UI related issues. Personally I think a CharField with `DD HH:MM:SS.uuuuuu` formatting in it is sufficient - this is basically what a `TimeField` does anyway.

Uses `bigint` of microseconds for non-psql databases, `interval` on postgres.

Todo:
- [x] docs
- [x] form field
",mjtamlyn,None,2014-07-29T11:32:54Z,2014-12-23T10:12:57Z
2994,Fixed #23114 -- Templates variables unclear information,"  Added accurate information about the way and order of
  evaluation in variable templates of the form ""X.Y"".
",gmunumel,None,2014-07-29T03:02:42Z,2014-07-29T08:59:30Z
2993,Fixed #7361 -- Add cancel link to admin delete views.,,slurms,None,2014-07-28T16:37:53Z,2014-09-30T12:46:43Z
2992,Fixed #23074 -- Avoided leaking savepoints in atomic.,"Thanks Chow Loong Jin for the report and the initial patch.
",aaugustin,None,2014-07-28T12:31:07Z,2014-07-28T13:41:27Z
2991,Fixed #23113 -- ChoiceInput.render should take specified attrs into account.,,charettes,None,2014-07-27T23:01:39Z,2014-07-28T14:04:09Z
2990,fixed #23112 -- Field.get_choices tries to index an iterable,"related to https://code.djangoproject.com/ticket/23112
",areski,None,2014-07-27T21:41:57Z,2014-07-31T12:55:42Z
2989,fixed #23107 -- no-color option won't work for output of runserver command,"related to ticket https://code.djangoproject.com/ticket/23107
",areski,None,2014-07-27T18:33:52Z,2014-07-30T11:31:42Z
2988,Fixed #23102 -- Change in database behaviour,"  Added a note in the release note of django 1.7
  to show the change in database behaviour when
  using another database.
",gmunumel,None,2014-07-27T15:42:25Z,2014-07-28T14:06:21Z
2987,FIXED #12810: return validation error if a registered table name is used for m2m fields,"Ticket: https://code.djangoproject.com/ticket/12810

Description: Throw an error with the checks framework when m2m fields are configured to use a table that is already registered.
",christopherdcunha,None,2014-07-27T14:12:02Z,2016-06-08T14:41:11Z
2986,Fixed #10414 -- Made select_related fail on invalid field names.,"https://code.djangoproject.com/ticket/10414

This is basically my first non-trivial contribution to Django, so it might not be perfect. I'll be happy to update the PR as required. :)
",nip3o,None,2014-07-27T12:20:28Z,2015-10-10T00:36:42Z
2985,Fixed #23098 -- Checked that lazy choices are not evaluated too soon,"Thanks Matthieu Agopian for the report.
",apollo13,None,2014-07-27T11:22:08Z,2014-07-27T11:32:58Z
2984,Fixed #19802 -- HttpResponse.set_cookie doesn't handle unicode data ,"pls, review, thanks :beer: 
",qingfeng,None,2014-07-27T09:57:51Z,2014-08-03T16:51:12Z
2983,[1.7.x] Fixed #23111 -- Do not try to import getcallargs on Jython,,beachmachine,None,2014-07-27T09:48:42Z,2014-10-05T12:27:03Z
2982,Fixed #22491 -- documented how `select_for_update() should be tested.,"Thanks Andreas Pelme for the report.
",mmardini,None,2014-07-27T08:13:46Z,2014-07-28T14:59:06Z
2981,"Fixed #23108 -- Dropped support for PostgreSQL 8.4 & PostGIS 1.3, 1.4.",,timgraham,None,2014-07-26T20:56:25Z,2014-08-01T21:39:49Z
2980,Fixed #23106 -- Changed duplicate doc title,,dhoffman34,None,2014-07-26T18:54:21Z,2014-07-27T00:48:09Z
2979,Fixed #16383,,coder9042,None,2014-07-26T18:44:56Z,2014-07-31T16:04:33Z
2978,Fixed #23099 -- Removed usage of deprecated initial data in Django's test suite.,,timgraham,None,2014-07-26T17:17:57Z,2014-08-08T18:38:21Z
2977,Fixed #23101 db_table wasn't copied in deconstruct,"copied the db_table variable to kwargs in deconstruct
",abrahammartin,None,2014-07-26T16:53:23Z,2014-07-27T00:44:03Z
2976,Fixed #23060 -- UnicodeDecodeError in debug templatetag,"Then a PR #2933

@claudep pls, review, thanks :beer: 

Reference Documents:
- https://docs.djangoproject.com/en/dev/internals/contributing/committing-code/#committing-guidelines
- https://docs.djangoproject.com/en/1.6/internals/contributing/writing-code/working-with-git/
",qingfeng,None,2014-07-26T15:45:06Z,2014-07-26T16:07:32Z
2975,Fixed #17638 -- Improve navigation between CBV pages,"Added ""see also"" blocks for navigation between introduction
and api reference of class based views.

Thanks to mcintyre94 who provide the initial patch.
",jarus,None,2014-07-26T15:05:25Z,2014-08-30T00:06:21Z
2974,Fixed #22553 -- Added refreshing queryset info to docs,,dhoffman34,None,2014-07-26T14:05:11Z,2014-07-26T14:28:08Z
2973,Cosmetic change on lru_cache backport,"Ticket https://code.djangoproject.com/ticket/23105
",areski,None,2014-07-26T13:48:49Z,2014-07-26T15:41:51Z
2972,Fixed #10935 -- Added UploadedFile annotation with image attribute on field clean,"Added Uploaded file annotation with image attribute on field clean so it can be reused in subclasses. Also added tests and documentation for this new mini feature.
",petraszd,None,2014-07-26T13:04:30Z,2014-08-01T13:44:49Z
2971,[1.6.x] Fixed #20292: Pass datetime objects (not formatted dates) as par...,"...ams to Oracle

This seems worthwhile in its own right, but also works around an Oracle
bug (in versions 10 -- 11.1) where the use of Unicode would reset the
date/time formats, causing ORA-01843 errors.

Thanks Trac users CarstenF for the report, jtiai for the initial patch,
and everyone who contributed to the discussion on the ticket.

Backport of 6983201 from master.
",shaib,None,2014-07-26T12:53:37Z,2014-07-30T21:08:45Z
2970,Fixes #22305 - added note to docs about UTF8 database requirement.,"https://code.djangoproject.com/ticket/22305
",nip3o,None,2014-07-26T11:38:06Z,2014-07-26T13:40:57Z
2969,Fixed #23067 Update docs to use django-admin instead of django-admin.py,"Updated the documentation to use django-admin term instead of the old
django-admin.py

Patch for ticket #23067: https://code.djangoproject.com/ticket/23067
",jarus,None,2014-07-26T11:33:31Z,2014-07-30T18:19:08Z
2968,fixed #22873 -- rename use_debug_cursor to force_debug_cursor to clarify...,"rename use_debug_cursor to force_debug_cursor to clarify the private API behaviour
",areski,None,2014-07-26T11:08:11Z,2014-07-26T14:39:41Z
2967,Fixed #23070 -- not to break the debug page by callable setting with __slots__,,hirokiky,None,2014-07-26T10:42:55Z,2014-07-26T12:43:03Z
2966,Fixed #21792 -- Form.has_changed is not documented,"Added a has_changed() method description to the Form class
Added description for _has_changed() method on Field class
",navi7,None,2014-07-26T10:20:55Z,2014-08-05T12:50:28Z
2965,Fixed #22887 -- Add comment for translators on unique_for_date error message,"I add a comment for the translators to the unique_for_date error message.

The aim is to clarify the meaning of the message so it can be easier to translate in different languages.
",synasius,None,2014-07-26T10:16:01Z,2014-07-26T12:06:26Z
2964,Fixed #22808 -- Fixed bug in ModelMultipleChoiceField choices validation,,nip3o,None,2014-07-26T09:09:29Z,2014-07-31T19:33:41Z
2963,Fixed #23103 -- Added contributing tutorial link,"Added ""Writing your first patch for Django"" page link into ""Contributing to
Django"" documentation page.
",petraszd,None,2014-07-26T08:48:01Z,2014-07-26T13:51:48Z
2962,Fixed #23097: Switched to new octal format in docs,,dhoffman34,None,2014-07-26T01:43:21Z,2014-07-26T09:25:31Z
2961,Fixed #22979: Move bug* tests,"Moved bug8245 to it's own directory: admin_autodiscover. Moved bug639 to model_forms tests.
",tb123,None,2014-07-26T01:35:23Z,2014-07-27T01:24:17Z
2960,Fixed #22986 -- Conditionally enable the `Session` model.,"Requires tests+docs.
",slurms,None,2014-07-25T18:52:36Z,2014-10-07T13:00:54Z
2959,Fixed #23098 -- Checked that lazy choices are not evaluated too soon,"Thanks Matthieu Agopian for the report.
",claudep,None,2014-07-25T17:23:57Z,2014-08-08T09:13:10Z
2958,Fixed #16617 -- Added 'value' to BaseValidator params. Allowed to overri...,"...de the default messages in subclasses of BaseValidator.

Thanks sperrygrove for initial patch.
",coder9042,None,2014-07-25T17:05:34Z,2014-07-26T15:28:21Z
2957,Fixed #13163 -- Show change links on inline objects.,,slurms,None,2014-07-25T14:46:25Z,2014-07-31T12:29:37Z
2956,Fixed #23083 -- Fixed runserver reloading when deleting a file.,,timgraham,None,2014-07-25T13:34:05Z,2014-07-25T17:25:46Z
2955,Fixed #22827 -- clarified what each cache middleware does.,"Thanks Keryn Knight for the report.
",mmardini,None,2014-07-25T08:43:04Z,2014-07-25T10:28:16Z
2954,Fixed #23088 -- Used `six` `range` type in `Paginator.page_range`.,"Thanks Keryn Knight for the report.
",mmardini,None,2014-07-25T08:05:39Z,2014-07-25T10:17:06Z
2953,Improved docs for GEOSGeometry.simplify(),"Minor grammatical improvements, and one fixed typo (""tolerance is tolerance"").
",tomdyson,None,2014-07-25T00:26:41Z,2014-07-25T10:22:50Z
2952,Fixed #22849 -- Added Session.__str__(),,slurms,None,2014-07-24T20:21:34Z,2014-07-24T22:16:44Z
2951,Fixed #18763 -- Added with_perm() to User manager.,"Should be ready for a review.
",slurms,None,2014-07-24T18:29:48Z,2014-10-27T13:15:01Z
2950,Fixed #23014 -- Infinite migration regression with unique/index_together,,timgraham,None,2014-07-24T17:44:37Z,2014-07-24T18:42:32Z
2949,Fixed #21707 -- Checked for missing context when 'super' used in base te...,"...mplate.
",coder9042,None,2014-07-24T17:28:23Z,2014-07-24T18:25:30Z
2948,Migration operation docs fixes,"Change a couple of the class names to match their relevant subheadings, and add a sentence to AlterModelOptions to clarify that the options argument is a dict.
",danielroseman,None,2014-07-23T21:45:35Z,2014-07-24T13:43:08Z
2947,Team organization,"https://groups.google.com/d/topic/django-developers/8b-wxEzWO3c/discussion
",aaugustin,None,2014-07-23T12:34:16Z,2019-04-22T20:15:37Z
2946,Made virtual_only consistent in contribute_to_class,"Fixes #21940 with `**kwargs` (https://code.djangoproject.com/ticket/21940).
",mitar,None,2014-07-23T09:59:19Z,2014-08-01T11:50:30Z
2945,Fixed #22431 -- Prevented TestCase from swallowing integrity errors.,"POC with missing docs.
",charettes,None,2014-07-23T06:01:53Z,2014-07-23T13:20:59Z
2944,Fixed #23078 -- update_contenttypes will always be non-interactive.,,slurms,None,2014-07-23T03:04:24Z,2014-07-24T08:03:11Z
2943,Split Content-Length header out into it's own ContentLengthMiddleware,"ConditionalGetMiddleware by name is overloaded since this behavior has
nothing to do with conditional gets.

This will need documentation update that I'd be glad to do if the idea is accepted.
",mattrobenolt,None,2014-07-22T20:38:06Z,2014-08-01T16:20:22Z
2942,Fixed #23078 -- Removed the interactive=True variable,"I removed the interactive=True variable since it blocked the kwargs
kwargs.interactive was always be False due to the fact that there
was already a named interactive variable
",schmitch,None,2014-07-22T20:27:19Z,2014-07-23T12:54:25Z
2941,Merge pull request #1 from django/master,"m
",schmitch,None,2014-07-22T17:49:40Z,2014-07-22T17:49:52Z
2940,Fixed #23076 - Fix cascaded deletion of polymorphic models,"Ticket: [#23076](https://code.djangoproject.com/ticket/23076)

Currently, when deleting polymorphic models (for example by using `django-polymorphic`), the `django.db.models.deletion.Collector` incorrectly assumes that all models are of the same type as the first model in the list. Then, it generates incorrect delete statements when polymorphic models are used which then result in an `IntegrityError` when the transaction is committed. This is a patch that fixes this issue and it is directly based on a patch submitted by Kronuz at the end of ticket #16128.
",kostko,None,2014-07-22T09:48:30Z,2014-10-23T23:36:28Z
2939,fix typo in the documentation ,"fix typo in the documentation in method get_inline_instances in code example
",mr-africa,None,2014-07-22T05:49:31Z,2014-07-22T17:28:42Z
2938,Fixed #23071 -- Use last migration's name in dependency to other app,"Changed the autodetector to lookup the name of the other app's last
migration in the graph and use that as dependency instead of using
**latest**.
",dekkers,None,2014-07-21T23:05:33Z,2017-04-13T14:45:32Z
2937,Warning to reader that the regex capture group name has changed,"The snippet doesn't make it obvious that the capture group has changed (it was poll_id earlier in the tutorial), and it's easy to be distracted by the other changes in the line and miss this.

It's common enough that there's even a StackOverflow question about it:
http://stackoverflow.com/questions/12304050/django-tutorial-generic-views-attribute-error
",rikkiprince,None,2014-07-21T22:37:58Z,2014-07-22T18:01:02Z
2936,"When RemoteUser authentication fails, logout any user","Currently, when `remoteUserBackend` fails to authenticate the
username passed in the header, and `create_unknown_user==False`,
`RemoteUserMiddleware` does nothing. Thus, if a different user
was logged in, that user will remain logged in despite the failed
attempt to log in a new user.

This is a security issue.

We fix this problem by logging out the request if the user returned
by the middleware is None (a failed login attempt).
",dgreisen-cfpb,None,2014-07-21T19:25:11Z,2014-08-12T23:24:30Z
2935,Pluralise 'group' in explanation of what groups do to permissions,"Conflicts with #2934, but I have a memory like a sieve and wouldn't trust myself to do it later.
",colons,None,2014-07-21T18:03:02Z,2014-07-21T20:05:09Z
2934,Replace instances of 'his/her' with 'their',"The his/her construct is, I'm sure we can all agree, nightmarish. It's awkward to read and it's almost impossible to speak aloud. It's also exclusionary and reinforces the idea of a first and second gender.

The contribution guidelines say that if it's anything but a typo, I should file a bug. In this case, it does appear that this is on the level of typo; there are currently no instances of 'he/she' or 'his/hers' in Django, and there are already a decent number of instances of singular 'they', so I'm confident this is not a policy issue. Just in case I'm wrong about that, though, here's a conservative hunt for some examples:

```
$ ack --type-set=po:ext:po --type=nopo ""user's"" -C 3 | grep their
django/contrib/auth/__init__.py:107:    Removes the authenticated user's ID from the request and flushes their
docs/ref/contrib/csrf.txt-12-who visits the malicious site in their browser.  A related type of attack,
docs/ref/middleware.txt:203:Allows a user's sessions to be invalidated when their password changes. See
docs/releases/1.2-alpha-1.txt-394-malicious site in their browser. A related type of attack, 'login
docs/releases/1.2.txt-147-who visits the malicious site in their browser. A related type of attack, ""login
docs/topics/auth/default.txt:114:Changing a user's password will log out all their sessions if the
docs/topics/auth/default.txt-924-    Allows a user to reset their password by generating a one-time use link
docs/topics/i18n/timezones.txt-180-they use the time zone of their primary audience or UTC. pytz_ provides
docs/topics/templates.txt-440-what would happen if the user entered their name as this::
```

Sorry about the .po files; I couldn't find anything in https://docs.djangoproject.com/en/dev/internals/contributing/ about how to run makemessages against django itself.
",colons,None,2014-07-21T18:01:02Z,2014-07-21T19:51:28Z
2933,[CLOSE]Fixed #23060 -- UnicodeDecodeError in debug templatetag,"ticket: [23060](https://code.djangoproject.com/ticket/23060)

pls, review, thanks :beer: 
",qingfeng,None,2014-07-21T17:39:29Z,2014-07-26T15:42:28Z
2932,Fixed #19508 -- Used uri_to_iri.,"This is a PR for ticket #19508 for which another PR #2919 was opened by me a few days ago.
This PR implements `uri_to_iri` as per RFC and changes the `PATH_INFO` at the very time when `environ` is being set contrary to the previous one which corrected the received url from `environ`.
",coder9042,None,2014-07-19T04:35:06Z,2014-10-15T19:37:36Z
2931,Fixed #20331 -- Allowed admin actions to serve StreamingHttpResponses,"I needed this fix for my project on 1.5 branch

I just cherry picked the commit but it seems to work fine and the tests pass:

```
OK (skipped=177, expected failures=5)
```

(I guess that's ok)
",anentropic,None,2014-07-18T13:06:10Z,2014-07-18T13:08:00Z
2930,Stable/1.7.x,,elvinmakhmudov,None,2014-07-17T10:55:01Z,2014-07-17T12:54:41Z
2929,Adjust reference to pk in RedirectView.get_redirect_url doc,"In its current form, `pk` is a non-existant variable. Need to
fetch it from kwargs.
",bartek,None,2014-07-16T16:09:36Z,2014-07-16T17:24:38Z
2928,Fixed #23030 -- Properly handled geometry columns metadata during migrations,,claudep,None,2014-07-16T11:47:01Z,2014-07-23T10:17:40Z
2927,Failed to load management commands after freezing by cx_freeze,"Since it just searching .py but not .pyc files in function of find_commands() in django/core/management/**init**.py, but after freezing there is no .py files.

After changing this line 
    return [f[:-3] for f in os.listdir(command_dir) if not f.startswith('_') and f.endswith('.py')]
to 
    return [f[:f.rindex('.')] for f in os.listdir(command_dir) if not f.startswith('_') and (f.endswith('.py') or f.endswith('.pyc'))]

it works.
",keelung,None,2014-07-16T01:25:55Z,2014-07-16T17:19:12Z
2926,Update reusable-apps.txt,"Going through the tutorial I noticed the setup.py does not take advantage of context managers! I edited the setup.py to use a context manager for open()
",djds23,None,2014-07-15T16:45:54Z,2014-07-16T18:26:44Z
2925,Fixed #22962 -- Default values for ArrayField with migrations.,"If prep_value receives a string, it should use the to_python method to convert it back into a list so psycopg2 can correctly pass it down to the database.

@andrewgodwin any ideas why I'm getting a string from the migration runner anyway? Seems a bit strange to me.

FWIW I have also checked this works if the default is `[1]`. The original proposed patch on the ticket failed in this case.
",mjtamlyn,None,2014-07-15T11:41:15Z,2014-07-29T09:37:44Z
2924,Fixed #22907 -- Array contains must have same type.,,mjtamlyn,None,2014-07-15T11:14:37Z,2014-07-15T18:41:53Z
2923,Fixed #19463 -- Add UUIDField,"Added UUIDField. Not particularly complicated this one - no custom lookups or anything. Casts all values to `uuid.UUID` instances in python.

TODO:
- [x] More form field tests
- [x] Documentation

Squashed patch should be marked as fixing #19463.
",mjtamlyn,None,2014-07-15T10:28:51Z,2014-09-16T09:08:41Z
2922,Ignored STATIC_ROOT and MEDIA_ROOT in makemessages,"Also alleviate issues with weird file names typically found in
MEDIA_ROOT directories (#23010).
",claudep,None,2014-07-15T09:13:16Z,2014-07-16T07:51:25Z
2921,django.db.backends.mysql - use CHAR instead of VARCHAR when appropriate.,"Sometimes you know exactly how many characters go in a string and you want to avoid the extra byte for a `VARCHAR`, e.g. when storing 40-character git commit sha1. Also, when working with legacy tables (`managed = False`), you could be using `CHAR` fields that would need validation of `min_length`.
",dnozay,None,2014-07-15T02:08:06Z,2014-08-05T14:45:43Z
2920,Fixes #23028: inspectdb should handle unique_together,,dnozay,None,2014-07-14T21:54:37Z,2014-07-18T17:17:38Z
2919,Fixed #19508 -- Non UTF-8 now remain url encoded.,"- When having urls like `/test/~%A9`, we get `400` when project is deployed as `WSGIHandler` has fallback for `400` in case of `UnicodeDecodeError`.
- In development we get `500` because `StaticFilesHandler` is used and it does not have that fallback.
- It cannot be reproduced in tests because the `ClientHandler` again raises `UnicodeDecodeError` in `get_path_info()`.
- The problem arises when in [get_path_info()](https://github.com/django/django/blob/master/django/core/handlers/wsgi.py#L210), we decode the url in `utf-8`.
- When we pass a url, it passes through `unquote()` in `urllib` where it converts all percent encodings, even those which should remain url-encoded.

Its not ready for merge, work still in progress.
",coder9042,None,2014-07-14T20:34:07Z,2014-08-14T17:58:21Z
2918,Fixed #22991 -- Prevented *.pyc files in autoreload monitoring,"This fixes a regression introduced in 6d302f639.
Thanks lorinkoz at gmail.com for the report and Collin Anderson
for the initial patch.
",claudep,None,2014-07-14T19:45:35Z,2014-07-15T09:16:06Z
2917,Fixed #22970 -- Use last migration's name in dependency to existing migrated app,"Changed the autodetector to lookup the name of the existing app's last
migration in the graph and use that as dependency.
",dekkers,None,2014-07-14T19:13:38Z,2017-04-13T14:45:32Z
2916,Fixed #22998: Updated the fast_delete logic for GFKs,"https://code.djangoproject.com/ticket/22998
",gavinwahl,None,2014-07-14T16:44:41Z,2014-07-16T17:30:35Z
2915,Fixed #23013 -- Fixed removing unique_together/index_together constraints in migrations.,,timgraham,None,2014-07-14T12:22:07Z,2014-07-15T19:23:52Z
2914,Fixes for a couple of regression in generic foreign key handling,"Fixed tickets #22992 and #22994.

Should be backpatched to 1.7.
",akaariai,None,2014-07-14T12:09:20Z,2014-07-14T14:54:17Z
2913,Fixed #22991 -- Autoreloading *.pyc files,"https://code.djangoproject.com/ticket/22991

I would appreciate someone else writing a test case.
",collinanderson,None,2014-07-14T01:54:18Z,2014-07-14T19:47:19Z
2912,Fixed #23015 -- Fixed major/minor release terminology in docs.,,timgraham,None,2014-07-13T17:39:12Z,2014-07-14T10:19:17Z
2911,not just .py but also .pyc file while fetching management commands,"Since django would be freeze like cx_freeze, so .pyc files would be froze commands. but in function find_commands() in ""django/core/management/**init**.py"", "" if not f.startswith('_') and f.endswith('.py')"" stopped freezing.

and maybe other code would stop freezing.
",keelung,None,2014-07-13T10:23:52Z,2014-07-14T04:00:50Z
2910,Fixed #22996 -- Prevented crash with unencoded query string (Python 3),"Thanks Jorge Carleitao for the report and Aymeric Augustin for the
review.
",claudep,None,2014-07-12T17:42:49Z,2014-08-25T15:23:35Z
2909,Fixed #22789 -- Deprecated django.contrib.webdesign.,"Moved the {% lorem %} tag to built-in tags.
",timgraham,None,2014-07-12T13:52:38Z,2014-07-14T14:38:50Z
2908,Fixed #22971 -- Properly parsed RFC 2388 encoded headers,"Thanks homm for the report.
",claudep,None,2014-07-12T13:45:42Z,2014-08-14T09:50:38Z
2907,More precise app registry ready,,aaugustin,None,2014-07-12T13:45:35Z,2014-07-12T16:47:16Z
2906,"Add a Makefile, which allows for easy `make test`","This makes a stab at providing a stub for a Makefile, currently only for providing `make test`.

It automatically sets up a virtualenv in `build/virtualenv` and honors `DJANGO_SETTINGS_MODULE` from the environment.

I think it makes a lot of sense for a project to provide an easy way to run the tests, and nothing beats `make test`.

Not having `make` available by default on some systems (e.g. on Windows) should not prevent us from providing an easy entry point.
",blueyed,None,2014-07-11T20:17:05Z,2017-03-25T21:42:37Z
2905,Fixed #23005 -- Allowed specifying special fallback languages,"This fixes the Chinese language issues described in #23005 but
also provides for other fallback exceptions by updating the
LANG_INFO structure.
",claudep,None,2014-07-11T19:07:38Z,2014-07-14T18:50:54Z
2904,Alphabetize django.utils sections in docs,"Contents sections before:

```
...
django.utils.text
django.utils.translation
django.utils.timezone
django.utils.tzinfo
...
```

Contents sections after:

```
...
django.utils.text
django.utils.timezone
django.utils.translation
django.utils.tzinfo
...
```
",frewsxcv,None,2014-07-11T18:29:41Z,2014-07-16T17:55:16Z
2903,Fixed #23001 -- Fixed mixing defer and annotations,"I've tested the above on sqlite and postgres, and all tests are passing. I'm not sure that removing the `fill_cache` check in the if block is the right way to go about things though. Perhaps someone with more knowledge of the ORM can take a look and validate the approach.
",jarshwah,None,2014-07-11T08:10:35Z,2014-08-12T23:20:05Z
2902,Fixed #22267 -- Fixed unquote/quote in smart_urlquote,,claudep,None,2014-07-10T21:19:59Z,2014-09-15T15:54:27Z
2901,Fixed #22956 -- Made PermissionManager.get_by_natural_key use the ...,"... specified database for content type lookup. 

see: https://code.djangoproject.com/ticket/22956
",Jyrno42,None,2014-07-10T14:05:33Z,2014-07-31T17:36:19Z
2900,Fixed #22988 - incorrect introspection test,,jarshwah,None,2014-07-10T02:25:05Z,2014-07-10T04:49:26Z
2899,Fix #21272 - Oracle inspectdb includes Views,"Includes VIEWS in inspectdb output, bringing parity to Oracle. See https://code.djangoproject.com/ticket/21272
",jarshwah,None,2014-07-09T14:10:11Z,2014-09-22T09:10:39Z
2898,Fixed #19671 -- Added warnings and updated docs for ignored 'null' and 'validators' in M2MField. Admin filter changed to avoid checking null on M2MField,"Thanks Loic Bistuer and Tim Graham for help and review.
",coder9042,None,2014-07-09T11:47:53Z,2014-07-10T04:32:26Z
2897,Fixed #19671 -- M2M 'validators' run when form's full_clean() is called.,"Have a look at my comments on the ticket: https://code.djangoproject.com/ticket/19671 for why I think this should be done and also about docs update
",coder9042,None,2014-07-09T07:50:44Z,2014-07-09T08:36:12Z
2896,Fixed #13794 -- Fixed to_field usage in BaseInlineFormSet.,,timgraham,None,2014-07-08T20:06:34Z,2014-07-09T12:09:00Z
2895,Fixed #22972 -- HashedFilesMixin.patterns should limit URL matches to their respective filetypes,"Please see https://code.djangoproject.com/ticket/22972 for context.
",aehlke,None,2014-07-08T15:28:41Z,2016-06-23T04:30:02Z
2894,[Soc2014] The new Options API,"# Main API

Official Wiki page: https://code.djangoproject.com/wiki/new_meta_api

get_fields(m2m, data, related_m2m, related_objects, virtual,
include_parents, include_non_concrete, include_hidden, include_proxy) -> (field, field, ...)

get_field(field_name, m2m, data, related_m2m, related_objects, virtual) -> field

field_names -> (field_name, field_name, ..)
# Cached properties for fast access

fields -> (field, field, ..)
concrete_fields -> (field, field, ...)
local_concrete_fields -> (field, field, ...)
field_names (field_name, field_name, ..)
# Benchmarks

(compared to master)

| Benchmark Name | Control | Experiment | Diff |
| --- | --- | --- | --- |
| url_resolve_flat_i18n_off | 0.3224664569 | 0.3128736854 | 0.0095927715 (2.97% faster) |
| url_resolve_flat | 0.2262115002 | 0.2201457143 | 0.0060657859 (2.68% faster) |
| query_prefetch_related | 0.1185187101 | 0.1131614804 | 0.0053572297 (4.52% faster) |
| query_all | 0.0260368466 | 0.0244047880 | 0.0016320586 (6.27% faster) |
| query_select_related | 0.0590585470 | 0.0582756639 | 0.0007828832 (1.33% faster) |
| query_raw | 0.0150311589 | 0.0149269700 | 0.0001041889 (0.69% faster) |
| query_distinct | 0.0003427148 | 0.0003322124 | 0.0000105023 (3.06% faster) |
| url_resolve | 0.0174066782 | 0.0174011946 | 0.0000054836 (0.03% faster) |
| template_render_simple | 0.0001164556 | 0.0001118183 | 0.0000046372 (3.98% faster) |
| query_delete_related | 0.0003562689 | 0.0003521204 | 0.0000041485 (1.16% faster) |
| form_create | 0.0001154184 | 0.0001116633 | 0.0000037551 (3.25% faster) |
| model_creation | 0.0002620935 | 0.0002592921 | 0.0000028014 (1.07% faster) |
| query_iterator | 0.0002910018 | 0.0002886057 | 0.0000023961 (0.82% faster) |
| form_clean | 0.0000283957 | 0.0000273466 | 0.0000010490 (3.69% faster) |
| url_resolve_nested | 0.0001253605 | 0.0001250029 | 0.0000003576 (0.29% faster) |
| query_delete | 0.0002635837 | 0.0002634764 | 0.0000001073 (0.04% faster) |
| raw_sql | 0.0000513077 | 0.0000515938 | -0.0000002861 (0.56% slower) |
| template_render | 0.0123201489 | 0.0123205304 | -0.0000003815 (0.00% slower) |
| query_none | 0.0001389146 | 0.0001396894 | -0.0000007749 (0.56% slower) |
| query_all_multifield | 0.0442516685 | 0.0442527294 | -0.0000010610 (0.00% slower) |
| multi_value_dict | 0.0001797199 | 0.0001827717 | -0.0000030518 (1.70% slower) |
| query_count | 0.0002346754 | 0.0002384424 | -0.0000037670 (1.61% slower) |
| locale_from_request | 0.0008673787 | 0.0008715868 | -0.0000042081 (0.49% slower) |
| query_exclude | 0.0005133271 | 0.0005178809 | -0.0000045538 (0.89% slower) |
| query_latest | 0.0003925323 | 0.0003977776 | -0.0000052452 (1.34% slower) |
| model_delete | 0.0004462004 | 0.0004532099 | -0.0000070095 (1.57% slower) |
| query_order_by | 0.0003699422 | 0.0003770232 | -0.0000070810 (1.91% slower) |
| query_aggregate | 0.0003185034 | 0.0003258467 | -0.0000073433 (2.31% slower) |
| default_middleware | 0.0004270792 | 0.0004346967 | -0.0000076175 (1.78% slower) |
| query_filter | 0.0004306793 | 0.0004388094 | -0.0000081301 (1.89% slower) |
| query_update | 0.0002333641 | 0.0002430677 | -0.0000097036 (4.16% slower) |
| query_in_bulk | 0.0004901409 | 0.0005011201 | -0.0000109792 (2.24% slower) |
| query_dates | 0.0005465746 | 0.0005576730 | -0.0000110984 (2.03% slower) |
| query_annotate | 0.0006684303 | 0.0006795764 | -0.0000111461 (1.67% slower) |
| query_values | 0.0003065467 | 0.0003197312 | -0.0000131845 (4.30% slower) |
| query_complex_filter | 0.0001333117 | 0.0001471758 | -0.0000138640 (10.40% slower) |
| query_values_list | 0.0002993703 | 0.0003140211 | -0.0000146508 (4.89% slower) |
| template_compilation | 0.0005861163 | 0.0006127477 | -0.0000266314 (4.54% slower) |
| query_get_or_create | 0.0013090134 | 0.0013397813 | -0.0000307679 (2.35% slower) |
| l10n_render | 0.0063407421 | 0.0063731670 | -0.0000324249 (0.51% slower) |
| query_exists | 0.0009287477 | 0.0009753466 | -0.0000465989 (5.02% slower) |
| qs_filter_chaining | 0.0008348227 | 0.0009381652 | -0.0001033425 (12.38% slower) |
| query_raw_deferred | 0.0182870388 | 0.0186469555 | -0.0003599167 (1.97% slower) |
| model_save_new | 0.0142104745 | 0.0145826817 | -0.0003722072 (2.62% slower) |
| model_save_existing | 0.0140855193 | 0.0145498991 | -0.0004643798 (3.30% slower) |
| query_get | 0.0273179531 | 0.0280359745 | -0.0007180214 (2.63% slower) |

Sum of all benchmarks (bigger is better): 0.0212707281
",PirosB3,None,2014-07-08T13:37:41Z,2014-12-19T16:34:41Z
2893,Added a unit test to ensure models cannot be ordered by a M2M field,,PirosB3,None,2014-07-08T09:27:23Z,2014-07-08T13:19:59Z
2892,Add convenience functions to test client for ajax requests.,,jdufresne,None,2014-07-07T23:54:23Z,2014-07-08T14:39:07Z
2891,Soc2014 meta refactor upgrade flags,,PirosB3,None,2014-07-07T17:00:04Z,2014-07-08T13:44:32Z
2890,Fixed #22939 -- Delayed admin_static backend detection,,claudep,None,2014-07-07T08:19:10Z,2014-07-12T13:59:09Z
2889,Fixed a few PEP8 errors in settings doc.,,collinanderson,None,2014-07-06T22:31:18Z,2014-07-07T19:28:53Z
2888,Fixed #22967 -- Made Model._do_update consistent,"Made _do_update behave more strictly according to its docs,
including a corner case when specific concurent updates are
executed and select_on_save is set.
",knaperek,None,2014-07-06T20:41:24Z,2014-11-12T10:46:26Z
2887,Various doc fixes,,blueyed,None,2014-07-05T18:58:07Z,2014-07-06T03:57:32Z
2886,"Added a space before explanation of ""Invalid HTTP_HOST header: ...""","Please let me know if you prefer to have the space at the end of `""Invalid HTTP_HOST header: %r.""`, or just amend/commit it accordingly.
",blueyed,None,2014-07-05T18:57:27Z,2017-03-25T21:42:14Z
2885,Fixed #21079 -- Further normalized table names in inspectdb,"Thanks Michael Manfre for the report.
",claudep,None,2014-07-05T18:51:03Z,2014-07-06T19:20:20Z
2884,Update AUTHORS,"My name wasn't in alphabetical order in the list.  ""Eric Palakovich Carr"" should be sorted by ""P"", not ""C"".
",bigsassy,None,2014-07-05T14:01:48Z,2014-07-06T00:18:28Z
2883,Fixed pyinotify performance regression in 15f82c7011,"Fixes again #9722.
",claudep,None,2014-07-05T12:45:54Z,2014-07-06T19:47:40Z
2882,Fixed #901 -- Added Model.refresh_from_db() method,,akaariai,None,2014-07-05T06:06:33Z,2016-08-11T11:20:26Z
2881,Fixed #22943 -- Correctly serialize compiled regexes.,"Thanks to antialiasis at gmail dot com for the patch.
",charettes,None,2014-07-04T16:51:11Z,2014-07-05T23:37:10Z
2880,Fixed #21832,"1st commit: Updates code, tests and docs.
2nd commit: Way to create fk instance at command line.
",coder9042,None,2014-07-04T16:22:53Z,2014-07-08T12:26:59Z
2879,<< FOR BUILD PURPOSES ONLY>>,,PirosB3,None,2014-07-04T14:02:01Z,2014-07-07T17:00:26Z
2878,Fixed #22950 -- Eased markup customization for choice field rendering,"Thanks Patrick Robertson for the report.
",claudep,None,2014-07-04T11:57:05Z,2014-07-05T11:37:36Z
2877,"Updated the urlize regex to prevent it from turning some.organization, an.inter...","...n etc. into urls. Added a test to make sure this is not happening.

Changes made per this [request](https://github.com/django/django/commit/a93ee5112d42d37187e30aa4edcc1864a79d384a#commitcomment-6888030)
New changes should match foo.com foo.com/bar but not foo.commercial.
",camfulton,None,2014-07-03T20:43:28Z,2014-07-04T07:02:54Z
2876,Using recommended way of localising a naive datetime.,"Since pytz 2014.3, doing .replace will use LMT timezones
which are not particularly useful.

The recommended way of avoiding this, is to use utc (or
whatever timezone you are using) .localize(naive).
",radiosilence,None,2014-07-03T14:18:47Z,2014-07-31T16:57:37Z
2875,"Added support for urls with no prefix (www, http(s)) and chars after the...","... closing TLD to urlize. Should now match google.com/foo/bar etc.
",camfulton,None,2014-07-02T15:59:50Z,2014-07-03T00:38:36Z
2874,Soc2014 meta refactor upgrade,"# Main API

get_fields(types, opts) -> (field, field, ...)
get_field(field_name, include_related=False) -> field
# Cached properties for fast access

fields -> (field, field, ..)
concrete_fields -> (field, field, ...)
local_concrete_fields -> (field, field, ...)
field_map -> { field_name : field, field_name: field, .... }
concrete_field_map -> { field_name : field, field_name: field, .... }
",PirosB3,None,2014-07-02T11:09:58Z,2014-07-08T13:43:16Z
2873,Fixed #20003 -- Improved and extended URLValidator,"Another attempt at fixing issue 20003, as it was previously attempted in #998.

This adds support for user:password in URLValidator supported URLs.

Additionally, the test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments, like
allowing local and reserved IPs).

The previous URL validation RegEx failed this test suite on 13
occasions, so I also updated the URLValidator based on
https://gist.github.com/dperini/729294 to correctly validate all URLs in
the test suite. Among other improvements, this also adds support for
IPv4 mapped IPv6 addresses like `::ffff:192.0.2.128` and support for
unicode domain names.

Docs have also been improved.
",dbrgn,None,2014-07-02T07:37:14Z,2015-03-15T14:40:21Z
2872,Fixed #22935 -- Changed the default_error message in FK to refer to correct field.,,coder9042,None,2014-07-02T06:45:23Z,2014-07-02T17:02:14Z
2871,Show what module/function is missing when raised.,"Related to comment on 98949e3b108100a40cb6ad59be78f33580439fef
",cwood,None,2014-07-01T20:43:59Z,2014-07-02T18:00:39Z
2870,Remove non-existent reference to args/kwargs,"Originally noticed by @ramiro in https://github.com/django/django/commit/31fadc120213284da76801cc7bc56e9f32d7281b#commitcomment-3725813
",merwok,None,2014-07-01T18:23:31Z,2014-07-02T15:47:37Z
2869,Fixed #22933 -- Deprecated django.template.resolve_variable().,"https://code.djangoproject.com/ticket/22933
",timgraham,None,2014-07-01T13:33:35Z,2014-07-01T21:30:56Z
2868,Fixed #22915 -- Document backward incompatible changes in the Validation...,"...Error constructor.

This patch also fixes update_error_dict to better handle the use case described
in this ticket, previously the type of the provided container could be lost in
some conditions.
",loic,None,2014-07-01T07:43:09Z,2014-07-04T10:23:34Z
2867,Fixed #20631 -- Increased the default EmailField max_length to 254.,,timgraham,None,2014-06-30T18:53:20Z,2014-07-04T18:20:50Z
2866,Fixed #21755 -- Added FK support for REQUIRED_FIELDS.,,coder9042,None,2014-06-30T17:35:39Z,2014-07-03T11:44:54Z
2865,Fixed problem with refs #10811.,"When 'to_field' specified with FK, then need to check pk value of object passed.
",coder9042,None,2014-06-30T13:45:23Z,2014-06-30T15:57:11Z
2864,Add missing spaces to implicitly joined strings,,Ian-Foote,None,2014-06-29T21:57:22Z,2014-06-30T11:27:56Z
2863,Fixed #22724 -- Make SingleObjectMixin.get_queryset more overridable.,"https://code.djangoproject.com/ticket/22724
",msoedov,None,2014-06-29T19:19:27Z,2014-11-10T20:36:49Z
2862,Fixed #22925 -- Provide ability to specify ModelForm fields as required explicitly,"https://code.djangoproject.com/ticket/22925
",coldmind,None,2014-06-29T17:34:41Z,2014-06-29T19:20:24Z
2861,Fixed #22920 - AppConfig.create swallows informative exceptions during import time,"See https://code.djangoproject.com/ticket/22920#ticket
",bendavis78,None,2014-06-28T09:38:27Z,2014-08-31T16:57:53Z
2860,help: use global configuration if subcommand is help,"Hi

i'm new user of @django, and i run `django-admin.py help check`, then my shell prints:

```
django.core.exceptions.ImproperlyConfigured: Requested setting DEFAULT_INDEX_TABLESPACE, 
but settings are not configured. You must either define the environment variable 
DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.
```

I traced this problem is because i haven't configured my django settings file by `DJANGO_SETTINGS_MODULE`. but i don't think this should be set in help command, so i make this patch that use global configuration under `django-admin.py help [subcommand]`.
",yorkie,None,2014-06-27T12:47:37Z,2014-06-27T14:05:41Z
2859,Fixed #22223 -- Prevented over-escaping URLs in reverse(),"And follow more closely the class of characters defined in the
RFC 3986.
Thanks Erik van Zijst for the report and the initial patch.
",claudep,None,2014-06-26T15:20:17Z,2014-07-09T07:55:35Z
2858,Soc2014 meta refactor performance,,PirosB3,None,2014-06-26T12:47:04Z,2014-07-04T15:15:53Z
2857,Fixed #8162 -- Increased Permission.name max_length to 255 characters.,,timgraham,None,2014-06-26T11:00:32Z,2014-06-30T18:33:22Z
2856,Fixes parameter name for BaseCommand.check,"This fixes a typo in the docs for [custom management commands](https://docs.djangoproject.com/en/1.7/howto/custom-management-commands/) on [`BaseCommand.check`](https://docs.djangoproject.com/en/1.7/howto/custom-management-commands/#django.core.management.BaseCommand.check)
",gvangool,None,2014-06-26T09:48:05Z,2014-06-26T11:24:24Z
2855,#8162 increase auth_permission.name max_length from 50 to 100,"https://code.djangoproject.com/ticket/8162
",debnet,None,2014-06-26T06:07:04Z,2014-06-26T11:00:49Z
2854,Fixed #20189 - Define default ignore patterns in settings.,"Updated patch,

see https://code.djangoproject.com/ticket/20189
",tricoder42,None,2014-06-26T05:45:14Z,2014-07-02T12:06:07Z
2853,#22907 - Test: ArrayField(CharField(...)) can't be queried,"When trying to make query with CharArrayModel.objects.filter(field__contains=['text']) I get:

```
ProgrammingError: operator does not exist: character varying[] @> text[]
LINE 1: ...el"" WHERE ""postgres_tests_chararraymodel"".""field"" @> ARRAY['...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
```
",Suor,None,2014-06-26T05:25:12Z,2014-06-26T12:15:30Z
2852,Fixed #22906 -- Give ModelState a __repr__().,"https://code.djangoproject.com/ticket/22906
",collinanderson,None,2014-06-26T01:16:11Z,2014-07-06T08:06:25Z
2851,"Fix grammar, spelling and formatting for new `HTML forms` docs",,Matt-Deacalion,None,2014-06-26T00:25:18Z,2014-06-26T17:58:57Z
2850,Fix class name in StreamingHttpResponse doc,,merwok,None,2014-06-25T22:43:56Z,2014-06-26T13:52:59Z
2849,Fixed #22903 -- Fixed migration generation if index_together or unique_together is removed from a model.,,timgraham,None,2014-06-25T12:54:54Z,2014-06-25T14:04:53Z
2848,Fix typo in middleware docs.,"Function definition should have an ending colon.
",slix,None,2014-06-24T18:17:19Z,2014-06-24T20:08:34Z
2847,Fixed #22894 -- admin: make add related behaviour customizable,"Decouple behaviour and style from the RelatedFieldWidgetWrapper
widget so it's easier to customize.
This makes life easier for people that want to say use a modal
or just style it differently.

While at it in change_form.html start consolidating document ready
event listeners in one place.

Fixes #22894
",xrmx,None,2014-06-24T14:35:02Z,2014-06-27T07:04:40Z
2846,Fixed #21668 -- Return detailed error page when SuspiciousOperation is raised and DEBUG=True,,coder9042,None,2014-06-24T12:39:39Z,2014-06-24T13:09:51Z
2845,Fixed problem introduced with #refs 13711.,"Fixed Model check failures on Oracle.
",coder9042,None,2014-06-23T15:31:56Z,2014-06-23T16:37:58Z
2844,Fixed test failures introduced by refs #22881.,,timgraham,None,2014-06-23T12:50:35Z,2014-06-23T14:01:07Z
2843,Fixed: #12203 ManyToManyField with explicit through model can't be used ...,"...as an admin field

If user has defined through fields then return with no error
",vin-ai,None,2014-06-23T10:05:55Z,2014-07-08T11:59:12Z
2842,Fixed #22880 -- Added FAQ entry about UnicodeDecodeError,,claudep,None,2014-06-23T07:29:41Z,2014-06-24T07:05:11Z
2841,Fixed #22880: Troubleshooting info about locale when running makemessages,,valberg,None,2014-06-22T21:02:08Z,2014-06-23T13:55:13Z
2840,Do not hardcode the primary key field name in admin's initial migration.,"This enables users of django admin to use custom user models (configured through settings.AUTH_USER_MODEL) using a primary key with a name different from 'id' (use case: 'email' or 'login' are common natural primary keys).

It's not necessary to include the field name, the default behavior of models.ForeignKey is to look up the primary key field name from the target model.
",korfuri,None,2014-06-22T02:40:49Z,2014-06-23T17:22:53Z
2839,Fixed #22879 -- Wrapped cursor iterator to intercept database errors coming from __next__ method.,"...ethod.

This is needed for django-sqlserver driver.

Ticket #22879
",denisenkom,None,2014-06-21T20:21:26Z,2014-10-27T12:44:38Z
2838,Fixed #8033 -- Explained app registry error during translation setup,,claudep,None,2014-06-21T13:07:55Z,2014-06-23T07:38:52Z
2837,Fixed #22857 -- Reset translations when only .mo file changed,,claudep,None,2014-06-21T09:43:12Z,2014-06-26T08:08:06Z
2836,Fixed #22734 -- Moved SMTP-related settings to a dictionary,"Thanks Julian Wachholz for the report and the initial patch.
",claudep,None,2014-06-20T18:29:46Z,2014-09-10T14:49:58Z
2835,http: add 308 status and its description,"see RFC7238
:)
",yorkie,None,2014-06-20T14:24:29Z,2014-06-20T17:36:30Z
2834,Fixed #22791 -- Invoke interactive questioner only for conflicts in specified apps,,whoshuu,None,2014-06-20T03:12:49Z,2014-07-14T15:02:32Z
2833,Fixed #22862 -- Add noinput option to makemigrations and create migration when conflict is easily merged in noinput mode,,whoshuu,None,2014-06-20T03:10:39Z,2014-06-20T12:57:51Z
2832,Fixed #22836 -- Linked tutorial05 to the right section of tutorial04.,,maxocub,None,2014-06-20T01:46:40Z,2014-06-20T13:08:16Z
2831,Replace README terminology with GETTINGSTARTED,"Political correctness has in recent years become a important part of the tech industry, and specially for the Django project as #2692 and #2694 have proven. Because [other](https://www.drupal.org/node/2275877) projects are now also considering to follow Django's example, I believe it is important for Django to be pro-active in this area.

Due the above stated reasons, I hereby propose renaming Django's `README.rst` file to `GETTINGSTARTED.rst`. The term ""readme"" can be considered insulting, taunting, and bullying towards any person who can not read.

By getting rid of the ""README"" terminology, the Django project would be further proving that political correctness is an important topic that is taken seriously.
",jimeh,None,2014-06-19T20:13:38Z,2014-06-20T00:42:52Z
2830,Replace primary/replica terminology with primary/secondary,"Political correctness has in recent years become a important part of the tech industry, and specially for the Django project as #2692 and #2694 have proven. Because [other](https://www.drupal.org/node/2275877) projects are now also considering to follow Django's example, I believe it is important for Django to be pro-active in this area.

Due the above stated reasons, I hereby propose changing the primary/replica terminology to primary/secondary. ""replica"" will most likely be a highly insulting and derogatory term used to describe human clones and human-like companion AIs in the near future.

By using primary/secondary instead of primary/replica, the Django project would be further proving that political correctness, and pro-active political correctness is an important topic that is taken seriously.
",jimeh,None,2014-06-19T20:13:29Z,2014-06-20T15:17:23Z
2829,Fixed #22867 Pickling models is slow in alpha versions,,Suor,None,2014-06-19T09:15:38Z,2014-06-19T14:46:48Z
2828,Refactored common code in handlers/base.py and urlresolvers.py,"**What is done**:
- Refactored handlers into generic ones.
- Deprecated original default views.
- Added generic views.

**Improvements Required**:
- Docs build have several warnings due to removing original handlers.
- A writeup for new views.

**Suggestions**:
- We could add two generic exceptions also: `HttpClientException` and `HttpServerException` to add onto the functionality.
",coder9042,None,2014-06-18T20:34:41Z,2014-06-23T19:28:25Z
2827,Ensure internal migrations are done first so that __first__ always works,"Fixes #22861
",SmileyChris,None,2014-06-18T05:00:30Z,2014-06-18T06:29:30Z
2826,Fixed #22835 -- Deprecated NoArgsCommand,"- Added warning to the class
- Added note in 1.8 release notes
- Added note in deprecation.txt
- Replaced occurences of NoArgsCommand by BaseCommand
",maxocub,None,2014-06-17T23:29:53Z,2014-06-19T12:58:49Z
2825,Tutorial: Consistent url syntax,,collinanderson,None,2014-06-17T16:23:39Z,2014-06-17T18:13:11Z
2824,Fixed #22577: Python 3 broke on non-module migrations directory,,valberg,None,2014-06-17T15:51:00Z,2014-06-17T16:54:39Z
2823,Soc2014 meta unittests,"Contains:
- unit tests for current implementation of Options
- renamed to models_meta to avoid name clashes
",PirosB3,None,2014-06-17T11:17:40Z,2014-06-19T17:01:47Z
2822,"Fixed #22756, added view name to technical 404 template ","when Http404 is raised by view.
",jooyous,None,2014-06-17T08:28:14Z,2014-06-30T19:35:18Z
2821,"Fixed #14481 -- Documented ""through"" class created by ManyToManyField.","This is for the case when ""through"" is not passed as parameter of the
field.

Thanks to jonathanmorgan for the report and initial patch.
",jorgecarleitao,None,2014-06-16T19:35:19Z,2014-06-18T16:41:41Z
2820,Added database migration for contrib.sessions.,,timgraham,None,2014-06-16T14:19:47Z,2014-06-16T15:59:55Z
2819,Fixed #22788: Ensure custom migration operations can be written.,"References #22788. (https://code.djangoproject.com/ticket/22788)

This inspects the migration operation, and if it is not in the
django.db.migrations module, it adds the relevant imports to the
migration writer, and uses the correct class name.
",schinckel,None,2014-06-16T13:43:17Z,2014-06-16T16:39:21Z
2818,Fixed #22484: Initial admin migration looked for a non-existing AUTH_USER_MODEL app.,,valberg,None,2014-06-16T13:37:58Z,2014-06-16T18:33:48Z
2817,Fixed #22845 -- Correctly handle memcached default timeout value,,a1tus,None,2014-06-16T08:50:23Z,2014-06-16T20:51:25Z
2816,Fixed #22745 -- Prevented reevaluation of ModelChoiceField's queryset when accesssing BoundField's attrs,,a1tus,None,2014-06-16T07:55:30Z,2014-08-04T11:51:32Z
2815,Fixed #22788: correctly handle custom migrations in writer,"As per https://code.djangoproject.com/ticket/22788, fix the migration operation writer,
so it works with custom migration operations.
",schinckel,None,2014-06-16T01:59:59Z,2014-06-16T13:44:34Z
2814,Added database migration for contrib.sites.,"refs #22170.
",timgraham,None,2014-06-15T21:31:36Z,2014-06-15T23:29:17Z
2813,Fixed #22808 -- ModelMultipleChoiceField does not properly check if valu...,"...e is valid

Added TypeError to exception list when validating primary key value in ModelChoiceField and ModelMultipleChoiceField.
",thnee,None,2014-06-15T20:24:49Z,2014-08-21T12:47:59Z
2812,Simplify Query and friends.,"The general line I'm following here is to assume that `SQLCompiler`, `SQLEvaluator`, `Query`, etc. are interfaces that in the future could become part of the Django public API (e.g. backends with specific functionality, other sql dialects, etc).

Independently of this line be followed or not, I only see advantages in having the API internally clean, thus this PR.

Changes:
- c9030dc makes 3 attributes of SQLCompiler private (underscored) since they are not used outside it.
- fd33806 defines a public (not Django public, class public) interface of Query for getting data from its `deferred_loading` (e.g. for the SQLCompiler):

`deferred_loading` is now exposed by two methods: `get_loaded_field_names` and `get_loaded_columns`.

In particular, before we would use

```
columns = {}
query.deferred_to_data(columns, query.deferred_to_columns_cb) # `deferred_to_columns_cb` is a function(!)
```

now we use

```
columns = query.get_loaded_columns()
```

Should I open a ticket for this particular change (like I did in [#22826](https://code.djangoproject.com/ticket/22826)), or should I open a broader ticket and let this PR be its ground to internal simplifications of `Query`?
",jorgecarleitao,None,2014-06-15T16:59:54Z,2014-08-13T12:54:31Z
2811,Fixed #22838 -- Deprecated ModelChoiceField.cache_choices.,"Undocumented, untested and probably not even useful feature.
",mjtamlyn,None,2014-06-15T11:04:45Z,2014-06-21T07:23:46Z
2810,Fixed #22842,"Changed the tutorial part 5 as in:
https://code.djangoproject.com/ticket/22842
",soujiro86,None,2014-06-15T10:53:26Z,2014-06-15T11:11:37Z
2809,admin: view site link,"related to feature request 13749 https://code.djangoproject.com/ticket/13749
",nemesisdesign,None,2014-06-15T10:27:12Z,2014-07-27T16:50:00Z
2808,Stable/1.7.x,,huang119112,None,2014-06-15T08:45:11Z,2014-06-18T04:33:42Z
2807,Fixed #22812 - Reformat and restructure lookup API documentation,"Ticket [#22812](https://code.djangoproject.com/ticket/22812)

The commits are separated to facilitate reviewing: all text related can be reviewed on commit 12acee0 and 41a4494. The middle commit is just renaming with cascade to other docs.
- 12acee0 adds the references for `RegisterLookupMixin` and correctly formats attributes and methods of class `Transform` and `Lookup`, also improving some text (not worrying about 80 lines wrap and such).
- 41a4494 focus on improving the ref/models/lookups.

For now, I would like to ask for a general feedback on the structure and format, in particular to @akaariai: there may be things that are not correct.

There maybe parts of refs/models/query.txt that could be here, but I will bring that discussion to the ticket.

Once we have a structure defined, I will start working out 80 chars wrapping, fixing documentation warnings, etc to make it RFC :-)
",jorgecarleitao,None,2014-06-14T19:33:18Z,2014-07-09T00:13:09Z
2806,Fixed #22826 -- Improved internal usage of Query.setup_joins.,"This is a small PR that IMO is made of trivial changes in the guidelines for contributing sense; the commits are independent for reviewing.
",jorgecarleitao,None,2014-06-14T13:49:06Z,2014-06-15T09:17:15Z
2805,Fixed #22349 -- Added a note clarifying `RawQuerySet` has no `__len__`.,"Thanks cdestigter for the report.
",mmardini,None,2014-06-12T17:49:27Z,2014-06-12T20:42:54Z
2804,Fixed #22814 -- Allowed ISO-8601 [+-]hh timezone format in parse_datetime,,Naddiseo,None,2014-06-12T16:01:48Z,2014-06-12T17:06:04Z
2803,Silenced deprecation warnings for refs #22811 and fixed build.,,timgraham,None,2014-06-12T13:29:00Z,2014-06-12T14:52:50Z
2802,Fixed #19501 -- added Model.from_db() method,"Implements a new from_db() method for models. The method can be used to customize or speed up model loading.
",akaariai,None,2014-06-12T12:37:50Z,2014-07-03T13:24:21Z
2801,Update __init__.py,"fix lazy_number for python 2.7
",kwist-sgr,None,2014-06-12T12:29:56Z,2014-06-15T09:42:56Z
2800,"Added cd command to ensure ""git remote add upstream"" command works",,josh-parris,None,2014-06-12T01:27:00Z,2014-06-12T14:53:16Z
2799,Update validation.txt - Fix markdown typo,"Fix a typo which make a formatting error in the HTML output. Since it is just a character change, there is no need of a ticket according to guidelines.
",mlorant,None,2014-06-11T21:14:51Z,2014-06-12T10:19:37Z
2798,Fixed #22811 -- Allowed setting both the old and new TEST database settings.,"https://code.djangoproject.com/ticket/22811
",timgraham,None,2014-06-11T19:39:33Z,2014-06-12T12:18:24Z
2797,Added link to data migrations in initial data deprecation note,"The deprecation note for using initial data mentions migrations as a suitable replacement however it doesn't give a link to access it easily. This commit fixes that by adding a link to the docs for data migrations.

There isn't a ticket for this, I just came this piece of the docs earlier and thought it would be helpful to have. If a ticket is needed though let me know.
",gchp,None,2014-06-11T18:50:26Z,2014-06-12T08:32:17Z
2796,Fixed 22809 -- Added API references for model fields.,"This still requires a revision, but gives an idea of what I've been doing for the ticket.

28998b0 only moves the .. class:: Field declaration.
387370d removes a similar statement already appearing in the document
86aa1f0 does a major formatting change on the document, but only changing ""\n"" and "" "" characters.
745eec2 fixes [ticket 22809](https://code.djangoproject.com/ticket/22809), moving all method declarations from howto to refs, changing the text the least possible amount to mantain compatibility.

Both sections of the docs still require a major editorial process on wording and references to models.
",jorgecarleitao,None,2014-06-11T17:11:35Z,2014-07-10T10:04:54Z
2795,Remove trailing slashes from test labels.,"When using tab-completion it's easy to accidentally run a test with
a trailing slash, which causes INSTALLED_APPS to be set incorrectly.
Normalize the test labels to avoid this common error.
",prestontimmons,None,2014-06-11T15:12:05Z,2014-06-12T04:43:24Z
2794,Created a new tests folder (`model_options`).,"And moved `tablespaces` option tests to it.
The new folder can be used to test all models options, like the new option
added in refs #22778.
",mmardini,None,2014-06-10T19:36:57Z,2014-06-12T14:33:33Z
2793,Fixed #22801 -- Added 'www.' to diveintopython.net links,,maxocub,None,2014-06-10T19:17:20Z,2014-06-12T14:33:50Z
2792,[1.6.x] Fixed #22801 -- Added 'www.' to diveintopython.net links,,maxocub,None,2014-06-10T18:58:48Z,2014-06-18T03:05:21Z
2791,Fixed #22802 -- Updated Atomic class to use transaction functions.,"Changed Atomic class to make use of transaction-module-level API
functions instead of operating with connection directly, which allows
third-party libraries to more easily patch and customize transaction
management behavior and restores backwards-compatibility with
external libraries relying on this API.
",gdub,None,2014-06-10T18:46:42Z,2014-06-12T14:33:42Z
2790,Fixed #22477 -- Removed contrib middleware from the global settings defaults.,"Updated from https://github.com/django/django/pull/2591
",timgraham,None,2014-06-10T18:32:12Z,2014-06-13T16:56:26Z
2789,Fixed #22798 -- `pluralize()` now adds plural_suffix for any `1 < d < 2`,"Thanks Odd_Bloke for the report.
",mmardini,None,2014-06-10T18:29:39Z,2014-06-12T14:33:56Z
2788,Fixed #22770 -- Removed create_superuser from post_migrate signals.,,timgraham,None,2014-06-10T16:29:33Z,2014-06-12T08:59:57Z
2787,Close autoescape tag in template documentation.,,Damgaard,None,2014-06-10T10:56:49Z,2014-06-12T12:01:53Z
2786,Fixed #22792 -- Updated checks for list_display_links in model admin,"Thanks to @bendavis78 for the report.
",gchp,None,2014-06-10T10:49:53Z,2014-06-12T14:35:37Z
2785,Fixed #22778 -- Add an option to define default related_name,"Example:

  from django.db import models

  class Author(models.Model):
    name = ...

  class Editor(models.Model):
    name = ...

  class Book(models.Model):
    editor = models.ForeignKey(Editor, related_name=""books"")
    authors = models.ManyToManyField(Author, related_name=""books"")

The class Book can now be written :

  class Book(models.Model):
    class Meta:
      default_related_name = ""books""
    editor = models.ForeignKey(Editor)
    authors = models.ManyToManyField(Author)
",rparent,None,2014-06-10T09:38:18Z,2014-06-18T17:59:47Z
2784,Fixed #22804 -- Warned on unsafe value of 'sep=' in Signer,"Issues a warning if the the separator passed to `django.core.signing.Signer` is an invalid value.

See also: https://code.djangoproject.com/ticket/22804
",wolever,None,2014-06-09T22:22:25Z,2015-06-02T16:24:44Z
2783,Fixed #14334 -- Query relation lookups now check object types.,,coder9042,None,2014-06-09T20:24:16Z,2014-07-01T10:16:53Z
2782,Dropped support for spatialite < 2.4.,,timgraham,None,2014-06-09T20:04:18Z,2014-06-12T14:35:46Z
2781,Fixed #17552 -- Removed a hack for IE6 and earlier.,"Thanks Aaron Cannon for the report.
",aaugustin,None,2014-06-09T19:24:45Z,2014-06-12T14:35:43Z
2780,Fixed #19973 -- Replaced optparse by argparse in management commands,,claudep,None,2014-06-09T15:03:28Z,2014-06-14T11:49:22Z
2779,add proctitle option to runfcgi command,"This patch adds proctitle option to runfcgi command to overide title of the python process visible in output of ps, pstree, top, and other commands.
This is very helpful if you run multiple Django instances.
(It for example allows sys admin to use ""killall &lt;title&gt;"", etc.)
",misli,None,2014-06-09T14:02:12Z,2014-07-08T03:14:25Z
2778,Fixed #22799 Made GET and POST attributes of an HttpRequest object QueryDicts.,"Previously, `GET` and `POST` on an `HttpRequest` were created in the `__init__`
method as dictionaries. This was not something you would usually notice
causing trouble in production as you'd only see a `WSGIRequest`, but in
testing using the test client, calling `.getlist` on `GET` or `POST`
for a request with no get/post data used to result in an `AttributeError`.

Changed `GET` and `POST` on a vanilla `HttpRequest` object to be mutable
`QueryDict`s (mutable because the Django tests, and probably many
third party tests were expecting it).

Also added a regression test for this by adding calls to `.getlist` to
the test on a newly created `HttpRequest`.
",duncanparkes,None,2014-06-08T21:55:29Z,2014-06-25T02:08:36Z
2777,Ticket #20140 -- Different query counts under Oracle when savepoints are involved ,,aaugustin,None,2014-06-08T20:44:07Z,2014-06-13T16:07:51Z
2776,Fixed #22796 -- Added more basic explanations of forms,"Now explains some more basic form handling before discussing Django;
simplifies initial examples; defers explanation of more advanced
aspects until later in the document
",evildmp,None,2014-06-08T19:06:34Z,2014-06-24T18:58:03Z
2775,Gave unique names to SpatialRefSysModels.,"Prevented clashes in the app registry.

Fixed #22790. Thanks timo for the report.
",aaugustin,None,2014-06-08T07:55:49Z,2014-06-13T16:07:51Z
2774,Fixed #6992 -- Improved error when middleware omits HttpResponse.,"Thanks guettli for the report.
",aaugustin,None,2014-06-07T17:51:57Z,2014-06-13T16:07:51Z
2773,Fixed #18855: persist socket across runserver reloads,"Using livereload (livereload.com) with Django becomes painful when
updating a file immediately results in reloading the webpage AND
the Django dev server.  There is a short period of time when the dev
server is not listening as it is busy reloading (frequently hit
when using livereload). This is exacerabated with larger projects as reload
time is longer.

Huge thanks to Dan LaMotte for his work and efforts.
",umazalakain,None,2014-06-07T15:20:29Z,2014-07-03T13:23:36Z
2772,"Fixed #3711, #6734, #12581 -- Bounded connection.queries.","Prevented unlimited memory consumption when running background tasks
with DEBUG=True.

Thanks Rob, Alex, Baptiste, and others.
",aaugustin,None,2014-06-07T12:11:22Z,2014-06-14T12:42:10Z
2771,Fixed #22787 -- Created a default implementation of Model.natural_key().,,jianli,None,2014-06-07T10:12:14Z,2014-07-04T17:57:30Z
2770,Fixed #22776 -- `sqlall` can now be used with a specific model.,"Thanks smeatonj for the report.
",mmardini,None,2014-06-06T21:05:46Z,2014-06-12T16:41:22Z
2769,#22771: test.client: get user via contrib.auth.get_user,"Rely on contrib.auth.get_user just like AuthenticationMiddleware
",xavfernandez,None,2014-06-06T16:28:20Z,2018-11-21T12:45:53Z
2768,Fixed #16087 -- Added ResolverMatch instance to test client response,,gchp,None,2014-06-06T14:50:44Z,2014-06-13T12:56:19Z
2767,Fixed #22782 -- i18n attr to Sitemap class,"It makes possible to have your sitemap in multiple languages when using
i18n in URLs
",LuanP,None,2014-06-06T13:13:37Z,2014-06-20T17:05:11Z
2766,Fixed #21430 -- Warning raised when unpickling Models and QuerySet from different versions,"Thanks @charettes @akaariai @loic for help.
",coder9042,None,2014-06-06T10:25:40Z,2014-06-12T14:33:37Z
2765,Fixed #13528 -- Corrected the auto-truncation of db_table occurs in case...,"... of multi-db.
",coder9042,None,2014-06-06T07:05:28Z,2014-06-14T10:36:33Z
2764,Fixed #20550 -- Added keepdb argument to destroy_test_db,"Following a conversation on IRC, this patch adds the new `keepdb` argument to `BaseDatabaseCreation.destroy_test_db`.

I also updated the docs again, I missed the advanced testing section last time.
",gchp,None,2014-06-05T21:47:25Z,2014-06-13T09:13:28Z
2763,Fix missing highlighting in some code examples,,merwok,None,2014-06-05T18:54:33Z,2014-07-19T15:48:25Z
2762,Fixed RST syntax in 1.8 release docs.,,zsiciarz,None,2014-06-05T10:32:08Z,2014-07-19T15:48:28Z
2761,Fixed #22710 -- Amended aggregation note for empty QuerySets,"Thanks smeaton for report and Joël Rochat for spell check
",gyx1000,None,2014-06-04T14:05:00Z,2014-06-18T05:41:22Z
2760,Autodetector rewrite,"This is an entire rewrite of the autodetector to be more extensible and actually contain things like logic and computer science rather than just throwing things into lists in a rough order and hoping.

All current tests pass, but I want to make sure it matches what people expect too before merging.
",andrewgodwin,None,2014-06-04T08:27:49Z,2014-06-12T08:43:08Z
2759,[1.6.x] Fixed #21451 -- Fixed LiveServerTestCase 404,"Thanks to Aymeric Augustin for the report and initial patch.

I have't really done a whole lot on this, other than test that this does indeed fix the issue described in the ticket, and add a few small comments.

The ticket also mentions not applying the StaticFilesHandler if `STATIC_URL` is not defined. I did some investigating on this by writing a test and found that if the STATIC_URL is not set, the test was throwing an exception complaining about using the staticfiles app, but not having STATIC_URL set. Some more investigating[1] found that in Django 1.6 the LiveServerTestCase used the staticfiles contrib app, which requires STATIC_URL to be set. I don't see a way around this. If anyone has any suggestions, let me know.

[1] https://docs.djangoproject.com/en/1.6/topics/testing/tools/#django.test.LiveServerTestCase 
",gchp,None,2014-06-03T15:57:05Z,2014-06-12T06:59:32Z
2758,MySQL Connector/Python 1.2.2 GA has been released,,methane,None,2014-06-03T07:02:53Z,2014-06-15T14:51:23Z
2757,Fixed #13776 -- is_valid() in Modelform does not raises ValueError.,,coder9042,None,2014-06-03T04:12:38Z,2014-06-15T14:51:23Z
2756,Unicode method on model should return unicode,"The example of a __unicode__ model method should return a unicode value
instead of a string.

This helps us avoid errors like [these](http://twigstechtips.blogspot.com/2011/10/django-how-to-fix-annoying.html):

```
DjangoUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 52: ordinal not in range(128)
```
",tubaman,None,2014-06-03T03:53:53Z,2014-06-15T14:51:23Z
2755,Update OLMapWidget.js,"Deleting comma because IE8 (and below) will parse trailing commas in array and object literals incorrectly. 
",yES,None,2014-06-03T03:39:39Z,2014-06-15T14:51:23Z
2754,Fixed #22384 -- Deprecated reversing URLs by dotted path.,,timgraham,None,2014-06-02T22:26:04Z,2014-06-26T00:18:33Z
2753,Document a pre-existing but little known capability of the {% comment %} tag,"This is a first time I've submitted a patch to django:

The {% comment %} tag has a nice feature, and has since the start, but it's little known.
This patch documents the ability to add a meta note to a comment:

```
{% comment 'disabled for performance reasons, see github issue #2753' %}
    code...
{% endcomment %}
```

Which is super handy, and works in all past versions of django.  There's a matching trac ticket for this at https://code.djangoproject.com/ticket/22753#ticket
",brycenesbitt,None,2014-06-02T20:32:59Z,2014-06-23T06:02:10Z
2752,Added a patch review checklist.,"This shouldn't be anything new, but I find myself repeating a lot of these points. It should be a useful guide to circulate at the start of a sprint, for example.

Did I miss anything? Is anything unclear?
",timgraham,None,2014-06-02T20:14:10Z,2014-07-19T15:48:52Z
2751,Fixed #22746.,,kkoroviev,None,2014-06-01T22:36:50Z,2014-06-12T06:58:17Z
2750,Syntax error solved in ogrinspect.py script.,"The last bracket was passed as second param, solved passing a list of strings.
",avances123,None,2014-06-01T10:33:03Z,2014-07-02T20:46:18Z
2749,Fixed #18729 -- Added more precise use_distinct check for list_filter,"Added check to get_filters to only flag query for distinct based on
list_filter if that list_filter is actually being used.
Queries using distinct can be _very slow_ so should be avoided if
not needed.
",amalek215,None,2014-05-30T13:59:49Z,2016-10-11T14:42:31Z
2748,Improved #2744 after another review.,"Thanks apollo13 for the review.
",mmardini,None,2014-05-30T11:01:06Z,2014-06-16T08:10:13Z
2747,Properly close any file in request.FILES at the end of a request.,,apollo13,None,2014-05-30T10:30:43Z,2014-06-12T14:33:46Z
2746,change terminology to be more inclusive,"Master/slave distinction is too bigotted and oppressive. However, leader/follower replacement proposed recently, while improving, is too formal and not inclusive and loving enough. Hence I propose to change the distinction to inspirer/mistress, which does away with the past of sexual repression.
",mrkafk,None,2014-05-30T09:47:49Z,2014-06-13T12:50:00Z
2745,"Replaced occurances of the word ""black"" with something less racially insensitive","Following the example set by https://github.com/django/django/pull/2692, I believe this pull request is valid.
",CodeOtter,None,2014-05-30T07:08:50Z,2014-06-12T10:21:13Z
2744,Fixed #22682 -- `makemigrations` will create `MIGRATION_MODULES` package,"`makemigrations` will automatically create the package specified
in `MIGRATION_MODULES` if it doesn't already exist.

Thanks ovidiuc4 for the report.
",mmardini,None,2014-05-29T22:24:13Z,2014-06-13T04:04:58Z
2743,Making SQL management commands migration aware.,,valberg,None,2014-05-29T21:05:37Z,2014-06-15T09:39:56Z
2742,Fixed #22611 -- Making SQL management commands migration aware.,,valberg,None,2014-05-29T19:55:17Z,2014-06-24T05:25:16Z
2741,Soc2014 meta refactor,,PirosB3,None,2014-05-29T18:10:16Z,2014-06-26T12:45:56Z
2740,Fixed #21597 -- Recover from faulty connections.,"This implements a way of recovering from faulty MySQL Server connections when an error #2006 is issued from the MySQL Connection Adapter.
It renews the (already broken) MySQL Connection and also resets the faulty cursor by replacing its current instance with a brand new one.
",heyvito,None,2014-05-29T17:51:40Z,2014-06-12T06:59:26Z
2739,Fixed #21597 -- Recover from faulty connections.,"This implements a way of recovering from faulty MySQL Server connections when an error #2006 is issued from the MySQL Connection Adapter.
It renews the (already broken) MySQL Connection and also resets the faulty cursor by replacing its current instance with a brand new one.
",heyvito,None,2014-05-29T17:48:28Z,2014-07-19T15:49:16Z
2738,Fixed #13711 -- Model check added to ensure that auto-generated column name is within limits of the database.,"...ion.
",coder9042,None,2014-05-29T16:04:05Z,2014-06-17T20:16:53Z
2737,Fixed #22684 -- Amended SelectDateWidget.empty_label to accept a tuple of values.,"Thanks danielsamuels for the report
",gyx1000,None,2014-05-29T15:39:57Z,2014-06-14T10:38:44Z
2736,Fixed #22725 - Migration.run_before does nothing,"This attribute (used for reverse dependencies) was previously declared
and mentioned in the code, but never actually used.
",SmileyChris,None,2014-05-29T10:40:00Z,2019-09-26T19:42:29Z
2735,Fixed #22710 -- Document aggregation behaviour for empty QuerySets,"Thanks matklad for the report
",gyx1000,None,2014-05-29T06:56:58Z,2014-06-18T05:09:42Z
2734,Fixed #22720 -- Migrations attempt to create _order twice.,"Not sure if this needs any tests?
",valberg,None,2014-05-28T23:01:34Z,2014-06-15T14:51:23Z
2733,Add check for proxy models containing fields.,"Remove the FieldError raised by `ModelBase.__new__` in this case.

refs #22690 (https://code.djangoproject.com/ticket/22690)
",craigds,None,2014-05-28T22:29:14Z,2014-06-22T03:10:23Z
2732,Added django.utils.six.buffer_types - NOT RFC,"Lacking documentation. django.utils.six.memoryview is also not documented.
",shaib,None,2014-05-28T17:46:58Z,2014-06-13T22:09:41Z
2731,Fixed #22717 -- Auto-corrected missing ending slash in FileSystemStorage,"Thanks David Fischer for the report.
",claudep,None,2014-05-28T17:05:24Z,2014-06-15T14:51:23Z
2730,Fixed #6327 -- Added has_module_permission method to BaseModelAdmin,"- Added tests for this new method and for the other ones:
  - has_add_permission()
  - has_change_permission()
  - has_delete_permission()
- Updated the documentation
",maxocub,None,2014-05-28T16:20:54Z,2014-06-13T13:38:14Z
2729,replaced all instances of Primary/Replica with Batman & Robin,"Empathetically Correct' Is the New Politically Correct, replaced all instances of Primary/Replica (TRIGGERS! OMG! cis-scum think they're primary) with everyone's friendly neighborhood crime fighting duo. Batman & Robin
",Codeusa,None,2014-05-28T15:52:35Z,2014-06-20T11:44:43Z
2728,[1.6.X] Added missing commas to list of strings,"Currently, the strings are concatenated, breaking the url.

The checks framework has been overhauled in Django 1.7.X, so this patch is only required in 1.6.X.
",alasdairnicol,None,2014-05-28T08:18:06Z,2014-06-12T06:59:25Z
2727,Fixed some triggering documentation,"Because of Github's hostile environment toward feminist, trans, PoC coders such as myself, I've been forced to undergo a pseudonym for this pull request. Me and other rape victims have difficulty reading some of Django's documentation due to a few triggering words. This is only as much as I could do at one time. If there is more interest in cleaning up Django's documentation to be safer for rape victims, then I will try to do more.

Nothing in this commit directly affects Django functionality. Everything is just documentation changes.
",concernedfeminist,None,2014-05-28T07:32:30Z,2014-09-09T18:56:40Z
2726,Fixed #20550 -- Added ability to preserve test db between runs,"This adds the `--keepdb` to the test runner, which allows the database to be preserved between test runs.

Currently, I have one failing test on this, `test_runner.tests.AliasedDatabaseTeardownTest.test_setup_aliased_databases`. I'm not exactly sure why it is failing, so if anyone could give me some pointers on this, that would be great. (apologies if this is not the place to as for such feedback).

@timgraham  - git blame tells me that you were the one who wrote this test, perhaps you could shed some light here?

Thanks!
",gchp,None,2014-05-27T21:29:37Z,2014-06-13T01:39:41Z
2725,Fixed #22295 -- Replaced permission check for displaying user-tools,"Since has_permission() already checks if the user is staff and is active, I replaced {% if user.is_staff and user.is_active %} by {% if has_permission %} in base.html.
So, if someone creates a custom admin with a custom has_permission(), the user-tools will be displayed.
It's also backward compatible for someone who extends base.html and expects the user-tools to be hidden.
",maxocub,None,2014-05-27T20:33:35Z,2014-10-30T17:36:17Z
2724,Fixed #22601 -- Added a note about model inheritance.,"Thanks semenov for the report.
",mmardini,None,2014-05-27T18:54:25Z,2014-06-26T06:38:51Z
2723,Fixed #22711 -- Allow model's Meta.ordering attribute to have explicit ForeignKey relation fields,"https://github.com/django/django/commit/24ec9538b7ca400f68ba08fab380445ca95d7c02 introduced an opportunity to order by the field attr itself. But system check framework didn't reflect this change.
Also fixed a small typo in method comment.
",a1tus,None,2014-05-27T17:30:21Z,2014-06-16T07:28:52Z
2722,Fixed #22699 -- Configure default settings in some management commands.,"This makes it possible to run django.setup() in management commands that
don't need a settings module. In addition it simplifies error handling.
",aaugustin,None,2014-05-27T17:00:35Z,2014-06-20T22:15:51Z
2721,"name ""Django"" can be considered offensive by some people, change it to ""...","""Django"" name might be considered offensive to someone. Change it to something less offensive
",XANi,None,2014-05-27T14:01:08Z,2014-06-17T23:51:46Z
2720,#22707 Replaced misleading primary/replica terminology with widely recognized m...,"...aster/slave

All occurences of ""master/slave"" were recently replaced with ""leader/follower"" (https://github.com/django/django/pull/2692), then with ""primary/replica"" (https://github.com/django/django/commit/beec05686ccc3bee8461f9a5a02c607a02352ae1).
This new terminology is vague, ill-advised, and '''very misleading.'''

Django is a server-side framework with the goal of making Pythonistas' life sweet. By no means this requires reforming old and widely accepted database terminology, or feeding fat internet trolls like Feminist Software Foundation.

Let's look at the famous Zen of Python:
- Special cases aren't special enough to break the rules.
- Although practicality beats purity.
- There should be one-- and preferably only one --obvious way to do it.

And, above all:
- '''Explicit is better than implicit.'''

Here are four reasons, baked in the core of the language, as well as in the core or the developers' hearts, for why changing this '''old, clear, concise and immediately recognized''' terminology is a bad idea.

This terminology has been used for a long time, and by no means those purely technical terms carry racially charged meanings to users, neither are they offending in any other way.
This patch replaces all occurrences of ""primary/replica"" with the good old ""master/slave"" together with now unnecessary comments like ""referred to as master/slave by some databases"".
",chrisk12345,None,2014-05-27T08:23:38Z,2015-05-20T22:08:28Z
2719,Replaced occurrences of leader/follower terminology with master/slave,"This is not something we should have to talk about.
",ddevault,None,2014-05-27T00:40:36Z,2014-06-24T15:08:04Z
2717,Fixed #22675 -- makemigrations --dry-run to output migrations to stdout.,"`makemigrations --dry-run` will output the complete migrations file
that would be written if it's used along with `--verbosity 3`.
",mmardini,None,2014-05-26T20:10:41Z,2014-06-15T14:56:09Z
2716,Fixed constant_time_compare on Python 2.7.7,"Python 2.7.7 includes compare_digest in the hmac module, but it requires
both arguments to have the same type. This is usually not a problem on
Python 3 since everything is text, but we have mixed unicode and str on
Python 2 -- hence make sure everything is bytes before feeding it into
compare_digest.

@dstuff, @alex, @PaulMcMillan -- review please, I'd like to get this into Django 1.7
",apollo13,None,2014-05-26T11:56:11Z,2014-06-15T14:56:09Z
2715,Properly close files in the form wizards at the end of the request.,,apollo13,None,2014-05-26T11:08:41Z,2014-06-14T10:40:23Z
2714,Fixed #20081 -- Minimized risk of SECRET_KEY leak.,"By default set the SECRET_KEY value to be loaded from env vars.  If not
set and DEBUG==True generate a random SECRET_KEY.  Also adds the
generatesecret management command, which prints a random secret key to
stdout.
",aj-may,None,2014-05-26T03:45:07Z,2015-07-02T22:17:28Z
2713,Added question to FAQ,"How can I get the version number of my Django app at runtime?
",cclauss,None,2014-05-25T20:46:56Z,2014-06-20T22:04:21Z
2712,Fix #22680.,"In FileField.save(), cache the size of the file as saved in the
underlying storage, instead of reading the size of the incoming content,
which has been closed.
",cabincode,None,2014-05-25T20:12:52Z,2014-06-26T06:35:17Z
2711,Fix reference to lookups instead of transforms.,"I assume this was a copy-paste that wasn't edited properly. It didn't seem to make any sense to me.
",schinckel,None,2014-05-25T07:24:59Z,2014-07-19T15:50:16Z
2710,Fixed #21938 -- Restructured documentation for built-in views,"Moved the reference for built-in error views to the correct
documentation page. Restructured the remaining information on
customizing error views in a less repetitive way.
",JoLinden,None,2014-05-24T20:43:14Z,2014-06-15T14:56:09Z
2709,Fixed #20743 -- Added support for keyfile/certfile in SMTP connections.,"Added two new settings EMAIL_SSL_CERTFILE and EMAIL_SSL_KEYFILE which
can be used to configure a certificate chain file and a private key
file that are passed to either SMTP_SSL constructor or SMTP.starttls.

Incorporated previous work by jwmayfield (SVN-based patch originally
provided by serg.partizan / partizan and Wojciech Banaś) for
certfile/keyfile to SMTP.starttls() when EMAIL_USE_TLS is set to True.
",andialbrecht,None,2014-05-24T17:57:43Z,2014-09-10T20:02:24Z
2708,Fixed #22692 -- Added docs for two `makemigrations` command options.,"Added documentation about `--dry-run` and `--merge`.
",mmardini,None,2014-05-24T17:32:08Z,2014-06-26T00:04:51Z
2707,Make cached_property more flexible,"This allows models to have a cached property as well as a ""fresh"" accessor.

```
class Foo(object):

    def get_bar(self):
        .... heavy work here ....

    bar = cached_property(get_bar, name='bar')
```

We can't do this with the existing cached_property because it stuffs its cached value into the objects **dict** using the name of the function, which would mask the function itself.
",funkybob,None,2014-05-24T10:41:08Z,2014-07-01T10:36:59Z
2706,Fixed #22510 -- Harden field removal to only None.,"Refs #8620.

If we allow any value to remove form fields then we get name clashes with method names, media classes etc. There was a backwards incompatibility introduced meaning ModelForm subclasses with declared fields called media or clean would lose those fields.

Field removal is now only permitted by using the sentinel value None. The docs have been slightly reworded to refer to removal of fields rather than shadowing.

Notes for review:
- There is an alternative approach which is to add a new feature `ignore_fields` or similar to remove fields.
- Another alternative is to roll back the whole feature and document using `del` with `base_fields`. However as the only current documentation of `base_fields` says ""don't touch this"", I think this would be inadvisable. Personally, I also like the more declarative style.
",mjtamlyn,None,2014-05-24T09:58:10Z,2014-06-26T00:04:42Z
2705,Special-case app_label detection from the shell.,"People often seem to try to define model classes in the shell (for
better or for worse); at present this doesn't work without their also
defining app_label, leading to such comparatively popular questions as
http://stackoverflow.com/q/23757143. It is also a minor inconvenience
for experienced Django developers, because they must remember to set
app_label to a dummy value.

This takes care of that problem by assigning an app_label (a meaningless
value, of course) automatically, if the model class is in the `__main__`
module (which will close enough to always mean the shell—I don't want to
think about the alternative!).

There is no perfect solution to the problem—for this just delays the day
of judgment to another location, there being some things that you simply
can't reasonably do in the shell—but this fixes the minor papercut with
minimal side-effects.
",chris-morgan,None,2014-05-23T12:34:41Z,2014-06-15T14:56:09Z
2704,Fixed #22684 -- Added empty_label option on SelectDateWidget,,gyx1000,None,2014-05-23T07:10:56Z,2014-06-15T14:56:09Z
2703,Fixed #22659 -- Prevent rendered model states from sharing field instances.,"Thanks to Trac alias tbartelmess for the report and the test project.
",charettes,None,2014-05-22T22:57:06Z,2014-06-15T14:56:09Z
2702,Fixed #20816 -- Added hints about Django middleware ordering,"Thanks gthb Trac user for the report and kolypto StackOverflow
user for the initial list.
",claudep,None,2014-05-22T15:11:16Z,2014-06-26T06:29:25Z
2701,Fixed TarArchive.extract call to has_leading_dir,"Django have bug with TarArchives extraction, it couldn't recognize leading_dir because of wrong parameters passed to has_leading_dir function.

Members variable is a list of TarInfo objects (tarfile.TarInfo), not just a plain path strings.

Problem fixed.

You can check this bug - just try to 'startproject' with tar.gz and zip archive template. In case of tar.gz archive it will not recognize leading dir of template and put project structure in folder (for example 'startproject --tempalte=xxx.tar.gz test' will make 'test/xxx/manage.py' instead of 'xxx/manage.py').
",phpdude,None,2014-05-22T12:12:42Z,2014-06-15T14:56:09Z
2700,Fixed #22679 -- Fixed empty tuple serialization in MigrationWriter.,"Thanks rockallite.wulf for the report.
",mmardini,None,2014-05-22T11:31:38Z,2014-06-16T08:11:42Z
2699,the SECRET_KEY is not a hash,,graingert,None,2014-05-22T10:19:57Z,2014-06-15T14:56:09Z
2698,Fixed #22676 -- makemigrations --dry-run should not ask for defaults,"Made the fix in InteractiveMigrationQuestioner class code, rather than
MigrationAutodetector, because --dry-run shouldn't affect whether
MigrationAutodetector will detect non-nullable fields, but the
questioner should skip the question and returns a None for default
(since that won't be used anyway) if --dry-run is used.
",mmardini,None,2014-05-22T09:45:15Z,2014-06-24T14:02:05Z
2697,"Fixed #10811 -- Assigning unsaved objects to FK, O2O and GFK raises ValueError.","Thanks @timgraham @loic  for help and reviewing.
",coder9042,None,2014-05-21T18:37:03Z,2014-06-15T14:56:09Z
2696,Fixed #22639 -- Added missing imports in docs,"Added ModelForm and NON_FIELD_ERRORS imports.

https://code.djangoproject.com/ticket/22639
",niclas-ahden,None,2014-05-21T15:13:39Z,2014-06-15T14:56:09Z
2695,Ticket 16311,"- Provide a hook into `admin.filter.RelatedFieldListFilter` to change the related objects to display.
- Implements `RelatedOnlyFieldListFilter`which use that hook to limit the related objects to the ones found into the relation.
",Starou,None,2014-05-21T10:41:16Z,2014-08-04T13:40:16Z
2694,Fixes #22667. Replaced leader/follower terminology with primary/replica,,fcurella,None,2014-05-20T19:57:32Z,2014-06-12T13:49:29Z
2693,#18586 - GenericRelationsTests separated into several tests,"This intends to fix the first test case reported in [Trac ticket 18586](https://code.djangoproject.com/ticket/18586) as a ""too long"" unit test to be separated into several, more specific ones.

In particular, this PR splits the old `modeltests.generic_relations.GenericRelationsTests.test_generic_relations` unit test into several different unit tests, each one related to a single feature of Django generic relations. It also adds a `setUp` method to the `TestCase` to define the common attributes.
",jose-lpa,None,2014-05-20T19:30:16Z,2014-06-15T14:56:09Z
2692,#22667 replaced occurrences of master/slave terminology with leader/follower,"The docs and some tests contain references to a master/slave db configuration.
While this terminology has been used for a long time, those terms may carry racially charged meanings to users.
This patch replaces all occurrences of master and slave with 'leader' and 'follower'
",fcurella,None,2014-05-20T16:29:41Z,2016-12-29T13:18:37Z
2691,Fixed #22602 -- Improve code coverage of makemigrations command tests,"Brings coverage of `makemigrations` up to 98% from 61%. Three lines are left uncovered. The first requires adding another app so that you can specify two app labels. The last two are actually unreachable as far as I can tell. A `ValueError` can only be reached if you call `max([])`, which won't ever happen inside `handle_merge`.

Thanks claudep for the report and Tim Graham for the review.
",whoshuu,None,2014-05-20T14:35:42Z,2014-06-19T22:48:50Z
2690,Fixed #21773 -- made daemon threads default in the development server.,"Also added an option to use non-daemon threads in the runserver command.
The new option is documented in the docs.
Please read my comment on the code to better understand the usefulness
of changing the default.
Thanks clime for the report.
",mmardini,None,2014-05-20T13:29:50Z,2014-06-14T05:28:12Z
2689,Fixed bug in spanish translation on auth forms,,albertoalcolea,None,2014-05-20T10:29:43Z,2014-06-28T13:27:31Z
2688,Fixed #22661 -- Move makemigrations tests to the proper class,,whoshuu,None,2014-05-20T03:17:12Z,2014-06-17T16:23:24Z
2687,Fixes #22514 - Prevent indexes on virtual fields [postgres],,ziima,None,2014-05-19T16:21:58Z,2014-06-20T16:01:46Z
2686,Fixed #22656 -- Added validation check for FK that blank=False when null...,"...=False
",coder9042,None,2014-05-19T14:40:00Z,2014-07-17T08:36:27Z
2685,Updated django.po for Arabic,,mmardini,None,2014-05-19T13:30:23Z,2014-06-16T08:11:35Z
2684,Fixed #22655 -- Fixed GeoQuerySet doc about strictly_below,"The paragraph was a copy of strictly_above.
",mmardini,None,2014-05-19T13:03:27Z,2014-06-29T21:34:15Z
2683,Fixed #22368 -- clarified connecting to Oracle DB using service name,"Clarified ""Connecting to the database"" section of ""Oracle notes"",
explaining how to connect using service name vs using SID. Used the
official terminology listed in
http://docs.oracle.com/cd/B19306_01/network.102/b14212/glossary.htm#i997309
Thanks michael.cherkasov for the report.
",mmardini,None,2014-05-19T07:34:54Z,2014-06-25T23:51:50Z
2682,"Fixed #22635 -- Make ""It worked!"" page localizable",,alimony,None,2014-05-18T21:15:33Z,2014-06-12T06:43:49Z
2681,Fixed #22650 -- Fixed regression on prefetch_related.,,loic,None,2014-05-18T20:59:53Z,2014-07-03T06:50:38Z
2680,Ticket 21799,,timgraham,None,2014-05-18T19:33:21Z,2014-07-16T08:44:18Z
2679,Fixed #22421 -- Regression in fixtures loading.,"Loading fixtures were failing since the refactoring in 244e2b71f5 for
inheritance setups where the chain contains abstract models and the
root ancestor contains a M2M relation.

Thanks Stanislas Guerra for the report.

Refs #20946.
",ramiro,None,2014-05-17T20:53:44Z,2018-08-09T18:51:16Z
2678,Fixed #21608 -- by providing a test case and adopting the existing patch,"The provided patch changed the behaviour of session.save() by strictly differentiating between creating new and updating existing sessions.
Since this broke some existing tests that relied on the implicit creation, the TestClient now provides a createSession() helper.
",nschlemm,None,2014-05-17T17:12:11Z,2014-09-15T12:35:13Z
2677,Fixed #22550 -- Raise error on QuerySet reverse after slicing.,"https://code.djangoproject.com/ticket/22550
",merll,None,2014-05-17T13:07:50Z,2014-10-30T13:30:33Z
2676,Fixed #22644 -- Clarified documentation for NamedUrlWizardView,"https://code.djangoproject.com/ticket/22644#
",mxsasha,None,2014-05-17T12:22:12Z,2014-06-17T16:16:54Z
2675,Documenting redirect_field_name argument for user_passes_test decorator in auth.,"https://code.djangoproject.com/ticket/22647
",valberg,None,2014-05-17T10:08:35Z,2014-07-19T15:51:13Z
2674,Added ssl-ca option to mysql dbshell command - #22646,"https://code.djangoproject.com/ticket/22646

In the process, added the regression tests for the other options too
",zsoldosp,None,2014-05-17T10:04:04Z,2014-08-13T22:30:15Z
2673,Fixed #22638 -- Changed CookieWizardView to ignore invalid cookies,"https://code.djangoproject.com/ticket/22638
",mxsasha,None,2014-05-17T09:31:19Z,2014-06-14T11:06:31Z
2672,22019 add objects docs to ref,"Added new document in /ref/models. Linked existing references to objects attribute.
",gtvblame,None,2014-05-16T20:56:29Z,2014-07-05T12:09:28Z
2671,cleanup for #18586 (modeltests.basic.model test.test object creation),"https://code.djangoproject.com/ticket/18586

Split up 300 line test method (inherited from doctest days)
- Extracted method's relevant test assertions into multiple test methods on new class ModelInstanceCreationTests
- moved the extra assertions from the test method as separate test methods to the relevant existing testclasses where possible, created new ones where couldn't find an appropriate one
- Test data was changed to make the new tests more readable in isolation and to accommodate the various different Article models across the various test folders

I left the PR as multiple commits to be able to find refactoring mistakes while the PR is being reviewed, can be squashed later.
",zsoldosp,None,2014-05-16T17:13:11Z,2014-06-25T19:41:25Z
2670,Fix #22626: allow BinaryField defaults with SQlite,"Also fixes a slight issue in sqlite3.schema._remake_table where
default values where quoted with ""column name"" quoting rules.

Reference for quoting: http://www.sqlite.org/lang_expr.html
",rbarrois,None,2014-05-16T17:00:18Z,2014-06-12T06:58:09Z
2669,Ticket #22633: LANGUAGE_CODE in project settings should be set to system locale and not hardcoded to 'en-us',,hakanw,None,2014-05-16T16:54:58Z,2014-12-24T23:59:43Z
2668,Fixed #6668 -- Optimise utils.text wrap,"This fixes a failing test after applying an optimization of the
utils.text.wrap function by user SmileyChris.
",alimony,None,2014-05-16T16:39:48Z,2014-06-13T18:25:34Z
2667,Fixed #22634 -- Changed Session and SessionStore to be easily extendable,"Introduced abstract base model for Session, and properties enabling the developer to override session model class used by session store and the session store class used by the model.

Allowed to override KEY_PREFIX via the cache_key_prefix property.
",sergeykolosov,None,2014-05-16T16:36:59Z,2015-04-23T12:14:45Z
2666,Fixed #22266 - CharField primary keys with underscores are (un)escaped differently in the admin pages," ModelAdmin.get_urls defines the urls like these:

```
        url(r'^$', wrap(self.changelist_view), name='%s_%s_changelist' % info),
        url(r'^add/$', wrap(self.add_view), name='%s_%s_add' % info),
        url(r'^(.+)/history/$', wrap(self.history_view), name='%s_%s_history' % info),
        url(r'^(.+)/delete/$', wrap(self.delete_view), name='%s_%s_delete' % info),
        url(r'^(.+)/$', wrap(self.change_view), name='%s_%s_change' % info),
```

As long as we do not know the exact primary key regexp, we have to use (.+)
Consider we have 2 entries with the following PKs: ""test_123"" and ""test_123/history"". There is no way to distinguish change view for ""test_123/history"" and history view for ""test_123"".
That is why PK quoting was introduced. django.contrib.admin.utils contains 2 functions: quote and unquote. So reversing admin url should usually look like:

```
reverse('admin:app_model_change', args=(quote(pk),))
```

Quoting and unquoting doesn't change numerical PKs, that is why this problem haven't been noticed before.
The first redirect doesn't work, as there is a bug with quoting not being applied in add_view.

I suppose we are really lacking the documentation (​https://docs.djangoproject.com/en/1.6/ref/contrib/admin/#overriding-vs-replacing-an-admin-template is evertyhing I could find).

There is no way to get rid of quoting if we leave (.+) url pattern for PK. So we can leave quoting/unquoting as is and fix the redirect in add_view....ntrib.admin)
",nott,None,2014-05-16T16:05:47Z,2014-06-12T20:33:08Z
2665,Fixed #22167 -- Improved documentation on context processors,"Expands the explanation on the order in which user provided variables
to render_to_response, RequestContext and context processors are
loaded.

See https://code.djangoproject.com/ticket/22167
",m2w,None,2014-05-16T16:00:36Z,2014-06-26T06:25:00Z
2664,Fixed #20488 -- Added copy and move methods to the storage API,#NAME?,kux,None,2014-05-16T15:56:21Z,2014-12-27T19:40:53Z
2663,Fixed #22622 -- Added ugettext_lazy import in docs,"This needs to be backported to 1.6 and 1.7 (doesn't look like it's needed in 1.5).

https://code.djangoproject.com/ticket/22622
",niclas-ahden,None,2014-05-16T15:08:40Z,2014-06-26T06:25:00Z
2662,Fixed #22557 -- ManifestStaticFilesStorage did not cleanup deleted files,"When using ManifestStaticFilesStorage, deleted static files would be
correctly cleaned up by ""collectstatic --clear"", but the manifest file
would still contain the stale entries.

Thanks to tedtieken for the report
",syphar,None,2014-05-16T14:16:39Z,2014-06-20T15:56:55Z
2661,Fixed #18389 -- Fixed the way contribute_to_class is called,"Now this method is only called only if the object is an instance.
This allows to have field classes as model class attributes.
",timgraham,None,2014-05-16T13:45:08Z,2014-07-19T15:51:31Z
2660,Fixed #22490 -- removed obsolete ComplexFeed class from syndication_tests,"It was previously used in a test that was deprecated and then removed, this cruft can be removed now.
",nschlemm,None,2014-05-16T13:06:08Z,2014-06-20T22:15:44Z
2659,Changing the sql* management commands to use schema editor,"This refers to the https://code.djangoproject.com/ticket/22611 ticket.
",valberg,None,2014-05-16T13:01:06Z,2014-06-17T16:16:59Z
2658,Fixed #18389 -- Fixed the way contribute_to_class is called,"Now this method is only called only if the object is an instance.
This allows to have field classes as model class attributes.
",drtyrsa,None,2014-05-16T12:32:32Z,2014-07-19T15:51:37Z
2657,cater for running tests from another directory than tests,"applying existing pattern to newly added test_testcase_ordering as well
https://code.djangoproject.com/ticket/20449
",nschlemm,None,2014-05-16T10:15:02Z,2014-06-23T03:39:06Z
2656,Fix typo in multipartparser.py,"Change 'containt' to 'contain'
",mbacho,None,2014-05-16T09:08:22Z,2014-07-19T15:51:40Z
2655,Ticket/22628,"Resolves [#22628](https://code.djangoproject.com/ticket/22628). Set formsets to take into account whether there is initial data when calculating how many min_num forms to display (instead of just adding min_num to extra).
",melinath,None,2014-05-16T03:17:13Z,2014-06-12T06:58:12Z
2654,Fix typo that disabled code example highlighting,,merwok,None,2014-05-14T22:35:03Z,2014-06-20T13:54:13Z
2653,typo: urlaprse -> urlparse,,collinanderson,None,2014-05-14T19:01:04Z,2014-07-06T17:14:18Z
2652,"Support min_num on admin inline forms, per #17642","Replacement pull request for #2406, created to address the issues raised there. More commits coming soon.
",melinath,None,2014-05-14T00:39:14Z,2014-06-12T06:58:16Z
2651,Fixes typo in transactions.txt,"Fixes typo.
",harisibrahimkv,None,2014-05-13T04:18:40Z,2014-07-19T15:51:49Z
2650,I propose that method slugify accepts parameters.,"The method slugify should accept parameters for customization of slug. 
Ex: slugify('hello django', '_'), slugify('hello django', '+')
And by default we can let hyphens.
",elinaldosoft,None,2014-05-12T23:49:29Z,2014-07-19T15:51:51Z
2649,Fixed #20897 -- Asymmetrical cursor creation,"Pulled the creation of cursors in the non-debug case into a separate
method, in order to make behavior more consistent when overriding
the cursor creation in derived classes.
",timmartin,None,2014-05-12T20:56:50Z,2014-06-17T06:56:07Z
2648,Fixed #22617 -- Improved makemessages error reporting,"Fixed lack of messages and lack of file to track root cause.
",ChameleonRed,None,2014-05-12T11:23:16Z,2015-04-16T17:12:39Z
2647,Fixed #21634 -- Prevented hiding ImproperlyConfigured when command not found,"Thanks nikolay.v.golub@gmail.com for the report.
",claudep,None,2014-05-10T18:40:56Z,2014-06-12T09:47:54Z
2646,Fix for #22508,,aaugustin,None,2014-05-10T14:42:52Z,2014-06-12T07:42:04Z
2645,WIP Proxy model migrations,"wip fix for #22568
",davidszotten,None,2014-05-10T14:37:03Z,2014-06-25T18:05:50Z
2644,Fixed #22606 -- Locmemcache has_key() failed for infinite cache expiry,"Refactored cache expiry logic for Locmemcache to make consistent across
all places where accessed, and correctly handle None as expiry time
",mbox,None,2014-05-09T10:25:34Z,2014-06-25T23:51:10Z
2643,"#22487: Remove test flushing, convert to fixture dump/load",,andrewgodwin,None,2014-05-09T04:12:35Z,2014-06-12T13:15:05Z
2642,Fixed #17431 -- Added send_mail method to PasswordResetForm.,"Credits for the patch go to @ejucovy. I basically applied it cleanly.
",jorgecarleitao,None,2014-05-08T22:00:11Z,2014-06-12T14:35:32Z
2641,Fixes issue 15716 allowing authorization backends to raise PermissionDenied,,jorgecarleitao,None,2014-05-08T20:12:42Z,2014-07-19T15:52:07Z
2640,Avoid vendor checks,,aaugustin,None,2014-05-07T20:04:50Z,2014-06-16T01:07:14Z
2639,Insert space,"This is the tiniest little pep8 fix that has been bugging me :)
",alimony,None,2014-05-07T19:17:07Z,2014-07-06T17:09:56Z
2638,Ticket/22502,"Nixed microseconds on datetime BoundField values generated from a callable default. Fixed [Django ticket 22502](https://code.djangoproject.com/ticket/22502).

Explanation: If a callable default creates an initial datetime value with microseconds, those microseconds will be reflected in the hidden input used to track the initial value - but _not_ in the datetime field presented to the user. That means that the field will _always_ show up as changed when the user submits the form. This is particularly relevant for extra forms on a formset (which, due to this bug, will run validation and potentially be saved even though if the user hasn't touched them).

The only potential edge case where I could see this causing a problem would be if someone wrote a datetime field which _had_ microsecond support. I don't think that's something folks will want to do, though.
",melinath,None,2014-05-07T01:25:22Z,2014-06-12T06:58:09Z
2637,Validator comparisons,"[1.7.x] Fixed #22588 -- Fix RegexValidator `__eq__`
Compare parameters instead of re.pattern instances, and add the other
parameters to the comparison. Also add a `__ne__` to make `assertNotEqual`
work properly.
",davidszotten,None,2014-05-06T21:03:13Z,2014-06-12T06:58:09Z
2636,Fixed #17903 -- Inactive users shouldn't have any permissions.,"See [#17903](https://code.djangoproject.com/ticket/17903).
",jorgecarleitao,None,2014-05-06T16:38:36Z,2014-06-23T23:59:23Z
2635,Fixed #22564 -- Prevented unneeded bytestrings in migrations,,claudep,None,2014-05-05T18:44:00Z,2014-06-26T06:24:51Z
2634,Fixed #22424 -- MySQL doesn't accept migrations' one-off default values ...,"...for longtext and longblob.
",loic,None,2014-05-05T18:40:51Z,2014-06-15T14:56:09Z
2633,Update tutorial01.txt,"The settings file included when starting a project in Django 1.7 already specifies a sqlite database. So when you start `runserver` without syncing the database you get an error `django.db.utils.OperationalError: no such table: django_session`
",tomleo,None,2014-05-05T14:55:28Z,2014-06-30T03:20:49Z
2632,Update generic-editing.txt,"Removing the direct import for User model and importing using get_user_model instead
",adminq80,None,2014-05-05T08:17:37Z,2014-07-19T15:52:31Z
2631,Fixed #22572 -- override_settings(ROOT_URLCONF) didn't clear urlresolver...,"...s._urlconfs.
",loic,None,2014-05-04T16:01:16Z,2014-06-26T13:23:02Z
2630,Fixed #22501: Set the corrent address for LiveServerTestCase Client,"By default, the test client sets the server host to 'testserver' and the
port to 80.  In the case of a LiveServerTestCase, the server has a real
adress and a real port.  This fix sets the testing client adress to the
real address.

https://code.djangoproject.com/ticket/22501
",daonb,None,2014-05-04T07:15:14Z,2014-07-19T15:52:34Z
2629,Fixed #22570: Form.__getitem__ KeyError should be more descriptive,,bendavis78,None,2014-05-03T17:02:47Z,2014-06-26T06:22:46Z
2628,Fixed #22531 and added tests for `tree.Node`,"While Node class has a useful `__str__`, its `__repr__` is not that
useful. Added a `__repr__` that makes use of the current `__str__`.
This is especially useful since the more popular `Q` class inherits
`tree.Node`.
",mmardini,None,2014-05-03T15:52:17Z,2014-06-25T23:52:27Z
2627,Failing test and patch for #22557: staticfiles.json keeps deleted entries when collectstatic is run,"https://code.djangoproject.com/ticket/22557

All staticfiles and django tests pass with these changes.

Would appreciate feedback.  I'm especially not sure if we should always zero the manifest on collectstatic, or if we should only zero the manifest when --clear is called.  

```
#current version
def on_collectstatic(self, command):
    self.hashed_files = OrderedDict()
```

Vs.

```
#reasonable alternate version
def on_collectstatic(self, command):
    if command.clear:
        self.hashed_files = OrderedDict()
```

I could go either way on the question.

Copied from ticket:
There is some surprising behavior when the new HashedFilesMixin is used with the new ManifestFilesMixin.
When you run manage.py collectstatic --clear:
1) a copy of the old manifest.json is loaded from disk into memory at ManifestFilesMixin.hashed_files. This happens at the very beginning of collectstatic (when ManifestFilesMixin.**init** is called, which happens when the storage is initialized, which happens during Command.**init**) 
2) the old manifest.json is deleted (which would lead most people to believe the old manifest information is deleted as well)
3) new files are added to the ManifestFilesMixin.hashed_files dict, and updated files get their records updated. But, this is building on top of the last version of manifest.json. Keys for deleted files are never removed and the deleted file mappings persist in the new manifest.json which gets written back to disk at the end of collectstatic's post_process phase.

[Rest of ticket omitted]

To make testing cleaner, I broke post_process into two steps:  post_process and save_manifest.  Long term I think this is also a better API that will allow people to write cleaner sub-classes.  I found this bug writing sub-classes of ManifestFilesMixin and the code to save the manifest is pretty ugly with the current API of post_process doing both steps. 
",tedtieken,None,2014-05-02T17:36:54Z,2014-06-20T15:56:16Z
2626,Fixed #22540 -- Made _create_object_from_params() call create(),"So as the save step is centralized in create(), especially useful
when customizing behavior in subclasses.
Thanks craig.labenz@gmail.com for the report.
",claudep,None,2014-05-02T07:09:52Z,2014-06-26T06:18:04Z
2625,Fixed #22435 -- Prevented adding a ManyToManyField from prompting for a default.,,timgraham,None,2014-05-01T12:45:49Z,2014-06-15T03:07:49Z
2624,Delete CONTRIBUTING.rst,,nyilwin,None,2014-05-01T12:29:16Z,2014-07-19T15:52:50Z
2623,Delete LICENSE,,nyilwin,None,2014-05-01T12:23:07Z,2014-07-19T15:52:52Z
2622,"Fixed #22539, duplicate exclude argument in Model.full_clean() to prevent side effects.","Fixed side effects caused to the exclude argument sent to Model.full_clean() when a field error is raised.

Also casts the exclude argument to a list, so to prevent error if a tuple() was to be sent.
",ydaniv,None,2014-05-01T11:52:10Z,2014-06-12T19:30:12Z
2621,Fixed clash caused by the newly introduced -e shorthand for makemessages...,"... --exclude.

This fixes a regression caused by 0707b82. Refs #22328.
",loic,None,2014-05-01T07:42:07Z,2014-06-25T23:42:19Z
2620,Fixed #22546 - Clearer wording in Tutorial 2,"Changed an English idiom some non-native English speakers found difficult to understand.
",mmardini,None,2014-04-30T17:45:52Z,2014-06-25T23:42:23Z
2619,"Fixed #21461, Add pre_update and post_update signals","Assuming this would be targeted for 1.8, since it missed the feature freeze.
",bendavis78,None,2014-04-30T17:27:39Z,2017-02-06T17:11:58Z
2618,Use custom user model in django.contrib.auth's forms,"ref: https://code.djangoproject.com/ticket/22548
",fcurella,None,2014-04-30T17:20:58Z,2014-06-26T06:17:58Z
2617,Fix wrong Thai translation,"I found a little mistake which should be fixed.
",sipp11,None,2014-04-29T12:38:11Z,2014-07-19T15:53:05Z
2616,Fixed #22533 — allowed `label_suffix` to be overriden by fields,"Fields can now receive the `label_suffix` attribute, which will override
form's own `label_suffix`.

This enhances the possibility to customize form's `label_suffix`, allowing
to use such customizations while using shortcuts such as
`{{ form.as_p }}`.

Note that the field's own customization can be overriden at run-time by
using the `label_prefix` parameter to `BoundField.label_tag()`.

Refs #18134.
",julen,None,2014-04-29T08:36:28Z,2014-06-19T21:24:42Z
2615,POC #22510 -- Reworked opting out from a base class form fields.,"**WIP, not ready for merge!**
",loic,None,2014-04-29T05:18:03Z,2014-06-20T08:12:40Z
2614,Fixed #19195 -- Allow explicit ordering by a relation source field.,"Thanks to chrisedgemon for the report and akaariai for the review.
",charettes,None,2014-04-28T19:29:24Z,2014-06-16T12:49:09Z
2613,Fix a typo in logging.txt,,azalea,None,2014-04-28T14:05:43Z,2014-06-20T04:50:34Z
2612,Fixed #22442 -- Provided additional documentation regarding id fields clashing.,,timgraham,None,2014-04-28T13:29:25Z,2014-06-17T16:16:52Z
2611,"Let the user just type ""y"" or ""n"" during syncdb","A simple tweak to the syncdb prompt, as opened in https://code.djangoproject.com/ticket/22525
",Gumnos,None,2014-04-27T00:49:59Z,2014-06-12T23:33:27Z
2610,Fixed #22524 -- New assertion assertQuerysetNotEqual,"Added new asertion `assertQuerysetNotEqual`.
",amatellanes,None,2014-04-26T21:23:57Z,2014-06-26T06:17:50Z
2609,Documented django.setup().,,aaugustin,None,2014-04-26T16:33:09Z,2014-06-25T23:42:12Z
2608,Fixed #3214 -- Stopped parsing SQL with regex.,"Avoided introducing a new regex-based SQL splitter in the migrations
framework, before we're bound by backwards compatibility.

Adapted this change to the legacy ""initial SQL data"" feature, even
though it's already deprecated, in order to facilitate the transition
to migrations.

sqlparse becomes mandatory for RunSQL on some databases (all but
PostgreSQL). There's no API to provide a single statement and tell
Django not to attempt splitting. Since we have a more robust splitting
implementation, that seems like a good tradeoff. It's easier to add a
new keyword argument later if necessary than to remove one.

Refs #22401. Many people contributed to both tickets, thank you all.
",aaugustin,None,2014-04-26T08:41:59Z,2014-06-16T18:13:34Z
2607,"Fixed #22517, ""view prefix"" still referenced in urlconf docs",,bendavis78,None,2014-04-25T17:30:21Z,2014-07-19T15:53:25Z
2606,Fix for ticket 22511,,loop0,None,2014-04-25T16:29:14Z,2014-06-16T04:43:27Z
2605,Fixed #22516 -- Improved documentation of STATIC_ROOT default value,,mbox,None,2014-04-25T12:59:09Z,2014-06-18T01:42:15Z
2604,Fixed #22493 - Added two warnings about SQL injection,"Added two warnings about SQL injection attacks in the docs of `raw()`
and `extra()`. The warnings are added in the beginning of each doc
due to their high importance.
",mmardini,None,2014-04-24T18:11:20Z,2014-07-19T15:53:33Z
2603,Fixed #22495 -- Locmem cache.add() failed with infinite timeouts,"cache.add() incorrectly succeeded when there was an existing key
with an infinite (None) timeout
",mbox,None,2014-04-23T11:08:47Z,2014-06-16T08:04:25Z
2602,Various documentation typo/spelling fixes,"Errors detected by Topy (https://github.com/intgr/topy), all changes
verified by hand.
",intgr,None,2014-04-22T23:32:32Z,2014-06-30T03:20:48Z
2601,Fixed #22486 -- Reverse raises AttributeError on partial functions.,"Create the lookup_str from the original function whenever a partial
is provided as an argument to a url pattern.
",prestontimmons,None,2014-04-22T22:45:51Z,2014-06-20T07:08:03Z
2600,Use the stdlib's compare_digest for constant time comparisons when available,"cc: @dstufft
",alex,None,2014-04-22T21:45:26Z,2014-06-27T05:18:58Z
2599,Update grammar in description of django auth,,ghost,None,2014-04-22T20:55:59Z,2014-06-25T16:11:27Z
2598,Fixed search lookup,"The (MySQL-only) `__search` full-text lookup wasn't properly implemented using the new ORM lookup system. It's use would result to a runtime exception:

``` python
>>> MyModel.objects.filter(field__search='hello world')
[...]
 return node.as_sql(self, self.connection)
  File ""/site-packages/django/db/models/sql/where.py"", line 106, in as_sql
    sql, params = qn.compile(child)
  File ""/site-packages/django/db/models/sql/compiler.py"", line 80, in compile
    return node.as_sql(self, self.connection)
  File ""/site-packages/django/db/models/sql/where.py"", line 106, in as_sql
    sql, params = qn.compile(child)
  File ""/site-packages/django/db/models/sql/compiler.py"", line 80, in compile
    return node.as_sql(self, self.connection)
  File ""/site-packages/django/db/models/lookups.py"", line 150, in as_sql
    rhs_sql = self.get_rhs_op(connection, rhs_sql)
  File ""/site-packages/django/db/models/lookups.py"", line 154, in get_rhs_op
    return connection.operators[self.lookup_name] % rhs
KeyError: 'search'
```

This implementation uses the existing SQL template provided by `BaseDatabaseOperations.fulltext_search_sql(field_name)`.
- Original pull request: #2597
- Trac: https://code.djangoproject.com/ticket/22489
",jakubroztocil,None,2014-04-22T20:06:14Z,2014-06-16T16:20:23Z
2597,Add missing as_sql() implementation for __search lookup,"The (MySQL-only) `__search` full-text lookup wasn't properly implemented using the new ORM lookup system. It's use would result to a runtime exception:

``` python
>>> MyModel.objects.filter(field__search='hello world')
[...]
 return node.as_sql(self, self.connection)
  File ""/site-packages/django/db/models/sql/where.py"", line 106, in as_sql
    sql, params = qn.compile(child)
  File ""/site-packages/django/db/models/sql/compiler.py"", line 80, in compile
    return node.as_sql(self, self.connection)
  File ""/site-packages/django/db/models/sql/where.py"", line 106, in as_sql
    sql, params = qn.compile(child)
  File ""/site-packages/django/db/models/sql/compiler.py"", line 80, in compile
    return node.as_sql(self, self.connection)
  File ""/site-packages/django/db/models/lookups.py"", line 150, in as_sql
    rhs_sql = self.get_rhs_op(connection, rhs_sql)
  File ""/site-packages/django/db/models/lookups.py"", line 154, in get_rhs_op
    return connection.operators[self.lookup_name] % rhs
KeyError: 'search'
```

This implementation uses the existing SQL template provided by `BaseDatabaseOperations.fulltext_search_sql(field_name)`.
",jakubroztocil,None,2014-04-22T16:32:44Z,2014-06-16T15:42:39Z
2596,Fixed #22478 -- Regression in test label discovery.,"As part of the app-loading updates the old test runner was changed to not
require a models module. This introduced a regression in behavior so
applabel.TestCase failed for tests defined in a directory.

The fix is thanks to yakky and rtnpro.
",prestontimmons,None,2014-04-21T19:57:08Z,2014-06-12T06:58:04Z
2595,Update the section identifier for MySQL unicode,"The documentation has the correct link for the MySQL manual, but the section is 10.1.3.2 instead of the 9.1.3.2.  I'm updating this here, we should consider backporting it to the documentation for version currently supported.

http://dev.mysql.com/doc/refman/5.1/en/charset-database.html

![image](https://cloud.githubusercontent.com/assets/563721/2755176/267d2ba0-c964-11e3-8766-479d6823b966.png)
",mklauber,None,2014-04-21T14:49:47Z,2014-07-19T15:53:49Z
2594,Fixed #22479 -- Added support for byte range requests in django.views.st...,"...atic.serve
",slurms,None,2014-04-21T13:42:26Z,2014-10-30T17:23:08Z
2593,Fixed #22451 -- Fixed new field migration for GIS models,,claudep,None,2014-04-21T11:20:16Z,2014-06-22T09:49:54Z
2592,Removed old test runner test cases.,"These files were added as part of #12658, which pertained to the old django.test.simple test runner. No tests call them anymore.
",prestontimmons,None,2014-04-21T02:59:40Z,2014-06-15T01:31:43Z
2591,#22477 Fix Incompatible Global Settings,"Trac Issue: https://code.djangoproject.com/ticket/22477

This changes the value of `MIDDLEWARE_CLASSES` in the global settings to be in line with the default `INSTALLED_APPS` setting. While it is not fully backwards compatible it is unlikely to impact most users since `MIDDLEWARE_CLASSES` is overridden by the `startproject` command. A compatibility check has been added to warn users which have not set `MIDDLEWARE_CLASSES` and rely on the defaults.

I've kept the original commits but if accepted I'm happy to squash them into one. Since this problem is exposed by the app-loading refactor I've submitted the PR against the 1.7.x branch. If that's a problem I'm happy to resubmit against master and move the docs and compatibility check forward to 1.8.
",mlavin,None,2014-04-20T13:21:51Z,2014-06-12T06:58:12Z
2590,Fixed #22170 -- Added migrations for contrib apps,,claudep,None,2014-04-19T12:39:33Z,2014-06-17T06:32:28Z
2589,Stable/1.7.x,,MorePower,None,2014-04-19T09:44:38Z,2014-06-12T06:58:09Z
2588,Fixed #22429 -- Updated trim_start to identify join table by name instea...,"...d of position and added test.
",superemily,None,2014-04-19T00:50:46Z,2014-06-21T00:59:00Z
2587,Fixed #22458 - Added a note about MySQL utf8_unicode_ci collation,"MySQL official documentation states cases when using utf8_unicode_ci
collation is better than utf8_general_ci collation. Added a note and a
link about both use cases to help the user decide, rather than
recommending only setting, which had been the case.
",mmardini,None,2014-04-18T16:41:45Z,2014-06-25T06:01:38Z
2586,Fixed #22464 - included contrib/gis/static in tarball,"After switching to setuptools in 66f546b, contrib/gis/static isn't
included in tarball anymore, this commit added that path to be
`recursive-include` in `MANIFEST.in`
",mmardini,None,2014-04-18T06:02:34Z,2014-06-25T23:37:47Z
2585,Fixed #21936 -- Refactored DeleteView to be compatible with SuccessMessa...,"Refactored DeleteView to use the form related base classes and mixins, like the
other class-based generic editing views.  Added tests for the handling the
DELETE http method and ensuring the SuccessMessageMixin works. Updated DeleteView
documentation to reflect the new base classes.
The majority of the code changes were provided by Simon Charette.
",cpsimpson,None,2014-04-17T20:11:28Z,2015-03-26T00:56:50Z
2584,#22078 - Try to fix a problem,"Can now use decorators, but class methods with only 'self' argument should be static.
It would be great to see someone's other ideas.

The sample project attached here: https://codedjangoproject.com/ticket/22078
",coldmind,None,2014-04-17T19:22:10Z,2014-06-13T04:33:00Z
2583,Include an 'extra_requires' for bcrypt,"This makes it a tiny tiny bit easier to tell people how to get bcrypt.
",alex,None,2014-04-17T18:28:43Z,2014-07-03T04:40:56Z
2582,Use the stdlib's PBKDF2 implementation when available.,"This is a bit faster than ours, which is good, because it lets you increase
the iteration counts.

This will be used on Python 3.4+, and, pending the acceptance of PEP466, on
newer Python 2.7s.
",alex,None,2014-04-17T18:04:00Z,2014-07-10T10:25:51Z
2581,Test and patch from #22325 - custom user model breaks migrations,"This is an attempt to fix #22325 by adding a test and applying the patch from the ticket. However, while the patch did solve the problem in my _real_ code, it didn't manage to fix the test.

This could be due to an error in my test but after spending some time on it, I can't find it. Would love more eyes on it.
",jonasvp,None,2014-04-17T14:56:33Z,2014-06-12T06:58:17Z
2580,Fixed #22454 - Changed compatibility warning hint,"The warning hint of `_check_test_runner` of 1.6 compatibility had a link
to a general release note. The link should be edited to refer the
relevant ""Backwards incompatible changes in 1.6"" section that documents
the cause and the possible solutions and workarounds of the warning.
",mmardini,None,2014-04-17T14:17:27Z,2014-06-24T07:26:15Z
2579,Fixed #22465 -- New assertion assertJSONNotEqual,"Added assertion `assertJSONNotEqual()` which allow you to test that two JSON fragments are not equal.
",amatellanes,None,2014-04-17T09:52:33Z,2014-06-25T23:37:42Z
2578,Fixed #22125 - Eliminates redundant index creation,"The first field defined as `unique_together` automatically has an index generated for it in all known backends. This removes an additional `CREATE INDEX` on model generation for that field. The behavior is in a separate method for those cases where a particular backend may wish to override it.

[Tracker issue](https://code.djangoproject.com/ticket/22125)
",bwreilly,None,2014-04-17T00:43:38Z,2014-09-05T22:07:07Z
2577,Fix inconsistent style and add EditorConfig file,"For [ticket 22463](https://code.djangoproject.com/ticket/22463).

I haven't yet analyzed the inconsistencies between final newlines in the JSON files.

Some more potential changes that could be made:
- Change code style of JS files to all use 4 spaces for indentation
- Explicitly list each code style (py, xml, js, rst, etc.) instead of using a `*` catch-all section
- Analyze code in tests directory to determine whether some of the inconsistent files (json/xml/po files mostly) should be made consistent

You can confirm that this commit is purely a whitespace change (except for the addition of the `.editorconfig` file) by running git diff -w or using [?w=1](https://github.com/django/django/pull/2577/files?w=1) on Github.

Check http://editorconfig.org for more details on EditorConfig.
",treyhunner,None,2014-04-16T20:19:15Z,2014-11-04T15:39:23Z
2576,Fixed #22455 -- documented return values for send_mail and send_mass_mail,,mrezk,None,2014-04-16T19:12:26Z,2014-07-04T01:35:44Z
2575,Fixed #22397 -- Issues removing M2M field with explicit through model,"Changed the migration autodetector to remove models last so that FK
and M2M fields will not be left as dangling references. Added a check
in the migration state renderer to error out in the presence of
dangling references instead of leaving them as strings. Fixed a bug
in the sqlite backend to handle the deletion of M2M fields with
""through"" models properly (i.e., do nothing successfully).

Thanks to melinath for report, loic for tests and andrewgodwin and
charettes for assistance with architecture.
",andrewsg,None,2014-04-16T18:58:36Z,2014-06-14T11:20:46Z
2574,Fixed #22423 -- Made GIS leverage MySQL 5.6 spatial functions,"MySQL 5.6.1 supports proper spatial checks for some of the functions. ( spatial object checks instead of bounding box checks).

waiting for reviewer.

Unit Test:

I have three shapes with one shape overalapping the other two. 
[City of SF shape overlapping South of Market neighborhood and Downtown neighborhood].
I selected a point in South of Market neighborhood, such that bounding box check returns all three shapes, while ST_contains returns two. (SoMA and SF).

MySQL query  (5.6.1 where st_ functions are implemented):

mysql> select count(_) from athome_shape where st_contains(geom, point(-122.4158771, 37.7792381));
+----------+
| count(_) |
+----------+
|        2 |
+----------+
1 row in set (0.00 sec)

mysql> select count(_) from athome_shape where mbrcontains(geom, point(-122.4158771, 37.7792381));
+----------+
| count(_) |
+----------+
|        3 |
+----------+
1 row in set (0.00 sec)

mysql>

Django Test:  (in older version, it would have returned 3 for both the queries).

point_wkt = 'POINT(-122.4158771 37.7792381)'
In [8]: y = Shape.objects.filter(geom__contains=point_wkt)

In [9]: y.count()
Out[9]: 2

In [10]: y = Shape.objects.filter(geom__bbcontains=point_wkt)

In [11]: y.count()
Out[11]: 3
",visu,None,2014-04-16T16:39:02Z,2018-04-09T12:23:07Z
2573,#22461 condition decorator: support for if-unmodified-since and updating etags,"see ticket https://code.djangoproject.com/ticket/22461
",ttanner,None,2014-04-16T16:37:06Z,2014-10-30T17:38:31Z
2572,Fixed 22336 -- Add pattern match for path to match subdirectories,"Thanks infraredgirl for the report and Claude Paroz for the previous
fix in 20422.  I added an additional check to match the given patterns
against the full path and broke tests out to for checking filepatterns
and directory patterns.
",justhamade,None,2014-04-16T15:26:00Z,2014-08-08T22:21:25Z
2571,Fix of removal of a ForeignKey field in a migration in MySQL,"https://code.djangoproject.com/ticket/22460
",motiejus,None,2014-04-16T15:17:32Z,2014-06-12T10:38:48Z
2570,Fixed #20916 - Added support for a `simple_login` test client method.,"`simple_login` takes a user instance and logs you in as that user. You no longer have to manage user credentials in tests.

Ticket: 20916.

Todo:
- [ ] Add docs
",jfilipe,None,2014-04-16T14:54:29Z,2014-10-08T19:54:18Z
2569,Fixed #22353 -- Make sure that CachedStaticFilesMixin doesn't use ...,"...invalid cache entries instead hash the actual file.
",frog32,None,2014-04-16T14:19:38Z,2014-07-10T13:11:14Z
2568,Fixed #22457 -- Fixed contributing guide w/o github set-up,"The published commnand was not working when the user did not have
the git client set-up with the public-key. Changed the contributing
guide to clone it from https instead.
",jordiyeh,None,2014-04-16T13:31:52Z,2014-07-03T12:32:19Z
2567,Fixed #22447 -- Make sure custom model bases can be migrated.,"Thanks to cdestigter for the report.
",charettes,None,2014-04-15T22:58:54Z,2014-06-21T01:20:18Z
2566,Test the database connection before trying to determine the installed PostGIS version,"I've spent a lot of time trying to figure out why I was getting the following error:

```
Cannot determine PostGIS version for database ""test"". GeoDjango requires at least PostGIS version 1.3. Was the database created from a spatial database template?
```

after a large amount of rigorous checks to my PostGIS installation, I've figured out that the problem was of a totally different nature. GeoDjango was in fact printing this error also if the database's connection parameters  were wrong and for this reason I've added an additional check which tries to get the PostgreSQL version first. 

If the user tries to start GeoDjango using a wrong database password the output will now looks like:

```
FATAL:  password authentication failed for user ""test_user""
```

which makes much more sense...

https://code.djangoproject.com/ticket/22883
",g-div,None,2014-04-15T22:31:24Z,2014-06-23T18:07:12Z
2565,Fixed #22449 -- Colorized output of test results,"Added tests, code, and documentation for colorizing the output of the `manage.py test` commmand.
",jakebuhler,None,2014-04-15T22:29:38Z,2014-11-04T15:34:53Z
2564,Fixed #21587 -- deprecation warning for upcoming permanent default,,arachnegl,None,2014-04-15T21:53:24Z,2014-06-16T14:40:18Z
2563,Forces ManyToManyField to always be null=True.,,gabrielbrasil,None,2014-04-15T21:48:58Z,2014-06-18T19:20:45Z
2562,Fixed #21987 -- Add support for custom MEDIA_TYPES to Media objects.,"Moved the MEDIA_TYPES list into the Media class and updated the methods
to support subclasses that add to the list. Because some of the methods
rely on knowing that media is stored in _media_name attributes on the
Media object, MEDIA_TYPES had to be updated to store both the type's
name and the constructor for its container.

I'm not super-happy about storing the constructor in `MEDIA_TYPES`, but I couldn't think of a better way to handle things that also supported `__add__` and `__getitem__` and didn't make any major API changes.

https://code.djangoproject.com/ticket/21987
",Osmose,None,2014-04-15T21:06:51Z,2015-03-13T13:01:03Z
2561,Fixed #22443 -- Document smtp.EmailBackend.timeout default value,"Django 1.7 introduces a new timeout parameter for the SMTP email backend:
http://docs.djangoproject.com/en/dev/topics/email/#django.core.mail.backends.smtp.EmailBackend.timeout

However, there's no mention of the default value for this parameter.
",mrezk,None,2014-04-15T20:22:04Z,2014-06-17T06:21:59Z
2560,Fixed #18767 -- Fixed Admin calendar for other locales than English,"Refactored openCalendar function from DateTimeShortcuts.js. Now, when
entered manually in the input field, the date will show up correctly on
the calendar for locales that don't use ""-"" for separator.
",maxocub,None,2014-04-15T19:41:25Z,2014-08-14T01:16:49Z
2559,Fixed #22426 -- Django >= 1.6.0 can't handle old style messages cookie,"Backported the code from 1.5 that adds backwards compatibility with legacy message length. The code that's backported is from commit 9e7183073f64e541587e8dcfd8bb3ddeb47f8162.
",Ofir-Purple,None,2014-04-15T16:00:57Z,2014-06-12T06:59:42Z
2558,Fixed #11776 -- Added CSS class for non-field/top of form errors.,"Fixing [#11776](https://code.djangoproject.com/ticket/11776) by adding a new arugment to `ErrorList` -- `error_classes`, which specifies additional CSS classes to use in rendering the error list.
",nickpresta,None,2014-04-15T15:41:45Z,2014-06-20T09:21:52Z
2557,Fixed #22439 -- Improved LiveServerTestCase logging,"There should no longer be any output to stderr or stdout from the
server thread.  All of the messages which had been going there, as
well as the ones which were previously being thrown away to
prevent them from interfering with the test runner output, should
now be logged to the ""django.request"" logger instead.
",jmbowman,None,2014-04-15T15:26:13Z,2015-03-14T20:12:26Z
2556,Multiline templates,"**WIP: do not merge!**
",loic,None,2014-04-15T02:36:23Z,2014-11-28T13:04:31Z
2555,Fixed #22440 -- Update ConditionalGetMiddleware to comply with RFC 2616,"`ConditionalGetMiddleware` was previously sending 304 Not Modified responses for non-successful status codes in violation of RFC 2616 section 14 http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html

Trac Issue: https://code.djangoproject.com/ticket/22440
",mlavin,None,2014-04-14T23:49:04Z,2014-06-14T00:03:52Z
2554,Fixed #22261 - Added attempt to use reverse() to get the flatpage url.,"Falls back to using just the flatpage.url, in case the catchall middleware is used.
Solves 3 use cases for adding flatpages -
- Using the catchall middleware.
- Adding an include(flatware) into your urls.
- Adding flatpages hardcoded (one by one) to your urls.
",Edan-Purple,None,2014-04-14T22:25:35Z,2014-11-04T15:35:41Z
2553,Ticket 18586,"This pull request references https://code.djangoproject.com/ticket/18586, which is primarily concerned with refactoring some overly long tests into more granular coverage. The refactored test suite passes on my system.
",liavkoren,None,2014-04-14T22:01:30Z,2014-06-16T09:46:39Z
2552,Fixed #18773 -- Add logging for template variable resolving,"Added a django.template logger with a default null handler.  Added
logging if there is an exception while resolving variables in a
template. Added corresponding tests and updated logging
documentation.
",cpsimpson,None,2014-04-14T21:41:46Z,2014-11-04T15:36:31Z
2551,Fixes #18763 -- Added with_perm to User manager.,"with_perm returns a queryset of users who have a permission matching the
given permission name.

https://code.djangoproject.com/ticket/18763
",Osmose,None,2014-04-14T21:41:17Z,2014-07-24T18:36:26Z
2550,Fixed #22434 and wrote test in the custom manager tests,,justhamade,None,2014-04-14T20:14:04Z,2014-06-18T18:23:33Z
2549,Fixed #22369 -- Added count parameter to assertTemplateUsed,"Added a new parameter, count, to assertTemplateUsed to facilitate asserting that a template was rendered a specific number of times. The default value for count is None, in which case assertTemplateUsed behaves exactly as it did previously, making everything backwards compatible.
",jakebuhler,None,2014-04-14T19:19:15Z,2014-06-13T07:52:48Z
2548,Fixed #22356 -- unique_together fails when referencing columns from base...,"... and child class
",frog32,None,2014-04-14T18:45:14Z,2014-06-13T06:06:59Z
2547,fixes #22378 by changing \d to [0-9]+ in all docs/ and tests/,"https://code.djangoproject.com/ticket/22378

As per tomwys' suggestion I changed the regular expressions in the docs and tests from `\d+` to `[0-9]+` in order to get around new issues created by unicode. I didn't change the docs specific to older versions of django because the older docs will still have `\d+`. I changed all expressions rather than just the ones concerning urls for consistency.
",chriscauley,None,2014-04-14T18:17:49Z,2016-10-26T20:57:31Z
2546,Added support for a `FileExtensionValidator`.,"Todo:
- [ ] Add docs
- [ ] Possibly add validator as default to ImageField

Ticket: 21548.
",jfilipe,None,2014-04-14T18:02:09Z,2014-07-19T15:55:04Z
2545,Fixed #18523 -- Added stream-like API to HttpResponse.,"Added getvalue() to HttpResponse to return the content of the response,
along with a few other methods to partially match io.IOBase.

I only added the methods/changes mentioned by unaizalakain in https://code.djangoproject.com/ticket/18523. If you want to add the rest of the methods from `io.IOBase`, let me know, I'm happy to make it fully compatible. :D
",Osmose,None,2014-04-14T17:22:41Z,2014-11-03T17:33:00Z
2544,"Fixed #22220, improved reverse() documention",,bendavis78,None,2014-04-14T17:09:50Z,2014-06-19T17:46:11Z
2543,Fixed #21158 - Set an implicit wait for selenium,"Added command to set the implicit wait immediately after creating the
WebDriver instance in AdminSeleniumWebDriverTestCase.
Changed JavascriptI18nTests to inherit from AdminSeleniumWebDriverTestCase
to avoid having to duplicate this logic.
",bobsilverberg,None,2014-04-14T16:02:47Z,2014-06-25T19:42:23Z
2542,Added support for a `simple_login` test client method.,"`simple_login` takes a user instance and logs you in as that user.

Ticket: 20916.

Todo:
- [ ] Add docs
",jfilipe,None,2014-04-14T14:13:26Z,2014-07-19T15:55:13Z
2541,Fixed #22398 -- Added detail about callable in KEY_FUNCTION docs,,arachnegl,None,2014-04-13T23:09:10Z,2014-06-25T23:23:14Z
2540,Copying section on common exceptions that can occur in the application l...,"Copying section on common exceptions that can occur in the application loading process from release notes to reference page.

https://code.djangoproject.com/ticket/22422
",valberg,None,2014-04-13T15:26:41Z,2014-06-12T06:58:08Z
2539,"Add tests, improve docs for field subclass with choices","This commit adds tests of a Field subclass with the `Field.choices` attribute set and clarifies the docs on `Field.choices`.

The docs currently somewhat misleadingly suggest that the first element of a 'choice' should be the actual value stored in the DB. This isn't the current behavior, nor would it be good behavior as it would require clients of the Field class to know how the Field actually stores values in the database. And for fields that store values differently on different databases - this would be a whole can of worms.

See https://github.com/mfogel/django-timezone-field/issues/7 for more backstory and confusion on this issue.
",mfogel,None,2014-04-12T04:32:48Z,2014-06-26T06:15:50Z
2538,Fixed #21760: prefetch_related uses an inefficient query to get the related fk data,"Ticket [#21760](https://code.djangoproject.com/ticket/21760).
",valtron,None,2014-04-12T01:30:30Z,2014-06-19T23:46:35Z
2537,Fixed #21166 -- Reset errors_occurred flag after commit and rollback.,,aaugustin,None,2014-04-11T20:56:09Z,2014-06-24T06:46:00Z
2536,Update request.py,"fix DNS name allow underline.
",wndfly,None,2014-04-11T09:42:59Z,2014-07-19T15:55:20Z
2535,Fixed a KeyError on login with legacy sessions; refs #21649.,,timgraham,None,2014-04-10T12:05:26Z,2014-06-24T13:54:00Z
2534,#22413 Allow model instance attributes in ModelAdmin.fields,,MoritzS,None,2014-04-09T18:25:12Z,2015-09-17T10:21:31Z
2533,Fixed #22343 -- Disallowed select_for_update in autocommit mode,"The ticket was originally about two failing tests, which are
fixed by putting their queries in transactions.

Thanks Tim Graham for the report and Simon Charette for review.
",shaib,None,2014-04-09T17:43:52Z,2014-06-24T06:47:00Z
2532,Fixed small typo in django-admin.txt,"The word 'by' seemed to be missing from the first line of the compilemessages command.
",ejstronge,None,2014-04-09T03:58:53Z,2014-07-19T15:55:22Z
2531,updating example that uses POST data to fill user/pass,"Seriously hope I did all this right. First time contribution -- sorry if I didn't !!

It just seemed criminal to set a username/password directly from POST data. Tried to update the auth/login documentation to something nicer.
",jlegs,None,2014-04-09T03:32:28Z,2014-07-19T15:55:23Z
2530,Refs #21230 -- removed direct settings manipulation from signed cookies tests,,whoshuu,None,2014-04-08T15:27:55Z,2014-06-25T23:22:59Z
2529,"Removed the regex used in _split_statement,introduced an optional dependency sqlparse and documented","Fixed this bug : 
https://code.djangoproject.com/ticket/22401
Now using sqlparse as an optional dependency.
added the documentation about sqlparse.

Keep Coding 
J
",pouete,None,2014-04-08T09:56:03Z,2014-06-24T07:40:10Z
2528,Fixed #22383 -- Added optional html required attribute to required field...,"- Added option to ad HTML5 `required` attribute to form fields which are `required`.
- As suggested on the ticket, we need to make this default, so considering that, the approach as used in https://code.djangoproject.com/ticket/20684 could be used here.

Refs. https://code.djangoproject.com/ticket/22383

**Needs to be reviewed, not ready for merge**
",coder9042,None,2014-04-08T08:16:18Z,2014-10-31T12:32:48Z
2527,Ticket22397,"**WIP, not ready for merge.**
",loic,None,2014-04-08T05:33:28Z,2014-06-25T23:22:53Z
2526,Fixed #22405 -- Fixed string error in models/queries docs.,"Ticket was opened just now by someone for this very small error regarding proper enclosing of string in `models/queries.txt`.
Refs. https://code.djangoproject.com/ticket/22405
",coder9042,None,2014-04-08T04:19:47Z,2014-06-16T01:06:18Z
2525,Refs #21230 -- removed direct settings manipulation from staticfile tests,,whoshuu,None,2014-04-07T23:11:47Z,2014-06-14T06:02:01Z
2524,Fixed #22403  i18n js - AMD support,"This is a patch for #22403

I have been having problems integrating the javascript i18n support with a complex javascript front-end. It would be tremendously useful for the global 'django' object - that is exported in 'django/views/i18n.py' - to also be exported as an AMD module. 

The AMD module supports is 100% optional. The 'django' javascript object is still exported as a global. 

---

I also fixed some small linting errors. In javascript it is better to use strict comparison with [triple equals](http://www.jshint.com/docs/options/#eqeqeq).

---

Suggestion for further modification:

I think that ideally, django would create a json object for each language catalogue and then the javascript client would make an xhr request for that file. Then there would no longer be a need to dynamically create javascript. In that case, that javascript could be bundled with the rest of the applications javascript - eliminating potential load time issues. 
",imorrison,None,2014-04-07T20:15:56Z,2014-06-24T06:22:27Z
2523,docs: add missing parameter `request` into `get_current_site`,,flisky,None,2014-04-07T13:21:33Z,2014-07-11T02:40:28Z
2522,Fixed #22396 admin AllValuesFieldListFilter not respecting ModelAdmin.get_queryset,"Admin's AllValuesFieldListFilter object does not respect ModelAdmin.get_queryset. Instead it mysteriously calls reverse_field_path() method and uses the _default_manager to get the queryset.

It causes problems when the default database has no table for the model, and only the other databases has the table. It causes ""Table not found"" query error message.
",serialx,None,2014-04-07T07:48:50Z,2014-06-15T08:06:16Z
2521,re-fix #13147 by overriding username uniqe error message,"use username from field definition with custom error_messages and validators, more DRY and esay for subclass from `UserCreationForm` and `UserChangeForm`.
",flisky,None,2014-04-06T15:52:46Z,2014-07-11T02:40:41Z
2520,Fixed #22391 -- Use pymysql if MySQLdb not available.,"https://code.djangoproject.com/ticket/22391
",collinanderson,None,2014-04-05T20:58:40Z,2014-06-18T20:21:21Z
2519,Fixed #22102 -- Made SimpleTestCase tests run before unittest.TestCase ones,"Thanks aptiko for the report.
",claudep,None,2014-04-05T15:35:03Z,2014-06-16T08:42:39Z
2518,#21084: Use proxy model's content type for admin log entries,,ghost,None,2014-04-05T13:29:41Z,2014-06-22T14:09:43Z
2517,Fixed #21977 -- Deprecated SimpleTestCase.urls in favour of override_settings,"Replaced `SimpleTestCase.urls` with `@override_settings(...)`.
Added warning in the function.
Updated the docs.
",coder9042,None,2014-04-05T07:20:15Z,2014-06-17T16:42:50Z
2516,Fixed #5437 -- Added GDAL prereq check to code that requires GDAL,"Added skipUnless decorator to necessary tests that required GDAL.
Added if HAS_GDAL check to prevent model from being included
without GDAL.
",vlal,None,2014-04-04T09:31:47Z,2014-06-13T12:29:52Z
2515,Removed casting to bool just before negation.,,tomwys,None,2014-04-04T07:18:15Z,2014-07-19T15:55:53Z
2514,Fixed #22380 -- Missing SECRET_KEY variable in sample settings file for ...,"Missing SECRET_KEY variable caused runtests.py to throw an error. Added variable to example settings file.
",vlal,None,2014-04-04T04:07:06Z,2014-06-25T21:17:50Z
2513,Update django.po,"Just changed the ""،"" to ""و"" :) 

Thank you please.
",narimangharib,None,2014-04-03T16:14:58Z,2014-07-19T15:55:58Z
2512,SelectDateWidget refactor.,,tomwys,None,2014-04-03T14:52:02Z,2014-07-19T15:55:59Z
2511,Refactor strip_tags.,,tomwys,None,2014-04-03T07:04:34Z,2014-07-19T15:56:01Z
2510,Further work on PR #2447 for fixing ticket 16735,"See https://code.djangoproject.com/ticket/16735
",ramiro,None,2014-04-02T23:31:01Z,2018-08-09T18:50:58Z
2509,Refactor. Stop using memory for list copies.,,tomwys,None,2014-04-02T15:34:13Z,2014-07-10T17:15:49Z
2508,Don't copy list for iteration.,,tomwys,None,2014-04-02T15:28:37Z,2014-06-24T13:52:39Z
2507,Remove redundant check.,"This is checked by _strip_once anyway. Checking same thing
twice makes no sense.
",tomwys,None,2014-04-02T13:23:42Z,2014-07-19T15:56:09Z
2506,Fixed #22347 FileSystemStorage documentation unified,"Moved parameter definitions from topics to reference docs. Added a link from topics to reference docs.
",vlal,None,2014-04-02T08:12:18Z,2014-06-25T23:22:20Z
2505,Fixed #22372 Modified docstring and docs for get_context_data function for WizardView,"Modified docstring and docs to reflect the discrepancy between get_context_data implementation in WizardView Class.
",vlal,None,2014-04-02T06:21:23Z,2014-06-24T08:30:39Z
2504,Fixed #22218 -- Deprecated django.conf.urls.patterns.,"https://code.djangoproject.com/ticket/22218
",timgraham,None,2014-04-02T01:10:37Z,2014-06-16T12:54:05Z
2503,Fixed #22364. Sanitized getpass input in changepassword,"Python 2 getpass on Windows does not accept unicode, even
when containing on ASCII characters.

Related #19807.  The tests for it in 02e5909 seem to force a byte string, so unsure if additional testing is required here.

Verified fix on Windows 7.  All tests pass with default runtests.py command.   
",johnpaulett,None,2014-03-31T20:46:02Z,2014-06-25T23:23:01Z
2502,Fixed #22363 -- Correctly serialize `django.utils.datetime_safe` objects.,"Thanks to linovia for the report.
",charettes,None,2014-03-31T20:19:34Z,2014-06-26T06:13:46Z
2501,Fixed #22350 -- Consistently serialize bytes and text in migrations.,"Thanks to treyhunner for the report and Loïc for the initial patch.
",charettes,None,2014-03-31T19:31:17Z,2014-06-21T00:27:58Z
2500,Fixed #6707 -- Added RelatedManager.set() and made descriptors' __set__ use it.,,loic,None,2014-03-31T15:15:43Z,2015-02-05T05:47:53Z
2499,Fixed #22359 -- Changing M2M field to blank=True failed on sqlite.,,loic,None,2014-03-31T06:18:16Z,2014-06-12T05:17:28Z
2498,Moved ServerHandler helper class to tests.,"It has been only used in the builtin_servers tests since Django 1.4.
",ramiro,None,2014-03-30T23:58:01Z,2020-06-25T13:13:59Z
2497,Add Python 3.4 to classifiers in setup.py.,"I've ran the test suite with Python 3.4.0:

```
$ python3.4 -m venv venv34
$ . venv34/bin/activate
$ pip install -e .
$ cd tests/
$ ./runtests.py
...
Ran 6783 tests in 313.773s

OK (skipped=540, expected failures=7)
```
",berkerpeksag,None,2014-03-30T18:46:24Z,2014-07-19T15:56:33Z
2496,Fixed #14030 -- Allowed annotations to accept non-aggregates,"This PR supersedes https://github.com/django/django/pull/2184 and fixes https://code.djangoproject.com/ticket/14030.

Annotate has learned to accept non-aggregates, and aggregates can now use F() objects and arithmetic, since they now derive from ExpressionNode:

```
Author.objects.annotate(combined_ages=Sum(F('age')+F('friends__age')))
Author.objects.annotate(double_age=F('age')*2)
```

 ML discussion: https://groups.google.com/forum/#!topic/django-developers/8vEAwSwJGMc

I'm going to close the previous PR which only implements the aggregates refactor. The additional commits for this PR allow non-aggregate annotation, and includes the beginnings of documentation.

There's still a little bit to be done, but I'm confident that both of these items can be completed in a fairly short timeline (within a week if required immediately):
- ~~Complete documentation~~
- ~~Implement deprecation path~~
  - ~~renamed aggregates to annotations attribute on sql/query.py~~
  - ~~sql/aggregates should no longer be used~~

I'm fairly sure the code is solid and ready for review. I admit, it's a big change. But it does increase the utility of aggregates and annotations significantly, and allows users to implement their own aggregates and expressions very succinctly.
",jarshwah,None,2014-03-30T14:07:02Z,2014-11-15T14:05:58Z
2495,Fixed mistake in tests from commit 2039908. Refs #19816.,,loic,None,2014-03-30T11:51:24Z,2014-06-26T06:09:42Z
2494,Fixed #21649 -- Added invalidation of old sessions when user password changes,,timgraham,None,2014-03-30T00:38:29Z,2014-06-13T14:21:34Z
2493,Fixed #21795 -- Made add_preserved_filters account for url prefixes.,,loic,None,2014-03-29T05:49:24Z,2014-06-26T06:09:42Z
2492,Fixed #22306 -- Deprecated future versions of cycle and firstof,"Deprecated future versions of cycle and firstof. Modified release notes and deprecation timeline. Removed usage of future versions of cycle and firstof by Django
",maxocub,None,2014-03-27T20:45:03Z,2014-06-13T12:49:59Z
2491,Corrected a typo in es_AR and es_MX translations,,poligarcia,None,2014-03-27T20:44:13Z,2014-07-19T15:56:40Z
2490,Fixed #22319 -- Fixed migration external dependencies when there are int...,"...ernal dependencies.
",loic,None,2014-03-27T17:45:39Z,2014-06-14T06:46:26Z
2489,Fixed transaction handling for a number of operations on related objects...,".... Refs #21174.
",loic,None,2014-03-27T17:33:37Z,2015-02-03T23:27:40Z
2488,Fixed a deprecation warning with the HTMLParser safe argument.,"refs 6ca6c36f82b97eafeada61384b2e2f1d0587da86
",timgraham,None,2014-03-27T12:10:10Z,2014-07-19T15:56:44Z
2487,Fixed #19816 -- Pre-evaluate querysets used in direct relation assignments.,,loic,None,2014-03-27T11:41:56Z,2014-06-26T06:09:33Z
2486,Skipped a test that errors rather than marked it as an expectedFailure.,"The test throws an error which Python 3.4 doesn't seem to catch as an
expectedFailure.

refs 7476d96f83a004d674244aeb7a66289035427396
",timgraham,None,2014-03-26T23:10:11Z,2014-07-19T15:56:47Z
2485,django.contrib.postgres.fields.ArrayField,"This is a first draft of Array fields. The basic field definition is there, with the required functionality to handle arrays of almost any type. I've also written the lookups/transforms specific to array fields.

Work still to do:
- [x] Docs
- [x] Form fields (naive and admin) and data cleaning
- [x] Handling dimensions

The last of these is a particularly interesting case. Postgres has a ""casual relationship"" with the definition of an array field. You can create `integer[]`, `integer[][]`, `integer[3][4]` etc, but [postgres docs](http://www.postgresql.org/docs/9.3/static/arrays.html#ARRAYS-DECLARATION) state that this is basically just documentation as it is not enforced at all. We have a couple of options here:
- Force single dimensional, unbounded arrays always. This would be pretty boring.
- Allow `max_size=4` and do python side only validation. We'd still pass the correct `[4]` to postgres, but it won't enforce integrity.
- Allow a complex `dimensions` flag to be passed allowing for any option. I think this isn't needed as if you want a 2-dimensional array you could do `ArrayField(ArrayField(IntegerField()))`. This also makes the code path much easier as all the functions which delegate to the `base_field` don't have to worry about its dimensions.

In the absence of strong opinion otherwise, I'm going to do option 2.

Other notes for reviewers:
- Related fields are banned. For M2M this is quite obviously necessary, but I've done so for FKs as well as they currently do not support referential integrity, which is what Django FKs try to enforce. Otherwise just use an integer.
- Postgres uses 1-based indexing, but I'm converting this in the lookups from 0-based indexing. If someone is used to writing a lot of raw pg queries directly, this will be confusing, but to a normal python user we expect 0-based indexing everywhere.
- At present I have not implemented `contained_by`, which is `contains` with the arguments reversed. It's basically a ""is subset"" operator. Thinking about it as I'm writing this, I think it does have use cases so I should add it in.
- String based lookups (`__iexact`, `startswith` etc) continue to be accepted, even though they are largely useless. `contains` has been overloaded with a more sensible implementation. This is on the principle that date based fields accept them, and the query is functional (casts everything to text). Personally, I would like fields to only support the lookups which make sense on them now that is easily done, but this is a backwards incompatible change. I may open it up as a ticket when working on refactoring `__year` etc into transforms.
- The approach for handling test models is copied from gis. As Anssi said on IRC, it might be nice if runtests didn't need to know about this, but it'll do for now.
- There's a bit of hackery with the `deconstruct` method which means the `__init__` accepts two formats for the base field. I wonder whether this could be avoided if there is a suitable hook in `migrations.writer` to allow me to pass a string containing the correct field definition for the `base_field` from `deconstruct`. This would make the migration files look less weird. @andrewgodwin is this sensible? Also should I have explicit tests that migrations work, and if so what would that look like?
",mjtamlyn,None,2014-03-26T17:20:22Z,2014-10-02T15:28:44Z
2484,Added Python 3.4 support notes.,,timgraham,None,2014-03-26T14:56:55Z,2014-07-19T15:56:51Z
2483,Fixed the PostGIS circular imports caused by 1506c71a95.,"refs #12030.

Hopefully this will be the latest fix for #12030.
1. We can't access `connection` at `IntegerField` creation time (module import time) since the PostGIS backend defines models with `IntegerField` and it triggers a circular import. Thus we must delay access to `connection`, hence the cached property.
2. We can't simply append those validators to `self.validators` to avoid polluting migration with database backend specific validators. Hence the `range_validators` property. See ff874f363ce6556577f03909b15c71c051d5b617.
3. We want to make sure `range_validators` behave just like normal validators in regard to their aggregation logic in `run_validators` while keeping the code DRY. Hence the `extra_validators` kwarg of `Field.run_validators()`.
",charettes,None,2014-03-26T01:54:03Z,2014-06-24T00:53:10Z
2482,Integer bound regression,"Fixes the regression: http://ci.djangoproject.com/job/Django/database=postgis,python=python2.7/4260/console introduced by https://github.com/django/django/commit/1506c71a95cd7f58fbc6363edf2ef742c58d2487
",jarshwah,None,2014-03-26T01:00:03Z,2014-07-06T06:51:43Z
2481,Fixed #22335 -- Fixed popen_wrapper error on non-English Windows systems.,,zsiciarz,None,2014-03-25T23:44:55Z,2014-06-25T23:13:32Z
2480,Clarified the documentation of the kwargs param to django.conf.urls.url(),"The reference documentation for the url() function now links to the example
elsewhere in the documentation.

The explanation of URL processing explains how the kwargs parameter is
combined with the results of the regexp match
",timmartin,None,2014-03-25T21:33:57Z,2014-06-13T21:24:50Z
2479,Fixed #9535 -- Patched up file-upload documentation.,"Refs. https://code.djangoproject.com/ticket/9535

Created a separate file for `UploadedFile` & `UploadHandler`.
Added some details and link in `file-upload`
Linked up other docs with `file-upload`.
",coder9042,None,2014-03-25T20:16:41Z,2014-06-17T14:04:52Z
2478,Fixed field deconstruction tests failures introduced by 1506c71a95.,"refs #12030.
",charettes,None,2014-03-25T20:05:38Z,2014-07-19T15:57:07Z
2477,Fixed #22331 -- Made MigrationAutodetector ignore unmanaged models.,"This commit reverts 69d4b1c and tackle the issue from a different angle.
Models remain present in the project state, but are now ignored by the
autodetector.
",loic,None,2014-03-25T18:36:10Z,2014-07-19T15:57:09Z
2476,"Fixed #22334 -- Postgis version regexp update to allow ""dev"" versions","https://code.djangoproject.com/ticket/22334
",Xowap,None,2014-03-25T15:50:35Z,2014-06-25T23:13:01Z
2475,Fixed #22322 -- Fixed incorrect explanation of what managed=False does.,"refs #14305.

Thanks Adrian Klaver for the report.
",timgraham,None,2014-03-25T14:20:06Z,2014-06-26T06:09:27Z
2474,Fixed #22331 -- Fixed migrations ProjectState to ignore unmanaged models,,loic,None,2014-03-25T14:03:37Z,2014-06-16T02:30:36Z
2473,Improve error message in django.contrib.sitemaps,"Using FlatPageSitemap without django.contrib.sites installed raises a slightly confusing exception which 
looks like a copy'n'paste error to me: 

> ping_google() requires django.contrib.sites

should say

> FlatPageSitemap requires django.contrib.sites
",jnns,None,2014-03-24T16:59:24Z,2014-07-19T15:57:16Z
2472,Ticket 22328,,infraredgirl,None,2014-03-24T14:25:47Z,2014-07-03T10:12:08Z
2471,Fixed #22329 -- Used label_tag() in some admin auth templates.,"refs #17922.
",timgraham,None,2014-03-24T12:51:20Z,2014-06-17T06:36:33Z
2470,Fix #22265: The text was too strong in its assertion,"The text was too strong in its assertion of the consistency of migrations across development and production servers.
",mmardini,None,2014-03-24T11:11:14Z,2014-07-18T10:44:03Z
2469,Less restrictive DATE(TIME)_INPUT_FORMATS,"Dutch ('nl-NL' and 'nl-BE') has several valid input formats; see http://nl.wikipedia.org/wiki/Datum_(dagtekening). I have added the common ""/"" divider as in 24/03/2014.
",SaeX,None,2014-03-24T08:40:24Z,2014-06-25T02:21:41Z
2468,Deal with connection close (client- or server-initiated) in transaction.atomic(),"See Trac tickets #21202 and #21239.
",aaugustin,None,2014-03-23T20:47:25Z,2014-06-19T14:25:20Z
2467,Turn *EmailBackend into contextmanager,"This pull request turns `django.core.mail.backends.BaseEmailBackend` into a contextmanager that can be used in a with statement. This is useful, if you are sending multiple messages as described in [https://docs.djangoproject.com/en/dev/topics/email/#sending-multiple-emails]. The example mentioned there basically turns into

```
with mail.get_connection() as conn:
    # ...
    mail.EmailMessage(..., connection=conn).send()
    # ...
```

which makes it less likely to forget the calls to `.open()` and `.close()`.

I've added a test but no documentation, yet. For documentation I considered adding a `.. versionadded:: ...` directive but I was unsure on which version to use and would appreciate any pointers you could give me regarding that problem.
",DasIch,None,2014-03-23T16:37:06Z,2014-06-19T03:41:09Z
2466,Fixed #22318 -- Added Form.has_error() to easily check if a given error ...,"...has happened.
",loic,None,2014-03-23T11:36:36Z,2014-06-27T14:34:43Z
2465,Fixed #22257 -- Added file output option to dumpdata command.,"Added `-o` or `--output` to dumpdata for specifying filename to which the data would be written.
default still `stdout`.
People may prefer this on case of small databases.
Also its backwards compatible

Refs.
- https://code.djangoproject.com/ticket/22257
- https://code.djangoproject.com/ticket/22251
",coder9042,None,2014-03-23T06:49:39Z,2014-06-22T07:27:07Z
2464,Fixed #12030 -- Validate integer field range at the model level.,"Locally tested against (Py2, Py3) X (SQLite3, PostgreSQL, MySQL) (only missing Oracle).

It's missing a release note since we might want to backport this bugfix to the 1.7.x branch?
",charettes,None,2014-03-23T00:34:48Z,2014-07-12T07:44:44Z
2463,Fixed #22315 -- str/bytes mismatch in staticfiles,"Trac ticket is here: https://code.djangoproject.com/ticket/22315
",evansd,None,2014-03-22T22:04:04Z,2014-06-24T08:56:14Z
2462,Fixed #20684 -- Added support for HTML5 boolean attributes to form widgets.,,loic,None,2014-03-22T17:22:14Z,2014-06-18T01:03:07Z
2461,Fixed a failing test introduced in 918a16bc4c099ab0cae72a231de3e99e2a9d0...,"...2cb.

Refs #22307.
",bmispelon,None,2014-03-22T16:34:48Z,2014-07-19T15:57:45Z
2460,get_current_site() can retrieve Site instance from request if no SITE_ID,"Previous to this commit get_current_site() would return a Site instance
if SITE_ID was configured in settings or a fake RequestSite instance
with just domain and name attributes set from the request. Whilst this
RequestSite instance is useful in some cases, it doesn't have a pk so no
other instances can be saved against it as a foreign key.

The problem became apparent when I tried to use django-cms with
multiple sites in a single Django instance. Pages need to be saved with
a Site as a foreign key. The only work-around seems to be adding some
custom middleware to change settings.SITE_ID based on the request.

I feel this issue causes a lot of frustration because people expect the
sites framework to act differently and the solution is very hacky. Here
are some examples of people trying to work around this:

https://groups.google.com/forum/#!topic/django-cms/jQNWVos9vg8
http://blog.uysrc.com/2011/03/23/serving-multiple-sites-with-django/
https://groups.google.com/forum/#!topic/django-users/yplycyyD8ZE
http://stackoverflow.com/questions/18845883/multiple-sites-on-django
http://sandbox.effbot.org/zone/django-multihost.htm
",damianmoore,None,2014-03-22T12:05:26Z,2014-09-30T18:00:42Z
2459,Fixed a failing test introduced in 918a16bc.,"Refs #22307.
",aaugustin,None,2014-03-22T10:17:58Z,2014-06-24T01:25:09Z
2458,Made m2m fields form help_text munging specific to admin widgets.,"Refs #9321 and follow-up to e80de93af6a0a21a9063a55c4d6d20e3927243e9.
",ramiro,None,2014-03-22T01:41:03Z,2014-07-19T15:57:50Z
2457,"Made ModelForm, modelform_factory, modelformset_factory, and generic mod...","...el views raise ImproperlyConfigured if the list of fields is not explicitly specified.

refs #19733.

This should be good to go, I just want to review it when I am fresh in the morning. Mostly posting to avoid someone else duplicating the work before I push it, but feel to review.
",timgraham,None,2014-03-22T00:49:48Z,2014-06-25T21:15:41Z
2456,Fix typo,,rizumu,None,2014-03-21T16:25:09Z,2014-07-19T15:57:56Z
2455,Fixed SpooledTemporaryFile bug in File class.,"Added condition to prevent checking the existence of a file name of a
file like object when the name attribute is None. This is necessary
because a SpooledTemporaryFile won't exist on the file system or have a
name until it has reached its max_size. Also added tests.
",hlawrenz,None,2014-03-21T15:05:25Z,2014-06-25T06:21:33Z
2454,Fixed #21597: Validated database connection,,errx,None,2014-03-21T14:58:39Z,2014-06-15T10:10:15Z
2453,Fixed #22302 -- Completed Finnish number/date formats,"https://code.djangoproject.com/ticket/22302
",anttihirvonen,None,2014-03-21T09:12:00Z,2014-06-19T10:22:46Z
2452,Migrations: Make sure old_field_dec was a rel field before trying to acc...,"...ess relevant keys.
",melinath,None,2014-03-21T08:05:46Z,2014-06-16T14:37:16Z
2451,Fixed #22299 -- Cleanup wizard temp files when possible.,,charettes,None,2014-03-21T07:39:00Z,2014-06-25T23:13:01Z
2450,Fixed a very minor syntax error in Queryset docs.,"Not sure if you all accept such minor PRs, but I noticed this small syntax error. I also swapped the kwargs to match line 967/974.
",bryanhelmig,None,2014-03-21T06:36:02Z,2014-07-19T15:58:07Z
2449,Fixed flake8 warnings in six.py utility,,AmiZya,None,2014-03-20T16:40:30Z,2014-07-19T15:58:08Z
2448,Fix _alter_many_to_many to not rename the table to itself,"Fixes #22293.

https://code.djangoproject.com/ticket/22293
",blueyed,None,2014-03-20T04:13:23Z,2017-03-25T21:42:06Z
2447,Fixed #16735 - Queryset values should be aliasable,"Adds the ability to provide aliased field names on .values() querysets.  See https://code.djangoproject.com/ticket/16735 for discussion.
",bendavis78,None,2014-03-19T23:26:38Z,2014-07-19T15:58:10Z
2446,"doc: get_formsets is deprecated, refer to get_formsets_with_inlines",,blueyed,None,2014-03-19T21:29:35Z,2014-07-19T15:58:11Z
2445,Fixed #16205 -- Added beginner guide for windows.,"This is mostly the work from https://code.djangoproject.com/attachment/ticket/16205/16205.diff
I have removed ""Setting up ENV vars"" as decided as Users must know this, instead just written to ensure that ENV vars have been set up.
Improved upon language at some places.
Added issues to `Common Pitfall`. If anything more can be added to `common pitfalls`, I'll be glad to do it.

Also I think something needs to be done about https://code.djangoproject.com/wiki/WindowsInstall
",coder9042,None,2014-03-19T18:51:28Z,2014-06-18T21:25:16Z
2444,Fixed failing test in gis app,"The migrations test in the `contrib.gis` app was failing on MySQL due to an incompatible field definition.  This PR fixes that.

http://ci.djangoproject.com/job/Django/database=mysql_gis,python=python2.7/4198/testReport/junit/django.contrib.gis.tests.gis_migrations.test_commands/MigrateTests/test_migrate_gis/
",bigsassy,None,2014-03-19T00:42:02Z,2014-06-26T06:11:14Z
2443,Fixed #22253 -- Added django-i18n to the mailing lists docs.,,coder9042,None,2014-03-18T17:08:58Z,2014-06-12T05:03:48Z
2442,Fixed regression in file locking on some platforms.,"Some platforms with os.name == 'posix' do not have the
fcntl module, e.g. AppEngine.

refs #19373.
",timgraham,None,2014-03-18T12:56:39Z,2014-06-27T14:34:43Z
2441,Fixed return image dimensions,"Return tuple of None if image is not valid

I use ImageField for get image and other files.
If I get other files then Django return exception `TypeError: 'NoneType' object has no attribute '__getitem__'`
",vlastv,None,2014-03-18T11:14:12Z,2014-07-19T15:58:25Z
2440,dumpdata: mention that ``--natural`` is deprecated,,blueyed,None,2014-03-17T17:51:36Z,2017-03-25T21:41:37Z
2439,Amended login required mixin documentation to honor **initkwargs.,,charettes,None,2014-03-17T16:05:29Z,2014-07-19T15:58:31Z
2438,[1.4.x] Fixed #19252 -- Added support for wheel packages.,"Backport from master (a5becad9094e5c5403b692b9a7b3a6ffaabf64a3).
",wiget,None,2014-03-17T15:29:03Z,2014-06-18T18:39:38Z
2437,Update actions.py,"Cascade log, on delete from actions delete_selected.
",leonardocsantoss,None,2014-03-17T14:43:08Z,2014-06-30T02:59:23Z
2436,fix:ImportError: No module named fcntl,"fcntl module may not be available in some app engine.
",smallcode,None,2014-03-17T10:47:22Z,2014-06-13T13:15:16Z
2435,Fixed #21991 -- Added warning regarding tests failure if locales not installed,"Refs. https://code.djangoproject.com/ticket/21991
",coder9042,None,2014-03-16T09:06:26Z,2014-06-27T05:12:16Z
2434,added documentation for invalid cookies,,PirosB3,None,2014-03-15T19:18:55Z,2014-06-13T03:48:39Z
2433,Fixed #22184 -- Isolated template_tests.tests,"import was missing in `get_template_tests` which i used in creation of `cache_loader`
",coder9042,None,2014-03-15T11:04:35Z,2014-06-26T06:11:14Z
2432,Fixes #21587 Added Deprecation Warning for upcoming permanent default,"As noted in the ticket, we need a deprecation warning.  This adds the warning into the current version, a test to make sure the warning indeed warns, and then changes to the documentation about the upcoming change.
",kcphysics,None,2014-03-14T22:58:42Z,2014-06-12T09:35:00Z
2431,Fix for #22232,"Fix for #22232 preventing RuntimeError Maximum Recursion Depth Exceeded when a template extends itself.
https://code.djangoproject.com/ticket/22232
",NathanRSmith,None,2014-03-14T20:39:50Z,2014-08-04T13:27:55Z
2430,Fixed #21989 - AU locale has incorrect Day Of Week,"https://code.djangoproject.com/ticket/21989
",NathanRSmith,None,2014-03-14T18:06:45Z,2014-06-15T02:26:56Z
2429,"Fixed #22262, Added the correct line in the last example of Translator lines","Fixed the last example in the doc.
",dekomote,None,2014-03-13T13:09:28Z,2014-06-25T23:04:09Z
2428,Ticket 21798,,PirosB3,None,2014-03-13T11:35:08Z,2014-06-12T20:29:46Z
2427,#22255 Implemented support for re flags in RegexValidator,"Added a new parameter to RegexValidator - flags that gets passed to re.compile. 
",dekomote,None,2014-03-13T11:28:21Z,2014-06-25T08:12:33Z
2426,Fix KeyError in _rel_agnostic_fields_ref for uncommon `rel.to` setup,"NOTE: I am not sure, if this is a bug with django-taggit instead, which should have returned `to` in its deconstruction.

django-taggit manually sets up `rel.to` and therefore there is no ""to"" kwarg.

Fixes https://code.djangoproject.com/ticket/22263
Ref: https://github.com/alex/django-taggit/issues/206
",blueyed,None,2014-03-13T02:36:18Z,2014-06-21T01:15:34Z
2425,Make Field.db_parameters() use db_type(),"This reverts parts of ca9c3cd, which appear to have been made unintentionally.

It removes support for `db_type` to return the ""CHECK (%s)"" constraint suffix.
Internal code appears to use `db_parameters` for this.

Fixes https://code.djangoproject.com/ticket/22260.

This needs tests. Please point me at where to put them, and how to test this best.
",blueyed,None,2014-03-12T22:03:49Z,2017-03-25T21:40:52Z
2424,Fix a grammar error in topics/i18n/translation.,"Hooks are quantum; you can not have an amount of them.
",colons,None,2014-03-12T17:17:12Z,2014-06-14T10:23:05Z
2423,Preparation to commit fix for #22217,"Tweaks to https://github.com/django/django/pull/2402
",ramiro,None,2014-03-11T22:21:04Z,2018-08-09T18:50:22Z
2422,Typo in the PATH fallback,"The fallback for PATH was [], but that leads to ""'list' object has no attribute 'split'""

This corrects that fallback to ''

Includes a unit test to prevent regression.
",vegitron,None,2014-03-11T19:59:10Z,2014-06-24T07:19:23Z
2421,Fixed #22016 - reload i18n files on change,"- compiles .po files into .mo files if the .mo doesn't exist, or if the .po file is newer than the .mo
- handled in trans_real, so anything using django.util.translation (like templates) sees the changes
- also changed the javascript_catalog generation code
- no server restarts or compilemessages required!
- unit tests for all of the above
",vegitron,None,2014-03-11T19:47:28Z,2014-12-24T18:12:33Z
2420,Fixed #22016 - reload i18n files on change,"- compiles .po files into .mo files if the .mo doesn't exist, or if the .po file is newer than the .mo
- handled in trans_real, so anything using django.util.translation (like templates) sees the changes
- also changed the javascript_catalog generation code
- no server restarts or compilemessages required!
- unit tests for all of the above
",vegitron,None,2014-03-11T16:52:28Z,2014-07-19T15:59:06Z
2419,Add warning to call django.setup() when running tests outside of manage.py,,peterlandry,None,2014-03-11T15:55:49Z,2014-06-13T04:52:50Z
2418,Tweak password admin change form view context. Refs #21293.,,ramiro,None,2014-03-11T13:13:19Z,2018-08-09T18:50:08Z
2417,Incorrect description of startproject command,"The startproject command said that any option passed to ""startapp"" (instead of ""startproject"") would be passed in the template context. Although this seems like an obvious mistake, it made me initially wonder if the startproject command also took a startapp argument
",wesleykendall,None,2014-03-11T03:16:19Z,2014-07-19T15:59:10Z
2416,Fixed #21875 -- Clarified that get_user_model() only works at run time.,"Thanks Benjamin White for the report.
",aaugustin,None,2014-03-10T20:12:37Z,2014-06-12T08:12:31Z
2415,Add auto detection of renamed models,,SmileyChris,None,2014-03-10T00:52:07Z,2019-09-26T19:42:19Z
2414,Update tutorial01.txt,,beckastar,None,2014-03-09T21:40:02Z,2014-07-19T15:59:18Z
2413,added unique constraint to the email field of auth.AbstractUser,,jbcurtin,None,2014-03-09T18:26:05Z,2014-06-18T08:00:49Z
2412,Fix for ticket #22234,"On Windows platforms, `os.system` is used to invoke the dbshell command, but special characters in parameters (e.g. in the password) are not escaped in any way. `subprocess.call` takes care of stringification of argument lists on Windows platforms.
",lanzz,None,2014-03-09T11:05:42Z,2014-08-04T13:25:01Z
2411,Fixed #22341 -- Turned django.db.models.fields.related into a package,"**POC** turned into a PR for **review purpose**.

**Not ready for commit.**
",loic,None,2014-03-08T05:40:30Z,2015-01-09T13:13:12Z
2410,Fix for ticket #21963 and proper fix for previous issue #19552,"Inline translators comment and comment blocks in PO files now are in correct places and not ignored. 

New test case added with months from ticket #21963, previous test for issue #19552 is modified because of incorrect behavior (ignoring inline comments in front and placing others for wrong translation strings)
",dzhibas,None,2014-03-07T12:39:55Z,2016-07-08T23:58:49Z
2409,Fixed #22224 -- Non-nullable empty string based fields handling of `None`,"Those fields shouldn't consider `None` as an empty value.
",charettes,None,2014-03-07T07:38:59Z,2014-09-08T19:52:33Z
2408,Fix unnecessary escaping of path chars in reverse() (#22223),"The path segments concatenated by reverse() only need to get characters
quoted that are reserved as per section 3.3 of RFC-3986.

Unreserved characters that Django currently quotes as part of the work done
on #13260 are: "":@&=+$,""

Quoting unreserved characters leads to issues in situations where client and
server require unambigious URL representation, like creating a signature base
string in OAuth 1. Here the client produces a digest of a URL with quoted
chars, while the server ends up with a digest of the unquoted chars, leading
to different signatures (see
https://groups.google.com/forum/#!msg/django-developers/ZLGk7T4mJuw/4RqfgbZ-jOQJ).

To address this change still applies urlquote, but excludes the unreserved
path characters.
",erikvanzijst,None,2014-03-07T06:45:32Z,2014-06-30T13:42:37Z
2407,Ticket #16920 -- Added GenericRelation tests,"First test ensures related_name may not be set with GenericRelation.
Second test ensures that two models with the same name, but living in a
different app, do not cause a related_name clash when both defining a
GenericRelation to the same related model.
",gabejackson,None,2014-03-06T18:06:00Z,2015-03-14T22:57:06Z
2406,"Support min_num on admin inline forms, per #17642",,timgraham,None,2014-03-06T17:13:15Z,2014-07-07T01:58:27Z
2405,Fixed #22070 -- Changed verbose_name to use title case,"Changed verbose_name in each apps.py under django.contrib to match title casing used in AppConfig.
",JJinx,None,2014-03-06T15:38:46Z,2014-06-25T23:03:49Z
2404,Ticket #22210: Saving Model instance to Float Field,"- Added failing test case
- Added fix
- All tests passing

This is the first time I contribute to Django, please let me know if I need to adjust something :)
",PirosB3,None,2014-03-06T15:08:20Z,2014-06-24T23:47:13Z
2403,Fixed #21231 -- Limited request data upload sizes for extra safety.,"Includes `DATA_UPLOAD_MAX_MEMORY_SIZE`, similar to the existing
`FILE_UPLOAD_MAX_MEMORY_SIZE`, and raises `SuspiciousOperation` on
requests that exceed it.

Refs https://code.djangoproject.com/ticket/21231
",tomchristie,None,2014-03-06T10:15:22Z,2016-04-12T18:06:12Z
2402,Fixed #22217 - ManyToManyFields.through_fields docs mix up description of arguments,"Fixed docs and also added a check raising ValueError if given false field names. Also added tests.

Ticket is here: https://code.djangoproject.com/ticket/22217
",dfunckt,None,2014-03-06T00:30:53Z,2014-08-28T15:06:33Z
2401,Fix unnecessary escaping of path chars in reverse().,"The path segments concatenated by reverse() only need to get characters
quoted that are reserved as per section 3.3 of RFC-3986.

Unreserved characters that Django currently quotes as part of the work done
on #13260 are: "":@&=+$,""

Quoting unreserved characters leads to issues in situations where client and
server require unambigious URL representation, like creating a signature base
string in OAuth 1. Here the client produces a digest of a URL with quoted
chars, while the server ends up with a digest of the unquoted chars, leading
to different signatures (see
https://groups.google.com/forum/#!msg/django-developers/ZLGk7T4mJuw/4RqfgbZ-jOQJ).

To address this change still applies urlquote, but excluded the unreserved
path characters.
",erikvanzijst,None,2014-03-05T22:29:54Z,2014-06-24T06:33:35Z
2400,Move Test settings into an inner dictionary in database settings,"This pull request is in fact two:
The first two commits move the test settings into their own dictionary.
The third renames the ""CREATE"" and ""USER_CREATE"" settings to ""CREATE_DB"" and ""CREATE_USER"". This is important, because I want to make ""CREATE_DB"" available to all backends -- and because renaming settings after this change is going to be much harder.
",shaib,None,2014-03-05T19:22:11Z,2014-06-26T11:34:09Z
2399,Fixed #21860 -- Added to_field_name to ModelChoiceField docs.,"Refs. https://code.djangoproject.com/ticket/21860
",coder9042,None,2014-03-05T18:50:21Z,2014-06-24T06:39:20Z
2398,Pass --previous to msgmerge,"This allows translators to see what has changed in case string becomes
fuzzy. See ticket #20566
",nijel,None,2014-03-05T13:58:15Z,2014-06-24T03:25:19Z
2397,"Fixed #21179 -- Added a small section in the ""Outputting CSV with Django"" about the StreamingHttpResponse","This is my attempt to fix #21179.

The example shows how generators can be used with the csv.writer class stream large CSV files.

I have added a few comments on this example on the ticket's page: https://code.djangoproject.com/ticket/21179

This supersedes pull request https://github.com/django/django/pull/2358
",zedr,None,2014-03-04T22:43:50Z,2014-06-23T07:51:56Z
2396,Fixed #21893 -- ModelState didn't account for MTI parents inherited from abstract models.,,loic,None,2014-03-04T20:20:39Z,2014-06-25T18:07:15Z
2395,Update tests.py,"fixed a mistake in test doc string
",ramast,None,2014-03-04T19:34:07Z,2014-06-12T06:59:35Z
2394,Fixed #20974 -- Added test for Mysql specific validation.,,coder9042,None,2014-03-04T17:24:56Z,2014-06-26T06:11:00Z
2393,Fixed #22207 -- Added `related_name` to GenericRelation to generate reverse relation on related object,"GenericRelation now supports an optional related_name argument. Setting
related_name adds a relation from the related object back to the content
type for filtering, ordering and other query operations.
",gabejackson,None,2014-03-04T14:51:15Z,2014-06-25T23:03:39Z
2392,Fixed hardcoded call of User model in UserCreationForm,"When we implement a custom User model based on AbstractUser, we necessarily
have to write a custom UserCreationForm. If username/password behaviors are
not altered, it seems interesting to simply inerhits from UserCreationForm
with model property of Meta class.

But there was a hardcoded call to User model in clean_username() method
that was forbidding this simple inheritance.

Or did I miss something ?

Example :

----- models.py ------
from django.contrib.auth.models import AbstractUser

class CustomUser(AbstractUser):
    # ....

----- admin.py -----
from django.contrib.auth.admin import UserAdmin
from django.contrib.auth.forms import UserCreationForm

class CustomUserCreationForm(UserCreationForm): 
    class Meta:
        model = CustomUser

class CustomUserAdmin(UserAdmin):
    add_form = CustomUserCreationForm
",fle,None,2014-03-04T14:39:58Z,2014-07-19T15:59:56Z
2391,Pass the maxlength attribute from models.TextField to forms.CharField (#22206),"Pass this to the widget as the maxlength attribute, regardless of its class,
so that it works on Textarea and any other widget that you might choose to
use for a CharField.

See https://code.djangoproject.com/ticket/22206 for more details.
",qris,None,2014-03-04T14:19:58Z,2014-06-12T08:13:52Z
2390,Fixed #17922 -- Added required_css_class to form label,"As suggested in the ticket, I have done what was required.
One test has been corrected, and another has been added.

Related: https://code.djangoproject.com/ticket/17922
",coder9042,None,2014-03-03T19:29:35Z,2014-06-17T12:13:05Z
2389,Fixed broken tests on Python 3 after 3c5fc708f1a8f60c05182869f6f3ec13697...,"...bbcf2.
",bmispelon,None,2014-03-03T14:39:04Z,2014-07-19T16:00:06Z
2388,Fixed #16727 -- contenttypes shortcut view error,"Including shortcut fix and corresponding tests
",tcsorrel,None,2014-03-02T20:54:44Z,2014-06-24T09:04:59Z
2387,Fixed #22185 -- Added settings.CSRF_COOKIE_AGE,"Internet Explorer has the ability to block/disable persistent cookies, and corruption of the index.dat cache
(i.e. to disk errors) can cause Django sites to authenticate correctly but fail to do FORM POST's.  To
avoid this behavior, provide the option to configure the CSRF cookie age and set it to be None to be session-based.

Test added and documentation updated.

https://code.djangoproject.com/ticket/22185
",rogerhu,None,2014-03-02T17:17:50Z,2014-06-25T23:03:39Z
2386,Typos in code and tests,"Fixes several typos in comments and docstrings.
",rhcarvalho,None,2014-03-02T15:31:27Z,2014-07-12T07:44:37Z
2385,Not so obvious fixes in docs,,rhcarvalho,None,2014-03-02T15:14:10Z,2014-06-29T14:49:17Z
2384,Fixed several obvious typos in the docs.,"There are more to come. I'm planning to make separate commits / pull requests based on where the typos are and how easy it is to accept the changes.
There are obvious typos, British ⇒ American English, rewordings, ...
",rhcarvalho,None,2014-03-02T14:41:15Z,2014-07-19T16:00:15Z
2383,Fixed #22130 -- fixed template_tests/defaultfilters order dependent test failure,,mxsasha,None,2014-03-02T08:03:19Z,2014-07-19T16:00:19Z
2382,"Fixed #22130 -- Deprecated fix_ampersands, removed utils.clean_html()",,mxsasha,None,2014-03-01T12:22:45Z,2014-07-04T16:55:39Z
2381,Fixed #22172 -- index_together now can be used with a single list,"""For convenience, unique_together can be a single tuple when dealing with a single set of fields""
This convenience is missing in index_together

I think this should be there, as using double tuples/lists is not suitable.
Also changing this does not affects the behavior so much, though convenience is bettered.
I have also written the test for it.
Therefore I have opened this PR, please review it.
If it is approved, I will add the changes in the docs as well.

https://code.djangoproject.com/ticket/22172
",coder9042,None,2014-03-01T08:43:49Z,2014-06-20T13:40:58Z
2380,Update list.py,"This allows for the model used to be overridden depending on request variables and other factors. If accepted this should be changed for detail, update and create views as well.

Example:

model_string = request.GET.get('model')
if model_string == 'cheese':
    return Cheese
elif model_string == 'wine':
    return Wine
",dankram,None,2014-02-28T20:08:46Z,2014-07-19T16:00:26Z
2379,Reworked ErrorDict.as_json() to prevent unnecessary serialization/deseri...,"...alization step.

Thanks @apollo13 for the suggestion. Refs #17413.
",loic,None,2014-02-28T18:57:24Z,2014-07-10T05:50:10Z
2378,Fixed #22168 -- Fixed migrations failing on sqlite when coulumn names ar...,"...e SQL keywords

Thanks to trac user fallen_flint for the report and initial patch.
",bmispelon,None,2014-02-28T12:18:24Z,2014-06-23T02:09:54Z
2377,Fixed #22168 - Quoted column names in _remake_table sqlite backend method,,fallenflint,None,2014-02-28T09:45:24Z,2014-07-19T16:00:30Z
2376,Introduced subclasses for to be removed in django version X warnings,,claudep,None,2014-02-28T08:53:22Z,2014-06-25T23:03:33Z
2375,Fixed #7571 -- Fixed parameter matching in include()'d urlpattern,"Fixed URL resolving in the case where an outer regex includes an inner
regex and both regexes use positional parameters instead of named
groups, causing the outer regex's parameters to override the inner
regex's.

Modified the regex url resolver so that it will concatenates and then
normalizes, instead of normalizing and then concatenating.
",afuna,None,2014-02-27T16:26:24Z,2014-06-15T07:06:08Z
2374,Fixed documention typo,"A small typo in the docs of gunicorn deployment
",spaceexperiment,None,2014-02-27T07:30:26Z,2014-06-27T05:11:49Z
2373,Fixed #22135 -- Implement ModelAdmin.get_changeform_initial_data,"Allows custom behaviour for setting initial form data in
ModelAdmin to be defined. By default, initial data is
set via GET params. ModelAdmin.get_initial_data allows this
behaviour to be overridden.
",gchp,None,2014-02-26T22:39:50Z,2014-06-24T04:30:48Z
2372,Fixed #22137 -- Made Widget.is_hidden a read-only property,"Thanks django at patjack.co.uk for the report.
",claudep,None,2014-02-26T15:16:21Z,2014-06-28T13:14:15Z
2371,Added request to sitemap classes (#17802).,"Trac ticket: https://code.djangoproject.com/ticket/17802
",paolodina,None,2014-02-26T08:35:26Z,2014-06-24T05:37:20Z
2370,Fixed #22129 -- Add documentation for creating superusers,"As mentioned in [ticket #22129](https://code.djangoproject.com/ticket/22129#comment:2), users following this tutorial for the first time have encountered some confusion when being presented with the ""would you like to create a superuser"" prompt. This update aims to ease that confusion by clearly explaining each step of the process.
",gchp,None,2014-02-25T20:53:43Z,2014-07-08T02:24:23Z
2369,Fixed bad grammar in a comment.,,numerodix,None,2014-02-25T19:35:23Z,2014-06-14T19:05:02Z
2368,Fixed #20456: easier unit-testing for CBV,"Added a class method to return an instance of a CBV.
This allows to unit test part of a CBV directly, without using
the client.

Note: as the ticket didn't have much discussion going on, I did a POC (only modified a single test to show how it would work), feedback on it needed before going further
",Keats,None,2014-02-25T18:39:34Z,2015-03-30T16:08:15Z
2367,Clarify documentation on Field.blank and Field.null options #22145,"https://code.djangoproject.com/ticket/22145

Clarify documentation on Field.blank and Field.null options
",navneet35371,None,2014-02-25T15:53:11Z,2014-07-09T15:19:30Z
2366,Fixed #22001: GeoDjango (contrib.gis) does not create geometry columns in 1.7a2,"https://code.djangoproject.com/ticket/22001

Fixed #22001: Added new method `get_column_type` to `BaseDatabaseCreation`, allowing child classes to have more logic then just string formatting a value in the `data_types` dict. This was nessecary for postgis creation where the name of the column type would change from `geometry(POINT, 4326)` to `geography(POINT, 4326)` given the `geography` flag on `GeometryField` (e.g. `PointField(srid=4326, geography=True)`).

Updated the `data_types` field in each `Creation` class under contrib/gis/db/backends to include all the Geodjango fields.

Added a test and supporting classes in the contrib.gis module.  This code follows the way tests are setup in the test folder under django/tests/migrations.
",bigsassy,None,2014-02-25T04:29:56Z,2014-06-25T23:03:38Z
2365,"Fixed #22085 - Added a feature that allows the Cache settings argument to be None, for ""no timeout"".","Django 1.6 introduced a feature that allows the passing of `None` as the `timeout` argument when setting a cache key, using the Django caching framework. This is interpreted as ""no timeout"", so the cache object will set a non-expirable key as the default, unless a different value for the timeout is passed.

However, if the TIMEOUT was set in the settings file, the default timeout was still 300 seconds.

Ticket #22085 was opened to address this, and was accepted as a new feature.

This fix implements the feature, and adds four new tests specific to this case.

To set a never-expiring timeout for cache keys as the default behaviour, simply define the CACHES setting in this way:

``` python

CACHES = {
    ""default"": {
        # define the backend here...

        # set the timeout to None, meaning ""no timeout"".
        TIMEOUT = None
    }
}
```

Now, by default behavior of the Cache instances will be to set non-expiring keys (""cache forever"").

For more information, see ticket: https://code.djangoproject.com/ticket/22085
",zedr,None,2014-02-23T23:57:02Z,2014-06-20T19:50:47Z
2364,Added tests for django.contrib.admindocs -- refs #22015,"Added tests which cover `django.contrib.admindocs.views.ModelDetailView` which was seriously lacking in test coverage. This is part of ticket #22015, though the original issue for which the ticket was opened, seems to be already working as expected, with and without this patch. Though this patch does contain a test which covers the issue raised in the ticket, and should catch it in the future should it re-arise.
",gchp,None,2014-02-23T19:05:39Z,2014-06-26T06:10:53Z
2363,Fixed #22019 -- added documentation on Model attributes,"See https://code.djangoproject.com/ticket/22019#comment:5 for my approach
",nheyning,None,2014-02-23T16:20:32Z,2014-06-13T07:26:28Z
2362,Fixed #22106 -- Make django.views.i18n.javascript_catalog more flexible,"See https://code.djangoproject.com/ticket/22106 for more information
",MoritzS,None,2014-02-23T15:08:38Z,2015-09-17T10:20:59Z
2361,Fixed #21948 -- Added mention of TEMPLATE_LOADERS to documentation,"Expanded upon which loaders should be used when overriding the
admin templates, in case the reader has deviated from the default
TEMPLATE_LOADERS setting.
",alextreme,None,2014-02-23T14:18:53Z,2014-06-26T12:29:45Z
2360,Documenting rule-of-thumb when optimizing DB usage with indexes...,"with a number of caveats to hopefully deter readers from using indexes everywhere. For ticket #21989

Based on https://github.com/django/django/pull/2252 from bbaja42
",alextreme,None,2014-02-23T13:00:55Z,2014-06-26T12:27:28Z
2359,adding reference to NoReverseMatch from the reverse() documentation,"https://code.djangoproject.com/ticket/22063
",alextreme,None,2014-02-23T12:28:40Z,2014-06-25T22:54:29Z
2358,"Fixed #21179 -- Added a small section in the ""Outputting CSV with Django...","This is my attempt to fix #21179. 

The example shows how generators can be used with the csv.writer class stream large CSV files.

I have added a few comments on this example on the ticket's page: https://code.djangoproject.com/ticket/21179
",zedr,None,2014-02-22T19:59:00Z,2014-06-16T08:01:23Z
2357,Fix and test for #21741 -- render_to_string without providing a dictionary still puts a dictionary into the context,,numerodix,None,2014-02-22T19:49:23Z,2014-07-19T16:01:12Z
2356,Added more docs on OneToOneField,"Pull request for [ticket 22048](https://code.djangoproject.com/ticket/22048)
",adamkal,None,2014-02-22T19:36:06Z,2014-06-14T02:09:30Z
2355,Fixed #22113 - changed object_name to model_name in docs.,,kobuz,None,2014-02-22T18:33:24Z,2014-06-12T06:59:26Z
2354,Fixed #22141 -- Added spell checker for documentation.,,beregond,None,2014-02-22T17:49:21Z,2014-06-12T08:12:19Z
2353,Fixed docs typos.,,beregond,None,2014-02-22T17:49:03Z,2014-06-14T02:08:14Z
2352,Fixed #22032 -- added documentation for settings.MIGRATION_MODULES,,gchp,None,2014-02-22T17:47:11Z,2014-06-19T19:13:00Z
2351,#22034 skip checks for generic InlineAdmin classes,"https://code.djangoproject.com/ticket/22034
",josven,None,2014-02-22T17:43:39Z,2014-06-14T02:08:23Z
2350,Ticket #22071,"Updated warning section
",henkvos,None,2014-02-22T17:09:54Z,2014-06-14T02:09:47Z
2349,Fixed #22092 -- mention ResolverMatch.view_name in docs,"https://code.djangoproject.com/ticket/22092
",jochem,None,2014-02-22T15:27:18Z,2014-07-04T12:05:36Z
2348,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,,mxsasha,None,2014-02-22T15:00:59Z,2014-06-24T01:07:34Z
2347,Fixed #21902 - Documented search order for list_display.,,kobuz,None,2014-02-22T14:31:04Z,2014-06-25T05:13:18Z
2346,Fixed #21905 -- Add info message if DateField or TimeField use a fixed value,"https://code.djangoproject.com/ticket/21905
",MarkusH,None,2014-02-22T13:33:35Z,2014-06-14T02:08:27Z
2345,Fixed #22120: Documented persistent activation of languages and cleaned up language session key use,,mxsasha,None,2014-02-22T13:29:05Z,2014-06-17T03:47:57Z
2344,Fixed #22007 -- Fixed cbv docs - make imports consistent,"Thanks to trac user kinjal.dixit for the report.
",numerodix,None,2014-02-22T13:23:36Z,2014-07-19T16:01:42Z
2343,Explain that a failed import of urlpatterns might be the result of a circular import,"Refs #21435
",bpeschier,None,2014-02-22T13:07:52Z,2015-03-19T07:27:49Z
2342,Fixed #22007 -- Fixed cbv docs - make imports consistent,,numerodix,None,2014-02-22T12:50:16Z,2014-07-19T16:01:46Z
2341,Fixed #12670 -- Added note in documentation,"The file permissions given in the `FILE_UPLOAD_PERMISSIONS` setting
aren't applied to temporary files stored in `FILE_UPLOAD_TEMP_DIR` for
security reasons. This created confusion for some people. A note is
added to the documentation to make it clear.
",gitaarik,None,2014-02-22T12:34:19Z,2014-06-24T10:35:39Z
2340,Document _actions_icnt in admin change lists and add tests for #22038,"It also updates the minified version of actions.js
",bpeschier,None,2014-02-22T11:47:08Z,2015-03-19T07:27:55Z
2339,Ticket 21725 tests,"Deprecate django.utils.text.javascript_quote and added some regression tests for the reported issue (which was fixed in a previous commit).
",bmispelon,None,2014-02-21T20:59:35Z,2014-06-14T12:35:12Z
2338,Fixed #22112 -- Added RedirectView.pattern_name to CBV flattened index,"Thanks nikunj.sg for the report

pattern_name was introduced in Django 1.6, so we could backport this to 1.6.X as well.
",alasdairnicol,None,2014-02-21T14:12:11Z,2014-06-26T13:35:05Z
2337,Patch 3,"Removed empty_strings_allowed = False in BigIntegerField, because it is already specified in its base class IntegerField.
Added safe default limits to the formfields of SmallIntegerField and PositiveSmallIntegerField according to https://docs.djangoproject.com/en/dev/ref/models/fields/#positivesmallintegerfield and https://docs.djangoproject.com/en/dev/ref/models/fields/#smallintegerfield
The reason is that when I create ModelForm from a model that contains small integers, it is vulnerable by default. You can input large integer and get an exception DataError: smallint out of range. I propose to stay on the safe side and for those backends whose small integers have greater capacity, user must provide his own limits.
",YDS19872712,None,2014-02-21T13:07:55Z,2014-06-14T02:09:51Z
2336,Fixed bug with inspection of arguments in Python 3,,ilya-pirogov,None,2014-02-21T10:43:32Z,2014-06-24T17:03:12Z
2335,Fixed 21799 - Modified ignorenonexistent loaddata to ignore models,,esauro,None,2014-02-21T06:56:53Z,2014-06-14T02:08:16Z
2334,"Fixed #21942 -- Added missing documentation of Form.clean() to API, added new description and crosslinks","Fixed #21942 -- Added missing documentation of Form.clean() to API, added new description and crosslinks
",lynnkitch,None,2014-02-20T18:48:01Z,2014-06-23T06:24:26Z
2333,Capitalize SQL keywords,"You guys are fast!  Here are a couple more errors I noticed.  I believe that's all of them.
",davesque,None,2014-02-20T18:33:55Z,2014-06-16T07:11:37Z
2332,Capitalize SQL keywords,,davesque,None,2014-02-20T18:27:40Z,2014-06-14T02:09:15Z
2331,[1.6.x] Fixed #21643 -- repeated execution of qs with F() + timedelta,"Thanks Tim Graham for review.
",mrmachine,None,2014-02-20T12:35:05Z,2014-06-12T06:59:13Z
2330,Fixed #22101 -- Querysets using timedelta expression nodes can again be ...,"...cloned.
",mrmachine,None,2014-02-20T11:39:21Z,2014-06-17T12:04:28Z
2329,Fixed #22095 -- Enabled backward migrations for RunPython operation,"Added reversible property to RunPython so that migrations will not
refuse to reverse migrations including RunPython operations, so long as
reverse_code is set in the RunPython constructor. Included tests to
check the reversible property on RunPython and the similar RunSQL.

See https://code.djangoproject.com/ticket/22095
",andrewsg,None,2014-02-19T23:46:09Z,2014-06-14T02:09:59Z
2328,Stable/1.6.x,,lynnkitch,None,2014-02-19T22:59:49Z,2014-07-21T08:19:38Z
2327,Fixed #14549 - Removed restriction of single FKs on intermediary tables,"This is ticket: https://code.djangoproject.com/ticket/14549

Edit: Changed the commit message and pull request title.
",dfunckt,None,2014-02-19T19:14:29Z,2014-08-28T15:06:31Z
2326,Fixed #19647 -- Added formats.py for Esperanto.,"Thanks to Objectivesea and Guttorm Flatabø (dittaeva)!

I'm part of the Django Esperanto Translation Team https://www.transifex.com/projects/p/django/language/eo/members/.
https://www.transifex.com/accounts/profile/batisteo/
",batisteo,None,2014-02-19T09:46:00Z,2014-06-27T11:29:30Z
2325,Remove conflicting statement from docstring,"The statement:

> This class should never be instantiated outside of the get_filters_from_token helper function.

is invalid since:
- There is no helper function `get_filters_from_token`
- The class is instantiated in the `compile_filter` helper function

It confused me just now for a while. I only did a `grep -r 'get_filters_from_token' ./*` in the Django project, but I couldn't find a reference to it.
",pjrobertson,None,2014-02-19T03:37:42Z,2014-06-14T02:09:36Z
2324,Added an example to the release notes for custom reverse managers.,,loic,None,2014-02-19T03:21:02Z,2014-06-17T11:11:54Z
2323,Fixed #22087 - ModelForm Meta overrides are ignored by AdminReadonlyField,"See https://code.djangoproject.com/ticket/22087
",bendavis78,None,2014-02-18T22:55:18Z,2014-06-16T07:55:08Z
2322,Fixed #19647 - Esperanto formats.py.,"Thanks to Objectivesea and Guttorm Flatabø (dittaeva)!
",batisteo,None,2014-02-18T22:29:05Z,2014-07-19T16:02:33Z
2321,Document the way PostGIS 2 database works during tests,"This adds a brief documentation on how database creation works during tests
",yakky,None,2014-02-18T20:18:08Z,2014-06-25T00:11:28Z
2320,Fixed #21962 -- Added a flag to ErrorDict.as_json() to escape html,,vvojvoda,None,2014-02-18T19:09:40Z,2014-06-22T19:36:55Z
2319,Fixed #21790 -- Removed reliance on an assert in auth.get_user().,"Thanks matklad for the report.
",timgraham,None,2014-02-18T16:23:49Z,2014-06-26T19:33:52Z
2318,Fixed #21942 -- Added missing documentation of Form.clean() to API,"Fixed 21942 -- Added missing documentation of Form.clean() to API
",lynnkitch,None,2014-02-18T12:53:20Z,2014-06-20T21:17:53Z
2317,Update uploadedfile.py,"I see no reason for content_type_extra to be required in TemporaryUploadedFile and InMemoryUploadedFile. As it breaks old code that creates InMemoryUploadedFile manually.
In my case i generate and image and wrap it in InMemoryUploadedFile and i think it is more rational not to require content_type_extra, than to pass None in most cases.
",YDS19872712,None,2014-02-18T11:26:13Z,2014-06-14T20:15:32Z
2316,Fix jenkins,,bmispelon,None,2014-02-17T23:08:55Z,2014-07-19T16:02:49Z
2315,Fixed #22073 - Ensure CreateTable operation handles backwards migration correctly when M2M fields are present,"Ticket info: https://code.djangoproject.com/ticket/22073
",bendavis78,None,2014-02-17T22:55:48Z,2014-06-13T05:13:23Z
2314,Fixed #22068 -- Normalised path to test-suites,"Fixed #22068. Normalised all paths fed to runtests.py as command line arguments.
",akshay1994,None,2014-02-17T20:57:04Z,2014-06-25T22:53:55Z
2313,Support for network-path references in contenttypes.views.shortcut.,"Referencing ticket: https://code.djangoproject.com/ticket/16727
",tyrion,None,2014-02-17T18:23:02Z,2014-06-23T06:09:05Z
2312,Removed Django 1.5 upgrade hints for {% url %} tag.,"Refs #19280 and Refs #19392.

Any objections? The only downside I see is if someone is trying to upgrade directly from 1.4 to 1.7+, but I don't think trying to upgrade over multiple versions like that is a good idea.
",timgraham,None,2014-02-17T00:30:33Z,2014-06-17T20:08:17Z
2311,Fixed #18731 : Added a --extra-keyword option to the makemessages commmand,"Hello, here's the patch reworked for integration in the 1.7 release.

ticket: https://code.djangoproject.com/ticket/18731
",rjarry,None,2014-02-16T17:33:28Z,2014-10-29T14:45:34Z
2310,Fixed #19980: Signer broken for binary keys (with non-ASCII chars).,"With this pull request, request #878 should considered closed.

Thanks to nvie for the patch.
",MattBlack85,None,2014-02-16T14:03:56Z,2014-06-20T09:55:04Z
2309,Read data from stdin in changepassword.,"Depends on  #2304.
",AeroNotix,None,2014-02-16T13:57:11Z,2014-06-16T00:00:04Z
2308,Fixed #21939 -- Deprecated loading ssi/url tags from future.,,zsiciarz,None,2014-02-16T12:26:25Z,2014-06-18T03:47:49Z
2307,Fixed -- #21765 Contexts cannot be compared for equality.,"Added additional Context.flatten() method with documentation, tests and release notes for version 1.7
",onjin,None,2014-02-16T12:05:34Z,2014-07-19T16:03:04Z
2306,Few fixes in documentation,"I've fixed some typos in i18n translations documentation and added proper links to previously unlinked classes / attributes.
",Xaerxess,None,2014-02-16T12:01:35Z,2014-07-06T06:51:06Z
2305,Fixed #18745 - Documentation change explaining tuple to list with signing.,"Thanks to lee for the report.
",MattBlack85,None,2014-02-16T11:37:34Z,2014-06-14T02:08:25Z
2304,Fixed #7423 -- Skip user creation when not in a TTY.,"Thanks to galaxy4sale for the report.
",AeroNotix,None,2014-02-16T10:08:57Z,2014-06-22T19:26:03Z
2303,Fixed #22023 -- .values() followed by defer() or only() results invalid ...,"...data or crash

defer() and only() implementation for ValuesQuerySet

Signed-off-by: Karol Jochelson karol.jochelson@gmail.com
Signed-off-by: Jakub Nowak jakubnowakc@gmail.com
",wiget,None,2014-02-16T09:29:20Z,2014-07-19T16:03:10Z
2302,Fixed #22023 -- .values() followed by defer() or only() results invalid data or crash,"Please review
",wiget,None,2014-02-16T09:25:09Z,2014-07-18T16:27:33Z
2301,Fixed -- #21765 Contexts cannot be compared for equality.,,onjin,None,2014-02-15T18:45:31Z,2014-06-19T10:48:02Z
2300,Split line and add indentation for better readability.,"Split line for better readability.
",budzinski,None,2014-02-15T18:41:20Z,2014-06-14T20:10:14Z
2299,Fixed #21739 -- Do not use hardcoded verbosity of 0 for fixture and loaddata,"Proposed solution is to set utils verbosity on the TestCase in order to reuse it later during initialization.
I did not found any better way of retrieving that later.
",budzinski,None,2014-02-15T18:21:04Z,2014-06-25T20:26:49Z
2298,Fixed #22013 -- Documented difference between SERVER_EMAIL and DEFAULT_F...,"...ROM_EMAIL.
",zsiciarz,None,2014-02-15T18:13:37Z,2014-07-19T16:03:19Z
2297,Fixed #21725 -- Fixed JavaScript quoting encoding.,"Thanks to nedbatchelder for the report.
",MattBlack85,None,2014-02-15T18:02:30Z,2014-06-25T11:34:04Z
2296,Fixed #11929 -- Make dump data output YAML in a sane order.,"Thanks to sampablokuper for the report.
",AeroNotix,None,2014-02-15T17:07:16Z,2016-01-23T04:56:51Z
2295,Improved fix for #18373 -- backward compatibility,"Commit 79558c78 cleaned up the (undocumented) interface of Resolver404
exception, which breaks compatibility with code messing with .args[0]
directly. Revert the cleanup part and simply leave the fix itself.
",gnosek,None,2014-02-15T16:52:39Z,2014-07-19T16:03:29Z
2294,Fixed #22002 - Documented avoiding database interaction in AppConfig.ready().,,zsiciarz,None,2014-02-15T16:30:43Z,2014-07-01T11:03:40Z
2293,Fixed #21884 -- Improved reference docs on querysets,"This change adds information that 'exact' lookup type is used when no lookup
type is provided.
",chomik,None,2014-02-15T15:42:43Z,2014-06-25T06:44:29Z
2292,Fixed #22056 -- Empty directories shouldn't be included to test modules,"Additional check if module is valid by if '**init**.py' inside module.
",xando,None,2014-02-15T15:13:17Z,2014-06-18T08:42:19Z
2291,Fixes #21912 -- Explain that the view returned None not HttpResponse.,,AeroNotix,None,2014-02-15T14:58:15Z,2014-07-19T16:03:37Z
2290,Fixed #21183 -- Filter block on the right covers information in admin,"Added filter toggle functionality to admin.
Collapse/expand state is remebered thanks to cookies.

Thanks Tuttle for the report.
",viciu,None,2014-02-15T14:55:36Z,2015-12-18T05:58:22Z
2289,Fixed #22047 -- detecting related_name clash with inheritance,"Thanks to mondone for fruitful colaboration.
",chrismedrela,None,2014-02-15T14:40:13Z,2014-06-18T07:54:20Z
2288,"Removed extra ""s""",,rhcarvalho,None,2014-02-15T14:02:22Z,2014-07-19T16:03:42Z
2287,Fixed #18373 - improved handling of Resolver404s from views,"When django.core.urlresolvers.resolve was called from a view, failed
and the exception was propagated and rendered by technical_404_response,
the URL mentioned on the page was the current URL instead of the URL
passed to resolve().

Fixed by using the path attribute from the Resolver404 exception instead
of request.path_info. Also cleaned up the exceptions to use standard
named parameters instead of stuffing a dict in args[0]
",gnosek,None,2014-02-15T14:01:22Z,2014-06-12T14:37:01Z
2286,Fixed #21765 -- Added support for comparing Context instances,"From django-spring (Kraków)
",onjin,None,2014-02-15T13:44:26Z,2014-07-19T16:03:45Z
2285,Fixed two typos.,,rhcarvalho,None,2014-02-15T13:41:09Z,2014-07-19T16:03:47Z
2284,Fixed #21765 -- Added support for comparing Context instances,,onjin,None,2014-02-15T13:25:59Z,2014-07-19T16:03:50Z
2283,Fix it's => its,"Simple mistake.
",rhcarvalho,None,2014-02-15T12:41:45Z,2014-07-19T16:03:52Z
2282,Fixed typo in docstring.,,rhcarvalho,None,2014-02-15T12:21:38Z,2014-07-19T16:03:53Z
2281,Change analyse (British) to analyze (American).,"This fixes https://code.djangoproject.com/ticket/22053
",rhcarvalho,None,2014-02-15T12:02:53Z,2014-06-26T11:24:54Z
2280,Fixed #22052 -- Corrected a misspelling of ellipsoid,,MPrusek,None,2014-02-15T12:00:47Z,2014-07-19T16:03:55Z
2279,Fixed #22050 -- defer fields on proxy related models,,lovasb,None,2014-02-15T11:26:09Z,2014-06-25T11:22:39Z
2278,Flatten a level of sublists before checking for duplicate fields.,"Closes #22018.

When given sublists such as:

``` python

class FooAdmin(admin.ModelAdmin):
    fields = ('one', ('one', 'two'))
```

The previous code did not correctly detect the duplicated 'one' field.
",AeroNotix,None,2014-02-15T10:30:09Z,2014-07-19T16:03:59Z
2277,Fixed #22046 -- Unhelpful queryset handling for model formsets with data...,"....

BaseModelFormSet now overrides the queryset if it is bound.
It pulls in the instances specified in the data.

Two unit tests showing the previous problems are included.
",dgym,None,2014-02-14T13:53:46Z,2014-12-24T18:11:03Z
2276,Added missing snippet to show filename in docs,,alasdairnicol,None,2014-02-14T12:46:40Z,2014-07-16T21:07:45Z
2275,Fixed #21924 -- added a test and documentation,"Added a test and documentation for ticket #21924 (https://code.djangoproject.com/ticket/21924). The original pull request can be seen here: https://github.com/django/django/pull/2201.
",wreckage,None,2014-02-14T08:15:32Z,2014-06-30T01:34:26Z
2274,Remove _actions_icnt declaration from local scope,"Commit 4523fcd60101124a307bd4026296337087b66884 introduces `_actions_icnt` to the local scope, which overrides the value set in the HTML.

The admin will show selected rows in a change list as ""1 of undefined selected"".
",bpeschier,None,2014-02-13T18:39:28Z,2014-06-24T06:45:17Z
2273,Fixed #21654 -- Document a use-case for Form.errors.as_data().,,loic,None,2014-02-13T18:27:16Z,2014-06-25T04:13:12Z
2272,Fixed #22035 -- reordered migration operations,"Now AddField actions appear in operations list before AlterUniqueTogether
actions.

Ticket - https://code.djangoproject.com/ticket/22035
",bak1an,None,2014-02-13T14:19:29Z,2014-06-23T00:05:39Z
2271,Update django.po,"Afrikaans was translated as ""African"", it should be spelt as Afrikaans but in Cyrillic.
Proof link http://uk.wikipedia.org/wiki/%D0%90%D1%84%D1%80%D0%B8%D0%BA%D0%B0%D0%B0%D0%BD%D1%81
",YDS19872712,None,2014-02-13T12:38:08Z,2014-06-22T22:02:59Z
2270,Fixed #22030 -- Don't assume that all fields have a swappable_setting at...,"...tribute.
",bmispelon,None,2014-02-13T11:24:51Z,2014-06-20T07:34:51Z
2269,Reworked the detection of local storages for the collectstatic command.,"Before 4befb30 the detection was broken because we used isinstance
against a LazyObject rather than against a Storage class. That commit
fixed it by looking directly at the object wrapped by LazyObject.
This could however be a problem to anyone who subclasses the
collectstatic management Command and directly supplies a Storage class.

Refs #21581.
",loic,None,2014-02-12T15:19:09Z,2014-06-29T14:43:46Z
2268,TestClient: Allow params with empty values in POST,"The test HTTP client allows us to send query params where the value is
empty when using GET. When using POST on the other hand, sending the
empty list as the value will remove the key/value pair entirely.
Make this behaviour symmetrical and allow keys with empty values also
for POST.
",ramn,None,2014-02-12T13:18:11Z,2014-07-01T04:55:30Z
2267,"Fixes ticket 22024, on 1.6.x, just adds tests for assertContains","Hope you like 'em! 
",hjwp,None,2014-02-12T12:49:00Z,2014-06-12T06:59:21Z
2266,Fixed #22022 -- Add pre_create_sql support to db_parameters.,"Allow fields to require some SQL to be run in advance of creating the
field. This is ideal for postgres extensions, but could also be used to
define custom functions in a third party app without requiring
migrations.
",mjtamlyn,None,2014-02-12T10:35:38Z,2014-11-04T09:18:59Z
2265,Fix to use local_concrete_fields instead of local_fields.  ,"Fixes issue with ForeignObject bulk creation.

See ticket: https://code.djangoproject.com/ticket/21566
",rogerhu,None,2014-02-12T07:09:59Z,2014-06-12T06:59:31Z
2264,Backport bulk create,"Backporting for Django v1.6 this PR https://github.com/django/django/pull/2038/files
",rogerhu,None,2014-02-12T07:08:01Z,2014-07-04T14:22:26Z
2263,Hide relationships whose related_name='+' (trac #22015),"If related_name of a ForeignKey/M2M relationship is '+', user explicitly asked Django to _not_ create backwards relation. This should be taken into account when rendering admindocs.
",motiejus,None,2014-02-11T17:38:42Z,2014-06-25T22:46:23Z
2262,Fix dumpdata for listing app followed by app.model [track ticket #22025],"Prior to this fix, a command such as this:

```
$ python manage.py dumpdata blogapp blogapp.Tag
```

Would fail with an exception because app_list_value is not iterable. While
the usage case isn't very sensical, it may appear in programmatic / scripting
approaches, and handling it more gracefully is a good idea.

Since 'blogapp' implies all models in the app, subsequent specific models within
the same app can simply be ignored.
",eliben,None,2014-02-11T15:02:39Z,2014-06-13T07:25:27Z
2261,Fixed #16617 - Indicate the value for MinLengthValidator and MaxLengthValidator in the exception message,"This simple patch makes the original value available to BaseValidator types allowing the value to be used in MinLengthValidator and MaxLengthValidator.
",sperrygrove,None,2014-02-10T22:33:01Z,2014-07-08T11:44:58Z
2260,Fixed #21801 -- Added check for object when calling SingleObjectMixin.get_context_data,"When SingleObjectMixin.get_context_data is called, first
check if the view has an actual **object** attribute if not re-call
**self.get_object()**.
",thoas,None,2014-02-10T18:08:58Z,2014-06-21T10:35:38Z
2259,[BROKEN] Add --use-fuzzy option to compilemessages command.,"Refs #18714
",bak1an,None,2014-02-10T14:48:54Z,2014-09-10T12:40:17Z
2258,Fixed #21951 -- Updated docs to use __str__ for Python 3,"Thanks Tim Graham for the report and recommendations
",alasdairnicol,None,2014-02-09T22:01:28Z,2014-06-12T21:20:44Z
2257,#21994: Add a form_dict kwarg for calls to the done method of form wizards,"This adds a `form_dict` keyword argument to calls to the `done()` method of FormWizard implementations. This specifically makes it easier to work with `NamedUrlWizardViews` as it allows refering to forms by their name rather than their index in the `form_list` list (which might change depending on `condition_dict`).

We're also adding a missing `**kwargs` mention in the docs.
",julianwachholz,None,2014-02-09T17:32:19Z,2014-06-15T12:09:04Z
2256,Refs #21064: Refactor add_view and change_view into changeform_view.,"Merged the two ModelAdmin methods as per https://code.djangoproject.com/ticket/21064, effectively elimination the existing code duplication between the original methods. This should open the way to implementing better hooks for overriding the behavior of admin add/change  views.
",egasimus,None,2014-02-09T16:43:43Z,2014-06-13T07:11:09Z
2255,Fixed #21992: Skip test when pytz is missing,"Submitting this again since I managed to mess up Git in the meantime.
",egasimus,None,2014-02-09T16:40:57Z,2014-06-15T23:54:24Z
2254,DjangoWeekendCardiff sprint contribution to #18586,"This is my (admittedly small) sprint contribution to ticket #18586 - a refactor of RecursiveM2MTests to split the monolithic test up into several smaller more targeted methods.
",chrispbailey,None,2014-02-09T15:21:35Z,2014-07-19T16:04:40Z
2253,Fixed #21763: Descriptive error msg for missing methods on ManyRelatedMa...,"...nager

Attempting to add() and remove() an object related by a 'through' model
now raises more descriptive AttributeErrors, in line with set and
create().

https://code.djangoproject.com/ticket/21763
",rkstap,None,2014-02-09T14:36:33Z,2014-06-16T19:33:28Z
2252,Update documentation for issue 21986,"Small doc update, so that users of the documentation can easier understand what are database indexes.
Issue link https://code.djangoproject.com/ticket/21986
I'm not too familiar with django, so there could be a better link that wiki.

To test out my change, perform following steps:
1) Checkout my change
2) go to docs folder && run make html
3) Open file _build/html/topics/db/optimization.html in a browser

Cavet: This is my first pull request, let me know if I've missed something.
",bbaja42,None,2014-02-09T13:55:20Z,2014-06-27T05:02:07Z
2251,Fixed #21771 -- Made log_deletion consistent with other log methods,"Test suite passes (with sqlite) after making the change.

I have made the doc string more explicit that the log_deletion method **must** be called before the deletion.
",alasdairnicol,None,2014-02-09T12:57:38Z,2014-06-26T13:05:51Z
2250,Fixed #21992: test_naturalday_uses_localtime fails on Windows if pytz is missing,"Relevant ticket: https://code.djangoproject.com/ticket/21992
",egasimus,None,2014-02-09T12:57:12Z,2014-06-18T10:02:11Z
2249,"Fixed #21382 - Added ""has_original"" to stacked inlines.","Report and original patch from jrief.
",ryankask,None,2014-02-09T12:35:24Z,2014-07-19T16:04:49Z
2248,Fixed 21967: Check for object in get_form_kwargs.,"This patch addresses [this issue](https://code.djangoproject.com/ticket/21967)
",ryankask,None,2014-02-09T10:54:21Z,2014-07-16T14:46:52Z
2247,Fixed inaccuracies in generic mixins documentation.,,bmispelon,None,2014-02-09T10:51:24Z,2014-06-13T12:00:02Z
2246,Fixed #14760 - Admin inlines with file/image field fails to save_as,"https://github.com/django/django/pull/697 reworked for master.

Refactored BaseInlineFormSet and ModelAdmin to copy initial
values (file name) for fields of FileField or it's subclasses.

'physical' file do not get duplicated.
",bmihelac,None,2014-02-09T08:49:11Z,2015-04-23T12:13:43Z
2245,Replace _parse_content_type with cgi.parse_header,"Why write our own version, when there's one in stdlib?

Am I missing something?

Tested and passing tests with Python 2.7.7 and 3.3.2
",funkybob,None,2014-02-08T23:09:28Z,2014-06-26T05:59:53Z
2244,Fixed #21856: Allow Empty DATABASES Setting,"Fix for https://code.djangoproject.com/ticket/21856

There was a regression that prevented using runserver with `DATABASES = {}`. This also refactors the `check_migrations` method which was in the `runserver` command to use the new system checks framework instead.
",mlavin,None,2014-02-08T14:08:54Z,2014-06-12T06:13:02Z
2243,Fixed #20784 -- RegexValidator should accept a new parameter to perform reversed validation.,"Rework of PR #1387 as required.
",fengsi,None,2014-02-07T23:35:44Z,2014-07-16T14:46:56Z
2242,Fixed #17673 -- forbidden field shadowing,"I've rewritten the previous patch from scratch because of the new system check framework.
",chrismedrela,None,2014-02-07T21:38:08Z,2014-06-25T22:46:22Z
2241,"Bigint AutoField (fixes #56, #13774)","Alternative approach to fix ticket 56.
Based on discussion #49
This approach doesn't change AutoField behavior. Only those who need extended int range may use it.
It keeps values ranges consistent between databases. Also it works nice with related fields.
Now with tests. Reworked (see #308).
",pzinovkin,None,2014-02-07T20:35:51Z,2014-07-08T18:02:21Z
2240,Fixed #21674 -- Deprecated the import_by_path() function in favor of import_string(),"Added minor edits to https://github.com/django/django/pull/2187
",timgraham,None,2014-02-07T12:18:09Z,2014-07-19T16:05:02Z
2239,Attempted to improve release notes for QS.as_manager().,,loic,None,2014-02-05T19:28:52Z,2014-07-19T16:05:04Z
2238,Fixed gendered examples in the docs.,,loic,None,2014-02-05T06:21:41Z,2014-07-19T16:05:06Z
2237,Rewrite translation() using DjangoTranslation methods,"Began with these tickets:
https://code.djangoproject.com/ticket/18192
https://code.djangoproject.com/ticket/21055

After opening [this pull](https://github.com/django/django/pull/1562),  realized the code is cryptic and is quite difficult to debug.

Tore apart `trans_real.translation` and rewrote as `DjangoTranslation` methods.

Some of this code hasn't been touched in ages.  Hoping this pull lowers the barrier of entry to core django translation dev.
",beck,None,2014-02-05T04:30:23Z,2014-06-12T11:31:35Z
2236,Fixing Code Formatting in Docs,"The first line is over 80 characters long.
",Siecje,None,2014-02-04T00:43:26Z,2014-07-19T16:05:10Z
2235,Fixed 16192 -- Made unique error messages in ModelForm customizable.,"Overriding the error messages now works for both unique fields, unique_together
and unique_for_date.

This patch changed the overriding logic to allow customizing NON_FIELD_ERRORS
since previously only fields' errors were customizable.

Refs #20199.
",loic,None,2014-02-03T18:40:13Z,2014-06-24T06:46:53Z
2234,Fixed #20296 -- allow lazy strings to be used with mark_safe().,"This was supposed to be fixed after 2ee447fb5f8974b432d3dd421af9a242215aea44
but that commit just worked around the issue (and introduced
some regressions in some corner cases).

Thanks to trac user nealtodd for the initial report.
",bmispelon,None,2014-02-03T16:26:51Z,2014-08-14T10:05:23Z
2233,Fixed #2445 -- ``limit_choices_to`` attribute can now be a callable.,"- ForeignKey or ManyToManyField attribute `limit_choices_to` can now
  be a callable that returns either a `Q` object or a dict.
- The callable will be invoked at ModelForm initialization time.
- Admin form behavior modified to handle new functionality.
- Admin widget behavior modified to handle new functionality.
- Updated Django documentation field reference section.
- Added unit test class using `limit_choices_to` on ModelForm.
",adamsc64,None,2014-02-03T04:56:56Z,2014-06-19T01:34:37Z
2232,Make mysql's CursorWrapper a contextmanager.,,manfre,None,2014-02-02T21:39:09Z,2014-07-19T16:05:14Z
2231,"In the docs, point View layer / Reference / Built-in Views to class-base...","Go to https://docs.djangoproject.com/en/1.6/ and click on ""Built-in views"" under ""The view layer"".  The resulting page is not useful.  This pull request fixes that.
",picomancer,None,2014-02-02T21:06:33Z,2014-06-13T21:28:52Z
2230,Fix regress added to migrations.test_operations.test_alter_field_pk_fk,,manfre,None,2014-02-02T20:44:06Z,2014-07-19T16:05:17Z
2229,Switch DjangoJSONEncoder to use a dict lookup for types,"Some applications JSON encode a lot of stuff, so this
micro-optimization may be significant. O(1) lookup vs O(n).
",mattrobenolt,None,2014-02-02T01:47:19Z,2014-07-17T05:30:07Z
2228,#21923 -- Stopped importing models from application root modules.,,aaugustin,None,2014-02-01T18:38:35Z,2014-07-19T16:05:19Z
2227,Fixed bad link,,jheasly,None,2014-02-01T01:15:48Z,2014-06-23T22:07:54Z
2226,Ticket #21911,,claudep,None,2014-01-31T14:30:41Z,2014-07-19T16:05:20Z
2225,Made Oracle introspect FloatFields correctly,"Broke InspectDBTestCase.test_field_types in two:
- a test_number_field_types, which now passes on Oracle too
- a test_field_types, for all non-numeric fields, which is still expected to fail

Also made some pep8 fixes in the tests file. Refs #19884
",shaib,None,2014-01-29T17:27:45Z,2014-06-27T14:47:42Z
2224,Fix typo CRSF -> CSRF,,Ian-Foote,None,2014-01-29T16:54:21Z,2018-08-26T22:14:27Z
2223,Fix pep8 violation in migration template.,"This resulted in a whitespace only line. As the other value for `replaces_str` starts with `\n` it should be fine in both cases.
",mjtamlyn,None,2014-01-29T15:55:03Z,2014-07-19T16:05:22Z
2222,Updated usage of runtests.py in docs/intro/contributing.txt.,,berkerpeksag,None,2014-01-29T05:58:28Z,2014-07-19T16:05:23Z
2221,Fixed #21840 -- Moved dunder methods from SimpleLazyObject to LazyObject...,"....
",bmispelon,None,2014-01-29T05:06:19Z,2014-06-14T02:10:11Z
2220,url resolving with script prefix defined,"This patch fixes problem when deploying django using wsgi and apache (possibly other servers too) on sub-url.
What it does is check if resolved path is prefixed with script name (common solution when depolying on sub urls) and if so it strips it. There might be better solution but it worked in my project when everything else failed.
",maciej-zuk,None,2014-01-28T18:42:25Z,2014-07-19T16:05:24Z
2219,Update form-wizard.txt,"The path to form class needs to be in quotes in order for the example code to work.
",aaronvanderlip,None,2014-01-28T15:36:02Z,2014-07-19T16:05:25Z
2218,"Fixed #21874 -- Require Django apps to have a filesystem location, either implicit or explicit.",,carljm,None,2014-01-27T20:26:10Z,2014-07-10T20:56:21Z
2217,Ticket 21688,,aaugustin,None,2014-01-26T14:30:00Z,2014-06-12T04:56:58Z
2216,Fixed #21877 -- Renamed django.apps.base to config.,,aaugustin,None,2014-01-26T12:18:02Z,2014-06-24T07:05:52Z
2215,App label.model name,,aaugustin,None,2014-01-26T12:03:17Z,2014-06-25T22:46:16Z
2214,Moved RequestSite and get_current_site.,"Following the app-loading refactor, these objects must live outside of
django.contrib.sites.models because they must be available without
importing the django.contrib.sites.models module when
django.contrib.sites isn't installed.

Refs #21680. Thanks Carl and Loic for reporting this issue.
",aaugustin,None,2014-01-25T21:15:48Z,2014-06-21T08:05:57Z
2213,Added ticket #14007 contributors to AUTHORS,"https://code.djangoproject.com/ticket/14007
",dnerdy,None,2014-01-25T15:01:01Z,2014-07-19T16:05:38Z
2212,Fixed #17304 -- Allow single-path and configured-path namespace packages as apps.,"Also document the conditions under which a namespace package may or may not be
a Django app, and raise a clearer error message in those cases where it may not
be.
",carljm,None,2014-01-25T04:40:34Z,2014-06-30T15:10:31Z
2211,Fixed #21867 -- Removed AppStaticStorage; app paths are now AppConfig's job.,"AppStaticStorage only provided one thing over FileSystemStorage, which was
taking an app name (import path) and translating it into a filesystem
path. This is now something that should be done via app_config.path instead,
leaving AppStaticStorage with no reason for existence. It should be safe to
remove, as it was undocumented internal API.

There was some kind of feature in the AppDirectoriesFinder code related to a
""prefix"" attribute on the storage class used by AppDirectoriesFinder. Since
this feature was undocumented, untested, and of unclear purpose, I removed it
as well.
",carljm,None,2014-01-24T22:37:27Z,2014-06-18T12:13:32Z
2210,Fixed #21829 -- Added default AppConfigs.,"Thanks Russell for the report, Carl for the design, Marc for the initial
patch, and everyone who contributed to the design discussion.
",aaugustin,None,2014-01-24T21:45:36Z,2014-07-09T05:42:45Z
2209,Ticket #21870: Admin Checks fail for list_editable,"Please see Trac Ticket #21870.
",arneb,None,2014-01-24T13:46:42Z,2014-06-19T07:48:34Z
2208,"Remove static word ""COMMIT""",,fizista,None,2014-01-23T23:09:52Z,2014-06-12T06:59:21Z
2207,Added information re LTS releases,,timgraham,None,2014-01-23T18:54:46Z,2014-06-29T06:27:21Z
2206,Fixed #21847 -- Clarify where ContactForm was defined,,keybits,None,2014-01-23T16:26:38Z,2014-06-24T06:45:24Z
2205,Fixes #21864: Close string in example of custom lookups doc page.,,ctbarna,None,2014-01-23T15:12:27Z,2014-06-27T14:33:24Z
2204,#21862: Fix TypeError in Python 3.3 when module path returns NamespacePath,"This fixes the issue described in ticket [#21862](https://code.djangoproject.com/ticket/21862) where loading a custom app fails using Django 1.7a1 and Python 3.3. The issue is caused by the `NamespacePath` returned by `app_module.__path__` which is not indexable and has to be convert to a list first.

A similar solution has been applied in py.test: https://bitbucket.org/hpk42/pytest/commits/dac4900b78f2

I hope this makes sense. Let me know if there's anything that needs to be improved or added.
",roadsideseb,None,2014-01-23T13:38:28Z,2014-06-12T06:58:08Z
2203,We should branch after the first beta.,"We did this for 1.6 and it was very effective. 95%+ of fixes which merge during the alpha are backported, as the policy is ""all but really major features"". It's easier to just not merge any really major features. After beta, we have feature freeze so we need to backport bugs to stable but not features, so then the branch makes sense.
",mjtamlyn,None,2014-01-23T08:16:10Z,2014-07-19T16:05:54Z
2202,Fix and test for Bug #18255 Inconsistent data type for BigIntegerField a...,"...fter calling full_clean()
",adamduren,None,2014-01-23T06:09:20Z,2014-06-16T07:22:44Z
2201,added reverse order for admin_order_field,"after adding this you can setup something like this:

```
def age_in_years(self):
    return # age calculated via DateField self.date_of_birth
age_in_years.admin_order_field = '-date_of_birth'
```

the '-' at the beginning of '-date_of_birth' indicates the reverse order in the changelist.
",fetzig,None,2014-01-23T02:14:37Z,2014-06-17T15:21:58Z
2200,Fixed #21849 -- Included the count of silenced system checks in output.,,timgraham,None,2014-01-22T19:19:15Z,2014-06-17T07:28:41Z
2199,Fixed Manager.__module__ to properly return 'django.db.models.manager'.,"The combination of BaseManager.from_queryset() and RenameMethodsBase results in
Manager.**module** having the wrong value. This can be an issue when trying to
pickle the Manager class.
",loic,None,2014-01-22T10:03:17Z,2014-06-17T11:02:54Z
2198,Fixed #21852 -- Make migration writer serialize iterators,"https://code.djangoproject.com/ticket/21852
",MarkusH,None,2014-01-22T08:09:44Z,2014-06-13T08:57:08Z
2197,Fixed #19774 -- Deprecated the contenttypes.generic module.,"It contained models, forms and admin related objects causing undesirable import side effects.
",charettes,None,2014-01-22T06:49:15Z,2014-07-19T16:06:05Z
2196,"Avoid ""'NoneType' object is not iterable"" Exception in Python 2.7.5","This bug was introduced by #2181
",boekkooi,None,2014-01-22T04:51:11Z,2014-07-14T13:09:33Z
2195,Fixed #21850: Make GeometryField.geodetic() case insensitive,"Updates GeometryField.geodetic_units default values to be lower case
Updates GeometryField.geodetic() to test against lower case unit name

https://code.djangoproject.com/ticket/21850
",olivergeorge,None,2014-01-22T02:02:31Z,2014-06-25T10:05:22Z
2194,"Implementing Model.get_again, which fetches a fresh copy from the DB.","This is a proposed fix to https://code.djangoproject.com/ticket/901

I believe that most users are implementing this functionality with the
following workaround:

```
my_foo = Foo.objects.get(pk=my_foo.pk)  # Get latest value from DB.
```

This method simply provides a standard Django way of reloading from the
DB, and includes documentation so users can discover it.

Several commentators have proposed a Model.reload() method that modifies
the model in place. However, this interacts badly with references, such
as OneToOneField. See
https://groups.google.com/d/msg/django-developers/Dcqq7zr2VZo/3OzSEoAS9_sJ

This method compromises by returning a new instance, which I believe
meets the large majority of use cases.
",Wilfred,None,2014-01-21T17:32:31Z,2014-06-12T06:07:03Z
2193,Fixed #21846 -- Made NestedObjects handle related_name with %(app_label)...,"...s or %(class)s.
",loic,None,2014-01-21T17:26:17Z,2014-06-19T19:08:34Z
2192,Make it possible to force the use of a given AppConfig subclass.,,mjtamlyn,None,2014-01-21T12:19:52Z,2014-06-18T18:01:01Z
2191,Fixed #21836 -- Improved transaction docs about autocommit mode,"Clarified that queries in autocommit mode are committed immediately
only if a transaction has not already been started. Added to the
main transaction docs that Django's TestCase class implicitly wraps
its tests in transactions.
",cjerdonek,None,2014-01-21T08:57:54Z,2014-07-18T10:41:04Z
2190,[wip] Fix for #19774 not using metaclasses.,,ramiro,None,2014-01-21T05:29:34Z,2018-08-09T18:49:51Z
2189,[wip] Fix for ticket 19774 using metaclasses for deprecation warnings generation,,ramiro,None,2014-01-21T04:37:59Z,2018-08-09T18:49:49Z
2188,Fixes #21833 -- Fix UserSettingsHolder.is_overridden() and add tests.,,carljm,None,2014-01-21T03:27:45Z,2014-06-13T07:28:25Z
2187,Fixed #21674 -- Deprecated the import_by_path() function in favor of import_string().,"https://code.djangoproject.com/ticket/21674
",berkerpeksag,None,2014-01-20T20:18:31Z,2014-06-23T02:09:09Z
2186,Fixed typo on docstring,"Fixed typo on docstring of exists() method
",zemanel,None,2014-01-20T16:34:13Z,2014-06-25T22:38:31Z
2185,Static UserModel prevented extending builtin users,"The way that these were defined prevented directly extending `django.contrib.auth.models.AbstractUser` and using `django.contrib.auth.admin.UserAdmin` layout to render the `AbstractUser` model in the admin site.
",Paaskehare,None,2014-01-19T23:54:53Z,2014-07-11T15:15:14Z
2184,Refactor aggregates as expressions #14030,"This PR isn't ready for commit, and is not complete, but I'm hoping for some feedback on the direction.

The patch is in reference to: https://code.djangoproject.com/ticket/14030 and currently implements aggregates as ExpressionNodes (F() objects), allowing behaviour like:

```
Author.objects.annotate(combined_ages=Sum(F('age')+F('friends__age')))
```

There's still a bit that needs to be done:
- ~~Fix some issues relating to Lookups and GIS~~
- ~~Some general tidying up~~
- Tests need to run on ~~MySQL and~~ Oracle
- Decide on a strategy on back-compat for 3rd party aggregates. Naive support implemented already, requires review
- ~~Implement non-aggregate annotations~~ _this will be done in a separate branch_
- Docs

I'd love to hear some feedback, especially from maintainers of 3rd party backends (SQL and NoSQL). I'm aiming for as much backwards compatibility as possible, so please raise any pain points.

Previous discussion on the mailing list: https://groups.google.com/forum/#!topic/django-developers/8vEAwSwJGMc
",jarshwah,None,2014-01-19T12:56:57Z,2014-06-14T02:08:53Z
2183,Fixes #21825,"Makes the GIS compiler adhere to the new query expression API.
",jarshwah,None,2014-01-19T08:19:02Z,2014-07-19T16:06:30Z
2182,Admin autodiscovery,,aaugustin,None,2014-01-18T18:36:53Z,2014-06-24T03:20:18Z
2181,Fixed #16905 -- Added extensible checks (nee validation) framework,"This is the result of Christopher Medrela's 2013 Summer of Code project.

Thanks also to Preston Holmes, Tim Graham, Anssi Kääriäinen, Florian Apolloner, and Alex Gaynor for review notes along the way.

Also: Fixes #8579, fixes #3055, fixes #19844.
",freakboy3742,None,2014-01-18T16:26:48Z,2014-06-20T16:25:52Z
2180,Added new languages to admin/urlify.js,"In the process, I also fixed some lowercase/uppercase typos and simplified the implementation a bit.
",bmispelon,None,2014-01-18T06:17:48Z,2014-07-19T16:06:35Z
2179,Fixed #20834 -- Described how caching of user permissions works.,"Thanks Giggaflop and Jennifer Casavantes.
",timgraham,None,2014-01-18T00:39:43Z,2014-06-25T03:31:28Z
2178,Removed some unnecessary __exact operators in filters.,"Tests pass, just pushing this for a sanity check.
",timgraham,None,2014-01-17T22:55:03Z,2014-06-15T00:24:26Z
2177,Added optional ManifestStaticFilesStorage to staticfiles.,"This is work in progress of a new storage backend in staticfiles to be able to generate files with hashed names without relying on a configured cache backend. Since the file is stored as part of calling collectstatic there are no moving parts when running a site with it. Especially with remote storages the number of requests should be dramatically reduced.

@apollo13 mind a review?

This will be squashed into one commit once reviewed.
",jezdez,None,2014-01-17T19:55:14Z,2014-07-14T06:34:34Z
2176,Fixed typo in docstring.,,numerodix,None,2014-01-16T21:36:22Z,2014-07-19T16:06:43Z
2175,Allow custom querysets when prefetching through SingleRelatedObjectDescr...,"...iptor and ReverseSingleRelatedObjectDescriptor.

Allowing it enables calling performance oriented queryset methods
like select_related when prefetching through single related objects.

Refs #17001.
",loic,None,2014-01-16T18:25:28Z,2014-07-04T14:11:29Z
2174,Allow .pyc management commands,"This allows for discovery of .pyc management commands. This can be useful if
you don't wish to deploy unobfuscated source code on your servers, but need
to retain the ability to run custom management commands. The dummy.pyc file
is a placeholder for the test case and is not actual compiled python code.
",kwood,None,2014-01-16T02:11:52Z,2014-07-19T05:07:29Z
2173,Adjust inspectdb management command to yield output following the Django Coding Style,"With this change, the successful output of running the `inspectdb` command complies with style guidelines set forth in /docs/internals/contributing/writing-code/coding-style.txt. While that document refers to the best practices when coding for The Django Project, and not a developer's own project, I feel that consistency with internal practices is good.

I've added a test that checks for this behavior using the 3rd-party _pep8_ Python library ~~(included)~~.
",JustinTArthur,None,2014-01-15T23:25:32Z,2014-07-19T16:06:50Z
2172,CORE-557,,bnekolny,None,2014-01-15T22:08:40Z,2014-07-14T22:00:59Z
2171,Fix typo in storage docs,"Please accept accept my pull request.
",kwood,None,2014-01-15T21:48:07Z,2014-07-19T05:07:48Z
2170,Fixed typo in comment.,"In django/apps/base.py
",numerodix,None,2014-01-15T20:28:42Z,2014-06-24T23:57:46Z
2169,CORE-557,"- Moving extras/django_bash_completion -> django/bin/django_bash_completion
- renaming the pypi package to mmf-Django to avoid confusion, and prevent mixed up pip installs (requires vpn and ~/.pip/pip.conf settings)
",bnekolny,None,2014-01-15T15:04:53Z,2014-07-14T21:38:23Z
2168,use the proxied call to staticfiles_storage.url,,graingert,None,2014-01-15T12:53:23Z,2014-07-18T16:30:20Z
2167,"get_full_name should return username, if first and last name are not set",,ramuta,None,2014-01-14T19:34:04Z,2014-06-25T04:29:55Z
2166,Fixed #21774 -- Isolate all test urls from eachother.,"This (nearly) completes the work to isolate all the test modules from each other. This is now more important as importing models from another module will case PendingDeprecationWarnings if those modules are not in INSTALLED_APPS. The only remaining obvious dependencies are:
- d.c.auth depends on d.c.admin (because of the is_admin flag to some views), but this is not so important and d.c.admin is in always_installed_apps
- test_client_regress depends on test_client. Eventually these should become a single module, as the split serves no useful purpose.
",mjtamlyn,None,2014-01-14T15:46:51Z,2014-06-24T00:45:38Z
2165,Fix typo `content_type__id__exact` in `history_view`,"In the admin interface the `history_view` method does a filter using `content_type__id__exact=...`, while it appears this should be `content_type_id__exact=...`.
",taldcroft,None,2014-01-13T21:22:43Z,2014-07-06T01:11:18Z
2164,Add workaround for HTMLParser on 3.4.,"Python 3.5 will change the default value of convert_charrefs, so 3.4 gives
warnings if it's not present. This is slightly technical as 2.7 doesn't
have the kwarg. Thankfully, we already have a bunch of workarounds for
different versions.
",mjtamlyn,None,2014-01-12T20:50:54Z,2014-06-27T14:33:19Z
2163,Signals,,apollo13,None,2014-01-12T17:35:59Z,2014-07-19T16:07:07Z
2162,Fixed #10811 -- Error raised when assigning unsaved model to Foreign Key,"Well I tried a similar thing on Django 1.6 and it worked.... So I have tried to do a similar thing.
",coder9042,None,2014-01-11T12:04:23Z,2014-06-25T08:18:26Z
2161,Deprecated importing a model before loading its application.,"Refs #21719, #21680.
",aaugustin,None,2014-01-10T22:15:38Z,2014-06-23T03:32:09Z
2160,Fix wrong filename in tutorial4,"I found a wrong filename in the Django tutorial. This pull request fixes it.
",ruurdadema,None,2014-01-10T11:04:56Z,2014-06-20T08:33:35Z
2159,MonthArchiveView & BaseMonthArchiveView docstrings,"MonthArchiveView & BaseMonthArchiveView docstrings now reference ""month"" rather than ""year"".

Thanks to @sztosz for [the report](https://github.com/refreshoxford/django-cbv-inspector/issues/87).
",meshy,None,2014-01-10T09:25:17Z,2014-06-27T04:25:56Z
2158,Stable/1.6.x,"Hello,

In my humble opinion should have more support or documentation for AJAX, it is very difficult to start with the current documentation.

Thank you.
",testxub,None,2014-01-10T05:52:01Z,2014-06-28T04:16:10Z
2157,forms: fix docstring typo,,sibson,None,2014-01-10T04:52:47Z,2014-07-19T16:07:18Z
2156,Fixed #21750 -- Fixed regression introduced by 4befb30.,"Validating STATIC_ROOT in StaticFilesStorage.**init** turned out to be
problematic - especially with tests - because the storage refuses to work even
if there are no actual interactions with the file system, which is backward
incompatible.

Originally the validation happened in the StaticFilesStorage.path method, but
that didn't work as expected because the call to FileSystemStorage.**init**
replaced the empty value by a valid path. The new approach is to move back the
check to the StaticFilesStorage.path method, but ensure that the location
attribute remains None after the call to super.

Refs #21581.
",loic,None,2014-01-10T03:05:13Z,2014-06-12T15:45:40Z
2155,Fix docstrings of MonthArchiveViews,"MonthArchiveView and BaseMonthArchiveView refer to ""year"" in their docstrings instead of ""month"".
",exonian,None,2014-01-10T01:46:23Z,2014-06-25T22:38:21Z
2154,Explicitly close cursors,"Updated the codebase to explicitly close cursors when they are no longer needed, instead of relying upon `__del__` and garbage collection.
",manfre,None,2014-01-09T19:00:47Z,2014-06-12T06:23:32Z
2153,Fixed #21478 -- join promotion for negated AND conditions,"Made sure Django treats case NOT (a AND b) similarly to case
(NOT a OR NOT b).
",akaariai,None,2014-01-08T17:36:28Z,2014-06-17T16:38:09Z
2152,Fixing ticket #21371,"Added the test case for the ticket #21371 as well as updated the templates with the needed ""block.super"" .
All the these test cases are passing.

J
",pouete,None,2014-01-08T16:06:44Z,2014-06-24T23:42:15Z
2151,Fixed #21746 - Fixed test_get_reverse_on_unsaved_object test.,"Test will no longer attempt to insert multiple NULL rows in to a unique
field if the database doesn't support it.
",manfre,None,2014-01-08T15:57:10Z,2014-06-13T09:54:18Z
2150,Fixed #21745 - Feature check UniqueTest.test_unique_null,,manfre,None,2014-01-08T14:54:47Z,2014-07-17T00:09:32Z
2149,Fixed #21454 -- Added `db_generated` option to models.Field.,"Add support for fields that are ""delegated"" to the database (e.g. let the database populate the default values). 

See ticket https://code.djangoproject.com/ticket/21454.
",mpessas,None,2014-01-05T21:37:37Z,2016-01-01T22:35:25Z
2148,Fixed #21718 -- Renamed has_app to installed.,,aaugustin,None,2014-01-05T21:35:57Z,2014-07-19T16:07:33Z
2147,#21711 -- Enforced unicity of model names.,,aaugustin,None,2014-01-05T09:21:48Z,2014-06-22T22:00:56Z
2146,Fixed #21732 -- Made compilemessages complain about non-writable locatio...,"...n

Instead of crashing with a CommandError, now a non-writable location
of mo files will only make compilemessages complain and continue.
",claudep,None,2014-01-04T21:52:42Z,2014-06-12T12:58:37Z
2145,Fixed #21675 -- Added app configs for contrib apps.,,aaugustin,None,2014-01-04T21:50:53Z,2014-06-15T09:23:32Z
2144,Fixes #21733 - @python_2_unicode_compatible causes infinite recursion wh...,"...en module imported more than once
",ntucker,None,2014-01-04T19:35:55Z,2014-06-12T06:59:37Z
2143,Schema editor changes,"Many changes to DatabaseSchemaEditor API to provide more hook points for 3rd party backends.
",manfre,None,2014-01-04T16:19:43Z,2014-07-08T02:24:17Z
2142,Fixed #21731: Made javascript_quote escapes '</'.,,vajrasky,None,2014-01-04T04:59:49Z,2014-06-12T07:00:56Z
2141,Changed parent class calls to super in Field subclasses,,maurycyp,None,2014-01-04T02:29:02Z,2014-06-12T04:53:38Z
2140,Fix session var for language,"Change `request.session['_language']` to:
`request.session['django_language']`
",petkostas,None,2014-01-04T00:49:39Z,2014-07-03T11:45:46Z
2139,Fixed #21728 Writing your first patch for Django documentation points to the wrong directory,,tian-yi,None,2014-01-03T16:08:23Z,2014-07-19T16:07:45Z
2138,Fixed minor typos in GEOS API doc page.,,NathanRSmith,None,2014-01-02T20:23:08Z,2014-07-19T16:07:47Z
2137,Fixed typos. Changed grammar.,"Minor typos. Some grammar changes.
",ftobia,None,2014-01-02T19:23:42Z,2014-07-19T16:07:48Z
2136,Fixed #21712 -- Added AdminConfig with autodiscover.,"A couple of points for consideration:
- `app.py` or `apps.py`? This will set a convention for everything that follows. My inclination suggests `apps.py` as it is plausible at least some apps will have multiple options. Also forms, models, views, urls etc are all plural so it fits nicer.
- Should I test this? I think it's possible using the installed apps override and resetting the admin registry, but I'm not sure if it's useful. My inclination says ""test everything"" though.
- Should we change the default project? (This is more work and I'm inclined to open an extra ticket for it).
",mjtamlyn,None,2014-01-01T23:10:13Z,2014-06-21T22:45:38Z
2135,Django sees more than 1mm hits per hour,"Disqus regularly does 40-50k/s
",mattrobenolt,None,2014-01-01T00:23:28Z,2014-06-13T05:24:37Z
2134,Fixed bug from #21206.,"Added test to verify an empty label performs discovery on the current
working directory.
",prestontimmons,None,2013-12-31T18:04:04Z,2014-06-24T23:58:43Z
2133,Unique app labels,,aaugustin,None,2013-12-31T15:45:13Z,2014-06-16T12:25:52Z
2132,Fixed #21714 -- Moved logging configuration to global setup(),,claudep,None,2013-12-31T12:18:56Z,2014-06-20T10:29:39Z
2131,Fixed #21701 -- Improved testing doc titles and added testing/tools.txt.,"Thanks cjerdonek for the suggestion.
",timgraham,None,2013-12-31T11:26:24Z,2014-06-25T22:40:02Z
2130,only create the postgis extension when it does not already exist,"https://code.djangoproject.com/ticket/21713#ticket
",rizumu,None,2013-12-31T02:32:16Z,2014-06-18T18:14:47Z
2129,Assumed Python 3 throughout docs/intro.,"Various small fixes while I was proof-reading.
",aaugustin,None,2013-12-30T17:19:18Z,2014-06-27T13:30:30Z
2128,Running code at startup,,aaugustin,None,2013-12-30T12:25:31Z,2014-06-15T12:01:55Z
2127,Fixes issue 7599 and documents ModelBackend's methods.,"As per instructed in https://code.djangoproject.com/ticket/7599#comment:12, I added documentation to
ModelBackend.

Credits for the patch go to gwilson.
",jorgecarleitao,None,2013-12-30T07:59:05Z,2014-06-13T13:37:18Z
2126,Introduced as_bytes for SafeMIMEText (and other SafeMIME-classes).,"This is to provide a consistent interface (namely bytes) for the smtp
backend which after all sends bytes over the wire; encoding with as_string
yields different results since mails as unicode are not really specified.

as_string stays for backwardscompatibilty mostly and some debug outputs.
But keep in mind that the output doesn't match as_bytes!
",apollo13,None,2013-12-28T17:38:28Z,2014-07-19T16:08:12Z
2125,Fixed #21696 -- filtering add_to_query() support,"The ability to use add_to_query() objects was removed in Django 1.6.
It turned out that there were enough users for the private hook to
add it back.

The new API is a bit different. Where previously one would manipulate
directly query.where in add_to_query, now the add_to_query() must
return a node to add to query's where or having clauses. In addition
the return value should return joins to demote to INNER JOINs if that
is needed.

So, when previously you had this code:
    def add_to_query(self, query, used_aliases):
        ...
    self.where.add(something)

now you would do this intead:
    def add_to_query(self, query, used_aliases):
        ...
    return something, []  # change the empty list to join aliases
                          # used if you want inner joins for those.
",akaariai,None,2013-12-28T15:05:33Z,2014-07-10T10:46:15Z
2124,Refactor get_model[s],"The first four commits of this pull request modernize and simplify Apps.get_model, and document it as a public API.

See the release notes for details of the changes. (The removal of seed_cache dates back to 742ed9878e7edbb7a11667c489c719c4d9ab82de.)
",aaugustin,None,2013-12-28T14:02:57Z,2014-06-25T22:39:56Z
2123,To allow subclassing of BlockNode tags,"Current code prevents object-oriented programming when using custom block nodes. Now render code has to be copied and this is against DRY principle.
",mitar,None,2013-12-28T11:19:09Z,2014-07-19T16:08:17Z
2122,new defaultfilter wordcap: converts a string into titlecase but respect ...,"Related to ticket https://code.djangoproject.com/ticket/21693

The defaultfilter title may in many cases be an issue to obtain a correct titlecase, for instance if the title contains acronyms or abbreviations. For instance, ""SMS count""|title will display ""Sms Count"" which is not the desired result.
The defaultfilter wordcap try to provide a filter for this.
""SMS count""|wordcap -> ""SMS Count""
",areski,None,2013-12-28T02:43:20Z,2014-06-17T07:33:20Z
2121,Simplified the implementation of register_model.,"register_model is called exactly once in the entire Django code base, at the
bottom of ModelBase.**new**:

```
new_class._meta.apps.register_model(new_class._meta.app_label, new_class)
```

ModelBase.**new** exits prematurely 120 lines earlier (sigh) if a model with
the same name is already registered:

```
if new_class._meta.apps.get_registered_model(new_class._meta.app_label, name):
    return
```

(This isn't the exact code, but it's equivalent.)

apps.register_model and apps.get_registered_model are essentially a setter and
a getter for apps.all_models, and apps.register_model is the only setter. As a
consequence, new_class._meta.apps.all_models cannot change in-between.

Considering that name == new_class.**name**, we can conclude that
register_model(app_label, model) is always called with such arguments that
get_registered_model(app_label, model.**name**) returns None.

Considering that model._meta.model_name == model.__name__.lower(), and looking
at the implementation of register_model and get_registered_model, this proves
that self.all_models[app_label] doesn't contain model._meta.model_name in
register_model, allowing us to simplify the implementation.
",aaugustin,None,2013-12-27T22:05:34Z,2014-06-24T08:02:18Z
2120,Fixed #21692 -- Quote table name when creating it.,"See [#21692](https://code.djangoproject.com/ticket/21692).
",ramiro,None,2013-12-27T21:46:15Z,2020-06-25T13:14:01Z
2119,Refactored the migration signals to use app configs.,"This creates one backwards incompatibility: the sender argument of
pre/post_syncdb changes outright. I don't see how we can provide a
deprecation path.
",aaugustin,None,2013-12-27T20:03:17Z,2014-06-13T18:52:19Z
2118,Support apps without a models module in AppCommand,,aaugustin,None,2013-12-27T14:25:31Z,2014-07-19T16:08:24Z
2117,Fixed #14334 -- Ensured that query comparision objects are of correct type.,,coder9042,None,2013-12-27T13:55:06Z,2014-06-13T03:48:40Z
2116, Switched setup.py to setuptools.,"This should allow windows users to easily invoke django-admin without (in the worst case) having to type:
c:\python\python.exe c:\python\scripts\django-admin.py startproject
",apollo13,None,2013-12-26T21:36:49Z,2014-06-13T00:56:59Z
2115,Fixed #21627 -- Non-ASCII characters from changepassword command,"Fixed a crash when executing changepassword command when the user object
representation contained non-ASCII characters.
",timgraham,None,2013-12-26T12:24:49Z,2014-07-19T16:08:28Z
2114,Removed redundant line,"Line 106 was the same as line 103. I removed it.
",levigross,None,2013-12-25T22:23:38Z,2014-07-19T16:08:30Z
2113,Fixed #21649 -- Added invalidation of old sessions when user password changes.,"https://code.djangoproject.com/ticket/21649
",timgraham,None,2013-12-25T20:24:19Z,2014-06-18T09:15:13Z
2112,Unified listing of shell commands/code,"- use code-block:: bash
- prefix the command with $

also added 2 hyperrefs to djadmin docs in tutorial1
",yarikoptic,None,2013-12-25T19:56:28Z,2014-07-19T16:08:34Z
2111,Fixed unittest typo,,levigross,None,2013-12-25T17:18:52Z,2014-07-19T16:08:35Z
2110,Added release notes for app loading changes.,,aaugustin,None,2013-12-24T18:01:06Z,2014-07-19T16:08:36Z
2109,add Azerbaijani mapping for URLify,"""Ə, ə"" is the most common letter in Azerbaijani language. I've copied other letters from Turkish mapping.
",aliismayilov,None,2013-12-24T16:58:21Z,2014-07-19T16:08:38Z
2108,Typo fix for exception message.,,jgastal,None,2013-12-24T16:30:21Z,2014-07-19T16:08:38Z
2107,New app loading docs,,aaugustin,None,2013-12-24T15:30:27Z,2014-07-19T16:08:40Z
2106,Renamed AppCache to Apps.,"Also renamed app_cache to apps and ""app cache"" to ""app registry"".

Deprecated AppCache.app_cache_ready() in favor of Apps.ready().
",aaugustin,None,2013-12-24T11:26:53Z,2014-07-19T16:08:41Z
2105,Use cached_property for request.GET and request.COOKIES,,funkybob,None,2013-12-24T11:00:53Z,2014-07-19T16:08:43Z
2104,Fixed #13165 -- Display edit and delete links for admin related fields.,"WIP
",charettes,None,2013-12-23T06:10:15Z,2014-06-13T07:50:07Z
2103,Refactored INSTALLED_APPS overrides.,#NAME?,aaugustin,None,2013-12-22T23:13:15Z,2014-07-19T16:08:47Z
2102,Fixed #13711 -- Error raised when auto-generated name becomes too long.,"The ticket #13711 and #13528 are somewhat related.
There was a diff given for #13528 by claudep.
The diff works fine. The only change required in that is self.model should be changed to self.concrete.model
Thanks Tim Graham for help.
For solving the issue of #13711 I have truncated the field names in the same manner as we do the table names, so that no database error would spring up.
Please review and report if any changes are required or if its fine then well and good.
Thanks Tim Graham for help
",coder9042,None,2013-12-22T20:28:57Z,2014-06-13T07:21:17Z
2101,Initial work on new ePub theme.,"This improves on the currently half-broken ePub theme for the Django documentation.

For details, see ticket at https://code.djangoproject.com/ticket/21190
",alimony,None,2013-12-22T18:54:55Z,2014-06-14T07:22:33Z
2100,Fixed #21651 -- Made django.utils.text.recapitalize handles more than on...,"...e space, newlines, and tabs.
",vajrasky,None,2013-12-22T15:51:06Z,2014-07-19T16:08:53Z
2099,Fixed #21242 -- Allowed more IANA schemes in URLValidator,"Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.
",claudep,None,2013-12-21T08:57:09Z,2014-06-13T11:58:50Z
2098,Removed requires_literal_default DatabaseFeature.,"Any database that needs to control how the default value is rendered will
need to override prepare_default.

DatabaseOperations.quote_parameter has been relocated to SchemaEditor and
prefixed with an underscore to discourage usage by others. It's possible
to use _quote_parameter in such a way as to open the possibility of an SQL
injection attack.
",manfre,None,2013-12-20T18:29:23Z,2014-07-13T19:32:38Z
2097,Fixed #18355 -- Add ordering options to generic views.,"Added new attribute and overrideable method to MultipleObjectMixin
to allow easy sorting of the queryset.

Refs #21450.
",pjrharley,None,2013-12-19T09:28:52Z,2014-08-15T15:11:05Z
2096,Override __getitem__ in RenderContext (#21639),"Fix inconsistent access to items in RenderContext.

See https://code.djangoproject.com/ticket/21639
",AlexHill,None,2013-12-19T05:43:18Z,2014-06-25T06:57:34Z
2095,make EmailField return e-mail addresses in canonical form,"The domain part in email addresses is case-insensitive by RFC, so x@foo.com is indistinguishable from x@fOo.cOm . This makes EmailField normalise the email representation by lower-casing the domain part. This fixes an issue with UNIQUE constraints on the model, where the constraint is not enforced if the user enters the same e-mail with different case representations.
",mij,None,2013-12-19T00:45:51Z,2014-07-04T10:32:47Z
2094, Fixed #21478 -Changed documentation for db_type(),,coder9042,None,2013-12-18T21:35:42Z,2014-06-25T15:55:03Z
2093,Fixed #21592 -- allow accessing ordered_forms on invalid formsets.,,pjrharley,None,2013-12-18T19:08:58Z,2014-08-14T22:42:38Z
2092,Fix slow test if `ENVIROMENT_VARIABLE` is set,,ondrejsika,None,2013-12-18T17:15:01Z,2014-06-17T15:45:22Z
2091,Fixed #11629 -- Deprecated callable arguments to queryset methods.,"Callable arguments were an untested and undocumented feature.
",bmispelon,None,2013-12-18T16:54:21Z,2014-06-13T17:22:25Z
2090,Ticket 21636 - Skip distinct_on_fields tests for unsupported databases.,,manfre,None,2013-12-18T16:31:02Z,2014-07-19T16:09:12Z
2089,Yet another app loading branch,"Make it possible to invoke app cache APIs at import time. Currently this is almost impossible because everything triggers populate() which creates import loops. Eventually these APIs will replace iteration on INSTALLED_APPS, and only then we can change the format of INSTALLED_APPS.

WIP.
",aaugustin,None,2013-12-18T13:07:30Z,2014-06-13T03:18:43Z
2088,Documentation for ticket_21552 added.,,coder9042,None,2013-12-18T07:06:42Z,2014-06-25T15:54:58Z
2087,Fixed #21632 -- Docs: Removed example with callable as query parameter,"Using callables as query parameters is undocumented and not working,
so this changes an example from the ForeignKey.limit_choices_to
documentation that uses it.
",marfire,None,2013-12-18T05:56:29Z,2014-07-07T17:24:50Z
2086,Refs #17413 -- Added isinstance backward compatibility on ErrorList.,,loic,None,2013-12-18T01:54:24Z,2014-07-19T16:09:23Z
2085,Yet another app loading branch,"WIP for part 2 of the plan.
",aaugustin,None,2013-12-17T19:43:29Z,2014-07-19T16:09:24Z
2084,Update fields.py,"Duplicated `TimeField` in **all**.
",barseghyanartur,None,2013-12-16T22:07:44Z,2014-06-16T06:47:03Z
2083,Fixed #21625 -- incorrect documentation for DiscoverRunner.build_suite,,tian-yi,None,2013-12-16T21:59:54Z,2014-07-06T19:06:11Z
2082,Fixed #21430 -- Added Exception to be raised when unpickiling QuerySet across unsupported django version,"Added an exception `UnsupportedUnpickleException` that is raised when user tries to unpickle a pickles `QuerySet` different Django versions.
",prasoon2211,None,2013-12-16T16:47:39Z,2014-06-19T18:18:38Z
2081,Fixed #21564 -- Use local request object when possible in generic views.,"Thanks to trac user adepue for the report and original patch.
",bmispelon,None,2013-12-16T15:47:36Z,2014-07-19T16:09:36Z
2080,Fixed #21622. Changed rendering of app_label in admin to consistently use title() to allow easy customization.,,chrisspen,None,2013-12-15T22:19:04Z,2014-06-18T10:04:53Z
2079,Typo in 1.7 release notes,,brutasse,None,2013-12-15T09:00:52Z,2014-07-04T14:11:22Z
2078,Ticket #21613 Clarify that '3' will be shown if the 3rd item was chosen.,"#21613 , Clarified the previously mysterious magic constant '3'.  I researched a bit and there are '3' default choices available, https://docs.djangoproject.com/en/dev/intro/tutorial02/ . Ticket# https://code.djangoproject.com/ticket/21613
",AnneTheAgile,None,2013-12-15T01:01:58Z,2014-06-19T23:21:08Z
2077,Catch the more specific subclass of ObjectDoesNotExist in SingleObjectMixin,"Fixes #21619

I'm not sure if this test is sufficient - I couldn't see an easy way to write a test that would have actually failed previously.
",pjrharley,None,2013-12-14T23:30:24Z,2014-06-19T05:45:30Z
2076,Yet another app loading branch,"Currently (18 commits in) this branch allows creating applications without a models module while preserving full backwards compatibility
",aaugustin,None,2013-12-14T20:02:41Z,2014-06-14T06:50:22Z
2075,Fixed #21614 -- improved development section of email docs,"This patch improves the section of the email docs about [configuring email for development](https://docs.djangoproject.com/en/dev/topics/email/#testing-email-sending). It clarifies that the section is not so much about testing email as it is about configuring email for development. It also makes other minor improvements like adding a link to the section on unit-testing the sending of email, which is not covered in this section at all. See [ticket #21614](https://code.djangoproject.com/ticket/21614).
",cjerdonek,None,2013-12-13T21:29:22Z,2014-06-26T17:23:35Z
2074,Ref #21574 -- Don't wrap argument for normalize_newline with force_text ...,"...in django.utils.html.clean_html.
",vajrasky,None,2013-12-13T17:31:09Z,2014-07-02T02:03:18Z
2073,"Trivial doc fix: text for link to ""Testing in Django"" section","The bottom of the [Further testing](https://docs.djangoproject.com/en/dev/intro/tutorial05/#further-testing) section of the documentation has a link to ""Testing in Django"" with the wrong link text.  ""Testing Django applications"" is a sub-section of [""Testing in Django""](https://docs.djangoproject.com/en/dev/topics/testing/) and is not the name of the testing section as a whole.
",cjerdonek,None,2013-12-13T16:31:28Z,2014-07-19T16:09:50Z
2072,Fixed #21606 -- OSMWidget overrides map position passed to widget constructor,"I've found a bug in OSMWidget implementation, which I've posted to the Trac. This pull request is a fix for that bug, with tests showing the issue.

Trac link: https://code.djangoproject.com/ticket/21606

In the last commit, I've also enabled running certain tests, even when spatial database is not present, because some tests don't need it (mine for example).

Tested with default settings: 

```
python test/runtests.py --settings=test_sqlite django.contrib.gis
```
",jgoclawski,None,2013-12-13T14:52:44Z,2017-05-12T13:28:03Z
2071,Add a DummyStorage and a Messagemixin to contrib.messages,,bmispelon,None,2013-12-13T12:54:00Z,2014-07-18T07:34:13Z
2070,Fixed E127 pep8 warnings.,,loic,None,2013-12-13T08:28:04Z,2014-06-20T18:17:18Z
2069,Fix fetching models from complex RawQuerySets in SQLite,"SQLite will sometimes (returning columns from subqueries or views for example) return column names in the form `table_alias.""column_name""` or simply `""column_name""` instead of just `column_name`.

This meant that RawQuerySet can't match up the columns when trying to create model instances, and raises `InvalidQuery: Raw query must include the primary key`.

This change introduces a `column_name_converter()` to the backend introspection code to mirror `table_name_converter()` and implements the fix on the SQLite backend.

This is the same behaviour accounted for in SQLAlchemy here: https://github.com/zzzeek/sqlalchemy/blob/4663ec98b226a7d495846f0d89c646110705bb30/lib/sqlalchemy/dialects/sqlite/base.py#L591
",AlexHill,None,2013-12-13T06:13:10Z,2015-03-26T02:13:43Z
2068,Clarify table rewrites in migration docs.,"Small nitpicks. All column-related ALTER TABLE commands take an
exclusive table lock in PostgreSQL. The difference is that adding a
column without default doesn't cause a table rewrite, so the lock is
held only for a short time.

The time taken is more accurately proportional to table size, not row
count.
",intgr,None,2013-12-12T19:38:43Z,2014-07-19T16:10:01Z
2067,Moving notes for assertNumQueries next to the other changes to test infrastructure,"This corrects my mistake in 5cd6477fd6ea31eeb4d281e8e431b7a5fb8038a1.
",dominicrodger,None,2013-12-12T14:49:43Z,2014-07-19T16:10:04Z
2066,Add documentation about get_messages.,"Refs https://code.djangoproject.com/ticket/21591
",Natim,None,2013-12-12T10:49:31Z,2014-06-13T16:57:06Z
2065,Fixed #21598 -- cleanup template loader overrides in tests,"- Template loader overriding is managed with contexts.
- The test loader is a class (function based loaders entered deprecation timeline
  in 1.4).
- Template loader overrider that overrides with test loader added.
",umazalakain,None,2013-12-12T10:08:37Z,2014-06-25T01:25:02Z
2064,"#21587 RedirectView done not permanent by default, tests fixed",,Melevir,None,2013-12-12T04:59:03Z,2014-06-18T13:39:50Z
2063,Fix #21594 -- Add note about model formsets deleting objects,"Some users may interpret `formset.save(commit=False)` to mean that no changes are committed to the database, when deletions actually are. (This behavior is fixed in ticket [#10284](https://code.djangoproject.com/ticket/10284) / commit 65e03a424e82e157.)

See Track ticket [#21594](https://code.djangoproject.com/ticket/21594).
",benspaulding,None,2013-12-11T18:50:00Z,2014-06-12T06:59:12Z
2062,Add note about model formsets deleting objects when `commit=False`,"Some users may interpret `commit=False` to mean that no changes are commited to the database, when deletions actually are.

See [Trac Ticket #21594](https://code.djangoproject.com/ticket/21594).
",benspaulding,None,2013-12-11T17:39:27Z,2014-06-15T07:21:04Z
2061,Fixed #4282 -- startproject should honor umask,"Currently I updated the old patch that it works under python2 and python3.
Also I added a test suite that checks if a file has a mode of 0600 and a directory has a mode of 0700 if i set the umask to 0o077
",schmitch,None,2013-12-10T22:11:29Z,2014-09-10T12:39:26Z
2060,Add comment method to QuerySet.,"This allows SQL comments to be added to django queries.

Ex:
comment = 'Hello DB'
Book.objects.filter(id=1).comment(comment)

SQL output:
SELECT ""book"".""id"" FROM ""book"" WHERE ""book"".""id"" = 1 /\* Hello DB */

We aren't necessarily expecting to have this merged into 1.4 (we already have it locally) but we are interested in merging this into master and were curious to see if this is something the django team is interested in.
",kkaehler,None,2013-12-10T17:51:53Z,2014-06-12T11:43:48Z
2059,Re-fixed #21554 - Properly look up which table columns are on during multiple inheritance,"For Issue #21554 - https://code.djangoproject.com/ticket/21554
",mitchellrj,None,2013-12-10T11:22:27Z,2014-08-04T10:49:18Z
2058,Fixed #21560 -- missing 'slug' field in example code,"I updated the documentation, that the modelform now includes the 'slug' field.
",schmitch,None,2013-12-09T21:59:07Z,2014-06-26T13:58:20Z
2057,Fixed #21581 -- Fixed a number of issues with collectstatic.,,loic,None,2013-12-09T17:30:50Z,2014-06-24T01:02:55Z
2056,Fixed #21563 -- Raise a subclass of AttributeError when a related object doesn't exist.,,charettes,None,2013-12-08T23:29:58Z,2014-06-17T16:18:46Z
2055,#21462: assertNumQueries now prints queries executed on failure,,dominicrodger,None,2013-12-08T23:07:44Z,2014-06-29T19:24:42Z
2054,Fixed E124 pep8 warnings.,,loic,None,2013-12-08T17:22:23Z,2014-07-19T16:10:25Z
2053,Clarifies why render() does not return a TemplateResponse object.,"See issue: https://code.djangoproject.com/ticket/21580#ticket
",johannes-gehrs,None,2013-12-08T17:11:18Z,2014-06-13T02:54:23Z
2052,Made flake8 ignore the .git directory.,,loic,None,2013-12-08T13:17:23Z,2014-06-13T01:57:55Z
2051,Fix #21250 - Made configurable HTTP auth user header in tests,"Currently, if the authentication mechanism uses a custom HTTP header
and not REMOTE_USER, it is not easy to test. This commit modifies
remote user tests in order to make them more generic.
",bartsanchez,None,2013-12-08T11:56:18Z,2014-06-25T07:08:07Z
2050,Renamed first argument of class method to cls,,maurycyp,None,2013-12-08T01:15:10Z,2014-06-26T11:19:52Z
2049,15084 app locale subdir,"See [#15084](https://code.djangoproject.com/ticket/15084).

Avoid loading apps Python modules from translation machinery only to get the FS path of the locale/ subdir.

Feedback is welcome.
",ramiro,None,2013-12-07T18:30:31Z,2018-08-09T18:48:24Z
2048,Trigger AttributeError in ValidationError.message_dict when error_dict is missing.,"The goal of this change is twofold; firstly, matching the behavior of Django 1.6
and secondly, an AttributeError is more informative than an obscure ValueError
about mismatching sequence lengths.

Refs #20867.
",loic,None,2013-12-07T16:12:43Z,2014-06-19T19:53:42Z
2047,Fixed #21510 -- Readded search reset link in changelist search bar,"Thanks moritz.pfeiffer at alp-phone.ch for the report and
Tim Graham for the initial patch.
",claudep,None,2013-12-07T13:18:34Z,2014-06-22T05:18:48Z
2046,Fixed #21573 -- Cached regular expression of newlines in django.utils.te...,"...xt.normalize_newlines.
",vajrasky,None,2013-12-07T08:55:33Z,2014-07-19T16:10:41Z
2045,Fixed #21572 -- Added unit test for django.utils.text.normalize_newlines...,"....
",vajrasky,None,2013-12-07T08:29:15Z,2014-06-14T12:16:00Z
2044,Fixed #21319 -- Added documentation of Form instance's fields attribute.,"Thanks pydanny for the report. Also, added documentation about
base_fields attribute and its difference with fields attribute.
",vajrasky,None,2013-12-07T07:16:19Z,2014-06-25T22:24:34Z
2043,Ticket 21530,"This adds tests to the pull request adds tests to #2007.

There are two commits to make it easy to demonstrate that there is a failing test, which is fixed by the suggested patch. I can squash to a single commit if required.
",alasdairnicol,None,2013-12-07T02:06:13Z,2014-06-22T16:58:21Z
2042,Fixed #15053 -- avoid recursion when extending templates ,"The `extends` template tag now avoids recursion, making it possible for
templates to inherit from third party app templates with the same name.
Cache loader has been made compatible with self-referenced inheritance.
",umazalakain,None,2013-12-06T14:34:34Z,2014-06-15T16:59:29Z
2041,Fixes for the CI failures,"The failures can be reproduced by running the test suite with `--verbosity 2`.
",bmispelon,None,2013-12-06T14:07:11Z,2014-07-19T16:10:56Z
2040,Fixed #21568 -- Added missing ModelMultipleChoiceField to_python method,"Thanks dibrovsd at gmail.com for the report.
",claudep,None,2013-12-06T13:51:40Z,2014-07-19T16:10:59Z
2039,Remove backslashes and unreachable code,,maurycyp,None,2013-12-06T04:47:44Z,2014-07-19T16:11:02Z
2038,Fix to use concrete_fields instead of local_fields.  Fixes issue with ForeignObject bulk creation.,"Ticket filed at https://code.djangoproject.com/ticket/21566
",rogerhu,None,2013-12-06T01:28:26Z,2014-06-21T11:51:23Z
2037,Fixed TypeError when rendering ModelState with multiple bases.,"I added a test for the error and simplified the existing one a bit.
",bmispelon,None,2013-12-05T23:56:56Z,2014-07-19T16:11:07Z
2036,Fixed #21551 -- Reenabled loading fixtures from subdirectory,"This was a regression in Django 1.6 that was only partially
restored in 839940f27f.
Thanks Jonas Haag for the report.
",claudep,None,2013-12-05T22:08:32Z,2014-06-13T07:36:55Z
2035,generic view http_method_not_allowed should only reference request and n...,"...on member variable

Ticket opened for this:
https://code.djangoproject.com/ticket/21564#ticket
",adepue,None,2013-12-05T21:34:36Z,2014-06-25T01:20:44Z
2034,Fixed #21554 - Properly look up which table columns are on during multiple inheritance,"For Issue #21554 - https://code.djangoproject.com/ticket/21554
",pegler,None,2013-12-05T16:24:14Z,2014-06-24T06:53:59Z
2033,fg,"fg
",ghost,None,2013-12-05T14:42:18Z,2014-07-19T16:11:16Z
2032,Fixed #21562 -- Warned against using the same app name as a django contr...,"...ib app.

Thanks yourcelf for the report.
",alasdairnicol,None,2013-12-05T13:54:29Z,2014-06-25T04:04:11Z
2031,Fixed 'return' in __init__ and semicolons at end of statements,,maurycyp,None,2013-12-05T05:52:41Z,2014-06-12T06:59:40Z
2030,Fixing manager documentation inaccuracy,"Current docs cause the methods to fail with a relatively obscure error of: 

AttributeError: 'NoneType' object has no attribute '_meta'

Because self.model isn't being passed in.  I ran into this today and spent quite a bit of time sorting it out and I'm sure others have or will. 
",frankwiles,None,2013-12-05T00:05:25Z,2014-07-06T06:30:56Z
2029,List 1.6.x releases in descending order,"to be consistent with the other releases.
",alasdairnicol,None,2013-12-04T21:36:07Z,2014-06-19T10:51:12Z
2028,Fixed #8898 -- Obsoleted SplitDateTimeWidget usage with DateTimeField,,claudep,None,2013-12-04T20:00:31Z,2014-06-13T02:25:16Z
2027,Fixed #21523 - Added support for mock dates in Date/TimeField.to_python(),"In cases where the value passed in to the DateField.to_python() method
is a real date, and datetime.date is being mocked out, the method would
raise an error attempting to call parse_date on the mock object (as the
parsing requires a string input). I’ve added in a duck-type check for
objects before the parse_date call - if the object has a ‘isoformat()’
method, then call this, and pass it into the parse_date function - which
should return an identical object.
",hugorodgerbrown,None,2013-12-04T15:43:13Z,2016-04-16T23:18:05Z
2026,[1.5.x] Fixed #21523 - support for mock dates in DateField.to_python(),"In cases where the value passed in to the DateField.to_python() method
is a real date, and datetime.date is being mocked out, the method would
raise an error attempting to call parse_date on the mock object (as the
parsing requires a string input). I’ve added in a duck-type check for
objects before the parse_date call - if the object has a ‘isoformat()’
method, then call this, and pass it into the parse_date function - which
should return an identical object.
",hugorodgerbrown,None,2013-12-04T14:59:08Z,2014-06-16T06:47:31Z
2025,Fix #21558 and #14950,,mpasternak,None,2013-12-04T13:05:49Z,2014-06-12T06:59:37Z
2024,New Note for filter_horizontal and non-ASCII characters in verbose_name,"If verbose_name contains non-ASCII characters filter_horizontal and filter_vertical widgets does not work in the Admin site.
",pauloxnet,None,2013-12-04T10:50:27Z,2014-06-17T13:12:07Z
2023,New Note for filter_horizontal and non-ASCII characters in verbose_name,"If verbose_name contains non-ASCII characters filter_horizontal and filter_vertical widgets does not work in the Admin site.
",pauloxnet,None,2013-12-04T10:39:36Z,2014-06-13T04:09:31Z
2022,Fixed #21555 -- Made ValidationError pickable.,"Thanks trac username zanuxzan for the report and original patch.
",loic,None,2013-12-04T07:23:32Z,2014-06-24T07:30:40Z
2021,Fixed #19869 -- active language change inside ``LiveTestServerCase``,"It's now possible to change the active language of the live test server from
within the tests. This is achieved by converting the active language thread local
into a thread nonlocal.
",umazalakain,None,2013-12-04T00:15:42Z,2014-06-12T16:28:00Z
2020,Fixed #21552 -- Cannot use None as a query value for iexact lookup,,denya,None,2013-12-03T09:56:46Z,2014-06-16T21:50:33Z
2019,Class based lookups for the ORM,"This PR implements class based lookups for the ORM.
",akaariai,None,2013-12-03T09:38:18Z,2014-06-13T06:40:33Z
2018,Fixed #21538 -- Added numpy to test/requirements/base.txt,"Thanks Tim Graham for the report
",alasdairnicol,None,2013-12-02T17:36:26Z,2014-06-25T01:12:25Z
2017,Fix FormSet to use total_form_count consistently,"Previously full_clean() used a mixture of total_form_count() and 
self.management_form.cleaned_data[TOTAL_FORM_COUNT] which made it harder to
override management form behaviour.
",theospears,None,2013-12-02T17:13:13Z,2014-07-19T16:12:02Z
2016,Fixed #21545 -- autoreload kqueue events weren't cleared which caused an infinite loop.,,loic,None,2013-12-02T17:12:37Z,2014-06-18T19:20:02Z
2015,Fixed #21544 Problem with number format when not using L10N,"See https://code.djangoproject.com/ticket/21544
",yceruto,None,2013-12-02T14:14:30Z,2014-06-12T15:14:47Z
2014,Fixed #21543 -- Removed setting of base_dir attribute in StaticFilesHand...,"...ler.

This code seems to be unused.

https://code.djangoproject.com/ticket/21543
",KrzysiekJ,None,2013-12-01T19:49:01Z,2014-06-16T18:54:09Z
2013,Fixed #20495 -- Added login failure events to security logger,"When a user login attempt fails, it will be logged using
the logger django.security.FailedLogin, at warning level.
",boylea,None,2013-12-01T12:15:34Z,2014-10-28T11:16:06Z
2012,Fixed #21539 -- Added example of modelformset_factory's form argument,"Initial attempt at adding an example of the modelformset_factory's form argument. Feedback welcome.

I tried to write the example so that it could easily be backported to 1.5.X and 1.6.X, for example I don't refer to the new widgets or localized_fields options in 1.6.

I couldn't think of a good example to go in the clean method. The only inspiration I got from the current docs was to ensure that the name starts with 'O'.
",alasdairnicol,None,2013-12-01T02:17:56Z,2014-06-12T13:37:42Z
2011,Fixed #21482 -- Uplifted restriction of collectstatic using symlink opti...,"...on in Windows NT 6.
",vajrasky,None,2013-11-30T14:10:59Z,2014-06-12T13:19:14Z
2010,Fix comment typos,,AlexHill,None,2013-11-30T09:19:41Z,2014-07-19T16:12:16Z
2009,Fixed #21535 -- Fixed password hash iteration upgrade.,"Thanks jared_mess for the report.
",timgraham,None,2013-11-30T01:54:11Z,2014-06-19T18:42:08Z
2008,Document the house style for gender neutral pronouns,"I'm not wild about the section title, but there wasn't an existing one where this fit. If we have more writing style elements we can put them in this section
",alex,None,2013-11-30T00:42:01Z,2018-04-08T00:10:58Z
2007,Fix for #21530,"Correct AttributeError exception that occurs when one URL is specified in the urls.py.
",dmyerscough,None,2013-11-29T14:56:09Z,2014-07-19T16:12:23Z
2006,Fixing URL bug to allow users to have only one URL rule.,"Currently Django 1.6 does not allow developers to specify only one URL within the urls.py file. The app_name and namespace attributes don't exist and an exception is thrown if urls.py only contains one URL.
# 

Traceback (most recent call last):
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/wsgiref/handlers.py"", line 85, in run
    self.result = application(self.environ, self.start_response)
  File ""/Users/dmyerscough/nagios-api-env/lib/python2.7/site-packages/django/contrib/staticfiles/handlers.py"", line 67, in **call**
    return self.application(environ, start_response)
  File ""/Users/dmyerscough/nagios-api-env/lib/python2.7/site-packages/django/core/handlers/wsgi.py"", line 206, in **call**
    response = self.get_response(request)
  File ""/Users/dmyerscough/nagios-api-env/lib/python2.7/site-packages/django/core/handlers/base.py"", line 148, in get_response
    response = debug.technical_404_response(request, e)
  File ""/Users/dmyerscough/nagios-api-env/lib/python2.7/site-packages/django/views/debug.py"", line 471, in technical_404_response
    and tried[0][0].app_name == tried[0][0].namespace == 'admin')):
AttributeError: 'RegexURLPattern' object has no attribute 'app_name'
# 

Steps to reproduce this:-

1 - Edit the urls.py file and include only one URL rule

urlpatterns = patterns('',
    url(r'^test/', 'nagios_api.views.comments', name='home'),

2 - Connect to the Django web server and the error above will be reproduced.
",dmyerscough,None,2013-11-29T13:26:09Z,2014-06-12T09:00:05Z
2005,Use 'update_fields' in RelatedManager.clear() when bulk=False.,"Refs #21169.
",loic,None,2013-11-28T19:58:48Z,2014-07-19T16:12:31Z
2004,[1.5.x] Fixed #21523 — added additional parsing to DateField.to_python(),"The to_python method attempts to convert a DateField value to a python
datetime.date object instance. It checks for datetime.date, datetime.
datetime instances, and if neither of those it then attempts to parse
the value as a string. This can fail if the value is an object that is
not a date, but is being used to represent one - i.e. a mock object.

Previously there was a call to django.utils.encoding.smart_str before
the call to parse_date, which essentially converted the value to its
unicode representation. This was removed when the smart_str method was
removed (in favour of smart_text). I have put a call to smart_text back
in.
",hugorodgerbrown,None,2013-11-28T18:02:11Z,2014-06-16T06:47:28Z
2003,Improved #21230 -- removed direct settings manipulation from template tests,,umazalakain,None,2013-11-28T13:38:08Z,2014-06-15T14:06:35Z
2002,Set zip_safe to false to avoid a ton of debug messages during install.,"During install, it's pretty annoying to see a list of every single time that Django uses `__file__`. By specifying `zip_false` in the call to `setup`, these messages aren't output and Django is simply unpacked into a directory, as it isn't zip compatible anyway:

```
Getting distribution for 'django==1.6.0'.
warning: no previously-included files matching '__pycache__' found under directory '*'
warning: no previously-included files matching '*.py[co]' found under directory '*'
zip_safe flag not set; analyzing archive contents...
django.conf.project_template.project_name.settings: module references __file__
django.contrib.admin.bin.compress: module references __file__
django.contrib.admindocs.views: module references __file__
django.contrib.auth.tests.test_context_processors: module references __file__
django.contrib.auth.tests.test_forms: module references __file__
django.contrib.auth.tests.test_views: module references __file__
django.contrib.flatpages.tests.test_csrf: module references __file__
django.contrib.flatpages.tests.test_middleware: module references __file__
django.contrib.flatpages.tests.test_templatetags: module references __file__
django.contrib.flatpages.tests.test_views: module references __file__
django.contrib.formtools.tests.tests: module references __file__
django.contrib.formtools.tests.wizard.namedwizardtests.tests: module references __file__
django.contrib.formtools.tests.wizard.wizardtests.tests: module references __file__
django.contrib.gis.geometry.test_data: module references __file__
django.contrib.gis.tests.geo3d.tests: module references __file__
django.contrib.gis.tests.geogapp.tests: module references __file__
django.contrib.gis.tests.layermap.tests: module references __file__
django.contrib.sitemaps.tests.test_http: module references __file__
django.contrib.staticfiles.storage: module references __file__
django.core.management.__init__: module references __path__
django.core.management.sql: module references __file__
django.core.management.templates: module references __path__
django.core.management.commands.makemessages: module references __file__
django.db.utils: module references __file__
django.db.models.loading: module references __file__
django.db.models.loading: module references __path__
django.template.loaders.app_directories: module references __file__
django.test._doctest: module references __file__
django.test._doctest: module MAY be using inspect.getsourcefile
django.utils.autoreload: module references __file__
django.utils.module_loading: module references __path__
django.utils.version: module references __file__
django.utils.translation.trans_real: module references __file__
django.utils.unittest.collector: module references __file__
django.utils.unittest.loader: module references __file__
django.views.i18n: module references __file__
Got Django 1.6.
```
",naftulikay,None,2013-11-27T23:46:46Z,2014-07-19T16:12:38Z
2001,Add test and patch for issue 21518.,,qris,None,2013-11-27T19:52:59Z,2014-06-24T16:24:48Z
2000,Fixed typo in release notes.,,loic,None,2013-11-27T18:39:42Z,2014-06-24T14:02:27Z
1999,Fixed #21517 -- Added unit test for non-autoincrement primary key with v...,"...alue 0.
",vajrasky,None,2013-11-27T15:04:00Z,2014-06-25T00:14:09Z
1998,Fixed #21511 -- Adding django_bash_completion to the setup.py script packaging of Django.,"Submitting a pull request for this ticket: https://code.djangoproject.com/ticket/21511

Description:
I can't seem to get to django_bash_completion from a pypi package install of Django. I believe this is due to not including the package for ""extras"". Additionally, if django_bash_completion was added as an explicit script, it would be placed in the $VIRTUAL_ENV/bin/ folder for easier use.
",bnekolny,None,2013-11-26T17:28:40Z,2014-07-19T16:12:46Z
1997,Used available_attrs in method_decorator,"Fix https://code.djangoproject.com/ticket/21513 by only copying attributes that exist.
",dpwrussell,None,2013-11-26T12:02:51Z,2014-06-12T06:29:04Z
1996,Fixed #21512 -- Added more complete information about Pillow and PIL in ...,"...model_fields and model_forms tests.
",vajrasky,None,2013-11-26T05:53:33Z,2014-07-19T16:12:51Z
1995,Fixes #21495: Adds CSRF header name setting and moves CSRF settings to CSRF View Middleware.,"This allows for the View Middleware to be subclassed to swap out any applicable settings. This currently pulls in the available settings from the settings module to be phased out eventually in favor of storing the CSRF settings solely in the CSRF View Middleware class.
See: https://code.djangoproject.com/ticket/21495
",wesalvaro,None,2013-11-25T19:11:55Z,2014-12-04T04:35:14Z
1994,Fixed #18456 -- escape path returned by `HttpRequest.get_full_path()`,"The path part of `HttpRequest.get_full_path()` is now escaped according to RFC
2396.
",umazalakain,None,2013-11-25T15:50:42Z,2014-10-31T15:47:43Z
1993,Fixed #21509 – Removed dead exception catching code.,"Since Python 2.5, KeyboardInterrupt and SystemExit are not subclasses of
Exception, so explicitly reraising them before the “except Exception” clause
is not necessary anymore.

https://code.djangoproject.com/ticket/21509
",KrzysiekJ,None,2013-11-25T14:56:01Z,2014-06-25T09:56:47Z
1992,Fixed #21509 – Narrowed catching of exceptions in XML assertions.,"https://code.djangoproject.com/ticket/21509
",KrzysiekJ,None,2013-11-25T13:15:44Z,2014-06-25T06:38:09Z
1991,Fixed #21473 in 1.6.x branch - language is preserved after logout,"Current language is no longer saved to session by LocaleMiddleware
on  every response (the behavior introduced in #14825).
Instead language stored in session is reintroduced into new session
after logout.
",ludwiktrammer,None,2013-11-25T12:07:43Z,2014-06-12T06:59:25Z
1990,Fixed #21507 -- corrected wrong default widget information for FileField,"models.FileField reference had an incorrect information (as its default
widget is ClearableFileInput not FileInput). models.FileField reference
did not have any information about its default widget, which was
inconsistent with other fields references. Corrected both.
",ludwiktrammer,None,2013-11-25T12:04:54Z,2014-06-17T01:00:36Z
1989,Fixed #21495 Added a setting for CSRF Header name,"https://code.djangoproject.com/ticket/21495

Thanks wesalvaro for report and initial PR.

I'm missing test(s) and probably docs. I'm not sure what tests to write in `csrf_tests/tests.py`. Feel free to comment. 
",ArcTanSusan,None,2013-11-25T01:51:57Z,2014-06-14T17:50:20Z
1988,Fixed #21417 -- Expanded TEMPLATE_STRING_IF_INVALID in blocktrans,"Thanks keturn for the report and Chris Medrela for details.
Refs #19915.
",claudep,None,2013-11-24T20:41:24Z,2014-06-13T11:59:00Z
1987,Added models.UnicodeSlugField and forms.UnicodeSlugField. Close #16501,"This is an alternative to #1979.
See [#16501](https://code.djangoproject.com/ticket/16501) for discussion
",fcurella,None,2013-11-24T17:14:34Z,2014-11-18T06:56:41Z
1986,Fixed #18349 -- Added ipv6 support to django.contrib.gis.geoip.,"Thanks to j and fcurella for original patches.
",MRigal,None,2013-11-24T15:27:57Z,2014-10-08T21:56:24Z
1985,Fixed #21499 -- Migrations won't work if field signature changes,"Added a paragraph to the docs.

Ticket: https://code.djangoproject.com/ticket/21499
",jasjukaitis,None,2013-11-24T14:29:24Z,2014-06-24T04:41:27Z
1984,Fixed #17713 -- Renamed allows_primary_key_0 to allows_auto_pk_0.,"MySQL does allow primary key with value 0. It only forbids autoincrement
primary key with value 0.
",vajrasky,None,2013-11-24T13:20:32Z,2014-06-13T08:21:27Z
1983,Fixed #21477 -- Renamed pre/post_migrate argument 'db' to 'using'.,"This commit also reintroduces pre/post_syncdb as their own signals
(rather than being aliases to pre/post_migrate) to offer a proper
deprecation cycle with warnings.
",syphar,None,2013-11-24T12:11:32Z,2014-06-24T03:37:13Z
1982,Fixed #21505 -- Added unit test for django.utils.text.get_valid_filename...,"....
",vajrasky,None,2013-11-24T08:11:05Z,2014-07-19T16:13:10Z
1981,Removed confusing comment from the docs.,"The settings reference documentation doesn't seem the right place to
invite users to write their own database backends.

Also the actual wording makes the task sound trivial, which is hardly
the case; writing a custom database backend is a very difficult task.
",loic,None,2013-11-24T04:40:08Z,2014-07-19T16:13:13Z
1980,Add missing commas in Prefetch docs,,krallin,None,2013-11-23T22:50:21Z,2014-07-19T16:13:17Z
1979,#16501. Add a ``unicode`` argument to models.SlugField and forms.SlugField.,"Fix for [#16501](https://code.djangoproject.com/ticket/16501)
See also #1987 for an alternative solution
",fcurella,None,2013-11-23T22:11:05Z,2014-12-16T20:14:24Z
1978,Fixed #21448 -- Fixed test client logout with cookie-based sessions,"Thanks Gunnar Scherf for the report and the suggested patch.
",claudep,None,2013-11-23T19:56:32Z,2014-06-13T11:58:42Z
1977,fixes #21412 -- messages framework add_message should check request arg,"problem were users calling messages.debug/info/\* with a wrong argument
and getting the error ""You cannot add messages without installing
MessageMiddleware""

https://code.djangoproject.com/ticket/21412
",syphar,None,2013-11-23T14:38:58Z,2014-07-19T16:13:21Z
1976,Removed information about releases < 1.6.,,haikoschol,None,2013-11-23T14:01:59Z,2014-06-12T06:59:29Z
1975,Removed information about releases < 1.5.,,haikoschol,None,2013-11-23T14:01:21Z,2014-06-16T06:47:22Z
1974,Removed information about releases < 1.4.,,haikoschol,None,2013-11-23T14:00:52Z,2014-06-18T18:39:47Z
1973,Removed information about releases < 1.7.,,haikoschol,None,2013-11-23T13:31:03Z,2014-07-19T16:13:28Z
1972,"Fixed #21012 -- Thread-local caches, like databases.","This continues the work from PR #1782.
",aaugustin,None,2013-11-23T10:18:42Z,2014-06-24T09:42:32Z
1971,Fixed #21496 -- Fixed crash when GeometryField used TextInput,"Thanks Rhett Garber for the report and initial patch.
",claudep,None,2013-11-23T09:54:58Z,2014-06-25T08:22:28Z
1970,Fixed #19149 -- Fixed cascading deletion behavior of subclass with gener...,"...al relation set on parent.
",vajrasky,None,2013-11-23T07:37:58Z,2014-06-14T14:02:20Z
1969,Fix #21488 -- Remove new feature option.,"See https://code.djangoproject.com/ticket/21488
",ramiro,None,2013-11-23T04:35:39Z,2018-08-09T18:48:03Z
1968,Fix #21488 -- Fix the new feature option.,"See https://code.djangoproject.com/ticket/21488
",ramiro,None,2013-11-23T04:33:29Z,2018-08-09T18:48:00Z
1967,Fixed #21497 -- Forced conversion to bytes for very long index names,,jbohman,None,2013-11-22T22:36:59Z,2014-07-19T16:13:38Z
1966,Don't crash if GeometryField widget doesn't know srid,"Also, it seems inappropriate for srid transformation to be done within the `clean` function, rather than `to_python`.

The `_has_changed` wont' see the transformation, for example.
",rhettg,None,2013-11-22T21:13:30Z,2014-06-24T08:57:13Z
1965,Fixed #21491 -- Removed documented workaround for a known issue.,"The issue was that two M2M hidden reverse managers
(related_name ending with a '+') could clash with each other.

Refs #21375 and #15932. Thanks Baptiste.
",loic,None,2013-11-22T18:30:04Z,2014-06-24T08:04:38Z
1964,Fixed #21445 -- Clean up misuse of null in quickElement.,"Thanks to trac user parsch for the report.
",bmispelon,None,2013-11-22T12:26:41Z,2014-06-25T04:04:40Z
1963,Issue #15619 - Protect logout against CSRF,#NAME?,ziima,None,2013-11-22T12:25:13Z,2014-06-17T18:54:15Z
1962,Improved docs for ModelFormSet.clean().,,loic,None,2013-11-22T12:03:17Z,2014-07-19T16:13:49Z
1961,Fixed #21489 -- Make formsets directly importable from django.forms.,,loic,None,2013-11-22T10:16:41Z,2014-07-14T20:02:24Z
1960,Issue #20522,"Squashed commits from bug fix; added requested docs
",kamni,None,2013-11-22T02:01:57Z,2014-06-17T10:55:43Z
1959,Notes that localmem is the default cache.,"I read the whole page trying to figure out the default settings, and assuming it'd be explained...it never was, so I figured I should add it.
",mlissner,None,2013-11-22T01:54:34Z,2014-07-19T16:13:55Z
1958,feat(csrf): Adds a setting for the CSRF header name.,"This is useful for integrating with AngularJS.

AngularJS uses a default cookie and header name to magically _just_ work. It would be nice to set the CSRF cookie and header name in my Django app and not have to worry about setting the CSRF values in my AngularJS code.

Details on the values here:
http://docs.angularjs.org/api/ng.$http  § _Cross Site Request Forgery (XSRF) Protection_
",wesalvaro,None,2013-11-22T00:03:05Z,2014-06-13T04:16:07Z
1957,Fixing Sentence Structure,,Siecje,None,2013-11-21T23:47:34Z,2014-07-19T16:13:58Z
1956,Fixed #21482 -- Uplifted restriction of collectstatic using symlink (-l)...,"... option in Windows platform.
",vajrasky,None,2013-11-21T15:50:49Z,2014-06-24T20:28:49Z
1955,Fixed #21427 -- Clearly state integer field value ranges in docs,"Added an explicit mention of the exact value ranges for integer type
fields that are safe in all databases supported by Django. Also, put
all value numbers inside double ticks.
",alimony,None,2013-11-21T09:40:32Z,2014-06-23T15:41:18Z
1954,Refs #8261 -- Fixed regression introduced by fd219fa.,"ModelAdmin displayed the ""View on site"" link even if the Model didn't
define the `get_absolute_url()` method.
",loic,None,2013-11-21T09:27:27Z,2014-07-19T16:14:04Z
1953,Updated admindocs to use class-based views,,claudep,None,2013-11-21T08:10:04Z,2014-07-19T16:14:06Z
1952,Favor 'migrate' over 'syncdb' in the docs.,,loic,None,2013-11-21T08:07:43Z,2014-06-23T23:09:04Z
1951,[21483] Adds WSGI environ to kwargs sent to request_started signal.,"As written, the request_started signal cannot take into account any of the specifics of the aforementioned request in a connected handler. This patch adds the WSGI environ to the emitted signal to allow connected handlers to act related to the request's context.
",j00bar,None,2013-11-21T01:04:00Z,2014-08-29T14:15:05Z
1950,Fixed #21476 -- Cache tests make an incorrect use of `HttpRequest`,"Query string must be set in `HttpRequest.META['QUERY_STRING']` instead of
`HttpRequest.path`.
",umazalakain,None,2013-11-20T23:56:42Z,2014-07-18T11:39:59Z
1949,Explicitly document the value range of all integer fields.,"This will add an explicit mention of the exact value ranges for integer
type fields that are safe in all databases supported by Django. Also,
put all value numbers inside double ticks.
",alimony,None,2013-11-20T22:00:21Z,2014-07-19T16:14:16Z
1948,Fixed #21443 -- Cannot show debug info on PY3's importlib,"See [ticket 21443](https://code.djangoproject.com/ticket/21443).
",Bouke,None,2013-11-20T17:51:11Z,2014-06-15T07:16:01Z
1947,Fixed #21458 -- Made check_for_language more resistant to malformed input,"Thanks to Sergey Sorokin for the report.
",bmispelon,None,2013-11-20T16:23:00Z,2014-06-22T09:32:37Z
1946,Fixed #21469 -- Allow set objects in Meta.unique_together.,,bmispelon,None,2013-11-20T09:31:24Z,2014-07-19T16:14:24Z
1945,Fixed #11722 - Corrected SQL generation for iexact queries with F objects,,mumino,None,2013-11-20T08:56:36Z,2014-06-14T16:44:21Z
1944,Use @classmethod consistently,"use classmethod as decorator
",sokrato,None,2013-11-20T02:54:34Z,2014-07-19T16:14:28Z
1943,fixed typo in builtins.txt,"Hello, I noticed typo in your documentation. I just fixed it . Here you go!
",jantokhine,None,2013-11-19T17:56:53Z,2014-06-27T13:31:19Z
1942,Fixed #12571 -- attach originating WSGIRequest to test client responses,"Originating WSGIRequests are now attached to the `wsgi_request` attribute of
the `HttpResponse`.
",umazalakain,None,2013-11-19T17:37:56Z,2014-06-13T16:16:04Z
1941,"change to make date and datetime inputs render as HTML5 type=""date"" and type=""datetime"" respectively.","Since unsupported input types fallback to text anyway, this should be a relatively passive change.  The trac ticket is logged here:

https://code.djangoproject.com/ticket/21470
",troygrosfield,None,2013-11-19T14:59:16Z,2014-06-13T09:47:48Z
1940,Added more examples to the get_object_or_404 documentation.,,bmispelon,None,2013-11-19T14:25:50Z,2014-07-19T16:14:35Z
1939,Fixed #17005 -- Added site middleware,,chrismedrela,None,2013-11-18T20:18:43Z,2014-06-13T03:13:58Z
1938,Fixed #13559 -- Added context processor for site,"The patch was written originally by Joshua Ginsberg. It was updated by hop and me.
",chrismedrela,None,2013-11-18T19:54:32Z,2014-08-01T18:58:41Z
1937,Fixed some Signal.disconnect calls from 058e434.,"This would go unnoticed by the test suite because receivers are removed
automatically when they are garbage collected.

Changed all Signal.connect calls to hold strong references to ensure we
clean up after ourselves.
",loic,None,2013-11-18T19:05:20Z,2014-07-19T16:14:38Z
1936,Fix ticket 21460,"Now if you use cache template loader this will return the same template that if you does not use it.

Ticket in [django project](https://code.djangoproject.com/ticket/21460)
",goinnn,None,2013-11-18T18:00:35Z,2014-06-23T16:17:04Z
1935,Merged the signals and signals_regress test packages.,"This patch also made the tests less likely to pollute the global state
in case of failure.
",loic,None,2013-11-18T17:23:55Z,2014-06-21T11:50:34Z
1934,Fixed #15619 – Added CSRF protection in logout view.,"Logout is now performed only for POST requests.
GET requests return confirmation page.

Based on patches from ashchristopher and vzima.

https://code.djangoproject.com/ticket/15619
",KrzysiekJ,None,2013-11-18T16:33:21Z,2014-12-24T18:10:11Z
1933,Fixed #21457 -- Allowed fixture file name to contain dots,"Thanks Keryn Knight for the report.
",claudep,None,2013-11-18T13:07:12Z,2014-06-24T05:17:56Z
1932,Fixed #21461 -- Added pre_update and post_update signals.,,loic,None,2013-11-18T08:12:42Z,2014-06-15T00:52:35Z
1931,Fixes #21455 - Optimise admin images,"I went over the PNG images with a combination of optipng and advancecomp, and the GIFs with gifsicle.

 django/contrib/admin/static/admin/img/changelist-bg.gif       | Bin 58 -> 50 bytes
 django/contrib/admin/static/admin/img/default-bg-reverse.gif  | Bin 843 -> 835 bytes
 django/contrib/admin/static/admin/img/default-bg.gif          | Bin 844 -> 836 bytes
 django/contrib/admin/static/admin/img/icon_searchbox.png      | Bin 667 -> 368 bytes
 django/contrib/admin/static/admin/img/inline-delete-8bit.png  | Bin 477 -> 395 bytes
 django/contrib/admin/static/admin/img/inline-delete.png       | Bin 781 -> 707 bytes
 django/contrib/admin/static/admin/img/inline-restore-8bit.png | Bin 447 -> 363 bytes
 django/contrib/admin/static/admin/img/inline-restore.png      | Bin 623 -> 557 bytes
 django/contrib/admin/static/admin/img/inline-splitter-bg.gif  | Bin 102 -> 94 bytes
 django/contrib/admin/static/admin/img/nav-bg-reverse.gif      | Bin 186 -> 178 bytes
 django/contrib/admin/static/admin/img/nav-bg.gif              | Bin 273 -> 265 bytes
 django/contrib/admin/static/admin/img/tooltag-add.png         | Bin 967 -> 119 bytes
 django/contrib/admin/static/admin/img/tooltag-arrowright.png  | Bin 1063 -> 200 bytes
",funkybob,None,2013-11-18T02:45:16Z,2014-06-13T03:06:46Z
1930,Fixed E125 pep8 warnings,"You can reproduce this patch by typing:

```
autopep8 -i --select=E125 `find . -name ""*.py""`
```

You need the master version of `autopep8` -- there is a new patch for reindentation.
",chrismedrela,None,2013-11-17T18:24:39Z,2014-07-19T16:14:46Z
1929,Fixed #21413 -- resolve_columns fields misalignment,,akaariai,None,2013-11-17T13:51:43Z,2014-06-22T01:30:28Z
1928,Fixed #10190 -- make charset in HttpResponse customizable,"`HttpResponse`s charset is now depending on its `Content-Type` header key.
If no charset is found there, it falls back to the `DEFAULT_CHARSET` setting.
",umazalakain,None,2013-11-16T18:00:16Z,2014-08-19T21:36:40Z
1927,Fixed #19879 -- Have 'findstatic' says on which directories it searched ...,"...the relative paths.

Added get_searched_locations in finders module. Added verbosity flag level 2 on 'findstatic'
command that will output the directories on which it searched the relative paths.

Reported by ccurvey. Initial patch by Jonas Svensson.
",vajrasky,None,2013-11-16T15:04:59Z,2014-06-24T07:00:16Z
1926,Fixed the base class note in the Date Views docs,"The note near [this](https://docs.djangoproject.com/en/dev/ref/class-based-views/generic-date-based/#django.views.generic.dates.BaseArchiveIndexView) made it seem like all of the Archive Views inherited from SingleObjectTemplateResponseMixin when most of them really inherit from MultipleObjectTemplateResponseMixin.
",rockymeza,None,2013-11-16T04:10:48Z,2014-07-19T16:14:51Z
1925,doc: recommend setuptools (merged with distribute),"Since `distribute` and `setuptools` have been merged, [setuptools is the recommended packaging tool](http://pythonhosted.org/distribute/) and [some of the links](http://pythonhosted.org/distribute/setuptools.html) in this tutorial currently return 404s, I edited the tutorial to recommend `setuptools` and link to its documentation.
",metakermit,None,2013-11-15T19:17:57Z,2014-07-19T16:14:56Z
1924,Ticket 21447,"Refs ticket 21447: https://code.djangoproject.com/ticket/21447
",tomchristie,None,2013-11-15T18:39:44Z,2014-06-24T06:14:11Z
1923,Fixed #21446 – Allowed not performing redirect in set_language view.,"https://code.djangoproject.com/ticket/21446
",KrzysiekJ,None,2013-11-15T16:03:40Z,2016-03-28T17:39:50Z
1922,added missing argument for selector_div,"I added the missing third argument within `quickElement('div', from_box.parentNode, '')` which is constructing `selector_div`
",parsch,None,2013-11-15T12:54:00Z,2014-06-12T06:59:11Z
1921,Fixed typo and slightly improved error message when db is missing time zone definitions.,"Refs #21432.
",loic,None,2013-11-15T03:56:20Z,2014-07-19T16:15:47Z
1920,Propagate get_user_model exception from get_user,"See: https://code.djangoproject.com/ticket/21439
",mattrobenolt,None,2013-11-14T19:57:07Z,2014-07-01T09:02:36Z
1919,Fixed #21432 -- DateTimeQuery now copies tzinfo when cloning.,"Thanks Enrique Martínez for the report and @bmispelon for the tests.
",loic,None,2013-11-14T04:55:29Z,2014-06-21T08:25:55Z
1918,Speed up BCrypt and PBKDF2 password hashing.,"Iteration-based password hashing algorithms can be prohibitively expensive for high volume sites that rely on Basic HTTP Auth.

This change adds caching versions of the BCrypt and PBKDF2 hashers.

The motivation for this came from us trying to upgrade Bitbucket to BCrypt and DOSing ourselves in the process.
",erikvanzijst,None,2013-11-13T23:46:34Z,2014-07-19T16:15:48Z
1917,context_data instead of context in shell,"For some reason, `context` was an empty property in my shell, whereas the `context_data` property contained the dictionary. Running Django 1.6 and IPython.
",metakermit,None,2013-11-13T23:43:14Z,2014-07-19T16:15:50Z
1916,Fixed #21175 -- Abstract base model class fires class_prepared signal,"Created test for class_prepared signal and reconditioned abstract
base model class to send class_prepared signal.
",famousfilm,None,2013-11-13T22:48:13Z,2014-06-14T15:06:31Z
1915,"Improved ""Translators:"" comment for \\u00a0","Please review this proposal for reworded translators' comments.

This is about ticket https://code.djangoproject.com/ticket/21415.
",glts,None,2013-11-13T19:29:11Z,2014-06-23T05:01:41Z
1914,Fixed #21428 -- editable GenericRelation regression,"The GenericRelation refactoring removed GenericRelations from
model._meta.many_to_many. This had the side effect of disallowing
editable GenericRelations in ModelForms. Editable GenericRelations
aren't officially supported, but if we don't fix this we don't offer any
upgrade path for those who used the ability to set editable=True
in GenericRelation subclass.

Thanks to Trac alias joshcartme for the report and stephencmd and Loic
for working on this issue.
",akaariai,None,2013-11-13T06:38:07Z,2014-06-21T23:39:43Z
1913,Fix 1.6 regression when GenericRelation+ForeignKey path used as admin list_filter,"As mentioned in trac #21428

Previously in 1.5 it was possible to have a model A with a GenericRelation field to a model B that had a ForeignKey to model C, and use the B__C path in A's admin list_filter.

In 1.6 this fails in django.contrib.admin.util.get_model_from_relation where the model on the wrong side of the relationship is returned, when the correct model is available via the parent_model attribute.
",stephenmcd,None,2013-11-12T22:49:25Z,2014-06-12T06:59:41Z
1912,Fixed #21389 -- Accept most valid language codes,"See also [ticket 21389](https://code.djangoproject.com/ticket/21389).

By removing the `supported` keyword from the detection methods and only relying
on a cached `settings.LANGUAGES`, the speed of said methods has been improved;
around 4x raw performance. This allows us to stop checking Python's incomplete
list of locales, and rely on a less restrictive regular expression for
accepting certain locales.

HTTP `Accept-Language` is defined as being case-insensitive, based on this fact
extra performance improvements have been made; it wouldn't make sense to
check for case differences.

---

There is a backwards incompatibility involved with the current code.
1. Both `get_language_from_path` and `get_supported_language_variant` have a `supported` argument, to override which languages those methods should inspect. However nowhere the list is overridden and the default (`settings.LANGUAGES`) is being used. As `lru_cache` doesn't support caching with dictionary arguments, the two don't work together.
2. `parse_accept_lang_header` now returns lowercase locales, instead of the case provided. This is because the `Accept-Language` header is case insensitive and not checking for case speeds up locale detection.

Note that backwards compatibility can be added if needed, but I'd rather have some input on the proposed changes and on the need of backwards compatibility in this case.

---

Using a new benchmark ([see PR for djangobench](https://github.com/django/djangobench/pull/15)) there is also a nice performance gain with these changes:

```
$ djangobench locale_from_request --control=upstream/master --experiment=tickets/21389 -t 500
Running benchmarks: locale_from_request
Control: Django 1.7.dev20131112174535 (in git branch upstream/master)
Experiment: Django 1.7.dev20131112193851 (in git branch tickets/21389)

# PY2:

Running 'locale_from_request' benchmark ...
Min: 0.003650 -> 0.000661: 5.5231x faster
Avg: 0.003864 -> 0.000687: 5.6250x faster
Significant (t=155.648026)
Stddev: 0.00045 -> 0.00009: 5.0473x smaller (N = 500)

# PY3:

Running 'locale_from_request' benchmark ...
Min: 0.001395 -> 0.000207: 6.7333x faster
Avg: 0.001502 -> 0.000216: 6.9602x faster
Significant (t=188.427532)
Stddev: 0.00015 -> 0.00004: 4.2022x smaller (N = 500)
```
",Bouke,None,2013-11-12T19:59:38Z,2014-06-27T04:39:35Z
1911,Fixed typo in lru_cache.py; refs #21351.,,vajrasky,None,2013-11-12T16:08:44Z,2014-07-19T16:15:56Z
1910,Backport psycopg2 autocommit fix,"I don't know enough to backport the tests over, so I just have to omit them.
",zhangcheng,None,2013-11-12T08:09:23Z,2014-07-18T13:10:12Z
1909,clarified Dev branch,"Clarified that the Dev branch is labelled as Alpha, not just the Django adapter.
",highpost,None,2013-11-11T16:08:51Z,2014-07-19T16:15:58Z
1908,Fixed #21423 comment typo.,"Fixed `propogate` to `propagate`.
",iknite,None,2013-11-11T13:22:10Z,2014-07-19T16:15:59Z
1907,Fixed #21388 -- Corrected language code for Frisian,"See [ticket 21388](https://code.djangoproject.com/ticket/21388).
",Bouke,None,2013-11-11T08:05:57Z,2014-06-25T05:33:52Z
1906,added description of MySQL Connector/Python,"Reorganized the MySQLdb section into a ""MySQL DB API Drivers"" section that describes both MySQLdb and MySQL Connector/Python. Included description of the Django adaptors for these DB API drivers.
",highpost,None,2013-11-11T07:49:51Z,2014-07-19T16:16:00Z
1905,"Copied all Chinese translations, refs #18419","Only the core locales of zh_CN/zh_TW have been copied in #1868, but the other Chinese locales should have been copied as well. This PR fixes that. See also [ticket 18419](https://code.djangoproject.com/ticket/18419).
",Bouke,None,2013-11-11T07:45:34Z,2014-06-15T01:15:49Z
1904,BASE_DIR gets project's absolute path,"Don't you mean something like this here? With the current BASE_DIR variable set to `os.path.dirname(os.path.dirname(__file__))`, I was getting an error while trying to include a default template located in _project_folder/templates_.

```
TemplateDoesNotExist at /
```

I noticed this when I upgraded to 1.6, so it should probably be merged there too.
",metakermit,None,2013-11-11T01:01:46Z,2014-06-30T07:46:05Z
1903,Tests for #14461,"See [#14461](https://code.djangoproject.com/ticket/14461).
",ramiro,None,2013-11-10T02:54:04Z,2018-08-09T18:47:42Z
1902,Fixed #21378 -- Fixed typo in tutorial02.,,vajrasky,None,2013-11-09T13:31:32Z,2014-07-19T16:16:04Z
1901,Fixed #21398 -- Fixed BCryptSHA256PasswordHasher with py-bcrypt and Python 3.,"Thanks arjan at anymore.nl for the report.
",timgraham,None,2013-11-09T11:39:13Z,2014-07-19T16:16:05Z
1900,Fixed #21372 -- Corrected docs regarding translating LANGUAGES,"Corrected LANGUAGES documentation on how to translate language
names. Now using django.utils.translation.ugettext_lazy instead
of a dummy gettext() function.
",bernardopires,None,2013-11-09T10:40:26Z,2014-07-19T16:16:06Z
1899,Fixed 21378 -- Fixed outdated doc tutorial02 of how to override admin si...,"...te header.
",vajrasky,None,2013-11-09T10:29:46Z,2014-06-18T20:00:53Z
1898,Fixed #21410 -- Fixed prefetch_related() for FK relations with related_name='+'.,"Regression introduced by commit 9777442.

Thanks to trac username troygrosfield for the report and test case.
",loic,None,2013-11-09T10:24:12Z,2014-07-08T02:21:21Z
1897,Fixed #14800 -- Suppressed WSGIRequestHandler message filtering,"Filtering out static file requests in runserver has been judged
arbitrary and can hide some debugging-related activity.
Thanks Roy Smith for the report.
",claudep,None,2013-11-09T09:19:51Z,2014-06-13T11:58:32Z
1896,Fixed #21361 -- Made admin.SimpleListFilter be able to access self.value(...,"...) inside the lookups.
",vajrasky,None,2013-11-09T04:22:57Z,2014-07-19T16:16:10Z
1895,Added missing parameter in npgettext_lazy docs,"This fixes a trivial copy-and-paste error.
",glts,None,2013-11-08T22:26:51Z,2014-07-19T16:16:11Z
1894,Fixed 21406 -- blocktrans trimmed should preserve line numbers,"See [ticket 21406](https://code.djangoproject.com/ticket/21406).
",Bouke,None,2013-11-08T14:47:11Z,2014-06-24T21:56:10Z
1893,Fixed docs for EmailMessage extra_headers attribute,"The EmailMessage documentation describes the initialization parameters
and states they 'can be set at any time prior to calling the send()
method.'.
However, the 'headers' parameter has a corresponding attribute named
differently as 'extra_headers' - this documents that.

The EmailMessage class could be altered to correct this, but as my first Django patch I'm leaning towards a simple doc fix.
",dustyneuron,None,2013-11-08T02:43:01Z,2014-07-19T16:16:14Z
1892,Recommended flake8 to check coding style.,,timgraham,None,2013-11-08T01:13:23Z,2014-07-19T16:16:15Z
1891,Expose level_tag property on messages.,"Exposing the level name (e.g. ""info"") makes it possible to prepend
something to the class name. For example, Twitter Bootstrap has
an alert-info class. This class can now be added to the message
using `class=""alert-{{ message.level_tag }}""`.
Because the level_tag was on the end of the `tags` property, it
could not be used in this fashion when extra_tags were given.
",Sjord,None,2013-11-07T15:56:02Z,2014-06-24T10:33:29Z
1890,Fixed #15053 -- avoid recursion when extending templates,"The `extends` template tag now avoids recursion, making it possible for
templates to inherit from third party app templates with the same name.

Based on the work of Pablo Martín (thanks!)
",umazalakain,None,2013-11-07T12:41:12Z,2014-07-16T13:36:57Z
1889,Fixed #21396: Document backwards-incompatible change in RedirectView.get...,"..._redirect_url.
",bmispelon,None,2013-11-07T11:31:38Z,2014-07-19T16:16:17Z
1888,Fixed #21371 - Added block.super to bodyclass blocks in relevant admin templates.,,wwwesleyyy,None,2013-11-07T05:43:11Z,2014-07-19T16:16:18Z
1887,Release notes for ORM changes in 1.6,,akaariai,None,2013-11-06T20:13:29Z,2014-07-19T16:16:19Z
1886,"Remove ""UNDER DEVELOPMENT"" header from 1.6 release notes","I also added a few steps to the release checklist (separate commit).
",bmispelon,None,2013-11-06T19:39:49Z,2014-07-19T16:16:19Z
1885,Fixed #21381 -- Removed dependency of redirects on sites.,,aaugustin,None,2013-11-05T21:47:31Z,2014-06-22T21:40:13Z
1884,Fixed #21391 -- Allow model signals to lazily reference their senders.,"PR for [#21391](https://code.djangoproject.com/ticket/21391).
",charettes,None,2013-11-05T18:49:34Z,2014-06-23T03:49:07Z
1883,Join promotion retry,"A try for complete rewrite of join promotion logic for .filter() clauses.

See ticket #21376 for details.
",akaariai,None,2013-11-05T17:30:14Z,2014-06-24T02:14:54Z
1882,Ticket 21353,"Fix and test for ticket 21353: 'description' key in InlineModelAdmin fieldsets is ignored

https://code.djangoproject.com/ticket/21353
",nofeet,None,2013-11-05T17:30:11Z,2014-06-25T22:25:03Z
1881,Fixed warning due to unicode characters in cookies,"Simple request:
curl 'http://127.0.0.1:8000/' -H $'Cookie: ТЕСТ'
Causes ""Unicode equal comparison failed"" in server's console
",rodzevich,None,2013-11-05T15:59:11Z,2014-07-19T16:16:21Z
1880,Fixed warning due to unicode characters in cookies,"Simple request:
curl 'http://127.0.0.1:8000/' -H $'Cookie: ТЕСТ'
Causes ""Unicode equal comparison failed"" in server's console
",rodzevich,None,2013-11-05T15:42:40Z,2014-07-19T16:16:22Z
1879,Fixed #2259 -- Made primary keys readonly by default in admin,"Refs [ticket 2259](https://code.djangoproject.com/ticket/2259).
",Bouke,None,2013-11-05T14:45:45Z,2014-07-18T11:39:50Z
1878,Fixed #9523 -- Restart runserver after compiling apps translations,"Django also uses locales provided by apps, which also might change. Also when i18n is disabled, there is no need for watching translation files.

This complements commit 8b3d9d96ed8304d749c9056c42be89084d9b34aa and [refs #9523](https://code.djangoproject.com/ticket/9523).
",Bouke,None,2013-11-05T13:40:13Z,2014-06-27T04:39:27Z
1877,Fixed missing admindocs' site_header,"The same problem as in [ticket 21293](https://code.djangoproject.com/ticket/21293), making the site's header disappear and user tools (logout) unfindable.
",Bouke,None,2013-11-05T12:16:35Z,2014-06-15T07:04:00Z
1876,Removed no longer relevant word,"The word ""above"" is no longer relevant, since the ""How to log a user in"" section is now on a different page, since the refactoring (https://github.com/django/django/commit/11ded967c443087487f3872aafd86842608b4c64).
",sbellem,None,2013-11-05T11:28:18Z,2014-07-19T16:16:27Z
1875,Pep8 cleanup,"This is an extension to pep8 cleanups made by Tim Graham. I've used autopep8 to do this massive cleanup. It's mostly about adding/removing blank lines as well as indentation and whitespaces.

See the thread on django-developers: https://groups.google.com/forum/#!topic/django-developers/HqtYI7UHz3w
",chrismedrela,None,2013-11-05T10:36:51Z,2014-07-08T02:21:15Z
1874,Improved documentation about zh-* deprecation and upgrade path,"> <+bmispelon>   bouke: in my mind, the purpose of the release notes is twofold: 1) allow you to tell if you're affected by a change in django 2) help you go through an upgrade
>  <+bmispelon>  the current release note is good for 1), but I think we can do better for 2)
",Bouke,None,2013-11-05T10:22:57Z,2014-06-17T09:41:48Z
1873,Fixed #21380 -- Added a way to set different permission for static direc...,"...tories.

Previously, when collecting static files, the directories would receive permission
from global umask. Now, the default permission comes from FILE_UPLOAD_DIRECTORY_PERMISSIONS
and there's an option to give different permission from uploaded directories permission by
subclassing any of the static files storage classes and setting the
directory_permissions_mode parameter.
",vajrasky,None,2013-11-05T10:12:00Z,2014-06-17T10:35:25Z
1872,Fixed #18419 -- Full backwards compatibility for old language codes,"Refs https://code.djangoproject.com/ticket/18419#comment:15
",Bouke,None,2013-11-05T09:56:36Z,2014-07-08T10:59:41Z
1871,Fixed #21386 -- admindocs depend on sites framework,"See also [ticket 21386](https://code.djangoproject.com/ticket/21386)
",Bouke,None,2013-11-05T09:24:49Z,2014-06-16T14:29:39Z
1870,Updated the set of watched files after each request.,"Otherwise the kqueue-based autoreloader may not see changes to files
that weren't imported when the server started.
",aaugustin,None,2013-11-04T20:57:34Z,2014-07-19T16:16:30Z
1869,annotate() and values()- based solution example added,"annotate() and values()-based solution to distinct() and order_by() problem.
",AvaniLodaya,None,2013-11-04T19:37:41Z,2014-08-29T11:45:00Z
1868,Fixed #18149 -- Changed language codes for Chinese,"See [ticket 18419](https://code.djangoproject.com/ticket/18419) for rationale.

Language codes for Chinese are zh_Hans (Simplified) and zh_Hant (Traditional). Added support for browsers that still send the deprecated language codes.

Thanks to Olli Wang for the report.
",Bouke,None,2013-11-04T17:36:14Z,2014-06-30T01:23:47Z
1867,Fixed #17529 -- get_template_from_string default arguments break,"`get_template_from_string` default arguments were breaking
`assertTemplateUsed`. The solution has been to return only the names of the
templates with a `name` attribute distinct of `None`. The default `name`
kwarg of `Template` has been changed to `None`, more pythonic than `'<Unknown
Template>'`.
",umazalakain,None,2013-11-04T15:54:53Z,2014-06-24T16:23:47Z
1866,Fixed #18314 -- request.build_absolute_uri() not handling paths starting with //,"`HttpRequest.build_absolute_uri()` now correctly handles paths starting with `//`.
`WSGIRequest` now doesn't remove all the leading slashes either,
because `http://test/server` and http://test//server`` aren't the same thing
(RFC2396).
",umazalakain,None,2013-11-03T23:41:10Z,2014-06-12T19:12:31Z
1865,"Fixed #21382 - Fixed inconsistency for class ""has_original"" in stacked inlines compared...","... to tabular inlines
",jrief,None,2013-11-03T22:30:15Z,2014-07-19T16:16:32Z
1864,update,,bkvirendra,None,2013-11-03T17:27:03Z,2014-07-19T16:16:32Z
1863,Noting that .clear() will delete intermediary models in the documentation,,Siecje,None,2013-11-03T16:58:02Z,2014-07-19T16:16:34Z
1862,Cleaning up E125 PEP8 Errors,"Signed-off-by: Jason Myers jason@jasonamyers.com
",jasonamyers,None,2013-11-03T13:47:48Z,2014-07-19T16:16:50Z
1861,Fixed flake8 E251 violations,"Fixed all the remaining E251 violations according to flake8 tool
",milmazz,None,2013-11-03T09:31:09Z,2014-07-19T16:16:51Z
1860,Fixed flake8 E302 violations,"Fixed all flake8 E203 errors
",milmazz,None,2013-11-03T09:34:34Z,2014-07-19T16:16:50Z
1859,Fixed #21322 -- Error message when CSRF cookie is missing,"See [ticket 21322](https://code.djangoproject.com/ticket/21322) for rationale.

Thanks to Henrik Levkowetz and olau for their reports and initial patches.
",Bouke,None,2013-11-03T09:22:45Z,2014-07-19T16:16:52Z
1858,Fixed all E226 with some other obvious PEP8 violations here and there,#NAME?,brabadu,None,2013-11-03T09:06:39Z,2014-07-19T16:16:53Z
1857,Fixed flake8 E221 violations,,milmazz,None,2013-11-03T07:12:27Z,2014-07-19T16:16:53Z
1856,Fixed flake8 E203 violations,,milmazz,None,2013-11-03T06:37:33Z,2014-07-19T16:16:53Z
1855,Fixed #21378 -- Used subclassing admin site way in tutorial02 when chang...,"...ing admin site header.
",vajrasky,None,2013-11-03T05:54:29Z,2014-06-16T21:41:28Z
1854,Correct flake8 E302 violations,"This corrects around half of the existing flake8 E302 (expected 2 blank lines, found 1) violations.
",ghost,None,2013-11-03T00:02:29Z,2014-07-19T16:16:54Z
1853,Fixed failing test around DST change.,"The timezone arithmetic done in JS can be off by one hour around DST
change. We work around this issue by adding one extra hour to the test
error margin when we detect a DST change is near.

Refs #20663.
",loic,None,2013-11-03T00:00:41Z,2014-07-19T16:16:55Z
1852,Cleanup/pep8 tests,"A batch of PEP8 changes for the tests
",jasonamyers,None,2013-11-02T22:38:04Z,2014-06-14T15:23:37Z
1851,Fixed all E261 warnings,"I've ran autopep8 for E261 warning and manually checked each change afterwards.
",coagulant,None,2013-11-02T21:10:34Z,2014-06-25T21:09:50Z
1850,Fixed #13725 -- take url scheme into account in assertRedirects,"Scheme is handled correctly when making comparisons between two URLs. If
there isn't any scheme specified in the location where we are redirected to,
the original request's scheme is used. If present, the scheme in
`expected_url` is the one used to make the comparations to.
",umazalakain,None,2013-11-02T20:10:41Z,2014-06-30T14:52:43Z
1849,Fixed flake8 E241,"Another pull request trying to fix all E241 flake8 errors in django
",brabadu,None,2013-11-02T19:53:36Z,2014-06-17T02:55:42Z
1848,Correct flake8 violation E261,"This corrects E261 (at least two spaces before inline comment) flake8 violations in django.utils, django.template, and django.forms. I will happily submit a ticket if necessary.
",ghost,None,2013-11-02T19:32:18Z,2014-07-19T16:17:32Z
1847,Django should be capitalized in text,"I found a few instances where Django wasn't `|capfirst` where it should have been. Does this also require a ticket?
",Bouke,None,2013-11-02T19:14:52Z,2014-07-19T16:17:33Z
1846,Some flake8 fixes.,"In regarding to @alex 's tweet[0], here comes some flake8 fixes for the views module.

In my opinion, many of the E501 (the ones with huge lines) errors just don't worth the effort to fix because they're representing some templates, and there are some F401 errors in /views/generic/**init**.py but I don't think there is a major-refactor-free way to do this.

[0] - https://twitter.com/alex_gaynor/status/396690202401308672
",renatooliveira,None,2013-11-02T18:06:58Z,2014-07-19T16:17:34Z
1845,Ref #21132 -- Added admin app_name support for admin widgets.,,vajrasky,None,2013-11-02T14:04:46Z,2014-08-13T19:26:08Z
1844,Fixed #21324 -- Translate CSRF failure view,"See [ticket 21324](https://code.djangoproject.com/ticket/21324), this patch is based upon the patch by Claude Paroz. I've added tests and insert the translation using normal template variables.
",Bouke,None,2013-11-02T08:36:36Z,2014-06-13T17:32:28Z
1843,#21365 - Fix typo in docs/topics/i18n/translation,"Fix spelling (""dependant"" -> ""dependent"") in Performance section of JavaScript i18n docs
",awilfox,None,2013-11-02T00:38:08Z,2014-07-19T16:17:35Z
1842,#21351 -- replaced memoize by lru_cache,"Python 3.2 comes with [`lru_cache`](http://docs.python.org/3.2/library/functools.html?highlight=lru_cache#functools.lru_cache), which does basically the same as `memoize`. Currently `memoize` isn't tested or verified, which is a liability. As was suggested in [ticket 21351](https://code.djangoproject.com/ticket/21351), `lru_cache` could replace `memoize`. However as `lru_cache` is only available from Python 3.2 and up, a backport is required for older versions. The ticket also links to a backport (MIT licensed) of `lru_cache`. I've included this backport for older Python versions.

The following questions arised: (discussion in ticket)
- Can the backport be included, as it is MIT licensed?
- `memoize` is an internal API, should it follow the deprecation policy?
- Is this the correct way to include a backport?
",Bouke,None,2013-11-01T20:20:48Z,2014-06-13T06:43:28Z
1841,Fixed #21354 -- Document contrib.redirect uses 301 redirects,"See [ticket 21354](https://code.djangoproject.com/ticket/21354) for rationale.
",Bouke,None,2013-11-01T18:57:10Z,2014-06-26T05:48:43Z
1840,Fixed #20849 -- ModelForms do not work well with prefetch_related.,"model_to_dict() (used when rendering forms) queries the database
to get the list of primary keys for ManyToMany fields. This is
unnecessary if the field queryset has been prefetched, all the
keys are already in memory and can be obtained with a simple
iteration.

This commit can save many database queries when using a formset of ModelForms containing ManyToMany fields.
",dgym,None,2013-11-01T14:56:53Z,2014-07-19T16:18:18Z
1839,"Fixed typo -- ""a"" user, not ""an"" user",,sbellem,None,2013-11-01T14:09:31Z,2014-07-10T05:49:42Z
1838,Improved resource limits handling in the kqueue autoreloader.,"Refs #21356. Thanks Loïc.
",aaugustin,None,2013-11-01T09:21:20Z,2014-06-15T09:59:26Z
1837,Fixed SyntaxError on Python 2.5 caused by a @unittest.skipIf class decoration.,,loic,None,2013-10-31T20:36:19Z,2014-06-18T18:39:23Z
1836,Fixed ValueError introduced by 47217f2.,"To work around the tipically low (256) limit of open file descriptors we
attempt to raise the soft limit using resource.setrlimit. If said limit is
already equal to the system hard limit setrlimit raise a ValueError which
causes runserver to crash.

This commit catches this ValueError, checks if there is enough room for our
FDs and fallbacks to the polling mechanism when it isn't the case.

Refs #21356.
",loic,None,2013-10-31T20:20:58Z,2014-07-13T19:49:53Z
1835,Fixed #21363 - TimestampSigner.unsign accepts a timedelta,"Patch for https://code.djangoproject.com/ticket/21363
",gavinwahl,None,2013-10-31T18:23:16Z,2014-06-17T15:08:59Z
1834,Fixed #13970 -- Made SelectDateWidget use the standard widget is_required attribute,"The SelectDateWidget  `required` parameter is not even documented...
",claudep,None,2013-10-31T16:34:10Z,2014-06-15T20:37:17Z
1833,Test case for repeated deletion bug in issue #18508,"Updated test case for repeated deletion bug in issue #18508.
",OleLaursen,None,2013-10-31T12:41:12Z,2014-06-20T10:47:50Z
1832,Fix for #21357.,"Initiate the session object if it hasn't been created already.
",prestontimmons,None,2013-10-31T01:12:19Z,2014-07-08T23:17:17Z
1831,Fixed #16245 -- include traceback in ``send_robust()``s response,"Exceptions from the (receiver, exception) tuples returned by
`send_robust()` now have always their traceback attached as their
`__traceback__` argument.
",umazalakain,None,2013-10-31T00:17:31Z,2014-06-27T04:39:21Z
1830,Add instant autoreload on platforms supporting kqueue.,"This patch looks simple and good. However, I'm often seeing two or three reloads in a row when a single file in changed. I'm not sure where that behavior comes from. Thoughts?
",aaugustin,None,2013-10-30T22:09:59Z,2014-06-12T17:36:58Z
1829,Fixed #14877 -- repeated deletion using formsets,"When a formset contained deletion for an existing instance, and the
instance was already deleted, django threw an exception. A common cause for
this was resubmit of the formset.

Original patch by Trac alias olau.

In addition this commit cleaned some code in _construct_form(). This
was needed as a primary key that was also a related field didn't convert
the pk value properly.
",akaariai,None,2013-10-30T20:36:56Z,2014-07-19T16:18:39Z
1828,#5147 -- Multiple plurals for counting objects,"See [ticket 5147](https://code.djangoproject.com/ticket/5147).
",Bouke,None,2013-10-30T08:48:31Z,2014-06-13T14:51:04Z
1827,Ticket #21345,,bmispelon,None,2013-10-29T22:35:19Z,2014-06-26T14:26:32Z
1826,Fixed #17001 -- Custom querysets for prefetch_related.,,loic,None,2013-10-29T21:54:30Z,2014-06-26T05:48:52Z
1825,Documented the limitation on sep argument to Signer,"Co authored with @gavinwahl 
",acatton,None,2013-10-29T18:41:53Z,2014-07-19T16:18:56Z
1824,Fixed #15179 -- test client's login request is not run through middleware,"Requests made with `django.test.Client.login` and
`django.test.Client.logout` respect defaults defined in `django.test.Client`
instantiation and are processed through middleware now.
",umazalakain,None,2013-10-29T17:36:02Z,2014-06-16T07:58:38Z
1823,Add WSGIServerException to the deprecation.txt for 1.6 release,"WSGIServerException has been removed and may deserve a mention in the deprecation documentation.
",un33k,None,2013-10-29T01:51:42Z,2014-07-19T16:19:31Z
1822,Fixed #20610: Added a message level dict to contrib.message context proc...,"...essor.
",bmispelon,None,2013-10-28T20:54:20Z,2014-06-26T05:48:49Z
1821,#14170 -- Reset i18n cache when settings changed,"See [ticket 14170](https://code.djangoproject.com/ticket/14170). The global state `_accepted` is now reset when `LANGUAGES` setting has been changed.

I needed to change `static.py` to work around circular import issues.
",Bouke,None,2013-10-28T16:20:36Z,2014-07-02T20:48:54Z
1820,Fixed #21341 -- clean way of making https requests with testing client,"All the request methods of `django.test.client.Client` receive a `secure`
argument that defaults to `False` indicating wether or not to make the
request through https.
",umazalakain,None,2013-10-28T14:05:23Z,2014-06-20T07:53:53Z
1819,Try importing _imaging from PIL namespace first.,"On an OS X system with a Homebrew version of Python/PIL installed, the `django/utils/image` module encounters a hash collision error when trying to import `_imaging`, as described in https://code.djangoproject.com/ticket/20964. Although that ticket was closed for not being a problem with Django, the referenced ticket in the Homebrew (https://github.com/mxcl/homebrew/issues/22135) only resulted in removing PIL from the core Homebrew libraries without actually fixing the import issue. Everyone agrees that pillow should be used in place of PIL, but because Django isn't officially removing support for PIL until 1.8, I believe that this problem deserves to be fixed in time for 1.6.

In this PR, I import `_imaging` from the `PIL` namespace first, which prevents the hash collision error because the `_imaging` module will imported using the same path as when imported through the earlier `from PIL import Image` statement. This allows PIL to be properly imported in my setup (OS X 10.8, Homebrew Python/PIL) and should still be compatible with environments in which the PIL namespace isn't available.
",richardxia,None,2013-10-28T10:27:27Z,2014-06-18T03:15:02Z
1818,Fix note syntax usage.,"http://sphinx.readthedocs.org/en/latest/markup/para.html?highlight=note#directive-note
",ericholscher,None,2013-10-27T15:07:00Z,2014-07-19T16:20:14Z
1817,[1.6.x] Fixed #21338 -- Allow to use the same class name for proxy model...,,renskiy,None,2013-10-27T13:06:53Z,2014-06-12T06:59:13Z
1816,[1.5.x] Fixed #21338 -- Allow to use the same class name for proxy models,,renskiy,None,2013-10-27T09:57:21Z,2014-06-16T06:47:16Z
1815,[1.4.x] Fixed #21338 -- Allow to use the same class name for proxy models,"Fixed #21338
",renskiy,None,2013-10-27T09:15:53Z,2014-06-18T18:39:19Z
1814,Fixed #21321 -- Made File.__iter__ compatible with python3.,,vajrasky,None,2013-10-27T08:33:46Z,2014-07-19T16:20:22Z
1813,"Fixed #19750 Postgres conflict on CREATE INDEX: ""relation exists""","[#19750](https://code.djangoproject.com/ticket/19750) Improve index name on postgres in order to avoid name conflicts.

---
## Failing test

Django Version: stable/1.5.x

`pip install git+git://github.com/django/django.git@stable/1.5.x#egg=Django`

**`models.py`**

``` python
from django.db import models

class OrganizationType(models.Model):
    id = models.CharField(max_length=1, primary_key=True)

    class Meta:
        db_table = 'organization_type'

class Organization(models.Model):
    type = models.ForeignKey(OrganizationType)
    class Meta:
        db_table = 'organization'
```

**`./manage.py sqlall`**

``` sql
BEGIN;
CREATE TABLE ""organization_type"" (
    ""id"" varchar(1) NOT NULL PRIMARY KEY,
    ""name"" varchar(10) NOT NULL
)
;
CREATE TABLE ""organization"" (
    ""id"" serial NOT NULL PRIMARY KEY,
    ""type_id"" varchar(1) NOT NULL REFERENCES ""organization_type"" (""id"") DEFERRABLE INITIALLY DEFERRED
)
;
CREATE INDEX ""organization_type_id_like"" ON ""organization_type"" (""id"" varchar_pattern_ops);
CREATE INDEX ""organization_type_id"" ON ""organization"" (""type_id"");
CREATE INDEX ""organization_type_id_like"" ON ""organization"" (""type_id"" varchar_pattern_ops);

COMMIT;
```
",pricco,None,2013-10-26T06:21:15Z,2014-06-14T05:54:48Z
1812,Use entry_points from setuptools if available,"This fixes not being able to run django-admin.py on Windows in most cases.

I know you removed the dependency on setuptools a while ago. This doesn't bring it back, it will only be used if available.
",remram44,None,2013-10-25T18:09:48Z,2014-06-12T10:28:36Z
1811,Added unlocalize filter on pk value.,,olevinsky,None,2013-10-25T13:07:23Z,2014-07-11T02:02:08Z
1810,Added unlocalize filter on pk value.,,olevinsky,None,2013-10-25T13:05:30Z,2014-07-04T12:01:39Z
1809,Check res for possible None value.,"_translation can in some situations return None, and code introduced in
https://github.com/django/django/commit/72544950e198c08ac49ba9d878ea7440313b13a7
assumes that there should be a Translations instance.
",jellonek,None,2013-10-25T11:43:42Z,2014-07-19T16:20:44Z
1808,Fixed #21321,"Fixed #21321 and added test case about file iteration.
`TypeError: 'str' does not support the buffer interface`
When iterating raw file wrapped by `File` obj in python3 has been fixed.
Thanks.
",daftshady,None,2013-10-25T09:55:59Z,2014-06-17T15:27:57Z
1807,Fixed #21201 -- Enable customization of ClearableFileInput,"Adding extra methods into ClearableFileInput widget to enable
easier customization of the widget.
",ziima,None,2013-10-25T07:44:44Z,2014-08-29T13:43:58Z
1806,Fixed #21227 -- Added workaround for selenium test failures,"Added a refresh() before quit() in the selenium tests, since this
solves the problem of spurious test failures in some environments.
",marfire,None,2013-10-24T19:05:37Z,2014-06-26T05:48:33Z
1805,Fixed #20338 -- Stripped ending dot during host validation,,claudep,None,2013-10-24T17:36:05Z,2014-06-26T17:22:46Z
1804,"Fixed #8261 -- ModelAdmin hook for customising the ""show on site"" button","`ModelAdmin.view_on_site` defines wether to show a link to the object on the
admin detail page. If `True`, cleverness (i.e. `Model.get_absolute_url`) is
used to get the url. If it's a callable, the callable is called with the object
as the only parameter. If `False`, not link is displayed.

With the aim of maitaining backwards compatibility, `True` is the default.
",umazalakain,None,2013-10-24T15:46:37Z,2014-06-16T11:32:45Z
1803,Fixed #21219 -- Added a way to set different permission for static files.,"Previously, when collecting static files, the files would receive permission
from FILE_UPLOAD_PERMISSIONS. Now, there's an option to give different
permission from uploaded files permission by subclassing any of the static
files storage classes and setting the file_permissions_mode parameter.

Thanks dblack at atlassian.com for the suggestion.
",timgraham,None,2013-10-24T15:00:41Z,2014-06-15T22:46:45Z
1802,Update 1.4.9.txt,"Wrong version changed.
",pauloxnet,None,2013-10-24T09:12:01Z,2014-06-18T18:39:16Z
1801,typo in 1.7 release notes,,collinanderson,None,2013-10-23T14:56:26Z,2014-06-12T07:54:06Z
1800,Fixed #21299 - Changed filters from title to capfirst on admin inline formsets.,"I don't if I have to make tests for this one, waiting for an advice.

https://code.djangoproject.com/ticket/21299
",renatooliveira,None,2013-10-23T14:07:28Z,2014-06-21T04:25:08Z
1799,Fixed #9523 -- Restart runserver after translation MO files change,"This PR is replacing #1283 as it has been rebased. See [ticket 9523](https://code.djangoproject.com/ticket/9523) for more information.
",Bouke,None,2013-10-23T13:49:01Z,2014-06-24T22:58:58Z
1798,Fixed #21298 -- Fixed E301 pep8 warnings,,alasdairnicol,None,2013-10-23T12:53:25Z,2014-07-19T16:20:59Z
1797,Add missing import statements (unicode literals),,davidfischer-ch,None,2013-10-23T08:08:52Z,2014-06-15T16:37:41Z
1796,Fixed #21307 -- Moved TransRealMixin to django.test.utils.,,ramiro,None,2013-10-22T23:39:12Z,2018-08-09T18:47:26Z
1795,Fixed #8116 -- raise an exception if a included template doesn't exist,"`django.template.IncludedTemplateDoesNotExist` exception is raised by the
`include` tag if the included template hasn't been found.
",umazalakain,None,2013-10-22T21:07:23Z,2014-07-19T16:21:00Z
1794,Fix ascii codec can't encoder ... (see http://dpaste.com/hold/1405860/),,davidfischer-ch,None,2013-10-22T19:04:16Z,2014-07-19T16:21:00Z
1793,Fixed #19941 -- Removed sys.path hack when running the test suite.,"Thanks jezdez for the suggestion.
",timgraham,None,2013-10-22T14:55:34Z,2014-06-24T01:21:38Z
1792,Allow custom link text for urlize filter,"My templates usually contain a lot of the following pattern:

```
<a href=""{{ object.url }}"">{{ object.name }}</a>
```

This commit adds an optional `link_text` argument to the urlize filter:

```
{{ object.url|urlize:object.name }}
```

The pull request contains the implementation and tests. If you want to include this in Django, I'll add a commit to this pull request that updates the documentation.
",dbrgn,None,2013-10-22T13:34:22Z,2014-06-20T14:41:05Z
1791,Fixed #17027 -- Added support for the power operator in F expressions.,"Thanks dan at dlo.me for the initial patch.
- Added **pow** and **rpow** to ExpressionNode
- Added oracle and mysql specific power expressions
- Added used-defined power function for sqlite

https://code.djangoproject.com/ticket/17027
",timgraham,None,2013-10-22T12:04:33Z,2014-07-19T16:21:01Z
1790,Fix indentation of example,"For easy copy+paste I've fixed the indentation of one of the examples.
",pelson,None,2013-10-22T09:19:58Z,2014-07-19T16:21:02Z
1789,Update models.py,,manonthemat,None,2013-10-22T04:33:18Z,2014-06-24T15:22:46Z
1788,Fixed #16969 -- Don't connect to named database when possible,"Thanks Andreas Pelme for the report and initial patch.
",claudep,None,2013-10-21T17:34:54Z,2014-06-25T22:27:31Z
1787,Fixed #13245: Explained Oracle's behavior w.r.t db_table and how to prevent table-name truncation,,shaib,None,2013-10-21T15:18:31Z,2014-07-19T16:21:03Z
1786,Fix #21296: docs: postgresql can use host as alternative directory for unix sockets,"If you have installed postgres not on the default path and want
to connect via unix domain socket clarify that adding the dir
path as HOST value is enough.

Fixes #21296.
",xrmx,None,2013-10-21T14:59:22Z,2014-07-19T16:21:03Z
1785,Fixed reading of text file contents to not assume UTF-8 encoding.,"This shows itslf with Python 3 under Windows where it usually isn't the
default file I/O encoding.
",ramiro,None,2013-10-21T04:28:48Z,2014-06-14T12:25:27Z
1784,Fixed test that reads a migration file from disk.,"We need to make sure content read from ther file is Unicode and decoded
from UTF-8 right from the start so Python doesn't try to use another
encoding (read: ASCII/CP1252 Under Windows.)
",ramiro,None,2013-10-21T04:03:53Z,2014-07-19T16:21:04Z
1783,Fixed #21275 -- Migration serializer look for a deconstruct method on any object.,,loic,None,2013-10-20T19:02:23Z,2014-07-02T07:08:49Z
1782,"Fixes Ticket 21012 -- Provide shared ""caches"" dict to avoid creating multiple cache class instances.","Mimicing the ConnectionHandler class, this provides a dict-like access to  caches.
",funkybob,None,2013-10-20T09:14:21Z,2014-07-19T16:21:05Z
1781,Fixed #21238 -- Ensured ImageFieldFile from cache can use its url attrib...,"...ute.
",vajrasky,None,2013-10-20T08:55:14Z,2014-08-29T11:45:15Z
1780,Fixed #21288 -- Fixed E126 pep8 warnings,,alasdairnicol,None,2013-10-19T23:54:01Z,2014-07-01T17:24:55Z
1779,Fixed #21219 -- Added a way to set different permission for static files...,"....

Previously, when collecting static files, the files would receive permission
from FILE_UPLOAD_PERMISSIONS. Now, user has an option to give different
permission from uploaded files permission by subclassing StaticFilesStorage
and setting file_permissions_mode class attribute to the desired permission.
",vajrasky,None,2013-10-19T13:24:40Z,2014-06-22T01:40:47Z
1778,"Ticket 20752: Error signals are not reliable, especially when dealing with database errors","This is a pull request for ticket https://code.djangoproject.com/ticket/20752

I have changed the core handler in a way such that:
- the initial error is logged as expected, so the root cause of the trouble is visible and not covered by any other exceptions
- all connected handlers are completely executed as expected, so no unexpected side-effects from one handler to the other
- any exceptions from the handlers are logged to the error log, so no errors pass silently, even if therec are multiple.

I have also added unit tests to check that the log entries are created as expected. Since we are dealing with ""real"" log messages in these test cases, the log messages are more complicated than in the tests for the Django logging. Therefore, I also amended the django.test.utils.patch.logger.

Please check, if the additional log messages for ""Request Signal Handler Error"" contain the content, that you would expect.
",schacki,None,2013-10-19T11:28:03Z,2014-11-28T12:59:37Z
1777,Document django.utils.functional (first draft for comments),"Ticket: http://code.djangoproject.com/ticket/21139
",evildmp,None,2013-10-18T22:49:50Z,2014-06-15T02:11:57Z
1776,eggs.@gmail.com is a valid email address,,graingert,None,2013-10-18T19:59:06Z,2014-07-19T16:21:16Z
1775,Added support for serializing class methods. - Refs #21290.,"The new handling allows us to do away with the whitelisting that was
required to support date and datetime objects.
",loic,None,2013-10-18T17:14:39Z,2014-07-03T21:29:53Z
1774,"#21212 OneToOneField reference does not document the ""reverse"" name","The documentation of the default related_name value of a OneToOne Field has been added to ref/models/field.html.
",schacki,None,2013-10-18T14:30:17Z,2014-07-19T16:21:23Z
1773,Fixed #5849 -- Strip whitespace from blocktrans,"See [ticket 5849](https://code.djangoproject.com/ticket/5849) for background on this PR. The patch was written by mpessas, the PR rebased by me. This PR supersedes PR #803.
",Bouke,None,2013-10-18T14:27:37Z,2014-06-25T21:05:05Z
1772,Fixed #21283 -- Added support for migrations if models is a package.,"Refs #14300.
",loic,None,2013-10-18T12:21:44Z,2014-07-04T08:13:08Z
1771,#5789 -- Django LocaleMiddleware django_language should be _language,"See [ticket 5789](https://code.djangoproject.com/ticket/5789) for discussion. There has also been talk about migrating old session keys, but no decision so far.
",Bouke,None,2013-10-18T12:19:22Z,2014-07-16T17:44:45Z
1770,Fixed #21302 -- Fixed unused imports and import *.,"https://code.djangoproject.com/ticket/21302
",timgraham,None,2013-10-18T11:40:37Z,2014-06-17T15:31:42Z
1769,Fixed #21287 -- Fixed E123 pep8 warnings,,alasdairnicol,None,2013-10-18T09:09:17Z,2014-06-16T12:24:02Z
1768,Fixed #21268 -- Fixed E303 pep8 warnings,"Note that this pull request contains whitespace changes to the bundled library django/utils/six.py. Is that ok, or will it cause difficulties when merging updates from the upstream version?
",alasdairnicol,None,2013-10-18T00:57:42Z,2014-07-19T16:21:29Z
1767,Fixed #21267 -- Fixed E502 pep8 warnings,,alasdairnicol,None,2013-10-18T00:32:33Z,2014-07-03T05:58:19Z
1766,"Fixed #21285 -- Fixed E121,E122 pep8 warnings",,alasdairnicol,None,2013-10-17T23:21:30Z,2014-06-14T17:46:17Z
1765,Fix csrf reuse,#NAME?,gmcquillan,None,2013-10-17T19:31:31Z,2014-07-19T16:21:32Z
1764,Fixed #21280 - Added test for a921f06.,"This commit also lays the groundwork for future tests for the
makemigrations command.
",loic,None,2013-10-17T15:33:39Z,2014-07-19T16:21:34Z
1763,Fixed #21283 -- Place migration files for package models in a folder on application level,"https://code.djangoproject.com/ticket/21283
",MarkusH,None,2013-10-17T13:25:24Z,2014-07-19T16:21:35Z
1762,Fixed #21270 -- Fixed E701 pep8 warnings,"I ran the test suite after fixing all the E701 warnings, but there were some skipped tests because of the db backend. 

```
Ran 6149 tests in 276.349s

OK (skipped=476, expected failures=8)
```
",alasdairnicol,None,2013-10-17T11:07:55Z,2014-06-19T19:32:18Z
1761,Fixed #21280 -- Don't generate empty migration files,"Hi,

A simple fix to avoid empty migration file in case of an error in generating the migration content.

Thanks,
Javed
",tuxcanfly,None,2013-10-17T11:01:23Z,2014-07-19T16:21:36Z
1760,Fix #20346: cache middleware should vary on full URL,"This pull request changes the generation of cache keys from using the path of a request (`request.get_full_path()`) to the more-standard fully-qualified URL (`request.build_absolute_uri()`.

Tracked at https://code.djangoproject.com/ticket/20346.
",ijl,None,2013-10-16T22:27:19Z,2014-06-26T16:21:43Z
1759,Fixed #21242 -- Allow more IANA schemes in URLValidator,"Add an optional ""schemes"" parameter to the URLValidator constructor
that allows to pass additional URL/URI schemes to validate against
should the validation fail against the default schemes (as part of the
generic URL regex, i.e. http(s) or ftp(s)). Also add an ""uri"" utility
module that provides constants with all currently registered IANA
schemes as listed on
https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml
",saschpe,None,2013-10-16T14:47:04Z,2014-06-27T04:39:04Z
1758,#21271 Django's usage of smtplib.SMTP should have a timeout,"https://code.djangoproject.com/ticket/21271 

Tests pass. I added a short doc to 1.7 release notes and to https://docs.djangoproject.com/en/dev/topics/email/#smtp-backend. Do feel free to review. 
",ArcTanSusan,None,2013-10-16T05:54:03Z,2014-06-13T18:38:39Z
1757,Make sure to set cookie before returning response,"Ran into an issue with a security review; our CSRF tokens weren't getting rotated, even after we upgraded to 1.5.4.

It seemed that it was getting set in the request.META, but not actually making it to the response headers.

This logic fixes the problem for us -- it's undoubtedly flawed. Let me know if this makes sense.
",gmcquillan,None,2013-10-15T21:46:37Z,2014-07-19T16:21:42Z
1756,#18659 -- Deprecated request.REQUEST and MergeDict,"See [ticket 18659](https://code.djangoproject.com/ticket/18659) on removing request.REQUEST and MergeDict. I've moved the codebase away from using either of them. In the progress I've also added deprecation notices when those are being used. Please advice me if this is the correct approach.

The documentation needs to reflect this deprecation, if this PR is up to par, I make those changes.
",Bouke,None,2013-10-15T20:39:40Z,2014-06-24T11:01:17Z
1755,Fixed DeprecationWarning caused by assertEquals.,,loic,None,2013-10-15T19:29:00Z,2014-07-19T16:21:43Z
1754,Fixed #20834 -- Added a note about cached user permissions,"This is my first pull request please let me know if a have to add something 

ticket: https://code.djangoproject.com/ticket/20834
",casavantesj,None,2013-10-15T16:30:57Z,2014-06-16T16:59:44Z
1753,Fixed #7551 -- GFK should allow None init argument,"See [ticket #7551](https://code.djangoproject.com/ticket/7551). Currently GFK raises an exception when None is passed as initializing argument. Normal FK's allow None, so there is a discrepancy. This fix solves both the cases of required and non-required GFK initializing.
",Bouke,None,2013-10-15T15:26:25Z,2014-06-13T21:02:11Z
1752,Add configurable SMTP timeout.,"This is related to https://code.djangoproject.com/ticket/21271

""When EmailBackend initializes SMTP objects it does not provide a timeout, and the default timeout is object() (no timeout). It would be sensible to provide some configurable timeout.
I've got bitten by this when using the AdminEmailHandler. My database went down, a lot of exceptions were generated and Django was trying to send emails. The SMTP server started not responding and the requests started blocking, until all my workers were used up. By then Django stopped serving requests. Basically, I was DoSed by my own SMTP server.""
",edevil,None,2013-10-15T15:19:27Z,2014-06-13T13:25:18Z
1751,"Improvement on InlineFormSet doc, reference ticket 21006",,tian-yi,None,2013-10-15T13:38:59Z,2014-07-19T16:21:46Z
1750,Fixed #16855 -- select_related() chains as expected.,"select_related('foo').select_related('bar') is now equivalent to
select_related('foo', 'bar').

Also reworded docs to recommend select_related(*fields) over select_related()

[Ticket](http://code.djangoproject.com/ticket/16855)
",mjtamlyn,None,2013-10-15T12:21:08Z,2014-06-16T08:16:12Z
1749,Fixed #21006 -- added example code for overriding methods on an InlineFormSet,"Filed from Pycon13 Ireland Django sprint. Fix for ticket https://code.djangoproject.com/ticket/21006 
",tian-yi,None,2013-10-15T11:00:07Z,2014-06-16T12:17:12Z
1748,Fixed #21255 -- close connection in BaseCommand,"Hi,

This is related to #21255 [0] where `BaseCommand` needs to close database connections after executing.

Added a call to `django.db.close_old_connections` in `execute`. Added a test case that reproduces the problem.

Thanks,
Javed

[0] https://code.djangoproject.com/ticket/21255
",tuxcanfly,None,2013-10-15T07:41:18Z,2014-08-01T18:57:17Z
1747,Fixed #21219 -- Added STATIC_FILE_PERMISSIONS setting.,"Now STATIC_FILE_PERMISSIONS is used in the
django.contrib.staticfiles.storage.StaticFilesStorage backend, instead of
FILE_UPLOAD_PERMISSIONS. Added test and documentation as well.
",vajrasky,None,2013-10-15T05:42:09Z,2014-06-26T14:33:00Z
1746,Fixed #18400 Unexpected {% if %} behavior in templates.,"https://code.djangoproject.com/ticket/18400

Please review this pull request and leave feedback. If you test this PR, do all the tests succeed? 
",ArcTanSusan,None,2013-10-15T05:19:15Z,2014-06-14T01:09:21Z
1745,Add noop_key_func,"This feels like a common enough case that I feel should belong in core alongside `default_key_func`. Many times, when dealing with caches that are shared between systems, I just need to set a more predictable key name and not worry about version or prefixes being added.
",mattrobenolt,None,2013-10-14T23:41:58Z,2014-06-17T02:35:59Z
1744,Fixed #7261 -- support for __html__ for library interoperability,"The idea is that if an object implements **html** which returns a string this is
used as HTML representation (eg: on escaping). If the object is a str or unicode
subclass and returns itself the object is a safe string type.

This is an updated patch based on jbalogh and ivank patches.
",umazalakain,None,2013-10-14T22:46:23Z,2014-07-17T00:06:49Z
1743,Fixed #21172 -- have LiveServerThread follow the semantics of threading.Thread.join(),"LiveServerThread.join() now behaves like threading.Thread.join().
LiveServerThread.terminate() is instead used to ask live http server to
terminate and close.
",umazalakain,None,2013-10-14T22:46:13Z,2014-07-19T16:23:01Z
1742,Suggested fix for ticket 21223 (Documentation improvement),"Suggested fix for ticket 21223, as discussed with @evildmp Pycon Ireland Sprints.
",saoili,None,2013-10-14T20:21:24Z,2014-06-27T04:42:28Z
1741,"fixing E201,E202 pep8 occurrences, ticket_21266",,larryone,None,2013-10-14T19:20:47Z,2014-07-19T16:23:03Z
1740,Fixed #5418 -- added assertNoBrokenLinks to test system,"Check for broken links in a rendered page. By default only internal links are
checked, if `only_internal` is `False`, external links are checked too.

This commit adds the patch, the tests and the docs where the possible side
effects of this test are noted.
",umazalakain,None,2013-10-14T18:51:44Z,2014-06-12T12:20:41Z
1739,WIP #21230: Remove some direct settings manipulations in tests,"See [ticket 21230](https://code.djangoproject.com/ticket/21230). The ticket is marked as 'easy pickings', however there is quite some work to be done and not everything is [straight-forward](https://code.djangoproject.com/ticket/21230#comment:2). So I started off with some low hanging fruit. This doesn't close the ticket, as there are quite a few remaining places where settings are manipulated.

There might be some problem with code style, especially in places of multiline decorator calls. Please advice on how the patch should be improved.

This is the progress so far on rewriting the occurrences of direct settings manipulations:
- [x] admin_views/tests.py
- [x] comment_tests/tests/test_comment_form.py
- [x] generic_inline_admin/tests.py
- [x] i18n/tests.py
- [x] managers_regress/tests.py
- [x] middleware_exceptions/tests.py
- [x] modeladmin/tests.py
- [x] proxy_models/tests.py
- [ ] runtests.py
- [x] select_for_update/tests.py
- [x] serializers/tests.py
- [ ] settings_tests/tests.py
- [ ] staticfiles_tests/tests.py
- [x] template_tests/test_loaders.py
- [x] template_tests/test_response.py
- [ ] template_tests/tests.py
- [x] test_client/tests.py
- [x] urlpatterns_reverse/tests.py
",Bouke,None,2013-10-14T14:12:06Z,2014-06-25T22:15:51Z
1738,Reworked the ModelForm docs.,"The ModelForm docs suggested that fields defined declaratively override
default fields generated from the form Meta.

This is conceptually wrong, especially with inheritance in mind. Meta is
usually defined on the topmost ModelForm subclass, while fields can come
from anywhere in the MRO, especially base classes; so we suggested that
something defined in a base class override something defined on a subclass.

This patch rephrases the docs around the idea that Meta is used to generate
_missing_ fields.
",loic,None,2013-10-14T12:53:16Z,2014-07-19T16:23:07Z
1737,Fixed #20962: render() methods could raise exceptions in DEBUG,"See [ticket 20962](https://code.djangoproject.com/ticket/20962).
",Bouke,None,2013-10-14T12:45:24Z,2014-06-25T00:10:36Z
1736,Fixed #21210: Document when runserver doesn't auto restart,"See [ticket 21210](https://code.djangoproject.com/ticket/21210).
",Bouke,None,2013-10-14T12:19:58Z,2014-06-24T03:47:28Z
1735,Fixed #21264: Incorrect RST usage in docs,,Bouke,None,2013-10-14T12:02:09Z,2014-07-16T12:55:05Z
1734,Fix for #21027,"Just a simple documentation fix
",MaximusV,None,2013-10-14T11:56:49Z,2014-07-19T16:23:46Z
1733,Fixed #18866 -- added validation error for verbose_name longer than 39 characters,"Added a validation error check when creating the permissions for model, to avoid
cryptic database error when the verbose_name is longer than 39 characters
thanks elena for reporting it
",jxs,None,2013-10-14T11:38:52Z,2014-07-10T21:26:02Z
1732,Fixed #21263 -- Fixed issue with override_settings in inherited classes,"When both parent and child classes are decorated with override_settings,
child class settings should take precedence.
Thanks Sephi for the report.
",claudep,None,2013-10-14T08:47:41Z,2014-06-13T23:30:51Z
1731,Fixed #9722 - used pyinotify as change detection system when available,"Used pyinotify (when available) to replace the ""pool-every-one-second""
mechanism in `django.utils.autoreload`.

This is an update of `ch0wn`s patch.
",umazalakain,None,2013-10-14T05:39:25Z,2014-06-17T05:31:24Z
1730,Fixed #7603 -- Added a 'scheme' property to the HttpRequest object,"HttpRequest.scheme uses self.is_secure() to determine if scheme is
'http' or 'https' wether WSGIRequest.scheme makes use of the
'wsgi.url_scheme' WSGI environ variable.

This provides a handful method to check for current scheme in, for
example, templates. It also allows to deal with other schemes.
",umazalakain,None,2013-10-13T09:10:54Z,2014-07-19T16:23:52Z
1729,Fixed #21261 -- Added missing on RedirectView docs,"(:
",yokomizor,None,2013-10-13T03:11:44Z,2014-06-16T06:47:13Z
1728,#21260: Admin history needs proxy model instead of concrete model,"When LogEntry model saves the concrete model as content type id, it links to the concrete model; however, the item is saved from another location which is the ModelAdmin of proxy model.
https://code.djangoproject.com/ticket/21260
",buremba,None,2013-10-13T00:56:37Z,2014-06-14T06:23:24Z
1727,Fixed #15888 -- createcachetable do not need tablename as argument,,claudep,None,2013-10-12T17:30:25Z,2014-06-26T13:50:31Z
1726,Set instance (not queryset) for InlineFormSet in wizard.,"Proposed fix for bug #21259.

https://code.djangoproject.com/ticket/21259
",flibbertigibbet,None,2013-10-12T01:59:20Z,2014-06-18T18:05:00Z
1725,Minor changes to sentence structure of Query Doc page,,Siecje,None,2013-10-11T16:46:12Z,2014-07-19T16:25:27Z
1724,Fixed #21253 -- PBKDF2 with cached HMAC key,"This gives a 2x speed increase compared to the existing implementation.

rebased from https://github.com/django/django/pull/1638

https://code.djangoproject.com/ticket/21253
",timgraham,None,2013-10-11T14:26:00Z,2014-06-18T02:15:19Z
1723,Small improvements to Models Documentation Page,,Siecje,None,2013-10-10T21:55:13Z,2014-07-09T19:55:03Z
1722,Fixed #20600 -- ordered distinct(*fields) in subqueries,,akaariai,None,2013-10-10T21:19:16Z,2014-06-12T22:57:31Z
1721,Fixed #21249 - Typo in SQLCompiler.get_grouping(),,manfre,None,2013-10-09T14:46:46Z,2014-06-12T23:18:58Z
1720,Fixed #21173 -- Stopped fixing format for date-based widgets at init time,,claudep,None,2013-10-08T19:20:13Z,2014-07-19T16:25:47Z
1719,Fix grammatical errors in email documentation,"""be send"" -> ""be sent""

Thanks!
",dlo,None,2013-10-08T14:22:58Z,2014-06-20T19:38:49Z
1718,Test legal URL schemes,,saschpe,None,2013-10-07T14:35:18Z,2014-07-19T16:25:54Z
1717,Allow ssh URLs to pass URLValidator,"The generic definition of Uniform Resource Locator doesn't include any
restriction on the scheme, so Django's URLValidator should at least
accept the most common ones. This includes ssh://.

Refs #21242 -- Allow more IANA schemes in URLValidator
",saschpe,None,2013-10-07T14:33:11Z,2014-06-21T02:10:33Z
1716,Fixed #21236: migrations should work with convenient unique_together,"Hi,

This is regarding #21236 [0] where migrations with unique_together fail if the meta attribute is a flat tuple (instead of nested tuple). This is currently supported by django for convenience. 

Thanks,
Javed

[0] https://code.djangoproject.com/ticket/21236
",tuxcanfly,None,2013-10-07T07:42:25Z,2014-06-13T21:02:07Z
1715,#21220: Update admin alerts to appropriate colors,"https://code.djangoproject.com/ticket/21220
",ryangallen,None,2013-10-07T02:17:57Z,2014-07-08T12:34:27Z
1714,#21220/#13749: Link to url 'home' in admin header if it exists,"https://code.djangoproject.com/ticket/21220
",ryangallen,None,2013-10-07T02:17:05Z,2014-06-19T15:03:18Z
1713,#21220: Min-width for date and time inputs in admin,"https://code.djangoproject.com/ticket/21220
",ryangallen,None,2013-10-07T02:16:11Z,2014-06-20T20:00:55Z
1712,"#21220: Linear gradient in header, module headers, slight border radius on modules","https://code.djangoproject.com/ticket/21220
",ryangallen,None,2013-10-07T02:15:28Z,2014-07-05T07:55:06Z
1711,Admin CSS maintenance - no styles actually changed,"https://code.djangoproject.com/ticket/21220
",ryangallen,None,2013-10-07T02:14:03Z,2014-06-19T14:05:56Z
1710,#21220: Link to admin index in branding block,"https://code.djangoproject.com/ticket/21220
",ryangallen,None,2013-10-07T02:12:13Z,2014-07-19T16:26:32Z
1709,Accounted for r000 string in gis version regex.,"Proposed fix for GEOS Version Regex.  This problem occurs on Mac OSX.  Example - the version info string was ""3.4.2-CAPI-1.8.2 r3921"" and the regex parser was not expecting the trailing "" r3921"". 
",carymrobbins,None,2013-10-05T20:31:00Z,2014-06-18T18:39:44Z
1708,Fixed #21213 -- Django's mailing lists documentation,"Added docs/internals/mailing-lists.txt documenting the use of django's
mailing lists. All references across docs changed to point to this page.

The referencing makes use of substitution because there's no way to make
a :ref: link in a non-inline fashion in Sphinx. It also makes use of
rst_epilog Sphinx conf for making this substitutions across all the
docs.
",umazalakain,None,2013-10-04T12:50:18Z,2014-07-19T16:26:40Z
1707,Improve admin user friendliness,"https://code.djangoproject.com/ticket/21220

Links to the admin index and site index in the header
Green success messages
Tone down the red error messages
Min-width for date and time fields (could not read whole date in input box when clicking 'Today')
A handful of other subtle details
",ryangallen,None,2013-10-04T03:20:22Z,2014-06-26T05:43:47Z
1706,Enabled makemessages to support several translation  directories,,claudep,None,2013-10-03T15:38:17Z,2014-06-12T23:19:00Z
1705,Ticket 21206: Verify the test label is a package before running discovery,,prestontimmons,None,2013-10-03T15:01:57Z,2014-06-29T23:59:59Z
1704,Fixed 21157 -- Fixed problems with ResolverMatch,"- Fixed bug in `get_callable()` that caused `resolve()` to put a string
  in `ResolverMatch.func`.
- Made `ResolverMatch.url_name` match the actual url name (or `None`).
- Updated tests that used the string value in `ResolverMatch.func`, and
  added regression tests for this bug.
- Corrected test urls whose dummy view paths caused failures (behavior
  that was previously masked by this bug).

See the ticket for more details on the fourth point.
",marfire,None,2013-10-03T08:22:16Z,2016-10-20T13:40:52Z
1703,Fixed #21198 -- Add explicit check for __str__ definition in @python_2_u...,"...nicode_compatible
",chmodas,None,2013-10-02T14:20:26Z,2014-07-19T16:28:30Z
1702,Fixed #6834 -- Added a dirs parameter to extends and include,"template tags to override TEMPLATE_DIRS.

The ticket is here: https://code.djangoproject.com/ticket/6834
",berkerpeksag,None,2013-10-01T18:46:15Z,2014-06-13T09:58:20Z
1701,[1.5.x] Fixed #21203 -- resolve_columns fields misalignment,"```
In queries using .defer() together with .select_related() the values
and fields arguments didn't align properly for resolve_columns().

Backpatch of 215b9b0405e649a7d6f175d9d91a7247144ebb3c from master.
```
",manfre,None,2013-10-01T14:52:32Z,2014-06-16T06:47:19Z
1700,"Fixed #19649 -- Set ""Vary: Cookie"" on any responses that access cookies","This is a basic implementation that records access to cookies, and a CommonMiddleware change that sets the Vary: Cookie header automatically.
",bigkevmcd,None,2013-10-01T12:15:35Z,2014-08-21T09:03:00Z
1699,#21205: Fix deleting more than 999 related objects using SQLite.,"In SQLite, deleting objects that have more than 999 related objects will fail
with a 'too many SQL variables' error.

Changed related_objects() to fetch objects in batches. Added a new test to check
for this new behavior.
",NiGhTTraX,None,2013-10-01T09:33:25Z,2014-08-11T09:47:52Z
1698,Fixed #21203 -- resolve_columns fields misalignment,"In queries using .defer() together with .select_related() the values
and fields arguments didn't align properly for resolve_columns().
",akaariai,None,2013-10-01T08:07:55Z,2014-06-30T14:09:00Z
1697,Fixing improper grammar in docstring,,adamhaney,None,2013-09-30T21:00:05Z,2014-06-22T22:07:34Z
1696,Fix #21202: Prevent swallowing fatal DB errors in atomic blocks,"See ticket at https://code.djangoproject.com/ticket/21202
",intgr,None,2013-09-30T19:52:29Z,2014-06-19T00:22:57Z
1695,Add myself to authors file,"Forgot to add myself to the authors file from https://github.com/django/django/pull/1570.  timgraham merged my commits into master.
",danrjohnson,None,2013-09-30T16:55:55Z,2014-07-20T01:19:37Z
1694,Fixes #21154 -- Update TemplateResponse docs,"Simply expand the documentation to clarify that if passed a Context instance, it won't be replaced.
",funkybob,None,2013-09-30T10:48:06Z,2014-06-17T15:04:44Z
1693,Fixed PendingDeprecationWarning in backends tests,"Ticket: https://code.djangoproject.com/ticket/21199

With this commit, there are no more warnings issued from the test suite with -Wall.
",mxsasha,None,2013-09-30T10:15:34Z,2014-07-20T01:19:38Z
1692,Fixed regression introduced by 04a2a6b.,"#3871 made RelatedManager a callable and when DTL picks up a callable

it tries to call it. By adding a do_not_call_in_templates=True attribute
to RelatedManager we prevent this behavior.

Thanks jbg@ for the report.

Fixed #3871
",loic,None,2013-09-30T03:27:52Z,2014-06-16T13:38:42Z
1691,"Fixed #21111 - adding a call to super(View, self).__init__()",,ChristinaMeno,None,2013-09-30T02:15:15Z,2014-07-20T01:19:39Z
1690,Fixed #19299 -- Removed Nullification of Foreign Keys To CharFields,"This pull request fixes https://code.djangoproject.com/ticket/19299 (and https://code.djangoproject.com/ticket/21194)
",albertyw,None,2013-09-29T20:02:14Z,2014-07-08T13:29:37Z
1689,Fixed #19496 -- Added truncatechars_html filter.,"truncatechars_html was incorrectly adding the '...' to text under the truncate length but only by 3 or fewer characters. 

``` python
>>> truncatechars_html('abcd', 4)
u'a...'
```

It now correctly returns:

``` python
>>> truncatechars_html('abcd', 4)
u'abcd'
```
",saturn597,None,2013-09-29T16:37:23Z,2014-06-16T13:12:13Z
1688,Fixed #20439 -- Started deprecation of IPAddressField,,mxsasha,None,2013-09-28T08:24:53Z,2014-07-20T01:19:40Z
1687,Tiny fix for an ImportError in 1.6.x,"In:

```
django/core/cache/backends/db.py, line 14
```

which was raising:

```
from django.db.backends.utils import typecast_timestamp
ImportError: No module named utils
```
",tuxcanfly,None,2013-09-27T07:05:15Z,2014-06-12T06:59:12Z
1686,Validate on right database for related_field,"When you are using multidatabase, like this example of AuthRouter

https://docs.djangoproject.com/en/dev/topics/db/multi-db/#an-example

You get errors on validation of model related field.
",ebertti,None,2013-09-27T01:04:08Z,2014-07-20T01:19:40Z
1685,Fixed #21169 -- Reworked M2M RelatedManager.clear() to properly account ...,"...for default filtering.

Refs. #3871.
",loic,None,2013-09-26T23:38:59Z,2014-07-09T04:43:33Z
1684,Fixed #21174 -- Added tx control to some related manager methods,,akaariai,None,2013-09-26T18:17:39Z,2014-07-20T01:19:41Z
1683,Fixed #20931 -- Fixed select widgets nested choice rendering,"ChoiceFieldRenderer was not rendering nested choices. Added recursion
to ChoiceFieldRenderer to take nested choices and render them as
<ul>'s.
",famousfilm,None,2013-09-26T15:41:25Z,2014-06-21T11:27:59Z
1682,Solving bug #21170,"This solves https://code.djangoproject.com/ticket/21170
",mnowotka,None,2013-09-26T09:41:25Z,2014-07-20T01:19:42Z
1681,Fixed #21323 -- Improved readability of serialized Operation.,,loic,None,2013-09-26T07:29:46Z,2014-07-20T01:19:42Z
1680,Fixed #21167 - Improved queries.tests.SubqueryTests,"Improve tests to cover slicing scenarios that could be handled in unique
ways by 3rd party database backends.
",manfre,None,2013-09-26T01:02:57Z,2014-07-20T01:19:43Z
1679,Fixed #21160 -- in_bulk fails on SQLite with more than 999 ids,"#21160 is a duplicate of https://code.djangoproject.com/ticket/16426
",NiGhTTraX,None,2013-09-25T12:21:44Z,2014-08-11T12:26:06Z
1678,Fixed #21126 -- QuerySet value conversion failure,"A .annotate().select_related() query resulted in misaligned rows vs
columns for compiler.resolve_columns() method.

Report & patch by Michael Manfre.

For master and 1.6 this seems safe enough to do.

For 1.5.x the question is will some backends (either core or 3rd party) fail for None fields in convert_values(). Here the other choices seem to be (for 1.5.x only):
- No backpatch
- Create a fake field (either plain Field() or something similar to what gis uses in django.contrib.gis.db.models.sql.conversion.py:BaseField)

I talked about this with manfre on IRC and we agreed that None is safe enough. But I have a bad feeling about this as ""upgrade django, site doesn't work"" situation is possible.

For core the question is if Oracle works - I am pretty sure it does, but I can't verify this as I don't currently have Oracle available.
",akaariai,None,2013-09-24T19:43:33Z,2014-07-14T22:49:47Z
1677,Improved query join promotion logic,"This pull request improves the logic for join promotion in .annotate() and .values() cases. In addition there is now join demotion logic.
",akaariai,None,2013-09-24T19:06:18Z,2014-07-14T21:52:19Z
1676,Fixed #21146 - DatabaseCache converts expires to python value,"DatabaseCache uses raw cursors to bypass the ORM. This prevents it from
being used by database backends that require special handling of datetime
values.
",manfre,None,2013-09-24T12:49:13Z,2014-06-18T11:02:48Z
1675,#21152: Fix small grammatical error in comment.,"Changed 'there are no filtering' to 'there is no filtering'.
",NiGhTTraX,None,2013-09-24T11:59:15Z,2014-07-20T01:19:44Z
1674,Fixed #18333 - Quote annotated column names,,manfre,None,2013-09-24T02:13:43Z,2014-06-20T10:22:44Z
1673,Fixed #17671 - Cursors are now context managers.,,manfre,None,2013-09-24T00:30:51Z,2014-06-18T18:16:28Z
1672,New directive that prefix filename,"The tutorial now has code snippets with it's
filename prepended in a header div.

https://code.djangoproject.com/ticket/20910
",nsmgr8,None,2013-09-23T23:40:41Z,2014-07-20T01:19:45Z
1671,rm extra p (topppings->toppings),,asparagui,None,2013-09-23T22:40:15Z,2014-07-20T01:19:46Z
1670,Make resolve_url support relative URLs,"This fixes redirecting to relative URLs with django.shortcuts.redirect

Supporting relatives url is kind of a controversial topic. But it seems that the choice to support relative URLs has [been made](https://code.djangoproject.com/ticket/987), and [there's code to support it](https://github.com/django/django/blob/636860fbfb4e34e08749d4576bc9571028150526/django/core/handlers/base.py#L24).
",acatton,None,2013-09-23T21:47:51Z,2014-07-03T05:20:29Z
1669,Marked help_text for translation,,rootxnet,None,2013-09-23T20:36:58Z,2014-07-20T01:19:48Z
1668,Fixed #21147 - Avoid time.time precision issue with cache backends.,"The precision of time.time() is OS specific and it is possible for the
resolution to be low enough to allow reading a cache key previously set
with a timeout of 0.
",manfre,None,2013-09-23T16:43:36Z,2014-07-12T04:24:00Z
1667,Fixed #4492 - Provide tests for mixed-case column names,"https://code.djangoproject.com/ticket/4492
I created a model for testing mixed case entity names + a suite of 4 tests that test that. Since PostgreSQL lowercases everything not in quotes, usually only the last test would fail if this isn't implemented properly in the drivers.
Tested the unit-tests on PostgreSQL 9.2 and SQLite
",velis74,None,2013-09-23T15:08:12Z,2014-06-28T03:23:55Z
1666,Fixed #20830 - Updated documentation for Python 3 porting,"Changed the Python 3 documentation page to clarify that
Django uses a customised version of the six module from
that used in Python.
",dchetwynd,None,2013-09-23T14:42:56Z,2014-07-20T01:19:50Z
1665,Fixes #21140 -- Adds ref to Using cached sessions,"A Reference to 'Using cached sessions' added to the HTTP section of
the performance page together with a short summary.

Done during EvilDMP's sprint at PyConUK.
",forslund,None,2013-09-23T14:23:42Z,2014-07-20T01:19:50Z
1664,Fixed #14028 - Prevent duplication between db_column and field names.,"https://code.djangoproject.com/ticket/14028
",helenst,None,2013-09-23T14:08:38Z,2014-12-02T22:55:41Z
1663,Fixed #21120 -- More explicit text on using validators and link to writi...,"#21120 -- I thought the best thing to do here was write a little bit more for clarification and also link to ref/validators as this already gives an example of how to use and write your own validator. Interestingly the forms/validation page had no other existing link to ref/validators.
",benhuckvale,None,2013-09-23T13:59:28Z,2014-06-19T23:50:27Z
1662,Fixed #20364 -Added a passing test that confirms URLs in quotes followed by commas are handled correctly by Chris Piwoński's patch.,"It has been suggested that the patch 20364.diff would not correctly handle a URL in quotes followed by a comma, but this is not the case.

https://code.djangoproject.com/ticket/20364
",augeas,None,2013-09-23T12:50:54Z,2014-07-20T01:19:51Z
1661,T20910 code snippet filename,,nsmgr8,None,2013-09-23T12:39:45Z,2014-07-20T01:19:52Z
1660,Fixed #21702 - Added nested list different bullet styles,"This creates three levels of visual indentation in the documentation with the order square > disc > circle. It should make quickly scanning through the documentation contents easier. A similiar patch will be submitted alongside to the djangoproject.com repository.
",amney,None,2013-09-23T10:36:22Z,2014-07-20T01:19:52Z
1659,Forbid queries in broken transactions,"https://code.djangoproject.com/ticket/21134

​https://groups.google.com/d/topic/django-developers/ACLQRF-71s8/discussion
",aaugustin,None,2013-09-22T20:57:29Z,2014-07-19T00:08:42Z
1658,Fixed #21141 -- Update Sphinx URL,"Updated Sphinx URL from http://sphinx.pocoo.org/ to http://sphinx-doc.org/.
",yokomizor,None,2013-09-22T17:37:19Z,2014-06-13T00:29:21Z
1657,"Fixed ""Address already in use"" from liveserver.","Our WSGIServer rewrapped the socket errors from server_bind into
WSGIServerExceptions, which is used later on to provide nicer
error messages in runserver and used by the liveserver to see if
the port is already in use. But wrapping server_bind isn't enough since
it only binds to the socket, socket.listen (which is called from
server_activate) could also raise ""Address already in use"".

Instead of overriding server_activate too I chose to just catch socket
errors, which seems to make more sense anyways and should be more robust
against changes in wsgiref.
",apollo13,None,2013-09-22T14:03:44Z,2014-07-20T01:19:53Z
1656,Correct very minor typo,"Just changed as to has.
",mlissner,None,2013-09-21T20:34:51Z,2014-07-12T06:40:58Z
1655,Addressed inaccuracies in performance docs,"- Move the discussion of CachedStaticFilesStorage to the section about
  HTTP. It's really about client-side caching. It doesn't fit with the
  caching utilities from django.utils.functional.
- Tone down the warning against Pypy as per Alex' feedback. It's a valid
  choice for advanced users who are comfortable using a non-standard
  stack.
- Generally reworded the 'Using different versions of available software'
  section.
- Some other minor adjustments to the document.
",evildmp,None,2013-09-21T15:47:03Z,2014-06-14T08:47:23Z
1654,#NAME?,,meteozond,None,2013-09-21T14:28:11Z,2014-07-20T01:19:54Z
1653,Pbkdf2 speedup,"Increased the performance of PBKDF2, needs backport to 1.4+
",apollo13,None,2013-09-21T13:45:00Z,2014-06-28T04:05:48Z
1652,Tweak the new performance docs.,"- Move the discussion of CachedStaticFilesStorage to the section about
  HTTP. It's really about client-side caching. It doesn't fit with the
  caching utilities from django.utils.functional.
- Tone down the warning against Pypy as per Alex' feedback. It's a valid
  choice for advanced users who are comfortable using a non-standard
  stack.
",aaugustin,None,2013-09-21T08:09:59Z,2014-07-18T06:57:35Z
1651,Clarify documentation about strftime formatting,,funkybob,None,2013-09-21T03:55:09Z,2014-06-18T23:36:35Z
1650,Fix KeyError on password field.,"When the password field is disabled in a custom contrib.auth.admin.UserAdmin class (via fieldsets), saving the form raises a KeyError.
",ianare,None,2013-09-20T09:36:59Z,2014-07-13T19:49:48Z
1649,Fixed #21122 -- Improved clean up of test temp directory on Windows,"- Fixed test that didn't close the files it opened
- Catching and handling exception when temp directory cannot be removed
- Fixed an unrelated bug that affects `bisect_tests()` under Python 3
  (having to do with true division always returning a float)
",marfire,None,2013-09-19T23:16:22Z,2014-07-04T14:04:08Z
1648,Allow the field index type to be specified via the db_index argument,"The major use case here is being able to specify the index type for more exotic column types, like hstore.

I don't have easy access to databases other than Postgres, so I only modified that backend to use the feature.  
",zbenjamin,None,2013-09-19T19:29:55Z,2014-07-20T01:19:57Z
1647,[1.5.x] Fixed #21126 - Properly align resolve_columns fields for aggregates,"The 'row' passed to resolve_columns includes aggregate values, but
'fields' did not. This resulted in backends incorrectly aligning the
fields and values. 'fields' now includes None placeholders for each
aggregate value in the row.
",manfre,None,2013-09-19T18:25:45Z,2014-06-16T06:47:12Z
1646,Fixed #21126 - Properly align resolve_columns fields for aggregates,"The 'row' passed to resolve_columns includes aggregate values, but
'fields' did not. This resulted in backends incorrectly aligning the
fields and values. 'fields' now includes None placeholders for each
aggregate value in the row.
",manfre,None,2013-09-19T18:18:19Z,2014-06-20T03:33:31Z
1645,"Add missing ""in"" in sentence in sessions documentation.",,alimony,None,2013-09-19T16:55:46Z,2014-07-20T01:19:58Z
1644,Increase default PBKDF2 iterations,"Increases the default PBKDF2 iterations, since computers have gotten
faster since 2011. In the future, we plan to increment by 10% per
major version.
",PaulMcMillan,None,2013-09-19T16:42:45Z,2014-06-21T12:35:49Z
1643,Added Australian English (en_AU) to locale conf,"Adds Australian English (en_AU) to locale conf, which differs from
American English in date formatting and spelling, and continues
to diverge from British English in spelling (and first-day-of-week
according to the current en_GB locale format.py).

The transifex language project to match this patch has been requested
",fifieldt,None,2013-09-19T12:31:00Z,2014-06-17T16:34:23Z
1642,Remove the old URI syntax for cache backends.,"In preparation for building the ""new"" thread safe, non-duplicating cache API, I'm removing the old URI syntax for caches in the hopes of cleaning up before we make a mess.
",funkybob,None,2013-09-19T10:24:37Z,2014-06-17T05:26:04Z
1641,Fix #21121: Add archive of security issues.,,ubernostrum,None,2013-09-19T04:14:54Z,2014-07-01T09:49:16Z
1640,Fixed #18744 -- Updated docstring to highlight limitations of NamedTemporaryFile,"- Noted that this does not allow for reading and writing the same open
  file in different processes under Windows.
- Noted that the keyword arguments to `NamedTemporaryFile` no longer
  match the Python version.

See the [ticket](https://code.djangoproject.com/ticket/18744) for more details on the issue.
",marfire,None,2013-09-18T23:10:43Z,2014-06-17T07:56:01Z
1639,Fixed #19373 -- Ported Windows file locking from PyWin32 to ctypes,"Currently, no file locking happens on Windows unless `PyWin32` happens to be installed. This removes that (undocumented) dependency by using `ctypes` instead. Adapted from Anatoly Techtonik's port for Roundup.

The tests are passing for me on Windows (Python 2.7.5 and Python 3.3.2) and linux (Python 2.7.2).
",marfire,None,2013-09-18T02:10:36Z,2014-06-20T06:20:47Z
1638,Fixed #21253 -- PBKDF2 with cached HMAC key,"This gives a 2x speed increase and removes the ability to DoS with large passwords.

Sorry this is my hello world for Python, and I don't even know how to run it. It probably works but you should test it.

https://code.djangoproject.com/ticket/21253
",Sc00bz,None,2013-09-17T23:15:51Z,2014-06-19T23:26:09Z
1637,Fixes #21115 -- Fixes NameError in migrate --list command,"See ticket https://code.djangoproject.com/ticket/21115
",MarkusH,None,2013-09-17T14:42:16Z,2014-07-20T01:20:01Z
1636,Fixes #21114 -- Migrations must not have a dependency to themself.,"See ticket https://code.djangoproject.com/ticket/21114
",MarkusH,None,2013-09-17T14:41:43Z,2014-07-20T01:20:01Z
1635,Fixed #15625 -- Made message in MultiValueDictKeyError less verbose.,"Thanks margieroginski for the suggestion.
",timgraham,None,2013-09-16T20:22:49Z,2014-07-20T01:20:02Z
1634,Fixed #20702 -- Deprecated get_formsets in favor of get_formsets_with_inlines,,timgraham,None,2013-09-16T12:36:40Z,2014-06-14T13:20:25Z
1633,Fixed #18400 -- Unexpected {% if %} behavior,"Fixed #18400 -- Unexpected {% if %} behavior
https://code.djangoproject.com/ticket/18400

By using ""return 0""
",luyikei,None,2013-09-16T03:54:10Z,2014-06-12T18:07:08Z
1632,Fixed #4278 -- The `TEMPLATE_DIRS` setting can be overridden by loader.get_template() and loader.select_template().,,berkerpeksag,None,2013-09-15T21:53:37Z,2014-06-26T14:47:04Z
1631,Fixed #17795 -- Pass kwargs to generic views context,"Thanks to Ed Crewe for reporting the issue and Fandekasp for
providing the patch.

https://code.djangoproject.com/ticket/17795
",polmuz,None,2013-09-15T19:03:37Z,2014-06-12T15:57:09Z
1630,Fixed #3871 -- Custom managers when traversing reverse relations.,,loic,None,2013-09-14T10:58:49Z,2014-07-05T07:36:36Z
1629,Fixed #21101 -- Updated urlize documentation to mention email addresses,"Expanded the documentation for urlize template filters. 
Before the edit it only mentioned web links, now the documentation also covers email addresses.
",goetzb,None,2013-09-13T15:47:30Z,2014-06-17T09:29:05Z
1628,FIxed 13408 -- Unpacking list/tuple in for loop should raise exception,,e0ne,None,2013-09-13T15:12:35Z,2014-06-18T12:58:49Z
1627,[1.5.x] Fixed #21102 -- Cannot pickle/unpickle a QuerySet that prefetches related objects more than once (Pickling Idempotency),"Fixed the bug that a QuerySet that prefetches related objects cannot be pickled and unpickled more than once (The second pickling attempt raises an exception).

Added a new test for the queryset pickling idempotency.

It was introduced by the patch bac187c0d8e829fb3ca2ca82965eabbcbcb6ddd5.
",mjipeo,None,2013-09-13T12:27:06Z,2014-06-16T06:47:03Z
1626,Fixed #12288 -- Validate that values in INSTALLED_APPS are unique,,e0ne,None,2013-09-13T11:24:41Z,2014-07-06T06:14:42Z
1625,Documentation -- added instructions on working with pull requests,"Since non-core contributors are asked to review patches, instructions
on working with pull requests were added to the Working with Git and
GitHub page (based on the existing instructions in the core
committers page).
",marfire,None,2013-09-12T23:12:22Z,2014-07-20T01:20:05Z
1624,Fixed #21098 -- Applied sensitive_post_parameters to MultiValueDict,"Getting an error in MultiValueDict on a POST, such as doing request.POST['foo'], will leak the POST data without any escaping by Django, i.e. the MultiValueDictKeyError contains an unescaped repr of request.POST, no matter if you've added for instance @sensitive_post_parameters(""password"").

https://code.djangoproject.com/ticket/21098
",timgraham,None,2013-09-12T20:20:32Z,2014-07-20T01:20:06Z
1623,fixes Ticket 19536,"added regression test to make sure other actions are shown on change list when add is restricted
",ikks,None,2013-09-12T18:35:01Z,2014-06-29T23:59:38Z
1622,Fixed #21099 - Skip DistinctOnTests unless backend can_distinct_on_field...,"...s
",manfre,None,2013-09-12T18:33:11Z,2014-07-20T01:20:06Z
1621,Fixed #21097 - Added DatabaseFeature.can_introspect_autofield,"None of the core backends currently support can_introspect_autofield.
",manfre,None,2013-09-12T14:09:36Z,2014-06-28T15:54:22Z
1620,Added notes to docs regarding new requirement for time zone definitions,"Time zone definitions required in database for day, month, and week_day lookups.

https://code.djangoproject.com/ticket/21095
",mattaustin,None,2013-09-12T13:35:37Z,2014-07-12T09:28:55Z
1619,Remove legacy format support for template kwargs,"Clearly we'll need to Deprecate this, however as it's been marked ""legacy"" for quite some time now, can it be a ""fast"" deprecation cycle?
",funkybob,None,2013-09-12T09:10:36Z,2014-06-13T13:41:38Z
1618,Minor typo fix in django.contrib.auth.models.User docs,,pcx,None,2013-09-11T21:47:08Z,2014-07-20T01:20:08Z
1617,Fixed #21090 - Allow backends to provide dotted field path to inspectdb.,,manfre,None,2013-09-11T15:15:28Z,2014-06-12T09:05:22Z
1616,Fixed failing test introduced by 87d2750b39.,"The {% ssi %} tag in Django 1.4 doesn't support spaces in its argument.
Skip the test if run from a location that contains a space.
",loic,None,2013-09-11T11:17:31Z,2014-06-18T18:39:29Z
1615,Unsetting timezone,"this is a good first-example for using utils/unsetting.py @uses_settings() decorator.  It is rote, but simple.
",schuyler1d,None,2013-09-11T04:13:13Z,2014-06-28T08:12:22Z
1614,Unsetting mail,"allow core/mail to be imported from external libraries without settings.py being used.
",schuyler1d,None,2013-09-11T04:12:15Z,2014-06-25T22:15:35Z
1613,#unsetting: base utils/unsetting file for removing settings dependencies,"an incremental approach to remove settings dependencies

This will follow up with two other pull requests which depend on this one.  This is the base.  the others depend on this one.  Those respectively begin an approach to remove dependencies to settings.py with a decorator.  utils/timezone is a straightforward example of using @uses_settings which is in here.  The other makes core/mail independent and is another canonical example of using @uses_settings() decorator which includes decorated class methods, etc.

This is the result of the djangocon sprint with help and work from Justin Holmes, Adrian and Jacob.  Thanks everyone!
",schuyler1d,None,2013-09-11T04:11:39Z,2014-06-16T17:30:37Z
1612,Documentation -- Improved description of cache arguments,"- Fixed some grammar and formatting mistakes
- Added the type and default for `CULL_FREQUENCY`
- Made the note on culling the entire cache more precise. (It's actually
  slower on the `filesystem` backend.)
",marfire,None,2013-09-10T22:08:27Z,2014-07-20T01:20:10Z
1611,Fix broken sphinx reference to staticfiles.,,thusoy,None,2013-09-10T20:10:42Z,2014-07-20T01:20:10Z
1610,Add field_name as a key on the _html_output dict,"Updated patch and tests for https://code.djangoproject.com/ticket/5749
",e0ne,None,2013-09-10T13:10:39Z,2014-06-15T01:09:29Z
1609,Fix 21075," fix for ticket #21075

Extracted the most important information learned from the
ticket and added it to the correct section in the documentation.
Hopefully, it will spare other people the time and improve
how `management.call_command` is used.
",oz123,None,2013-09-10T12:45:24Z,2014-06-15T10:02:27Z
1608,4574 calendar classes,"Here's an update to [Trac issue #4574](https://code.djangoproject.com/ticket/4574), which applies the CSS class `nonday` to any cell in the date picker that is not a day in the month.

It also adds the CSS class `selected` to the day corresponding to the value in the date's input field.
",rca,None,2013-09-10T07:47:37Z,2014-07-18T10:33:28Z
1607,Fixed a little mistake in Django 1.7 release notes,,Diskun,None,2013-09-09T23:07:39Z,2014-07-20T01:20:12Z
1606,Handle additional bad Accept-Language header,"See https://code.djangoproject.com/ticket/21078 for details.
",jgmize,None,2013-09-09T16:51:41Z,2014-06-17T11:17:27Z
1605,Initialize bad_cookies for redefined SimpleCookie,"Fix for ticket 18403(https://code.djangoproject.com/ticket/18403)
",e0ne,None,2013-09-09T09:41:58Z,2014-07-20T01:20:13Z
1604,Fixed #19885 - cleaned up the django.test namespace,"Common testing tools - in particular, the ones referenced in the tutorial
and in the testing overview - were made importable from `django.test`.
The documentation was cleaned up to consistently refer to these
tools as being part of `django.test`.

Note that I did _not_ adjust all the internal references (in Django's own test code) to use this path. I can do that, but I'm not sure if it's necessary or desirable.

See [ticket #19885](https://code.djangoproject.com/ticket/19885).
",marfire,None,2013-09-09T09:28:10Z,2014-06-18T13:39:23Z
1603,Update documentation to warn about cost of ordering,"Patch for ticket 16895 (https://code.djangoproject.com/ticket/16895)
",e0ne,None,2013-09-08T20:00:24Z,2014-07-20T01:20:13Z
1602,Fix #20745: Don't silence TypeError raised inside templates.,"Thanks to robin for the report.
",bmispelon,None,2013-09-08T13:16:36Z,2014-06-26T05:43:52Z
1601,Fixed #17262 -- Refactor tzinfo classes,,aaugustin,None,2013-09-08T09:47:13Z,2014-07-06T22:43:23Z
1600,Fixed #2445 -- ``limit_choices_to`` attribute can now be a callable.,"- ForeignKey or ManyToManyField attribute `limit_choices_to` can now
  be a callable that returns either a `Q` object or a dict.
- The callable will be invoked at ModelForm initialization time.
- Admin form behavior modified to handle new functionality.
- Admin widget behavior modified to handle new functionality.
- Updated Django documentation field reference section.
- Added unit tests for `limit_choices_to` on ModelForms.
- Tweaked unit tests for Admin to use some callables for
  `limit_choices_to`.
",adamsc64,None,2013-09-07T21:47:54Z,2014-06-16T09:24:30Z
1599,Fixed #16869: BaseGenericInlineFormSet.save_new should use form's save() method,"https://code.djangoproject.com/ticket/16869
",polmuz,None,2013-09-07T21:39:04Z,2014-07-20T01:20:15Z
1598,Extended assertRedirects to be able to avoid fetching redirect's response,"This refers to #20919 where it explains that it would be nice to be able to
avoid fetching the final redirect page when checking if a view does the proper
redirect.

This patch adds that feature, new tests for it and modifies the docs.
",catalanojuan,None,2013-09-07T21:38:39Z,2014-07-20T01:20:15Z
1597,Ticket 13724,"This resolves an issue where when calling a method that writes to the database through some kind of relationship manager, the ORM was failing to call db_for_write in some cases.

Much thanks to @freakboy3742 and @jacobian without whom I'd have been completely lost poking around in the ORM
",paulcollinsiii,None,2013-09-07T19:40:41Z,2014-06-17T07:24:15Z
1596,#15185 -- list_display_links=None to get no links in change list grid,"#15185 (https://code.djangoproject.com/ticket/15185)

Allow ModelAdmin.list_display_links to be None so gent on links in the admin change list view grid.

I'm still not 100% convinced about the smell of allowing a variable take either None or a list/tple value. But we have a precedent with the 'actions' option.
",ramiro,None,2013-09-07T19:02:40Z,2014-06-27T04:36:04Z
1595,contrib.admin: removed condition `is_staff` from template 'base'.,,glarrain,None,2013-09-07T18:43:47Z,2014-06-21T08:59:37Z
1594,adding myself to authors file,"Alex requested I add myself in IRC, so I am.  =)
",garrypolley,None,2013-09-07T18:16:49Z,2014-07-20T01:20:17Z
1593,Fixed #20347 -- Added formset_factory absolute_max kwarg,"Added a keyword argument named absolute_max to django.forms.formsets.formset_factory(). This allows a developer to explicitly provide the absolute maximum number of forms to accept via POST, instead of relying on the former behavior limiting this to max_num + 1000. This separates the form display logic from the form processing logic.
",ethurgood,None,2013-09-07T17:58:11Z,2015-09-18T16:00:06Z
1592,Improved docs for `contrib.admin.options.ModelAdmin.response_*`,"Added links to code references in the docs for `response_add`,
`response_change` and `response_delete`.
",polmuz,None,2013-09-07T16:37:41Z,2014-07-20T01:20:18Z
1591,Ticket 16992,"URL: https://code.djangoproject.com/ticket/16992
",kedmiston,None,2013-09-07T15:41:06Z,2014-07-20T01:20:18Z
1590,Issue #20522,"Tests to verify the first and second parts of the bug (ModelAdmin.add_view and ModelAdmin.change_view, respectively). Tests confirm the first part of the bug, and don't validate the second half.

Ticket: https://code.djangoproject.com/ticket/20522
",kamni,None,2013-09-07T15:40:23Z,2014-06-17T11:08:55Z
1589,Pull request for Trac ticket #21056,,kezabelle,None,2013-09-07T13:19:26Z,2014-07-20T01:20:19Z
1588,Pull request for ticket #21063,,kezabelle,None,2013-09-07T12:32:53Z,2014-06-20T11:17:18Z
1587,"Fixed regression introduced by a962286, changed ugettext to ugettext_lazy.",,loic,None,2013-09-07T06:06:50Z,2014-07-20T01:20:19Z
1586,"Fixed regression introduced by efd1e60, 'map' returns an iterator on PY3.",,loic,None,2013-09-07T00:55:25Z,2014-07-20T01:20:20Z
1585,Fixed #20836: to_field lost when adding via raw_id_fields,"Added a selenium test that demonstrated the problem.

Started from this pull request https://github.com/django/django/pull/1417 and then fixed a couple more areas.
",sheats,None,2013-09-07T00:41:49Z,2014-06-12T06:59:26Z
1584,Fixed #21060 -- Refactored admin's autodiscover method to make it reusable.,"We want to be able to use it for instance for discovering `tasks.py` modules
inside the INSTALLED_APPS.

This commit therefore moves the logic to `autodiscover_modules` method in
django.utils.module_loading.

This closes ticket #21060.
",catalanojuan,None,2013-09-07T00:28:43Z,2014-06-12T22:24:54Z
1583,Add `response_delete` and `render_delete_form` methods to `ModelAdmin`,"Here is the ticket https://code.djangoproject.com/ticket/20558
",polmuz,None,2013-09-07T00:13:54Z,2014-07-20T01:20:21Z
1582,Fixed #12756: Improved error message when yaml module is missing.,"Running dumpdata without `pyyaml` installed will now produce a useful error message:

```
[berto@scratch]$ python manage.py dumpdata --format=yaml
CommandError: Unable to serialize database: No module named yaml
```
",rca,None,2013-09-06T22:35:17Z,2014-06-26T05:37:58Z
1581,Added myself to the contributors list for work on #21049,,mburst,None,2013-09-06T22:34:17Z,2014-07-04T13:58:09Z
1580,Fixes a TemplateDoesNotExist error that should be an ImproperlyConfigured,"See https://code.djangoproject.com/ticket/16502

By @ianawilson, @jambonrose
",ianawilson,None,2013-09-06T21:31:46Z,2014-06-25T22:15:31Z
1579,Fix debug view blowing up when a template is not given to render(),"See https://code.djangoproject.com/ticket/21058

First commit from DjangoCon 2013 by @jambonrose and @ianawilson
",ianawilson,None,2013-09-06T20:59:44Z,2014-06-18T20:38:17Z
1578,Fixed #20821 -- Added tooltips to Admin SelectBox widget,"The Admin widget, which can be used to filter multiple selects
can sometimes be too narrow and hide information such as
user permissions. This commit adds tooltips to the select
options so that a user can hover over and see the hidden text.
",rmutter,None,2013-09-06T20:50:29Z,2014-07-20T01:20:23Z
1577,added a warning about runserver --insecure in docs,"Please pull for ticket 19295 (https://code.djangoproject.com/ticket/19295).
",kedmiston,None,2013-09-06T20:45:21Z,2014-07-20T01:20:23Z
1576,Fixed #21013 -- ModelAdmin.get_queryset considered for Admin history.,"Admin history was using get_object to fetch the model instance instead
of relaying in get_queryset.

This patch modifies that behavior fixing the bug reported in
ticket #21013.
",catalanojuan,None,2013-09-06T20:36:07Z,2014-07-04T02:05:42Z
1575,Fixed #21049 -- Fixed autoreload for Python 3,"Changed th system module values check to return a list.
In Python 3 it returns a dict_view which could occassionally produce
a runtime error of ""dictionary changed size during iteration"".
",mburst,None,2013-09-06T19:57:04Z,2014-06-28T13:09:42Z
1574,Fixed #20876 -- Changed Poll class name for Question class ,"Changed the Poll class of the Django tutorial to be now Question.
Updated the tutorial with the new documentation including code and screenshots.
",rodolfo2488,None,2013-09-06T19:29:45Z,2014-07-20T01:20:24Z
1573,Fixed #20889 - Removed newline characters from mime encoding.,"Ticket: https://code.djangoproject.com/ticket/20889

Prevent newline characters from being automatically added by email.Header by specifying an infinite max line length.
",animan1,None,2013-09-06T19:25:48Z,2014-07-20T01:20:25Z
1572,Update test utils_tests/test_html.py for python3,"Python3 can't read files with binary data unless opened with 'b'.
This test passes on both python3 and python2.7 after this change.
",fluffbeast,None,2013-09-06T19:18:09Z,2014-06-30T14:40:38Z
1571,Fixed #21057: FileSystemStorage can leave temporary files around.,"This patch makes sure that the uploaded file is always closed, ensuring that temporary files get cleaned up.
",cabincode,None,2013-09-06T19:14:01Z,2014-06-12T13:45:41Z
1570,Fixed #21043 - resolve doesn't handle lazily evaluated reverses,"Use force_text to coerce object returned by reverse lazy to text.

https://code.djangoproject.com/ticket/21043
",danrjohnson,None,2013-09-06T19:11:42Z,2014-07-20T01:20:26Z
1569,#20841 - Verbose not implemented errors,"Non-Verbose 'raise NotImplementedErrors' have been been found and given useful error messages, all 94 of them (across 26 files), as discussed in https://code.djangoproject.com/ticket/20841

92 of these messages were simple base classes that had placeholder methods, and were updated with 'may/must overwrite in subclass' errors indicating the base class that required subclassing, and the method requiring overwriting. In terms of wording, 'may require' was used if the method was not essential for the use of the baseclass, whereas 'must provide' was used when it was. Mostly.

2 of these were features that seemed to be forgotten, specicially utils/regex_helper.py line number 95 and utils/dateformat.py's line number 67. 

These updated NotImplementedError instances were tested using python tests/runtests.py, and give a response of 'OK'.
",Cheekio,None,2013-09-06T19:02:36Z,2014-07-20T01:20:26Z
1568,Fixed #21021 -- Changed OGRGeomType to use 'Geometry' as the type name,"when initialized with 'Geometry' as the parameter.
",EricBoersma,None,2013-09-06T19:01:13Z,2014-06-14T01:03:35Z
1567,re-indented method documentation within RelatedManager,"My de-indentation of the method documentation caused a Sphinx build error. I re-indented the methods to their previous level so Sphinx can find them properly.
",technivore,None,2013-09-06T18:57:00Z,2014-07-20T01:20:27Z
1566,Fixed #11857 -- Added missing 'closed' property on TemporaryFile class.,#NAME?,adamsc64,None,2013-09-06T18:37:33Z,2014-07-09T10:12:33Z
1565,"fixes #19988, allow html in ordinal for humanize","I've updated the humanize function to fix the i18n issue of not allowing html to do the `<sup>` for some languages.  In particular the french translation. 

Ticket: https://code.djangoproject.com/ticket/19988

``` pthon
(djancon-sprint)➜  tests git:(#19988-ordinal-html-i18n-fix) ./runtests.py django.contrib.humanize
Creating test database for alias 'default'...
Creating test database for alias 'other'...
.............
----------------------------------------------------------------------
Ran 13 tests in 0.102s

OK
Destroying test database for alias 'default'...
Destroying test database for alias 'other'...
```
",garrypolley,None,2013-09-06T18:11:38Z,2014-06-13T00:49:31Z
1564,12756 import error for serializer missing yaml module,"When the `pyyaml` package is not installed, raise an `ImportError` rather than saying the serializer does not exist.
",rca,None,2013-09-06T17:52:07Z,2014-07-20T01:20:28Z
1563,Fixed #20372 -- Fixed admin to use consistent templates,"Use registration/login.html and registration/logged_out.html.

https://code.djangoproject.com/ticket/20372
",alexisbellido,None,2013-09-06T17:48:21Z,2014-07-18T02:59:56Z
1562,Test and patch errors with unknown languages,"Test for two edge cases:

If an issued occurred on the filesystem and the .po files are no longer accessible, instead of raising an IOError, fails with ambiguous:

> AttributeError: 'NoneType' object has no attribute '_info'

Related:
https://code.djangoproject.com/ticket/18192
https://groups.google.com/forum/#!msg/django-users/tc0asF6iFBo/u3cBN0SlUl0J

Second case: if trying to implement a language that django does not recognize (eg Inuktitut) translations fail with same error.  Ticket: https://code.djangoproject.com/ticket/21055
",beck,None,2013-09-06T17:33:49Z,2014-06-12T18:18:38Z
1561,Fixed #20812 -- Error out if __unicode__/__str__ doesn't return a text type.,"Ticket: https://code.djangoproject.com/ticket/20812
",apollo13,None,2013-09-06T17:18:49Z,2014-07-19T22:25:54Z
1560,Related Fields documentation improvements,"I added a note regarding the RelatedManager's automatic calling of save() on model instances for add(), create(), remove(), and clear(), and added a section at the of the document on direct assignment of related object sets.
",technivore,None,2013-09-06T17:07:30Z,2014-07-20T01:20:30Z
1559,Fixed #4287 -- Fixed NaN and +/- Infinity handling in FloatField,"NaN, +Inf, and -Inf are no longer valid values for FloatFields.
",dlanger,None,2013-09-06T17:07:12Z,2014-06-21T01:02:24Z
1558,ISSUE #20975 Modifies indentation to prevent the creation of dozens of definition lists,"As per: https://code.djangoproject.com/ticket/20975
",animan1,None,2013-09-06T15:57:36Z,2014-07-20T01:20:30Z
1557,"ignore build directory, so it doesn't accidentally get committed","When following the install file to start working on Django the first thing I did was,

``` sh
python setup.py install
```

This created a `build/` directory.  Since the directory is not in the .gitignore it makes it appear as if I've changed part of Django before I've begun to hack.  I don't think the `build/` directory should be allowed into source control, so it should be explicitly ignored. 

This may not be desired, and possibly I should place that in my global .gitignore.  

Thoughts? 
",garrypolley,None,2013-09-06T15:29:33Z,2014-06-15T18:32:48Z
1556,Fixed #20007  -- Configured psycopg2 to return UnicodeArrays,"Note: To verify that this fix works correctly, you must run tests using a PGSQL backend. Non-PGSQL backends will simply skip the test.
",EricBoersma,None,2013-09-06T15:22:21Z,2014-07-20T01:20:31Z
1555,django.contrib.auth - passing user to set_password_form and password_reset_confirm template,"SetPasswordForm has access to User instance but only after POST.
Wouldn't it be useful to have access for it all the time?

My client requirement is to add ""security question"" that user pick upon registration and needs to answer before resetting password. ATM I can't implement it using ""password_reset_confirm"".

cheers.
",fsw,None,2013-09-06T11:31:06Z,2014-07-12T23:47:47Z
1554,Cookies settings refactor,"See ticket #21051 (https://code.djangoproject.com/ticket/21051#ticket)
",ramiro,None,2013-09-06T11:21:37Z,2014-06-15T07:21:02Z
1553,Fixed #21035 -- Changed docs to treat the acronym SQL phonetically. ,,EricBoersma,None,2013-09-05T22:26:48Z,2014-07-20T01:20:32Z
1552,Fixed #21047 -- Added CLA mesage on the new contributor advice doc,,micahhausler,None,2013-09-05T21:18:42Z,2014-06-29T21:23:49Z
1551,Fixed #21047 -- Added CLA mesage on the new contributor advice doc,"See ticket https://code.djangoproject.com/ticket/21047
",micahhausler,None,2013-09-05T17:01:27Z,2014-07-20T01:20:33Z
1550,Fixed #21037 -- Made MigrationWriter raise a ValueError when serializing lambda functions.,,loic,None,2013-09-05T03:39:44Z,2014-06-24T01:46:51Z
1549,"Removed ""makemigrations --force"" from docs since it doesn't actually exist.",,loic,None,2013-09-04T19:34:32Z,2014-07-20T01:20:34Z
1548,Fixed #21033 -- Uploaded file's name truncates to 255 not in all cases,,homm,None,2013-09-04T16:11:35Z,2014-06-12T07:52:33Z
1547,Simplify FilterExpression.args_check,"Simplify the template parser code which verifies the number of arguments passed to filters.
",funkybob,None,2013-09-04T11:24:43Z,2014-06-13T11:58:42Z
1546,mark methods passed through wsgi META with do_not_call_in_templates,"WSGI servers such as Werkzeug pass callable methods that should NOT be called when the META structure is printed in places such as the debug response handler.  http://werkzeug.pocoo.org/docs/serving/#shutting-down-the-server

When a Django view throws an error (with DEBUG=True) and is hosted by Werkzeug, it causes the server to silently shut down because the Django error page is blindly calling the shutdown method in order to pretty print the result for the error page.
",ericbuehl,None,2013-09-03T21:21:42Z,2014-07-01T04:55:32Z
1545,Fixed #21029 -- schema editors abort on exception,"It's missing tests and there might be a better way to do this, see [the ticket](https://code.djangoproject.com/ticket/21029#ticket).
",koniiiik,None,2013-09-03T17:33:45Z,2014-06-12T13:45:38Z
1544,Fixed #20920 -- Consolidated F() and Q() documentation,,evildmp,None,2013-09-03T16:52:49Z,2014-07-13T19:49:48Z
1543,Fixed #21019 force_text fails on class object with __unicode__ instance ...,,drtyrsa,None,2013-09-02T07:41:48Z,2014-07-17T10:05:35Z
1542,Fixed #20978 -- MigrationWriter.serialize and closures.,,loic,None,2013-09-01T18:28:45Z,2014-06-13T02:27:32Z
1541,Fixed a couple of issues with MigrationLoader.load_disk.,,loic,None,2013-09-01T18:15:17Z,2014-07-20T01:20:37Z
1540,Fixed #20977 -- Allows writing migrations to disk on Python 3,"The ticket is at https://code.djangoproject.com/ticket/20977
",MarkusH,None,2013-09-01T15:47:40Z,2014-07-03T20:53:00Z
1539,Fixes #21012 -- New cache API to avoid connection exhaustion.,"Provide a dict of caches to avoid creating multiple instances of the caches configured in CACHES.

Still needs tests and some more docs.
",funkybob,None,2013-09-01T10:05:58Z,2014-06-21T03:31:01Z
1538,Fixed #20973 -- Document serving static files without django.contrib.staticfiles.,,loic,None,2013-09-01T04:07:46Z,2014-07-20T01:20:38Z
1537,Fixed #21010 -- Changed ModelState to only copy _meta.local_fields.,,loic,None,2013-08-31T21:19:33Z,2014-07-20T01:20:38Z
1536,Fixed #21008 -- Made MigrationWriter handle Promise objects.,,loic,None,2013-08-31T19:13:03Z,2014-07-20T01:20:39Z
1535,Made the doc about translating constant strings in templates more prominent.,,loic,None,2013-08-31T11:46:13Z,2014-06-16T02:20:14Z
1534,Fixed #16096 - Add origin attribute to template instances.,"Adding a pull request for this ticket:

https://code.djangoproject.com/ticket/16096
",prestontimmons,None,2013-08-30T19:58:22Z,2014-06-12T13:45:44Z
1533,Fixed #3214 -- Support batch custom sql loading (db-dependant),,claudep,None,2013-08-30T16:25:29Z,2014-07-14T21:44:48Z
1532,Fixed #20998 -- Allow custom (de)serialization for GIS widgets,"Thanks Mathieu Leplatre for the report and the initial patch.
",claudep,None,2013-08-30T08:52:16Z,2014-07-20T01:20:40Z
1531,Fixes #21000 Session cached_db backend doesn't use SESSION_CACHE_ALIAS,,chicheng,None,2013-08-30T04:04:50Z,2014-06-18T00:21:57Z
1530,"Fixed #20999 - Allow overriding formfield class with choices, without subclass restrictions.",,carljm,None,2013-08-30T03:46:50Z,2014-06-12T06:31:58Z
1529,forms.widgets -- fix __all__,"django.forms is missing the 'SplitHiddenDateTimeWidget' property. This fixes that.
",r3m0t,None,2013-08-29T14:20:17Z,2017-10-18T16:51:26Z
1528,"Fixed #3544, #12064, #16147 -- {% include %} behavior","Merged BaseIncludeNode, ConstantIncludeNode and Include node.

This avoids raising TemplateDoesNotExist at parsing time, allows recursion
when passing a literal template name, and should make TEMPLATE_DEBUG behavior
consistant.
",funkybob,None,2013-08-29T09:05:55Z,2014-06-12T06:59:08Z
1527,Fixed #7116 -- Optimize RequestContext construction,"Instead of pushing a separate dict for each TEMPLATE_CONTEXT_PROCESSOR,
merge them into one dict and update once.  This results in a shallower
context stack, meaning faster variable lookups.
",funkybob,None,2013-08-29T04:09:36Z,2014-07-10T10:17:23Z
1526,Fixed #20881 -- Removed contrib.auth.models.AbstractUser.get_absolute_url(),"The definition is arbitrary and creates a broken ""view on site""
link in the admin if a project doesn't define such a URL.

IMO, this can be considered a bug fix and not require a deprecation. Let me know if you disagree.
",timgraham,None,2013-08-29T00:07:56Z,2014-06-20T21:17:44Z
1525,Allow {% include %} to be passed a Template,"Addresses #17356
",funkybob,None,2013-08-28T12:18:21Z,2014-07-20T01:20:43Z
1524,Minor spelling correction in ModelForms docs,,pcx,None,2013-08-28T10:39:23Z,2014-07-20T01:20:43Z
1523,Fixed #20988 -- Added model meta option select_on_save,"The option can be used to force pre 1.6 style SELECT on save behaviour.
This is needed in case the database returns zero updated rows even if
there is a matching row in the DB. One such case is PostgreSQL update
trigger that returns NULL.

Refs #16649
",akaariai,None,2013-08-28T10:24:37Z,2014-06-20T08:59:04Z
1522,Select on save (1.6 version),,akaariai,None,2013-08-28T10:24:12Z,2014-06-12T06:59:41Z
1521,Fix in MySQL converters for one item sequences,"MySQLdb1 currently has a bug that produces incorrect SQL when dealing with one item sequences, closed as wontfix. This bug is reported in https://github.com/farcepest/MySQLdb1/issues/10

What this means, is that in Django when executing the following query with latest MySQLdb driver:

```
cursor.execute(""SELECT * FROM table WHERE id IN %(ids_param)s"", (1,))
```

Produces the following SQL (watch the trailing comma):

```
SELECT * FROM table WHERE id IN (1,)
```

Which obviously is not valid SQL and fails. 

This patch adds a converter function to the MySQL backend that deals with one item sequences correctly. As the author is not fixing this behavior, I considered correctly add this workaround to Django, hopefully find more  comprehension. 

I haven't added acceptance tests for this behavior, if necessary, please point me for the right location to add them.

Thanks, cheers,
Miguel
",maraujop,None,2013-08-28T09:54:55Z,2014-07-20T01:20:44Z
1520,Fixed #20986 -- Enabled SelectDateWidget to customize the months select widget.,,loic,None,2013-08-28T06:24:30Z,2014-07-20T01:20:45Z
1519,Fixed bug #2818 with another side of ForeignKey. Missed condition detail in a89b156 commit,"As we can see, in https://code.djangoproject.com/ticket/2818 we have fixed bug in django admin behavior with joins - we should use distinct in this cases. Commit 4938c8e fixed this issue.
But, in a89b156 it was reworked as set of codelines for enhanced conditions. To check for possible joins, was created function lookup_needs_distinct. It looks for field by name(for example, in 'user__docs__name' it takes 'user') and does some checks to verify is it relation object.
As we can see, RelatedObject(any relation) and ManyToManyRel(reverse side of ManyToMany) handled. But, we also have reverse side of ForeignKey - ManyToOneRel. So yea, we have a problem here - appearance of bug #2818. So I decide to create this pull request. At least, it works perfectly for me.
FYI, I'm not checking for OneToOneRel, because there should be no duplications in this case.
",iorlas,None,2013-08-27T10:05:19Z,2014-06-15T07:21:04Z
1518,Fixed #20983 Docs: Update app package classifiers example in setup.py,"https://code.djangoproject.com/ticket/20983
",chicheng,None,2013-08-27T08:25:15Z,2014-06-18T12:05:42Z
1517,Fixed #10164 -- Made AutoField increase monotonically on SQLite,"Import patch, add test and documentation.

https://code.djangoproject.com/ticket/10164
",qris,None,2013-08-27T07:50:38Z,2014-06-15T09:36:14Z
1516,Fixed #20981 – Inform about default value of disable_existing_loggers.,,KrzysiekJ,None,2013-08-27T00:04:03Z,2014-06-14T05:08:23Z
1515,Fixed #20972 -- Make messages cookie follow session cookie secure/httponly,"https://code.djangoproject.com/ticket/20972
",mxsasha,None,2013-08-26T19:35:12Z,2014-07-20T01:20:46Z
1514,Rewrite of the file based cache backend,"Fixes for trac tickets #20536, #15825 and #15806
- Safer for use in multiprocess environments
- Better random culling, only counts and deletes real cache files
- Cache files use less disk space
- Safer clearing, only delete actual cache files, does not delete the entire cache dir.
- Less error swallowing, I've only handled the errors I could reproduce

Backwards incompatible changes:

Got rid of the nested directories. Cache files can now be created atomically (by writing to a temp file and then renaming). I cannot find a compelling reason to keep using the nested directories. Only FAT32 seems to have a directory entries limit, but the default MAX_ENTRIES of 300 does not reach this limit by far.

gzip the value pickle. This adds some slight CPU overhead on write (no noticeable overhead on read), but makes the cache files smaller, improving disk write/read performance.

Passes all the tests (Linux/py27, test_sqlite settings) and raises no errors on a script I created that uses multiprocessing to do lots of concurrent cache read/writes to the same key.

Performance is about the same as the current FileBasedCache backend.
",jaap3,None,2013-08-26T15:21:01Z,2015-11-26T11:27:12Z
1513,Fixed typo in docs/topics/conditional-view-processing.txt,"Just noticed a small error while reading the documentation.
I did not re-adjust the word-wrap in the commit to make the diff easier to read.
",jboecker,None,2013-08-26T09:46:28Z,2014-06-16T12:20:16Z
1512,Correct instructions for running contrib unit tests,"I had trouble getting unit tests running for a specific contrib app following the instructions provided.

It seemed that everything was correct, except the mention of using the fully qualified path. Not sure if things got changed or what, but this worked for me.
",mattrobenolt,None,2013-08-26T02:08:01Z,2014-07-20T01:20:47Z
1511,DON'T MERGE -- Add further tests for #19949.,,ramiro,None,2013-08-25T00:29:40Z,2014-07-20T01:20:48Z
1510,[#20930] Added funtionality to perform simple operations (+-*/) on aggregates.,"Related to ticket https://code.djangoproject.com/ticket/20930
",debanshuk,None,2013-08-23T20:09:03Z,2014-09-01T00:00:12Z
1509,"Fixed #18171 -- Properly check signature of authenticate(), and don't hide TypeErrors.","The current auth backend code catches TypeError to detect backends that
do not support specified arguments. As a result, any TypeErrors raised
within the actual backend code are silenced.

In Python 2.7+ and 3.2+ this could be avoided through using
inspect.getcallargs(). With this method, we can test whether arguments
match the signature without actually calling the function, and therefore
distinguish real TypeErrors.

https://code.djangoproject.com/ticket/18171
",mgorny,None,2013-08-23T16:04:04Z,2014-07-20T01:20:48Z
1508,Added refs to python documentation. Made minor language fixes.,"This is a small modification to the documentation, replacing `code` by intersphinx refs to python documentation when it is justifiable.
I also made some minor tweaks on the English.

This is my first pull request, that is why is so minor. It is part of my way on learning on how to commit to Django.

I intend to continue to review the documentation until I feel confortable enough to change code.
",jorgecarleitao,None,2013-08-23T13:35:44Z,2014-07-20T01:20:48Z
1507,first try at cleaning up custom assertions.," changed `asserttemplateused` and `assertcontains` functions

https://code.djangoproject.com/ticket/20918
",ersran9,None,2013-08-22T17:57:14Z,2014-07-04T20:54:41Z
1506,Allow for out-of-band xsrf tokens,"There have become several situations where control for something that will inevitably come back as a callback (via POST) will not include the proper CSRF token... however the callback URI can (and should) be adorned with one.

Examples are using oneall's social login service which requires a callback for extra processing.  Decorating the CSRF requirements away does not help protect against unmanageable situations.

An unmanagable situation would be where we all assume a service will be using security reasoning when developing a project.  Oneall.com uses pseudo random UUIDs when passing an important bit of information back to a callback.  If they ever switch to incremental or predictable hashes (due to a mistake on their end or perhaps a bad decision) an exploit can occur that requiring the csrf token could help mitigate.  In this case the token would have to be passed via GET parameters.

This can be extended to OAUTH behaviors as well.

There are a lot of other services.. including mail outs.. that use callbacks for send notifications that could be adorned with a token as well.
",whardier,None,2013-08-22T16:36:02Z,2014-07-20T01:20:49Z
1505,Documentation -- Clarified use of 'view' in test client introduction,"The line ""Test that the correct view is executed for a given URL""
is at best ambiguous: the test client doesn't offer any special support
for determining the view function (or class) that was called. It does
detail the templates that were rendered, but those may or may not be in
a one-to-one relationship with view functions.

There are ways to determine the view function (using `django.core.urlresolvers.resolve`,
for example) but they don't really have anything to do with the test client. (See [here](http://stackoverflow.com/q/3669345/2395796)
for an example of the confusion.)

So the language was clarified to refer specifically to templates. Since
the list of features seemed stunted with only two entries, a new one
was added.
",marfire,None,2013-08-22T08:53:45Z,2014-07-20T01:20:49Z
1504,Removed useless check,,koorgoo,None,2013-08-22T07:58:05Z,2014-07-20T01:20:50Z
1503,Fixed #20922 -- Allowed customizing the serializer used by contrib.sessions,"https://code.djangoproject.com/ticket/20922

This is a patch for master.
1.6.x backport will be quite similar (some versionadded/changed differences in the docs).
1.5.x patch: https://github.com/django/django/pull/1488
",timgraham,None,2013-08-22T00:42:20Z,2014-06-18T03:08:22Z
1502,Documentation -- Corrected error about Model.full_clean(),"Although the `ModelForm` validation code was changed to call
`Model.full_clean()`, the documentation still said otherwise. The
offending phrase was removed.

(A corrected version of [pull request 1497](https://github.com/django/django/pull/1497))
",marfire,None,2013-08-21T19:58:13Z,2014-07-20T01:20:50Z
1501,Fixed #19949 -- Cached template loader now caches TemplateDoesNotExist,"https://code.djangoproject.com/ticket/19949 Thanks @timgraham @jdunck for the code reviews. Thanks Kronuz for the bug report and initial code patch.  :+1: 
",ArcTanSusan,None,2013-08-21T18:23:26Z,2014-06-15T03:28:03Z
1500,clarified some tags and filters,"I have clarified the descriptions of some tags and filters. The biggest changes are to cycle, filter, for, capfirst, and title.

This is my first push and I'm not much of a git expert. Please forgive any screwups.

~~ Paul
",Paul-C-Anagnostopoulos,None,2013-08-21T18:08:17Z,2014-07-20T01:20:51Z
1499,Fixed #20934 -- Avoided NoReverseMatch in ModelAdmin.changelist_view,"The view tried to display links to a ModelAdmin's change_view, which
resulted in NoReverseMatches if get_urls was overridden to remove the
corresponding url.
",koirikivi,None,2013-08-21T16:25:20Z,2014-06-22T19:47:34Z
1498,Added myself to the committers list.,,evildmp,None,2013-08-21T14:15:43Z,2014-07-09T14:57:14Z
1497,Documentation -- Corrected error about ModelForm validation,"The documentation on Model validation rightly states: ""Note that
`full_clean()` will not be called automatically when you call your model's
`save()` method, nor as a result of `ModelForm` validation.""

The documentation on `ModelForm` validation incorrectly states: ""Model
validation (`Model.full_clean()`) is triggered from within the form
validation step.""

The erroneous reference to `Model.full_clean()` was removed.
",marfire,None,2013-08-21T06:29:53Z,2014-07-20T01:20:52Z
1496,Documentation -- Noted that OneToOneField doesn't respect unique argument,"Added `OneToOneField` to the list of model fields for which the `unique`
argument isn't valid. (`OneToOneFields` are inherently unique, and if
the user supplies a value for `unique` it is ignored / overwritten.)
",marfire,None,2013-08-21T04:12:58Z,2014-07-20T01:20:53Z
1495,Fixed #14226 -- dependency calculation for complex M2M relations,"See https://code.djangoproject.com/ticket/14226#comment:13 for details

I also refactored sort_depencies a tiny bit to make it more readable. I made a separate commit for this, since it shouldn't change behaviour and I'd rather keep that explicit. The commits can of course be squashed if that's preferred.

All tests pass under sqlite and postgres.
",koirikivi,None,2013-08-21T01:37:45Z,2014-07-05T07:36:25Z
1494,Added myself to the committers list.,,evildmp,None,2013-08-20T21:00:56Z,2014-07-04T14:17:12Z
1493,Fixed a regression with get_or_create and virtual fields.,"refs #20429
",timgraham,None,2013-08-20T18:21:27Z,2014-07-09T14:57:14Z
1492,Fixed #20933 -- Allowed loaddata to load fixtures from relative paths.,"Ticket: https://code.djangoproject.com/ticket/20933
Needs a 1.6 backport!
",apollo13,None,2013-08-20T17:09:31Z,2014-06-24T21:16:55Z
1491,Fixed #20944 -- Remove inaccurate statement about View.dispatch().,"Needs backporting to 1.5.X and 1.6.X.
",mjtamlyn,None,2013-08-20T09:31:58Z,2014-07-20T01:20:56Z
1490,Fixed #20945 -- Allow cache tag to use a specific cache,"This PR adds two features:
1) Have cache tag use the cache called ""template_fragments"" if it exists, otherwise use ""default"".

2) Allow specifying which cach to use on a specific cache tag:
{% cache ....... using=""cachename"" %}

https://code.djangoproject.com/ticket/20945
",funkybob,None,2013-08-20T07:10:44Z,2014-06-14T01:45:56Z
1489,Fixed #12422 -- Don't override global email charset behavior for utf-8.,"Thanks simonb for the report, Claude Paroz and Susan Tan for their work
on a fix.
",ramiro,None,2013-08-19T23:08:07Z,2014-06-27T21:01:43Z
1488,[1.5.x] Fixed #20922 -- Allowed customizing the serializer used by contrib.sessions,"https://code.djangoproject.com/ticket/20922
",timgraham,None,2013-08-19T14:03:24Z,2014-06-12T07:56:12Z
1487,"Fixed #20936: When logging out/ending a session, don't create a new, empty session","Previously, when logging out, the existing session is overwritten by a
new sessionid instead of deleting the session all together.

This behavior adds overhead by creating a new session record in
whichever backend being used, db, cache, etc.

This extra session is unnecessary at the time since no session data
is meant to be preserved when explicitly logging out.
",mattrobenolt,None,2013-08-19T06:34:54Z,2014-07-04T09:11:18Z
1486,Fixed test for mssql,"mssql has a limit of 2100 parameters
",denisenkom,None,2013-08-18T04:30:45Z,2014-06-18T18:39:50Z
1485,Fixed #20640 -- Avoid NoReverseMatch in get_deleted_objects,"The default delete action resulted in a NoReverseMatch if it were to
list any Model with a ModelAdmin with `get_urls` overridden to remove
the change url.  Catching the error and not displaying the link in that
case, as was already done for models with no registered admins.
",koirikivi,None,2013-08-17T23:50:10Z,2014-07-03T09:42:48Z
1484,Added funtionality to perform simple operations (+-*/) on aggregates.,"Related to ticket #20930.
",debanshuk,None,2013-08-17T19:27:33Z,2014-07-20T01:20:59Z
1483,Fixed #17413 -- Serialization of form errors along with all metadata.,,loic,None,2013-08-17T08:04:28Z,2014-06-28T13:08:50Z
1482,remove redundant import,"remove redundant import
",shao362,None,2013-08-17T04:27:05Z,2014-07-20T01:21:00Z
1481,Fixed #5335 -- Changed ErrorDict to be a subclass of defaultdict.,,loic,None,2013-08-16T20:29:37Z,2014-06-17T10:11:31Z
1480,Fix proxy instance equality,"This is a WIP patch for [#14492](https://code.djangoproject.com/ticket/14492).

It makes proxy instances equatable with model instances and other proxy instances.
",ryankask,None,2013-08-16T14:14:16Z,2014-06-14T04:48:23Z
1479,Proxy __len__ and __contains__ for LazyObject,"Regression test and patch for ticket #20924.
",nickbruun,None,2013-08-15T19:01:45Z,2014-07-20T01:21:01Z
1478,Made Model.__eq__ consider proxy models equivalent,"This pull request fixes tickets #11892, #16458, #14492 and #20777.
",akaariai,None,2013-08-15T07:13:14Z,2014-06-13T07:13:47Z
1477,Avoid CSRF token discovery via BREACH attack by masking with a random value,"Patch for [ticket 20869 in trac](https://code.djangoproject.com/ticket/20869), using the same approach as the Rails patch mentioned in the first comment there.

Avoids CSRF token discovery via BREACH by XORing the token in the body with a value generated anew each request (actually, each time `get_token` is called) & storing said value alongside it.
",excitedleigh,None,2013-08-15T00:58:30Z,2015-03-14T22:57:54Z
1476,ticket_20920 (work in progress),"https://code.djangoproject.com/ticket/20920
# Summary
- created docs/ref/models/queries as a reference document for `F()` and `Q()`
- moved some discussion of `F()` from docs/ref/models/instances into the new document
- added references to docs/ref/models/queries in contents pages
",evildmp,None,2013-08-15T00:17:12Z,2014-06-30T06:52:02Z
1475,Updated docs following deprecation of django.views.defaults.shortcut,"Originally the deprecation was planned for Django 2.0, but it has been brought forward in 3f2befc. This pull request updates the deprecation timeline docs, and updates one other reference to the old location of the shortcut view.
",alasdairnicol,None,2013-08-14T23:35:57Z,2014-07-20T01:21:02Z
1474,Fixed #20922 -- Customizable serializers for signed_cookie sessions,"Refactor the signed cookie session backend to allow subclassers to use a different serializer implementation.

For [Ticket #20922](https://code.djangoproject.com/ticket/20922#ticket)
",gavinwahl,None,2013-08-14T21:53:02Z,2014-07-20T01:21:02Z
1473,Ticket 20869,"Make GzipMiddleware BREACH resistant by calling flush at a few randomly selected points when starting to compress a file to randomize its length.  To prevent averaging attacks the random number generator is seeded by the hash of the data to compress, so while the same data sent twice will be compressed the same way, two different files will not be able to be meaningfully compared to one another.  
",adamdeprince,None,2013-08-14T17:52:36Z,2014-06-16T17:19:15Z
1472,"Fixed #20709: Allow {% widthratio %} to accept an ""as""-parameter.","Allow {% widthratio %} to accept an ""as""-parameter.

https://code.djangoproject.com/ticket/20709
",jonathanslenders,None,2013-08-14T14:21:07Z,2014-06-16T18:51:41Z
1471,#20915 -- Remove django.test.client dependency on django.contrib.auth,"See https://code.djangoproject.com/ticket/20915

This proof of concept simply makes Client accept a module name that should implement the generic

login()
logout()
authenticate()
get_user_module()

API today provided by d.c.auth (that servers as a frontend to the auth backends extensibility).

What do you think? Too ugly/hackish?
",ramiro,None,2013-08-14T11:40:39Z,2014-06-13T19:20:46Z
1470,"Fixed overflow for the ""Recent Actions"" widget on the admin index.",,loic,None,2013-08-13T10:39:16Z,2014-07-20T01:21:03Z
1469,Fixed #11400 Passed kwargs from AbstractUser.email_user() to send_mail(),"Also, I added a test to email_user. I edited
the contrib_auth doc and 1.7.txt to reflect new changes.
Thanks Jug_ for bug report and @timgraham for code review. :thumbsup: 

https://code.djangoproject.com/ticket/11400
",ArcTanSusan,None,2013-08-13T07:51:17Z,2014-06-18T20:09:43Z
1468,Fixed Dutch translation,"This fixes ticket: #20901

https://code.djangoproject.com/ticket/20901
",bliksemman,None,2013-08-12T14:16:40Z,2014-07-20T01:21:04Z
1467,Fixed bug in paginator when QuerySet is generated with objects.extra(),"The paginator relies on the `count()` method on a QuerySet. When a QuerySet is generated with a call to `objects.extra()`, however, the `count()` method is unavailable. It will return with a `DatabaseError: no such column 'foo'`. The other viable option is to take the length of the list of objects in the QuerySet. This is already implemented when the `count()` method can't be accessed for other reasons, so the only thing to do is add `DatabaseError` to the except clause.
",mattr555,None,2013-08-12T02:38:08Z,2014-07-20T01:21:04Z
1466,Fixed #20895 -- Made check management command warn if a BooleanField doe...,"...s not have a default value

Thanks to Collin Anderson for the suggestion.

This is my first code patch for Django, so any feedback is welcome, I'm happy to make any changes that are required. 

In particular, I wasn't sure whether monkey patching the field default was the best approach, but I couldn't see the best way to check the model in one particular test but not the others.
",alasdairnicol,None,2013-08-11T22:16:20Z,2014-06-12T11:30:36Z
1465,Fixed #20893 in Reusable-App Doc.,,Glank,None,2013-08-11T07:41:16Z,2014-07-20T01:21:05Z
1464,clarified misleading wording about squashing commits,,evildmp,None,2013-08-10T21:37:19Z,2014-07-06T06:14:13Z
1463,Ticket 20877 performance documentation (work in progress),"Work in progress. Please comment here, or at https://code.djangoproject.com/ticket/20877, or on the developers email list.
",evildmp,None,2013-08-10T20:07:29Z,2014-06-18T01:19:51Z
1462,Added a missing import on Class Based View introduction example,"There's a missing import on the Class Based View introduction documentation example.
",andreaugusto,None,2013-08-10T15:35:33Z,2014-06-19T05:59:22Z
1461,Fixing tiny typo in 2ac89012d8ff750ea5443b6f6f347dacb697e059 (refs #12288),,dominicrodger,None,2013-08-09T12:56:51Z,2014-06-24T10:25:32Z
1460,Improved queryset handling and docs for (Single|Multiple)ObjectMixin.,"ML discussion on this issue: https://groups.google.com/d/topic/django-developers/qFE78ZpDP6A/discussion
",loic,None,2013-08-09T10:38:49Z,2014-07-17T18:51:54Z
1459,Fixed #20883 -- Made multi-table inheritance look for explicit parent_link in abstract parents.,,loic,None,2013-08-09T08:43:33Z,2014-06-19T10:16:22Z
1458,"notes on managing @cached_property, other uses for it",,evildmp,None,2013-08-08T12:37:42Z,2014-07-07T09:08:54Z
1457,Clarify meaning of models.User.is_authenticated(),"I think the final sentence of the current explanation of is_authenticated() is a bit confusing, giving the impression that there is actually some kind of check to determine whether request.user has been populated by AuthenticationMiddleware, whereas the reality is that this method returns True always for any User instance from your database, even if it comes from a query that has nothing to do with the current logged-in user.
",jaimeirurzun,None,2013-08-08T11:58:02Z,2014-06-19T04:54:39Z
1456,Cleaned up handling of the primary_key argument of AutoField.__init__.,,loic,None,2013-08-08T10:09:28Z,2014-07-14T13:34:55Z
1455,Ticket 20870v2,"Additional notes on @cached_property
",evildmp,None,2013-08-08T09:56:20Z,2014-06-12T17:07:10Z
1454,Signed timed csrf - NOT FOR MERGE YET,"This is still WIP, but beginning to get close enough for comments.

The main idea is:
1) Use a signed cookie for CSRF
2) If CSRF_TOKEN_MAX_AGE is set, then the token is not the cookie itself, but signed with a future timestamp. In this case the validation of the token makes sure it hasn't expired
3) the csrf_token tag takes arguments; it can take a non-default max-age, and it can output just the token (without the input field) for easier inclusion in scripts (since with age limitation, the scripts can no longer use the value from the cookie)
4) Even when CSRF_TOKEN_MAX_AGE is not set, a specific view can require age limitations. It cannot specify the limit, because that is set at ""the other end"" (when the token is generated, not validated). This is done via a decorator (that isn't there yet).

Missing, still, are the decorator, tests for the new tag behaviors, and documentation.

Comments welcome.
",shaib,None,2013-08-07T22:33:09Z,2014-06-29T13:22:47Z
1453,Fixed #20484 again -- added note to field documentation,,chrismedrela,None,2013-08-07T18:58:55Z,2014-07-20T01:21:08Z
1452,Ticket 20870 - document @cached_property,"Replaces closed pull request https://github.com/django/django/pull/1449

https://code.djangoproject.com/ticket/20870
https://groups.google.com/forum/#!topic/django-developers/MytkDIgZ9kA
",evildmp,None,2013-08-07T18:01:24Z,2014-06-24T04:20:51Z
1451,(updated) added .strip() to username for AuthenticationForm .clean(),"The Authentication form, does not validate the username field, 
if there are extra spaces at the end or the beginning in the string.

Which shouldnt really be the case.
",bkvirendra,None,2013-08-07T17:25:59Z,2014-07-20T01:21:09Z
1450,added .strip() to username for AuthenticationForm .clean(),"The Authentication form, does not validate the username field, 
if there are extra spaces at the end or the beginning in the string. 

Which shouldnt really be the case. 
",bkvirendra,None,2013-08-07T16:33:04Z,2014-07-20T01:21:10Z
1449,"Ticket 20870 - document @cached_property, restructure topics/cache.txt","There's a fuller explanation of `@cached_property` in ref/utils.txt, and a pointer to that from topics/cache.txt.

The latter has been restructured so that general optimisation notes are not buried at the bottom of the caching framework section. Future notes on optimisation will find a place in the `General optimization tools` section.

https://code.djangoproject.com/ticket/20870
https://groups.google.com/forum/#!topic/django-developers/MytkDIgZ9kA
",evildmp,None,2013-08-07T16:29:56Z,2014-06-17T20:12:49Z
1448,Fixed #20828 -- Modified @permission_required to take a list as argument,"The @permission_required accepts a list as well as a single parameter
",ersran9,None,2013-08-07T16:10:26Z,2014-06-15T18:00:08Z
1447,Use `usegmt` flag in formatdate [tiny change],"This is slightly cleaner and faster than string manipulation.

Assuming patch is trivial enough not to warrant a Trac ticket.

This flag has been available since Python 2.4:
http://docs.python.org/2/library/email.util.html#email.utils.formatdate
",evansd,None,2013-08-07T11:04:59Z,2014-07-20T01:21:10Z
1446,Update create_template_postgis-debian.sh,"now, the lastest stable version of postgis is 2.0, so I hope add this version to ubuntu auto create database script. so I can use it directly next time
",DeronW,None,2013-08-07T09:55:06Z,2014-06-12T06:59:22Z
1445,12288 Added new check on INSTALL_APPS for unique values,"https://code.djangoproject.com/ticket/12288 Removing lines 110-111 in django/django/conf/**init**.py causes the test to fail, but putting in the lines 110-111 allow tests to succeed. I've confirmed that the test works. In addition, the full Django test suite all passed. Thanks  @timgraham @jdunck @charettes for the advice and code review. 

 I'll appreciate feedback; feel free to code review. Thanks. 
",ArcTanSusan,None,2013-08-07T08:08:05Z,2014-06-13T06:06:53Z
1444,Fixed #9532 -- min_num on formsets,"Added min_num parameter to formsets.
",yokomizor,None,2013-08-07T02:26:44Z,2014-06-18T03:09:15Z
1443,Fixed #20867 -- Added the Form.add_error() method.,"Refs #20199 #16986.
",loic,None,2013-08-06T12:07:13Z,2014-06-12T06:46:17Z
1442,Fixed #20865: raw_id_field should call limit_choices_to.,"https://code.djangoproject.com/ticket/20865
",collinanderson,None,2013-08-06T03:17:39Z,2014-07-08T14:12:22Z
1441,Fixed #16986 -- Model.clean() can report errors on individual fields.,"This commit provides the tests for this issue but the actual problem was solved
by the ValidationError refactor in f34cfec and ee77d4b.

Refs #20199.
",loic,None,2013-08-05T19:33:48Z,2014-07-04T18:36:46Z
1440,Fixed #20814 -- improved misleading clash error messages,,chrismedrela,None,2013-08-05T17:43:34Z,2014-07-20T01:21:13Z
1439,Fixes #20852 - fixes instances of Sphinx wrongly generating left quotes,"Sphinx generates left single quotes for apostrophes after
code markup, when right single quotes are required. The
easiest way to fix this is just by inserting the unicode
character for a right single quote.

Instances of the problem were found by looking for
`</a>&#8216;` in the generated HTML.
",dominicrodger,None,2013-08-05T17:19:02Z,2014-07-20T01:21:13Z
1438,Fixed #20864 – Made the test client use common method for performing req...,"...uests.
",KrzysiekJ,None,2013-08-05T15:13:17Z,2014-06-21T08:32:29Z
1437,Unlocalize line numbers and ids in debug 500 view.,"While using USE_L10N, line numbers and IDs are printed as comma
separated values.
",ramiro,None,2013-08-04T22:12:16Z,2014-07-17T12:37:07Z
1436,Fixed #20777 -- admin delete page proxy models with dict copy,"This PR copies the instance dict to the concrete model.
The string representation will use the concrete models str/unicode definition.

Alternative using proxy model representation: https://github.com/django/django/pull/1435
",Urth,None,2013-08-04T22:07:37Z,2014-06-12T14:39:30Z
1435,Fixed #20777 -- admin delete page proxy models with proxy string representation,"This PR forces string evaluation before the proxy model is replaced with the
concrete model.
The concrete model str/unicode is replaced with a lambda function containing
the proxy class representation.

Alternative using dict copy: https://github.com/django/django/pull/1436
",Urth,None,2013-08-04T22:07:34Z,2014-06-14T09:26:20Z
1434,Changed Model.clean() example in the documentation,"clean() now makes a call the parent clean method
",jimmysong-work,None,2013-08-04T19:42:27Z,2014-07-12T04:27:13Z
1433,fixed #20832 -- Enable html password reset email,"Added optional html_email_template_name parameter to password_reset view
and PasswordResetForm.  Added test cases for new functionality and to
ensure original functionality works as default behavior.
Updated documentation with new parameters.
",jmichalicek,None,2013-08-04T14:11:29Z,2014-07-20T01:21:15Z
1432,Moved get_search_results from BaseModelAdmin to ModelAdmin.,"This method was introduced in Django 1.6, hopefully it's still time to move it before release.

Refs #15961.
",loic,None,2013-08-04T10:31:14Z,2014-06-12T06:53:22Z
1431,Added missing request argument to example in URL dispatcher docs,"Please backport this to the 1.5.X and 1.6.X branches as well.
",alasdairnicol,None,2013-08-03T19:50:38Z,2014-07-20T01:21:16Z
1430,Added get_search_fields to ModelAdmin.,,loic,None,2013-08-03T16:19:45Z,2014-06-18T07:05:32Z
1429,Fixes #20852 - a bad quote in the STATIC_ROOT documentation,,dominicrodger,None,2013-08-03T07:34:27Z,2014-07-04T21:12:53Z
1428,"Changed content-type of default error pages to be ""text/html""","Tests pass under linux.
",jimmysong-work,None,2013-08-03T07:15:19Z,2014-06-18T17:57:29Z
1427,Replace all uses of SortedDict with collections.OrderedDict,"The only places where this required any effort were:
1. Form Wizard, which used implementation details of SortedDict to find the ""next"" item in the list.
2. DB Loaders, because a raw OrderedDict can't deepcopy if it has module as keys.

To solve 2, I implemented a sub-class of OrderedDict in django.utils.datastructures which implements the same **deepcopy** from SortedDict.
",funkybob,None,2013-08-03T05:47:42Z,2014-06-12T10:45:00Z
1426,Fix for #20855 Added documentation of current_app and extra_context params,"Added documentation of current_app and extra_context params to the django.contrib.auth views.  I also touched up the optional parameters for django.contrib.auth.login to match up with the other views which made it easier to add in those two params for it.
",jmichalicek,None,2013-08-02T18:27:03Z,2014-06-17T01:02:31Z
1425,Improve documentation of exceptions (see ticket #20786),"For https://code.djangoproject.com/ticket/20786.

I've added information for importing each exception where it's listed (I think this is clearer than having it at the top of each section - often you arrive at these directly to the relevant exception, so it's easier to have the information available right by the exception, rather than at the top).

I've also fixed a typo, and clarified the docs for `DoesNotExist` and `ObjectDoesNotExist` (the documentation currently references `django.core.exceptions.DoesNotExist`, which does not exist).
",dominicrodger,None,2013-08-01T21:37:12Z,2014-07-20T01:21:19Z
1424,Fixed #17519 -- Fixed missing SQL constraints to proxy models.,"Thanks thibaultj for the report, jenh for the patch,
and charettes for the tests.
",timgraham,None,2013-08-01T18:14:55Z,2014-07-04T06:18:48Z
1423,Fixed #20844 -- adds formatted log entry in the body of the email ...,"... as per specified LOGGING handler 'formatter' setting.

Sample email subject:

`[Some Site][Development] ERROR: Refactor this to use QuerySet level solution as per ticket - https://code.djangoproject.com/ticket/20625 - Offer.objects.filter(...).active() != Offer.objects.active.filter(...)`

Sample email message:

```
ERROR django.db.models.manager 2013-08-01 11:58:03,897 manager 6516 -1244890304 /srv/www/django/development.yupi.ca/src/github-danielsokolowski-django-ticket_20625-tailored/django/db/models/manager.py@139: Refactor this to use QuerySet level solution as per ticket - https://code.djangoproject.com/ticket/20625 - Offer.objects.filter(...).active() != Offer.objects.active.filter(...)

No stack trace available

Request repr() unavailable.
```

Sample LOGGING config:

```
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'verbose': {
            '()': 'djangocolors_formatter.DjangoColorsFormatter', # colored output
            'format': '%(levelname)s %(name)s %(asctime)s %(module)s %(process)d %(thread)d %(pathname)s@%(lineno)s: %(message)s'
        },
        'simple': {
            '()': 'djangocolors_formatter.DjangoColorsFormatter', # colored output
            'format': '%(levelname)s %(name)s %(filename)s@%(lineno)s: %(message)s'
        },
    },
     # omitting the handler 'level' setting so that all messages are passed and we do level filtering in 'loggers'
    'handlers': {
        'null': {
            'class':'django.utils.log.NullHandler',
        },
        'console':{
            'class':'logging.StreamHandler',
            'formatter': 'simple',
        },
        'mail_admins': {
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        '': { 
            'handlers': ['mail_admins', 'console'],
            'level': 'WARNING',
        },
    }
}
```
",danielsokolowski,None,2013-08-01T17:01:51Z,2014-07-10T11:16:06Z
1422,Fixed #9057 -- Added default_permissions model meta option.,"Thanks hvendelbo for the suggestion and koenb for the draft patch.
",timgraham,None,2013-08-01T15:49:51Z,2014-07-04T14:17:07Z
1421,"Removed unused model option ""admin""","I guess this is an old LJ World artifact?
",timgraham,None,2013-08-01T14:33:34Z,2014-07-09T14:57:13Z
1420,fix admin_log url error on empty log records,"After commit https://github.com/django/django/commit/369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d the admin log shows a NoReverseMatch error if the admin log record points to an non-existent table. This commit fix that issue by returning None if there is the NoReverseMatch exception.
",PetrDlouhy,None,2013-08-01T07:57:07Z,2014-06-18T21:13:30Z
1419,Fixed 20838 -- Geodjango spatialrefsys test fails with postgis-2.0.3,"The regex was missing a space
",Urth,None,2013-07-31T21:05:11Z,2014-07-20T01:21:22Z
1418,Fixed #20829 -- skip postgis geometry metadata tables with introspection,"Using postgresql-9.2.4 and postgis-2.0.3 the inspectdb tests fail on the geometry metadata tables.

```
ERROR: test_special_column_name_introspection (inspectdb.tests.InspectDBTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/harm/dev/django/tests/inspectdb/tests.py"", line 142, in test_special_column_name_introspection
    call_command('inspectdb', stdout=out)
  File ""/home/harm/dev/django/django/core/management/__init__.py"", line 159, in call_command
    return klass.execute(*args, **defaults)
  File ""/home/harm/dev/django/django/core/management/base.py"", line 289, in execute
    output = self.handle(*args, **options)
  File ""/home/harm/dev/django/django/core/management/base.py"", line 419, in handle
    return self.handle_noargs(**options)
  File ""/home/harm/dev/django/django/core/management/commands/inspectdb.py"", line 27, in handle_noargs
    for line in self.handle_inspection(options):
  File ""/home/harm/dev/django/django/core/management/commands/inspectdb.py"", line 99, in handle_inspection
    field_type, field_params, field_notes = self.get_field_type(connection, table_name, row)
  File ""/home/harm/dev/django/django/contrib/gis/management/commands/inspectdb.py"", line 13, in get_field_type
    field_type, geo_params = connection.introspection.get_geometry_type(table_name, geo_col)
  File ""/home/harm/dev/django/django/contrib/gis/db/backends/postgis/introspection.py"", line 78, in get_geometry_type
    (table_name, geo_col))
Exception: Could not find a geometry or geography column for ""raster_columns"".""extent""
```

the test fails because the geometry type lookup does not contain metadata about the metadata tables themselves.
https://github.com/django/django/blob/master/django/contrib/gis/db/backends/postgis/introspection.py#L51

postgis itself has models for those tables so a user should never need to create models for them.
https://github.com/django/django/blob/master/django/contrib/gis/db/backends/postgis/models.py
",Urth,None,2013-07-31T20:53:37Z,2014-07-06T18:30:13Z
1417,#20836 to_field lost when adding via raw_id_fields,"Sorry, it's against 1.6.x. I don't have easy access to python2.7 for master.

Basically, TO_FIELD_VAR really needs to follow IS_POPUP_VAR everywhere it goes. Whenever it's a popup, there's always the possibility that there's a to_field.

https://code.djangoproject.com/ticket/20836
",collinanderson,None,2013-07-31T20:28:53Z,2014-06-12T06:59:12Z
1416,Fixed #20819 -- Return 404 instead of 500 error when ``staticfiles`` vie...,"...w is used in production.
",mrmachine,None,2013-07-31T08:11:53Z,2014-07-06T03:36:41Z
1415,"unicode() is a function, not a type",,glarrain,None,2013-07-30T20:56:40Z,2014-06-21T00:14:55Z
1414,Introduced `BaseModelAdmin.get_fields()` and cleaned up admin fields handling.,"Refs #18681.
",loic,None,2013-07-30T12:45:27Z,2014-07-20T01:21:24Z
1413,Fixed #12103 -- Added AuthenticationForm.confirm_login_allowed to allow ...,"...customizing the logic policy.

Thanks ejucovy and lasko for work on the patch.

https://code.djangoproject.com/ticket/12103
",timgraham,None,2013-07-30T12:26:58Z,2014-07-20T01:21:24Z
1412,Fixed 20779 Added 1-line text to document AdminSite.app_index_template,"https://code.djangoproject.com/ticket/20779 Feel free to review. Thanks.
",ArcTanSusan,None,2013-07-30T09:10:54Z,2014-06-13T14:31:02Z
1411,Fixed #20826 -- Moved `Manager.raw()` and `Manager._insert()` to the QuerySet class.,,loic,None,2013-07-30T06:54:29Z,2014-07-20T01:21:25Z
1410,Fixed #19877 -- Added `--no-style` option to `BaseCommand` to avoid using output styles.,"https://code.djangoproject.com/ticket/19877

I think it may be more intuitive to call this ""--no-color"", but will let others chime in.
",timgraham,None,2013-07-29T17:59:23Z,2014-06-25T09:12:58Z
1409,Fixed #8620 -- Allowed ModelForm.Meta.exclude to exclude explicitely declared fields.,"Thanks levity for the report and marcinnowak, himonrura, and koenb
for work on the patch.

I don't see a use case where you would declare a field on a form only to exclude it, but posting a PR to give someone a chance to object.
",timgraham,None,2013-07-29T12:29:18Z,2014-06-13T21:02:16Z
1408,Added html_message parameter to django.core.mail.send_mail() ticket #20817,"I have added the ability to send html email through django.core.mail.send_mail() for ticket #20817 after discussion at https://groups.google.com/forum/#!topic/django-developers/_mXKP9JZzK0
",jmichalicek,None,2013-07-29T02:04:51Z,2014-07-05T11:02:25Z
1407,GSoC 2013: foreignkey refactor,"The first milestone in this year's GSoC project, composite fields. It adds auxiliary fields to `ForeignKey` and `OneToOneField`. More infrormation in [the proposal](https://gist.github.com/koniiiik/5408673) and on [the mailinglist](https://groups.google.com/forum/#!topic/django-developers/CD7OrkJ63zc).

This pull request is not intended to be merged yet, it is here for review purposes for now.
",koniiiik,None,2013-07-28T21:40:56Z,2016-04-24T10:29:30Z
1406,Fixed #17413 -- Added as_dict() to ErrorDict,"Added a as_dict() function to ErrorDict() since it's really hard to serialize form.errors
",schmitch,None,2013-07-28T16:40:52Z,2014-06-14T18:10:36Z
1405,3 small documentation fixes,"trivial fixes to 3 documentation files (messed up into one pull request, sorry)
",minusf,None,2013-07-28T10:44:40Z,2014-07-20T01:21:27Z
1404,Fixed #19738 -- remove sqlite timezone adapter for IPython shell,"https://code.djangoproject.com/ticket/19738

Because IPython was using naive timezone datetimes with sqlite
the adapter registered by Python would throw runtime warnings.

@aaugustin what are the implications for any raw sql running from this context - is a more clearly worded warning worth printing at the start of the session? Something like

""Raw SQL use of datetimes for sqlite will not receive Django timezone patching in this shell""
",ptone,None,2013-07-28T06:59:56Z,2014-06-14T06:06:05Z
1403,add support for IPython.start_ipython,"IPython 1.0 introduces an actual stable public API function for starting a normal (non-embedded) IPython session.

This is an official public API, which is promised to survive implementation changes.

Apologies on behalf of IPython for taking this long to actually make a public API for this basic functionality.
",minrk,None,2013-07-26T21:36:30Z,2014-06-13T13:09:48Z
1402,"Implements ticket #20811, adjustment to Makemessages","To ensure compatibility with alternative templating languages,
makemessages has been altered to try to use template loaders first on
each file, giving them a chance to preprocess the file.  To this end a
new function get_template_source has been added to
django.template.loader that returns the uncompiled source of a template.

The i18n test suite has been expanded to include a test for his new
behaviour.
",cordery,None,2013-07-26T21:02:23Z,2014-06-13T12:50:20Z
1401,Updated contrib.admin to use Email/URLInputs; refs #16630,"@claudep : I'm guessing this was just an oversight and there's no reason not to include it and backport to 1.6?
",timgraham,None,2013-07-26T11:29:15Z,2014-07-20T01:21:28Z
1400,Fixed #20806 - Cached loader caches find_template,"The cached template loader should cache find_template in addition to load_template.

Ticket: https://code.djangoproject.com/ticket/20806
",gavinwahl,None,2013-07-25T19:36:06Z,2014-06-12T18:46:51Z
1399,Fixed #18315 -- Documented QueryDict.popitem and QueryDict.pop,,markhellewell,None,2013-07-25T12:50:25Z,2014-06-27T04:35:55Z
1398,Update middleware documentation to close #20792,"Update middleware documentation to state that DISALLOWED_USER_AGENTS is a list of compiled regex.
",sesh,None,2013-07-25T10:58:52Z,2014-07-20T01:21:29Z
1397,Make it possible to use Exception details on custom 404 handlers.,"This would be an alternative way to solve the question on SO, without using the `contrib.message` framework.
http://stackoverflow.com/questions/1621173/404-error-messages-in-django
",femesq,None,2013-07-25T01:31:11Z,2014-06-12T07:53:53Z
1396,Added support for SSL certificates,"For the few cases where you're using an SSL cert to talk to the db, Django was flaking out when you would run `dbshell`.  This should fix that.
",danielquinn,None,2013-07-24T12:21:14Z,2014-07-20T01:21:29Z
1395,Fixed typo in Custom management commands documentation.,"Fixed minor typo in documentation: ""django.contrim.auth"" -> ""django.contrib.auth""
",jonklo,None,2013-07-24T11:16:52Z,2014-06-16T14:04:59Z
1394,Document changes to validate_email,"4e2e8f39d19d79a59c2696b2c40cb619a54fa745 changed the way validate_email behaves for foo@localhost email addresses, but wasn't listed in the release notes.
",dominicrodger,None,2013-07-23T20:59:32Z,2014-07-17T12:36:47Z
1393,Refs #20749 -- Validation for choice fields.,"Fix for https://code.djangoproject.com/ticket/20749
",dellis23,None,2013-07-23T18:52:02Z,2019-01-15T13:49:13Z
1392,Fixed #20791 -- added word instance and removed word model in default_error_messages,,ersran9,None,2013-07-23T17:36:04Z,2014-06-21T19:47:05Z
1391,#20793 Add Last-Modified header to sitemap using lastmod from items,"From each items lastmod attribute, we can infer the lastmod of the whole sitemap and set this as Last-Modified header for the sitemap. ConditionalGetMiddleware is then able to send 304 NOT MODIFIED and e.g. Google will  request with an If-Modified-Since header and bytes are saved.
",webjunkie,None,2013-07-23T14:28:33Z,2018-06-08T11:22:20Z
1390,Fixed small grammatical error in docstring.,,garnertb,None,2013-07-22T14:33:28Z,2014-07-20T01:21:31Z
1387,Fixed #20784 -- RegexValidator should accept a new parameter to perform reversed validation,,fengsi,None,2013-07-22T00:32:28Z,2014-07-07T10:41:32Z
1386,"DjangoJSONEncoder returned string for Decimal, now returns float","It's an open discussion and I want to understand why Django returns string for Decimal.
",mekza,None,2013-07-21T23:47:44Z,2014-07-20T01:21:32Z
1385,Fixed #20761 -- Fixed DatabaseError handling in get_or_create and update_or_create.,,loic,None,2013-07-21T15:00:12Z,2014-07-04T23:40:57Z
1384,Work on CBV *ObjectMixin queryset handling.,"ML discussion on this issue: https://groups.google.com/d/topic/django-developers/qFE78ZpDP6A/discussion
",loic,None,2013-07-21T10:18:22Z,2014-06-18T02:25:39Z
1383,Allow blank field display to be defined in the initial list of choices.,"A second attempt at addressing https://code.djangoproject.com/ticket/20649

The [first attempt](https://github.com/django/django/pull/1315) was closed after it was agreed that this would be a better, less invasive approach.

Copying @timgraham in as he reviewed the first attempt. :)
",alexcouper,None,2013-07-20T21:54:02Z,2014-06-26T05:37:45Z
1382,Fixed #19617 -- Refactored form metaclasses to support more inheritance scenarios.,,loic,None,2013-07-20T19:34:27Z,2014-06-14T03:31:18Z
1381,Fixed #13696 -- ensured inline pk field is rendered,,kmtracey,None,2013-07-19T21:15:49Z,2014-06-29T23:59:16Z
1380,Fixed #19019 -- Fixed UserAdmin to log password change.,"Thanks Tuttle for the report.
",timgraham,None,2013-07-19T18:56:12Z,2014-06-14T16:13:47Z
1379,GoogleMap.scripts correct string formatting ,"With Python 2.7.2, Django 1.5.1, the property ""script()"" isn't formated at all. 
The rendered template is : 

```
%s
<script type=""text/javascript"">
<![CDATA[
%s]]>
</script>
```
",martync,None,2013-07-19T11:34:48Z,2014-06-13T06:38:29Z
1378,Fixed #20772 -- Fixed minor typo in form media docs.,,loic,None,2013-07-19T08:50:18Z,2014-06-13T03:35:08Z
1377,Updated the `databases` documentation,"- Removed a reference about MySQL storage engines also being called `table types`, as this term has been deprecated for 8 years and is no longer used.
- Fixed the link to the official InnoDB storage engine docs.
- Apache (versions >= 2.4) will always choose a multi-threaded MPM module on modern operating systems (later than 2002).
",Matt-Deacalion,None,2013-07-19T08:04:36Z,2014-06-25T22:58:24Z
1376,Fixed #12422 Django overrides the default email charset behaviour for utf-8,"https://code.djangoproject.com/ticket/12422#no1 Thanks Claude for the patch and simonb for reporting the bug. All tests pass.
",ArcTanSusan,None,2013-07-19T06:46:41Z,2014-06-14T04:28:44Z
1375,Fix Croatia's country code in `localflavor` docs,"Croatia's country code is 'HR', not 'CR'.
",Matt-Deacalion,None,2013-07-19T05:54:05Z,2014-06-25T22:58:23Z
1374,LocaleMiddleware isn't default anymore,"The docs says that LocationMiddleware is enabled by default on Django 1.6 but it actually isn't anymore since @23229061fcb836ecca2195cc75f91e331279a5d1
",seocam,None,2013-07-19T00:21:17Z,2014-07-04T03:24:42Z
1373,Fixed #20767 -- Fixed ModelAdmin.preserve_filters for namespaced URLs.,,loic,None,2013-07-18T19:25:34Z,2014-06-18T23:21:06Z
1372,Cleaned up UserAdmin.get_form() that worked around a bug fixed in 23e1b59.,"Refs #18681.
",loic,None,2013-07-18T17:02:26Z,2014-06-30T06:46:18Z
1371,Fixed #20766 -- Deprecated FastCGI support.,,timgraham,None,2013-07-18T15:14:08Z,2014-06-25T12:55:06Z
1370,Fixed -- broken URLs in docs,"### Atom specification URL updated

Changed to the URL of the official RFC for Atom, since [AtomEnabled.org](http://www.atomenabled.org/) is just a holding page.
",Matt-Deacalion,None,2013-07-18T12:01:53Z,2014-06-16T01:33:19Z
1369,[1.6.X] Fixed typo in inspectdb docs,"Follows #1368. Backport of 1131d4191f from master
",alasdairnicol,None,2013-07-18T11:15:11Z,2014-06-12T06:59:35Z
1368,Fixed typo in inspectdb docs,"Please apply the patch to the 1.6.X branch as well.
",alasdairnicol,None,2013-07-18T10:38:36Z,2014-06-24T18:51:30Z
1367,Index creation fails on field.db_type() is None,"Sometimes field.db_type doesn't return a value what should raise an index creation error. As example the GeoDjango Point field doesn't return a value in this state.
",jarus,None,2013-07-18T08:23:03Z,2014-06-12T22:56:31Z
1366,Fixed #14656 -- Atom1Feed should write atom:published element,"https://code.djangoproject.com/ticket/14656

The first commit – e51e589728208e856734958e7115e0b26ab6e55d was some [housekeeping](http://programmer.97things.oreilly.com/wiki/index.php/The_Boy_Scout_Rule) because I was in the neighbourhood… if it's cluttering the history I'll remove it. Cheers. :monkey_face: 
",Matt-Deacalion,None,2013-07-18T03:05:10Z,2014-06-25T22:58:29Z
1365,Fixed #19737 -- Deprecated the shell management command.,"https://code.djangoproject.com/ticket/19737
",timgraham,None,2013-07-17T16:06:23Z,2014-07-04T17:41:36Z
1364,Checking framework,"This branch is part of my Google Summer of Code 2013 project. It's not intended to be merged, it's only to make deep review easier.

See discussion of checking framework on django-developers: https://groups.google.com/forum/?fromgroups=&hl=en#!topic/django-developers/fEf21dtpqDE
",chrismedrela,None,2013-07-17T09:07:35Z,2014-06-12T19:20:05Z
1363,Paginate session expire to minimize database lock,,seppo0010,None,2013-07-16T20:50:03Z,2014-07-14T21:42:59Z
1362,Reworked docs for ModelForm validation.,,loic,None,2013-07-16T19:43:38Z,2014-07-20T01:21:39Z
1361,Fixed #14007 -- Added model discovery in models module without the need to specify app_label.,"Thanks mark@ and Aramgutang for work on the patch.
",timgraham,None,2013-07-16T17:23:52Z,2014-06-20T03:11:03Z
1360,Use tmpfile + rename for filebased cache backend,"Borrowed some code from django.contrib.sessions.backends.file to make the filebased cache backend less error prone in multiprocess setups.
",jaap3,None,2013-07-16T15:20:15Z,2015-11-26T11:26:54Z
1359,Fixed #14300 -- Fixed initial SQL location if models is a directory.,"Previously myapp/models/sql/ would be searched; now it's myapp/sql/ as documented.

Thanks al_the_x for the report and fheinz for the draft patch.
",timgraham,None,2013-07-16T13:24:56Z,2014-07-10T10:16:58Z
1358,Rephrased the docs for reporting security issues to make it less intimidating.,,loic,None,2013-07-16T10:19:30Z,2014-07-20T01:21:41Z
1357,Fixes grammatical error in auth docs,"Changes ""An error will be raise if you try..."" to ""An error will be raised if you try...""
",dbinetti,None,2013-07-14T03:28:43Z,2014-07-20T01:21:41Z
1356,Fixed #20746 -- Removed Python 2.6 specific code/docs,,timgraham,None,2013-07-13T18:10:55Z,2014-06-17T18:36:22Z
1355,Fixed #20582 -- Allowed default Form.label_suffix to be translated,,claudep,None,2013-07-13T09:44:41Z,2014-07-20T01:21:42Z
1354,#20739 -- Start removing django.test.testcases dep on d.c.staticfiles.,"There is still a reliance on staticfiles' pluggable finders facility and
some moving of handler code from staticfiles to core.
",ramiro,None,2013-07-13T01:22:17Z,2014-06-20T11:27:56Z
1353,Fixed #20653: missing checksetup -> check change,"https://code.djangoproject.com/ticket/20653
",collinanderson,None,2013-07-12T16:07:24Z,2014-07-20T01:21:42Z
1352,Fixed #19941 -- Modified runtests.py to make running the tests easier.,"1. Automatically use tests/../django as the Django version.
2. If settings aren't provided through --settings or DJANGO_SETTINGS_MODULE)
   then use test_sqlite.

https://code.djangoproject.com/ticket/19941
",timgraham,None,2013-07-12T15:53:05Z,2014-07-04T14:17:07Z
1351,Fixed #10284 -- ModelFormSet.save(commit=False) no longer deletes objects,"https://code.djangoproject.com/ticket/10284
",timgraham,None,2013-07-12T13:55:53Z,2014-07-17T12:36:38Z
1350,Fixed #20735 -- clarified ManyToManyField constructor doc,,chrismedrela,None,2013-07-12T09:51:00Z,2014-07-20T01:21:43Z
1349,Added clarification comments to django.utils.image; refs #19934,"The statement in the comment was acknowledged by daniellindsley (https://code.djangoproject.com/ticket/19934#comment:25).
",chrismedrela,None,2013-07-12T08:51:15Z,2014-06-20T14:48:24Z
1348,Fixed #19031 -- Added a warning when using override_settings with 'DATABASES',"https://code.djangoproject.com/ticket/19031

Updated version of https://github.com/django/django/pull/1095
",timgraham,None,2013-07-10T19:46:37Z,2014-07-06T06:14:05Z
1347,Fixed #19196 -- Added test/requirements,"https://code.djangoproject.com/ticket/19196
",timgraham,None,2013-07-09T15:39:21Z,2014-06-19T09:36:44Z
1346,Fixed #17339 -- Factor out has_result into database backend.,"Thanks jonash.

https://code.djangoproject.com/ticket/17339
",timgraham,None,2013-07-08T16:35:58Z,2014-07-20T01:21:44Z
1345,PEP8 django.core,"PEP8'd most of `django.core`. I didn't change some things where I was unsure (e.g. unused imports) and sometimes ignored the line length limit, thus following Django's code standard that line length should not be a ""strict law"" if it helps readability.
",dbrgn,None,2013-07-08T16:00:11Z,2014-07-13T03:11:29Z
1344,Remove url quoting in auth/views.py for reverse,"reverse(password_change_done) and others(not fixed) have quotes which has been changed in this version:

Quoting in reverse()

When reversing URLs, Django didn’t apply urlquote() to arguments before interpolating them in URL patterns. This bug is fixed in Django 1.6. If you worked around this bug by applying URL quoting before passing arguments to reverse(), this may result in double-quoting. If this happens, simply remove the URL quoting from your code.

Only reverse(password_change_done) has been changed. Similar code in this file and probably elsewhere needs to be changed and tested as well.
",rickjohnston,None,2013-07-08T14:07:53Z,2014-06-17T12:23:05Z
1343,Fixed #20716 --Missing 'name_local' translation for Albanian,"Added 'name_local' translation for Albanian in LANG_INFO
",mathiasuk,None,2013-07-08T09:42:08Z,2014-07-20T01:21:45Z
1342,Add a more informative error message when runtests fails to import from ...,"When trying to run the test suite after updating my repo, I was getting strage ImportErrors. It turned out there were orphaned empty directories in the tests directory. This change outputs a hint when that happens.
",mindsocket,None,2013-07-08T04:21:56Z,2014-07-20T01:21:46Z
1341,Fixed 20346 cache middleware should vary on full URL,"https://code.djangoproject.com/ticket/20346 Implemented the suggested change in cache.py. I'm not sure if there are utils_tests for cache.py or if they are necessary. Feel free to code review. Thanks.
",ArcTanSusan,None,2013-07-08T03:41:19Z,2014-06-26T16:20:29Z
1340,Fixed #18261 Clarified outer and inner directory in tutorial1.txt,"https://code.djangoproject.com/ticket/18261 I added a bit of clarification on outer/root vs. inner directory in the Django tutorial part 1 doc. Please code review. Thanks. 
",ArcTanSusan,None,2013-07-07T23:40:30Z,2014-06-15T15:46:16Z
1339,Fixed #6668 Optimise utils.text wrap,"https://code.djangoproject.com/ticket/6668 I tested SmileyChris's 5-yr old patch. The existing tests in utils_tests pass when this patch is implemented.  Feel free to code review. Thanks.
",ArcTanSusan,None,2013-07-07T23:11:09Z,2014-07-02T06:23:34Z
1338,Fixed #16284 – simplified language selection in jsi18n.,"https://code.djangoproject.com/ticket/16284
",KrzysiekJ,None,2013-07-07T19:50:43Z,2014-06-25T10:55:45Z
1337,Fixed #20711 Broken url link in timesince.py,"I found a broken url link in docstring of timesince.py. I'm not sure if I should be doing a PR for such a minor fix for this ticket, but here goes: https://code.djangoproject.com/ticket/20711. 
",ArcTanSusan,None,2013-07-07T01:36:47Z,2014-07-20T01:21:47Z
1336,Ticket 20707,"Another way to fix broken ""manage.py test"" on Oracle R12
",nsadovskiy,None,2013-07-06T14:45:19Z,2014-06-16T06:47:06Z
1335,Fixed #20619 -- Refactored HttpRequest and WSGIRequest.,,loic,None,2013-07-06T07:16:20Z,2014-07-20T01:21:48Z
1334,Add ContextContextManager,"Add Context.with method

This patch allows you to use a context with ""with"", so you can be certain whatever context you push on the stack is popped after.

``` python
with context.with(extra_data):
    return self.blocks.render(context)
```
",funkybob,None,2013-07-06T05:06:25Z,2014-07-20T01:21:48Z
1333,Added explicit quota to test user on Oracle backend,"'UNLIMITED TABLESPACE' privilege is no longer included in RESOURCE role Oracle 12c. Therefore django test user, who have CONNECT and RESOURCE roles only, can't load any data into tables. To fix this, created user neede explicit quota allocation. Patch tested on Oracle v10.2.0.4, v11.2.0.3 and v12.1.0.1
",nsadovskiy,None,2013-07-05T13:43:26Z,2014-07-20T01:21:49Z
1332,Fixed #20568 -- truncatewords_html no longer splits words containing HTML entities,"Unescaping html entities in the truncator makes the issue go away.
",jaap3,None,2013-07-05T09:28:46Z,2015-11-26T11:21:46Z
1331,fixed grammar,,orientalperil,None,2013-07-04T19:32:14Z,2014-07-20T01:21:49Z
1330,Fixed #20224 -- Update docs examples which mention __unicode__,,claudep,None,2013-07-04T13:21:49Z,2014-07-11T00:21:55Z
1329,"Fixed #20663 -- Changed the admin ""today"" and ""now"" shortcuts next to date and time intput widgets to account for the current timezone.",,loic,None,2013-07-04T05:52:47Z,2014-06-16T03:26:34Z
1328,Fixed #20625 -- Chainable Manager/QuerySet methods.,,loic,None,2013-07-03T18:41:11Z,2014-06-12T20:20:41Z
1327,Fixed #20693 -- Add timezone support to built-in time filter.,"Modified django.utils.dateformat module, moving **init**() method and
timezone-related format methods from DateFormat class to TimeFormat
base class. Modified timezone-related format methods to return an
empty string when timezone is inappropriate for input value.
",wsmith323,None,2013-07-03T17:37:38Z,2015-06-21T21:24:26Z
1326,Fixed #20675 -- `check_password` should work when no password is specified.,"The regression was introduced by 2c4fe761a. refs #20593.
",charettes,None,2013-07-03T17:19:27Z,2014-07-20T01:21:51Z
1325,20600 - Subqueries should retain ORDER BY when using DISTINCT ON,"I tried pinpointing where the bug is occurring but was not successful. Towards the end I started to suspect that the problem is in how the SQL query is executed and thus the problem to be in `sql_with_params()`.

The bug ticket: https://code.djangoproject.com/ticket/20600
",koddsson,None,2013-07-03T15:18:10Z,2014-07-20T01:21:51Z
1324,Fixed #12579 -- Noted QuerySet.get_or_create() depends on database unique constraints.,"Thanks timmolendijk, jdunck, and vijay_shanker.
",timgraham,None,2013-07-03T12:02:39Z,2014-06-18T09:32:20Z
1323,Ticket #20687 -- Added documentation for django.core.signing API.,"https://code.djangoproject.com/ticket/20687
",tricoder42,None,2013-07-03T06:18:27Z,2014-07-20T01:21:52Z
1322,Fixed #20694 - Accept non-ascii unicode characters in usernames,,akhayyat,None,2013-07-02T22:33:18Z,2014-06-14T04:54:25Z
1321,"Fix ""semicolon"" in docs","Looks like a colon to me.
",bfirsh,None,2013-07-02T17:00:41Z,2014-06-14T13:46:31Z
1320,Fixed #6785 -- Made QuerySet.get() fetch a limited number of rows.,"Thanks Patryk Zawadzki.
",timgraham,None,2013-07-02T15:28:39Z,2014-06-26T20:19:38Z
1319,Fixed #20609.Documented how to use request.user with RequestFactory.,"Fixed https://code.djangoproject.com/ticket/20609. Thanks michel for the doc patch. I edited and expanded on given doc patch. Please code review. Thanks.
",ArcTanSusan,None,2013-07-02T08:22:46Z,2014-06-18T12:42:17Z
1318,Fixed #20659.Error in the example for Using SingleObjectMixin w/ListView,"Error in the example for Using SingleObjectMixin with ListView. https://code.djangoproject.com/ticket/20659 
I applied patch created by Baptiste Mispelon. Please code review.  Thanks. 
",ArcTanSusan,None,2013-07-01T03:57:08Z,2014-07-20T01:21:53Z
1317,Define the SessionStore inside __init__ instead of process_request,"It's unnecessary to run this on every request, since technically, settings _should be_ immutable.

Is there some edge case that I'm missing where the engine may be different on a per request basis?
",mattrobenolt,None,2013-06-30T06:26:59Z,2014-07-20T01:21:54Z
1316,Removed django.contrib.auth.views.password_reset_confirm_uidb36() view t...,"...o finish its accelerated deprecation schedule.
",ramiro,None,2013-06-29T17:10:44Z,2020-06-25T13:14:03Z
1315,20649 add empty_label option to CharField.,"An attempt to address https://code.djangoproject.com/ticket/20649#trac-add-comment
",alexcouper,None,2013-06-29T15:55:40Z,2014-06-17T17:22:51Z
1314,Fixed #18314.request.build_absolute_uri() finally functions correctly,"https://code.djangoproject.com/ticket/18314 In ""django/http"", request.build_absolute_uri() finally functions correctly when path starts with ""//"". Thanks SmileyChris  and yoyoma for work on the patches. I manually applied the ""18314.diff"" patch given by SmileyChris. The tests  in ""tests/http/"" failed before the patch was implemented, and then the tests succeeded after the patch was implemented. Please code review and let me know how I can make this PR better. 
",ArcTanSusan,None,2013-06-29T08:20:52Z,2014-06-24T13:19:48Z
1313,Update django.po,"In English word ""Image"" can be translated to Polish directly as ""Obraz"" what can mean ""graphic file"", ""picture of something"", ""file with copy of something - like CD or hard drive"". Translation as ""plik graficzny"" means only ""graphic file"" which confuses in properly used translation in systems using latter example. Polish ""Obraz"" gives us the same range of use as English ""Image"".
",Cyb0org,None,2013-06-28T11:50:14Z,2014-07-20T01:21:55Z
1312,Fix typo,"Very minor typo in the signals reference.
",kenbolton,None,2013-06-27T16:40:51Z,2014-07-20T01:21:55Z
1311,Fixed missing initializations in WSGIRequest. Refs #20619,,loic,None,2013-06-27T13:22:10Z,2019-07-21T05:42:00Z
1310,Fix #20660 -- FileField.delete tries to delete storage root,,claudep,None,2013-06-27T09:19:07Z,2014-07-05T01:00:47Z
1309,Add missing preposition in documentation,,treyhunner,None,2013-06-26T17:26:10Z,2014-07-20T01:21:56Z
1308,Fixed #20462 - Replaced the str() cast introduced in 273dc55 by force_text(),,loic,None,2013-06-26T13:48:45Z,2014-07-20T01:21:57Z
1307,Fixed #20658 -- Fixed bad reST formatting and missing parentheses in the docs for CBV mixins,,loic,None,2013-06-26T11:26:32Z,2014-07-20T01:21:57Z
1306,Fixed #20462 -- null/non-string regex lookups are now consistent,"Thanks to noirbizarre for the report and initial patch. (https://github.com/django/django/pull/1043)

Ticket: https://code.djangoproject.com/ticket/20462

This change addresses the following issues with regex lookups:
- failure if field value is None/null for SQLite
- failure if field type is not a string based type for SQLite and PostgreSQL
",amclark,None,2013-06-26T08:12:33Z,2014-07-20T01:21:57Z
1305,Fixed #20541 -- don't raise db signals twice when creating superuser,"https://code.djangoproject.com/ticket/20541
",bak1an,None,2013-06-25T21:12:41Z,2014-07-20T01:21:58Z
1304,Fixed #20650 -- Fixed {% filter %} incorrectly accepting 'escape' as an ...,"...argument

Thanks to grzesiof for the report.
",bmispelon,None,2013-06-25T18:11:19Z,2014-07-20T01:21:58Z
1303,Fixed #14881 -- Modified password reset to work with a non-integer UserModel.pk.,,timgraham,None,2013-06-25T13:05:00Z,2014-06-16T13:21:17Z
1302,Fixed type of `m2m_changed`'s `pk_set` arg in docs,,izquierdo,None,2013-06-25T06:03:12Z,2014-07-20T01:21:59Z
1301,Fixed #13721 -- Added UploadedFile.content_type_extra.,"Thanks Waldemar Kornewald and mvschaik for work on the patch.
",timgraham,None,2013-06-24T20:25:56Z,2014-06-18T01:31:49Z
1300,[1.5.x] Fixed #20636 -- Stopped stuffing values in the settings.,"In Django < 1.6, override_settings restores the settings module that was
active when the override_settings call was executed, not when it was
run. This can make a difference when override_settings is applied to a
class, since it's executed when the module is imported, not when the
test case is run.

In addition, if the settings module for tests is stored alongside the
tests themselves, importing the settings module can trigger an import
of the tests. Since the settings module isn't fully imported yet,
class-level override_settings statements may store a reference to an
incorrect settings module. Eventually this will result in a crash during
test teardown because the settings module restored by override_settings
won't the one that was active during test setup.

While Django should prevent this situation in the future by failing
loudly in such dubious import sequences, that change won't be backported
to 1.5 and 1.4. However, these versions received the ""allowed hosts""
patch and they're prone to ""AttributeError: 'Settings' object has no
attribute '_original_allowed_hosts'"". To mitigate this regression, this
commits stuffs _original_allowed_hosts on a random module instead of the
settings module.

This problem shouldn't occur in Django 1.6, see #20290, but this patch
will be forward-ported for extra safety.

Also tweaked backup variable names for consistency.
",aaugustin,None,2013-06-24T18:16:45Z,2014-06-16T06:47:00Z
1299,Fixed #20644 -- Add ModelFormMixin.fields to the CBV flattened index,"Thanks to Tim Graham for the report.
",bmispelon,None,2013-06-23T21:45:01Z,2014-07-20T01:22:00Z
1298,Some fixes in the CBV topic documentation,"Replaces https://github.com/django/django/pull/1286

Thanks @shanx for pointing out the original error.
",bmispelon,None,2013-06-22T21:16:17Z,2014-07-20T01:22:00Z
1297,20524 Added a line to describe keywords in triaging contrib doc,"https://code.djangoproject.com/ticket/20524 Please code review. 
",ArcTanSusan,None,2013-06-22T20:33:39Z,2014-07-20T01:22:00Z
1296,Fixed 20613 - moved pickle loads/dumps outside with self._lock.reader()/...,"...writer() blocks
",ersran9,None,2013-06-22T16:35:49Z,2014-07-20T01:22:01Z
1295,Fixed #20587 -- Made convert_values handle None values,,LuRsT,None,2013-06-22T13:08:18Z,2014-07-20T01:22:01Z
1294,Fixed #18872 -- Added prefix to FormMixin,"Thanks @ibustama for the initial patch and dragonsnaker for opening the
report.
",LuRsT,None,2013-06-22T11:17:11Z,2014-07-02T00:28:47Z
1293,Fixed #20632 -- Fixed {{ docs_version }} in project template,,bmispelon,None,2013-06-20T13:49:25Z,2014-07-20T01:22:02Z
1292,Fix bug #20631. The max length of the email is 254 ,"How you can see in the next link the max length of an email is 254 chars. Now we have only 75 chars...

http://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address

Pull request related:

https://github.com/django/django/pull/1291

Ticket related:

https://code.djangoproject.com/ticket/20631

With this pull request we can customize the max length of the emails.

The max length does not change directly, because ""At present we do not have the ability to make schema changes in core and so we cannot change the underlying database field of any given model field"" (Marc Tamlyn, @mjtamlyn)
",goinnn,None,2013-06-20T11:12:23Z,2014-06-17T06:11:19Z
1291,The max length of the email is 254,"How you can see in the next link the max length of an email is 254 chars. Now we have only 75 chars...

http://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address

Related commit:

https://github.com/django/django/commit/bfcda7781a886ab2b7b41937c0f49c088f58a3d7
",goinnn,None,2013-06-20T06:58:22Z,2014-06-25T08:57:05Z
1290,Fix bug 19881:  Document that get_next/previous_by_FOO uses default mana...,"...ger.
",ubernostrum,None,2013-06-20T06:54:41Z,2014-06-13T06:38:27Z
1289,"Fix bug 19695: Retitle ""Form Media"" to ""Form Assets"".","This also rewrites the former docs/topics/forms/media.txt to match the
new title. Whenever possible, references to ""media"" have become proper
references to a Media class, or a Media declaration or media
property. Failing that, the word ""media"" is not used, and where it's
impossible to rewrite the docs to be clean English without using some
word for this, ""assets"" is used.
",ubernostrum,None,2013-06-20T06:54:34Z,2014-07-20T01:22:03Z
1288,doc/tutorial: use RequestContext instead of Context,"https://docs.djangoproject.com/en/dev/intro/tutorial03/#write-views-that-actually-do-something
The first real view in the tutorial is using Context which results in two problems:
- the comparison with the render shortcut is incorrect  
  render uses RequestContext which makes the verbose example not equal to the shortcut  
  the render shortcut is documented in the paragraph below the verbose example
- new django users that were enticed to use the verbose example would later have problems with static files etc.  
  I've seen a few cases of this on #django
",Urth,None,2013-06-20T01:43:22Z,2014-07-20T01:22:03Z
1287,Itty bitty typo fix.,"""deletes"" was missing it's last e.
",mintchaos,None,2013-06-19T23:45:44Z,2014-06-30T14:40:26Z
1286,Fixed minor bug in documentation and updated my Authors entry,,shanx,None,2013-06-19T20:43:28Z,2014-07-20T01:22:04Z
1285,Fixed #20288 -- Fixed inconsistency in the naming of the popup GET parameter,,loic,None,2013-06-19T17:26:51Z,2014-06-14T20:34:10Z
1284,For ticket #20625 to allow defining chainable QuerySet on custom model managers.,"Ticket #20625 - https://code.djangoproject.com/ticket/20625 allows for new functionality as follows: 

```
class OfferManager(models.Manager):
    """""" Example of a chainable custom query set """"""

    ...

    QUERYSET_PUBLIC_KWARGS = {'status__gte': STATUS_ENABLED}
    QUERYSET_ACTIVE_KWARGS = {'status': STATUS_ENABLED}

    ...

    def public(self):
        """""" Returns all entries accessible through front end site""""""
        return self.all().filter(...)
    public.chainable = True     # instructs to dynamically tranplat this method onto
                                # returned QuerySet as <queryset>.public(...) 
                                # effectively providing chainable custom QuerySets

    def active(self):
        """""" Returns offers that are open to negotiation """"""
        return self.public().filter(**OfferManager.QUERYSET_ACTIVE_KWARGS)
                                    # an example of how to reffer to OfferManager
                                    # constants as 'self' context changes
    active.chainable = True
    ...
```
",danielsokolowski,None,2013-06-19T16:28:00Z,2014-06-13T13:42:44Z
1283,Fixed #9523 -- Restart runserver after translation MO files change,,kulewski,None,2013-06-19T07:42:50Z,2014-06-25T22:10:32Z
1282,Fixed MySQL failing test introduced by c86a9b6,,loic,None,2013-06-18T21:43:41Z,2014-07-20T01:22:05Z
1281,Fixed #6903 - Preserve admin `change_list` filters after saving or deleting an object,,loic,None,2013-06-18T18:20:25Z,2014-06-14T17:32:30Z
1280,Fixed #20079 -- Improve security of password reset tokens,"Fixing patch from https://github.com/django/django/pull/1218, as that no longer cleanly applied to master. Replaced magic number for length of random suffix with UNUSABLE_PASSWORD_SUFFIX_LENGTH.
",mxsasha,None,2013-06-18T18:04:12Z,2014-06-15T10:03:57Z
1279,Fixed #20414 -- Oracle output handler,"Corrected and improved patch to change the Oracle backend's handling of numbers from numbersAsStrings-based to outputtypehandler-based.
",shaib,None,2013-06-18T01:08:37Z,2014-06-20T23:39:23Z
1278,Fixed #20593 -- Allow blank passwords in check_password() and set_password(),,mxsasha,None,2013-06-17T16:07:07Z,2014-07-20T01:22:06Z
1277,Fixed #6681 -- Don't break docutils when rendering reStructuredText.,,mrmachine,None,2013-06-17T09:03:39Z,2014-06-20T14:57:10Z
1276,Fixed bug in a versionadded statement in templates builtins docs.,"Well, I just removed a colon.
",batisteo,None,2013-06-17T07:40:26Z,2014-07-20T01:22:07Z
1275,Fixed #20464 -- Added a `total_error_count` method on formsets.,"Thanks to frog32 for the report.
",bmispelon,None,2013-06-15T20:36:53Z,2014-06-16T03:14:00Z
1274,Fixed #20599 -- Changed wording of ValueError raised by _load_library,"The _load_library method on BasePasswordHasher turns ImportErrors
into ValueErrors, this masks ImportErrors in the algorithm library.
Changed it to a clearer worded error message that includes
the ImportError string.
",jaap3,None,2013-06-14T14:24:42Z,2015-11-26T11:21:00Z
1273,Fixed #20548 -- Removed all PendingDeprecationWarnings from django test suite,,mjtamlyn,None,2013-06-14T14:03:38Z,2014-07-20T01:22:08Z
1272,Fixed #20598 -- Add new HTTP status codes defined in rfc6585,"https://code.djangoproject.com/ticket/20598

4 new HTTP status codes defined in ​http://tools.ietf.org/html/rfc6585, including 428, 429, 431, 511.
",chicheng,None,2013-06-14T13:25:46Z,2014-06-29T14:43:17Z
1271,Fixed #20565 -- Added template examples for GCBV.,"Thanks to David Reitter for the report.
",batisteo,None,2013-06-14T12:24:10Z,2014-06-27T14:33:09Z
1270,Remove incorrect CONTENT_TYPE header from GET and HEAD requests,,tomchristie,None,2013-06-14T08:18:15Z,2014-06-13T21:49:59Z
1269,Fixed an erroneous import in example code.,"Backported documentation fix from master.
https://code.djangoproject.com/ticket/20595
",bmispelon,None,2013-06-14T07:29:03Z,2014-06-16T06:47:33Z
1268,Fix widget has changed bug,"This fixes https://code.djangoproject.com/ticket/19557 which has been reported 5 month ago and still is open.
",jrief,None,2013-06-13T21:38:03Z,2014-06-18T18:39:59Z
1267,Fix #20594: Add validation to models.SlugField.,,bmispelon,None,2013-06-13T16:39:32Z,2014-07-20T01:22:10Z
1266,Fix for #17076,"When reversing a URL fails, inform the user which patterns were tried.

See https://code.djangoproject.com/ticket/17076
",Wilfred,None,2013-06-13T13:36:35Z,2014-06-30T13:49:34Z
1265,Fixed order of base classes in CBV mixin docs,"The order of the base classes in the docs was inconsistent.

If I'm not mistaken, mixins should always be on the left of the base class.

In the changes, View, DetailView and FormView are the base classes and the mixins should go to the left (even if just for the sake of consistency).
",dbrgn,None,2013-06-13T13:12:55Z,2014-07-20T01:22:10Z
1264,Fixed #6903: Implemented sticky admin filters,"Patch is mostly by julien, I only made small corrections.
",oinopion,None,2013-06-12T21:30:41Z,2014-06-19T18:37:30Z
1263,Update json.py,"Fixing incompatibility with DjangoFullSerializers + Deprecation of json for simplejson 
",kidsil,None,2013-06-12T21:14:46Z,2014-07-04T13:58:03Z
1262,Fixed #20591: added version in docs for utils.module_loading.import_by_path,,batisteo,None,2013-06-12T08:52:19Z,2014-07-20T01:22:11Z
1261,Fixed #20579 -- Improved TransactionTestCase.available_apps.,"Also moved its documentation to the 'advanced' section. It doesn't
belong to the 'overview'. Same for TransactionTestCase.reset_sequences.

When available_apps is set, after a TransactionTestCase, the database
is now totally empty. post_syncdb is fired at the beginning of the next
TransactionTestCase.

Refs #20483.
",aaugustin,None,2013-06-11T20:59:20Z,2014-07-20T01:22:12Z
1260,Fixed #11277 -- Hidden labels of fields with HiddenInput widget,"The patch was updated and it applies clearly now. The previous pull request was https://github.com/django/django/pull/789 .
",chrismedrela,None,2013-06-11T20:40:13Z,2014-06-29T14:43:17Z
1259,Simplifying a formset code example in the documentation,"Rather than `for i in range(0, self.total_form_count())` and manually accessing `self.forms[i]`, it's clearer to just iterate over `self.forms`.

Since `FormSet` implements `__iter__`, you could even iterate over `self`, but this approach is more explicit.
",Wilfred,None,2013-06-11T15:07:26Z,2014-07-14T19:49:20Z
1258,Fixed #20585: normalize signature of DeletionMixin.post.,,batisteo,None,2013-06-11T10:44:00Z,2014-06-21T14:18:29Z
1257,Fixed #17673 -- forbidding field shadowing,"Now the patch applies clearly. The old pull request is: https://github.com/django/django/pull/556
",chrismedrela,None,2013-06-09T17:59:15Z,2014-06-24T08:21:37Z
1256,Update media.txt,"Fixed typo: froms -> forms
",kennyrc,None,2013-06-09T05:27:41Z,2014-07-20T01:22:13Z
1255,Update flatpages.txt,"Fixed typo
",camilonova,None,2013-06-08T15:46:18Z,2014-07-20T01:22:14Z
1254,Update submitting-patches.txt,"Few quick fixes to the terminology in order to match what is used on the Django Trac at the moment.

No ticket on trac as this is trivial.
",russkel,None,2013-06-08T05:53:44Z,2014-07-20T01:22:14Z
1253,fixes #20486,"Ticket found here: https://code.djangoproject.com/ticket/20486
",russkel,None,2013-06-08T05:32:09Z,2014-07-20T01:22:14Z
1252,Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix,"There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well. This is a backwards incompatible change because
users who have added the label_suffix manually in their templates may now
get double label_suffix characters in their forms.

Updated version of https://github.com/django/django/pull/141
",timgraham,None,2013-06-07T16:47:53Z,2014-06-25T22:10:17Z
1251,"Fixed #20000 -- Allowed ModelForm meta overrides for labels, help_texts and error_messages",,timgraham,None,2013-06-07T12:43:55Z,2014-06-30T03:24:02Z
1250,Fixed #20567 - Documented BoundField.id_for_label.,"Thanks littlepig for the suggestion.
",timgraham,None,2013-06-06T18:18:42Z,2014-06-24T07:22:21Z
1249,Fixed #19875 - Added notes in docs regarding DEBUG=False and empty ALLOWED HOSTS.,"Also modified runserver to output an error message if
it won't serve any requests due to such a config.
",timgraham,None,2013-06-06T17:20:38Z,2014-06-17T06:57:12Z
1248,Fixed #20429 -- Added QuerySet.update_or_create,"Thanks tunixman for the suggestion.
",timgraham,None,2013-06-06T14:45:18Z,2014-06-16T14:14:02Z
1247,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,"Rebased/updated version of https://github.com/django/django/pull/1019
",timgraham,None,2013-06-05T19:43:11Z,2014-06-14T12:11:06Z
1246,Fixed #11521 - Made QuerySet.update() accept foreign key assignment using the fk_id alias.,,timgraham,None,2013-06-05T11:07:12Z,2014-06-25T04:11:46Z
1245,Fixed #19080 -- Fine-grained control over select_related in admin,"Pull request for Trac ticket: https://code.djangoproject.com/ticket/19080
",oinopion,None,2013-06-04T21:38:07Z,2014-06-12T18:48:44Z
1244,Fixed #20555 -- Make subwidget id attribute available,"In `BoundField.__iter__`, the widget's id attribute is now passed to
each subwidget. A new id_for_label property was added to ChoiceInput.
",mdj2,None,2013-06-04T21:16:03Z,2014-07-16T17:41:06Z
1243,Fixed #20560 - NameError prevents builtin json library from being used,,aburgel,None,2013-06-04T17:19:16Z,2014-06-18T18:39:22Z
1242,Fixed #14930 -- values_list() no longer fails on queryset ordered by extra column,"Thanks lsaffre for the report and simon29, vicould, and Florian Hahn for the patch.
",timgraham,None,2013-06-04T14:51:23Z,2014-06-12T23:15:59Z
1241,Explicit exception chaining for db exceptions by setting __cause__ in py2,"As per [ticket 17601](https://code.djangoproject.com/ticket/17601).
",jaylett,None,2013-06-04T11:38:39Z,2014-07-04T23:34:04Z
1240,Fixed #20483 -- Made TransactionTestCase faster.,,aaugustin,None,2013-06-04T06:18:54Z,2014-07-09T10:57:00Z
1239,Change the django.contrib.auth.views to be classed-based.,"I adapted the class-based auth views from [django-authtools](https://github.com/fusionbox/django-authtools/blob/master/authtools/views.py) to be fully backwards-compatible with the function views.

This pull request addresses [ticket #17029](https://code.djangoproject.com/ticket/17209).
",rockymeza,None,2013-06-04T06:10:20Z,2014-06-26T05:36:06Z
1238,Warn that `request_finished` is not sent under certain conditions,"Older versions of uWSGI and Sentry's middleware do not adhere to
the WSGI spec and cause the `request_finished` signal to never
fire. Added notes to the appropriate places in the docs.

Trac ticket: 20537
",jaap3,None,2013-06-03T14:01:38Z,2015-11-26T11:26:09Z
1237,Made loaddata faster.,,aaugustin,None,2013-06-02T08:42:21Z,2014-06-18T07:57:27Z
1236,Allowing FORMAT_MODULE_PATH setting to be list of paths.,"This patch includes tests for the iter_format_modules method (which was never
tested before). It also includes a test to ensure backwards compatibility and
to test the new functionality.

The patch also includes changes to thos parts of the docs that mention
the FORMAT_MODULE_PATH setting.
",mbrochh,None,2013-06-01T18:34:35Z,2014-06-15T10:02:51Z
1235,"Reverse password_reset_confirm view by name, not by path.","This URL should be reversed using its name, 'password_reset_email', not its location in `django.contrib.auth.views`. This allows using your own password_reset_confirm view.

ticket: https://code.djangoproject.com/ticket/20532
",gavinwahl,None,2013-05-30T18:08:07Z,2014-06-14T12:57:13Z
1234,Fixed #16856 - Added a way to clear select_related.,"Thanks Carl for the suggestion and David Cramer
for the patch.
",timgraham,None,2013-05-30T13:50:15Z,2014-08-28T14:19:32Z
1233,Fixed regroup example.,"Chicago was missing.
",gavinwahl,None,2013-05-29T22:35:21Z,2014-07-20T01:22:20Z
1232,Don't hard-code class names when calling static methods,"`UserManager.normalize_email` should be called on the instance, not the class. This has the same effect normally but is more helpful to subclassers. When methods are called directly on the class, subclasses can't override them.
",gavinwahl,None,2013-05-29T22:20:46Z,2014-06-28T07:41:55Z
1231,Fixed #20509 - Proper parsing for dumpdata --pks option.,"Thanks weipin for the report and
Baptiste Mispelon for the patch.
",timgraham,None,2013-05-29T18:04:04Z,2014-07-20T01:22:21Z
1230,Fixed #20331 -- Allowed admin actions to serve StreamingHttpResponses,"Thanks Edwin.
",timgraham,None,2013-05-29T14:57:54Z,2014-07-20T01:22:21Z
1229,Add HTML5 Input support.,"Add HTML5 Input support.
",wndfly,None,2013-05-28T13:47:28Z,2014-07-20T01:22:22Z
1228,Fixed #2445: Allow callable values for limit_choices_to.,"Introduces the Model.choices_for_FOO method allowing to extend the limit_choices_to option.
",zyegfryed,None,2013-05-27T15:02:59Z,2014-06-14T20:21:55Z
1227,Fix #20509: Bad parser action for dumpdata's --pks option.,,bmispelon,None,2013-05-27T10:25:48Z,2014-06-26T05:18:24Z
1226,Fix #20505: Typo in BinaryField documentation.,,bmispelon,None,2013-05-27T09:36:26Z,2014-07-20T01:22:23Z
1225,Fixed #13518 - Added FILE_UPLOAD_DIRECTORY_PERMISSIONS setting,"This setting does for new directories what FILE_UPLOAD_PERMISSIONS
does for new files.
",romlok,None,2013-05-27T08:31:07Z,2014-07-03T22:34:25Z
1224,Patch for ticket #20506 - documentation typo,,yishaibeeri,None,2013-05-27T08:16:11Z,2014-07-20T01:22:24Z
1223,Fixes #19891 -- Travis CI support,"This branch adds the necessary support for Travis into Django, as discussed on [ticket #19891](https://code.djangoproject.com/ticket/19891).

It runs all Django tests on the following environments:
- SQLite, no GIS
- MySQL, with and without GIS
- PostgreSQL, with and without GIS

It also builds the docs. It does not currently run Selenium tests (because it cannot run `ChromeDriver`, even though it's executable and in the PATH).

Due to some quirks in Travis, it will try to build branches even if they have no `.travis.yml` file. It will try to build them as Ruby code, which will fail. Therefore this file must be created with some minimal contents in all regularly-changing branches of Django before enabling Travis, otherwise people will get email notifications when those branches are modified, triggering a Travis build which will fail. I suggest using a copy of `.travis.yml` from this branch.

I have also seen the [​build time out](https://travis-ci.org/aptivate/django/jobs/7518794) when running PostgreSQL tests (over 50 minutes). This may well happen again. We might need to split the PostgreSQL tests into two separate runs.

Many thanks to @dokterbob and @apollo13 who did all the hard work that made this possible.
",qris,None,2013-05-27T08:15:49Z,2014-06-26T19:14:37Z
1222,Ticket 18967: Fix non-standard message/rfc822 base64 encoding issue (django master),"Django master version of #1202.

https://code.djangoproject.com/ticket/18967
",micolous,None,2013-05-27T04:43:33Z,2014-06-18T01:12:01Z
1221,Fixed ticket #20500 -- Added slash inside the match parentheses,"Fixed documentation bug that omitted trailing slash inside URL match parentheses
",JeffSWhite,None,2013-05-26T17:22:23Z,2014-07-20T01:22:27Z
1220,Added flexibility to the staff_member_required decorator,"The staff_member_required decorator now allows a user to pass in a custom template or form.
",mliu7,None,2013-05-26T14:17:53Z,2014-07-06T02:20:22Z
1219,Fixes #20502 -- i18n test bug discovered by Travis.,"If the following tests are run in this order:
- defaultfilters.tests.DefaultFiltersTests.test_localized_filesizeformat
- i18n.tests.AppResolutionOrderI18NTests

then the second test will fail because the first has cached the 'de' translation before the second one changes INSTALLED_APPS to install the test app, which has its own translation.
",qris,None,2013-05-26T10:49:41Z,2014-07-03T15:17:59Z
1218,Fixed #20079 -- Improve security of password reset tokens,"Improvement of https://github.com/django/django/pull/1170 with comments in https://code.djangoproject.com/ticket/20079#comment:8

The use of UNUSABLE_PASSWORD_PREFIX is now limited to the auth hashers, and one case in the auth forms, where we need to make the distinction between an unusable password, and a password hashed with an unknown algorithm (is_usable_password will just return False for either situation).
",mxsasha,None,2013-05-25T19:08:54Z,2014-06-23T14:25:57Z
1217,Fixed #20443 -- Import errors in settings cause confusing error messages,"https://code.djangoproject.com/ticket/20443
Replacement for PR https://github.com/django/django/pull/1112.
",mxsasha,None,2013-05-25T18:26:53Z,2014-06-21T00:56:59Z
1216,Fixed #19657 -- Made sql commands honour allow_syncdb,"Thanks Manel Clos for the report and the initial patch.
",claudep,None,2013-05-25T17:56:27Z,2014-06-21T04:46:48Z
1215,#20228 Added more aggresive tests and updated documentation.,"[#20228](https://code.djangoproject.com/ticket/20228) seems to be valid documentation bug to me. Given example in ticket is trying to validate_unique while one of the field which is in constraint is not editable or in exclude making validate_unique skip validation. This is expected behavior but documentation doesn't explain this behavior. I have added:
- Note in documentation.
- More aggressive test cases.
",iapain,None,2013-05-24T22:00:46Z,2014-07-20T01:22:29Z
1214,Fixed #16137 - Removed kwargs requirement for QuerySet.get_or_create,"Thanks wilfred@, poirier, and charettes for work
on the patch.
",timgraham,None,2013-05-24T20:40:28Z,2014-06-18T03:23:02Z
1213,Fixed #20205 - Disallowed empty string as an empty value for IntegerField,"Thanks Areski Belaid for the initial patch.
",timgraham,None,2013-05-24T18:51:33Z,2014-07-13T22:50:14Z
1212,Fixed #17582 - Added message to DoesNotExist exceptions.,"Thanks simon@ for the suggestion and JordanPowell
for the initial patch.
",timgraham,None,2013-05-24T17:34:48Z,2014-07-06T03:44:08Z
1211,Fixed #20099 -- Eased subclassing of BrokenLinkEmailsMiddleware,"An alternative approach based on coolRR patch
",claudep,None,2013-05-24T15:56:49Z,2014-06-14T16:07:59Z
1210,Update link to jQuery Cookie plugin site,"The jQuery plugins website has been updated. This pull requests updates the link to the jQuery Cookie plugin in the Django CSRF docs.

It would be useful to update the link where it appears in 1.4.X and 1.5.X branches as well.
",alasdairnicol,None,2013-05-24T13:41:48Z,2014-07-20T01:22:30Z
1209,Link to active project for ODBC backend,"It took me quite some time to find if and where the ODBC backend was maintained.
On djangoproject.com I found:
http://code.google.com/p/django-pyodbc/ (last commit about 3 years ago)
then:
https://github.com/avidal/django-pyodbc avidal fork.
then:
https://github.com/aurorasoftware/django-pyodbc/ aurorasoftware version which has avidal improvements merged and is actively maintained and is also the version installed through PIP.

Avidals version now links to https://github.com/aurorasoftware/django-pyodbc/ 
(See https://github.com/aurorasoftware/django-pyodbc/issues/4)
",tax,None,2013-05-24T10:40:30Z,2014-06-13T04:31:13Z
1208,Fixed #9532 -- min_num on formsets,"Added min_num parameter to formsets.
",yokomizor,None,2013-05-24T06:14:35Z,2014-06-19T12:35:48Z
1207,"SuspiciousOperation, add logging and no longer return 500 from handler","For ticket #19866

Will squash/rebase after review
",ptone,None,2013-05-23T17:46:18Z,2014-06-15T17:19:42Z
1206,Fixed #20488 -- Added copy and move methods to the storage API,#NAME?,kux,None,2013-05-23T16:26:09Z,2014-07-12T04:22:24Z
1205,Added `SingleObjectMixin.lookup_field`.,"Deprecates `pk_url_kwarg`, `slug_url_kwarg`, and `slug_field`.

References [trac20342](https://code.djangoproject.com/ticket/20342).

Quoting the trac ticket...

> SingleObjectMixin currently exposes these three attributes and one method all dealing with queryset filter arguments...
> 
> pk_url_kwarg = 'pk'
> slug_field = 'slug'
> slug_url_kwarg = 'slug'
> get_slug_field()
> 
> I was wondering if it would be worth considering simplifying the API somewhat, by moving those three attributes, and that method, into a PendingDeprecation state, and replacing their usage with a single attribute instead, that is used both as the URL kwarg, and as the queryset filter.
> 
> lookup_field = 'pk'
> 
> That'd (eventually) lead to a simpler get_object implementation internally, and (immediately) present a slightly nicer, simpler API.
",tomchristie,None,2013-05-23T13:55:26Z,2014-07-20T01:22:32Z
1204,Fixed #20484 -- GenericIPAddressField must not allow blank for NOT NULL fields,,mxsasha,None,2013-05-23T10:01:28Z,2014-06-19T19:44:50Z
1203,Fixes #20244 -- Recommend swappable users are named User.,"Swappable users which are using `PermissionsMixin` should be called `User` wherever possible to ensure maximum swappability. We cannot fix the related_name of the relationships defined in `PermissionsMixin` as it would break backwards compatibility. This should be considered an optional extension to the user contract for external applications if they are depending on those automatically generated relationships.

Ticket: https://code.djangoproject.com/ticket/20244

I've also updated all examples of `MyUser` in the documentation to be called `User` to set a better example.
",mjtamlyn,None,2013-05-23T09:58:19Z,2014-06-19T23:50:09Z
1202,Ticket 18967: Fix non-standard message/rfc822 base64 encoding issue,"django.core.mail.EmailMessage._create_mime_attachment incorrectly encodes message/rfc822 attachments in base64, breaks in Evolution and Thunderbird

https://code.djangoproject.com/ticket/18967
",micolous,None,2013-05-23T08:36:53Z,2014-06-16T06:47:21Z
1201,Fixed comments for translators example in the i18n documentation,"The documentation regarding adding a comment for translators was confusing
as the example contained mismatching tags.
",takis,None,2013-05-23T08:25:52Z,2014-07-20T01:22:33Z
1200,Fixed #11398 - Added a pre_syncdb signal,,dstufft,None,2013-05-23T03:52:58Z,2014-06-29T18:22:50Z
1199,Add predicate decorator to not match specific view (#20479),"Predicates is concept brought back from Pyramid, Pylon.
It has the goal of allowing a better organization of your function based view and get rid of redundant code as `if request.method == 'POST`

ticket : https://code.djangoproject.com/ticket/20479#ticket
",rach,None,2013-05-22T15:23:35Z,2014-07-10T10:15:21Z
1198,Fixed #20478 – Added support for HTTP PATCH method in generic views.,"Link to ticket: https://code.djangoproject.com/ticket/20478
",KrzysiekJ,None,2013-05-22T13:28:20Z,2014-06-30T12:15:21Z
1197,Don't automatically collapse `''` and `None` for keys.,"Ticket #19299 which I forgot to send this for.

Many databases treat these differently, including MySQL, and there are
legitimate cases where `''` is a valid value in key fields. This change
updates both the ForeignKey class and the row cache to check the
connection feature `interprets_empty_strings_as_nulls` and will collapse
these two values if that's `True`, otherwise it will treat them
differently.
",ghost,None,2013-05-22T04:57:07Z,2014-06-18T12:46:29Z
1196,Slightly reworded 'last()' docs,"Slightly reworded 'last()' docs based on @ptone's [feedback](https://github.com/django/django/pull/1056)
",selwin,None,2013-05-21T16:21:19Z,2014-07-20T01:22:35Z
1195,"Limit ""first()"" and ""last()"" to return only the first object","Performance improvement for `first()` and `last()`. Slightly updated docs based on @ptone 's feedback [here](https://github.com/django/django/pull/1056)
",selwin,None,2013-05-21T16:04:14Z,2014-07-04T12:14:36Z
1194,Fixed a Python 2.6 regression (GzipFile can't act as a context manager),"Tested on 2.6, 2.7 and 3.3.
",ambv,None,2013-05-21T11:20:08Z,2014-07-20T01:22:35Z
1193,Make django.db importable without triggering settings,,claudep,None,2013-05-21T11:14:55Z,2014-07-07T05:34:52Z
1192,Use assertIsInstance in test code.,"This'll give much more understandable test output when these tests fail.
",mjtamlyn,None,2013-05-21T09:43:28Z,2014-07-20T01:22:36Z
1191,Fixed #20472: response.content should be bytes on both Python 2 and 3,"Without the patch having `ConditionalGetMiddleware` enabled under Python 3.x results in the following exception when running `manage.py runserver`:

```
Traceback (most recent call last):
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/wsgiref/handlers.py"", line 138, in run
    self.finish_response()
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/wsgiref/handlers.py"", line 178, in finish_response
    for data in self.result:
  File ""/Users/ambv/Documents/Projekty/Python/django/django/http/response.py"", line 288, in __next__
    return self.make_bytes(next(self._iterator))
  File ""/Users/ambv/Documents/Projekty/Python/django/django/http/response.py"", line 270, in make_bytes
    return bytes(value)
TypeError: string argument without an encoding
```
",ambv,None,2013-05-20T22:44:29Z,2014-06-12T20:59:01Z
1190,Removed a confusing duplicate SESSION_COOKIE_DOMAIN header,"The note is clearly a part of MESSAGE_STORAGE documentation. As a separate
section, it broke automatic link generation on the HTML version of the
documentation.
",ambv,None,2013-05-20T21:00:11Z,2014-07-16T23:58:55Z
1189,Allow redirect middleware HTTP responses to be overridden  (ticket #19321),"This pull request adds tests for Aymeric's redirects middleware patch added in [ticket 19321](https://code.djangoproject.com/ticket/19321).

Do we want to document this? There was some hesitation expressed in [ticket 19277](https://code.djangoproject.com/ticket/19277).
",ryankask,None,2013-05-20T19:27:46Z,2014-06-12T04:48:27Z
1188,Add for_concrete_model to GenericForeignKey,"Allows a GenericForeignKey to reference proxy models. The default for for_concrete_model is True to keep backwards compatibility.

Fixes https://code.djangoproject.com/ticket/17648
",gavinwahl,None,2013-05-20T18:11:33Z,2014-06-14T16:21:24Z
1187,[1.5.x] Fix typo in redirect view docs,"Backport of a936726228 from master

Thanks for merging my pull request #1184. This pull request fixes the same typo in the 1.5.x docs. I'm not certain of the etiquette for getting docs patches backported -- I hope that opening a second pull request like this is ok.
",alasdairnicol,None,2013-05-20T09:49:32Z,2014-06-16T06:47:19Z
1186,Added django-auth-ldap to the docs with url to homepage,"I added django-auth-ldap to the howto/auth-remote-user.txt
",wckd,None,2013-05-20T08:30:49Z,2014-07-20T01:22:38Z
1185,Ignore forms marked for deletion when validating the max number of forms,"This is for ticket #20403 (https://code.djangoproject.com/ticket/20403).
",ryankask,None,2013-05-20T08:07:27Z,2014-06-27T12:12:04Z
1184,Fix typo in redirect view docs,"The typo appears in the dev and 1.5 docs.
",alasdairnicol,None,2013-05-19T23:01:47Z,2014-07-20T01:22:39Z
1183,Fixed #13813 -- DatabaseWrapper comparison should not raise error,"Ticket: https://code.djangoproject.com/ticket/13813
",lukaszb,None,2013-05-19T22:26:21Z,2014-07-18T10:33:16Z
1182,Fixed #17942 - added JsonResponse class,"https://code.djangoproject.com/ticket/17942
",lukaszb,None,2013-05-19T20:31:43Z,2014-06-25T06:59:06Z
1181,Changed API to disable ATOMIC_REQUESTS per view.,"A decorator is easier to apply to CBVs. Backwards compatibility isn't an
issue here, except for people running on a recent clone of master.

Fixed a few minor problems in the transactions docs while I was there.
",aaugustin,None,2013-05-19T19:31:36Z,2014-07-20T01:22:39Z
1180,Adding **kwargs to CommentSecurityForm __init__ method,"Use case. If i create my own Comment class subclassing CommentSecurityForm and I use files in that form there is no way to pass that to the BaseForm as the CommentSecurityForm does not accept that keyword argument  or **kwargs. So please implement this. Thanks.
",tejinderss,None,2013-05-19T18:03:42Z,2014-07-20T01:22:40Z
1179,"Fixed #11725 -- Made possible to create widget label tag without ""for""","Now when overriding id_for_label for a BoundField, so that it would
return None, you would get a label without ""for"" attribute, rather than
a label with ""for"" attribute equal to ""None"" string.
",sergeykolosov,None,2013-05-19T14:57:46Z,2014-06-12T12:26:55Z
1178,Fix for test failure,"The failure was caused by the tests being sensitive to querystring ordering in some URLs.

I fixed it by parsing the querystring with `django.http.QueryDict` when necessary.
",bmispelon,None,2013-05-19T14:56:33Z,2014-07-07T09:08:31Z
1177,Idiomatic Python: use lists where appropriate,"Tuples are not the same thing as frozen lists and should not be used as such.

This change only touches user-visible lists and should be backwards-compatible.

Ticket: https://code.djangoproject.com/ticket/20466
",patrys,None,2013-05-19T14:50:06Z,2014-06-20T03:02:47Z
1176,Fixed #5711: serialize doesn't work with extra(),"Added 'extra' argument for serialization of non-field attributes.

This fixes https://code.djangoproject.com/ticket/5711
",senko,None,2013-05-19T14:44:24Z,2014-06-15T23:42:41Z
1175,Fixed #1919 -- filter truncatewords is inefficient and destroys white space,"Used @arien's patch and @SmileyChris' comments, integrated with current code, hopefully made even more efficient for long strings by not splitting and rejoining them.

https://code.djangoproject.com/ticket/1919
",qris,None,2013-05-19T14:42:51Z,2014-08-29T11:43:09Z
1174,"Fixes #20459 -- Better example for set http header field, mention of header patch methods","@aaugustin
",bbjay,None,2013-05-19T14:38:43Z,2014-07-11T02:06:54Z
1173,Fixed #17048 -- Added documentation for upgrading Django version,,crainbf,None,2013-05-19T13:49:40Z,2014-07-20T01:22:42Z
1172,Fix #19664 -- Illegal Characters In Session Key Give Fatal Error On File Backend Only,,mxsasha,None,2013-05-19T13:27:49Z,2014-06-24T08:06:50Z
1171,Ticket no. 20183 - documentation note about existing data,"This is fix for ticket no. 20183 (https://code.djangoproject.com/ticket/20183).

Generally documentation pages suggest the code should work as-is, but this breaks on one of the documentation pages. Some earlier example mentions that specific instance has already been created, but in this case there is no note, and adding full creation code would blur the examples (according to [this comment](https://code.djangoproject.com/ticket/20183#comment:6)).

The fix is simply to notify the user that the instances in question have already been saved in the database. If the fix is not enough, it is possible to rewrite the example to use models with less required fields.
",tadeck,None,2013-05-19T13:24:29Z,2014-06-25T07:04:22Z
1170,Fixed #20079 -- Improve security of password reset tokens,,viciu,None,2013-05-19T13:21:12Z,2014-06-16T01:20:50Z
1169,Fixed #1891 -- ForeignKey with m2m filter can duplicate foreign model entries in ModelForm/ModelChoiceField,"https://code.djangoproject.com/ticket/1891

Tests pass on SQLite:

```
Ran 5639 tests in 654.068s
OK (skipped=417, expected failures=10)
```
",qris,None,2013-05-19T13:20:16Z,2014-06-16T09:20:19Z
1168,Ticket 15653,"There is a small bug in calculating change list's page range.
It hasn't been noticed yet due to particular values of constants ON_EACH_SIDE, ON_ENDS.

The pull request contains a fix authored by adamzap and a test.

Please see https://code.djangoproject.com/ticket/15653 for more details.
",nott,None,2013-05-19T12:51:42Z,2014-07-20T01:22:43Z
1167,Fixed #10899 - Manipulate Session with test Client,"Thanks to prestontimmons for the initial patch. https://code.djangoproject.com/ticket/10899 
",denibertovic,None,2013-05-19T12:46:53Z,2014-06-25T23:16:16Z
1166,Fixed #15961 -- Added get_search_results to ModelAdmin,"This adds the get_search_results entry point to make the admin search more customisable.
",bbenko,None,2013-05-19T12:41:17Z,2014-06-17T06:55:09Z
1165,Ticket 20250,"A negated Q along with an annotated queryset used to fail in Django 1.4. It is no more the case in Django 1.5.

This pull request contains a regression test in order not to face the issue again.

Please see https://code.djangoproject.com/ticket/20250 for more details.
",nott,None,2013-05-19T12:23:14Z,2014-07-20T01:22:44Z
1164,Integrity problems when using get_or_create through M2M,"As described on [#18896](https://code.djangoproject.com/ticket/18896), if we use `get_or_create` through M2M fields or reverse FK, we can have integrity problems. As there's no obvious solution over here, I'm adding a note into the documentation for it. I also added a couple of tests cases for checking that bug.
",pablorecio,None,2013-05-19T12:19:07Z,2014-06-23T16:17:35Z
1163,Ticket 19303,"Allows user to override widgets in admin for db fields that specifies choices explicitly.

Those are without any refactor (as suggested at https://code.djangoproject.com/ticket/19303#comment:2) - as refactor would involve more changes than this fix while still not helping in readability a lot [choices field would still need to be handled as a special case]).
",lukaszb,None,2013-05-19T11:44:33Z,2014-06-14T03:06:05Z
1162,"Add needed Imports to the Documentation, Part II","@mjtamlyn
We added missing imports and checked the examples in the following chapters of the documentation (again):

The template layer (@sspross)
Forms (@LeaFin)
The admin (@vkuzma)
Security (@sspross)
Internationalization and localization (@sspross)

All chapters have been checked by a second person, but there may be more missing imports.
",sspross,None,2013-05-19T11:40:19Z,2014-07-10T23:43:18Z
1161,Fix #19070 -- Additional test for urlize and brackets,,mxsasha,None,2013-05-19T11:40:06Z,2014-06-15T18:04:56Z
1160,Fixed #11442 -- Postgresql backend casts all inet types to text,,mxsasha,None,2013-05-19T11:29:23Z,2014-06-25T18:50:51Z
1159,Ticket19380,"exclude fails on F object referencing annotation
",asendecka,None,2013-05-19T11:23:40Z,2014-06-28T09:30:03Z
1158,Make SortedDict.update behave like dict.update (#15812),"Uses MutableMapping.update (http://hg.python.org/releasing/2.7.3/file/7bb96963d067/Lib/_abcoll.py#l483) as used in collections.OrderedDict.

More notes here: https://code.djangoproject.com/ticket/15812
",ryankask,None,2013-05-19T11:09:03Z,2014-07-09T14:51:24Z
1157,Fix #20447: URL names given to contrib.auth.views are now resolved.,"This commit also adds tests for the redirect feature of most auth views.
It also cleans up the tests, most notably using @override_settings instead
of ad-hoc setUp/tearDown methods.

Thanks to caumons for the report.
",bmispelon,None,2013-05-19T11:05:53Z,2014-06-18T13:38:14Z
1156,Fixed #56 -- Primary key columns should be UNSIGNED,"https://code.djangoproject.com/ticket/56

Thanks to pzinovkin for the original patch. I updated it and wrote some tests, which pass on SQLite.
",qris,None,2013-05-19T11:05:45Z,2014-07-08T16:31:53Z
1155,Ticket #18338 & #19425,"Those both tickets intend to get_extra and get_max_num from django-admin
Feedback will be welcome
",areski,None,2013-05-19T10:59:34Z,2014-07-01T09:51:43Z
1154,Fixed #12747 -- Made reason phrases customizable.,,aaugustin,None,2013-05-19T10:59:16Z,2014-06-18T17:51:22Z
1153,Fixed #20449 - Altering CWD for one of the tests,"This is fix for Trac ticket no. 20449, which caused test runner issues for when the command was run from different directory. Now the current working directory is changed for this single test, as proposed in the original ticket.
",tadeck,None,2013-05-19T10:58:34Z,2014-06-15T16:49:17Z
1152,Fixed #11915: generic Accept-Language matches country-specific variants,"Tested on both 2.7 and 3.3.
",ambv,None,2013-05-19T10:51:47Z,2014-07-10T09:24:43Z
1151,Fixes Ticket #16330,"This PR fixes ticket #16330 and incorporates all changes requested in the comments.
",KevinBrolly,None,2013-05-19T10:45:41Z,2014-06-12T23:16:06Z
1150,"Fixed #15318 -- Added settings for language cookie max-age, path, domain","Introduced a number of settings to configure max-age, path, and domain
for the language cookie: LANGUAGE_COOKIE_AGE, LANGUAGE_COOKIE_PATH and
LANGUAGE_COOKIE_DOMAIN.
",sergeykolosov,None,2013-05-19T10:42:10Z,2014-06-25T07:10:03Z
1149,simple pep8 fixes,,AndreaCrotti,None,2013-05-19T10:24:39Z,2014-07-20T01:22:49Z
1148,Fixed #20034 - Ability to retrieve variables in multipart even before parsing files,"This is about Trac ticket no. 20034, alters pull request for #898, verifies it, adds tests and documentation.

The new method `variable_complete`, if supplied by the file upload handler, works similarly to `file_complete` and allows to raise `StopFutureHandlers` if future handlers should not be allowed to parse the variable.

This is my first PR to Django. Please verify if there is something lacking in it. Thanks.
",tadeck,None,2013-05-19T09:57:29Z,2014-06-16T21:13:37Z
1147,Added TransRealMixin to fix i18n global state pollution in the test suite,"Tests pass on Python 2.7 and 3.3.
",ambv,None,2013-05-19T09:46:26Z,2014-06-25T01:11:43Z
1146,fix for #20452,"rename 'headers' to 'header fields'
",bbjay,None,2013-05-19T09:31:44Z,2014-06-30T14:40:10Z
1145,refs #20233 - Full custom user model example isn't really full,"Addition and fix for custom user model example documentation.

https://code.djangoproject.com/ticket/20233

I added the missing fragment to the docs.

I also tested the docs and found another problem with this example. 
When you use the provided code, you will get this error:

```
ImproperlyConfigured at /admin/
'MyUserAdmin.fieldsets[3][1]['fields']' refers to field 'last_login' that is missing from the form.
```

It complains that we're referring to a missing field `last_login`.
In order to correct this, you can simply remove the offending line:

```
('Important dates', {'fields': ('last_login',)}),
```

I added both changes to the docs file.
",postrational,None,2013-05-19T08:55:35Z,2014-07-18T11:24:07Z
1144,Fixed #2856 -- Admin's Recent Actions will link to a 404 when an object ...,"Fixed #2856 -- Admin's Recent Actions will link to a 404 when an object has been deleted.
",lechup,None,2013-05-19T08:51:37Z,2014-06-12T12:15:15Z
1143,A simple docstring to clarify a part of the code that might be confusing to understand,"Python2 and how metaclasses are defined
",AndreaCrotti,None,2013-05-19T08:38:00Z,2014-07-20T01:22:51Z
1142,Make Urdu (ur) recognized as RTL language. Refs #20454," In #15300, Urdu was added, but not added to the list of RTL locales. But it is.

References: ​https://github.com/django/django/blob/master/django/contrib/admin/locale/ur/LC_MESSAGES/django.po shows if you select bidi text, and ​http://en.wikipedia.org/wiki/Urdu says so.

This is for https://code.djangoproject.com/ticket/20454.
",Pike,None,2013-05-19T08:30:40Z,2014-06-13T06:31:17Z
1141,Typo in comment,,inglesp,None,2013-05-19T07:30:46Z,2014-07-20T01:22:51Z
1140,Fix for #18866: added check and improved error message for syncdb error ...,"...when using models with verbose_name longer than 50 chars
",djangsters,None,2013-05-18T16:36:02Z,2014-06-14T04:54:27Z
1139,Make sure QuerySet.get() never fetches more than two rows,"Currently if you pass incorrect parameters to get you can end up fetching a huge number of rows and possibly run out of memory for the sake of displaying the number of matched rows.
",patrys,None,2013-05-18T16:34:19Z,2014-06-18T04:18:11Z
1138,Fixed #20126 -- XViewMiddleware moved to django.contrib.admindocs.middleware,"Tested under 2.7 and 3.3.
",ambv,None,2013-05-18T16:25:08Z,2014-07-20T01:22:52Z
1137,Fix #20445 and add some useful comments to the test involved.,"Implementation comments in track https://code.djangoproject.com/ticket/20445 
",jorgebastida,None,2013-05-18T16:19:14Z,2014-06-26T12:50:18Z
1136,Cleanup of for sharing it more consistently across the code,"Related to ticket [#20450](https://code.djangoproject.com/ticket/20450)
",pablorecio,None,2013-05-18T16:13:15Z,2014-07-20T01:22:53Z
1135,Fixes a Python 3.x regression introduced in a19e9d80,,ambv,None,2013-05-18T16:07:17Z,2014-07-20T01:22:53Z
1134,Fixed #18990: Loaddata now complains if fixture doesn't exist,"The fixture named ""initial_data"" is exceptional though; if it
doesn't exist, the error is not raised. This allows syncdb and
flush management commands to attempt to load it without causing
an error if it doesn't exist.

This pull request fixes https://code.djangoproject.com/ticket/18990
",senko,None,2013-05-18T16:05:08Z,2014-07-02T13:16:26Z
1133,Allow fully qualified paths in {% load %} tag,"This removes the requirement of having apps listed in `INSTALLED_APPS` in order for `{% load %}` to find them.

The documentation used to claim that this was due to security reasons but there are better tools to limit available modules (virtualenv).

This change makes it possible to build and distribute tag-only modules without the need of shipping an empty `models.py` and requiring them to be added to `INSTALLED_APPS`.

Ticket: https://code.djangoproject.com/ticket/12772
",patrys,None,2013-05-18T15:59:03Z,2014-12-26T23:51:16Z
1132,Ticket 20429,"Ticket https://code.djangoproject.com/ticket/20429
",sicarrots,None,2013-05-18T15:55:47Z,2014-06-12T18:40:22Z
1131,Fixed #19489 - assertRedirects host parameter not in the doc,"Added 'host' argument to method signature and corrected grammar.
",gajimenezmaggiora,None,2013-05-18T15:45:24Z,2014-06-30T20:45:01Z
1130,Fix NoneType error when fetching a stale ContentType with get_for_id,"When a stale ContentType is fetched with `get_for_id()`, a `NoneType` error was raised.

The `_add_to_cache()` function didn't detect that `model_class()` returns `None` (which it does by design). However, the `app_label` + `model` fields can be used instead to as local cache key. Third party apps can detect stale models by checking whether `model_class()` returns `None`; as they'd previously had to do as well.

Ticket: https://code.djangoproject.com/ticket/20442
",vdboor,None,2013-05-18T15:42:54Z,2014-06-27T14:48:39Z
1129,Add needed Imports to the Documentation,"@mjtamlyn
We added missing imports and checked the examples in the following chapters of the documentation:
- First steps (@LeaFin)
- The model layer (@frog32)
- The view layer (@sspross)

All three chapters have been checked by a second person, but there may be more missing imports.
",frog32,None,2013-05-18T15:34:47Z,2014-07-20T01:22:55Z
1128,Fixed #20446 -- Documentation for SmallIntegerField does not clarify 'small',,mxsasha,None,2013-05-18T15:17:14Z,2014-06-18T07:57:10Z
1127,Fixed #20142 -- Added error handling for fixture setup,"https://code.djangoproject.com/ticket/20142

This fix does not contain tests as it is impossible to test it without mocking and a decision about using mocks in the project as yet not been made. This was discussed and agreed with Russel.
",filias,None,2013-05-18T15:11:27Z,2014-07-20T01:22:56Z
1126,truncatechars_html,"For ticket #19496 and should now fix the issue of having a white space rather than an additional character

Also fixed truncatechars as this had become broken in the original version
",martmatwarne,None,2013-05-18T15:07:18Z,2014-06-17T17:06:16Z
1125,Fixed #20435 Rearranged some paragraphs to situate the simple stuff first,"https://code.djangoproject.com/ticket/20435
Also relevant: https://code.djangoproject.com/ticket/20434
",danielquinn,None,2013-05-18T15:05:12Z,2014-06-30T20:36:45Z
1124,ticket #17471 - Add ability to use smtplib.SMTP_SSL connection when sending email,,areski,None,2013-05-18T15:02:45Z,2014-06-29T20:44:01Z
1123,Improved patch for #23,,jgeskens,None,2013-05-18T15:01:54Z,2014-06-14T23:25:20Z
1122,Fixed #13285: populate_xheaders breaks caching,"Tested on 2.7 and 3.3.
",ambv,None,2013-05-18T14:53:49Z,2014-06-22T06:38:59Z
1121,Added some links in /docs/intro/overview.txt,"There couldn't be too many links in the docs :)
",ClaesBas,None,2013-05-18T14:50:00Z,2014-07-16T17:40:22Z
1120,My patch for ticket 20284,"As described at https://code.djangoproject.com/ticket/20284, it was lacking a mention that serving static assets in production was dependent on the DEBUG settings.

So I replaced the single line of text ""Now, if you use ./manage.py runserver, all static files should be served automatically at the STATIC_URL and be shown correctly."" by a more complete note block (also re-stating that this was not a proper solution for production environments, and added links to relevant documentation).

Please note that I'm not a native English speaker.
",niconoe,None,2013-05-18T14:37:55Z,2014-06-23T10:06:37Z
1119,Fixed #20444 -- Cookie-based sessions does not include a remote code execution warning,,mxsasha,None,2013-05-18T14:36:20Z,2014-06-13T09:11:10Z
1118,Fixed #20441 -- Fixed invalid Swedish ordinal messages.,"For details please see https://code.djangoproject.com/ticket/20441
",zerok,None,2013-05-18T14:29:56Z,2014-07-20T01:22:58Z
1117,Add test for ticket #16731.,,kvsn,None,2013-05-18T14:25:32Z,2014-06-25T06:43:22Z
1116,Ticket 20234 20236,"Resolved: https://code.djangoproject.com/ticket/20234 and https://code.djangoproject.com/ticket/20236
",sicarrots,None,2013-05-18T14:15:25Z,2014-06-26T05:32:50Z
1115,Documented the {% language %} template tag,"See #20335
",djangsters,None,2013-05-18T14:15:12Z,2014-07-20T01:22:59Z
1114,Marked CACHE_MIDDLEWARE_ANONYMOUS_ONLY as deprecated,"Fixes #15201.
",ambv,None,2013-05-18T14:13:36Z,2014-07-06T02:28:27Z
1113,Fix #18761: Added whitespace stripping to URLField and SlugField,,denibertovic,None,2013-05-18T14:08:59Z,2014-06-25T11:25:25Z
1112,Fixed #20443 -- Import errors in settings cause confusing error messages,,mxsasha,None,2013-05-18T13:50:00Z,2014-06-20T23:10:50Z
1111,Ticket 16304 -- Add HTML5 placeholder attribute support to form fields,"As discussed in [#16304](https://code.djangoproject.com/ticket/16304), the addition of placeholders to input boxes should be easier than this:

```
comment = forms.CharField(max_length=200, widget=forms.TextInput({ ""placeholder"": ""Text!""}))
```

With this change, it will be something like this:

```
comment = forms.CharField(max_length=200, placeholder=""Text!"")
```

Tests done and docs updated.
",jgasteiz,None,2013-05-18T13:40:08Z,2014-06-17T20:06:43Z
1110,Don't log warnings in ensure_csrf_cookie decorator,"See ticket #19436.
https://code.djangoproject.com/ticket/19436
",oliviersels,None,2013-05-18T13:38:08Z,2014-06-22T05:04:34Z
1109,Fixes #20440 - forms.CharField should return an exception if max_length is not an integer,"In models.CharField you can define a verbose_name by placing a string as the first parameter, i.e. models.CharField(""foo"")
If you by mistake happen to define a forms.CharField with the same pattern, i.e. forms.CharField(""foo""), there will be no error message and the input field will be rendered with the attribute maxlength=""foo"" which is invalid.

The proposed solution is to attempt to cast non-empty max_length and min_length values to an int in the init method of CharField.
",cvitan,None,2013-05-18T13:28:01Z,2014-07-20T01:23:01Z
1108,Make Model.__repr__() safe,"`__repr__` is mainly used in the debugging context and it calling `__unicode__` can yield unwanted consequences such as executing a database query (I guess it's a common thing with translated objects).

This implementation also makes it easier to find the object in the database as it displays its primary key which is the only field we can assume to be indexed.

All tests pass.
",patrys,None,2013-05-18T13:27:33Z,2014-07-07T06:05:50Z
1107,Add aggregate suggestion to distinct notes (ticket #19842),,jgeskens,None,2013-05-18T13:25:47Z,2014-06-15T01:19:44Z
1106,Ticket #20246: Use non-breakable space between amount and units,,EmilStenstrom,None,2013-05-18T13:24:21Z,2014-06-19T16:24:15Z
1105,Fixes #20440 - forms.CharField should return an exception if max_length is not an integer,"In models.CharField you can define a verbose_name by placing a string as the first parameter, i.e. models.CharField(""foo"")
If you by mistake happen to define a forms.CharField with the same pattern, i.e. forms.CharField(""foo""), there will be no error message and the input field will be rendered with the attribute maxlength=""foo"" which is invalid.
The proposed solution is to attempt to cast non-empty max_length and min_length values to an int in the init method of CharField.
",cvitan,None,2013-05-18T13:14:21Z,2014-07-20T01:23:02Z
1104,#17308 - Use short description with properties in the admin,,viciu,None,2013-05-18T13:09:58Z,2014-07-03T02:50:55Z
1103,Fix #18998 and #20438,"Fix both issues together as the code implicated is the same:

[#18998](https://code.djangoproject.com/ticket/18998?cnum_edit=10#comment:2)) If a backend is configured in `AUTHENTICATION_BACKENDS` but the module is not longer available django raises an `ImproperlyConfigured` instead of returning an `AnonymousUser`.

As @claudep said in first instance [#18998](https://code.djangoproject.com/ticket/18998?cnum_edit=10#comment:1), django should catch `ImproperlyConfigured` and return an `AnonymousUser` instead.

The solution is pretty straightforward( https://github.com/jorgebastida/django/commit/347606c7d20b89b7bd891e597d96b82b8a788c39)

As mentioned in [#18998](https://code.djangoproject.com/ticket/18998?cnum_edit=10#comment:2), [#20438](https://code.djangoproject.com/ticket/20438#ticket) is related to [#18998](https://code.djangoproject.com/ticket/18998?cnum_edit=10#comment:2) and as both use mostly the same test case, will fix both together.

[#20438](https://code.djangoproject.com/ticket/20438#ticket)) If a user logs in with backend `A` and then we remove `A` from `AUTHENTICATION_BACKENDS` the user will still be log in even if the backend is no longer available in `AUTHENTICATION_BACKENDS` but the module is.

In order to fix this bug we need to check if `backend_path` is in `settings.AUTHENTICATION_BACKENDS` before loading the backend (https://github.com/jorgebastida/django/commit/116ac198ff3aeaa0cbe08c7a89f6127fa2d0e78c)

Both changes have regression tests attached and I don't think any documentation is needed.
",jorgebastida,None,2013-05-18T12:57:01Z,2014-07-20T01:23:03Z
1102,Update custom-template-tags.txt,"Fixes for #20417 - added comment on custom template tags and server restart.
",boromil,None,2013-05-18T12:42:12Z,2014-07-20T01:23:03Z
1101,Fixed argument order for localized_fields to ensure backwards compatibility,"This corrects a potential backwards incompatibility introduced in https://github.com/django/django/pull/1084 because the localized_fields kwarg was not always placed at the end of the argument list.
",mxsasha,None,2013-05-18T12:40:52Z,2014-06-14T17:15:13Z
1100,"Fixes #19919: get_language_from_request() disregards ""en-us"" and ""en""","...languages when matching Accept-Language.
",ambv,None,2013-05-18T12:39:44Z,2014-07-07T09:08:06Z
1099,Test #12027 -- email validation for period at end,"I just added a test for this as it appears unclear https://code.djangoproject.com/ticket/12027#comment:4 whether this is a bug or not. 
",shezadkhan137,None,2013-05-18T12:37:27Z,2014-07-20T01:23:04Z
1098,Added example of using sitemaps with static views.,"References #16829.
",zsiciarz,None,2013-05-18T12:29:27Z,2014-07-20T01:23:05Z
1097,Update documentation for cookies-based sessions,"Trac ticket: https://code.djangoproject.com/ticket/20418
",nmundar,None,2013-05-18T12:21:22Z,2014-07-20T01:23:05Z
1096,Fix for #16027 - Changed __repr__ function of ContentType model,"see #16027
",djangsters,None,2013-05-18T12:10:23Z,2014-06-19T22:39:11Z
1095,"Fixed #19031: Added documentation about, and a UserWarning when using settings that can show unexpected behaviour",,joeribekker,None,2013-05-18T12:07:04Z,2014-06-28T11:05:14Z
1094,Fix for Ticket #11160,"This pull request fixes https://code.djangoproject.com/ticket/11160
",senko,None,2013-05-18T12:05:59Z,2014-07-10T10:03:57Z
1093,Fix #20296: allow SafeData and EscapeData to be lazy.,,bmispelon,None,2013-05-18T11:59:00Z,2014-07-01T09:51:44Z
1092,Fix #18998 - Removing a backend configured in AUTHENTICATION_BACKENDS ma...,"If a backend is configured in `AUTHENTICATION_BACKENDS` but the module is not longer available django raises a `ImproperlyConfigured` instead of returning an `AnonymousUser`.

As @claudep said in first instance (https://code.djangoproject.com/ticket/18998?cnum_edit=10#comment:1), django should catch  `ImproperlyConfigured` and return an `AnonymousUser` instead.

As mentioned in (https://code.djangoproject.com/ticket/18998?cnum_edit=10#comment:2) there is another bug related to this piece of code. I've just raise another ticket (https://code.djangoproject.com/ticket/20438#ticket) in order to fix it too.
",jorgebastida,None,2013-05-18T11:56:34Z,2014-07-20T01:23:07Z
1091,#9595 Cache timeout changes,"Adds the ability to set a non expiring timeouts and makes sure the memcache backend matches the other backends in terms of handling 0 as a timeout (set and expire)

Relevant ticket: https://code.djangoproject.com/ticket/9595
",jacobb,None,2013-05-18T11:30:58Z,2014-06-16T08:04:57Z
1090,Fixed #20433: Extract catalog compilation code from javascript_catalog view.,,zyegfryed,None,2013-05-18T11:22:21Z,2014-06-16T08:55:48Z
1089,Ticket 20234 20236,"Resolved: https://code.djangoproject.com/ticket/20234 and https://code.djangoproject.com/ticket/20236
",sicarrots,None,2013-05-18T11:20:57Z,2014-07-20T01:23:07Z
1088,#20432: Fix for GroupAdmin test,"Currently running a full test suite breaks creates a content-type permission that doesn't get cleared from the cache. This adds the appropriate method to the tearDown so the test suite passes again.
",jacobb,None,2013-05-18T11:07:14Z,2014-06-25T00:19:52Z
1087,removed unneded code in get_context_data in FormMixin,"Fixes https://code.djangoproject.com/ticket/20236
",sicarrots,None,2013-05-18T10:45:04Z,2014-07-20T01:23:08Z
1086,Add test for #9054.,"The bug itself is no longer present.
",senko,None,2013-05-18T10:43:31Z,2014-06-24T05:52:46Z
1085,Documented context processors in TemplateResponseMixin.,"References #20294.
",zsiciarz,None,2013-05-18T10:37:27Z,2014-07-20T01:23:09Z
1084,Fixed #13546 -- Easier handling of localize field options in ModelForm,"Added a localized_fields ModelForm Meta option which sets the localize
option on the field.
",mxsasha,None,2013-05-18T10:34:31Z,2014-06-24T18:56:52Z
1083,Fixes #20235 - MultipleObjectMixin requires object_list in kwargs,"Use self.object_list if object_list not present in get_context_data kwargs.

This is so MultipleObjectMixin can be used in the same way as
SingleObjectMixin.

https://code.djangoproject.com/ticket/20235
",MarkusH,None,2013-05-18T10:21:59Z,2014-06-16T20:05:42Z
1082,Fixed some documentation on the MultiPartParser,"I was looking for an example of how to parse multi part uploads and noticed some inaccuracies in the documentation of the MultiPartParser class. I corrected it.
",hydrogen18,None,2013-05-17T23:53:11Z,2014-07-14T19:49:13Z
1081,Enable the use of any two item iterable within an iterable for choices,"Small change that enables the use of non list/tuple but still iterable two item objects for the model choices.
",dstufft,None,2013-05-17T19:36:47Z,2014-06-14T04:49:19Z
1080,Replaced an antiquated pattern.,"Thanks Lennart Regebro for pointing it out.
",aaugustin,None,2013-05-17T14:39:19Z,2014-06-16T10:23:15Z
1079,Tidy up some of the transaction documentation.,"I've reworded some parts of the atomic description and made one of the
examples a little easier to understand.

cc @aaugustin
",mjtamlyn,None,2013-05-17T14:15:51Z,2014-07-20T01:23:11Z
1078,Fixed #20401 - ContentTypeManager.get_for_model reads from db_for_read,,aptiko,None,2013-05-17T13:21:39Z,2014-06-12T07:51:50Z
1077,Retrofit fix to #18537 in stable/1.5.x as noted in pull-request #194.,"Applied Kevin Schaul's fix to issue [#18537](https://code.djangoproject.com/ticket/18537), originally reported and fixed in stable/1.5.x
",etoccalino,None,2013-05-17T04:11:48Z,2014-07-18T13:10:12Z
1076,Fix #20422: Fix makemessage's --ignore patterns being applied to,"the full path instead of the file name.
Thanks to nnseva for the report and the original patch.
",bmispelon,None,2013-05-16T16:35:23Z,2014-06-26T05:32:48Z
1075,Make introspection always return a unicode as column name on Oracle; fix...,"...es #20386
",shaib,None,2013-05-16T15:35:40Z,2014-07-20T01:23:12Z
1074,"Add ""from dual"" to sqls selecting constants in tests for Oracle, fixes #20388",,shaib,None,2013-05-16T12:44:26Z,2014-07-20T01:23:12Z
1073,Make the example usage of import_by_path less confusing.,"Using import_by_path to import import_by_path is a really odd use case and made the code example difficult to read
",mjtamlyn,None,2013-05-16T08:10:20Z,2014-06-28T12:55:35Z
1072,"small typo, example pk=27 but description pk=24","Very small change, I couldn't find a way to properly unit test though, hope it's ok ::)
",hrbonz,None,2013-05-16T07:24:23Z,2014-07-07T10:38:29Z
1071,Oracle fixes,"Fix for the Django Oracle backend's slow handling of numbers.
",shaib,None,2013-05-15T23:49:09Z,2014-06-20T23:38:15Z
1070,Fix bug introduced in contrib.gis in 74f3884ae0,"See discussion on #1069
",mfogel,None,2013-05-15T21:59:02Z,2014-07-20T01:23:13Z
1069,Fixed #20413 - Respect Query.get_meta(),"This commit addresses [#20413](https://code.djangoproject.com/ticket/20413).

I've ran through the full test suite with and without this patch - this patch has no effect on the output on my machine.
",mfogel,None,2013-05-15T20:14:41Z,2014-07-20T01:23:14Z
1068,Typo in code snippet,"Inner and outer quotes are both double quotes.
",tomleo,None,2013-05-15T15:34:12Z,2014-07-20T01:23:14Z
1067,"refs #20205 - positiveintegerfield null=True, blank=True",,areski,None,2013-05-15T15:21:23Z,2014-06-12T05:15:43Z
1066,Restore default time zone for next requests to the same thread,"Currently the docs suggest to conditionally activate a timezone, but not to deactivate the timezone afterwards. The documentation for timezone.activate states:

> Sets the time zone for the current thread.

The expected behaviour for any request would be to use the default timezone, not that of any previous request. Therefor the timezone should be deactivated in the middleware as well.
",Bouke,None,2013-05-15T13:07:28Z,2014-07-20T01:23:15Z
1065,Add a keys() method to ContextList.,"It's useful to be able to list all the (flattened) keys of a ContextList, to help you figure out why the variable that's supposed to be there is not. A ContextList is hard to interpret in pdb without a method like this.

All tests pass on SQLite. Not yet run on MySQL due to taking >3 hours to run the test suite.
",qris,None,2013-05-15T12:31:45Z,2014-06-25T06:39:26Z
1064,Minor spelling fix,"Just a one character change.
",Wilfred,None,2013-05-14T10:41:02Z,2014-07-14T19:49:13Z
1063,"Refs #20364, urlize correct rendering beggining or trailing quotas of url",,kriestof,None,2013-05-14T07:19:46Z,2014-06-24T21:20:10Z
1062,Recommend using the bcrypt library instead of py-bcrypt,#NAME?,dstufft,None,2013-05-14T03:52:46Z,2014-07-20T01:23:16Z
1061,Added a management command for compatibility checking.,"Per the discussion on -developers (https://groups.google.com/d/msg/django-developers/0xuznNH7aP0/9AY3w4Ng6SgJ), I started fleshing out an opt-in setup for checking compatibility between Django releases.

Consider this a WIP for now.
",toastdriven,None,2013-05-14T02:31:37Z,2014-07-20T01:23:16Z
1060,Fixed #20242 - Fixed issue with QuerySet __contains__ logic and prefetching objects,"This is a pull request for ticket #20242.
",svisser,None,2013-05-12T23:56:12Z,2014-06-24T14:23:34Z
1059,Changed how Django detects if Pillow is installed & placed the PIL on th...,"...e deprecation path.

This is meant to address #19934.
",toastdriven,None,2013-05-12T23:15:56Z,2014-06-12T07:51:52Z
1058,Fixed #20397 - Cleaned up issue with quotation marks in documentation,"The documentation tools appears to generate incorrect quotation marks in this case. This pull request resolves that.
",svisser,None,2013-05-12T19:26:32Z,2014-07-20T01:23:17Z
1057,Fixed #20398 - Added language selection code to example in documentation,"This adds the suggestion in ticket #20398 to the documentation.
",svisser,None,2013-05-12T19:06:08Z,2014-07-20T01:23:18Z
1056,Queryset.first() and last() methods (#19326 on trac),"Hi there,

This pull request implements first and last queryset methods. You can find the relevant discussions on this topic here:

https://code.djangoproject.com/ticket/19326
https://groups.google.com/forum/?fromgroups=#!searchin/django-developers/get_default/django-developers/3RwDxWKPZ_A/mPtAlQ2b0DwJ
https://groups.google.com/forum/?fromgroups#!searchin/django-developers/first$20last/django-developers/iaOIvwzUhx4/x5wKtl7Bh2sJ
Let me know if there's anything you want me to change.

This pull request contains improvements on top of https://github.com/django/django/pull/1054

Best,
Selwin
",selwin,None,2013-05-12T04:38:09Z,2014-06-17T11:12:33Z
1055,#20393 django.db.models.query.QuerySet.__repr__ should not have side-effects,"Only use the result cache for **repr**
",reversefold,None,2013-05-12T01:10:17Z,2014-07-04T00:48:53Z
1054,Added Queryset.first() and last() methods (#19326 on trac),"Hi there,

This pull request implements `first` and `last` queryset methods. You can find the relevant discussions on this topic here:
- https://code.djangoproject.com/ticket/19326
- https://groups.google.com/forum/?fromgroups=#!searchin/django-developers/get_default/django-developers/3RwDxWKPZ_A/mPtAlQ2b0DwJ
- https://groups.google.com/forum/?fromgroups#!searchin/django-developers/first$20last/django-developers/iaOIvwzUhx4/x5wKtl7Bh2sJ

Let me know if there's anything you want me to change.

Best,
Selwin
",selwin,None,2013-05-11T11:40:22Z,2014-07-20T01:23:19Z
1053,"Fix #20394, parameter user_id of the custom get_user has to be the pk of User","The original statement ""which could be ... or whatever"" **misguides** many newbies like me.

In fact, the `login` function in `contrib.auth` stores `user.pk` in session, then `get_user` function in `contrib.auth` gets `user.pk` in session and then passes it to your custom `get_user` as `user_id`.

Which means, `user_id` parameter in your custom `get_user` has to be the primary key of `User` object, too.
",makto,None,2013-05-11T08:08:28Z,2014-06-28T12:55:34Z
1052,BCrypt on Python3,"Properly use `force_bytes` and `force_str` so that the bcrypt library is always handed bytes, and the encode function always returns a proper `str`.

Tested on:
    - Python 2.7 with py-bcrypt and my new bcrypt library
    - PyPy 2.0 with py-bcrypt and my new bcrypt library
    - Python 3.2 with my new bcrypt library
",dstufft,None,2013-05-11T05:37:14Z,2014-06-21T14:52:05Z
1051,Added Django version to truncatechars template tag documentation,"The documentation of the built-in template tag truncatechars did not yet have the Django version (1.4) which can cause confusion for those using Django 1.3 and earlier.

This pull request adds that.
",svisser,None,2013-05-08T21:51:33Z,2014-07-02T11:28:14Z
1050,Test discovery,,carljm,None,2013-05-08T16:51:41Z,2014-06-12T05:48:26Z
1049,Remove unnecessary check on __set__ parameters.,"This commit removes parameter checks on the `instance` argument to the `__set__` methods for descriptors. These checks are not necessary - the [documentation on descriptors](http://docs.python.org/release/2.7.4/reference/datamodel.html#object.__set__) makes it clear that the `__set__` methods will always be called with a non-null `instance` parameter (unless you're doing something silly like `MyClass.__dict__['mydesc'].__set__(None, None)` of course) More info available via [this question on stackoverflow](http://stackoverflow.com/questions/16412672/can-a-python-descriptors-set-ever-get-called-with-instance-none).

I'm guessing this doesn't need a ticket, but if it does, let me know and I'll open one.
",mfogel,None,2013-05-08T05:14:01Z,2014-07-20T01:23:20Z
1048,Fixed #15511 -- Allow optional subfields on ``MultiValueField` subclasse...,"...s.

MultiValueField gets a new `all_required` keyword argument that defaults to
`True` for backwards compatibility. If set to `False`, individual subfields
can be made optional, and a new `incomplete` validation error will be raised
if any required subfields have empty values.
",mrmachine,None,2013-05-07T09:12:52Z,2014-07-02T08:25:53Z
1047,Remove outdated ForeignKey manager documentation,"It appears the documentation here on accessing a related manager directly from a class is out of date. When I set up my models.py the same as in the example here, I get:

```
In [1]: from myapp.models import *

In [2]: Blog.entry_set
Out[2]: <django.db.models.fields.related.ForeignRelatedObjectsDescriptor at 0x108923a50>
```

This is what I'd expect from my reading of django.db.models.fields.related.
",mfogel,None,2013-05-07T06:03:43Z,2014-07-20T01:23:21Z
1046,Check username field label for None,"In line [173 of django.contrib.auth.forms](https://github.com/zhenghao1/django/blob/master/django/contrib/auth/forms.py#L173), the `if` check is too generic and covers too wide a scope.  

Anyone that wanted to deliberately set the label to an empty string like such:

```
username = CharField(label='')
```

would still get a _Username_ label being shown.  

This pull request hopes to fix that with a `None` check, since the default value for label is `None`.
",zhenghao1,None,2013-05-06T11:08:21Z,2014-06-16T18:52:03Z
1045,Fixed #20354 -- `makemessages` no longer crashes with `UnicodeDecodeErro...,"...r`.

Handle the `UnicodeDecodeError` exception, send a warning to `stdout` with the
file name and location, and continue processing other files.
",mrmachine,None,2013-05-06T03:34:56Z,2014-07-20T01:23:21Z
1044,Fix #20025 -- Point to a MySQLdb fork for Python 3.,,aaugustin,None,2013-05-05T17:45:57Z,2014-06-15T05:04:00Z
1043,Prevent some errors on Sqlite regex,"This pull request prevents the following errors on SQLite regex lookups:
- failure if field value is None/null
- failure if field type is not a string based type
",noirbizarre,None,2013-05-05T15:09:33Z,2014-06-15T04:57:56Z
1042,Noticed a missing argument in the documentation,"my_custom_sql references ""self"" twice without having it as a parameter. I added the parameter.
",cwallenpoole,None,2013-05-05T14:25:15Z,2014-07-20T01:23:22Z
1041,Ticket #20349 Don't load test suite when not needed,"I noticed that `django/contrib/auth/hashers.py` is loading the `settings_changed` signal from the test suite. This ends up also loading the whole test suite in addition.

All of the other code that handles the `settings_changed` signal is kept inside the test suite itself. I assume this code is kept out of the test suite because of the ""core shouldn't be aware of contrib"" rule. Seems to me it's more important to avoid unnecessarily loading the test suite on a production website.

Yes, I realize this is picky, but we're perfectionists, right?

https://code.djangoproject.com/ticket/20349
",collinanderson,None,2013-05-03T16:04:20Z,2014-07-16T23:58:38Z
1040,Fixed #20348 -- Consistently handle Promise objects assigned to model fi...,"...elds.

Currently, all `Promise` objects are passed to `force_text()` deep in ORM
query code. Not only does this make it difficult or impossible for developers
to prevent or alter this behaviour, but it is also wrong for non-text fields.

This commit changes `Field.get_prep_value()` from a no-op to one that calls
`_proxy____cast()` on `Promise` objects to convert any type of promise to a
real value. All subclasses now call `super().get_prep_value()` first to
ensure that they have a real value to work with.

This also facilitates the creation of custom fields like `PickleField`, which
_can_ store Promise objects, to override this behaviour.
",mrmachine,None,2013-05-03T14:05:12Z,2014-06-15T06:46:04Z
1039,Clarify what unique_for_date considers,"...considers only the date portion of DateTime fields.
",cannona,None,2013-05-03T13:49:34Z,2014-07-20T01:23:23Z
1038,Improved the usage message of the test command.,"Just a small change to the output of manage.py help test: this should make sure that the user is informed about the possibility to only run a single testcase or test method.
",rfleschenberg,None,2013-05-02T11:08:43Z,2014-07-20T01:23:24Z
1037,Fixed #13910 -- Added generator based rendering (streaming) of templates...,"... and supporting views
- Added stream_to_response shortcut, similar to render_to_response
- Added stream shortcut, similar to render
- Added stream method to Template and Node classes
- Added stream functionality to defaulttags that would benefit from it
- Added stream function to template.loader
- Added StreamingTemplateResponse and supporting generic StreamingTemplateView
  -- Rearranged inheritance of generic.base views to support both traditional and streaming views
  -- Added StreamingTemplateResponse and SimpleStreamingTemplateResponse to complement the
  exsting non-streaming template response classes
",mindsocket,None,2013-05-02T07:13:17Z,2014-12-24T18:16:42Z
1036,Fixed #20338 - Document FQDN behavior with ALLOWED_HOSTS.,,manfre,None,2013-04-30T20:59:41Z,2014-07-20T01:23:24Z
1035,Fixed #20337 -- Change copy when database relation is not allowed,"See https://code.djangoproject.com/ticket/20337
",dlo,None,2013-04-30T20:28:43Z,2014-06-13T19:34:05Z
1034,Fix two typos in database transactions docs,,infraredgirl,None,2013-04-30T16:40:38Z,2014-07-20T01:23:25Z
1033,Ticket #18351,"This branch contains tests and a fix based on the suggested use of a decorator.
",morty,None,2013-04-29T20:13:26Z,2014-07-20T01:23:25Z
1032,Add support to use a custom reason-phrase in response's status line,"HTTP protocol uses the _reason-phrase_ in the response's status line as a message meant solely for human consumption so is perfectly valid to change that phrase for whatever the api designer needs.
`django.http.HttpResponse` class should allow users to change the reason-phrase if they need so, for example, through a `status_text` attribute.
",anler,None,2013-04-29T14:51:34Z,2014-06-18T22:11:42Z
1031,"Add the missing Chinese translation, error message for invaild email",,rainytooo,None,2013-04-29T04:47:40Z,2014-07-20T01:23:26Z
1030,Modified translations for days of the week in Irish,"I updated the translations for the days of the week in the Irish language. I generated a new .mo file from the updated .po file.
",jstafford-rte,None,2013-04-25T12:34:19Z,2014-06-18T18:39:13Z
1029,Fix CharField typo in legacy-databases.txt docs,"The example Person model in the legacy databases HowTo had a typo referring to ChaField instead of Charfield
",carmi,None,2013-04-24T18:03:01Z,2014-07-20T01:23:26Z
1028,Fixed #20340 - document required return value for disable_constraint_checking,"The docstring and base implementation of disable_constraint_checking do not indicate that a return value is expected for proper behavior.
",manfre,None,2013-04-24T17:26:50Z,2014-06-17T11:12:34Z
1027,Clearer explanation when exception has no message,"I always found the ""No exception supplied"" message on debug error page slightly misleading; actually there is an exception, but there's no message string.

Ran 5352 tests in 505.706s
OK (skipped=165, expected failures=10)
",intgr,None,2013-04-23T18:23:09Z,2014-07-20T01:23:27Z
1026,Fix #20270: Fix error in AjaxResponseMixin documentation.,,bmispelon,None,2013-04-22T17:05:36Z,2014-07-20T01:23:27Z
1025,Fix #20249: Remove undocumented ORM feature from tutorial.,,bmispelon,None,2013-04-22T16:36:43Z,2014-07-12T06:10:40Z
1024,Updated reusable apps doc,"Added 'polls' sub directory under static and reorganized project outline to more accurately represent the project as compared to the 'tree' command.
",jktravis,None,2013-04-21T13:57:09Z,2014-07-20T01:23:28Z
1023,Forms - FloatField and IntegerField raise errors when a user enters space in textboxes.,"When a user keys in few spaces in a FloatField or IntegerField. Django fails to treat them as empty and tries to convert them to float and int respectively, leading to an unnecessary validation error. Users need to define custom fields and custom clean methods currently to overcome this issue. 

Ticket: https://code.djangoproject.com/ticket/20298
",krisys,None,2013-04-21T07:45:05Z,2014-06-15T00:49:04Z
1022,Fix #10491: Allow passing lazy objects to HttpResponseRedirect.,,bmispelon,None,2013-04-20T03:20:44Z,2014-06-13T00:32:55Z
1021,Fixed #20290 -- override_settings cannot be nested,"Refactored override_settings to store the underlying settings._wrapped
value seen at runtime, not instantiation time.
",obeattie,None,2013-04-19T09:48:12Z,2014-06-21T22:11:51Z
1020,Docs: add labels in cache docs,"Provide labels in cache docs in order to allow Intersphinx cross references.
",unho,None,2013-04-18T20:06:20Z,2014-07-20T01:23:29Z
1019,Fixed #20199: Allow ModelForm fields to override error_messages from model fields,,loic,None,2013-04-17T18:54:16Z,2014-07-07T20:06:25Z
1018,Moved the update_fields existence check into _do_update,"Pull request for [Ticket #20272](https://code.djangoproject.com/ticket/20272)
",gavinwahl,None,2013-04-17T17:12:50Z,2014-06-17T05:48:48Z
1017,Fixing #20276. MergeDict should have __nonzero__ / __bool__ properly implemented.,"[ticket](https://code.djangoproject.com/ticket/20276)
",bak1an,None,2013-04-17T15:35:05Z,2014-06-22T20:23:30Z
1016,Fixed #18681 -- BaseModelAdmin.get_form and InlineModelAdmin.get_formset...,"... no longer bypass get_fieldsets
",loic,None,2013-04-16T18:51:44Z,2014-06-20T03:53:41Z
1015,Fixed #20256 -- Changed incorrect text in startproject command line help,"Pull request for <a href=""https://code.djangoproject.com/ticket/20256"">Ticket #20256</a>
",mitzaM,None,2013-04-16T07:23:51Z,2014-06-26T12:21:03Z
1014,Implement `BrokenLinkEmailsMiddleware.is_request_we_should_notify_for`,"Pull request for this issue: https://code.djangoproject.com/ticket/20099

If you want, I can rename `is_request_we_should_notify_for` to `is_relevant_request`.
",cool-RR,None,2013-04-15T15:57:15Z,2014-07-20T01:23:31Z
1013,Fixed #20264 -- Make URLValidator allow for underscores in subdomain,"For trac's https://code.djangoproject.com/ticket/20264#ticket
",arthur-debert,None,2013-04-15T15:40:44Z,2014-07-20T01:23:31Z
1012,#17048:Add Docs for Guidelines for Upgrading an Existing Project's Django,"I created a checklist doc page to resolve ticket #17048 (https://code.djangoproject.com/ticket/17048). Feel free to code review. 
",ArcTanSusan,None,2013-04-13T21:19:30Z,2014-07-09T10:07:30Z
1011,Fix #4592: Make CheckboxSelectMultiple more like RadioSelect.,"I refactored RadioSelect and CheckboxSelectMultiple to
make them inherit from a base class, allowing them to share
the behavior of being able to iterate over their subwidgets.

Thanks to Matt McClanahan for the initial patch and to
Claude Paroz for the review.
",bmispelon,None,2013-04-13T10:33:03Z,2014-06-13T12:53:00Z
1010,Ticket 4117,"Based on my branch for ticket #19874 which has been marked ready for checkin.
",bmispelon,None,2013-04-12T21:32:47Z,2014-07-20T01:23:32Z
1009,additional qualify for .py files tutorial (step 1 and 2),"when learning from tutorial where settings.py, admin.py, models.py, view.py files. now anyone goes to correct folder
",gsavix,None,2013-04-11T20:54:27Z,2014-07-20T01:23:33Z
1008,remove confusing phrase from DecimalField docs,"The phrase ""if it exists"" was used in reference to the `decimal_places`
argument to `DecimalField`, when in fact that field is required.
",reverie,None,2013-04-11T13:27:47Z,2014-07-16T17:39:23Z
1007,Bugfixes around utils.functional.allow_lazy,"Includes fixes for the following tickets:
- https://code.djangoproject.com/ticket/20221
- https://code.djangoproject.com/ticket/20222
- https://code.djangoproject.com/ticket/20223
- https://code.djangoproject.com/ticket/20231

Here's the two main points that this PR change:
- Introduce `keep_lazy` as a replacement for `allow_lazy`, which allows it to be used with normal decorator syntax.
- Fix the issue of lazy strings not being marked safe by introducing a `safe` decorator that marks the output of functions as safe, and using that decorator on the lazy-enabled version of functions.
",bmispelon,None,2013-04-10T10:20:24Z,2014-06-12T13:12:43Z
1006,Use django.test.TestCase for first testing example,"This doc change switches from unittest.TestCase to django.test.TestCase
with some accompanying text changes.

See https://code.djangoproject.com/ticket/20165
",lorin,None,2013-04-10T03:05:45Z,2014-06-15T07:50:58Z
1005,Fixed #17927 - Initial values support for BaseGenericInlineFormSet,"Added **kwargs to BaseGenericInlineFormSet and regression test.

https://code.djangoproject.com/ticket/17927
",bmihelac,None,2013-04-09T16:44:19Z,2014-07-05T07:45:57Z
1004,Ticket 12075: Add wsgiorg.routing args support,"This is an up-to-date patch for https://code.djangoproject.com/ticket/12075
",gnarea,None,2013-04-09T13:51:25Z,2014-08-29T16:49:10Z
1003,Fix admin_views tests after commit 3be368c73e.,,bmispelon,None,2013-04-08T20:03:46Z,2014-07-04T14:01:34Z
1002,Ticket # 14019: SQLInsertCompiler.as_sql() failure,"This pull request contains a fix for [ticket #14019](https://code.djangoproject.com/ticket/14019) updated against the latest Django.
",tobiasmcnulty,None,2013-04-08T19:31:02Z,2014-06-17T11:12:35Z
1001,add template samples to auth documentation,,noobiept,None,2013-04-08T02:32:37Z,2014-07-20T01:23:35Z
1000,Fix #15126: Better error message when passing invalid options to ModelFo...,"...rm.Meta.
",bmispelon,None,2013-04-07T16:42:42Z,2014-06-17T15:53:49Z
999,Fix #19874: Apply id attribute to the outer <ul> of CheckboxSelectMultiple.,,bmispelon,None,2013-04-07T08:38:41Z,2014-07-04T06:52:25Z
998,Fixed #20003 -- Added user:password support to URLValidator.,,matiasb,None,2013-04-06T23:21:14Z,2014-06-16T14:54:32Z
997,Fix #20211: Document backwards-incompatible change in BoundField.label_tag.,,bmispelon,None,2013-04-06T15:17:37Z,2014-07-20T01:23:36Z
996,Fixed #19987 All host validation disabled when DEBUG=True.,"The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.
",willhardy,None,2013-04-06T01:16:23Z,2014-07-20T01:23:36Z
995,Fixed #19252 -- Added support for wheel packages.,"Packages have to be created using `pip wheel .` (requires pip 1.4, wheel and
distribute).
",apollo13,None,2013-04-05T22:53:11Z,2014-06-26T00:46:19Z
994,Fix #20204: Consistent usage of url() in URL dispatcher documentation.,,bmispelon,None,2013-04-05T17:31:30Z,2014-07-20T01:23:37Z
993,Removed a trailing space in the template name on line 174.,"This trailing space may seem innocuous, but can be easily copied-and-pasted from the docs.

This can lead to bizarre File Not Found errors where the checked paths look correct, but actually aren't because the trailing space is hard to see in an error message.
",almostabc,None,2013-04-05T05:59:40Z,2014-06-15T08:08:01Z
992,Fix #20195: wrong reference in session settings documentation.,,bmispelon,None,2013-04-04T16:14:31Z,2014-06-16T16:53:56Z
991,Fixed #20194 -- Adds generators support for email backends that do not support it.,"https://code.djangoproject.com/ticket/20194
",brendoncrawford,None,2013-04-04T03:27:39Z,2014-06-17T22:55:25Z
990,Fixed #20194 -- Adds generators support for email backends that do not support it.,"https://code.djangoproject.com/ticket/20194
",brendoncrawford,None,2013-04-04T03:26:55Z,2014-07-20T01:23:38Z
989,Fixes for Ticket 4045,"This is the remaining piece of the patch for ticket 4045. All we are doing is using the core.js `removeEvent` function to unbind the `dismissClock` and `dismissCalendar` functions from the click event. [Trac Ticket](https://code.djangoproject.com/ticket/4045)
",andrewjesaitis,None,2013-04-04T02:42:56Z,2014-06-21T13:11:15Z
988,Update debug.py,"Interactive debug response was nerfed as of Django 1.4 when working with AJAX. The change resulted in internal errors only returning the traceback body, and not the nice interactive debug response which we know and love.

This change makes working with AJAX in >1.4 very difficult compared with <1.4. 

My proposed change makes this nerfing optional: set NERF_DEBUG_ON_AJAX to False in your settings.py to get the goodness when using AJAX.

See here: https://github.com/django/django/commit/0d9b6a5bc43c06716212bd3f847460ce985381aa
",rikatee,None,2013-04-03T21:54:00Z,2014-07-18T14:19:40Z
987,"Fixed #20000 -- Allow ModelForm meta overrides for label, help_text and error_messages",,loic,None,2013-04-03T19:56:09Z,2014-06-21T06:31:08Z
986,Pull request for issue 20182 - Parses string literal 0 as value False when key is __isnull,"See issue 20182

https://code.djangoproject.com/ticket/20182
",benjiec,None,2013-04-03T19:10:45Z,2014-06-16T23:03:57Z
985,Fix typo in transaction.Atomic docstring,"The docstring mentions ""oa"" twice and ""ao"" once - clearly a typo.
",intgr,None,2013-04-03T13:55:37Z,2014-07-20T01:23:40Z
984,Reworked setup.py to use package_data and enabled wheel support.,"https://code.djangoproject.com/ticket/19252
",apollo13,None,2013-04-03T10:44:11Z,2014-07-04T15:12:30Z
983,"Fix bug, TypeError: unicode argument expected, got 'str' on core management validation","Error:

```
2013-04-03 02:37:08 [71497] [INFO] Starting gunicorn 0.17.2
2013-04-03 02:37:08 [71497] [INFO] Listening at: http://127.0.0.1:8000 (71497)
2013-04-03 02:37:08 [71497] [INFO] Using worker: sync
2013-04-03 02:37:08 [71500] [INFO] Booting worker with pid: 71500
2013-04-03 02:37:10 [71500] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/arbiter.py"", line 485, in spawn_worker
    worker.init_process()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/workers/base.py"", line 100, in init_process
    self.wsgi = self.app.wsgi()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/app/base.py"", line 103, in wsgi
    self.callable = self.load()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/app/djangoapp.py"", line 101, in load
    return mod.make_wsgi_application()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/app/django_wsgi.py"", line 36, in make_wsgi_application
    if get_validation_errors(s):
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/django/core/management/validation.py"", line 150, in get_validation_errors
    e.add(opts, ""'%s' has a relation with model %s, which has either not been installed or is abstract."" % (f.name, f.rel.to))
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/django/core/management/validation.py"", line 19, in add
    self.outfile.write(self.style.ERROR(force_str(u""%s: %s\n"" % (context, error))))
TypeError: unicode argument expected, got 'str'
Traceback (most recent call last):
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/arbiter.py"", line 485, in spawn_worker
    worker.init_process()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/workers/base.py"", line 100, in init_process
    self.wsgi = self.app.wsgi()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/app/base.py"", line 103, in wsgi
    self.callable = self.load()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/app/djangoapp.py"", line 101, in load
    return mod.make_wsgi_application()
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/gunicorn/app/django_wsgi.py"", line 36, in make_wsgi_application
    if get_validation_errors(s):
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/django/core/management/validation.py"", line 150, in get_validation_errors
    e.add(opts, ""'%s' has a relation with model %s, which has either not been installed or is abstract."" % (f.name, f.rel.to))
  File ""/Users/avelino/.virtualenvs/yacows.virgula/lib/python2.7/site-packages/django/core/management/validation.py"", line 19, in add
    self.outfile.write(self.style.ERROR(force_str(u""%s: %s\n"" % (context, error))))
TypeError: unicode argument expected, got 'str'
2013-04-03 02:37:10 [71500] [INFO] Worker exiting (pid: 71500)
2013-04-03 02:37:10 [71497] [INFO] Shutting down: Master
2013-04-03 02:37:10 [71497] [INFO] Reason: Worker failed to boot.
```
",avelino,None,2013-04-03T06:33:34Z,2014-06-21T05:08:05Z
982,Fix prepare_lookup_value to handle '0' for _isnull,"In contrib.admin.util, there is a prepare_lookup_value function

In this function, there is a clause

```
if value.lower() in ('', 'false'):
        value = False
```

I think it should be

```
if value.lower() in ('', 'false', '0'):
      value = False
```

Note that in admin already converts a limit_choices_to={'a__isnull': False} to a__isnull=0 when formatting a query string for lookup on the remote model. Therefore, clearly it should also handle isnull=0 correctly. Currently the lookup popup box on remote model uses __isnull=0 and does not actually filter.
",benjiec,None,2013-04-02T19:35:57Z,2014-06-17T04:33:05Z
981,IPv6 support for utils.html.urlize,"https://code.djangoproject.com/ticket/20172
",glic3rinu,None,2013-03-31T15:09:43Z,2014-06-17T22:55:28Z
980,Fixed #20169 -- Ensured that the WSGI request's path is correctly assemb...,"...led when the `SCRIPT_NAME` has a trailing slash.
",jphalip,None,2013-03-31T07:55:51Z,2014-06-25T07:00:27Z
979,Fixed #20167 -- Preserve the traceback of ImportErrors in import_by_path,"Uses six.reraise to fix https://code.djangoproject.com/ticket/20167.
",grampajoe,None,2013-03-31T02:06:32Z,2014-06-16T22:56:29Z
978,Add --use-fuzzy option to compilemessages command.,"Refs [#18714](https://code.djangoproject.com/ticket/18714)
",bak1an,None,2013-03-30T19:19:28Z,2014-06-12T16:39:56Z
977,Fixed #20150 -- Fixed an error in manager doc example,"Fixed a minor error as in https://code.djangoproject.com/ticket/20150
",nims11,None,2013-03-29T19:46:56Z,2014-07-01T02:55:34Z
976,Fix #20160: typo in admin docs.,,bmispelon,None,2013-03-29T18:00:10Z,2014-07-01T17:57:41Z
975,Fix #20158: invalid code in queryset_pickle test models.,,bmispelon,None,2013-03-29T12:33:05Z,2014-06-16T16:45:25Z
974,Added how do I cite Django to FAQ general.txt,"https://code.djangoproject.com/ticket/15379 
Ticket # 15379. Documentation added to general FAQ on how to cite Django, as per Russell's suggestions. 
",ArcTanSusan,None,2013-03-29T09:55:54Z,2020-02-23T22:21:49Z
973,Update git repo doc,"Make it more clear what fixes can be expected to be backported to the last stable branch. See e.g. https://groups.google.com/forum/?hl=en&fromgroups=#!topic/django-developers/7eoRlxOIMFw
",ramiro,None,2013-03-28T23:03:01Z,2014-07-20T01:23:44Z
972,Fixed spelling errors,"I fixed some spelling errors in comments and docstrings.
",gavinwahl,None,2013-03-28T17:18:11Z,2014-07-20T01:23:44Z
971,"Fixed spelling of ""consistent"" in admin/options.py","This pull request fixes a typo in a comment in the admin/options.py file.

I checked just to make sure, http://en.wiktionary.org/wiki/consistant, consistant is listed as a common misspelling of consistent and searching for it in Google will correct it.

According to https://docs.djangoproject.com/en/1.5/internals/contributing/writing-code/submitting-patches/#typo-fixes-and-trivial-documentation-changes this does not need a ticket in Trac, but if you would like, I could make one.
",rockymeza,None,2013-03-28T15:19:16Z,2014-06-20T19:26:30Z
970,Fixed bug https://code.djangoproject.com/ticket/19607,"Fixed crash on prefetch_related. See https://code.djangoproject.com/ticket/19607
",askoretskiy,None,2013-03-28T11:17:40Z,2014-06-15T09:52:31Z
969,Fixed #20146: updated removed_tags example,"Implementation waits for a string but example was with list. Changed example according to implementation.

Example: `remove_tags(value, [""b"", ""p""])`
Implementation: `remove_tags(value, ""b p"")`
",ferhatelmas,None,2013-03-28T02:01:52Z,2014-07-04T12:51:35Z
968,Fixed logging-related test failure introduced by e79b857.,,jacobian,None,2013-03-27T17:06:47Z,2014-07-20T01:23:45Z
967,Fixed #20078: don't allow filtering on password in the user admin.,,jacobian,None,2013-03-27T16:25:09Z,2014-06-18T19:40:20Z
966,Fixed lazy-loading of related non-loaded models,"Patch for ticket #20143, see https://code.djangoproject.com/ticket/20143.
",pelme,None,2013-03-27T10:50:54Z,2014-06-13T04:06:55Z
965,RSS multi-domains issue,"If a site has more than one domains, the rss links should use the domain that user actually used, not the one set in database.
",julyzergcn,None,2013-03-27T08:30:44Z,2014-06-13T03:01:15Z
964,Formview doc quirks,"Cleaned a bit of documentation for ref/class-based-views/flattened-index/#formview
",hrbonz,None,2013-03-27T07:56:26Z,2014-06-14T13:17:52Z
963,Updated bios of committers,"Some of the bios of committers have been updated and with minor link additions.
",richardcornish,None,2013-03-27T06:02:50Z,2014-06-18T11:02:15Z
962,Document password truncation with BCryptPasswordHasher,,dstufft,None,2013-03-26T16:58:28Z,2014-06-18T18:39:48Z
961,Document password truncation with BCryptPasswordHasher,,dstufft,None,2013-03-26T16:57:58Z,2014-06-16T06:47:23Z
960,Store original file upload name,"We use this to implement folder upload logic (using WebKit's `<input type=file webkitdirectory ...>`). I thought it didn't hurt having the original file name + path as an undocumented additional attribute.
",jonashaag,None,2013-03-26T16:43:50Z,2014-07-20T01:23:48Z
959,Fixed #18731 : Added a --extra-keyword option to the makemessages admin command.,"Hello :)

I figured that making a pull request would ease the integration of the patch :>
",rjarry,None,2013-03-26T16:33:47Z,2014-06-26T11:56:50Z
958,Fixed #20138 -- Added BCryptSHA256PasswordHasher,"BCryptSHA256PasswordHasher pre-hashes the users password using SHA256 to prevent the 72 byte truncation inherient in the BCrypt algorithm.
",dstufft,None,2013-03-26T15:48:56Z,2014-06-14T03:24:18Z
957,Fixed #14825 - LocaleMiddleware keeps language,#NAME?,ziima,None,2013-03-25T16:07:28Z,2014-07-20T01:23:49Z
956,Docs: Remove ambiguity regarding LANGUAGES setting,"The docs to the LANGUAGES setting were using both the term language code
and language name for the same thing. This tripped me up because I at first read `language code` to mean `locale code`, as after following the link it isn't exactly clear which of the two is meant.
The fix is easy enough, I just removed the (in my opinion) unnecessary bit and moved the link into the tuple.

Note: I slightly altered the double-quotes because that interfered. If that's a problem, I'll glady incorporate a fix, I just don't know how to use `:term:` next to double quotes.
",maikhoepfel,None,2013-03-25T12:20:14Z,2014-07-20T01:23:49Z
955,Fix #18192 -- Check return value for None,"When IOError happens in django/utils/translation/trans_real.py function _translation() [line 128], the return value is None. After, django breaks with error message:
AttributeError: 'NoneType' object has no attribute '_info'
The None value must be replaced with fallback/NullTranslations (done with the next ""if"" statement [line 168]).
",alekseismyshliaev,None,2013-03-25T10:37:17Z,2014-06-12T08:25:39Z
954,Fix #20130: regression in {% cache %} template tag.,,bmispelon,None,2013-03-25T08:13:17Z,2014-06-12T19:16:02Z
953,Fixed #20104 -- Changed VersionDirective in order to avoid ambiguity.,"As explained in ticket #20104, the use of versionchanged/versionadded
was confusing.

To solve this ambiguity these directives no longer accept a second
argument but now they only receive the version number (1st arg) and then
a content with the proper comment.

This includes:
    \* Modified logic to avoid ambiguity.
    \* Modified all the occurrences of those directives to adapt to new form.
    \* Unused imports removed.
        \* Updated writing-documentation.txt to reflect the changes made.

This PR refs #20104
",catalanojuan,None,2013-03-25T06:05:26Z,2014-06-15T23:50:42Z
952,Fixed 20114 -- Fixed contrib.auth testLoginRequired test.,"Generalized contrib.auth decorator test to use LOGIN_URL setting.
",matiasb,None,2013-03-24T18:32:42Z,2014-07-04T04:50:06Z
951,"Doc: ""value"" is arg not kwarg in HttpResponse.set_signed_cookie","Thanks!

Yohan
",yohanboniface,None,2013-03-24T16:26:19Z,2014-06-20T19:48:46Z
950,Fixed #16216 -- Removed img elements from admin markup.,"There were some IE + RTL changes that I couldn't completely test. If someone could do that it would be awesome.
",zerok,None,2013-03-24T11:40:34Z,2014-06-12T07:41:11Z
949,Fixed #20121 - LogEntry.get_admin_url hard-coded path,"Updated LogEntry.get_admin_url to use 'reverse' instead of a hard-coded path.
",floppya,None,2013-03-24T02:22:10Z,2014-07-20T01:23:51Z
948,Fixes for Ticket 4120 - JS cleanup for admin,"This was quite an old ticket, but most of the original patch still applies. Consider it spring cleaning?! 

It is just js cleanup. No admin functionality. The most import change is that it removes a duplicative function from calendar.js, which is also found in core.js. 

The other two commits shuffle a couple functions into core.js. This ticket seemed to be a prerequisite to addressing [#4045](https://code.djangoproject.com/ticket/4045) which I will pick up once a call is made on this ticket.

The only part of the original patch that didn't apply were the changes to js/admin/ordering.js, which appear to have been removed. This change looked to be removing a duplicative `addEvent` function.

[Associated TIcket](https://code.djangoproject.com/ticket/4120)
",andrewjesaitis,None,2013-03-23T22:21:38Z,2014-07-20T01:23:51Z
947,Fixes #6412 - More details about template files.,"Report more details about template files in loader postmortem.

https://code.djangoproject.com/ticket/6412
",MarkusH,None,2013-03-23T17:09:37Z,2014-07-11T07:12:36Z
946,Fixed #20117 -- Added missing translation override to fix flatpages test.,,matiasb,None,2013-03-23T15:20:22Z,2014-06-14T05:29:56Z
945,Fixed #20059 -- Updated humanize tests to enforce 'en' language setting.,,matiasb,None,2013-03-23T14:43:55Z,2014-06-17T21:49:34Z
944,Added OpenLayers-based widgets in contrib.gis (#5472),"Largely inspired from django-floppyforms. Designed to not depend
on OpenLayers at code level.
",claudep,None,2013-03-23T13:15:36Z,2014-07-17T13:28:30Z
943,Added some class attributes to pass initial form lists to the WizardView...,"... without the need to add them in the as_view call.

Fixed https://code.djangoproject.com/ticket/19433
",stephrdev,None,2013-03-23T11:58:18Z,2014-07-12T04:47:31Z
942,Moved the code to handle goto requests in a extra WizardView method.,"Fixed https://code.djangoproject.com/ticket/18000
",stephrdev,None,2013-03-23T11:57:49Z,2014-07-20T01:23:53Z
941,Small typo error in tutorial,,xakon,None,2013-03-23T07:56:23Z,2014-07-20T01:23:54Z
940,Remove unnecessary conditions from user's permission checking,"Small code cleaning. If obj is None, it's None, there's no need to check it.
",nossila,None,2013-03-22T17:24:09Z,2014-07-20T01:23:54Z
939,Fixed #20112 -- last_executed_query unicode decoding based on connection,"For mysql/postgresql backends. I guess same situation with oracle but I cant test it
",errx,None,2013-03-22T10:15:44Z,2014-06-25T07:02:08Z
938,Added more precise message level for succcess and warning messages,"Related ticket: https://code.djangoproject.com/ticket/20111
",darklow,None,2013-03-22T09:01:38Z,2014-06-29T21:43:15Z
937,Update __init__.py with JsonHttpResponse,,yceruto,None,2013-03-21T15:18:26Z,2014-07-20T01:23:55Z
936,Adding JsonHttpResponse to reponse.py,"Return a JSON serialized HTTP response.
",yceruto,None,2013-03-21T15:17:02Z,2014-07-20T01:23:55Z
935,Docs template name typo,"change_list_request.html doesn't exist, it's named  change_list_results.html
",tomviner,None,2013-03-21T10:04:02Z,2014-06-19T20:47:10Z
934,20084,,andrewsg,None,2013-03-21T05:22:11Z,2014-07-19T09:05:26Z
933,Fixed #20094 - Be more careful when checking for Iterator.,"Python 2.6 has some different behaviour when checking isinstance(foo, collections.Iterator).

cc @claudep
",mjtamlyn,None,2013-03-20T12:42:17Z,2014-07-12T09:38:17Z
932,Fixed #20004: move test helpers out of TransactionTestCase to SimpleTestCase,"https://code.djangoproject.com/ticket/20004
",zalew,None,2013-03-20T08:30:13Z,2014-07-20T01:23:57Z
931,Fixed #20088 -- Changed get_admin_log not to depend on User id field,"Before this change, the get_admin_log method would expect User model's
FK to be named `id`. When changing that FK name, admin/index.html
rendering would fail.

This includes:
- Changed the use of id for the use of pk property.
- Added a regression test that fails without the patch.

This commit refs #20088.
",catalanojuan,None,2013-03-19T22:33:28Z,2014-07-20T01:23:57Z
930,Worked the patches in the new codebase ticket no: 18003,"Applied the patch diff, for the new code base.
",konarkmodi,None,2013-03-19T17:46:03Z,2014-06-16T23:04:00Z
929,Backport Cookie Pickling Fix,"This is a backport of 4d817b38875c900d70793acd528afc9e954bbcb7, which fixed incorrect pickling of cookies. Given that this bug can result in scrambled CSRF token cookies (discouraging their use), I think it's worth it.

The related ticket is [19262](https://code.djangoproject.com/ticket/19262).
",matthewwithanm,None,2013-03-19T15:12:49Z,2014-06-17T22:55:30Z
928,Fixed #12090 -- added ability to add admin actions to change pages,"https://code.djangoproject.com/ticket/12090
",jgmize,None,2013-03-19T03:03:58Z,2014-07-07T20:27:51Z
927,Documentation - Small update to SESSION_COOKIE_DOMAIN documentation,"I'm explaining a slight (but potentially crippling) caveat for updating `SESSION_COOKIE_DOMAIN` on a production site.
",ryanisnan,None,2013-03-19T02:21:15Z,2014-06-24T20:39:16Z
926,Added warn note to docs about MySQL issues with 0000-00-00 date strings,"MySQL accepts 0000-00-00 as a valid date but MySQLdb converts those
values into None. So there will be problems for instance if trying to
transport the data using dumpdata/loaddata.

This patch refs #6642 that has been closed as wontfix since this is a
particular problem of MySQL.
",catalanojuan,None,2013-03-19T00:08:37Z,2014-06-17T17:57:20Z
925,Fixed #6363 -- Refactored admin_view decorator,"In order to decouple authorization from authentication, we created a separate template for the admin called ""unauthorized_user.html"", this template will be rendered when a user is not active or is not staff. It will also be rendered when the has_permission method returns False. This needs to be documented...
",czpython,None,2013-03-18T23:58:11Z,2014-06-15T05:08:55Z
924,Fixed #19327 -- Added handling of double login attempts in admin.,"Pull request for https://code.djangoproject.com/ticket/19327
",dericcrago,None,2013-03-18T23:37:04Z,2014-07-20T01:23:59Z
923,Rewrote unit tests migrated from doctests #18586,"Basic test refactoring for  "" Custom Column test "". 
",konarkmodi,None,2013-03-18T23:04:19Z,2014-06-16T14:49:46Z
922,Fixes ticket 16319,"This is mainly a cleanup of the patch in 16319. I changed the formatting
of the success_message to use the .format() system instead.
",paulcollinsiii,None,2013-03-18T22:53:18Z,2014-06-22T02:34:42Z
921,[master] Fixed #18972 -- Refactored chunking algorithm stealing shameles...,"...sly from datagroks code.
",woodm1979,None,2013-03-18T22:07:57Z,2014-07-20T01:24:00Z
920,"Fixed #3544, #12064, and #16147 - include tag.","3544 - Allow recursive includes.

12064, 16147 Don't raise a template error if a non-existent template is
contained in a conditional block that is false.

Added a `quiet` option to suppress template errors if it's known that
the template may not exist. This allows a template to be conditionally
included if it exists or not.

Cleaned up the BaseInclude, ConstantInclude, IncludeNode heirarchy. This
is now a single node class.

Expanded the existing include tests for better readability.
",prestontimmons,None,2013-03-18T21:54:25Z,2015-03-11T16:04:07Z
919,Fix for #19938 -- Maintain Page.object_list as a list,"After `__getitem__` gets called, object_list is maintained as as a list. [Associated Ticket](https://code.djangoproject.com/ticket/19938)
",andrewjesaitis,None,2013-03-18T21:48:26Z,2014-07-08T02:41:53Z
918,Fixed #18839 - Field.__init__() should call super() at end,,carny,None,2013-03-18T21:28:44Z,2014-07-06T07:42:43Z
917,Fixed #13260 -- Quoted arguments interpolated in URLs in reverse.,,aaugustin,None,2013-03-18T21:21:52Z,2014-07-10T06:06:24Z
916,[1.5.x] Fixed #20051 -- Added in file name for editing in tutorial page ...,"...2.
",woodm1979,None,2013-03-18T19:41:49Z,2014-06-16T06:47:16Z
915,Ticket20051: Doc fix backport on tutorial02.,,woodm1979,None,2013-03-18T19:40:03Z,2014-07-20T01:24:02Z
914,Fixed #17037 -- Added a --all option to diffsettings.,,aaugustin,None,2013-03-17T19:49:19Z,2014-06-29T15:08:49Z
913,Fixed #19697 -- Added a deployment checklist.,,aaugustin,None,2013-03-17T17:25:07Z,2014-06-15T05:21:38Z
912,Fix #20038: Better error message for HttpRequest.get_host().,,bmispelon,None,2013-03-17T12:11:43Z,2014-06-25T12:03:53Z
911,Fixed #19968 -- Dropped support for PostgreSQL < 8.4.,,aaugustin,None,2013-03-17T10:46:58Z,2014-07-08T07:46:54Z
910,Fix #20058: Make compilemessages use stdout instead of stderr.,,bmispelon,None,2013-03-16T18:40:53Z,2014-06-16T20:33:46Z
909,Fix 20061: remove out of date comment.,,bmispelon,None,2013-03-16T17:47:18Z,2014-07-09T21:15:47Z
908,Fixed #20048 -- Fixed flatpages tests for custom User model.,"Skipped flatpages tests depending on default User model.
Also fixed flatpage test failing depending on the project locale.
",matiasb,None,2013-03-16T16:01:41Z,2014-07-20T01:24:05Z
907,"Fix #20055: Add url, email, and number input types to admin CSS.",,bmispelon,None,2013-03-15T18:38:25Z,2014-07-20T01:24:05Z
906,Fix #20054: Removed links to modwsgi.org.,,bmispelon,None,2013-03-15T18:06:23Z,2014-07-10T21:45:11Z
905,Fixed #20053 -- Fix `index_together` documentation,,cyberj,None,2013-03-15T14:25:00Z,2014-07-08T11:19:24Z
904,Correct typos in the 1.6 release notes,"- `contenttypes` has two ts
- point the url at the view, not the module

cc @aaugustin
",mjtamlyn,None,2013-03-15T08:16:51Z,2014-07-20T01:24:07Z
903,Doc: Use django.test.TestCase for first testing example,"This doc change switches from unittest.TestCase to django.test.TestCase
with some accompanying text changes.

Motivation: you are very likely to get journeyman ""drive-by"" Django
developers just looking for a simple template example of how to write
a unit test, they will find this canonical example, copy-paste it,
and then get burned because of database coupling.

These type of readers won't read the warning that appears below the
text.
",lorin,None,2013-03-14T19:30:48Z,2014-06-17T12:29:58Z
902,removed unused BLANK_CHOICE_NONE,"BLANK_CHOICE_NONE is defined, but not used anywhere, so I presume it can be got rid of.

I tried `git rev-list --branches|xargs git grep BLANK_CHOICE_NONE | grep -v ""django/db/models/fields/__init__.py""` to search through the history for it in other locations, but that seems to crash after a couple of hundred thousand matches from the first part.
",evildmp,None,2013-03-13T21:40:54Z,2014-06-24T02:09:46Z
901,Fixed an erroneous import in example code of docs (class-based-views/intro).,"Simply i replaced `from django.views.base import View` with `from django.views.generic.base import View`.
",sanfilippopablo,None,2013-03-13T17:26:30Z,2014-07-07T22:28:18Z
900,Fix #20022: Correctly handle prefixes with url-unsafe characters in reverse(),,bmispelon,None,2013-03-13T17:22:40Z,2014-07-20T01:24:09Z
899,Refactoring of the settings module to be more modular and extensible,"Pull request for issue 20040 (https://code.djangoproject.com/ticket/20040)
",thedrow,None,2013-03-13T15:25:03Z,2014-06-27T16:44:35Z
898,Fix for issue #20034; allow callback for variables successfully parsed in multipart POST upload.,"Modified upload handler API to be able to invoke callbacks when new fields/variables are successfully parsed from multipart POST request. Fix for #20034.
",naftulikay,None,2013-03-13T02:19:34Z,2014-07-17T13:28:14Z
897,Made atomic usable when autocommit is disabled,,aaugustin,None,2013-03-12T12:58:58Z,2014-07-20T01:24:11Z
896,Fixed #19988 -- Updated is_safe filter check for integer variables.,,matiasb,None,2013-03-12T02:22:50Z,2014-06-20T17:46:28Z
895,Fixed #16436 -- ``annotate().select_related().only()`` = ``ValueError: i...,"...nvalid literal for int() with base 10``

Correctly calculate the `aggregate_start` offset from loaded fields,
if any are deferred, instead of `self.query.select` which includes all
fields on the model.
",mrmachine,None,2013-03-11T05:11:19Z,2014-06-30T22:26:01Z
894,Fixed #13252 -- Serialise with natural keys instead of primary keys.,"Add `--natural-foreign` and `--natural-primary` options, and
deprecate the `--natural` option to the `dumpdata` management
command.

Add `use_natural_foreign_keys` and `use_natural_primary_keys`
arguments, and deprecate the `use_natural_keys` argument to
`django.core.serializers.Serializer.serialize()`.
",mrmachine,None,2013-03-11T05:09:15Z,2014-07-20T01:24:12Z
893,Ticket 18855: persist socket across runserver reloads,"See discussion of this ticket on the bug tracker.

Creating a new pull request as advised in the ticket after adding documentation of the feature.

The testing part of this ticket is especially tricky.  The only way I see to test the actual functionality would be to fork a new process and run ""runserver"" within the process (if you have other ideas, I'd love to hear them) and then interact with the new process via the opened port.  Then there is the case of the race condition that this effectively tries to solve.

Given the wide use of runserver, I think that it's relatively safe to not add tests (given the difficultly of doing so).  If you have any ideas on how to make this test-able, I'd definitely take suggestions and attempt to add tests for them.
",dlamotte,None,2013-03-10T23:33:19Z,2014-06-14T00:05:49Z
892,Fixed #20018: Added backtick to fix reference,,JonLoy,None,2013-03-10T17:52:33Z,2014-06-16T16:32:49Z
891,Deprecate django.contrib.comments.,"TODO:
- [x] add notes and transition plane to release notes.
- [x] add note to deprecation timeline.
- [x] release django.contrib.comments as an external thing

Here's that external app: [django/django-contrib-comments](http://github.com/django/django-contrib-comments)
",jacobian,None,2013-03-09T21:45:10Z,2014-07-20T01:24:13Z
890,Fixed regression in #16612,,loic,None,2013-03-08T08:16:24Z,2014-07-20T01:24:13Z
889,Fixed #19582 & #19897 - Added static files tutorial and updated howtos.,"tickets:
https://code.djangoproject.com/ticket/19582
https://code.djangoproject.com/ticket/19897

rendered:
http://techytim.com/django/19897/intro/tutorial06.html
http://techytim.com/django/19897/howto/static-files/index.html
http://techytim.com/django/19897/howto/static-files/deployment.html
",timgraham,None,2013-03-08T01:29:20Z,2014-06-12T20:34:30Z
888,Added ManyToManyField(db_constraint=False) option.,"This is needed when using the Percona online schema change tool.
",alex,None,2013-03-07T18:28:04Z,2014-07-20T01:24:14Z
887,Fixed --ignorenonexistent for XML based fixtures.,"Ticket #19998
",chsigi,None,2013-03-07T07:11:04Z,2014-07-20T01:24:14Z
886,Fixed #19997 -- Added custom EMPTY_VALUES to form fields. Refs #19989.,,loic,None,2013-03-07T07:05:25Z,2014-06-20T19:45:07Z
885,Fixed #19541 -- Fixed BaseHandler to enable reversing URLs in response middlewares...,,loic,None,2013-03-06T23:43:04Z,2014-07-14T22:21:36Z
884,Fixed #19996 - Updated link to django-mssql project in docs.,,manfre,None,2013-03-06T17:13:27Z,2014-07-01T01:31:41Z
883,Fixed #19994. Fixed typo in deployment docs.,,akshar-raaj,None,2013-03-06T09:56:38Z,2014-07-20T01:24:15Z
882,Fixed minor warnings in tests.,,loic,None,2013-03-05T18:14:36Z,2014-06-20T19:46:25Z
881,Fixed #21241 -- Avoid extraneous JOINs in admin changelist search.,"Using the database this way is inherently slow but the previous implementation
would call QuerySet.filter() once per whitespace-separated term in the query
text, causing an extra set of JOINs for each term. With the MySQL backend,
this actually causes database errors once you hit the server limit of 61.

This commit makes two changes: the first is simply to filter the queryset only
once; the second is to only process unique terms in the search field.
",acdha,None,2013-03-05T17:33:50Z,2016-09-22T20:12:07Z
880,Stable/1.5.x,"Solution for ticket https://code.djangoproject.com/ticket/19978
",rodrigopmatias,None,2013-03-05T13:03:17Z,2014-06-16T06:47:13Z
879,Fixed #19981 - Pass request to `WizardView.get_prefix()`.,"This pull is for https://code.djangoproject.com/ticket/19981

See also https://code.djangoproject.com/ticket/17162
",joshdrake,None,2013-03-04T21:34:27Z,2014-06-17T04:50:16Z
878,Fix #19980: Signer broken for binary keys (with non-ASCII chars),"See https://code.djangoproject.com/ticket/19980.
",nvie,None,2013-03-04T20:08:19Z,2014-06-16T06:47:16Z
877,Fixes ticket #19971 Spelling mistake of explicitly (explictly),,tcarlander,None,2013-03-03T18:35:18Z,2014-07-20T01:24:17Z
876,Fixes #19925 - Validate REQUIRED_FIELDS is a list or tuple,"This is for ticket https://code.djangoproject.com/ticket/19925

I added validation to check that `REQUIRED_FIELDS` is a list or tuple, and added tests for it as well.
",streeter,None,2013-03-03T05:54:01Z,2014-06-12T11:02:16Z
875,Add back verbose_name[_plural] for contrib.auth.models.User,"I also translated to Hebrew.

It was lost with the changes to User in Django 1.5. Surely it was accidental.
",SonOfLilit,None,2013-03-03T02:50:55Z,2014-07-20T01:24:18Z
874,Fixed #19965 and #19211 - Tutorial is not written for Python 3.x,"Both #19965 and #19211 are tutorial confusions that revolve around the fact the tutorial is written for 2.x and not 3.x. A note has been added at the beginning of the tutorial to reflect this.
",itsallvoodoo,None,2013-03-02T17:15:20Z,2014-06-20T16:17:07Z
873,Database level autocommit,,aaugustin,None,2013-03-02T14:36:01Z,2014-06-25T20:16:39Z
872,Let field choices to be a dict.,,crackcomm,None,2013-03-02T09:47:10Z,2014-07-20T01:24:19Z
871,Fixed #19945 -- Fixed default User model Meta inheritance.,"Updated default User model Meta class to extend AbstractUser Meta
where translated verbose_name and verbose_name_plural are
defined.
",matiasb,None,2013-03-01T22:54:58Z,2014-06-16T20:13:53Z
870,Fixed #19962 -- Add note about `SESSION_EXPIRE_AT_BROWSER_CLOSE` caveat,"[Ticket #19962](https://code.djangoproject.com/ticket/19962)
",davesque,None,2013-03-01T20:03:51Z,2014-06-30T08:36:35Z
869,Fix for #19944,"See https://code.djangoproject.com/ticket/19944
",kmike,None,2013-03-01T20:00:40Z,2014-06-16T06:47:12Z
868,Fixed #19951 -- Avoid ValueError in admin when passing a string as PK for an inherited model with an integer PK field,"Fixed #19951 -- Avoid ValueError in admin when passing a string as PK for an inherited model with an integer PK field
",ikks,None,2013-03-01T05:07:34Z,2014-07-20T01:24:20Z
867,Ticket #15363 (get_queryset & get_query_set),,loic,None,2013-02-28T20:33:34Z,2014-06-17T15:16:41Z
866,Fix management load,"In case of use of namespace package, the command loader doesn't work.

This fix is to be able to load commands from all packages. Also fix two unused imports.
",Natim,None,2013-02-28T10:46:10Z,2014-06-14T18:04:44Z
865,Fixed #19915 - Made blocktrans tag honour TEMPLATE_STRING_IF_INVALID.,,matiasb,None,2013-02-28T02:28:05Z,2014-07-08T20:37:57Z
864,use the real path to fix OS X /var/folders vs /private/var/folders mismatch,"Two `admin_scripts` tests are failing on OS X 10.8.2 without this patch on both 2.7 and 3.3.
",ambv,None,2013-02-27T22:32:06Z,2014-07-20T01:24:21Z
863,[patch] Add DB indexes for contrib.auth.models.User,"Hi folks,
I execute queries filtering by email, is_active, is_staff and date_joined from the default User model in my app. Adding DB indexes for them.  Hopefully this gets backported as well.
",atodorov,None,2013-02-27T11:55:33Z,2014-07-20T01:24:22Z
862,Added models validator for REQUIRED_FIELDS not being a list.,"I spent some time debugging `django-admin.py createsuperuser` raising `optparse.OptionConflictError`. I forgot to make REQUIRED_FIELDS custom user model a list. This validation error should help others avoid my mistake.
",romanalexander,None,2013-02-27T03:44:27Z,2014-06-13T16:14:15Z
861,Python 3: make sure hashlib always gets bytes,"Tests pass on 2.7 and 3.3 (double-checked this time, Carl ;-) ).

Occurrences and consequences without the patch:
- `utils.cache`: `CacheMiddleware` fails or every user
- `utils.crypto`: generating a random string on machines without a system PRNG fails
- `template.loaders.cached`: generating a cache key with template_dirs fails (although method to trigger the bug on a real application is unknown: `TEMPLATE_DIRS` are only used in `template.loaders.filesystem`)

There are tests for `utils.cache`. There are currently no tests for a PRNG-less `utils.crypto` and without mocking the `random` module there is no way of triggering this code. As for `template.loaders.cached` I could not find a path of execution that would lead to using the `template_dirs` kwarg (dead code?).

If you require tests for those two obscure latter cases, let me know.
",ambv,None,2013-02-27T03:43:09Z,2014-06-20T19:57:36Z
860,Docs: Make sure the README.txt is bundled with the app,"In docs/intro/reusable-apps.txt the MANIFEST.in needs README.txt in order for the setup.py to work, as it reads it directly in the code.
",KristianOellegaard,None,2013-02-26T22:36:42Z,2014-07-20T01:24:23Z
859,updating classifiers,"to include all the versions of python 3 so they show up correctly in pypi
",myusuf3,None,2013-02-26T21:38:54Z,2014-07-02T11:43:54Z
858,Python 3 porting guide: str.decode does not exist; str.encode was meant,,intgr,None,2013-02-26T21:35:10Z,2015-11-09T16:09:35Z
857,Add native autocommit supoprt to the MySQL backend,"This is a first pass at that feature. Obviously missing docs, and probably some tests.
",alex,None,2013-02-26T17:55:19Z,2018-04-08T00:11:32Z
856,Fix for #19697 -- Added production checklist.Deployment settings,"Most of this was done at the Utrecht Django Sprint, but after I brought it home and worked on it some more (thanks for the input!) git got me confused and I had to delete everything and start over.

Thanks to one of my coworkers, I think I've got it, so now I'm posting it here.
",danielquinn,None,2013-02-26T16:40:10Z,2014-07-20T01:24:24Z
855,Refactor exception wrapping,,aaugustin,None,2013-02-26T14:47:39Z,2014-06-18T05:10:16Z
854,Merge regressiontests and modeltests.,"Ticket: https://code.djangoproject.com/ticket/19921
",apollo13,None,2013-02-26T13:32:35Z,2014-06-14T15:15:43Z
853,"added template, make options.py use it for rendering a SimpleTemplateRes...","Work for solving https://code.djangoproject.com/ticket/19773
Creates a new template, and uses it on a SimpleTemplateResponse. Simple test added too.
",jmansilla,None,2013-02-26T12:47:09Z,2014-07-20T01:24:25Z
852,Fix for #19918 : select_for_update runs on db_for_read rather than db_for_write,"- fixed #19918 by setting the _for_write attribute on QuerySets returned by select_for_update
- added a test for this; the test uses the TestRouter from regressiontests.multiple_database.tests

For more details see: https://code.djangoproject.com/ticket/19918
",kux,None,2013-02-26T09:58:17Z,2014-06-12T09:19:07Z
851,Fixes #18191: Don't consider Accept-Language when generating a cache key,"Thanks to choongmin for the original patch.

Remarks:
- tested on both 2.7 and 3.3
- http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.44 doesn't give any meaning to the order of headers listed in `Vary` so I sorted those headers while creating the cache key to make sure the number of combinations is the smallest possible
",ambv,None,2013-02-25T22:26:05Z,2014-06-25T09:10:39Z
850,Fix 19916. Smarter tokenizing of contrib.comment's templatetags arguments,,bmispelon,None,2013-02-25T21:53:02Z,2014-06-18T22:41:14Z
849,Fixed #18670 -- Fixed collection of shadowed test cases,"Conflicts:
    django/test/simple.py
- Improved collection of both test cases and doc tests. Prevent models from
  shadowing same-named test cases.
- Added test for build_test

This is the patch from pull request #234 with a test case.
",fhahn,None,2013-02-25T21:31:11Z,2014-06-13T02:49:30Z
848,Tweaking unit test docs,"I've had to explain PYTHONPATH about 1000 times in sprints.  This is a common stumbling block on getting runtests.py to work for a cloned git repo.  And this seems to be where initial contributors get frustrated: I have the source, I've made a change, how do I run tests?
",jdunck,None,2013-02-25T17:48:39Z,2014-07-20T01:24:27Z
847,Fixed #18176 -- Added test for year lookups with year < 1000,"Thanks Tomas Ehrlich for the initial test
",fhahn,None,2013-02-25T16:15:26Z,2014-06-27T04:35:11Z
846,Added brackets for lists in DateField and DateTimeField examples,,reecelong,None,2013-02-25T15:26:52Z,2014-07-20T01:24:27Z
845,Top option-buttons now are css rounded. No more GIFs to simulate it.,"- Top options buttons now are css rounded.
- New PNG icons (for Add and GoTo).
- Removed old GIFs simulating rounded borders.
",pmourelle,None,2013-02-25T06:22:16Z,2014-06-14T10:19:56Z
844,Stable/1.5.x,"The configurable way for output TECHNICAL 500 RESPONSE with Ajax request.
",rodrigopmatias,None,2013-02-25T03:10:40Z,2014-06-16T06:47:06Z
843,Ticket #19877 (New option for management commands to avoid formatting output),"This pull request tries to solve the [ticket #19877](https://code.djangoproject.com/ticket/19877).

I added a `--no-style` option to the `BaseCommand` class, so now if you pass that when executing a Django management command, the output will not be formatted, since it will assign `no_style()` to `self.style` in the `BaseCommand.execute` method.

I've fixed also several regression tests in the `admin_script` module, although I am not sure if something more is needed. If so, please just notify me and I will implement a test for it.

**Update:** I reviewed also the documentation and added explanation for new command option.
",jose-lpa,None,2013-02-24T22:15:04Z,2014-06-13T00:07:41Z
842,Make forms.Field's __init__ call super,"Add a call to super in forms.Field **init** method, so that the Field
calss can be used as a Mixin.
",mpessas,None,2013-02-24T19:57:23Z,2014-06-16T18:08:27Z
841,Fixed #18969 -- Added test for year lookups with year < 1000,"Thanks Tomas Ehrlich for the test
- added test for year lookup
- updated queryset documentation, __year, __month, __day, __week_day,
  __hour, __minute, __second take a string as well

Patch for [18969](https://code.djangoproject.com/ticket/18969)
",fhahn,None,2013-02-24T19:11:53Z,2014-07-01T18:04:18Z
840,[DO NOT MERGE] #19898 - Document why/when of class-based views ,"Beginning the pull request early for documentation updates for class-based views.

Currently:
- I've written out some thoughts that I think are important to express on the front topic page, but I need to do some work so weave this new content into the rest of the page better (i.e., make sure there's no overlap/repetition)
- Currently working on the usage-patterns page that will hopefully demonstrate the ideas stated in this new topic front-page material.
",estebistec,None,2013-02-24T17:51:13Z,2014-06-26T14:45:10Z
839,Fix for #19697 -- Added production checklist.,"An attempt to get a sort of ""ready for production"" checklist going.  It's slow work though, since the whole process is new to me.
",danielquinn,None,2013-02-24T17:40:28Z,2014-07-03T09:08:20Z
838,Fixes #6412 - More details about template files.,"Report more details about template files in loader postmortem.

https://code.djangoproject.com/ticket/6412
https://travis-ci.org/dokterbob/django/builds/5021135
",dokterbob,None,2013-02-24T17:37:38Z,2014-07-07T11:05:14Z
837,Fixed #9433 - File locking broken on AFP mounts.,"Updated version of the original patch using Python 3 wrapper for StringIO import.

Original patch:
https://code.djangoproject.com/attachment/ticket/9433/inject_locks_Django-1.5a1.2.patch
",dokterbob,None,2013-02-24T16:59:40Z,2014-06-17T11:12:36Z
836,#19697 This is a start,"This may need some tweaking, but I think that it's a good place to start.  My guess is that this would probably be linked to under _The development process > Deployment_ on the front page.
",danielquinn,None,2013-02-24T16:56:20Z,2014-07-20T01:24:30Z
835,Fix documentation typo (:mod: role in Syndication feed text),"This fixes a Sphinx error in the docs of today
",vdboor,None,2013-02-24T16:52:34Z,2014-07-20T01:24:31Z
834,Add column-<field_name> classes to the admin list,"This simplifies CSS styling to set column widths.

Trac ticket: https://code.djangoproject.com/ticket/19906
",vdboor,None,2013-02-24T16:52:13Z,2014-07-10T21:45:05Z
833,Added Sphinx-style docstrings to db.backends functions.,"django.db modules could use better docstrings because it's difficult at first to tell where parameters like `style` are and come from.

Starting small, docstrings for creation.py.
",tiberiuana,None,2013-02-24T16:43:19Z,2015-04-02T11:34:31Z
832,Fixed #19890 -- ifchanged templatetag rendered its content twice,"The content of ifchanged template tag was rendered twice: first time, to
compare it with the previous value and the second time, to return the
rendered output.

Thanks to vdboor for writing the patch.
",chrismedrela,None,2013-02-24T15:54:27Z,2014-07-13T03:27:04Z
831,Fixed #13546 -- Easier handling of localize field options in ModelForm,"Added a localized_fields ModelForm Meta option which sets the localize
option on the field.
",mxsasha,None,2013-02-24T15:47:35Z,2014-06-24T18:59:15Z
830,Fixed #19263 - DatabaseError on using empty Page .object_list in __in cl...,"fixed and tested on sqlite, pgsql, oracle and mysql
",biern,None,2013-02-24T15:36:11Z,2014-06-16T18:49:12Z
829,#18447 -- Dict access support in LazyObject.,"Thanks to Roman Gladkov for patch.

https://code.djangoproject.com/ticket/18447
",zsiciarz,None,2013-02-24T15:26:53Z,2014-07-14T08:11:58Z
828,Fixed #17320 -- Added whitespace validation to Site.domain field,,zerok,None,2013-02-24T15:04:40Z,2014-07-17T11:10:28Z
827,Added note about auth forms and custom user models.,"I've made this against master. It seems to apply to 1.5 as well. Let me know if I need to do a separate pull request to get it in the 1.5 docs (if it's not frozen).
",benkonrath,None,2013-02-24T15:01:43Z,2014-06-30T11:39:32Z
826,Test case and docs for custom context data in feeds,"Thanks Paul Winkler for the initial patch. (Ref #18112).
",zsiciarz,None,2013-02-24T14:25:15Z,2014-07-12T09:38:10Z
825,Fixed #18777 form fields with as_text/as_hidden not localized,,asendecka,None,2013-02-24T14:02:53Z,2014-07-20T01:24:33Z
824,Fixes #19763 - LocaleMiddleware should check for supported languages in ...,"...settings.LANGUAGE_CODE
",ambv,None,2013-02-24T13:46:29Z,2014-06-12T08:48:42Z
823,Fixed #9084 - Best approach for an OS to atomically rename the session f...,"...ile.
",joeribekker,None,2013-02-24T13:09:05Z,2014-06-26T12:16:36Z
822,Fixed #17943 - too many open file descriptors while using memcache,"https://code.djangoproject.com/ticket/17943
",haxoza,None,2013-02-24T12:45:29Z,2014-06-26T14:49:58Z
821,Fixed #19810 -- MemcachedCache now uses pickle.HIGHEST_PROTOCOL,"Added a test to @fernandogrd's pull request (https://github.com/django/django/pull/720)
",bpeschier,None,2013-02-24T12:38:21Z,2014-06-16T11:48:08Z
820,Fixed #11295: If ModelAdmin.queryset returns a filtered QS don't require a 2nd count call,"Original patch rewritten, added tests and get_filters_params method for ChangeList class.
Thanks Alex for the report.
",viciu,None,2013-02-24T12:26:05Z,2014-06-18T17:27:05Z
819,Fixed #16302 -- Ensure contrib.comments is IPv6 capable,"Changed the ip_address field for Comment to GenericIPAddressField. Added instructions to the release notes on how to update the schema of existing databases.
",mxsasha,None,2013-02-24T12:24:27Z,2014-07-20T01:24:35Z
818,Fixed #19253 -- Extracted template cache key building logic,"Introduced a public function
django.core.cache.utils.make_template_fragment_key
Thanks @chrismedrela for fruitful cooperation.
",oinopion,None,2013-02-24T12:06:13Z,2014-06-12T05:38:00Z
817,Add sqldropindexes to manage,"Change patch from https://code.djangoproject.com/ticket/5568
to work on modern Django.
Add special case for MySQL which has different syntax for DROP INDEX.
Add unit tests for the new functionality.
",rybaktomasz,None,2013-02-24T11:47:18Z,2014-07-20T01:24:36Z
816,Updated the release process docs to reflect the current practices.,"Fixed #17919.
",aaugustin,None,2013-02-24T10:48:18Z,2014-06-18T11:02:38Z
815,Ticket 11971 -- Documentation of the serialization formats,"This adds a bit of documentation about the serialization formats (YAML, XML, JSON) including some simple examples on how relations are handled.

https://code.djangoproject.com/ticket/11971
",zerok,None,2013-02-24T10:02:24Z,2014-06-17T06:48:51Z
814,Fixed #18404 -- Encoded storage location with filesystem or default enco...,"...ding

Thanks andkit for the initial patch

patch for ticket [#18404](https://code.djangoproject.com/ticket/18404)
",fhahn,None,2013-02-23T23:06:12Z,2014-07-09T20:46:04Z
813,fixes #19263,,biern,None,2013-02-23T23:02:39Z,2014-07-04T19:44:21Z
812,Fixed #19872,"Made cached_property to behave as property when accessed via class.
",oinopion,None,2013-02-23T22:21:41Z,2014-07-08T02:41:53Z
811,Fixed #19896 -- cache.clear() doesn't work with DB cache,"Currently, the SQL `delete` in `cache.clear()` gets rolled back, resulting in the DB cache never being actually cleared.

The hacky test right now tries to roll back the delete operation if it's actually not commited.
",gsong,None,2013-02-23T22:19:42Z,2014-06-24T14:38:13Z
810,Fix and test for Bug #18255 Inconsistent data type for BigIntegerField a...,"...fter calling full_clean()
",adamduren,None,2013-02-23T22:09:24Z,2014-06-24T07:07:03Z
809,Fixed #19526,"CSS specifications governs that syntax is case insensitive.
This modifies CachedFilesMixin to support that.
",asendecka,None,2013-02-23T21:42:33Z,2014-06-13T11:09:01Z
808,fix #19263,,biern,None,2013-02-23T21:27:33Z,2014-07-20T01:24:39Z
807,Fixed #12674 -- provide a way to override admin validation,"Moved admin validation code to classes and have those be class
attributes to the ModelAdmin classes.
",HonzaKral,None,2013-02-23T20:47:49Z,2014-06-15T06:28:09Z
806,6585 admin dropdown uses modeladmin ordering,"Solves ticket 6585:

https://code.djangoproject.com/ticket/6585

(uses the modeladmin ordering if provided, else falls back to model ordering)

Also added 2 people to the AUTHORS (contributors on this and past tickets)
",fisadev,None,2013-02-23T20:46:51Z,2014-06-17T08:34:15Z
805,"Fix for #19891 - Improved CI support for Travis, Jenkins and documentation","https://code.djangoproject.com/ticket/19891
",dokterbob,None,2013-02-23T20:45:13Z,2014-06-23T04:17:31Z
804,Proposed fix for #18162.,,oinopion,None,2013-02-23T20:43:47Z,2014-07-20T01:24:40Z
803,Add option to blocktrans to trim whitespace,"https://code.djangoproject.com/ticket/5849

Add the trimmed option to the blocktrans tag to trim any newlines and
whitespace from its content.

This allows the developer to indent the blocktrans tag without adding
new lines and whitespace to the msgid in the PI file.
",mpessas,None,2013-02-23T20:43:13Z,2014-07-01T08:20:13Z
802,Inline admin formset min num,,tback,None,2013-02-23T20:11:22Z,2014-07-20T01:24:41Z
801,Rewritten managing static files howto. Fixes #19897 .,"Splitted out a second howto for using static files in production.

Fixed a couple of references to/from other files.
",reinout,None,2013-02-23T20:06:44Z,2014-06-17T13:10:59Z
800,Fixed 19895 -- Made second iteration over invalid queryset raise an exception too,"When iteration over a queryset raised an exception, the result cache
remained initialized with an empty list, so subsequent iterations returned
an empty list instead of raising an exception

https://code.djangoproject.com/ticket/19895
",gnosek,None,2013-02-23T20:02:17Z,2014-06-15T07:05:59Z
799,Error on empty fixture changed to warning.,"Fixed #18213 https://code.djangoproject.com/ticket/18213
",haxoza,None,2013-02-23T19:51:00Z,2014-06-26T11:58:23Z
798,Fixed ModelChoiceIterator length,,vanschelven,None,2013-02-23T19:13:22Z,2014-06-25T03:52:38Z
797,19838 protected fk not raising errors on delete,"This work is for solving ticket https://code.djangoproject.com/ticket/19838
Includes tests and patch.
Main idea is to add some validation on the inline-formset.
",jmansilla,None,2013-02-23T18:49:48Z,2014-07-12T23:17:32Z
796,Fixes #17866: Vary: Accept-Language header when language prefix used,"Tests pass on 2.7 and 3.3.

Remarks:
- we cannot restrict including ""Accept-Language"" to only the case when it was used in page rendering. The language might be taken from the session or a client cookie. In that case the user gets that specific language but it doesn't mean the server doesn't vary content depending on Accept-Language (e.g. if the session would be empty and the cookie not set). Such a thing would break caching proxies. Taking that into account, I leave out ""Vary: Accept-Language"" on `i18n_patterns` URLs only.
- the patch reuses supported languages across requests to speed up computation, `trans_null` had to learn the `supported``argument to``get_language_from_path()``(already in`trans_real`).
- now `LocaleMiddleware.is_language_prefix_pattern_used()` would be computed in every response so I moved this computation to `__init__` since it's not going to change between restarts
- on a similar note, `django.utils.translation.trans_real.check_for_language` is needlessly computed for every `get_language_from_path()`. It won't change between restarts of the application, shouldn't we memoize it?
",ambv,None,2013-02-23T18:42:57Z,2014-06-20T17:19:39Z
795,Added tutorial06: using AppDirectoryFinder.,"Ticket: https://code.djangoproject.com/ticket/19582
",jpic,None,2013-02-23T18:28:22Z,2014-06-12T17:13:02Z
794,Fixed #19879 have 'findstatic' say where it is searching,,josven,None,2013-02-23T18:23:16Z,2014-06-24T04:32:17Z
793,Admin inlines at top of template,"Can now make admin inlines display at the top of the template by defining ""display_at_top = True"" in the admin inline in admin.py
",slhodson969,None,2013-02-23T18:15:30Z,2014-06-19T22:51:11Z
792,Added implicit connections for smtp #17471.,"Credits to dje as this is just an update for his patch.

Ticket: https://code.djangoproject.com/ticket/17471
",ezequielsz,None,2013-02-23T18:11:27Z,2014-06-17T08:34:13Z
791,Changed %r to %s in get_language_info error message,"Python 3 compatibility. Look here https://github.com/django/django/commit/6bd6a568960e9ddebd78da8e008b235b3b76c5a2#commitcomment-2680512
",konradhalas,None,2013-02-23T18:10:26Z,2014-07-20T01:24:44Z
790,Improved labels and inputs layout in admin login,"As explained and proved in #19177 (https://code.djangoproject.com/ticket/19177), layout looks odd/bad in several languages.
Also, it looks like and old design, a renew is needed here. So, I propose this change following claudep sugestion.
- Changes were made just in the CSS.
- Modified layout to top-aligned labels.
- Added more padding to inputs (it was really needed here).
- It adjust good to zoom in/out.

To make inputs fit perfect, it uses the box-sizing property, with the current support:
Chrome (any): box-sizing
Opera 8.5+: box-sizing
Firefox (any): -moz-box-sizing
Safari 3: -webkit-box-sizing (unprefixed in 5.1+ versions)
IE8+: box-sizing

![Captura de pantalla 2013-02-23 a las 15 08 27](https://f.cloud.github.com/assets/844554/188362/147b9f9e-7de4-11e2-9c3d-f5036f89e1d4.png)
",pmourelle,None,2013-02-23T18:10:21Z,2014-06-21T23:22:54Z
789,Fixed #11277 -- Hidden labels of fields with HiddenInput widget,,chrismedrela,None,2013-02-23T18:04:40Z,2014-06-15T22:06:28Z
788,Fixed #17401 - SelectDateWidget doesn't display erroneous values,"Integrate patch from ticked and added test.
",marw,None,2013-02-23T17:50:42Z,2014-08-29T11:44:00Z
787,Added catch-all logger and tweaked output formats.,"Having a default catch-all logger will prevent '[Sat Feb 23 12:17:35 2013] [error] No handlers could be found for logger "" <**name**>""' Apache log errors. Updated the 'simple' and 'verbose' format to something more useful in my opinion:

Before log 'simple: 
WARNING User 'support3' attempted to register with company 'KL Insight2' but it already exists

After log 'simple': 
WARNING accounts.forms forms.py@82: User 'support3' attempted to register with company 'KL Insight2' but it already exists

Before log 'verbose'
WARNING 2013-02-23 12:46:01,605 forms 22360 -1250423952 User 'support3' attempted to register with company 'KL Insight 2' but it already exists

After log 'verbose':
WARNING accounts.forms 2013-02-23 12:41:13,836 forms 22335 -1250423952 /srv/www/django/sample-site/src/django-project/accounts/forms.py@82: User 'support3' attempted to register with company 'KL Insight2' but it already exists

Thoughts?
",danielsokolowski,None,2013-02-23T17:44:54Z,2014-07-19T21:56:56Z
786,Add link to object's edit page to message after saving in django-admin.,"Refs [#19361](https://code.djangoproject.com/ticket/19361)
",bak1an,None,2013-02-23T17:25:15Z,2014-06-25T06:52:14Z
785,19282 intcomma,"Fix to ticket #19282 https://code.djangoproject.com/ticket/19282
",hernantz,None,2013-02-23T17:23:19Z,2014-06-13T11:47:22Z
784,Fixed #9532 - Allowed to define Formsets min_num,"Allowed to define the minimum number of forms in a Formset
",tback,None,2013-02-23T17:02:38Z,2014-06-14T03:55:59Z
783,Moved ModelForm check work when instance is given,,vanschelven,None,2013-02-23T16:52:06Z,2014-07-02T11:49:12Z
782,Fixed bug #18972,"An alternate implementation of doda's patch at https://github.com/django/django/pull/415, that avoids the ""offset"" math in favor of just stuffing the data into a BytesIO and then .read()ing from it with a sentinel-style iterator.

Includes a unit test from a previous pull request, all tests pass.
",datagrok,None,2013-02-23T16:47:48Z,2014-07-04T20:55:51Z
781,Added test runner option to skip Selenium tests (#19854).,,zsiciarz,None,2013-02-23T16:47:24Z,2014-07-20T01:24:47Z
780,Add a unit test to exercise chunking behavior,"Bug #18972 https://code.djangoproject.com/ticket/18972 reports that the math used by django.core.servers.basehttp.ServerHandler.write to break large data into chunks before writing is incorrect.This issue is valid, but since an array slice whose end exceeds the array's length automatically truncates, nothing actually breaks because of this mistake.

@doda has contributed a patch to address the problem, but no unit tests accompany it.

This commit adds a unit test that exercises the chunking code, proves that no data is currently lost, and allows for easy refactoring of the chunking code.
",datagrok,None,2013-02-23T16:45:25Z,2014-07-13T16:47:07Z
779,docs about caching the javascript translation library,"added docs about caching the javascript translation library as discussed on the django sprint 2013 in Utrecht.
ticket: https://code.djangoproject.com/ticket/6195
",michi88,None,2013-02-23T16:42:23Z,2014-07-10T21:45:06Z
778,Fixed #19609: admin Inlines doesn't display help_text for readonly fields,"Fixed #19609: admin Inlines doesn't display help_text for readonly fields

Refactoring: field was renamed to field_name, since flatten_fieldsets returns field name, not field.

Original patch from Marc Aymerich Gubern
",viciu,None,2013-02-23T16:35:27Z,2014-06-27T07:49:08Z
777,Fixed #19811 - Added language code fallback in get_language_info,"Track ticket: https://code.djangoproject.com/ticket/19811
",konradhalas,None,2013-02-23T16:08:03Z,2014-06-16T18:47:42Z
776,Fix for #19582 (separate file for production useage).,"Split the static files info about production useage into a separate file.
",jjmurre,None,2013-02-23T15:59:11Z,2014-07-20T01:24:48Z
775,#18899 FileSystemStorage.save should support any file-like objects,,biern,None,2013-02-23T15:52:28Z,2014-07-20T01:24:49Z
774,FIX #18491,"#18491 When deleting a proxy model, the admin does not show warning about cascade delete for object with foreign key on the proxied model
",stefan8,None,2013-02-23T15:46:49Z,2014-06-26T14:01:03Z
773,Fixed regression from #17083 -- settings_override,"As `settings_override` was used after the 
initialization of the session backend, we need to
use a new session backend here.
",dokterbob,None,2013-02-23T15:40:36Z,2014-07-20T01:24:49Z
772,Pass PostgreSQL password to psql via environment,"This removes a major annoyance when using PostgreSQL databases, which
require entering the password when running manage.py dbshell.

The password is passed via the environment and is accessible only to
users who have ptrace() access (at least on Linux), so it's not a
security risk.
",gnosek,None,2013-02-23T15:35:31Z,2014-06-21T08:55:25Z
771,Fixed #12491 - Added checkbox-row class to the fieldset template,"Styling was already their but the class name was not used in any template. In admin forms, the help text of a checkbox field will start at the beginning of the line. No indentation.

https://code.djangoproject.com/ticket/12491
",nvandijk,None,2013-02-23T15:18:27Z,2014-06-24T17:12:50Z
770,"Fixed / Proposal for #13181, also thanks to Klaas van Schelven.","https://code.djangoproject.com/ticket/13181
",ghost,None,2013-02-23T15:16:41Z,2014-10-27T20:27:51Z
769,Fixed #19816: pre-evaluate queryset on m2m set,"In ReverseManyRelatedObjectsDescriptor.**set**, evaluate possible
queryset to avoid problems when clear() would touch data this queryset
returns.
",oinopion,None,2013-02-23T14:54:20Z,2014-07-20T01:24:50Z
768,"Fix for #19675 - ""At A Glance"" does not say where to put ""sitelogo.gif""","Quick documentation fix for #19675 (https://code.djangoproject.com/ticket/19675)
",dwightgunning,None,2013-02-23T14:41:28Z,2014-06-26T16:36:48Z
767,Fixes #16330 Dumpdata specify primary_keys --pks,"https://code.djangoproject.com/ticket/16330
",mehmetakyuz,None,2013-02-23T14:24:03Z,2014-07-06T03:55:57Z
766,Fixed #17906 - {% cycle %} and {% firstof %} templatetags in future with auto-escaping,"https://code.djangoproject.com/ticket/17906
",VladimirFilonov,None,2013-02-23T14:21:32Z,2014-06-16T08:10:55Z
765,Fixed #18373 -- Improved debug messages for 404 errors,"When an Http404 exception is raised from a view (as opposed to Django
trying to route the request), make the exception message contain the
full stack trace for easier debugging.

Also, make the reported URL match the one requested in resolve() call,
not the URL of the current page

https://code.djangoproject.com/ticket/18373
",gnosek,None,2013-02-23T14:19:34Z,2014-06-13T08:42:28Z
764,"Ticket 15849, make ifchanged node thread safe.","Previously, the ifchanged node stored state on `self._last_seen`, theirby giving undesired results when the node is reused by another thread at the same time (e.g. globally caching a Template object).

This patch addresses that, by using `context['forloop']` in for loops and `context.render_context` as fallback. Concurrency is emulated in the tests thanks to generators.

Ticket: https://code.djangoproject.com/ticket/15849
",vdboor,None,2013-02-23T14:12:49Z,2014-06-14T03:25:33Z
763,Fixed Python syntax error in staticfiles.serve,"Syntax fix against:

```
Traceback (most recent call last):
  File ""./manage.py"", line 10, in <module>
    execute_from_command_line(sys.argv)
  File ""/home/jpic/dj15/src/django/django/core/management/__init__.py"", line 399, in execute_from_command_line
    utility.execute()
  File ""/home/jpic/dj15/src/django/django/core/management/__init__.py"", line 392, in execute  
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File ""/home/jpic/dj15/src/django/django/core/management/__init__.py"", line 272, in fetch_command
    klass = load_command_class(app_name, subcommand)
  File ""/home/jpic/dj15/src/django/django/core/management/__init__.py"", line 77, in load_command_class 
    module = import_module('%s.management.commands.%s' % (app_name, name))
  File ""/home/jpic/dj15/src/django/django/utils/importlib.py"", line 35, in import_module
    __import__(name)
  File ""/home/jpic/dj15/src/django/django/contrib/staticfiles/management/commands/runserver.py"", line 6, in <module>
    from django.contrib.staticfiles.handlers import StaticFilesHandler
  File ""/home/jpic/dj15/src/django/django/contrib/staticfiles/handlers.py"", line 13, in <module>
    from django.contrib.staticfiles.views import serve
  File ""/home/jpic/dj15/src/django/django/contrib/staticfiles/views.py"", line 20
    def serve(request, path insecure=False, **kwargs):
                                   ^
SyntaxError: invalid syntax
```
",jpic,None,2013-02-23T14:03:12Z,2014-07-04T09:22:57Z
762,Note about non-field support in ModelAdmin.fields/fieldsets.,"Added a note to documentation in response to this issue: https://code.djangoproject.com/ticket/19887 .
",zsiciarz,None,2013-02-23T13:56:07Z,2014-06-25T16:28:14Z
761,Fixed tutorial02: Customizing project’s templates.,"User should not put templates in `mysite/mytemplates/`. Instead,
templates should be in `mysite/templates/` which is a convention.

Otherwise, if we wanted to keep `mysite/mytemplates/` then the
staticfiles tutorial should use `mysite/mystatic/` and that would just
be confusing.

Other djangonauts sitting next to me at Utrecht sprint (also working on
staticfiles documentation revamp) were also in favor of this change.

Also, the docs now demonstrate the setting with a Python list instead of a
Python tuple, removing the special note about the trailing comma. The
rationnale for this is that it is out of the scope of this tutorial to learn
Python tuple usage.
",jpic,None,2013-02-23T13:53:24Z,2014-07-20T01:24:53Z
760,Fix #5405 -  Added missing tests for admindocs ,"@elvard wrote a code for fixing #5405 and i added missing tests to apply the pull request: https://github.com/django/django/pull/484 

https://code.djangoproject.com/ticket/5405
",gkmngrgn,None,2013-02-23T13:48:27Z,2014-06-15T05:57:17Z
759,Fix #17751: Added stripping of whitespace for IPAddressField/GenericIPAddressField,,mxsasha,None,2013-02-23T13:45:34Z,2014-07-20T01:24:54Z
758,remove document_root argument,"Removes document_root from django.contrib.staticfiles.views.serve.

This argument can be removed, because the new way of finding static files doesn't take document_root into account at all.
",ghost,None,2013-02-23T13:40:28Z,2014-06-19T01:14:42Z
757,Fix #17751: Added stripping of whitespace for IPAddressField/GenericIPAddressField,"https://code.djangoproject.com/ticket/17751#comment:7
",mxsasha,None,2013-02-23T13:23:35Z,2014-06-16T21:57:01Z
756,Fixed #19752 - Removed 9.0 PostgreSQL version number in GeoDjango docs.,,ghost,None,2013-02-23T13:07:13Z,2014-07-20T01:24:54Z
755,#16330 dumpdata: filter output with given pimary keys,"https://code.djangoproject.com/ticket/16330#no1
",mehmetakyuz,None,2013-02-23T12:55:51Z,2014-06-17T18:35:04Z
754,Fixes #19758 -- disables e-mail leaking through the password reset form,"Ticket: #19758

PasswordResetForm's validation logic no longer checks if a provided email is registered in the system to prevent information leaking to attackers.

This patch includes updated unittests, docs and templates.
",zerok,None,2013-02-23T12:48:56Z,2014-06-15T00:39:29Z
753,fixed #19878 Not all class based views push self.kwargs to context,"https://code.djangoproject.com/ticket/19878
",josven,None,2013-02-23T12:44:12Z,2014-06-23T00:26:48Z
752,Fixed #19880 - documentation: form-wizard initial data example is wrong.,,ghost,None,2013-02-23T12:25:08Z,2014-07-20T01:24:56Z
751,Use `token.split_contents()` in tags that can take variables (fixes #6271 and #18260),"After fixing #19882, I grepped through the code to check for usage of `token.contents.split()`.

It turned out that several other tags were affected by the same issue, so I fix those.

There are still tags that use `token.contents.split()` instead of `token.split_contents()`, but since they don't take any variable argument, they are not affected.

Here's a list of the remaining instances of `token.contents.split()` and the tags they are associated with:

```
django/template/base.py:262: <not a template tag>
django/template/defaulttags.py:492: autoescape
django/template/defaulttags.py:636: filter
django/template/defaulttags.py:1014: load
django/template/defaulttags.py:1186: templatetag
django/template/loader_tags.py:178: block
django/templatetags/i18n.py:188: get_available_languages
django/templatetags/i18n.py:260: get_current_language
django/templatetags/i18n.py:278: get_current_language_bidi
django/templatetags/static.py:30: get_static_prefix, get_media_prefix
django/templatetags/tz.py:193: get_current_timezone
```

Also note that there are still tags that are affected by this issue in `contrib`.
Namely, all the tags from `contrib.comments` as well as the `get_admin_log` for `contrib.admin`.
Those did not have any tests and I didn't see any bugs in the tracker, so I left them as-is (for now).
",bmispelon,None,2013-02-23T12:23:52Z,2014-07-08T02:40:27Z
750,"Method ""save"" in BaseModelFormSet is marked as alters_data","Fixes #17663
",vanschelven,None,2013-02-23T12:06:48Z,2014-06-20T13:32:27Z
749,#19752 Remove the exact Postgresql version number from gis install doc,"https://code.djangoproject.com/ticket/19752
",ecabuk,None,2013-02-23T09:56:28Z,2014-06-14T06:21:26Z
748,Fix #19882.,,bmispelon,None,2013-02-22T18:02:50Z,2014-06-16T02:00:34Z
747,Fixed #15519 - Add initial SQL location independent on app structure,,ziima,None,2013-02-22T15:45:46Z,2014-06-17T10:58:37Z
746,Fixed #17027 -- added __pow__ to ExpressionNode,"Thanks dan for the initial patch
- added **pow** and **rpow** to ExpressionNode
- added oracle and mysql specific power expressions
- added supports_power to DatabaseFeatures (sqlite does not have a power
  function)
- added tests

Patch for [#17027](https://code.djangoproject.com/ticket/17027)
",fhahn,None,2013-02-21T22:09:41Z,2014-06-15T04:17:38Z
745,Admin index models ordering,"Hi,  I using admin page in my daily work.

But, Django admin/app index page **not** ordering the models what I want.

So, I add an additional argument `order_sequence` in the `register` method

``` python
admin.site.register(ModelOne, ModelOneAdmin, order_sequence=2)
admin.site.register(ModelTwo, ModelTwoAdmin, order_sequence=1)
```
#### This will be useful when edit multi-related-models, Put this models together, It's More convenient for edit

Details see the diff.

And also the docs.

![docs](http://i1297.photobucket.com/albums/ag23/yueyoum/django-docs_zpsc8950ce8.png)
## Below shows the difference in my project
### The Default Admin

![default-admin](http://i1297.photobucket.com/albums/ag23/yueyoum/django-admin1_zpsd1146cc0.png)
### The Custom order Admin

![custom](http://i1297.photobucket.com/albums/ag23/yueyoum/django-admin2_zpsa8d0751f.png)
",yueyoum,None,2013-02-21T08:48:59Z,2014-06-27T14:55:50Z
744,"Issue #19867, don't validate host when we're using server-set values.",,reversefold,None,2013-02-20T21:30:50Z,2014-06-16T05:36:30Z
743,Make creation of the database level constraint optional.,"This still needs docs. This is useful in a few scenarios:
- You're working with bad legacy data.
- You're sharding
- You're using percona's online MySQL schema change stuff
",alex,None,2013-02-20T17:55:43Z,2018-04-08T00:12:20Z
742,Added backwards compatibility with old unsalted SHA1 passwords,"This is to fix ticket https://code.djangoproject.com/ticket/18144 for password stored in SHA1. It was already fixed for MD5.
",dahool,None,2013-02-20T00:09:05Z,2014-06-14T00:54:37Z
741,Added backwards compatibility with old unsalted SHA1 passwords,"This is to fix ticket https://code.djangoproject.com/ticket/18144 for password stored in SHA1. It was already fixed for MD5.
",dahool,None,2013-02-20T00:04:58Z,2014-06-25T03:54:37Z
740,Added backwards compatibility with old unsalted SHA1 passwords,"This is to fix ticket https://code.djangoproject.com/ticket/18144 for password stored in SHA1. It was already fixed for MD5.
",dahool,None,2013-02-20T00:02:41Z,2014-06-16T23:03:09Z
739,Fix typo in legacy database howto (English),"Has:

> This servers as an explicit opt-in to give your nascent Django project write access to your precious data on a model by model basis.

Should read:

> This serves as an explicit opt-in to give your nascent Django project write access to your precious data on a model by model basis.
",JustinTArthur,None,2013-02-19T23:07:30Z,2014-06-16T07:43:45Z
738,Fixed #15624 -- Added aggregate to aggregate_select_mask if mask is set,"Patch for [#15624](https://code.djangoproject.com/ticket/15624)
",fhahn,None,2013-02-19T22:39:09Z,2014-06-27T14:48:54Z
737,Update docs/topics/class-based-views/generic-display.txt,"simple typo in ""Making friendly template contexts""
",hrbonz,None,2013-02-19T10:22:24Z,2014-07-20T01:25:00Z
736,Memcache options via settings,"- Added Memcached backend ability to configure memcached Client and set `min_compress_len`
- Changed `MemcachedCache` backend to use `HIGHEST_PROTOCOL` by default
",lucmult,None,2013-02-19T01:51:52Z,2014-06-12T07:23:20Z
735,Fixed #19434 -- added support for extra_select fields in add_filter,"patch for ticket [19434](https://code.djangoproject.com/ticket/19434)
",fhahn,None,2013-02-18T20:32:36Z,2014-06-17T10:11:26Z
734,"add a ""step_failure"" method on WizardView","A little patch for a method i like using : ""step_failure"".

Goal: If you want catch all ""invalid post"" in a wizard forms.
For me, is a good way to log and stats a wizard in production.
Log failure bring me some indications : if a field validation is too complex, if design of form isn't user friendly etc.

This diff is minimmalist and a first suggestion. I'm open too talk about...
(in fact, that will bring API heavier...)
",ghost,None,2013-02-18T17:34:52Z,2014-06-14T01:19:45Z
733,Implemented persistent database connections.,,aaugustin,None,2013-02-18T12:32:56Z,2014-06-15T23:18:24Z
732,"Fixed #19717 -- ""root qs"" references in doc.","Ticket: https://code.djangoproject.com/ticket/19717
",jpic,None,2013-02-17T22:11:59Z,2014-06-18T18:18:25Z
731,Fixed #18924 -- Made test.Client.logout send user_logged_out signal.,"Patch for [#18924](https://code.djangoproject.com/ticket/18924)

Updated Pavel Ponomarev's patch (pull request #322) to work with custom user models
",fhahn,None,2013-02-16T22:36:50Z,2014-07-05T08:14:49Z
730,Fixed #19719 Removed misleading example from documentation on ModelForm,"Simple doc fix. Example given in documentation errors when attempted.
",phantummm,None,2013-02-16T19:36:15Z,2014-06-25T06:52:36Z
729,Fix for #18526,"This trivial change fixes #18526: {% with %} template tag shows strange behaviour if TEMPLATE_STRING_IF_INVALID is non-empty.

https://code.djangoproject.com/ticket/18526
",regebro,None,2013-02-16T12:26:28Z,2014-06-14T13:20:36Z
728,Fixed #19829 -- Fixed index lookups for NumPy arrays in templates.,,jphalip,None,2013-02-15T07:30:20Z,2014-06-17T04:13:10Z
727,Fixed #19812 - Duplicate phrase in documentation of MultiWidget,"Removed duplicate lines in the instructions and clarified the render(name, value, attrs=None) description.
",itsallvoodoo,None,2013-02-15T04:09:11Z,2014-07-12T04:43:00Z
726,Accept usual space in localized forms with locales which has non-breaking space as THOUSAND_SEPARATOR,"Related ticket: https://code.djangoproject.com/ticket/17217
",uruz,None,2013-02-14T22:35:19Z,2014-06-24T07:04:51Z
725,Moved a function def to a utils folder,"Not critical to merge, just tidying up the place. 
",jbcurtin,None,2013-02-14T22:00:05Z,2014-07-20T01:25:04Z
724,Redirect after Login: Specify list of domains which are safe to redirect...,"... to
",cato-,None,2013-02-14T16:54:07Z,2014-07-20T01:25:04Z
723,Fixed #19819 - Handle template filter errors correctly.,"Wrap the Parser.compile_filter method call with a try/except and call the
newly added Parser.compile_filter_error(). Overwrite this method in the
DebugParser to throw the correct error.

Since this error was otherwise catched by the compile_function try/except
block the debugger highlighted the wrong line.
",mvantellingen,None,2013-02-14T08:46:34Z,2014-07-14T06:41:56Z
722,#10870 -- added test for aggreations with generic reverse relations,"added test for [#10870](https://code.djangoproject.com/ticket/10870)
",fhahn,None,2013-02-13T17:40:12Z,2014-06-20T10:22:33Z
721,Fixed #19819 - Handle template filter errors correctly.,"Wrap the Parser.compile_filter method call with a try/except and call the
newly added Parser.compile_filter_error(). Overwrite this method in the
DebugParser to throw the correct error.

Since this error was otherwise catched by the compile_function try/except
block the debugger highlighted the wrong line.
",mvantellingen,None,2013-02-13T17:00:11Z,2014-06-18T18:39:51Z
720,Fixed #19810 -- MemcachedCache now uses pickle.HIGHEST_PROTOCOL,"For better compatibility with other cache backends

I didn't change BaseMemcachedCache._cache because I think it could be backwards incompatible with custom backends that may rely on it.
",fernandogrd,None,2013-02-12T16:48:24Z,2014-06-13T10:03:57Z
719,Fixed #19808 Capitalization error in example text,,JonLoy,None,2013-02-12T14:16:08Z,2014-06-26T13:56:31Z
718,Fixed #19792 -- Remove test client is_active check,"Thanks mrmagooey for the report.
",slurms,None,2013-02-12T06:34:15Z,2014-06-21T17:26:21Z
717,Fixed #19746 -- Allow deserialization of pk-less data,"Thanks rafallo for the report.
",slurms,None,2013-02-12T06:03:22Z,2014-06-16T23:03:07Z
716,Fixed #19693 truncatewords_html closes <br/><hr/> tags,"- Changed re_tag in django.utils.text to sneawo's suggestion
- Added regression tests
",JonLoy,None,2013-02-12T04:08:04Z,2014-06-13T10:42:08Z
715,Fixed #17260 -- Added time zone aware aggregation and lookups.,,aaugustin,None,2013-02-11T21:01:15Z,2014-06-20T19:58:12Z
714,Add mention of backward relationship in aggregate docs.,"This is for ticket 19803 (https://code.djangoproject.com/ticket/19803).
",ramiro,None,2013-02-11T15:54:08Z,2014-07-06T03:48:22Z
713,Fixed #14930 -- values_list() fails on queryset ordered by extra column,"- added more tests
- use python 2.6 compatible dict comprehension syntax

Fixes [#14930](https://code.djangoproject.com/ticket/14930)
",fhahn,None,2013-02-10T12:47:35Z,2014-06-13T13:08:26Z
712,Updated settings.txt to address the discrepancy between default TIME_ZON...,"...E values.

Updated to address dev mailing list post: https://groups.google.com/forum/#!topic/django-developers/Rg7QusQf-34
",JonLoy,None,2013-02-10T03:01:28Z,2014-07-20T01:25:08Z
711,Updated tutorial01.txt to reflect changes in default project template,,JonLoy,None,2013-02-09T20:09:32Z,2014-07-06T23:09:53Z
710,Updated docs to reflect changes to default project template.,"Updated the database setup of tutorial01.txt to be inline with the new default project template.
",JonLoy,None,2013-02-09T18:03:43Z,2014-07-20T01:25:09Z
709,Fixed #19543 -- implemented SimpleLazyObject.__repr__,"[#19543](https://code.djangoproject.com/ticket/19543)  SimpleLazyObject missing **repr** proxy
",fhahn,None,2013-02-09T10:23:35Z,2014-06-20T15:14:01Z
708,Fixed #11603 - Added django.test.TestCase.assertFormsetError,"Thank-you Martin Green for the patch.
",timgraham,None,2013-02-08T23:49:10Z,2014-06-24T09:51:14Z
707,Fixed #19776 -- Test fails in stable/1.5.x branch,"Was just a missing import
",robvdl,None,2013-02-08T02:52:42Z,2014-06-16T06:47:28Z
706,Casting a SimpleLazyObject to an int failed,"Should be pretty self explanatory. We noticed the bug when passing `request.user` into a filter like:

``` python
Model.objects.filter(user=request.user)
```

Since Django is attempting to coerce the object to an int, it fails on the SimpleLazyObject yielding:

```
TypeError: int() argument must be a string or a number, not 'SimpleLazyObject'
```

The error can be reproduced simple by doing:

``` python
class Foo(object):
  __int__ = lambda self: 1

int(SimpleLazyObject(Foo))
```
",mattrobenolt,None,2013-02-08T01:46:43Z,2014-06-24T06:52:13Z
705,#19778 -- make utils/http.same_origin check if ports are set before comparing,"The utils/http.same_origin is used by the csrf middleware to check same origin.
But it is missing the fact that sometimes the HTTP_HOST header might have port set and when comparing the HTTP_REFERER (which most likely does not have HTTP_HOST set) that same_origin test will report a REASON_BAD_REFERER when probably it should not.

And so I think we should check if port is present before performing the same_origin check.
test and fix is provided.
",jtinfors,None,2013-02-07T23:35:48Z,2015-02-05T23:35:53Z
704,Ensure FK is properly set with default kwargs,"This is all internal to ManyRelatedManager, but a custom m2m field that is instantiated and passes the default `through=None` value in will cause an exception.

Currently, the work around for this is to explicitly instantiate the ManyRelatedManager with `through=self.field.rel.through` within a custom m2m field's `__get__` method.  That is backwards-incompatible with Django <= 1.4.2, however, resulting in code like [this in Armstrong](https://github.com/armstrong/armstrong.core.arm_content/commit/788aaf3fec743f36e7f540c34270b63fa43c279c).

This was a BC break that was introduced in Django 1.4.3.  It was done in an effort to fix [#18823](https://code.djangoproject.com/ticket/18823).  The specific commit was 611c4d6f1c24763e5e6e331a5dcf9b610288aaa8.
",tswicegood,None,2013-02-07T22:46:30Z,2014-07-20T01:25:11Z
703,Do not leak enrollment info via password reset form,"Hello,

Currently the default password reset form can be used to determine when an email address is enrolled in a site. While the `password_reset` view is customizable, I think this lack of confidentiality is a bad default, so I've offered a tiny fix (with test!) that ensures no enrollment information is leaked. Now it requires customization to violate confidentiality, instead of requiring customization to uphold it.

I believe this change fixes https://code.djangoproject.com/ticket/19758 

Cheers,

Kenn
",kennknowles,None,2013-02-07T19:05:10Z,2014-07-10T08:58:55Z
702,Make use of new ungettext_lazy function at appropriate places. ,"https://code.djangoproject.com/ticket/19704 - link to ticket
",uruz,None,2013-02-06T12:36:16Z,2014-07-20T01:25:11Z
701,"Fixed #19750 Postgres conflict on CREATE INDEX: ""relation exists""","[**#19750**](https://code.djangoproject.com/ticket/19750) Improve index name on postgres in order to avoid conflicts.
",pricco,None,2013-02-06T04:35:10Z,2014-06-17T15:01:24Z
700,Fixed #19705 -- Improved CommonMiddleware not to handle a 304 response.,"To solve ticket 19705 (https://code.djangoproject.com/ticket/19705).

Now, CommonMiddleware does not handle a 304 response. It just generates ETags.
Handling a 304 is depends on ConditionalGetMiddleware.
",hirokiky,None,2013-02-05T10:31:16Z,2014-06-13T20:48:26Z
699,Added interpolate filter,"Sometimes interpolation is needed in templates. I.e. http://stackoverflow.com/questions/14626680/how-to-interpolate-already-translated-string-in-django-templates
",aalexgabi,None,2013-02-04T16:45:32Z,2014-07-01T05:15:30Z
698,FIXED #18356 test client context lost for nested views,"Gives signals.template_rendered unique dispatch_uid unique value for each request.

Link to ticket: https://code.djangoproject.com/ticket/18356

References: https://github.com/django/django/pull/84
",bmihelac,None,2013-02-04T15:56:31Z,2014-07-20T01:25:12Z
697,Fixed #14760 - Admin inlines with file/image field fails to save_as,"Refactored BaseInlineFormSet and ModelAdmin to copy initial
values (file name) for fields of FileField or it's subclasses.

'physical' file do not get duplicated.

This pull request address following described by ramiro comment (https://code.djangoproject.com/ticket/14760#comment:8):
1. Pressing the ""Save as"" button reports back a validation error and:
   
   1.1. The image/file fields of inlines already existing in the DB/FS are empty and show ""This field is required."" message error.
   1.2. Values of other fields of the already existing inlines are preserved.

It also address ""Save as"" action in ModelAdmin in the same way.
",bmihelac,None,2013-02-04T15:17:51Z,2017-10-29T02:10:25Z
696,Fixed #19686 -- Added number HTML5 input type for numeric form fields,,claudep,None,2013-02-02T16:13:35Z,2014-06-18T06:10:33Z
695,Add CSRF_COOKIE_HTTPONLY config value,"Follow-up of #114 and more recently #150, rebased on current master. Hopefully it's not lying around for another 8 months :-) So I copied my last comment:

Maybe it makes sense to keep the config value and set it to False by default, otherwise the current CSRF+Ajax recipe in the official Django documentation won't work (https://docs.djangoproject.com/en/dev/ref/contrib/csrf/#ajax) because access to 'document.cookies' is restricted (obviously). Of course there are other ways to do it (like http://erlend.oftedal.no/blog/?blogid=118) but maybe this is worth discussing beforehand.
",saschpe,None,2013-02-02T12:47:28Z,2014-07-20T01:25:13Z
694,Fixed #18541 -- LocMemCache cache backend no longer locks if the process...,"... of pickling tries to write to the cache
",zmsmith,None,2013-02-02T00:07:43Z,2014-07-20T01:25:14Z
693,Implements #18668 -- related_query_name is now a configurable field vari...,"...able

This patch allows full control over both related_name and related_query_name in the ORM.
With this change, a django user can control how to access a related manager and the query
field name separately.

adding tests and fixing generic
",zmsmith,None,2013-02-02T00:07:16Z,2014-07-05T17:11:35Z
692,"Fix #19160 - trivial, but widespread case not covered by previous patch",,uruz,None,2013-02-01T21:32:58Z,2014-07-20T01:25:14Z
691,Add a -v0 option to findstatic to allow simple output,"I've also updated documentation to better reflect the output, and make the commands end in a newline character to be more friendly.
",mattrobenolt,None,2013-02-01T02:40:21Z,2014-07-20T01:25:15Z
690,Fixed #19711 -- Typo in __all__ declaration in django/test/simple.py,"A small typo. https://code.djangoproject.com/ticket/19711
",rafales,None,2013-01-31T18:41:58Z,2014-06-28T22:42:33Z
689,Fixed #19708 -- django.utils.timezone.override helper may raise AttributeError,"https://code.djangoproject.com/ticket/19708
",rafales,None,2013-01-31T14:24:23Z,2014-07-20T01:25:15Z
688,Tutorials review,"I've worked my way through the first four tutorials, and made some amendments to them. They are all pretty small ones, but I have tried to identify things that seemed to need a bit more explanation.

I'll put comments on all the changes inline in the files after making the pull request.
",evildmp,None,2013-01-31T00:32:13Z,2014-06-30T04:39:09Z
687,Fixes #19702: mysql backend not compatible with MySQL 4 ('SHOW TABLE STA...,"This fixes #19702 ticket.

This is only one 1-line commit that restores MySQL 4 compatibility ( Django 1.4 documentation states that it's compatible with MySQL 4).
",mateuszf,None,2013-01-30T23:45:38Z,2014-06-18T18:39:44Z
686,Fixed #19703 -- Typo in get_declared_fields docstring,,skrr,None,2013-01-30T18:58:02Z,2014-07-03T20:19:54Z
685,Updated docs/topics/forms/index.txt about BoundField.field attribute.,,tiberiuana,None,2013-01-30T15:46:53Z,2014-07-20T01:25:17Z
684,Fixes #19160 - Make ungettext_lazy really usable,,uruz,None,2013-01-29T22:40:55Z,2014-06-12T10:49:55Z
683,fix :attr: syntax in HttpRequest.path_info docs,,cvrebert,None,2013-01-29T21:38:35Z,2014-06-20T17:49:32Z
682,"Fixed #19690 - Fixed error in generic views, generic editing docs",,LucianU,None,2013-01-29T14:19:18Z,2014-06-26T16:09:18Z
681,Users with unsalted MD5 passwords unable to log in with Django 1.4,"Details are in https://code.djangoproject.com/ticket/19687
",twig,None,2013-01-29T00:52:05Z,2014-06-20T16:00:19Z
680,[Do Not Merge] Add support for multi column joins Ticket 19385: Option 2,"This version the patch doesn't put anything in the contrib portion. Instead it adds a ForeignObject field which may join any # of columns from two tables. All joins should go through this field type.
",jtillman,None,2013-01-28T18:30:45Z,2014-06-23T01:21:21Z
679,Fixed #16630 -- Support HTML5 input types,"Added NumberInput, URLInput and EmailInput widgets to match
number/url/email HTML5 input types.
Thanks Jonash for the report and the patches.
",claudep,None,2013-01-28T09:32:54Z,2014-06-14T17:00:09Z
678,Fixed #19567 -- Make js i18n view as cbv.,"This is a initial proposal. 
I think is backward compatible.
Pass all view tests with python2 and python3.

Reviews welcome.

Ticket: https://code.djangoproject.com/ticket/19567
",niwinz,None,2013-01-26T22:25:35Z,2014-06-15T21:00:04Z
677,Fix for #19552 -- Ignore template comments when extracting translations. Slightly more strict validation of translator comments placement,"In the general case comments are now ignored. This provides a more correct behavior when they are located before translatable constructs on the same line. Previously the latter were simply ignored (because the former were preserved when converting template code to the internal Python-syntax form later fed to xgettext but Python has no `/* ... */`-style comments).

Special comments directed to translators are now only taken in account when they are located at the end of a line. e.g.:

```
{# Translators: ignored #}{% trans ""Literal A"" %}{# Translators: valid, associated with ""Literal B"" below #}
{% trans ""Literal B"" %}
```

Behavior of `{% comment %}...{% endcomment %}` remains unchanged.
",ramiro,None,2013-01-26T17:14:32Z,2014-06-24T09:10:09Z
676,Fixed #16612 -- Improved has_changed detection for localized field values,"I've removed the '_has_changed' tests where the initial value was a serialized value, because we now call `to_python` when we retrieve the initial value from a hidden form widget.
",claudep,None,2013-01-26T17:10:47Z,2014-07-08T13:25:02Z
675,Fix for bug #18481.,"Throw UnreadablePostError also on IOErrors from FILES.
",edevil,None,2013-01-25T17:28:53Z,2014-07-20T01:25:20Z
674,Implemented `BaseForm.set_data` for setting form data post-init,"Ticket here: https://code.djangoproject.com/ticket/19668
",bruth,None,2013-01-25T15:38:54Z,2014-07-04T15:05:22Z
673,Fix #18986: Improve error message for broken CSS in CachedStaticFilesStorage,"See https://code.djangoproject.com/ticket/18986 for details.
",zyegfryed,None,2013-01-25T14:43:11Z,2014-06-19T07:28:25Z
672,Added a note about needing to wrap escaped JS in double quotes,"I spent some time trying to debug a problem that involved using single quotes around escapejs calls so I thought others would benefit from a note in the documentation saying to use double quoted strings.
",dbravender,None,2013-01-25T06:26:33Z,2014-07-20T01:25:21Z
671,"Fix #19663, text provided to colorize() shouldn't raise exception if None","See #670 for the initial pull request and https://code.djangoproject.com/ticket/19663 for details.
",johnraz,None,2013-01-24T23:28:07Z,2014-06-16T17:37:44Z
670,sqldiff fails with PointField declaration,"See https://code.djangoproject.com/ticket/19663 for details.
",johnraz,None,2013-01-24T19:00:31Z,2014-07-16T15:35:45Z
669,Note `authenticate` usage with custom user model.,"If using a custom user model, with eg `USERNAME_FIELD='email'`,
then it is non-obvious if the correct usage is `authenticate(username=..., password=...)` or `authenticate(email=..., password=...)`

Bit of an easy stumbling point, and it won't be obvious to the developer why login is failing, so we should really note the usage here.

This was the best phrasing I could come up with, but happy to take other suggestions.
",tomchristie,None,2013-01-24T17:07:10Z,2014-06-13T03:14:20Z
668,Documentation: use non-binary write mode for generating `templatebuiltins.js`,"This would cause an exception in Python 3 when trying to `make html` the docs.
",cag,None,2013-01-24T10:34:18Z,2014-07-20T01:25:22Z
667,"Fix #19657: sql, sqlcustom, sqlindexes and sqlall do not take allow_syncdb into account","Simple fix for https://code.djangoproject.com/ticket/19657

Check was copied from other modules taking database routers into account.
",manelclos,None,2013-01-23T14:50:17Z,2014-06-17T14:29:31Z
666,Remove dup_select_related method.,"This undocumented method was used in an old version of the admin, is totally untested and hails from 2008. Although it's listed in the ""public methods"" section, as it's not documented or used I don't think it needs a deprecation path.

If we think it's useful I'll write some tests/docs for it instead...
",mjtamlyn,None,2013-01-23T00:32:01Z,2014-07-12T08:56:59Z
665,Allow select_related(None) to clear list of related fields,"https://code.djangoproject.com/ticket/16856
",dcramer,None,2013-01-22T22:54:53Z,2014-06-16T01:13:53Z
664,Fix typo in es_AR localization from django.contrib.auth,,federicobond,None,2013-01-21T15:25:05Z,2014-07-20T01:25:23Z
663,Fixed #19044 -- Allow get_success_url to use self.object in DeletionMixin,"Added tests, thanks to nxvl for the initial patch and ptone for reviewing the ticket.
",slurms,None,2013-01-21T08:34:20Z,2014-07-20T01:25:24Z
662,Fixed #19645 -- added TransactionMiddleware tests.,,slurms,None,2013-01-21T05:40:16Z,2014-07-20T01:25:24Z
661,Include .DS_Store in .gitignore,"When browsing in Finder, OS X automatically creates .DS_Store files.
This is very annoying when using django as a submodule which
perpetually is getting dirty.

Updated the .gitignore to ignore these files.
",strongriley,None,2013-01-21T01:21:19Z,2014-07-20T01:25:24Z
660,Fixed #18898: has_changed now works with instances,"Fix for [#18898](https://code.djangoproject.com/ticket/18898)

Since form initial accepts both string and python values, has_changed also needs to work with both.

I've updated ModelMultipleChoiceField to_python so that it returns the filtered queryset based on the value.
",tuxcanfly,None,2013-01-20T13:19:38Z,2014-06-26T11:30:20Z
659,ticket5797: decorator_from_middleware can cause middleware hooks to run out of correct order,"Now, utils.decorators.decorator_from_middleware supports multiple arguments.
",hirokiky,None,2013-01-20T05:06:18Z,2014-06-13T00:28:06Z
658,Fixed #19628 - Added note about AUTH_USER_MODEL in documentation.,"The documentation didn't explicitly state that the app used for the
AUTH_USER_MODEL must be in the INSTALLED_APPS setting.
",jordanmessina,None,2013-01-18T15:42:51Z,2014-07-20T01:25:25Z
657,#18558 Supply `url` property to `HttpResponseRedirect` and `HttpResponsePermanentRedirect`,"I added line to HttpResponseBase and correspond tests.
",hirokiky,None,2013-01-18T08:09:45Z,2014-07-04T23:20:24Z
656,[Do Not Merge] Add support for multi column joins Ticket 19385,"This is an operating but not final version. Still needs some polishing before merging. Please review and comment with questions/concerns.

-JeremyT
",jtillman,None,2013-01-17T21:50:42Z,2014-07-01T00:44:17Z
655,note on runtests.py,"The tutorial didn't mention how to run tests other than in a project, so I added a couple of short paragraphs. 

I realised that https://docs.djangoproject.com/en/1.4/topics/testing/ doesn't either, and I think it should.

https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#quickstart does discuss it.
",evildmp,None,2013-01-17T18:32:02Z,2014-07-02T10:37:32Z
654,Fixed #18460 -- Override method _has_changed,"Fix for https://code.djangoproject.com/ticket/18460
",vaal-,None,2013-01-16T20:57:22Z,2014-06-13T18:16:25Z
653,Allow 'isPermaLink' attribute in <guid> element in an RSS item.,"This patch allows 'isPermaLink' attribute to be set in a <guid> element of an item in an RSS feed generated by Django. This is with reference to https://code.djangoproject.com/ticket/9800.
",rtnpro,None,2013-01-16T18:57:25Z,2014-06-13T16:07:14Z
652,Fixed #19099 -- Split broken link emails out of common middleware.,,aaugustin,None,2013-01-15T16:23:18Z,2014-07-20T01:25:27Z
651,Adds flushing of stdout and stderr after writes,"Because output is written without ever closing the fds until sys.exit is
called after a `KeyboardInterrupt` exception, it is difficult to read
stdin or stdout from a parent process that may spawn a development
server subprocess.

https://code.djangoproject.com/ticket/19593
",chroto,None,2013-01-15T14:31:49Z,2014-06-14T06:57:31Z
650,Fixed #19606 -- Adjusted cx_Oracle unicode detection.,"Adjusted how unicode support in cx_Oracle is detected based on cx_Oracle 5.0.x and 5.1.x source codes.
",jtiai,None,2013-01-15T13:11:58Z,2014-06-16T06:47:15Z
649,Prevent trying to repeatedly importing TextTools,"There's really no need for this.
",mattrobenolt,None,2013-01-15T02:24:38Z,2014-07-20T01:25:28Z
648,Added the ability override a setter for custom model fields,"This adds a minimal **setattr**() to the base model that checks that property being set is in the field list and has a setter() method on that field. Then the value is run through the setter() method before actually assigning it. This gives the ability to actually create a setter for a custom model field that can transform or verify data as desired. See the changes that I made in the docs for full details and limitations. The unit test added demonstrates a simple example.

The main reason that I added this is because while using get_prep_value() to do the data transformations will change what's in the database, you need to refetch the object from the database to actually update the object that was originally created. This allows you to enforce changes on the value as soon as it is assigned, instead of only making changes for what is stored and retrieved.
",MartinLindsay,None,2013-01-14T22:10:25Z,2014-06-12T11:44:54Z
647,Fix typo in File storage API documentation.,,jorabra,None,2013-01-13T18:32:10Z,2014-07-20T01:25:29Z
646,Fixed #19024 -- Corrected form wizard docs for get_form_prefix.,"Fix for https://code.djangoproject.com/ticket/19024
",stephrdev,None,2013-01-12T11:24:32Z,2014-07-20T01:25:29Z
645,Fixed #18026 -- Don't return an anonymous dict if extra_data in storage is empty.,"Fix for https://code.djangoproject.com/ticket/18026
",stephrdev,None,2013-01-12T11:09:41Z,2014-07-20T01:25:29Z
644,Fixed #15198 -- set request on AuthenticationForm POST,"Added tests. Thanks to Ciantic for the report and initial patch, claudep for the extra work.
",slurms,None,2013-01-12T09:53:43Z,2014-06-17T08:18:56Z
643,Fixed #17813 -- Added a .earliest() method to QuerySet,"Thanks to tonnzor, jimmysong, and Fandekasp for the patch.
",slurms,None,2013-01-12T08:44:19Z,2014-07-16T08:16:03Z
642,Send post_delete signals immediately,"In a normal relational construct, if you're listening for an event that signals a child was deleted, you dont expect that the parent was deleted already.

This change ensures that post_delete signals are fired immediately after objects are deleted in the graph.

FWIW we need this at Disqus because we use application triggers to do various things.

Our construct is like:

```
User:
  profile = ForeignKey(UserProfile)

Comment:
  user = ForeignKey(User)

Comment.post_delete -> publish that a message was deleted, by author,
  referencing something other than the id of the author.
```

In Django 1.2 this works fine, but in 1.4 the author has already been removed from the database when the Comment post_delete trigger happens.
",dcramer,None,2013-01-11T22:54:53Z,2014-06-18T01:32:20Z
641,Send post_delete signals immediately,"In a normal relational construct, if you're listening for an event
that signals a child was deleted, you dont expect that the parent
was deleted already.

This change ensures that post_delete signals are fired immediately
after objects are deleted in the graph.
",dcramer,None,2013-01-11T22:12:56Z,2014-07-20T01:25:31Z
640,note on minified jquery.js and DEBUG mode,"https://github.com/django/django/pull/639 is more complicated than I first thought, so I have extracted one of the issues from it for this pull request, which I think will be simpler to deal with.
",evildmp,None,2013-01-11T22:02:33Z,2014-07-04T08:31:32Z
639,added notes on jQuery,"I have tried to make the advice on what to do about jQuery in admin a bit clearer and the recommendations stronger.

Also, I couldn't find any mention of https://github.com/django/django/blob/master/django/contrib/admin/options.py#L401 in the docs.

Ticket: https://code.djangoproject.com/ticket/19597
",evildmp,None,2013-01-11T13:31:08Z,2014-07-01T10:12:05Z
638,Add missing pydoc to Pagination class,,JensRantil,None,2013-01-11T11:19:49Z,2014-07-20T01:25:32Z
637,Fixed #19360 -- Exception for aggregates on SQLite," Raised an explicit exception for aggregates on date/time fields in sqlite3.
",slurms,None,2013-01-11T06:01:45Z,2014-07-20T01:25:32Z
636,Fixed #19445 - Fieldsets' validation doesn't call get_form,"Added documentation for ModelAdmin.get_fieldsets method as russellm
suggested. Disabled validation when get_form is defined on a subclass
of ModelAdmin.
",slurms,None,2013-01-11T03:30:43Z,2014-07-03T23:40:42Z
635,Doc Fix -- django.shortcuts.render requires a request object,"The file upload topic guide shows `render` being called in 2 locations
without supplying a `request` object. This is fixed in this PR.
",vkurup,None,2013-01-10T21:25:11Z,2014-07-20T01:25:33Z
634,Fixed #19445 - Fieldsets' validation doesn't call get_form,"Added documentation for `ModelAdmin.get_fieldsets` method as russellm
suggested.

Ticket: [#19445](https://code.djangoproject.com/ticket/19445)
",berinhard,None,2013-01-10T19:25:39Z,2014-07-20T01:25:33Z
633,Add truncatechars_html template filter.,"Fixes #19496.
",slurms,None,2013-01-10T15:38:30Z,2014-06-12T06:10:30Z
632,Add truncatechars_html template filter.,"Fixes ticket #19496
",slurms,None,2013-01-10T15:20:15Z,2014-07-20T01:25:34Z
631,Fixed #19573 -- Allow override of field label in AuthenticationForm,"Added test for bug.
",slurms,None,2013-01-10T07:45:15Z,2014-07-03T03:29:31Z
630,Add widgets argument to modelformset_factory,"Added tests and documentation to a small modelformset_factory feature.
",slurms,None,2013-01-10T06:45:45Z,2014-07-20T01:25:34Z
629,Add support for validation warnings.,"Got the code in trac ticket #23 working, moved doctests into a TestCase
",slurms,None,2013-01-10T05:42:34Z,2014-06-13T01:02:50Z
628,Generate pot file only once,"There is no need to regenerate pot file for every locale - it will
be always same. By generating it just once, makemessages is way faster
for larger projects.
",nijel,None,2013-01-09T13:55:39Z,2014-06-14T10:06:37Z
627,Store previous string in po files,"This easies translators works on fuzzy strings, where they can check
what has been changed.

This can be disabled using --no-previous parameter.
",nijel,None,2013-01-09T13:50:49Z,2014-06-13T05:43:11Z
626,Fixed #19581,"Duplicate IDs with CheckboxSelectMultiple if ID passed to constructor

https://code.djangoproject.com/ticket/19581
",lraucy,None,2013-01-09T09:35:03Z,2014-07-20T01:25:36Z
625,Clarification of collectstatic.py warning message.,"I am not a programmer, so I may not have completed this small task perfectly (I had trouble figuring out how to break the text line so it did not extend beyond 80 chars), but it seems that the collectstatic warning message should be more clear: it will not _always_ overwrite files; it will only replace existing default files with new default files. So, it will only overwrite default files that the user has modified. This is hard to describe in one sentence, but I have attempted to do so.
",rosslaird,None,2013-01-09T04:42:01Z,2014-06-30T11:18:13Z
624,management command options to match command line use,"patch for https://code.djangoproject.com/ticket/19570
",davidszotten,None,2013-01-07T23:36:06Z,2014-06-12T09:59:31Z
623,Check whether Auth backend in AUTHENTICATION_BACKENDS before importation ,"Check whether Auth backend in AUTHENTICATION_BACKENDS before importation 
",mengzhuo,None,2013-01-06T08:29:57Z,2014-07-20T01:25:37Z
622,ticket19210 - django.utils.timesince() does not account for leap years,"## Description

The output of django.utils.timesince() will become increasingly inaccurate as the number of leap years in the supplied time period grows. 

https://code.djangoproject.com/ticket/19210
",hirokiky,None,2013-01-05T16:17:08Z,2014-07-20T01:25:37Z
621,Updated staticfiles.views.serve to serve files from another document_root,"The function django.contrib.staticfiles.views.serve has the argument 'document_root'. But this argument is never read in the function.

You should either remove this argument from the function declaration, or build the final path from it.
",ostcar,None,2013-01-05T14:51:16Z,2014-06-20T02:48:43Z
620,Fixed #14633 - Organized settings reference docs,"Here's a rendered copy of the changes: http://techytim.com/django/14633/ref/settings.html
",timgraham,None,2013-01-05T12:24:57Z,2014-06-19T00:42:17Z
619,Allow X-Forwarded-Port header to override the default SERVER_PORT when reversing URLs,"Related: https://code.djangoproject.com/ticket/19517
",mattrobenolt,None,2013-01-02T23:03:57Z,2014-06-14T08:15:39Z
618,#15231: Replaced admin's datetime shortcut JS by a jQuery plugin for more performance.,"https://code.djangoproject.com/ticket/15231

Updated patch for current master (1.5+). Was https://github.com/django/django/pull/108 .
",fabianbuechler,None,2013-01-02T17:40:29Z,2014-06-26T05:32:34Z
617,Fixed #19547 - known_related_objects fixes.,,mjtamlyn,None,2013-01-02T11:08:24Z,2014-07-01T02:45:27Z
616,Fixed #19516 - Fixed remaining broken links.,"Added -n to sphinx builds to catch issues going forward.

My concern is removing links to items for which we actually want to add documentation.  Let me know if you see anything like that.
",timgraham,None,2013-01-01T19:22:01Z,2014-07-20T01:25:39Z
615,Tiny typo fixed in logging docs,,evildmp,None,2013-01-01T17:12:52Z,2014-07-18T12:02:56Z
614,"fix post-syncdb signal documentation by adding ""db"" param","## documentation fix

documentation for `post_syncdb` did not mention the `db` param
",mpaolini,None,2012-12-30T23:06:51Z,2014-07-20T01:25:39Z
613,Fixed #19453 -- Obfuscated args in sensitive_variables's frame.,"Patch by Julien Phalip.
",aaugustin,None,2012-12-30T22:38:37Z,2014-07-20T01:25:40Z
612,Trigger request_finished in the WSGI iterable's close().,,aaugustin,None,2012-12-30T14:09:52Z,2014-06-16T02:06:50Z
611,Trans tags are missing in admin_docs,"Corrected a typo in brazilian portuguese translation (Already sent an email to translation team at Transifex)
and included trans tags in files at 'django/contrib/admindocs/templates/admin_doc/'
",lborgav,None,2012-12-30T02:21:58Z,2014-06-20T07:08:35Z
610,-,"## 
",ELLIOTTCABLE,None,2012-12-28T02:27:31Z,2014-06-15T19:06:36Z
609,Update django/contrib/staticfiles/management/commands/collectstatic.py,"Fixed small output error.
",mitar,None,2012-12-27T19:37:21Z,2014-07-20T01:25:41Z
608,[1.5x] Removed unnecessary 'queryset' parameter...,"from 'get_paginate_by' in `MultipleObjectMixin`, 
and removed reference in 'get_context_data'.
",LucasMagnum,None,2012-12-27T14:10:13Z,2014-06-16T06:47:06Z
607,"In the autoreload module, check if the filename is not None before checking it",,tbartelmess,None,2012-12-26T01:43:09Z,2014-06-14T21:48:17Z
606,Update six,"Updated django/utils/six.py with the latest version from https://bitbucket.org/gutworth/six/, because there the current version does not work correctly with jython.
",tbartelmess,None,2012-12-26T01:21:04Z,2014-07-20T01:25:42Z
605,Advance deprecations for 1.6,,aaugustin,None,2012-12-24T23:01:06Z,2014-07-06T07:18:38Z
604,Update django/contrib/auth/locale/es_MX/LC_MESSAGES/django.po,"Small change from ""</ a>"" to ""</a>"".

It was wrapping everything in a ""<a>"" tag.
",Y3K,None,2012-12-22T17:59:12Z,2014-07-20T01:25:43Z
603,Auth docs refactor,"https://code.djangoproject.com/ticket/19498
",ptone,None,2012-12-20T00:36:11Z,2014-06-20T10:24:00Z
602,Testing docs rf,"See https://code.djangoproject.com/ticket/19497
",ramiro,None,2012-12-20T00:17:42Z,2014-06-17T18:32:45Z
601,ModelMultipleChoiceField: Don't try to iterate over model instances (#18172),"Test case included.

I've decided to go with the `hasattr(value, '_meta')` test as it's already used by other fields.
",patrys,None,2012-12-19T19:05:19Z,2014-06-15T11:25:03Z
600,Fixed #19215,"Modified ImageField bound rendering case to correctly display data when there are errors elsewhere in the form
",mcardillo55,None,2012-12-19T13:28:04Z,2014-06-28T13:25:26Z
599,Added #19414 -- Admin registration decorator,"I added a decorator that registers Model/ModelAdmin pairs with AdminSites. I mostly followed how the AdminSite.register method currently does this.
",BHold,None,2012-12-18T01:04:12Z,2014-07-20T01:25:44Z
598,uWSGI tutorial rewrite,"First draft of a tutorial for running Django with uWSGI and nginx.

Although this covers nginx specifically, it doesn't exclude other servers (and at least one of the other how-to documents covers Apache in much the same way so I assumed it was OK to be that specific).

The tutorial needs some input from a more expert uWSGI user on configuration options in particular.
",evildmp,None,2012-12-18T00:21:54Z,2014-06-25T04:45:37Z
597,Fixed #2417 -- Add a BinaryField,,claudep,None,2012-12-17T21:37:56Z,2014-06-12T10:36:07Z
596,Use native strings in WSGI environ,"This pull request fixes https://code.djangoproject.com/ticket/19468.

I had to fix a regression in the test client first.
",aaugustin,None,2012-12-17T09:51:44Z,2014-06-16T23:51:15Z
595,Fixed typo in WidthRatioNode's error.,,bmispelon,None,2012-12-17T09:36:45Z,2014-07-20T01:25:45Z
594,Accept underscore in host validation,"Despite it is not common, a host can have an underscore.
",nicolasleger,None,2012-12-16T20:43:09Z,2014-07-20T01:25:46Z
593,Fixed ticket #13161,"Previously, Django would register UNICODE extensions for psycopg2 at global scope, causing all other Python applications running under the same interpreter to be fed Unicode objects instead of expected strings. This would break those applications.
Now Django will register UNICODE only on per-cursor basic, so other applications will be unaffected.
",piotrmaslanka,None,2012-12-16T16:35:33Z,2014-06-17T16:49:20Z
592,"Fixed #19401 - ""swapped"" is pre-calculated attribute","swapped was turned from a property to a attribute set during Option.contribute_to_class()

While we could put the entire comparison fix into _swapped(), this function started looking very process intensive and given that other parts of the code use this frequently as a ""have I been swapped"" check, I believe calculating this _once_ and storing as an attribute is highly beneficial.

This differs from the previous pull request in that I do not have separate is_swapped, swapped_app_label and swapped_object_name attributes... instead leaving it as ""swapped"" in its original meaning.

Ie, the only change is that swapped is calculated once, with appropriate checking, rather than each time it is requested.
",chmarr,None,2012-12-15T23:22:53Z,2014-06-16T06:47:09Z
591,- fix locale middleware redirect url handling for views that do not end ...,"...with '/'

and the settings.APPEND_SLASH option is True

  example: i18n urlpattern ^sitemap.xml$ would result in something like
  language_path=u'/en/sitemap.xml/' which in turn results in 404 because that
  doesn't match the original urlpattern.
",dgerzo,None,2012-12-15T17:49:43Z,2014-07-04T01:45:28Z
590,Fixed #14974 -- Allow using custom i18n backends,"This adds support for custom i18n backends in Django.

This https://github.com/rtnpro/django-pontoon-hook/tree/i18n_backend shows how to customise the i18n backend as necessary.

Please review it and let me know if it's OK or needs improvements.
",rtnpro,None,2012-12-15T09:54:59Z,2015-05-02T15:47:43Z
589,Prepopulate modeladmin's datetime fields using querystrings. fixes #19431,"Related to https://code.djangoproject.com/ticket/19431
",pablorecio,None,2012-12-15T00:16:18Z,2014-08-01T19:01:08Z
588,"Fixed #19401 - Refactored ""swapped"" with ""is_swapped"", ""swapped_app_labe...","...l"" and ""swapped_object_name""

I've refactored the swapped check so that its checked _once_ when the options are applied to the class, and all tests for swapped-ed-ness are done against the ""is_swapped"", ""swapped_app_label"" and ""swapped_object_name"" attributes.

These changes cause three regression tests to fail, but  these appear to be ""non issues"", or perhaps even fixing a limitation of the older method. All three tests were looking for a failure condition that appears to be perfectly fine code. There's insufficient documentation to know if the test _should_ have failed by design, or was failing for a known or unknown reasons.

```
======================================================================
FAIL: test_swappable_user (django.contrib.auth.tests.basic.BasicTestCase)
The current user model can be swapped out for another
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/ccogdon/dev/django-1.5x/django/test/utils.py"", line 213, in inner
    return test_func(*args, **kwargs)
  File ""/Users/ccogdon/dev/django-1.5x/django/contrib/auth/tests/basic.py"", line 166, in test_swappable_user
    User.objects.all()
AssertionError: AttributeError not raised

======================================================================
FAIL: test_invalid_models (modeltests.invalid_models.tests.InvalidModelTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/ccogdon/dev/django-1.5x/django/test/utils.py"", line 213, in inner
    return test_func(*args, **kwargs)
  File ""/Users/ccogdon/dev/django-1.5x/tests/modeltests/invalid_models/tests.py"", line 48, in test_invalid_models
    self.fail('Unable to load invalid model module')
AssertionError: Unable to load invalid model module

======================================================================
FAIL: test_generated_data (regressiontests.swappable_models.tests.SwappableModelTests)
Permissions and content types are not created for a swapped model
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/ccogdon/dev/django-1.5x/django/test/utils.py"", line 213, in inner
    return test_func(*args, **kwargs)
  File ""/Users/ccogdon/dev/django-1.5x/tests/regressiontests/swappable_models/tests.py"", line 41, in test_generated_data
    self.assertNotIn(('swappable_models', 'article'), apps_models)
AssertionError: (u'swappable_models', u'article') unexpectedly found in [(u'admin', u'logentry'), (u'admin', u'logentry'), (u'admin', u'logentry'), (u'admin_ch...
```
",chmarr,None,2012-12-14T22:29:30Z,2014-06-16T06:47:28Z
587,Added 'license' value to the setup.py fixes #19430,"Related to ticket #19430: https://code.djangoproject.com/ticket/19430
",pablorecio,None,2012-12-14T20:24:04Z,2014-06-14T13:17:11Z
586,Fixed #19457 - ImageField size detection fails for some files even when PIL could succeed,"https://code.djangoproject.com/ticket/19457
",bak1an,None,2012-12-13T17:35:37Z,2014-06-22T00:36:54Z
585,Removes poor PHP references,"The documentation and tutorials contain references to ways of coding in very old versions of PHP. The PHP ecosystem has moved on quite considerably since those days and many of the references are not best practice - or even valid any more.

This update removes these references.

I'm enjoying my dive into Django - but found the incorrect statements and 'bashing' of the language quite annoying.

This is a new pull request (the first one was #582) which was closed due to some potentially misleading alterations. This hopefully is an improvement that will keep everyone happy!

@kmtracey - If you could leave this PR open if you think any of the alterations are incorrect I can correct them with another commit without having to start over with a fresh PR.
",blongden,None,2012-12-13T13:24:15Z,2014-06-21T07:14:38Z
584,Fixed a bug in QuerySet slicing,"django/db/models/query.py (QuerySet.**getitem**): Fixed a bug where slicing a partly iterated QuerySet without explicit stop would return the slice of the unmodified result cache, discarding uncached rows from the slice.

This bug applies to QuerySets that are larger than CHUNK_SIZE which seem to be 100.
",robert-j-engdahl,None,2012-12-13T08:41:40Z,2014-07-20T01:25:48Z
583,Adding UTF8 output encoding to fix unexplained encoding errors for pathnames on Ubuntu NFS mounts.,,brendoncrawford,None,2012-12-13T01:19:11Z,2014-06-18T18:39:28Z
582,Remove old PHP references,"The documentation and tutorials contain references to ways of coding in very old versions of PHP. The PHP ecosystem has moved on quite considerably since those days and many of the references are not best practice - or even valid any more.

This update removes these references.

I'm enjoying my dive into Django - but found the incorrect statements and 'bashing' of the language quite annoying.

Disclaimer: PHP _is_ the language I currently use for my professional work - we all know PHP has it's issues and idiosyncrasies. I also code in Python, Perl, C and others.
",blongden,None,2012-12-12T16:49:59Z,2014-07-20T01:25:49Z
581,Fixed #19432 -- Better error messages for get_object_or_404,"Get_object_or_404 and get_list_or_404 now give a more helpful ValueError message if a user tries to give them an argument object that is not a Model, Manager, or QuerySet. Passes all tests.
",BHold,None,2012-12-12T16:13:22Z,2014-07-18T09:51:02Z
580,Fixed #16979 -- Added support for nested Q objects,"Nested Q objects can be used to factor out common prefixes from keyword arguments, e.g. Q(foo__a=1) | Q(foo__b=2) == Q(foo=Q(a=1) | Q(b=2)).
",emulbreh,None,2012-12-11T20:21:24Z,2014-06-27T05:32:54Z
579,Fixed #19360 -- Raised an explicit exception for aggregates on date/time...,"... fields in sqlite3.
",chrismedrela,None,2012-12-10T08:39:29Z,2014-06-27T05:31:23Z
578,intword and intabr expansion and intword_internal api exposure,,eire1130,None,2012-12-09T01:16:53Z,2014-06-15T11:07:25Z
577,Fixed #19439 -- Removed unused admin_modify template tag library from change_password.html,"https://code.djangoproject.com/ticket/19439
",ak3n,None,2012-12-07T18:10:57Z,2014-07-20T01:25:50Z
576,More powerful Inline Admin `extra` parameter (#19425),"Right now, the number of extra inline forms in inline admins is
not that flexible. It should be  possible to define a method
which can decide the number based on the context.

Issue in question: https://code.djangoproject.com/ticket/19425
",crodjer,None,2012-12-07T09:12:04Z,2014-06-28T13:25:14Z
575,Ticket 13629 -- Add app and model class in <body> tag,"Here is the fix for Ticket 13629 it contains
- evolution proposed in previous pull request on this topic : ​https://github.com/django/django/pull/158.
- enhancement to handle application and model class separately in all templates concerned
- test coverage of all evolutions
",tcsorrel,None,2012-12-04T22:44:36Z,2014-06-15T04:43:10Z
574,Update docs/ref/settings.txt,"Amended explanation of LOCALE_PATHS
",evildmp,None,2012-12-03T15:47:08Z,2014-07-14T22:20:41Z
573,#19070 urlize template filter raises exception in some cases,"I intend to re-open https://code.djangoproject.com/ticket/19070 - it's not complete and this pull tests and fixes a problem we're seeing in live.
",tominsam,None,2012-12-03T14:59:07Z,2014-06-16T07:36:26Z
572,minor spelling error fix in the docs,"changed ""updateing"" to updating.
",un33k,None,2012-12-02T21:28:28Z,2014-07-02T09:14:59Z
571,Fixed #19357 -- Allow non-ASCII chars in filesystem paths,,claudep,None,2012-12-02T20:36:15Z,2014-06-27T14:39:14Z
570,fixed #18160 Auth - Unknown Encoding Error when syncdb,"I mentioned this error with sqlite3 in [the original post](https://code.djangoproject.com/ticket/18160). But the other day, I re-encounter it on another Macbook with PostgreSQL. So I think we'd better fix this issue for the non-ascii locales env.
",mitnk,None,2012-12-02T06:38:48Z,2014-07-20T01:25:53Z
569,Typeo in ValuesQuerySet._as_sql docstring,,orblivion,None,2012-12-02T02:56:32Z,2014-07-10T06:06:09Z
568,Named patterns redirect view,"RedirectView.as_view(pattern_name='artist_detail') will now reverse to the url pattern, named artist_detail.

Additionally, the args and kwargs from within the URL are used to reverse dynamically to the target resource / View   --  that is something, lazy_reverse is not doing right now.

I can change the documentation as soon as it is clear that this will be merged.

Discussion was started at

https://groups.google.com/forum/#!topic/django-developers/VmF6m-NZeKg

Ticket: https://code.djangoproject.com/ticket/15273
",ludwigkraatz,None,2012-12-01T16:20:47Z,2014-06-28T15:01:46Z
567,Improve app template/skeleton,"Here are some essential minor improvements to the default app template/skeleton.

The original version doesn't have a consistent coding style, is lacking descriptions and good examples that could help a beginner.
",gw0,None,2012-11-30T22:53:56Z,2014-06-12T08:16:17Z
566,Improve project template/skeleton,"Here are some essential minor improvements to the default project template/skeleton.

The original version doesn't have a consistent coding style, is lacking some descriptions and commonly recommended good practice use cases that could help a beginner.

(If you want I can also prepare a more drastic pull request that would reorder the settings.py, improve defaults and make it more logical. It is based on common good practices in various project skeletons found on the internet.)
",gw0,None,2012-11-30T22:52:22Z,2014-06-12T08:16:21Z
565,Fixed #19387 - CookieStorage does not encode/decode SafeData properly,"https://code.djangoproject.com/ticket/19387
",bak1an,None,2012-11-30T15:39:24Z,2014-07-20T01:25:54Z
564,Fixed #19398 -- Prevented safe_join from coercing its output to unicode.,"Refs #9579. Reverts parts of dfa90aec and 8fb1459b.
",aaugustin,None,2012-11-30T15:22:21Z,2014-06-13T14:30:22Z
563,Fixed #19399 -- Do not recreate RelatedObject instances in validation.,"https://code.djangoproject.com/ticket/19399
",KrzysiekJ,None,2012-11-30T14:43:17Z,2014-07-20T01:25:55Z
562,contrib/flatpages/tests: override CSRF_FAILURE_VIEW in case someone changed it in settings,"It is possible to change CSRF_FAILURE_VIEW in settings to a custom view, but it can possibly break a couple of tests in flatpages module. The easiest and most obvious solution would be to ensure, that flatpages tests test against correct view.
",teferi,None,2012-11-28T17:03:27Z,2014-06-18T18:39:25Z
561,contrib/flatpages/tests: override CSRF_FAILURE_VIEW in case someone changed it in settings,"It is possible to change CSRF_FAILURE_VIEW in settings to a custom view, but it can possibly break a couple of tests in flatpages module. The easiest and most obvious solution would be to ensure, that flatpages tests test against correct view.
",teferi,None,2012-11-28T16:56:35Z,2014-07-12T08:56:44Z
560,Typo in the 1.5 release notes,,brutasse,None,2012-11-28T13:32:04Z,2014-07-20T01:25:56Z
559,Fixed #19374 -- Typo in docs/ref/models/instances.txt.,"Minor typo in docs (https://code.djangoproject.com/ticket/19374).
",tail,None,2012-11-28T02:59:06Z,2014-07-20T01:25:56Z
558,Fix for ticket 19370 (date filter returns empty string for midnight),"Ticket 19370: https://code.djangoproject.com/ticket/19370

Python considers midnight (`datetime.time(0, 0)`) to be `False`. The date template filter stumbles over this.

When using `{{ midnight|date:""H:i"" }}`, Django returns an empty string.

See ​http://bugs.python.org/issue13936 for discussion about the bug.

This is already fixed in the `|time` filter, but not in the `|date` filter which can also be used to format times.
",dbrgn,None,2012-11-27T14:45:45Z,2014-10-31T14:46:07Z
557,Fixed #19383 - load_class to django utils,"One more helper to django utils.

This method is use by a lot of django-users, and is always re coded for every one, this can help a lot of developers.

https://code.djangoproject.com/ticket/19383#ticket
",ebertti,None,2012-11-26T22:18:40Z,2014-06-14T19:10:14Z
556,Fixed #17673 -- forbidding field shadowing,"This is updated version of a patch written 7 months ago; it applies
clearly.
",chrismedrela,None,2012-11-25T19:59:34Z,2014-06-13T11:22:24Z
555,Fixed #18130 -- Now can set user defined isolation_level ...,"on OPTIONS dictionary for postgresql_psycopg2 backend.

https://code.djangoproject.com/ticket/18130
",niwinz,None,2012-11-24T16:05:31Z,2014-07-20T01:25:57Z
554,Minor spelling error in a docstring,,zedr,None,2012-11-23T16:21:13Z,2014-06-28T15:36:38Z
553,Update django/views/i18n.py,"Use Django global settings instead of local strings
",inocuo,None,2012-11-23T15:17:07Z,2014-07-20T01:25:58Z
552,Small admin password change form fix for pluggable user model,"django.contrib.auth.admin.UserAdmin produces an exception if pluggable User model has no username field:

```
Traceback:
File ""/Users/max/.virtualenvs/pluggable-user/lib/python2.7/site-packages/django/core/handlers/base.py"" in get_response
  116.                         response = callback(request, *callback_args, **callback_kwargs)
File ""/Users/max/.virtualenvs/pluggable-user/lib/python2.7/site-packages/django/utils/decorators.py"" in _wrapped_view
  91.                     response = view_func(request, *args, **kwargs)
File ""/Users/max/.virtualenvs/pluggable-user/lib/python2.7/site-packages/django/views/decorators/cache.py"" in _wrapped_view_func
  89.         response = view_func(request, *args, **kwargs)
File ""/Users/max/.virtualenvs/pluggable-user/lib/python2.7/site-packages/django/contrib/admin/sites.py"" in inner
  202.             return view(request, *args, **kwargs)
File ""/Users/max/.virtualenvs/pluggable-user/lib/python2.7/site-packages/django/views/decorators/debug.py"" in sensitive_post_parameters_wrapper
  69.             return view(request, *args, **kwargs)
File ""/Users/max/.virtualenvs/pluggable-user/lib/python2.7/site-packages/django/contrib/auth/admin.py"" in user_change_password
  136.             'title': _('Change password: %s') % escape(user.username),

Exception Type: AttributeError at /admin/myauth/user/1/password/
Exception Value: 'User' object has no attribute 'username'
```
",max-arnold,None,2012-11-23T14:33:02Z,2014-06-16T06:47:03Z
551,[1.5.X] Fixed typo in docs,"[1.5.X]
https://docs.djangoproject.com/en/dev/releases/1.5-alpha-1/
unliukely -> unlikely
",raffael-sfm,None,2012-11-22T22:00:27Z,2014-06-16T06:47:03Z
550,fixed typo in docs,"https://docs.djangoproject.com/en/dev/releases/1.5-alpha-1/
unliukely -> unlikely
",raffael-sfm,None,2012-11-22T21:58:59Z,2014-07-20T01:25:59Z
549,Changed an if statement in the docs to a slightly cleaner/less confusing variant. ,"The current docs seem less clear to me, I simplified it a bit :)
",WoLpH,None,2012-11-22T21:33:30Z,2014-07-20T01:25:59Z
548,Fixed #9962 - Added a testing tutorial.,"Thank-you Daniele Procida!
",timgraham,None,2012-11-22T20:18:07Z,2014-06-24T09:38:35Z
547,Fix for #19344: add a note telling Windows users to run 'python django-admin.py' instead of 'django-admin.py',,azza-bazoo,None,2012-11-22T15:26:21Z,2014-06-29T07:51:03Z
546,Fixed #19325 -- Make E-Mail Connection Overridable in AdminEmailHandler,"Now with Docs, Tests and Config Imrovements

References: https://code.djangoproject.com/ticket/19325
",hannesstruss,None,2012-11-20T10:34:56Z,2014-06-14T02:30:46Z
545,Fixed #19327 -- Added handling of double login attempts in admin.,"https://code.djangoproject.com/ticket/19327
",KrzysiekJ,None,2012-11-20T01:59:24Z,2014-07-04T22:10:42Z
544,Fix typo in django.template.defaulttags,"Should read ""in which case""
",strongriley,None,2012-11-20T01:32:11Z,2014-07-20T01:26:01Z
543,#19325 Make E-Mail Connection Overridable in AdminEmailHandler,"References: https://code.djangoproject.com/ticket/19325
",hannesstruss,None,2012-11-19T18:15:07Z,2014-07-20T01:26:01Z
542,Fixed #19314 -- contrib.admin send signal on add_row,"When a user clicks add_row after some inlines in admin, a django.signal
is sent with the new form's DOM element. This can be used by widgets
that need to run some javascript when they have been added to the DOM.

https://code.djangoproject.com/ticket/19314
",per42,None,2012-11-19T14:39:21Z,2014-06-16T01:54:39Z
541,Fixes #19320: Ability to leverage cache key generation for cache templatetag,"Commit that fixes ticket #19320 - as outlined in https://code.djangoproject.com/ticket/19320#comment:1
",alexhayes,None,2012-11-19T03:35:59Z,2014-07-01T17:57:27Z
540,Fix #19318: Admin's SimpleListFilter option not being displayed as selected if the lookup's first element is not a string,"This pull request contains the fix for 1.5.x.

The lookup value is coerced to text by using force_text
",sebasmagri,None,2012-11-19T01:27:49Z,2014-06-14T16:45:02Z
539,Fix #19318: Admin's SimpleListFilter option not being displayed as selected if the lookup's first element is not a string,"This pull request contains the fix for 1.4.x.

The lookup value is coerced to unicode by using force_unicode
",sebasmagri,None,2012-11-19T01:27:21Z,2014-06-18T18:39:41Z
538,Coerce lookup to str in admin's SimpleListFilter.choices detection of selected choice.,"When a non-string value is used for the lookup tuple first element in SimpleListFilter.lookups, the comparison with SimpleListFilter.value() will fail, and the option will not be rendered as selected in the admin's changelist.
",sebasmagri,None,2012-11-18T21:33:09Z,2014-06-23T18:32:10Z
537,Update docs/releases/1.5.txt,"Deleted word that used second time
",1st,None,2012-11-18T19:08:57Z,2014-07-20T01:26:03Z
536,Update docs/ref/models/querysets.txt,"Fix typo: replace ""can can"" to ""can""
",1st,None,2012-11-18T16:49:20Z,2014-07-20T01:26:04Z
535,Fixed #17050,"Add `id` attributes to apps and models on the admin dashboard.

Add tests, documentation and a misc release note.
",thiderman,None,2012-11-18T15:51:16Z,2014-07-06T23:09:57Z
534,Fixed ticket #17905,"Changes to admin documentation: Added restriction to view documentation for apps. Users can only see list and direct access documentation view for apps they have permissions to. Updated documentation to reflect this.
",Rizach,None,2012-11-18T14:17:39Z,2014-06-18T18:39:19Z
533,Patch by Justin R. Donnelly for helpers.py,"Integrated read only test for his use case

[ticket: 17911]
",edwtjo,None,2012-11-18T14:12:34Z,2014-07-01T02:50:31Z
532,"Set args, kwargs & request on self before dispatch is called.","Move the setting of args, kwargs & request on self into the nested
`view` function in `as_view` so they are set before dispatch is
called. This allows anyone wishing to put pre-dispatch code in an
overridden `dispatch` and still use the self versions of args, kwargs
and request.
",ghickman,None,2012-11-18T09:25:39Z,2014-07-20T01:26:05Z
531,Fixed #19243 -- Edit GeoDjango Tutorial for consistency and style.,"Rewrote parts of GeoDjango tutorial.
",shepdl,None,2012-11-18T06:25:13Z,2014-07-02T18:01:11Z
530,Fixed #19280 -- Added url template tag syntax note to NoReverseMatch,"Added note to NoReverseMatch to help users figure out that there is a change in the syntax for the url template tag in Django 1.5. Added warning in url template tag documentation to emphasise that the url pattern name needs a quote.
",cvitan,None,2012-11-17T23:14:53Z,2014-06-25T06:49:34Z
529,Fixed #18658,"Improve ModelAdmin.message_user to have an API more similar to
django.contrib.messages.add_message(), allowing setting of debug level and
using extra_tags.

Add tests.
Modify documentation.
",thiderman,None,2012-11-17T22:09:22Z,2014-07-04T09:19:20Z
528,Bug #17428: Admin formfield validation uses form model instead of registered model.,"The model specified in ModelForm.Meta should not limit the
available fields. This solution uses the same modelform factory used by
the ModelAdmin.get_form method, which adds the registered model's
fields.

https://code.djangoproject.com/ticket/17428

This is my first django core contribution, submitted during the Stockholm sprint. Please double check that I don't break anything. I expect it to be rejected ;)
",per42,None,2012-11-17T20:42:23Z,2014-06-16T06:47:00Z
527,Fixed #18722 -- Admin CSS fix,"Updated admin CSS to prevent sorting options in <th> to be overlapped by column name text

https://code.djangoproject.com/ticket/18722
",heyman,None,2012-11-17T19:36:16Z,2014-06-28T13:25:03Z
526,Deleting the correct related object on cascade when deleting a class that inherits a GenericRelation,"a fix for https://code.djangoproject.com/ticket/19149
",nicolaslara,None,2012-11-17T15:42:21Z,2014-06-14T09:59:34Z
525,Fix #18483: HiddenInput validation i18n trouble,"https://code.djangoproject.com/ticket/18483

This patch just makes this string in question translatable. We don't think this needs a test.
",EmilStenstrom,None,2012-11-17T13:50:51Z,2014-06-26T00:41:38Z
524,Fixed 19308. Clarified docs for stringformat filter.,,shabda,None,2012-11-17T13:49:20Z,2014-07-10T06:16:35Z
523,Fixed #19114 - do not return a lazy object in LogEntry.__str__,"We are currently sprinting in Stockholm and are going to fix this bug like this:
Since `__str__` will be called at runtime we don't need to use the lazy version of ugettext. This means no artificial string formatting will need to be added. Patch is coming.
",pelme,None,2012-11-17T13:17:43Z,2014-07-17T13:17:03Z
522,Fix bug [#19277]: LocaleMiddleware permanent redirects,"https://code.djangoproject.com/ticket/19277#comment:3

""We're sprinting (Stockholm) at the moment and plan to solve this bug like this:

Instead of setting a status_code attribute, we would like to use a redirect_class. The reason for this is that HttpResponseRedirectBase has built in protection against unsafe protocol redirections. If we use a HttpResponse object and let the user supply their own status code they will probably miss that security issue, which would be a shame.""

Authors: @pelme and @EmilStenstrom
",EmilStenstrom,None,2012-11-17T12:19:16Z,2014-06-19T20:46:46Z
521,comment_will_be_sent signals sends 400 status code,"Doc cleanup for django.contrib.comments.signals.comment_will_be_sent
If a receiver returns False, an HttpResponse with status code 400
is returned. A test case already exists confirming this behavior.
Updated docs to reflect reality.
",emidln,None,2012-11-16T15:21:48Z,2014-07-04T08:32:11Z
520,"Added examples for using startapp and startproject templates hosted on Github, Bitbucket, etc.","Updated the docs in order to make it more obvious that you can use startapp and startproject templates that you host on Github, Bitbucket, etc.
",epicserve,None,2012-11-16T05:27:40Z,2014-07-20T01:26:08Z
519,"Fixes #19303, ModelAdmin.formfield_overrides is ignored for fields with choices","https://code.djangoproject.com/ticket/19303
",bendavis78,None,2012-11-16T01:53:45Z,2014-06-15T06:10:10Z
518,Update django/contrib/flatpages/forms.py,"Translate before passing in the variables (i.e. close the bracket earlier).
If you translate after passing in the variables the translated value will contain the actual values for 'url' and 'site' and will therefore not be translated.

(I'm not actually using django's flatpages, but I ran into this apparent error when doing a global grep on my own project)
",vanschelven,None,2012-11-15T21:53:35Z,2014-07-20T01:26:09Z
517,Ticket 19239 - Examples for Django Date based CBVs,"Provides: Working, tested examples for all Django Date based CBVs

Issue: git config just isn't working on my laptop. This always happens, even if I follow documentation exactly. Submitting anyway and will get physically with person with git experience to hammer out this issue going forward.
",pydanny,None,2012-11-14T16:20:22Z,2014-06-24T00:41:18Z
516,Correct link to Sentry,"django-sentry is no longer maintained, and sentry is the replacement.
",dcramer,None,2012-11-13T21:52:16Z,2014-07-20T01:26:10Z
515,Document example.com as default site,"Document that a default site, example.com, will get created when
the test database is created.
",lorin,None,2012-11-13T19:00:29Z,2014-07-20T01:26:10Z
514,Typo in comments doc,"Hi,

Don't know if it needs a PR but here it is :)

Thanks
",nippo,None,2012-11-12T21:17:26Z,2014-07-20T01:26:10Z
513,Add tests to illustrate #16572,"Add tests that use select_related to traverse two reverse OneToOne
relationships.

This reproduces the bug described in [ticket 16572](https://code.djangoproject.com/ticket/16572).
",lorin,None,2012-11-12T14:46:48Z,2014-06-13T03:03:13Z
512,use standard IPython startup instead of embed in manage.py shell,"`IPython.embed` has different namespace/initialization behavior, probably none of which is actually intended or desirable.

This changes `manage.py shell` to start a standard IPython shell instead, and works for any IPython ≥ 0.11.

See [Ticket 17078](https://code.djangoproject.com/ticket/17078#comment:8) for reference.
",minrk,None,2012-11-11T22:54:05Z,2014-09-30T12:07:37Z
511,Allow custom User models to use the UserAdmin's change password view.,"This patch allows users to subclass `UserAdmin` and take advantage of the change password view.
",ryankask,None,2012-11-10T15:51:16Z,2014-07-09T00:42:58Z
510,Added login_required_ajax,"If the user is not authenticated
`login_required_ajax` sends back a HTTP Status 401 and no redirection.
To be used with ajax called views
",Glideh,None,2012-11-09T11:20:43Z,2014-07-20T01:26:12Z
509,Provide missing examples from the built-in templatetags and filters #19244,"Examples provided for:
- comment
- templatetag
- escape
- force_escape
- timesince
- timeuntil
",pydanny,None,2012-11-09T00:38:20Z,2014-07-20T01:26:12Z
508,Fixes #19262 by calling super in __getstate__,"Ticket: https://code.djangoproject.com/ticket/19262

SimpleTemplateResponse does not call super so the fixed introduced in https://code.djangoproject.com/ticket/15863 does not take effect. 
",seanbrant,None,2012-11-08T02:08:24Z,2014-06-18T18:29:08Z
507,Minor splitting optimization,"This really doesn't impact performance much, but when getting the last element of a split, it's better to use rsplit with a maxsplit limit.
",dbrgn,None,2012-11-07T16:25:36Z,2014-10-31T14:45:51Z
506,Fixed invalid ipv4 mapped ipv6 addresses in docs,"The Django docs mention the IPv4 mapped IPv6 address `::ffff::192.0.2.1` twice. This IP is malformed though and should be `::ffff:192.0.2.1` instead.

I copy pasted this address for testing purposes, which led to many strange database errors (because Postgres couldn't convert it to an `inet` value). Therefore it would be great if you could merge this soon, so that this ""bug"" doesn't happen again.
",dbrgn,None,2012-11-07T16:16:37Z,2014-10-31T14:45:16Z
505,Allow contenttypes with ID zero,"All contenttypes.ContentTypesTests pass under sqlite.
",woodlee,None,2012-11-06T22:38:15Z,2014-06-14T09:46:47Z
504,Fixed #17642 min_num on admin inline formsets,"Some documentation was missing from the patch file.
",ghost,None,2012-11-06T18:49:09Z,2014-07-20T01:26:14Z
503,Fixed #19161 Missing clean_password in custom user documentation,"Update docs/topics/auth.txt
",ghost,None,2012-11-06T17:44:07Z,2014-07-20T01:26:14Z
502,Class-based LoginView,"Here is a proposal to replace django.contrib.auth.views.login by some class-based view.

The proposed implementation contains:
- a `LoginView` class, which focuses on providing a clean class based on FormView. As an example, it uses FormView's standard ""success_url"" instead of former ""redirect_to"" argument.
- a `BackwardCompatibleLoginView` class, which focuses on backward compatibility. As an example, if ""redirect_to"" is provided, it uses it instead of LoginView's ""success_url"".
- a `login` function, which makes it possible to use `django.contrib.auth.views.login` as before. It is a pre-configured BackwardCompatibleLoginView.
- a `login_decorator` decorator, which is just a shorcut to standard decorators for login views.
",benoitbryon,None,2012-11-06T16:48:39Z,2014-07-08T02:33:28Z
501,Update django/utils/daemonize.py,"Wrong value of umask.
",pkolt,None,2012-11-06T16:26:56Z,2014-07-20T01:26:15Z
500,Update django/contrib/admin/static/admin/js/urlify.js,"Added Arabic to English letters keymap to URLify.js 
",beshrkayali,None,2012-11-06T15:21:42Z,2014-06-27T05:20:37Z
499,17890: added support for extra_context in django.contrib.admin.site.password_change,"This pull request replaces the one at https://github.com/django/django/pull/64.

Rebased my commits to be up to date with master branch.
",stephenmuss,None,2012-11-05T09:34:07Z,2014-06-14T06:13:26Z
498,Fixed django admin inline verbose name (plural/singular). Bug #18549,"https://code.djangoproject.com/ticket/18549
",harph,None,2012-11-05T03:37:49Z,2014-06-13T10:35:00Z
497,Fixed a test failure on postgres caused by multiline error messages,"A fixture test was failing because the regex did not match the error message.
",mrj0,None,2012-11-05T02:09:01Z,2014-07-20T01:26:16Z
496,Demonstrate how to round to integers using floatformat templatetag,"For ticket https://code.djangoproject.com/ticket/19241, this is a simple documentation enhancement.
",pydanny,None,2012-11-05T00:38:26Z,2014-06-18T14:23:58Z
495,Fixed #18949 -- Improve performance of model_to_dict with many-to-many,"Link to trac ticket:
https://code.djangoproject.com/ticket/18949

When calling model_to_dict, improve performance of the generated SQL by
using values_list to determine primary keys of many to many objects. Add
a specific test for this function, test_model_to_dict_many_to_many

Thanks to brian for the original report and suggested fix.
",aisipos,None,2012-11-04T23:45:23Z,2014-06-18T08:57:45Z
494,model_split: Fixed #19236 - fixed error for abstract models with a split method,"Link to ticket:

https://code.djangoproject.com/ticket/19236
",mrj0,None,2012-11-04T21:46:06Z,2014-06-24T10:18:13Z
493,Fixed formatting of get_FOO_display example,"The code snippet for [get_FOO_display](https://docs.djangoproject.com/en/dev/ref/models/instances/#django.db.models.Model.get_FOO_display) contained four extra spaces in front of each line resulting in a malformed code block.
",edavis,None,2012-11-04T18:54:03Z,2014-07-20T01:26:17Z
492,Update django/db/models/sql/compiler.py,"A Fix for UnicodeDecodeError that is raised if a column name contains NON-ASCII-CHARACTERS
I encounted  the error when I wrote the following code.
QuerySet.extra(select={""month"":u'''extract('month' FROM ""NON-ASCII-FIELD-NAME"")'''})
I use Django 1.3 and PostgreSQL 9.1.
",kokardy,None,2012-11-04T16:25:35Z,2014-07-20T01:26:18Z
491,Fixed #19237 - The use of > in single or double quoted attributes in strip_tags,"Updated strip_tags & added tests
",ghost,None,2012-11-04T06:59:34Z,2014-07-20T01:26:18Z
490,Fixed #18210 -- Escaped special characters in reverse prefixes.,"Ensured that special characters passed in to reverse via the
prefix argument are properly escaped so that calls to
django.utils.regex_helpers.normalize and/or string formatting
operations don't result in exceptions.

Thanks to toofishes for the error report.
",gabrielhurley,None,2012-11-03T20:26:33Z,2014-07-02T09:04:35Z
489,Fixed #19230 -- Added PermissionDenied,"Added a paragraph on how to use the PermissionDenied exception to create a 403
response and use handler403.
",keimlink,None,2012-11-03T16:10:29Z,2014-07-16T16:47:08Z
488,Address #16855 - Deprecate depth kwarg on select_related.,"This is the start of a deprecation path for the depth kwarg on select_related. Removing this will allow us to update select_related so it chains properly and have a more similar API to prefetch_related.
",mjtamlyn,None,2012-11-02T15:53:09Z,2014-06-14T15:34:11Z
487,made strip_tags smarter so it can handle '>' in single or double quoted attributes & added additional tests,,ghost,None,2012-11-02T06:43:41Z,2014-07-20T01:26:19Z
486,Addressed #19167 -- testing database documentation,"Advises that database queries in code executed at import-time could pollute tests, and that such code is a bad idea anyway.
",evildmp,None,2012-11-01T14:52:26Z,2014-06-25T00:17:00Z
485,minor fix (+'.' to end of line),,asparagui,None,2012-10-31T20:41:18Z,2014-07-20T01:26:20Z
484,Fixes #5405 -- Support restructured text in model docstrings,"https://code.djangoproject.com/ticket/5405
",tricoder42,None,2012-10-31T20:35:33Z,2014-06-20T15:45:31Z
483,Small documentation patch - /ref/contrib/admin/,"Small display patch to avoid users adding just 'MessageMiddleware', rather than the full string. The rest of the paragraph references the exact string that should be used, so it should be either one or the other.

Also another doc patch to avoid;
'WSGIRequest' object has no attribute 'user'
",foxx,None,2012-10-31T20:10:45Z,2014-06-18T18:00:02Z
482,Extract keyfunc from template cache tag,"This pull request refactors the template cache tag's keyfunc into a new `make_key` function that can be reused to expire a cache key outside the context of a template.
",nosamanuel,None,2012-10-31T19:40:30Z,2014-06-16T06:47:28Z
481,"The timeout variable wasn't defined, which was a little confusing.",,epicserve,None,2012-10-30T23:21:10Z,2014-07-04T15:04:39Z
480,Optimize QuerySet.__contains__ by doing an exists(),"To go alone with the assumption that `QuerySet`s being lazy, it makes
sense to me that when checking ""in"" an unevaluated `QuerySet`, we
should translate that lookup to an `exists()` call to prevent pulling
the whole dataset.

Is there a reason that this behavior is the way it is today? I don't know if I'm missing some specific reason to make ""in"" grab the whole data set and us force people to know to use `exists()` instead. It seems a bit counter intuitive and goes against the idea of everything being lazy.

Also note, that documentation updates would go along with this that aren't included.
",mattrobenolt,None,2012-10-30T22:06:58Z,2014-06-18T11:06:09Z
479,Fixed #17083 -- Allowed sessions to use non-default cache.,,aaugustin,None,2012-10-30T21:00:33Z,2014-06-16T07:43:47Z
478,Remove weird and buggy try/except block,"This is really weird code. I don't know how it has gone unnoticed for so long.

First of all, nothing in that try block could raise `DoesNotExist`. Passing an empty `QuerySet` to `list` returns an empty list with no error. The except block I removed was never being executed. This code only happens to work and appropriately raise `IndexError` because directly indexing the empty list raises the correct error itself.

But the except code itself is bad. `e.args` is a tuple, so passing it as the first argument to `IndexError` casts it as a string and uses it as the message:

```
IndexError: ('list index out of range',)
```

What was meant was probably to to pass either `*e.args` or simply `e.message`.

Briefly exploring the commit history, the code seems to have been like this for a long, long time.

I _could_ change the code so that the message of the `IndexError` is the same as the `DoesNotExist` exception like so:

```
IndexError: <model name> matching query does not exist.
```

As that seems to be what was originally intended. I won't make that decision myself though.

For now, the functionality is unchanged but the code itself is simplified with these nonsensical parts removed.
",fletom,None,2012-10-29T21:28:33Z,2017-11-22T13:51:27Z
477,Added a prefix attribute to django.views.generic.edit.FormMixin.,"Also added a get_prefix() method. Modified get_form_kwargs() method, in order to include the prefix in form kwargs.
",ibustama,None,2012-10-29T18:59:12Z,2014-06-18T17:53:51Z
476,Consistently indent comments in project template,"This makes the settings.py generated by startproject more pep8 compliant as well as making it consistent.
",wraithan,None,2012-10-28T21:47:27Z,2014-07-20T01:26:23Z
475,Fixed #19192 -- DjangoTestSuiteRunner can run with dummy database,"backend.
",JanBednarik,None,2012-10-27T16:32:34Z,2014-06-28T18:06:14Z
474,PEP8 fixes,"Fixed some PEP8 warnings about long lines
",camilonova,None,2012-10-27T16:08:10Z,2014-06-21T16:02:11Z
473,Missing 'h' in word.,,dmishe,None,2012-10-26T12:29:58Z,2014-07-20T01:26:24Z
472,Update docs/releases/1.5.txt,"Fix typo.
",ericflo,None,2012-10-25T20:26:31Z,2014-06-16T02:01:34Z
471,Update AUTHORS,"ignore me
",pholmes-gsa,None,2012-10-25T20:24:40Z,2014-06-12T08:30:22Z
470,Added release notes for Django 1.5 alpha 1.,"Also updated 1.5-proper release notes a bit.
",jacobian,None,2012-10-25T18:38:23Z,2014-07-20T01:26:25Z
469,Remove the redundant colon.,"The second colon is not necessary when using it in the
`.. versionchanged:` markup.
",berkerpeksag,None,2012-10-25T17:13:53Z,2014-07-20T01:26:25Z
468,ticket #19120 readonly_fields docs amended,"Replaces https://github.com/django/django/pull/459 - I squashed two commits there into one.

See https://code.djangoproject.com/ticket/19120 and https://groups.google.com/forum/?fromgroups=#!topic/django-users/1NY9Qsv8Y8A%5B1-25%5D.
",evildmp,None,2012-10-25T16:30:25Z,2014-07-06T03:48:09Z
467,"Add 'page_kwarg' attribute to `MultipleObjectMixin`, removing hardcoded ""page""","At the moment it's awkward to modify the generic views to use a custom name for the 'page' query parameter.

Includes documentation.
",tomchristie,None,2012-10-25T09:36:41Z,2014-07-10T21:46:05Z
466,#19025 Add `form` to formwizard context (includes tests),"References: https://code.djangoproject.com/ticket/19025
",kenthauser,None,2012-10-24T20:14:11Z,2014-07-08T02:33:20Z
465,Fix #19178 create_permissions method fails if the model has a single new permission,"This is a draft fix for the ticket [#19178](https://code.djangoproject.com/ticket/19178#ticket)
",mariocesar,None,2012-10-24T15:50:52Z,2014-06-12T14:54:03Z
464,Fixed #19019 -- logging change in UserAdmin,"When we editing user in UserAdmin and don't modify any fileds in admin_log will added ""Changed password"" whereas should be ""No fields changed"". Also nothing is added in admin_log when we change user password.
",fanatid,None,2012-10-24T15:42:17Z,2014-06-29T15:08:39Z
463,Ticket #19167 testing database documentation,"Explains  why code that attempts to access the database at import time can interfere with tests, and suggest a way of rewriting such code so that it doesn't.

https://code.djangoproject.com/ticket/19167
",evildmp,None,2012-10-24T12:30:34Z,2014-06-15T08:33:23Z
462,"Ungettext-related issues: #19158, #19034","`ungettext` is wrapped in lambdas, because we don't know the number at the time of definition.
",uruz,None,2012-10-23T10:23:38Z,2014-06-17T22:03:17Z
461,Fixed #19164 -- Diffsettings commands fails to force load settings,"Related to ticket [#18545](https://code.djangoproject.com/ticket/19164), it was added an argument to the setup method of the LazySettings object.

The diffsettings command call settings._setup() to force load all settings and then show to the user.

```
$ python manage.py diffsettings --traceback
Traceback (most recent call last):
  File ""/home/mariocesar/Proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/base.py"", line 222, in run_from_argv
    self.execute(*args, **options.__dict__)
  File ""/home/mariocesar/Proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/base.py"", line 252, in execute
    output = self.handle(*args, **options)
  File ""/home/mariocesar/Proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/base.py"", line 382, in handle
    return self.handle_noargs(**options)
  File ""/home/mariocesar/Proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/commands/diffsettings.py"", line 19, in handle_noargs
    settings._setup()
TypeError: _setup() takes exactly 2 arguments (1 given)
```

I fix this by making the name argument optional

```
class LazySettings(LazyObject):
    """"""
    A lazy proxy for either global Django settings or a custom settings object.
    The user can manually configure settings prior to using them. Otherwise,
    Django uses the settings module pointed to by DJANGO_SETTINGS_MODULE.
    """"""
    def _setup(self, name=None):

...
```
",mariocesar,None,2012-10-22T22:43:58Z,2014-07-20T01:26:27Z
460,Fixed #19162 -- Wrong indentation.,,JanBednarik,None,2012-10-22T17:25:55Z,2014-06-20T17:45:12Z
459,readonly_fields documentation amended ticket #19120,"See https://code.djangoproject.com/ticket/19120 and https://groups.google.com/forum/?fromgroups=#!topic/django-users/1NY9Qsv8Y8A%5B1-25%5D.

I expect the example I have provided could be improved though.
",evildmp,None,2012-10-22T16:25:13Z,2014-07-06T03:48:10Z
458,documentation addition for shared hosting w/ fastcgi,"I found that touching the file did not cause my site to refresh after making changes. After much search I found the following article, prompting my addition: http://stackoverflow.com/questions/12316575/django-fcgi-new-edits-to-views-py-not-shown
",L1NT,None,2012-10-22T02:42:20Z,2014-07-20T01:26:28Z
457,Fixed #19142 -- Language codes can include numbers (RFC 3066).,,JanBednarik,None,2012-10-20T23:30:58Z,2014-07-02T18:59:23Z
456,Fixed #19151 -- Added missing methods to EmptyQuerySet.,"Added values() and values_list() methods to EmptyQuerySet.
",JanBednarik,None,2012-10-20T22:22:20Z,2014-07-20T01:26:29Z
455,Fixed #19153 -- Deprecated GzipMiddleware,,claudep,None,2012-10-20T18:23:10Z,2014-07-20T01:26:29Z
454,Centralized tokenization,"Adding centralized tokenization to django.
Merge work done under my GSoC 2012 regarding centralized tokenization system in django.

Merged from [yarko/django](https://github.com/yarko/django)
",crodjer,None,2012-10-20T13:59:55Z,2014-06-14T12:03:29Z
453,Sessions expiry related fixes,"- Sessions expiry check on server side
- Use signing framework for decoding/encoding sessions data
- Bigger session key character set
- Attempt compatibility fixes for moving to siging based session storage

Related issue: [#18194](https://code.djangoproject.com/ticket/18194)
",crodjer,None,2012-10-20T13:47:19Z,2014-06-18T17:57:16Z
452,Sessions cleanup logic in backend,"Cleanup logic should lie in the backend. It should be executed based on the currently set backend.
Also Adds a cleanup functionality for the file and db backend.

Possibly related: [#18978](https://code.djangoproject.com/ticket/18978)
Not exactly a fix for the ticket (My change sets pre date the issue).
",crodjer,None,2012-10-20T13:38:20Z,2014-06-13T16:25:19Z
451,Unlocalized line numbers and ids,"While using USE_L10N, line numbers and IDs are printed as comma separated values
",Kronuz,None,2012-10-20T12:50:52Z,2014-07-03T12:25:55Z
450,Fixed typo in database engine error message,,carlospalol,None,2012-10-19T14:56:59Z,2014-07-20T01:26:31Z
449,"Fixed #15098, silent failure of the profile.","All work was done by tkolar, just creating a pull request.
",vicould,None,2012-10-18T22:02:02Z,2014-07-20T01:26:31Z
448,#19137 - signal child when autoreloader parent is exiting on a signal,"This is a fix for https://code.djangoproject.com/ticket/19137. It
works by setting signal handlers on SIGINT and SIGTERM, which will
send SIGINT to the autoreloaded child, if one has been started, and
then will exit themselves.
",santtu,None,2012-10-17T14:37:34Z,2014-06-14T00:40:42Z
447,Expose the template_string variable outside of the __init__ method.,"Make the template_string variable be a class-wide variable instead of a local variable only accessible inside the **init** method.
",erlenddalen,None,2012-10-16T07:23:22Z,2014-07-20T01:26:32Z
446,Update django/utils/encoding.py,"Since `Exception` inherits from `object`, and `object` has had the `__unicode__` method since Python 2.5, it is impossible to have an Exception subclass that would not have the `__unicode__` method.
",signed0,None,2012-10-15T16:08:13Z,2014-07-20T01:26:32Z
445,Bad pull request,"I messed this pull request up, please ignore.
",signed0,None,2012-10-15T16:00:39Z,2014-07-20T01:26:33Z
444,Allow reversed iteration over SortedDict.,"Iterators cannot be reversed easily without this method.
",mitar,None,2012-10-15T11:16:52Z,2014-06-18T17:53:07Z
443,#6412 -  Check for file permissions for proper error messages,"(https://code.djangoproject.com/ticket/6412)

Rebased previous patch to master and added `isfile()` check.
",lqc,None,2012-10-14T23:00:43Z,2014-07-10T21:46:05Z
442,Fixed #19088 - Always escape % inside blocktrans tag.,,lqc,None,2012-10-13T18:28:23Z,2014-07-20T01:26:34Z
441,Ticket #19125,"https://code.djangoproject.com/ticket/19125
",lqc,None,2012-10-13T14:14:43Z,2014-06-26T11:15:46Z
440,19015,"Automatically add ISO input formats to all localized input formats.
",claudep,None,2012-10-13T12:37:03Z,2014-07-03T03:30:57Z
439,"[PostGIS 2.x] Use postgis template database if available, but check for it just once","original ticket and discussion: https://code.djangoproject.com/ticket/16455

This commit partially reverts https://github.com/django/django/commit/91ef2a5253a50a602523bdda943c32c4cfe719fe
",fcurella,None,2012-10-12T18:57:02Z,2014-06-15T11:00:54Z
438,Fixed #19112 - Reduce maximum parameter count test to 2001.,"Test queries.ConditionalTests.tset_ticket14244 tests the
max_in_list_size() database feature (used by Oracle) to split the SQL 'IN'
clause in to buckets. MSSQL's database driver has a limit of 2100
parameters for the entire query, which fails on this test.
",manfre,None,2012-10-11T19:02:38Z,2014-06-13T16:25:18Z
437,Fix typo in URLs reversing docs,"Just a typo. Nothing more. I don't need to file a ticket for such fix, do I?
",dmedvinsky,None,2012-10-11T08:41:42Z,2014-07-20T01:26:37Z
436,Remove heteronormativity from coding style doc,"I'm proposing replacing the gender example with a non-gendered example in the _Coding style_ doc. The example as written makes an exclusionary implication about gender identification which might be off-putting to potential contributors [who do not identify as male or female](http://en.wikipedia.org/wiki/Genderqueer). Moreover, choices in collecting gender data is often considerably more complicated than demonstrated. A trivial coding _style_ example is probably more clear in this case, in that it demonstrates the style, rather than substance, of expected code.
",ddbeck,None,2012-10-10T23:58:30Z,2014-07-01T17:52:42Z
435,Ticket 19038 - Add support for Python 3.3,"I've updated the 19038 patch to the latest trunk, and removed the dependency on ticket 17758.

This passes the entire test suite, except for those tests which are broken by hash randomization, and the issue tracked in ticket 19039.

You can run the tests (or django itself) with hash randomization turned off in Python 3.3 with this:

```
PYTHONHASHSEED=0 ./runtests.py --settings=test_sqlite
```
",clelland,None,2012-10-10T17:21:06Z,2014-07-20T01:26:38Z
434,Added 'groups' to UserAdmin.filter_horizontal,"Is there some reason it's not there already? 

Our list of groups is very cumbersome to use with the standard widget.

Ticket: Yes, https://code.djangoproject.com/ticket/19105
",evildmp,None,2012-10-10T15:55:05Z,2014-06-13T16:52:27Z
433,Fixed #19096 - More extendable can_return_id_from_insert,"RETURNING is an extension of the SQL standard, which is not implemented
the same by all databases. Allow DatabaseOperations.return_insert_id to
return a None to allow for other 3rd party backends with a different
implementation.
",manfre,None,2012-10-09T21:17:06Z,2014-07-10T00:11:10Z
432,"catalog, formats should not be arrays in JS","catalog and formats are used as dictionaries, i.e. JavaScript objects,
and using arrays when no array-specific properties are used adds
unnecessary confusion
",arild-haugstad,None,2012-10-07T15:00:20Z,2014-07-02T10:32:53Z
431,Fixed #19067 -- clarify and warn of limitation with,"custom user models using field named 'username'

https://code.djangoproject.com/ticket/19067
",ptone,None,2012-10-07T07:34:27Z,2014-06-20T05:31:29Z
430,Fixed 19077 -- clarified interactions between,"custom user models and the default UserAdmin ModelAdmin

https://code.djangoproject.com/ticket/19077
",ptone,None,2012-10-07T06:11:43Z,2014-06-16T16:09:00Z
429,Add Travis CI support,"Travis CI is a hosted continuous integration service for the open source community. It is integrated with GitHub and offers first class support for Python, among many other languages.

The .travis.yml file provided in the PR provides the configuration for Travis, which runs the default sqlite tests against Python 2.6 and 2.7.

Travis should be activated on http://travis-ci.org
",mhaligowski,None,2012-10-06T08:18:07Z,2014-07-20T01:26:40Z
428,Fixed a format-o in docs/topics/db/queries.txt,"It appears that our infamous villain, Significant Whitespace,
has struck again.

In this episode, little Timmy finds himself trapped in a
code well.  He need not despair, however, as Indentation Man
has heard his cries for help and sprung into action.

With his feline helper, Octocat, at his side, Indentation Man
races to the scene, flings open a web-based code editor, and with
terrific aplomb, frees Timmy to be the documentation he always
wanted to be.

Once again Goodness has prevailed.  In the fight for readable
documentation, no stray whitespace will ever be able to
withstand the str.strip()ing nature of....INDENTATION MAN.
",donspaulding,None,2012-10-06T00:21:40Z,2014-07-20T01:26:40Z
427,Don't assume USERNAME_FIELD == 'user' in UserAdmin.,"Never assume that a user object has a field named `username`, use
`USERNAME_FIELD` instead.

fixes https://code.djangoproject.com/ticket/19077
",gavinwahl,None,2012-10-05T19:16:14Z,2014-07-20T01:26:41Z
426,Add `content_type` to `TemplateResponseMixin`,"`content_type` sets the MIME type on the response, like `direct_to_template` used to allow.

https://code.djangoproject.com/ticket/19076
",gavinwahl,None,2012-10-05T18:18:58Z,2014-06-13T10:44:50Z
425,Fixed typo in queryset docs under update method.,"Fixes a typo in the queryset docs that causes what should be a link to the `save()` docs to display as `save()`()`.
",Osmose,None,2012-10-05T15:35:56Z,2014-07-20T01:26:41Z
424,"Fixed #16039 -- syncdb with --database option fails, ","patch provided by @asandroq and Allan Lei, test support by @akaariai
",mhaligowski,None,2012-10-04T22:44:48Z,2014-07-20T01:26:42Z
423,Fixed #16479 -- Made forms use supplied error_class,"Forms generated from formsets were using ErrorList instead of supplied error_class.
Patch with tests from charettes, updated.
",vicould,None,2012-10-04T13:40:21Z,2014-06-16T23:20:16Z
422,Fixed #18996 - Docs on overriden model methods,"See https://code.djangoproject.com/ticket/18996
",tricoder42,None,2012-10-04T12:05:47Z,2014-07-19T03:16:04Z
421,update for Lao language suport,"update for Lao language support lo-LA
",Vienzzion,None,2012-10-04T10:32:08Z,2014-07-20T01:26:43Z
420,Fixed #18978,"Moved cleanup management command to contrib.sessions.

See https://code.djangoproject.com/ticket/18978
",tricoder42,None,2012-10-04T06:08:40Z,2014-06-16T23:20:09Z
419,Replace F() '&' and '|' operators with .bitand() and .bitor(),"Done so that '&' and '|' can be used for their boolean logical operator meaning. Refs #16211
",akaariai,None,2012-10-03T15:57:00Z,2014-06-23T09:34:43Z
418,Fixed #18978 and #18996,"# #18978 Move cleanup management command to contrib.sessions

Cleanup management command (in core.management) cleans only expired
sessions. New command, cleansessions (in django.contrib.sessions) is
created and original cleanup command calls it.

See https://code.djangoproject.com/ticket/18978
# #18978 Docs on overriden model methods

See https://code.djangoproject.com/ticket/18996
",tricoder42,None,2012-10-03T05:19:19Z,2014-06-15T08:38:36Z
417,Fixed #19044 -- Allow get_success_url to access self.object in DeletionMixin,"generic_views tests passes
",0x0badc0de,None,2012-10-02T21:14:45Z,2014-06-26T13:45:11Z
416,Fixed #18447 -- Added support dictionary unwrap to access the elements,"Added some tests for the path of FunkyBob. Without documentation, I'm have not found section for it in the documentation. 
",d1ffuz0r,None,2012-10-01T21:01:30Z,2014-07-20T01:26:44Z
415,Fixed #18972 - Used xrange to chunk data,"This makes the code more `modern` although imo the whole thing could do without checking for length and just do in either case

``` python
for offset in xrange(0, length, max_chunk_size):
    self._write(data[offset:offset+max_chunk_size])
    self._flush()
```
",doda,None,2012-09-30T23:40:34Z,2014-06-16T18:55:12Z
414,Moved adding of loader tags to builtins to django.template.base.,"Now coincides with adding of default tags and filters.

https://code.djangoproject.com/ticket/7377
",melinath,None,2012-09-30T19:32:25Z,2014-06-13T04:11:58Z
413,Pass exclude into save_instance and honor it.,"Added test for field exclusion.

Corrections to test.

[Ticket on trac](https://code.djangoproject.com/ticket/12337)
",melinath,None,2012-09-30T17:15:44Z,2014-06-21T09:01:23Z
412,fix #18998,"When the backend name is stored in a session, it is first checked whether it is still in the settings. If not, the anonymous user is returned.

Written along with the unit test.
",mhaligowski,None,2012-09-30T16:28:56Z,2014-06-26T14:18:52Z
411,named parameters for Oracle (partial fix for #10070),"Yes, I know. It's the last day, and nobody has time to look at it. Mediating factors: 
- It solves part of an accepted ticket
- It's a port of code that has been running for months in our development environment
- I'm not asking the patch to be accepted, just the feature. If there's any problem with the patch, there's plenty of time to fix it before the alpha.

Thanks,
Shai.
",shaib,None,2012-09-30T14:11:27Z,2014-06-19T07:12:24Z
410,Fixed #9279 -- Added option to ignore data for fields that no longer exist,"Added option to ignore data for fields that no longer exist
to loaddata command. Added documentation how use it.
",d1ffuz0r,None,2012-09-30T12:43:03Z,2014-06-12T17:09:29Z
409,Fixed #7936 - Add Last-Modified header to feeds,"The patch adds a Last-Modified header to feeds generated by the syndication app.
",d1ffuz0r,None,2012-09-29T23:16:30Z,2014-07-01T23:23:26Z
408,Fix #12728 - Use proper pk column for postgresql when setting sequences,"PostgreSQL was hard-coded to use the 'id' column when generating SQL to set the sequence on the models of many-to-many relations. This breaks when the relation uses table-based inheritence, where the primary key will not be named 'id'.

This change uses the actual primary key column name.

Fix for https://code.djangoproject.com/ticket/12728
",lorin,None,2012-09-29T14:07:48Z,2014-06-12T10:30:04Z
407,Fixed #7581 -- Add explicit support for streaming responses.,"Refactored `HttpResponse` into `HttpResponseBase`, `HttpResponse` and
`HttpStreamingResponse`.

`HttpResponse` exposes a `content` attribute, which is normalised to a
byte string.

`HttpStreamingResponse` exposes a `streaming_content` attribute, which
is normalised to an iterator that yields byte strings.

Bundled middleware that need to access a response's content now
examines the response (looks for a `content` or `streaming_content`
attribute) to determine it's capabilities.

The `django.views.static.serve` view now returns a streaming response,
which is MUCH faster.

The `conditional_content_removal()` function in `django.http.utils`,
which is applied as a ""response fix"" (compulsory middleware) now
understands streaming responses, and was missing tests that have now
been added.
",mrmachine,None,2012-09-29T04:40:02Z,2014-06-15T05:31:09Z
406,Added the ability to easily change the work factor in configurable hashing algorithms,"This addition allows users to easily change the 'work factor' for bcrypt or 'iterations' for pbkdf2 by setting BCRYPT_ROUNDS and PBKDF2_ITERATIONS, respectively without having to create their own hasher. 

There are checks in place to update the password with the new work factor as required.

Ticket: https://code.djangoproject.com/ticket/19043
",jbuckner,None,2012-09-28T21:03:46Z,2014-07-20T01:26:47Z
405,Ticket 16211 - add comparison operators to F() expressions,"Allow use of ==, !=,  <=,  <, >, >= and ~ operators in F() expression comparisons.

The only problematic case here is the override of __eq__ which will break using F() expressions in dicts or sets, and of course comparing two F() expressions should be done with 'f1 is f2 ' instead of 'f1 == f2'.

Pull create for easier review.
",akaariai,None,2012-09-28T20:32:37Z,2014-06-24T02:24:48Z
404,"Fix #18991 -- Allow permission lookup by ""if perm in perms""","When looking permissions from PermWrapper it is now possible to use
{% if ""someapp.someperm"" in perms %} instead of
{% if perms.someapp.someperm %} allowing for example using variables
for permission lookups.
",akaariai,None,2012-09-28T16:54:24Z,2014-06-14T06:43:29Z
403,Ticket 17758,"This is a complete re-integration of the work that was previously done by lrekucki and tmitchell; I've posted in the trac ticket as well.

I've updated all of the tests for trunk (no 2.5 support, python 3 support through 6, accounting for parts of their branches which have since been merged into trunk, or which are no longer needed). It's much cleaner than the original development line.

All tests pass on Python 2.6.7, 2.7.3, 3.2.3, all with and without hash randomization enabled.
",clelland,None,2012-09-28T08:15:02Z,2014-06-24T23:27:35Z
402,Oracle float exprs,"Add to the previous modification of Oracle backend, a flag in the options that makes it treat numbers as floats/ints unless there's a reason to think they are decimal. Makes things a little faster where relevant (and a little more cross-database-compatible, where expressions are concerned).
",shaib,None,2012-09-27T19:04:07Z,2014-07-20T01:26:49Z
401,Added assertXML[Not]Equal assertions,"This is especially needed to compare XML when hash randomization
is on, as attribute order may vary. Refs #17758.
Thanks Taylor Mitchell for the initial patch.
",claudep,None,2012-09-27T18:28:53Z,2014-12-24T10:46:05Z
400,#18676 - allow fast path for object deletion,"Summary of the feature: we can skip fetching objects to memory if the following conditions apply:
- there are no further cascades (foreign keys other than DO_NOTHING, no GenericRelations)
- there are no delete signals attached for the model
- there are no parents for the object

If this is the case we can do the deletion directly in the DB which results almost always in faster deletions, especially for large deletion batches. See #18676 for a benchmark.
",akaariai,None,2012-09-27T17:06:53Z,2014-07-20T01:26:49Z
399,Fixed #15695 -- Added `ResolverMatch` to the request object.,,apollo13,None,2012-09-27T13:09:38Z,2014-06-25T02:41:24Z
398,Made ModelMultipleChoiceField return an EmptyQuerySet if empty.,"Resolves [#14567](https://code.djangoproject.com/ticket/14567).

This is technically a backwards-incompatible change in some cases. For example, the test cases needed to be updated because an empty queryset isn't equal to an empty list. Is this serious enough that it needs to be mentioned in the release notes?
",melinath,None,2012-09-27T09:22:42Z,2014-06-12T16:07:45Z
397,contrib.auth: createsuperuser should respect USERNAME_FIELD,"Minor oversight from recent swappable auth.User commit. (Auth management command tests are skipped for custom users.)

Thanks to everyone who worked on custom User models--otherwise working great so far!
",dvelyk,None,2012-09-27T07:29:59Z,2014-07-20T01:26:50Z
396,Fixed #19029 -- Prevent subqueries with a cached QuerySet,"See: https://code.djangoproject.com/ticket/19029
",mattrobenolt,None,2012-09-26T11:46:21Z,2014-06-13T08:00:50Z
395,Fixed #19028 -- Support GeoJSON output with SpatiaLite 3.0+,,bkg,None,2012-09-26T06:20:09Z,2014-06-30T11:04:12Z
394,Fix little typo in cache documentation,"Thanks!
",yohanboniface,None,2012-09-25T15:12:46Z,2014-07-09T20:45:37Z
393,"Fixes for Oracle: Output conversion, ""%"" in names","Two fixes for the Oracle backend:
1. Support database object names including percent signs. Without this, the backend cannot be used to run the Django test suite, as it fails to create the test database.
2. Use a more efficient method for converting values, esp. numbers, on the way out (code mostly by Ian Kelly, with a small but imported fix after comment by Anssi Kääriäinen)
",shaib,None,2012-09-25T07:16:16Z,2014-07-20T01:26:52Z
392,fixing auth basic tests,"Testing method User.objects.create_user() without password param.
",viniciuscainelli,None,2012-09-25T03:53:02Z,2014-07-10T11:05:27Z
391,Fix docs for context_processors.auth,"Copy said it created three context variables, but only lists two. (""messages"" was removed.)
",reverie,None,2012-09-25T00:15:24Z,2014-07-03T09:11:51Z
390,Fix: slovenian l10n does not work with hidden field,"Fix [#19015](https://code.djangoproject.com/ticket/19015#ticket) - Slovenian L10N - date field validation does not work for hidden fields
",bmihelac,None,2012-09-24T12:28:54Z,2014-07-20T01:26:52Z
389,add a mod_wsgi authentication handler,"https://code.djangoproject.com/ticket/10809
",ptone,None,2012-09-24T05:58:27Z,2014-06-22T03:16:05Z
388,Predicate functionality for Q objects,"https://code.djangoproject.com/ticket/18931
",ptone,None,2012-09-22T19:47:39Z,2017-08-07T17:45:41Z
387,Extra colon in deprecation doc,,jMyles,None,2012-09-20T20:47:35Z,2014-07-20T01:26:53Z
386,Add documentation for get_caches function,"This is just a quick documentation patch for ticket #15629
",clelland,None,2012-09-20T19:15:09Z,2014-07-02T15:16:20Z
385,Fixed #18985 -- Restore DeprecationWarning output,"This fixes the issue mentioned in [#18985](https://code.djangoproject.com/ticket/18985).

It will cause projects created with startproject to include a `warnings.simplefilter` to restore DeprecationWarning and documents the fact that this is required on Python 2.7+.
",dstufft,None,2012-09-18T22:32:04Z,2014-06-17T23:16:13Z
384,Rolled back managed transactions before flushing fixtures.,,jdunck,None,2012-09-18T21:50:20Z,2014-06-17T07:04:06Z
383,Fix #16865 get_or_create should only set _for_write when it's actually d...,"...oing a create action.

This makes sure that the initial .get() will be able to use slave databases.
If there is replication lag it will fail when it tries to create the object on the master
and will still fetch the object. This is a trait off between extra selects when there is
no replication lag and extra transactions and rollback when there is replication lag.

Specially when some form of database pinning is in place this will help to not put all
the SELECT queries on the master. When somewhere in the code get_or_create is used.
",trbs,None,2012-09-18T21:16:32Z,2014-07-20T01:26:55Z
382,Fixes #18983: staticfiles returns [None] when custom finders don't find a file,"Includes a new test case for this behavior.

Ticket: https://code.djangoproject.com/ticket/18983
",paulswartz,None,2012-09-18T18:33:25Z,2014-07-20T01:26:55Z
381,#18980 - Fixed assertContains to force  to string.,"It used to prior to d1452f60974da6f0e54ff9ad7a03d2c115675d10 (which was part of the py3 work).
",jdunck,None,2012-09-18T17:48:18Z,2014-07-20T01:26:55Z
380,Fixed #18982 -- BaseTemporalField handles TypeError from strptime,"When BaseTemporalField tries to clean a value with NUL bytes, strptime
raises a TypeError. Added an exception handler to make this a
ValidationError instead.

Ref https://code.djangoproject.com/ticket/18982
",gavinwahl,None,2012-09-18T17:39:22Z,2014-07-20T01:26:56Z
379,Using Unicode.translate to speed up html and js escaping,"This is a refactored version of pull request 53:

https://github.com/django/django/pull/53

It works in Python 2 & 3, and passes all tests.
",etianen,None,2012-09-18T10:31:08Z,2014-07-20T01:26:56Z
378,Patch #16774 -- Views can raise DoesNotResolve to make the URL resolver continue resolving.,"This pull request allows views to raise urlresolvers.DoesNotResolve to make the URL resolver to ignore the view and keep resolving the URL. 

https://code.djangoproject.com/ticket/16774
https://groups.google.com/forum/#!topic/django-developers/BAk5pGb7zE8/discussion
",meric,None,2012-09-18T09:00:05Z,2014-09-25T18:23:50Z
377,Fixed #18974 -- Deprecated models.permalink decorator,"This Pull Request deprecates the models.permalink decorator as per [#18974](https://code.djangoproject.com/ticket/18974).

It also includes updates to the documentation to take note of the deprecation and to point users towards using the reverse method instead.
",dstufft,None,2012-09-18T07:18:27Z,2014-07-20T01:26:57Z
376,Schema alteration,"To accompany the mailing list thread here: https://groups.google.com/forum/?fromgroups=#!topic/django-developers/esCFLLXwIOY
",andrewgodwin,None,2012-09-17T23:10:33Z,2014-06-12T13:04:59Z
375,versionadded for next/previous_year generic-date-based views doc,,collinanderson,None,2012-09-17T15:23:09Z,2014-07-20T01:26:57Z
374,Fixed #18968 -- Only use separate GML regex for SpatiaLite < 3.0,"https://code.djangoproject.com/ticket/18968
",bkg,None,2012-09-17T05:10:49Z,2014-07-20T01:26:58Z
373,Ticket #18967: message/rfc822 attachments should not be base64 encoded,"https://code.djangoproject.com/ticket/18967
",micolous,None,2012-09-17T02:33:22Z,2014-06-18T11:02:55Z
372,Clearer wording for defer docs,,ptone,None,2012-09-15T21:25:31Z,2014-07-20T01:26:58Z
371,Fixes docs typo,,camilonova,None,2012-09-15T20:46:28Z,2014-07-20T01:26:59Z
370,Custom user models (#3011),,jacobian,None,2012-09-15T15:49:10Z,2014-06-12T07:41:59Z
369,don't make uploaded files executable by default,"See the previous pull request #326
",lotheac,None,2012-09-12T14:03:02Z,2014-06-13T06:16:51Z
368,fixed bug#6681: RST default reference role tries docutils' default role ...,"Fixes bug#6681 as described in https://code.djangoproject.com/ticket/6681

Docutils establish a ''DEFAULT_INTERPRETED_ROLE'' which is overriden by django with **cmsreference** role.

Django's role is intended to work on admin docs, but it's not suitable for general purpose as it needs some keys in ''inliner.document.settings''.
",jgsogo,None,2012-09-11T08:59:59Z,2014-06-17T04:50:28Z
367,Lithuanian language date and time localization,"Lithuanian language date and time format localization, based on Lithuanian language style guidelines published by Microsoft.

Note: Lithuanian language uses alt. month names in most date formats. Correct translations are yet to be merged from Transifex project.
",frgtn,None,2012-09-10T20:46:17Z,2014-07-20T01:27:00Z
366,fixed rfc comment typo in middleware/csrf.py,,collinanderson,None,2012-09-10T15:11:31Z,2014-07-10T06:09:07Z
365,Fixed #17869 - security improvement to RemoteUserMiddleware,"- RemoteUserMiddleware forces logout when REMOTE_USER header disappears
  during a same browser session.
- Added a test and documentation for the 1.5 release.

Notes :
- Target version is 1.5
- Originally fixed during DjangoCon sprints in Zurich. I made a new commit based on today's fork (Sept 9, 2012)
- Test with this command : ./runtests.py --settings=test_sqlite auth
- Quoting an email from Paul McMillan : ""this is a minor security fix so it should be backported to 1.4""
",ghost,None,2012-09-09T20:47:10Z,2014-07-20T01:27:01Z
364,Fixes #18933. Fixes code example in docstring.,"Makes code example of silent keyword docstring in cycle templatetag
method the same as in the documentation.
",martey,None,2012-09-09T04:42:17Z,2014-07-20T01:27:01Z
363,Ticket 18657: Fix inconsistent DB names in router example.,"This rewrites the entire example to use the same DB names throughout,
and also is hopefully a bit more sensibly described. Additionally, the
missing import of the random module for choosing a read slave is
included in the example now.
",ubernostrum,None,2012-09-08T20:04:08Z,2014-07-20T01:27:01Z
362,Fixed #16218 -- Order of date_list in dates CBVs.,,aaugustin,None,2012-09-08T18:55:27Z,2014-07-20T01:27:02Z
361,Fixed a typo in the Python 3 compatibility docs.,,koniiiik,None,2012-09-08T16:59:01Z,2014-07-20T01:27:02Z
360,Ticket #12836 - Added a test to assure permalink wraps method attributes,"The fix diff at the top of the ticket was already applied: https://code.djangoproject.com/ticket/12836

The test diff provided further down was a doc test, and was not applied or was removed along with the other doc tests.

This pull request includes a test that assures the permalink decorator passes on attributes attached to the function it wraps. The test fails if the @wraps decorator is removed from permalink, and succeeds otherwise.
",calebsmith,None,2012-09-08T16:57:04Z,2014-07-20T01:27:03Z
359,"Merge pull request, modelform docs, closes #18832","fixing docs for modelforms: using a subset of fields on the form, ticket #18832
",nmartini,None,2012-09-08T16:35:49Z,2014-07-20T01:27:03Z
358,Ticket 18800: Template cannot format integers bigger than maximum float,"https://code.djangoproject.com/ticket/18800

This pull includes a fixed version of the original patch, plus tests which fail before patching and pass afterward.
",brad,None,2012-09-08T16:32:33Z,2014-06-16T07:48:07Z
357,"Remove Admin's swallowing of AttributeError (#16655, #18593, #18747)","During the new-admin changes, catching of AttributeError was added to the
admin.  This patch removes that as it's no longer possible to add a value to
a ModelAdmin that is not available.  Adding an attribute that can not be
called causes an ImproperlyConfigured exception to be raised.
",tswicegood,None,2012-09-08T15:20:28Z,2014-06-17T04:46:26Z
356,Ticket 18903: GBPhoneNumberField,"This pull adds support for fields representing UK phone numbers, as well as tests and documentation.
",brad,None,2012-09-08T14:35:17Z,2014-06-13T04:00:10Z
355,Deprecate markup 18054,"updates pull 170
",ptone,None,2012-09-08T14:22:31Z,2014-07-14T02:10:13Z
354,Fixed #18928. Tightened language in docs/README.,,shabda,None,2012-09-08T05:45:11Z,2014-06-17T22:29:44Z
353,18887,,adamdeprince,None,2012-09-07T22:04:47Z,2014-07-12T09:18:55Z
352,Patch for ticket 18887,"This adds a setting that lets users ignore numpy in geos even if it's available, so people can be in control of the return types from certain operations (like calling array on a LineString)
",peterlandry,None,2012-09-07T21:21:35Z,2014-07-20T01:27:05Z
351,remove unused import in tutorial 4  addition to #18915 (closed),"After submitting ticket #18915, I noticed 2 additional occurrences of the issue.
",eehrhardt,None,2012-09-07T20:27:28Z,2014-07-20T01:27:05Z
350,Fixed #18927 - Fix bulk_create tests when not has_bulk_insert,"Skipped some tests when not has_bulk_insert and others only skip the asserts that depend on the explicit number of queries.
",manfre,None,2012-09-07T20:15:36Z,2014-07-03T23:29:54Z
349,"Merge pull request: all DeprecationWarnings now stacklevel 2.  Closes #18127, #18780","all DeprecationWarning now stacklevel 2.  tickets #18127, #18780
",nmartini,None,2012-09-07T20:10:58Z,2014-06-13T10:44:59Z
348,Fix for #14317 (number formatting issues),"Fix based off the diff in https://code.djangoproject.com/ticket/14317
Please review @akaariai.
",rvarshney,None,2012-09-07T19:44:57Z,2014-07-03T18:03:04Z
347,Fixed #13142 -- Added support for SSL connections in core.mail.backends....,"...smtp

Note: SVN-based patch originally provided by serg.partizan / partizan
and Wojciech Banaś in Trac (refer to https://code.djangoproject.com/ticket/13142).

This commit includes the work done by those previous, with the following
changes:
- If use_ssl is True, or settings.EMAIL_USE_SSL is True, but the current Python
  version is less than 2.6, use_ssl is _not_ internally changed to False.  Nor
  does the SMTP backend code raise an exception.  We don't need to, because Django 1.5
  is dropping support for Python prior to 2.6.
- This update provides the ability to configure the keyfile and certfile
  to use with SMTP_SSL.
- Documentation is updated to specify that this feature is new in 1.5.
",jwmayfield,None,2012-09-07T19:37:58Z,2014-06-17T08:32:58Z
346,Ticket #15697 - Call get_models() with include_auto_created=True,"When we call get_models() without the include_auto_created=True
argument, we will not display indexes that are auto-created by django.
It will only show the indexes that are explicitly defined by the user.
",ashchristopher,None,2012-09-07T19:25:41Z,2014-06-17T22:29:46Z
345,"Merge pull request improved docs for set_language redirect view, ticket #18365","improved docs for set_language redirect view, ticket #18365
",nmartini,None,2012-09-07T19:11:59Z,2014-07-20T01:27:07Z
344,applying outdated patch files and wording change for help,"https://code.djangoproject.com/ticket/16330#propertyform
",bumyong,None,2012-09-07T18:41:45Z,2014-07-12T04:42:49Z
343,Ensure that LOGIN_URL can take named URLs.,"Updated the patch on ticket 15552 to work with the latest trunk, and incorporated the comments by jezdez in changing the code's location.
",ericflo,None,2012-09-07T17:58:03Z,2014-07-13T03:26:47Z
342,[py3] Updated install docs to reflect Py 3 status.,,aaugustin,None,2012-09-07T17:54:49Z,2014-06-16T07:48:09Z
341,Merge pull request for ticket #18915 patch,"remove unused import and update associated docs text in decoupling URLS tutorial, closes #18915
",nmartini,None,2012-09-07T17:13:35Z,2014-07-20T01:27:09Z
340,"specify default input formats with USE_L10N=False, closes #18490",,dlo,None,2012-09-07T16:57:47Z,2014-06-28T13:25:47Z
339,Fixed #18916 -- Allowed non-ASCII headers.,,aaugustin,None,2012-09-07T16:52:05Z,2014-07-20T01:27:09Z
338,Fixed #15566. Clarified behaviour of auto_now with .update.,,shabda,None,2012-09-07T16:44:56Z,2014-06-17T11:25:58Z
337,"allow admins to filter users by group, closes #16835",,dlo,None,2012-09-07T16:43:40Z,2014-07-02T10:32:52Z
336,"remove unused import in decoupling URLs tutorial, closes #18915","The `include` function isn't used in polls/urls.py.
",dlo,None,2012-09-07T15:50:33Z,2014-07-17T00:16:27Z
335,"specify any orderable field can be specified in get_latest_by, closes #18875",,dlo,None,2012-09-07T15:36:09Z,2014-07-06T07:18:15Z
334,"wrap long words in field labels on admin forms, closes #18755","Otherwise, words overlap into the fields themselves, which makes the labels unreadable.
",dlo,None,2012-09-07T15:19:43Z,2014-06-16T17:25:47Z
333,"clarify clean_<field> docs, ticket #18917","Clarify that the ""cleaned data"" returned is a single value from the cleaned_data dict.
",brad,None,2012-09-07T14:45:28Z,2014-07-01T17:56:24Z
332,Fix for #18925 - Exception information should be localized and passed to got_request_exception signal handlers,"See [ticket](https://code.djangoproject.com/ticket/18925) for explanation.
",obeattie,None,2012-09-07T13:07:39Z,2014-06-15T19:00:25Z
331,Ticket #17324 - Improve security docs with better CSRF explanation,"See https://code.djangoproject.com/ticket/17324

I added Paul's notes from the Django developers thread into the security documentation as well as a specific recommendation about HSTS in the SSL section.
",davidfischer,None,2012-09-06T20:16:16Z,2014-07-20T01:27:12Z
330,Fix unittests that use OS specific linesep.,"Many tests in regressiontests.templates fail on Windows because they are expecting a linux \n.
",manfre,None,2012-09-06T19:03:50Z,2014-07-03T09:11:18Z
329,Ticket 18910 - added RUPhoneNumberField to localflavor,,kix,None,2012-09-06T12:23:49Z,2017-03-24T08:13:19Z
328,Ticket #18914 - Object tool customization,"This branch adds the ability to easily customize object tools within the admin in much the same way that actions can be added. It solves the use case where it would be nice to have an admin tool (such as Import Spreadsheet) but doesn't require a user to subclass ModelAdmin and maintain additional templates in their project.
",mcrute,None,2012-09-06T05:09:56Z,2014-06-26T17:06:09Z
327,Start refactoring admin JavaScript.,"This is an incomplete pull request that starts the process of
refactoring the Django Admin's JavaScript.  It introduces the
django.admin ""namespace.""

Tabular inlines still need to be refactored.  This isn't meant to
enhance functionality, just streamline the process.  Actual changes to
the code can come later.
",tswicegood,None,2012-09-05T20:34:12Z,2014-07-20T01:27:13Z
326,don't make uploaded files executable by default,"Apparently Django creates uploaded files with the exec bit set by default, since it uses os.open() without specifying mode and Python defaults mode to 0777 (it must be specified for the open(2) syscall if O_CREAT is given). This is easily fixed by setting os.open()'s mode argument to 0666 (it will still be masked by umask, and user specified mode will be set by chmod afterwards if necessary).
",lotheac,None,2012-09-05T15:10:40Z,2014-07-20T01:27:13Z
325,Fixed #18905 - Changed to new url for Djangopeople,,shabda,None,2012-09-05T10:57:05Z,2014-06-17T22:29:49Z
324,"[#18903] Outline for validating GB telephone numbers. """"HELP NEEDED""""","Very detailed RegEx patterns and outline code that should allow someone to easily build a very comprehensive GB telephone number validation routine for django forms input.

These (RegEx) patterns have been extensively tested elsewhere and are 100% correct.

See also ticket 18903 at https://code.djangoproject.com/ticket/18903

I NEED SOME HELP TO FINISH BUILDING THIS FUNCTIONALITY.
",g1smd,None,2012-09-05T08:37:26Z,2014-06-18T16:35:46Z
323,Fixed #8149 -- Use universal line terminators when iterating `File` obje...,"...cts line-by-line.
",mrmachine,None,2012-09-04T23:41:39Z,2014-06-12T06:14:00Z
322,Ticket #18924. Made test.Client.logout send user_logged_out signal.,,awsum,None,2012-09-04T20:17:31Z,2014-06-15T04:49:18Z
321,Remove unquote from the url method in CachedFilesMixin,"The unquote in the end of the url method, might change the url that is generated from the storage.
This, for instance, breaks S3BotoStorage, since the Signature query parameter becomes invalid after unquoting.
",idanz,None,2012-09-04T11:05:45Z,2014-08-18T18:53:38Z
320,Fixed #8149 -- Use universal line terminators when iterating `File` obje...,"...cts line-by-line.
",mrmachine,None,2012-09-04T08:14:43Z,2014-07-01T10:10:17Z
319,Adding the Django Discovery TestRunner #17365,"This pull request adds the unittest2 test discovery to Django while specifying location for look up in `settings.py`

That being said, I have only updated the 1.5.txt release until the code is reviewed. Once that is complete I will update the testing documentation and what other documentation that needs to be updated as per discussion had here. 

Also let me know if I can improve the testing. I think I have tested the discovery test runner well but if it can be improved to cover edge cases let me know. 

Many thanks to @freakboy3742 for his guidance. 

https://code.djangoproject.com/ticket/17365 is the attached ticket
",myusuf3,None,2012-09-04T00:14:06Z,2014-06-18T11:55:10Z
318,Small doc change: clarify day and month,"Make the day and month different numbers, so it's easy to distinguish which argument is the month and which is the day.
",Matt-Deacalion,None,2012-09-03T13:24:28Z,2014-07-20T01:27:16Z
317,Custom QuerySets without creating custom Manager,"In the official documentation written:

> You can override a Manager's base QuerySet by overriding the Manager.get_query_set() method. get_query_set() should return a QuerySet with the properties you require.

But it is so strange to override Manager just for changing QuerySet. Hardcoding classnames into Manager class seems non-pythonic way, but I expect there is some reason for such architecture. But I couldn't find this reason.

I'm offering this patch to make Manager more flexible. Small demonstration in unittest:

``` python
class User(models.Model):
    firstname = models.CharField(max_length=10)
    middlename = models.CharField(max_length=10)
    lastname = models.CharField(max_length=10)

    objects = models.Manager(QuerySetClass=UserQuerySet) # Custom QuerySet in old Manager
```

This is useful for appending QuerySet with methods like `to_json`, which returns list of dicts.
",anton-ryzhov,None,2012-09-02T20:50:33Z,2014-06-19T14:16:17Z
316,[DEPRECATED] GB telephone numbers. SEE ISSUE #324 => 356 INSTEAD.,"Continued in issue #324.
",g1smd,None,2012-09-02T11:46:10Z,2014-06-17T02:42:02Z
315,Clarify some of the password reset docs,"Some of the wording was copied from the change password section. Updated
the text to clarify that the we are talking about password resets.
",streeter,None,2012-08-31T23:15:11Z,2014-07-20T01:27:17Z
314,Clarify usage of as_view kwargs for setting arguments on class based views,"The current documentation could lead to a new Python developer thinking that passing a keyword argument into as_view will result in an attribute being specified and set to the correct value. The current error message doesn't provide any additional information that might help the user towards a solution.
",dmclain,None,2012-08-31T18:52:58Z,2014-06-19T08:01:24Z
313,Fix comment typo,"This is simply a comment typo fix. Nothing more.
",davidfischer,None,2012-08-30T00:13:08Z,2014-07-20T01:27:17Z
312,python3 docs: slicing bytestrings is good,"Small technicality, not sure the best way to phrase this, but slicing bytestrings is safe and recommended.
",collinanderson,None,2012-08-29T19:27:01Z,2014-07-20T01:27:18Z
311,Indexing bytes is the problem not slicing.,,benjaminp,None,2012-08-29T00:48:00Z,2014-07-20T01:27:18Z
310,fix documentation testing of Selenium WebDriverWait ,"According to the documentation of Selenium, WebDriverWait class has no timeout parameter and using the code fails.

http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/support/ui/FluentWait.html#until%28com.google.common.base.Predicate%29
",juanpex,None,2012-08-28T00:05:06Z,2014-07-20T01:27:18Z
309,Code comment fix.,,mitar,None,2012-08-26T21:28:58Z,2014-07-20T01:27:19Z
308,"Bigint AutoField (fixes #56, #13774)","Alternative approach to fix ticket 56.
Based on discussion https://github.com/django/django/pull/49
This approach doesn't change AutoField behavior. Only those who need extended int range may use it.
It keeps values ranges consistent between databases. Also it works nice with related fields.
Now with tests.
",pzinovkin,None,2012-08-26T19:01:44Z,2014-06-28T13:20:31Z
307,Define less than or equal character for latex docs,"Stops this error:

! Package inputenc Error: Unicode char \u8:≤ not set up for use with LaTeX.
",bnomis,None,2012-08-26T09:20:58Z,2014-07-20T01:27:19Z
306,Fixed #17156 -- Added documentation examples for exists().,"Added two examples for exists() in the queryset reference documentation,
also added an additional callout to exists() in the ""When Querysets are
evaluated"" section for the first list element (i.e. for x in queryset).
",mrmagooey,None,2012-08-26T04:35:49Z,2014-07-03T04:03:07Z
305,"Fixed #17922 -- Added default ""required"" css classes to form labels","Fixed tests for hanson2010 path. 
",d1ffuz0r,None,2012-08-25T21:03:18Z,2014-06-27T05:19:58Z
304,#18855: persist the runserver socket through reloads,"Using livereload (livereload.com) with Django becomes painful when
updating a file immediately results in reloading the webpage AND
the Django dev server.  There is a short period of time when the dev
server is not listening as it is busy reloading (frequently hit
when using livereload).

This is exacerabated with larger projects as reload time is longer.
",dlamotte,None,2012-08-25T15:55:35Z,2014-07-07T06:56:49Z
303,Auto-import support for models and other objects in shell,"Good morning!

This change adds the ability to setup pre-importing of models or other usefuls in the Django admin shell. I think it's something loads of folks would enjoy, and adding it yourself is actually kind of a pain since as far as I can tell it involves copy-pasting the entire shell.py contents. The core change adds support for listing thing you'd like to auto-import in `settings`, as well as defining a method in the shell command that's easily override-able if folks want to do even nuttier stuff.

I figured I'd start with a pull request instead of an email discussion to keep things concrete. First, here's how I'm proposing this would work:

(settings.py)

``` python
         SHELL_IMPORTS_ALL_MODELS = True
         SHELL_IMPORTS = [
            'django.db.models.Q',
            'haystack.query.SearchQuerySet'
         ]
```

Defaults are to import nothing, existing projects ought to be unaffected. The above would do what you'd imagine it doing. Each of the application's models, `Q`, and `SearchQuerySet` would all be imported and auto-completable.

Super notably, this pull request isn't complete. I mean it as a starting point for getting general consensus before moving forward. Things (that I know of) that deserve addressing:
- Unit tests  (happy to write them, but don't want to unless there's a general sense that the change has promise)
- Docs (same)
- What to do (if anything) with collisions. For instance if `SHELL_IMPORTS_ALL_MODELS=True` and more than one app has a model with the same name. I'm imagining logging a warning but haven't built that support yet.

Anyways, hope it's not crazy or over-discussed already. Thanks in advance for the consideration!
",phill-tornroth,None,2012-08-25T12:06:03Z,2014-06-24T19:01:18Z
302,persist a socket across reloads of the dev server,"Using livereload (livereload.com) with Django becomes painful when
updating a file immediately results in reloading the webpage AND
the Django dev server.  There is a short period of time when the dev
server is not listening as it is busy reloading (frequently hit
when using livereload).

This is exacerbated with larger projects as reload time is longer.

This has been an itch I've wanted to scratch for a long time.  Hopefully, this will be accepted so others can benefit from it also.  Helps plenty even with users hitting Reload manually on their browser.

(PS: I've used Django for a while, but never contributed.  I've attempted to read up on contributing on the site, but I couldn't find much about ""Pull Requests"" and if I should create a ticket first or not, so please be gentle)
",dlamotte,None,2012-08-25T03:11:19Z,2014-07-20T01:27:21Z
301,Fixed typo in docs,,carlospalol,None,2012-08-23T14:48:46Z,2014-07-10T10:54:49Z
300,Fixed #18837: [py3] Double import of six in django.forms.models,"Just a tiny cleanup
",uruz,None,2012-08-23T07:32:13Z,2014-07-04T08:35:15Z
299,avoid unnecessary query for on_delete=DO_NOTHING,"When deleting objects in the admin, there is no need to run queries on related ForeignKey(on_delete=models.DO_NOTHING).
",collinanderson,None,2012-08-23T02:39:45Z,2014-06-26T05:45:09Z
298,Fixed #18091 -- Non-ASCII templates break `django-admin.py startproject --template=TEMPLATE`,"Improved code based on akaihola and clo74, broken tests fixed.

Ticket: https://code.djangoproject.com/ticket/18091#comment:5 (with failed tests)
",tricoder42,None,2012-08-22T20:22:15Z,2014-06-28T03:49:12Z
297,Fixed #17069 -- Added log filter example to docs.,"Added an example of filtering admin error emails (to exclude
UnreadablePostErrors) to the docs.
",mjjohnson,None,2012-08-21T13:12:56Z,2014-06-26T13:00:49Z
296,Fix for #6702: ModelForm now checks instance on __init__,"Hi there,

Attached is a patch and testcase that fixes https://code.djangoproject.com/ticket/6702 . Let me know if there's anything else that needs changing.

Best,
Selwin
",selwin,None,2012-08-20T10:52:04Z,2014-06-13T01:17:46Z
295,Fixed #18798: Redefinition of test test_get_language_from_path in tests.regressiontests.i18n.tests,"Two tests had same signature, so only last was executed.
",uruz,None,2012-08-19T22:49:25Z,2014-07-20T01:27:23Z
294,Fixed #18767: Admin's calendar for datetime fields doesn't show right values with russian and some other locales,"Solution includes incomplete implementation of strptime. I've included test into commit.
",uruz,None,2012-08-19T19:09:26Z,2014-06-12T05:36:35Z
293,Fixed indentation in the Python3 docs,,mjtamlyn,None,2012-08-19T18:06:06Z,2014-07-08T02:33:19Z
292,Description of MEDIA_ROOT setting in docs and generated settings.py are wildly different,"It's already confusing for newbies that the MEDIA_ROOT is NOT where you put your static media and the current description in the documentation doesn't help. 

The description in the auto-generated settings.py is spot on though, which is what I used to replace the existing description for MEDIA_ROOT in the docs.
",ryan-blunden,None,2012-08-19T06:03:49Z,2014-07-20T01:27:24Z
291,Fixed #18793: Duplicate test test_head_no_get in generic_views.base,"That test is duplicate, both signature and code. Code was not pure identical, but did same thing.
",uruz,None,2012-08-18T21:07:24Z,2014-07-20T01:27:24Z
290,Fixes ticket #18728,"Fixes parsing of ISO 8601 dates containing no colon in the time zone
offset. Ticket 18728 contains a simple bit of code demonstrating correctness.
",thaxter,None,2012-08-18T18:10:59Z,2014-07-16T08:12:53Z
289,Fixed bug in 212b982 -- Removed duplicate code in removetags,,mjtamlyn,None,2012-08-18T16:08:17Z,2014-07-20T01:27:25Z
288,Fixed #3542 -- Add support for changing granularity on ArchiveView.,"Resolving the concept from a very old ticket in a more class-based-view 
manner.
",mjtamlyn,None,2012-08-18T15:57:56Z,2014-07-20T01:27:25Z
287,Fixed #18791: [py3] Double import of six in django.forms.widgets,"Just a tiny improvement
",uruz,None,2012-08-18T15:21:44Z,2014-07-04T08:32:48Z
286,Fixed #16744 -- Class based view should have the view object in the context,"Updated the most recent patch from @claudep to apply again and updated the
documentation location.
",mjtamlyn,None,2012-08-18T13:52:16Z,2014-07-20T01:27:26Z
285,Fixed #14516 -- Extract methods from removetags and slugify template filters,"Patch by @jphalip updated to apply, documentation and release notes added.

I've documented strip_tags as well as remove_tags as the difference between
the two wouldn't be immediately obvious.
",mjtamlyn,None,2012-08-18T12:58:07Z,2014-06-20T15:12:42Z
284,Fixed #17228 -- params context variable is inconsistent,"Remove the params variable from the context and just put the variables
in directly.

This had not been committed previously as the original pattern was used
in the functional generic views and we wanted consistency between them,
but django.views.generic.simple.direct_to_template is now gone so we can
do it 'right'.
",mjtamlyn,None,2012-08-18T12:05:04Z,2014-07-20T01:27:27Z
283,Fixed #18779 -- URLValidator can't validate url with ipv6.,"Validation is reasonably 'soft', as for the ipv4. False positives don't 
matter too much here.
",mjtamlyn,None,2012-08-18T11:05:03Z,2014-07-20T01:27:27Z
282,Correct docs on setup of JSONResponseMixin example,"View class does not have a render_to_response method - so does not make sense for this mixin
",ptone,None,2012-08-18T00:30:46Z,2014-06-24T07:50:22Z
281,[py3] fixed __proxy__.decode doesn't exists ," fixed **proxy**.decode doesn't exists on django/contrib/auth/decorators.py
",Natim,None,2012-08-17T11:37:06Z,2014-06-27T07:50:22Z
280,[py3] Fixes WizardTests hashes,"Apparently, the `pickle.dumps()` function does not generate the same output for Python 3 and Python 2, regardless of the used protocol.

Maybe not the best fix but it's a start.
",pelletier,None,2012-08-17T10:22:32Z,2014-07-20T01:27:28Z
279,Document example of using form wizard with different templates.,"Document an example of how to use multiple templates with a form wizard.
",lorin,None,2012-08-17T02:58:37Z,2014-06-15T10:02:30Z
278,Update django/conf/locale/lt/LC_MESSAGES/django.po,"Changed Lithuanian translation of alternative month names to the genitive case.
",naktinis,None,2012-08-16T14:40:50Z,2014-06-14T20:15:20Z
277,Update django/conf/locale/lt/LC_MESSAGES/django.po,"Changed Lithuanian translation of alternative month names to the genitive case.
",naktinis,None,2012-08-16T14:24:15Z,2014-07-20T01:27:29Z
276,Update django/conf/locale/lt/LC_MESSAGES/django.po,"Changed Lithuanian translation of alternative month names to the genitive case.
",naktinis,None,2012-08-16T14:15:05Z,2014-06-18T07:55:29Z
275,Ticket #18775 - Fixed the Romanian phone number field validation rules,"The previous version only supported 10 digit phone numbers.

This branch adds validation for:
- normal phone numbers: 0xxxxxxxxx
- geographic short phone numbers: 0xxxxxx
- national short phone numbers: 1xx, 1xxxxx 

I ran the Django test suite and all tests pass (under SQLite).

Original ticket: https://code.djangoproject.com/ticket/18775
",danniel,None,2012-08-16T12:23:00Z,2014-07-02T06:07:47Z
274,[py3] Fixed representation of test models.,"It looks easy enough, but I wonder if we need to wrap test modes in `python_2_unicode_compatible` ?
",dmishe,None,2012-08-16T06:30:48Z,2014-07-20T01:27:31Z
273,[py3] Fixed installed_models filtering.,"Getting list our of map generator
",dmishe,None,2012-08-16T06:28:14Z,2014-06-20T21:14:16Z
272,[py3] Fixed EmailMessage default encoding.,"Basically the plumbing under EmailMessage needs to know about its encoding, for some reason the only place where encoding is defaulted to DEFAULT_CHARSET is `message`. I moved it to class init.
",dmishe,None,2012-08-16T06:27:10Z,2014-07-20T01:27:32Z
271,Fixed comment to match the code,,morty,None,2012-08-15T17:41:52Z,2014-07-20T01:27:33Z
270,add support for orphans in MultipleObjectMixin,,graingert,None,2012-08-15T11:10:32Z,2014-07-20T01:27:33Z
269,Document SECRET_KEY becoming required in 1.5. (Trac #18759),"This also expands the description slightly, and adds a more prominent warning about the security implications of running with an exposed SECRET_KEY.

Trac issue: [#18759](https://code.djangoproject.com/ticket/18759)
",PiDelport,None,2012-08-15T05:15:31Z,2014-07-20T01:27:33Z
268,[py3] Fixed modeltests.model_forms tests.,"Changed dict.keys() to list(dict) (Changed from original pull request)

used list comprehensions instead of map(lambda o: o.name, some_iter) 
(Same as original pull request, as assertQuerysetEquals was suggested but ended up being more verbose than the list comprehension due to needing a transform function)
",chrislawlor,None,2012-08-14T20:21:36Z,2014-06-15T06:39:46Z
267,[py3] Fixed modeltests.model_forms tests.,"Wraps dict.keys() with list(), uses list comprehensions instead of
map(lambda o: o.name, some_iter)

Tested on Python 3.2, 2.7.1
",chrislawlor,None,2012-08-14T19:20:28Z,2014-07-20T01:27:34Z
266,[py3] Fixed model_forms_regress.tests.FileFieldTests,"Fixes test_clear_and_file_contradiction  and test_full_clear tests in FileFieldTests, which were failing with ""TypeError: expected an object with the buffer interface""

Tested on python 3.2 and 2.7.1
",chrislawlor,None,2012-08-14T18:56:58Z,2014-07-20T01:27:34Z
265,Document SECRET_KEY becoming required in 1.5.,"Fix for Trac issue [#18759](https://code.djangoproject.com/ticket/18759).
",PiDelport,None,2012-08-13T12:16:17Z,2014-07-20T01:27:35Z
264,[py3] fixed JSON serialization on return_json_file,"This is need to fix UnicodePayloadTests tests
",andrewsmedina,None,2012-08-11T22:36:35Z,2014-07-20T01:27:35Z
263,[py3] Fixed encode multipart and files on test client,"This fix the encode problems on `encode_multipart` and `encode_file` methods.
",andrewsmedina,None,2012-08-11T21:33:26Z,2014-07-20T01:27:36Z
262,Fix link to Gunicorn website in deployment howto,,martijnvermaat,None,2012-08-11T21:04:43Z,2014-06-18T16:13:35Z
261,"Create headings and expand CBV docs so that the ""Built-In CBV"" docs incl...","Create headings and expand CBV docs so that the ""Built-In CBV"" docs include a complete list.

The complete list is preferred so that a single list exists to find any CBV. The previous break-up of this list has made browsing slightly more difficult.
",issackelly,None,2012-08-11T06:10:14Z,2014-07-06T07:22:01Z
260,Save the instance namespace during the resolving process as a 'current_app' request attribute,"RFF for this simple PR which adds a 'current_app' attribute to the HttpRequest class, defaulting to None.

During the URL resolving process, this attribute is set to the instance namespace of the resolved URL pattern so that it can be used in the middlewares or views without a second resolve call.

This PR also modified the render shortcut in order to use the newly introduced attribute as default value for the current_app argument.
",GaretJax,None,2012-08-10T11:41:30Z,2014-07-20T01:27:37Z
259,Made a small fix in django.contrib.auth.hashers,"This is necessary for the 'test_pkbdf2' to pass.
",andrewsmedina,None,2012-08-10T03:38:12Z,2014-07-20T01:27:37Z
258,Move the amount of retries to a variable,"Move the amount of retries to a variable so I can monkey patch the value without have to monkey patch the method.
",dlemos,None,2012-08-09T21:49:12Z,2014-07-20T01:27:37Z
257,fix #18698. Package inputenc Error: Unicode char \u8:≥ not set up for use with LaTeX.,"Sets the the `latex_preamble` in `docs/conf.py` to fix the error when generating docs on latex format
",andrewsmedina,None,2012-08-09T03:59:53Z,2014-07-02T06:39:42Z
256,Fix #18062: Document best practices for choices in model fields.,"Cleans up choices documentation to prefer the ""best-practice"" option of defining named constants + choices tuple in the model class, and shows examples of referring to those.
",ubernostrum,None,2012-08-08T16:51:36Z,2014-07-20T01:27:38Z
255,Use correct email in form validation example.,"Fixes the documentation example for validating a specific form field to use the correct email address and error message.
",Osmose,None,2012-08-08T14:52:51Z,2014-07-20T01:27:38Z
254,fixes #18735 testcase.urls not working with reverse before first client.request,"if the reverse testsuite is run on its own the tests fail:

./tests/runtests.py --settings=settings -v1 urlpatterns_reverse.URLPatternReverse

If this patch is applied it will pass. 
The problem is that the locale for the current urlconf is not cleared and will only be cleared if a request is made with a testclient. That's why reverse will fail in tests in combination of its own urlconf and no requests before.
",digi604,None,2012-08-08T13:04:38Z,2014-07-04T12:51:52Z
253,Add new security-policy documentation.,"This formally describes our policies on reporting, notification and
disclosure of security issues, and provides a detailed explanation of
our full security-response process, for reference purposes.
",ubernostrum,None,2012-08-07T20:10:02Z,2014-07-20T01:27:39Z
252,Grammar fix in 1.5 release notes.,"change ""has now"" -> ""now has"" in 1.5 release notes

I believe this is standard.
",MichaelBlume,None,2012-08-06T21:29:31Z,2014-07-20T01:27:39Z
251,Fixed #18724: 0 bypassed IntegerField choice validation,"A stray coercion of a value to a boolean in the field validation logic was causing the value 0 to bypass checks against the choices for the field. This change instead checks the value against None and validators.EMPTY_VALUES.
",bremac,None,2012-08-06T05:47:43Z,2014-06-13T08:49:53Z
250,Bugfix/16455 postgis2 optimized,"Optimized code to do extra actions when really needed.
originally made by fcurella.
",kamikaze,None,2012-08-06T00:40:07Z,2014-07-20T01:27:40Z
249,Closes #16455. Added support for PostGIS 2.0,"Adds support for postgis 2.0 using a template database.
ref: [Ticket #16455](https://code.djangoproject.com/ticket/16455)
",fcurella,None,2012-08-05T18:53:27Z,2014-06-12T11:10:52Z
248,Ticket 18715: Revisions to page 3 of the Django tutorial,"- Changing the order of instructions. Views and Urls are 'tightly coupled' in the code and should be so in the tutorial.
- Views and Templates changed to be taught to work from the beginning rather than taught via throwing errors and then fixing them. 
- Good practices on URLconf are taught from the beginner per Jessica McKellar's keynote at DjangoCon US. For example, we begin with polls/urls.py in place rather than adding them at the end.
- Editing provided by @dgouldin 
- Added template namespacing
- Additional suggestions by @roguelynn, and @zedshaw
",pydanny,None,2012-08-05T00:47:52Z,2014-07-12T04:56:05Z
247,Improvements to Tutorial part 1,"Created a new Troubleshooting page to reduce unnecessary information.  Usually people don't encounter errors about django-admin.py, but if they receive such errors they are advised to see the troubleshooting page.
",Agilemeister,None,2012-08-04T22:36:59Z,2014-07-20T01:27:41Z
246,Fixed #18709 -- Check if initial_value is a callable,"In _get_changed_data, check if initial_value is a callable and call it
if it is.
",dekkers,None,2012-08-03T16:33:27Z,2014-07-20T01:27:41Z
245,Updated django/core/management/templates.py,"fix ticket 18091 using codecs.open as suggested in ticket discussion
",ghost,None,2012-08-03T16:19:52Z,2014-07-05T02:52:08Z
244,Fixed small typo in class based view docs.,"Fixed a small typo:

""We can use create"" should be ""We can create""
",mbrochh,None,2012-08-02T11:29:41Z,2014-07-20T01:27:42Z
243,add pycrust shell,"On manage.py shell command, if find wxPython, run PyCurst shell.
",windwiny,None,2012-08-02T07:48:05Z,2014-06-18T18:39:59Z
242,No reason for CSRF tag to be wrapped in a div.,"Unless there is a reason, this should be removed, django doesn't need to be bloating the dom if it doesn't need to.
",lifeiscontent,None,2012-08-01T18:10:41Z,2014-07-20T01:27:43Z
241,Fixes issue 18685 and addresses part of 18603,"Change the way that management commands are found to use pkgutil instead of the imp library. This resolves issues related to PEP 302, where modules in the same package distributed in separate pip packages didn't work properly
",cberner,None,2012-07-31T21:15:29Z,2014-07-20T01:27:43Z
240,Patch for ticket #18685,"Change the way that management modules are found to use pkgutil instead of imp, so that multiple modules in the same heirarchy can be installed from different setuptools packages. Addresses ticket #18685
",cberner,None,2012-07-30T23:47:02Z,2014-07-16T17:30:06Z
239,Updated Brazil's new phone number format.,"Simple change to correctly validate Brazil's new phone number digits format.
",cadusk,None,2012-07-30T23:26:40Z,2014-07-20T01:27:44Z
238,Fix #12728 - Use proper pk column for postgresql when setting sequences,"PostgreSQL was hard-coded to use the 'id' column when generating SQL to set the sequence on the models of many-to-many relations. This breaks when the relation uses table-based inheritence, where the primary key will not be named 'id'.

This change uses the actual primary key column name.

Fix for https://code.djangoproject.com/ticket/12728
",lorin,None,2012-07-30T19:21:57Z,2014-06-18T18:39:57Z
237,9 digits phones for São Paulo/Brazil (Ticket #18536),"https://code.djangoproject.com/ticket/18536
",seocam,None,2012-07-29T17:40:24Z,2014-07-20T01:27:44Z
236,Added current datetime as output in Django devserver as per ticket 18611,"References ticket -> https://code.djangoproject.com/ticket/18611
",mgrouchy,None,2012-07-28T02:56:30Z,2014-07-20T01:27:45Z
235,Ticket #17448 -- Added test for raw SQL query,"Added a test to the GeoDjango test suite.
The test performs a raw SQL query.
",davideklund,None,2012-07-26T21:47:02Z,2014-06-20T21:17:47Z
234,"When running tests, check app.tests.testcase if app.models.testcase is junk #18670","See https://code.djangoproject.com/ticket/18670
",bradleyayers,None,2012-07-26T02:58:10Z,2014-07-20T01:27:45Z
233,Updated example of customized ModelAdmin in documentation for 1.4,"The `change_view` method of `django.contrib.admin.ModelAdmin` takes an
extra `form_url` argument in Django 1.4.
",rafikdraoui,None,2012-07-25T20:41:14Z,2014-07-20T01:27:46Z
232,Ticket 18667: fix typo in CBV doc,"Thanks! :)
",yohanboniface,None,2012-07-25T08:48:26Z,2014-07-20T01:27:46Z
231,"Documentation fix - Change the word ""brackets"" to ""parentheses""","I want to change the word ""brackets"" to ""parentheses"" because when I think
of brackets, I think of [], and when I think of parentheses, I think of (),
and when I originally read this, I found the word confusing.

I wonder if this is a USA-centric thing.  [Wikipedia seems to think brackets and parentheses are the same thing](http://en.wikipedia.org/wiki/Bracket#Parentheses_.28_.29) but I had to pause to think to figure out what exactly this line of documentation was saying.
",kevin1024,None,2012-07-25T03:00:07Z,2014-07-20T01:27:46Z
230,Cleanup,,PiDelport,None,2012-07-24T23:25:20Z,2014-06-16T05:35:40Z
229,Fixes an error when using MultipleObjectTemplateResponseMixin.render_to_response() while subclassing a BaseListView,"This solves a bug relative to the use of MultipleObjectTemplateResponseMixin.render_to_response() while subclassing BaseListView, raising a TypeError Exception (""**init**() got an unexpected keyword argument 'request'"")

The signature of django.template.response.TemplateResponse does not match the way it's invoked.
See:
https://github.com/django/django/blob/master/django/template/response.py#L141
",zedr,None,2012-07-24T19:55:10Z,2014-07-20T01:27:47Z
228,Documentation: Fixed a typo in docs/releases/1.4.txt,"Fixed a small typo i spotted in the docs.
",ghost,None,2012-07-24T18:49:35Z,2014-07-20T01:27:47Z
227,Regression test for bug #18660,"Seems like [#18660](https://code.djangoproject.com/ticket/18660) was fixed by accident on aee9eecb920cf281e8339a5f7edadc6f2dd04fea

This regression test should keep an eye on it so it doesn't come back.
",eduardocereto,None,2012-07-24T08:50:25Z,2014-07-20T01:27:48Z
226,"#18660 unlocalize url ids in admin ""View on Site""","I'm not sure if it's the best fix. But it works for me.

I'd love to do the same fix for django 1.4 in case this one is merged. Should I?

https://code.djangoproject.com/ticket/18660
",eduardocereto,None,2012-07-24T05:45:54Z,2014-06-22T07:06:45Z
225,Remove double isinstance check in force_unicode,"Commit 534792d put the check to the top of force_unicode but didn't remove the then unnecessary check further in the code.
",dekkers,None,2012-07-23T23:06:59Z,2014-07-08T02:24:23Z
224,Documentation: Fix link to uWSGI deployment,,reclosedev,None,2012-07-22T14:55:52Z,2014-07-20T01:27:49Z
223,Ticket #5524 invalid form cleaned data,"This is just a cleanup of @aaugustin's patch with doc updated to specify it was added in 1.5 and not 1.4 and some `unicode_literals` related changes.
",charettes,None,2012-07-22T04:59:38Z,2014-07-20T01:27:49Z
222,#3202 - Large speed increases to SelectBox and SelectFilter2,"I have an admin page with two filter_horizontal widgets on it. One has almost 800 options and the other 11,500. As you can imagine it's pretty slow but also it sometimes copies the wrong selections if you have a lot of them, plus it crashes on page load in IE and Opera. The scripts in 1.4 make it even slower by using a slow jQuery selector to check if anything is selected when deciding what icons to use.

The tweaks to redisplay from #3202 will cut a second or so off of every action but the code still calls redisplay way too often which means doing anything takes 2-5 seconds. Ticket #9102 attempted to avoid redisplay but its method of hiding `<option>` tags doesn't work in Chrome.

I've come up with the following which will generally transfer options instantly on my 11,500 list. It starts to slow down if you're moving stuff from side to side in bulk but it's still faster than what's currently in Django. It works excellently in Chrome, Firefox, and Safari, but Opera and IE are still slow but no longer crash.
1. Included the tweak from the current SelectBox.patch on ticket #3202 to speed up redisplay.
2. Don't run redisplay on page load or moving options between columns. Instead just move the actual DOM node and this is super fast.
3. However, when moving large numbers of options then keeping them in alphabetical order is often slower than redisplaying, so redisplay instead. I currently set it to redisplay on any movement of more than 100 options but that number is just a guess and involved little testing. The number really depends on the amount of options being moved, how many options are in the destination column, how fast the user's browser is, etc.
4. Only redisplay filter results 250ms after you've stopped typing. This prevents the major lag on the first 1-3 letters when you try to filter something on medium to large lists.
5. Store a separate key map for quicker access to the cache and less iterating.
6. Check against selectedIndex to see if any options are selected instead of going through every option again with jQuery just to display icons.
7. Every browser except Firefox will lock up for 2-3 minutes if you have too many `selected=""selected""` (even in a plain HTML file). So while you can use this javascript to select 10,000 options in 2 seconds your tab might crash after the form submit.
8. Bonus: fixed the keyboard shortcuts and enter no longer bubbles up and submits the form.
",kylemacfarlane,None,2012-07-21T02:34:22Z,2014-06-17T13:26:21Z
221,Add missing transaction commit to cache.clear,"On PostgreSQL this is necessary to clear the cache table.
",gsong,None,2012-07-20T21:05:24Z,2014-07-20T01:27:50Z
220,Fix typo in staticfiles app documentation,"In the documentation for the `static` template tag, a `::` was used prior to a `code-block`. Doing so caused the `code-block` line to render as code. Changing the `::` to `:` corrects the display.
",dirn,None,2012-07-18T18:36:11Z,2014-07-20T01:27:50Z
219,Ticket 18479,"Made the makemessages command ignore gettext warnings by checking the Popen.returncode status.
https://code.djangoproject.com/ticket/18479
",nsb,None,2012-07-18T12:50:58Z,2014-07-02T18:17:20Z
218,BaseCache now has a no-op close method as per ticket #18582,"Also removed the hasattr check when firing request_finished signal for
caches with a 'close' method. Should be safe to call `cache.close`
everywhere now

references ticket: https://code.djangoproject.com/ticket/18482
",mgrouchy,None,2012-07-18T12:13:41Z,2014-07-08T21:35:28Z
217,Make templates more reusable by Improving template loading algorithm to avoid extending infinite recursion,"[Ticket 15053](https://code.djangoproject.com/ticket/15053)
",goinnn,None,2012-07-18T09:56:19Z,2014-06-25T22:38:26Z
216,Fixed #18644 -- Made urlize trim trailing period followed by parenthesis,"Added `'.)'` to `TRAILING_PUNCTUATION` so that a period will be stripped from URLs also when it is followed by a close parenthesis. See [Ticket #18644](https://code.djangoproject.com/ticket/18644).
",ljosa,None,2012-07-17T14:40:38Z,2014-06-15T08:43:36Z
215,Adds interpreter option to shell command as per ticket #18639,"Adds interpreter option to shell command as per ticket #18639
Specify python interpreter interface ipython or bpython with the -i,
--interface options
argument.

``` shell
python manage.py shell -i bpython
```

or

``` shell
python manage.py shell --interface bpython
```

Like all other options, defaults to default python interpreter when your
selected choice isn't available.

updated documentation where appropriate
",mgrouchy,None,2012-07-17T00:48:19Z,2014-06-14T07:39:09Z
214,Fixed #18634 -- Don't escape variables in the context for startproject/startapp.,"The & symbols which can come up in the secret key were being escaped to &amp;.

I'm not sure how to test this - there's no obvious way to fix the variables so they contain bad characters as we can't pass in extra options...
",mjtamlyn,None,2012-07-16T22:29:42Z,2014-06-16T22:07:41Z
213,Fix #18306 -- Defer and update_fields interaction.,,akaariai,None,2012-07-16T21:55:27Z,2014-06-20T20:26:22Z
212,[1.4] Ticket 18614 -- Add Imports and change render_to_response to render,"https://code.djangoproject.com/ticket/18614
",kevinlondon,None,2012-07-16T04:38:02Z,2014-06-18T18:39:53Z
211,Common OAuth terms into debug hidden values,"Django already does a pretty nice job of protecting certain hidden values in DEBUG mode. This changes adds a few more values to sanitized based on common terminology of the OAuth protocol.
",Miserlou,None,2012-07-16T02:08:33Z,2014-07-20T01:27:53Z
210,Ticket 18632 Cleanup of CBV edit/edit mixin documentation.,#NAME?,pydanny,None,2012-07-16T00:37:40Z,2014-07-04T08:59:52Z
209,add signal when finished loading all INSTALLED_APPS,"Event to execute actions when Django finishes loading all applications.
",juanpex,None,2012-07-16T00:28:09Z,2014-07-20T01:27:53Z
208,Ticket 18628 Cleanup for methods/attributes associated with display views,"Added informative description text to MRO. Added BaseListView.get() to documentation in order to aid in understanding of ListView.
",pydanny,None,2012-07-15T23:14:13Z,2014-07-20T01:27:54Z
207,Ticket 18628 Cleanup for methods/attributes associated with display views,"This pull request adds descriptive text the MRO section of views, as well as validates methods and attributes associated with mixins tied to DetailView and ListView. Finally it adds BaseListView because the BaseListView.get() method's behavior is alterable via the _allow_empty_ attribute.
",pydanny,None,2012-07-15T22:38:48Z,2014-07-20T01:27:54Z
206,"Fix typo, correct Warning message library is 'warnings'","[Warning messages library](http://docs.python.org/library/warnings.html) correct name is **warnings**

<pre>
favio@localhost:~/proyectos/Crowddeals$ python manage.py validate
Traceback (most recent call last):
  File ""manage.py"", line 9, in <module>
    execute_from_command_line(sys.argv)
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/__init__.py"", line 442, in execute_from_command_
line
    utility.execute()
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/__init__.py"", line 381, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/__init__.py"", line 261, in fetch_command
    klass = load_command_class(app_name, subcommand)
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/__init__.py"", line 69, in load_command_class
    module = import_module('%s.management.commands.%s' % (app_name, name))
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/utils/importlib.py"", line 35, in import_module
    __import__(name)
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/commands/syncdb.py"", line 8, in <module>
    from django.core.management.sql import custom_sql_for_model, emit_post_sync_signal
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/commands/syncdb.py"", line 8, in <module>
    from django.core.management.sql import custom_sql_for_model, emit_post_sync_signal
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/core/management/sql.py"", line 8, in <module>
    from django.db import models
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/db/__init__.py"", line 11, in <module>
    if DEFAULT_DB_ALIAS not in settings.DATABASES:
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/utils/functional.py"", line 192, in inner
    self._setup()
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/conf/__init__.py"", line 43, in _setup
    self._wrapped = Settings(settings_module)
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/conf/__init__.py"", line 131, in __init__
    logging_config_module = importlib.import_module(logging_config_path)
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/utils/importlib.py"", line 35, in import_module
    __import__(name)
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/utils/log.py"", line 6, in <module>
    from django.views.debug import ExceptionReporter, get_exception_reporter_filter
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/views/debug.py"", line 11, in <module>
    from django.http import (HttpResponse, HttpResponseServerError,
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/http/__init__.py"", line 82, in <module>
    from django.http.multipartparser import MultiPartParser
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/http/multipartparser.py"", line 12, in <module>
    from django.utils.datastructures import MultiValueDict
  File ""/home/favio/proyectos/Crowddeals/env/local/lib/python2.7/site-packages/django/utils/datastructures.py"", line 2, in <module>
    import warning
ImportError: No module named warning
</pre>
",mariocesar,None,2012-07-15T00:12:35Z,2014-07-20T01:27:55Z
205,Added Finnish DATETIME based on feedback from Nike@Translatewiki.,"(Native Finn, translator, and founder of Translatewiki.net) [Niklas Laxström](https://translatewiki.net/wiki/User:Nike) [has helped me](https://translatewiki.net/wiki/Thread:User_talk:Nike/DATETIME_in_Finnish) add `DATETIME` to the Finnish formats.py. I've tested the format itself with Django 1.4, and the result is a DATETIME like this: ""12. joulukuuta 2011 kello 12.12.12"".
",dittaeva,None,2012-07-14T17:44:40Z,2014-06-12T22:41:21Z
204,Fixed #18616 (documentation): docs for new user_login_failed signal,"Documentation for the new signal added for this ticket:
https://code.djangoproject.com/ticket/18616
",brad,None,2012-07-13T06:04:00Z,2014-07-03T03:29:41Z
203,"Ticket #18620: Prefer current Site when checking M2M in ""shortcut""/""view_on_site"" redirect","https://code.djangoproject.com/ticket/18620 
",mtigas,None,2012-07-12T21:48:04Z,2014-06-13T22:14:14Z
202,Ticket #18619: get_inline_instances() should accept an instance parameter,"This is consistent with the other ModelAdmin methods. Please refer to https://code.djangoproject.com/ticket/18619 for further information.
",sjaensch,None,2012-07-12T21:28:51Z,2014-07-10T10:51:49Z
201,Ticket #18616: contrib.auth signal user_login_fail,"https://code.djangoproject.com/ticket/18616

Note: it seems I made a typo on the branch name, it is ticket_18686 instead of ticket_18616.
",micolous,None,2012-07-12T01:52:42Z,2014-06-13T00:54:26Z
200,update docs to note minimum version is actually 2.6.5,"https://code.djangoproject.com/ticket/18601
",ptone,None,2012-07-11T21:31:50Z,2014-07-20T01:27:56Z
199,Fixed a typo in the timezones document.,"Fixed a typo in the document.
",mitnk,None,2012-07-11T03:07:34Z,2014-07-09T10:27:55Z
198,Fixed #17756 -- Added pyspatialite support,"And updated docs to include installation instruction for pyspatiliate
and that it can be used in lieu of pysqlite.
",danielsokolowski,None,2012-07-10T20:12:11Z,2014-06-15T04:02:51Z
197,Docs typo,"""Ouptut"" -> ""Output"" 
",StefanKjartansson,None,2012-07-10T15:28:53Z,2014-06-28T13:09:55Z
196,Improved error message when database NAME not set with Postgres,,doismellburning,None,2012-07-09T18:18:20Z,2014-07-20T01:27:58Z
195,Add example of AJAX form submission.,"Credit goes to @SystemParadox. Originally developed at #DjangoCon Europe
but wasn't tested enough to merge in.

For history, please see https://github.com/pydanny/django/pull/4
",mjtamlyn,None,2012-07-09T08:01:36Z,2017-12-29T15:22:14Z
194,[1.4.x] Fixed #18537 -- Fixed calculation of CUIT,"Added check for corner cases in calculation. The procdure for the
calculation this code is based on is outlined at the Spanish Wikipedia
entry for Código_Único_de_Identificación_Tributaria:

http://es.wikipedia.org/wiki/
C%C3%B3digo_%C3%9Anico_de_Identificaci%C3%B3n_Tributaria

Added check for a legal type (the first two digits of the CUIT,
according to the same Wikipedia article.

Added tests for corner cases of CUIT calculation, and for legal type
checking. The improved algorithm was added at commit:
d03b6eac56e83425ea4b02ed611e63335768710a
",kevinschaul,None,2012-07-09T04:03:45Z,2014-06-18T18:39:38Z
193,Fix for #18593 (Admin change list swallows unrelated AttributeErrors from callable display fields) ,"See [~~#18593~~](https://code.djangoproject.com/ticket/18593) [#16655](https://code.djangoproject.com/ticket/16655).
",PiDelport,None,2012-07-08T09:38:49Z,2014-07-01T17:58:05Z
192,Added documentation for the point_zoom attribute of the GeoModelAdmin class.,"Added documentation for the point_zoom attribute of the GeoModelAdmin class.
",garnertb,None,2012-07-07T19:00:58Z,2014-07-11T01:42:40Z
191,Update forms.fields.DateField docs to reflect current default input formats,"Per: https://code.djangoproject.com/ticket/18490
",aptwebapps,None,2012-07-07T12:41:09Z,2014-07-04T13:58:19Z
190,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,"https://code.djangoproject.com/ticket/17549
",ulope,None,2012-07-07T12:27:30Z,2018-12-21T23:20:56Z
189,Return unicode arrays instead of utf-8 encoded string arrays from the psycopg database backend,"When retrieving an array from the database using the psycopg2 backend, I was surprised when the query returned a utf-8 encoded string instead of a unicode string. Since django uses unicode everywhere internally, it should enable the psycopg connection setting that automatically converts database arrays into python unicode arrays.
",babymastodon,None,2012-07-07T08:28:58Z,2014-06-25T20:47:21Z
188,Fix copyright holder,"Taurinus Collective does not exist anymore. I guess is a good idea to attribute the rights to the real owner.

This change is already made in the main repository:
https://bitbucket.org/semente/baseconv/src/e70ec732fcf9/src/baseconv.py
",semente,None,2012-07-06T18:25:15Z,2014-07-20T01:28:00Z
187,restored a missing \ in uwsgi docs,"in the ""Here's an example command to start a uWSGI server:"" section
",evildmp,None,2012-07-06T09:12:46Z,2014-07-18T10:33:28Z
186,Fixed #18574 -- Make `BaseFormSet.is_valid` call it's underlying forms'`is_valid`,"This should provide a more expectable behavior.
",charettes,None,2012-07-05T21:31:53Z,2014-07-20T01:28:01Z
185,docs and comments in settings.py to explain template overriding,"I spent a lot of time trying to work out why my own base_site.html template wasn't overriding Django's. 

Eventually I realised that it was because django.contrib.admin was listed in INSTALLED_APPLICATIONS before my own application, and so its base_site.html won the race to be chosen.

I'm a slow learner, so I went through the same thing all over again today, a year or more later...

To help people like me, I have added a comment in the settings.py of the project template, and a note in the docs. 

I considered adding it in part 2 of the tutorial, https://docs.djangoproject.com/en/1.4/intro/tutorial02/, but I felt it was probably a bit much to put in front of a new user.

If I have not submitted this in the correct format let me know and I will have another try.
",evildmp,None,2012-07-05T21:11:38Z,2014-07-07T00:50:22Z
184,Correct MIME Type for JSON + losslessly compressed images,"1. Changed the MIME type for JSON from `text/javascript` to the correct `application/json`. 
   (More information: http://www.ietf.org/rfc/rfc4627.txt)
2. Losslessly compressed all images 
   (More information: http://www.bookofspeed.com/chapter5.html)
   
   and, If you like stats:  
   
   ```
   django/docs/internals/_images/djangotickets.png:
   
    -> before: 52003 bytes
   -> after: 38782 bytes
   -> reduction: 25.42% (13221 bytes)
   
   django/docs/intro/_images/admin03.png:
   
    -> before: 75434 bytes
   -> after: 54150 bytes
   -> reduction: 28.22% (21284 bytes)
   
   django/docs/intro/_images/admin05t.png:
   
    -> before: 19062 bytes
   -> after: 17212 bytes
   -> reduction: 9.71% (1850 bytes)
   
   django/docs/intro/_images/admin04t.png:
   
    -> before: 19496 bytes
   -> after: 16688 bytes
   -> reduction: 14.40% (2808 bytes)
   
   django/docs/intro/_images/admin06t.png:
   
    -> before: 13305 bytes
   -> after: 12434 bytes
   -> reduction: 6.55% (871 bytes)
   
   django/docs/intro/_images/admin05.png:
   
    -> before: 23663 bytes
   -> after: 20285 bytes
   -> reduction: 14.28% (3378 bytes)
   
   django/docs/intro/_images/admin09.png:
   
    -> before: 11956 bytes
   -> after: 10290 bytes
   -> reduction: 13.93% (1666 bytes)
   
   django/docs/intro/_images/admin08.png:
   
    -> before: 25871 bytes
   -> after: 22272 bytes
   -> reduction: 13.91% (3599 bytes)
   
   django/docs/intro/_images/admin12t.png:
   
    -> before: 17414 bytes
   -> after: 13314 bytes
   -> reduction: 23.54% (4100 bytes)
   
   django/docs/intro/_images/admin11.png:
   
    -> before: 33276 bytes
   -> after: 28235 bytes
   -> reduction: 15.15% (5041 bytes)
   
   django/docs/intro/_images/admin04.png:
   
    -> before: 16006 bytes
   -> after: 13641 bytes
   -> reduction: 14.78% (2365 bytes)
   
   django/docs/intro/_images/admin02t.png:
   
    -> before: 24726 bytes
   -> after: 20940 bytes
   -> reduction: 15.31% (3786 bytes)
   
   django/docs/intro/_images/admin03t.png:
   
    -> before: 28131 bytes
   -> after: 24363 bytes
   -> reduction: 13.39% (3768 bytes)
   
   django/docs/intro/_images/admin07.png:
   
    -> before: 15209 bytes
   -> after: 12511 bytes
   -> reduction: 17.74% (2698 bytes)
   
   django/docs/intro/_images/admin08t.png:
   
    -> before: 20224 bytes
   -> after: 18580 bytes
   -> reduction: 8.13% (1644 bytes)
   
   django/docs/intro/_images/admin13t.png:
   
    -> before: 14289 bytes
   -> after: 14289 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/docs/intro/_images/admin06.png:
   
    -> before: 17441 bytes
   -> after: 14685 bytes
   -> reduction: 15.80% (2756 bytes)
   
   django/docs/intro/_images/admin01.png:
   
    -> before: 18233 bytes
   -> after: 11160 bytes
   -> reduction: 38.79% (7073 bytes)
   
   django/docs/intro/_images/admin11t.png:
   
    -> before: 19619 bytes
   -> after: 18169 bytes
   -> reduction: 7.39% (1450 bytes)
   
   django/docs/intro/_images/admin14.png:
   
    -> before: 22543 bytes
   -> after: 22543 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/docs/intro/_images/admin14t.png:
   
    -> before: 17256 bytes
   -> after: 17256 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/docs/intro/_images/admin13.png:
   
    -> before: 18327 bytes
   -> after: 18327 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/docs/intro/_images/admin12.png:
   
    -> before: 10816 bytes
   -> after: 9424 bytes
   -> reduction: 12.87% (1392 bytes)
   
   django/docs/intro/_images/admin10.png:
   
    -> before: 11645 bytes
   -> after: 9399 bytes
   -> reduction: 19.29% (2246 bytes)
   
   django/docs/intro/_images/admin02.png:
   
    -> before: 64260 bytes
   -> after: 45433 bytes
   -> reduction: 29.30% (18827 bytes)
   
   django/docs/ref/contrib/admin/_images/users_changelist.png:
   
    -> before: 59355 bytes
   -> after: 55716 bytes
   -> reduction: 6.13% (3639 bytes)
   
   django/docs/ref/contrib/admin/_images/user_actions.png:
   
    -> before: 27047 bytes
   -> after: 24291 bytes
   -> reduction: 10.19% (2756 bytes)
   
   django/docs/ref/contrib/admin/_images/article_actions_message.png:
   
    -> before: 22098 bytes
   -> after: 19342 bytes
   -> reduction: 12.47% (2756 bytes)
   
   django/docs/ref/contrib/admin/_images/article_actions.png:
   
    -> before: 38545 bytes
   -> after: 32494 bytes
   -> reduction: 15.70% (6051 bytes)
   
   django/docs/ref/contrib/admin/_images/flatfiles_admin.png:
   
    -> before: 42243 bytes
   -> after: 37076 bytes
   -> reduction: 12.23% (5167 bytes)
   
   django/docs/_theme/djangodocs/static/docicons-behindscenes.png:
   
    -> before: 2269 bytes
   -> after: 1313 bytes
   -> reduction: 42.13% (956 bytes)
   
   django/docs/_theme/djangodocs/static/docicons-philosophy.png:
   
    -> before: 1523 bytes
   -> after: 962 bytes
   -> reduction: 36.84% (561 bytes)
   
   django/docs/_theme/djangodocs/static/docicons-note.png:
   
    -> before: 1013 bytes
   -> after: 596 bytes
   -> reduction: 41.16% (417 bytes)
   
   django/docs/obsolete/_images/objecttools_01.png:
   
    -> before: 1398 bytes
   -> after: 882 bytes
   -> reduction: 36.91% (516 bytes)
   
   django/docs/obsolete/_images/formrow.png:
   
    -> before: 16601 bytes
   -> after: 10345 bytes
   -> reduction: 37.68% (6256 bytes)
   
   django/docs/obsolete/_images/module.png:
   
    -> before: 10072 bytes
   -> after: 6115 bytes
   -> reduction: 39.29% (3957 bytes)
   
   django/docs/obsolete/_images/objecttools_02.png:
   
    -> before: 2268 bytes
   -> after: 1415 bytes
   -> reduction: 37.61% (853 bytes)
   
   django/docs/topics/_images/django_unittest_classes_hierarchy.png:
   
    -> before: 11757 bytes
   -> after: 11757 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/docs/topics/http/_images/middleware.png:
   
    -> before: 56301 bytes
   -> after: 37056 bytes
   -> reduction: 34.18% (19245 bytes)
   
   django/tests/regressiontests/file_storage/test.png:
   
    -> before: 482 bytes
   -> after: 358 bytes
   -> reduction: 25.73% (124 bytes)
   
   django/tests/regressiontests/file_storage/test1.png:
   
    -> before: 480 bytes
   -> after: 351 bytes
   -> reduction: 26.88% (129 bytes)
   
   django/tests/regressiontests/model_fields/8x4.png:
   
    -> before: 87 bytes
   -> after: 73 bytes
   -> reduction: 16.09% (14 bytes)
   
   django/tests/regressiontests/model_fields/4x8.png:
   
    -> before: 87 bytes
   -> after: 73 bytes
   -> reduction: 16.09% (14 bytes)
   
   django/tests/regressiontests/bug639/test.jpg:
   
    -> before: 1780 bytes
   -> after: 1328 bytes
   -> reduction: 25.39% (452 bytes)
   
   django/tests/regressiontests/staticfiles_tests/project/documents/cached/css/img/window.png:
   
    -> before: 207 bytes
   -> after: 204 bytes
   -> reduction: 1.45% (3 bytes)
   
   django/tests/regressiontests/staticfiles_tests/project/documents/cached/img/relative.png:
   
    -> before: 207 bytes
   -> after: 204 bytes
   -> reduction: 1.45% (3 bytes)
   
   django/tests/modeltests/model_forms/test.png:
   
    -> before: 482 bytes
   -> after: 358 bytes
   -> reduction: 25.73% (124 bytes)
   
   django/tests/modeltests/model_forms/test2.png:
   
    -> before: 2072 bytes
   -> after: 1897 bytes
   -> reduction: 8.45% (175 bytes)
   
   django/django/contrib/admin/static/admin/img/default-bg-reverse.gif:
   
    -> before: 843 bytes
   -> after: 835 bytes
   -> reduction: 0.95% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/selector-icons.gif:
   
    -> before: 2771 bytes
   -> after: 2771 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/inline-restore.png:
   
    -> before: 623 bytes
   -> after: 410 bytes
   -> reduction: 34.19% (213 bytes)
   
   django/django/contrib/admin/static/admin/img/icon-no.gif:
   
    -> before: 176 bytes
   -> after: 176 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_alert.gif:
   
    -> before: 145 bytes
   -> after: 145 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/selector-search.gif:
   
    -> before: 552 bytes
   -> after: 552 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/gis/move_vertex_on.png:
   
    -> before: 506 bytes
   -> after: 332 bytes
   -> reduction: 34.39% (174 bytes)
   
   django/django/contrib/admin/static/admin/img/gis/move_vertex_off.png:
   
    -> before: 711 bytes
   -> after: 489 bytes
   -> reduction: 31.22% (222 bytes)
   
   django/django/contrib/admin/static/admin/img/chooser_stacked-bg.gif:
   
    -> before: 212 bytes
   -> after: 204 bytes
   -> reduction: 3.77% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/inline-splitter-bg.gif:
   
    -> before: 102 bytes
   -> after: 94 bytes
   -> reduction: 7.84% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/inline-restore-8bit.png:
   
    -> before: 447 bytes
   -> after: 366 bytes
   -> reduction: 18.12% (81 bytes)
   
   django/django/contrib/admin/static/admin/img/inline-delete.png:
   
    -> before: 781 bytes
   -> after: 550 bytes
   -> reduction: 29.58% (231 bytes)
   
   django/django/contrib/admin/static/admin/img/inline-delete-8bit.png:
   
    -> before: 477 bytes
   -> after: 396 bytes
   -> reduction: 16.98% (81 bytes)
   
   django/django/contrib/admin/static/admin/img/tool-right_over.gif:
   
    -> before: 200 bytes
   -> after: 192 bytes
   -> reduction: 4.00% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/nav-bg-selected.gif:
   
    -> before: 265 bytes
   -> after: 265 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_clock.gif:
   
    -> before: 390 bytes
   -> after: 390 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/tool-right.gif:
   
    -> before: 198 bytes
   -> after: 190 bytes
   -> reduction: 4.04% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/chooser-bg.gif:
   
    -> before: 199 bytes
   -> after: 191 bytes
   -> reduction: 4.02% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/tool-left_over.gif:
   
    -> before: 203 bytes
   -> after: 195 bytes
   -> reduction: 3.94% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/changelist-bg.gif:
   
    -> before: 58 bytes
   -> after: 50 bytes
   -> reduction: 13.79% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_error.gif:
   
    -> before: 319 bytes
   -> after: 319 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/nav-bg-reverse.gif:
   
    -> before: 186 bytes
   -> after: 178 bytes
   -> reduction: 4.30% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/nav-bg.gif:
   
    -> before: 273 bytes
   -> after: 265 bytes
   -> reduction: 2.93% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/deleted-overlay.gif:
   
    -> before: 45 bytes
   -> after: 45 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/nav-bg-grabber.gif:
   
    -> before: 116 bytes
   -> after: 116 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_searchbox.png:
   
    -> before: 667 bytes
   -> after: 609 bytes
   -> reduction: 8.70% (58 bytes)
   
   django/django/contrib/admin/static/admin/img/sorting-icons.gif:
   
    -> before: 369 bytes
   -> after: 369 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/tooltag-arrowright_over.gif:
   
    -> before: 354 bytes
   -> after: 346 bytes
   -> reduction: 2.26% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/icon-yes.gif:
   
    -> before: 299 bytes
   -> after: 299 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_success.gif:
   
    -> before: 341 bytes
   -> after: 341 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/tooltag-add.gif:
   
    -> before: 932 bytes
   -> after: 325 bytes
   -> reduction: 65.13% (607 bytes)
   
   django/django/contrib/admin/static/admin/img/changelist-bg_rtl.gif:
   
    -> before: 75 bytes
   -> after: 50 bytes
   -> reduction: 33.33% (25 bytes)
   
   django/django/contrib/admin/static/admin/img/icon-unknown.gif:
   
    -> before: 130 bytes
   -> after: 130 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_deletelink.gif:
   
    -> before: 181 bytes
   -> after: 181 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/tool-left.gif:
   
    -> before: 197 bytes
   -> after: 189 bytes
   -> reduction: 4.06% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_changelink.gif:
   
    -> before: 119 bytes
   -> after: 119 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/default-bg.gif:
   
    -> before: 844 bytes
   -> after: 836 bytes
   -> reduction: 0.95% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_calendar.gif:
   
    -> before: 192 bytes
   -> after: 192 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/icon_addlink.gif:
   
    -> before: 119 bytes
   -> after: 119 bytes
   -> reduction: 0.00% (0 bytes)
   
   django/django/contrib/admin/static/admin/img/tooltag-add_over.gif:
   
    -> before: 336 bytes
   -> after: 328 bytes
   -> reduction: 2.38% (8 bytes)
   
   django/django/contrib/admin/static/admin/img/tooltag-arrowright.gif:
   
    -> before: 351 bytes
   -> after: 343 bytes
   -> reduction: 2.28% (8 bytes)
   
   ********************************************************************
   
   Total:
   
    -> before: 924883 bytes
   -> after: 763080 bytes
   -> reduction: 17.49% (161803 bytes)
   ```
",alrra,None,2012-07-05T05:35:29Z,2014-07-10T22:21:15Z
183,Fixed typo in 1.5 release notes,,rpedigoni,None,2012-07-04T21:38:48Z,2014-07-07T10:45:18Z
182,Correct Lithuanian short date format.,"Reference: http://www.likit.lt/term/d/datos_formatas.html

LIKIT is the official Lithuanian dictionary of IT terminology.
",kspi,None,2012-07-04T19:45:24Z,2014-07-03T23:29:48Z
181,Scaping <fixturename> to \<fixturename\>.,"In documentation is:

""...just call manage.py loaddata, where <fixturename> is the name of the fixture...""

should be:

""...just call manage.py loaddata <fixturename>, where <fixturename> is the name of the fixture...""

https://docs.djangoproject.com/en/dev/howto/initial-data/#providing-initial-data-with-fixtures
",deniscostadsc,None,2012-07-03T18:32:40Z,2014-07-20T01:28:02Z
180,Ticket #18511: Error Message displays different for Changeforms and the Password Change screen.,"https://code.djangoproject.com/ticket/18511
",cobalys,None,2012-07-03T10:07:55Z,2014-07-02T08:36:29Z
179,New Galician date and time formats according to request at http://transla...,"Added some new date and time formats and updated those already there as per request on [Translatewiki](http://translatewiki.net/wiki/Thread:User_talk:Toliño/Thank_you_for_your_translation_of_Waymarked_Trails_to_Galician!/reply).

I have no knowledge of Galician, but request is made by translator and changes similar to those of related Spanish formats.py. All formats tested individually on 1.4.
",dittaeva,None,2012-06-28T13:13:06Z,2014-06-25T15:17:55Z
178,Fixed #14087 -- find management commands in namespace packages,"improve joh's and nfg's patches, find management commands in namespace packages only. packages imported by pep-302 importers should be in another patch.

https://code.djangoproject.com/ticket/14087
",bhuztez,None,2012-06-28T08:12:30Z,2014-06-12T19:39:57Z
177,Fixed #16502 -- add default template_name for CreateView,"update Silver_Ghost's get_model_with_tests patch

https://code.djangoproject.com/ticket/16502
",bhuztez,None,2012-06-28T08:05:09Z,2014-07-03T18:14:24Z
176,Add reST role to templates named in some view docs.,"This makes the templates link up correctly in the admindocs. See Django Trac ticket [#18521](https://code.djangoproject.com/ticket/18521).
",benspaulding,None,2012-06-27T02:48:03Z,2014-07-20T01:28:04Z
175,Added the implementation for MySQL for specifying of several fields in distinct(),"Allows use of multiple distinct fields:

> > > print User.objects.distinct('username').query
> > >  SELECT `auth_user`.`id`, `auth_user`.`username`, `auth_user`.`first_name`, `auth_user`.`last_name`, `auth_user`.`email`, `auth_user`.`password`, `auth_user`.`is_staff`, `auth_user`.`is_active`, `auth_user`.`is_superuser`, `auth_user`.`last_login`, `auth_user`.`date_joined` FROM `auth_user` GROUP BY `auth_user`.`username` ORDER BY NULL
> > > 
> > > print User.objects.distinct('username', 'email').query
> > > SELECT `auth_user`.`id`, `auth_user`.`username`, `auth_user`.`first_name`, `auth_user`.`last_name`, `auth_user`.`email`, `auth_user`.`password`, `auth_user`.`is_staff`, `auth_user`.`is_active`, `auth_user`.`is_superuser`, `auth_user`.`last_login`, `auth_user`.`date_joined` FROM `auth_user` GROUP BY `auth_user`.`username`, `auth_user`.`email` ORDER BY NULL 
> > > 
> > > print Comment.objects.distinct('comment', 'site__name').query
> > > SELECT `django_comments`.`id`, `django_comments`.`content_type_id`, `django_comments`.`object_pk`, `django_comments`.`site_id`, `django_comments`.`user_id`, `django_comments`.`user_name`, `django_comments`.`user_email`, `django_comments`.`user_url`, `django_comments`.`comment`, `django_comments`.`submit_date`, `django_comments`.`ip_address`, `django_comments`.`is_public`, `django_comments`.`is_removed` FROM `django_comments` INNER JOIN `django_site` ON (`django_comments`.`site_id` = `django_site`.`id`) GROUP BY `django_comments`.`comment`, `django_site`.`name` ORDER BY `django_comments`.`submit_date` ASC

Russian conversation topic: http://pyha.ru/forum/topic/7913
",adw0rd,None,2012-06-25T19:53:23Z,2014-06-24T06:21:41Z
174,Fixed #17914 — reverse() does not support namespaced view references,"https://code.djangoproject.com/ticket/17914
",bradleyayers,None,2012-06-25T11:49:45Z,2014-06-18T06:22:21Z
173,FormWizard: file_storage exception message and docs,"Small pull request, easy to review and merge.
- Provided error message for `NoFileStorageConfigured`
- Improved docs regarding `file_storage`

New commit 03.07.12:
- Improved docs for `WizardView` methods
",dbrgn,None,2012-06-25T11:01:11Z,2014-07-10T16:09:36Z
172,Fixed #15223 -- Changed is removed messages to unsubcribed in comments a...,"...pp
",ashutosh-dwivedi-e3502,None,2012-06-25T09:40:50Z,2014-07-20T01:28:05Z
171,fix typo/minor bug in JSONResponseMixin example,,gabrielgrant,None,2012-06-24T02:55:47Z,2014-07-20T01:28:06Z
170,Ticket #18054 -- Add deprecation note for contrib.markup,"https://code.djangoproject.com/ticket/18054
",nagisa,None,2012-06-23T14:58:30Z,2014-06-14T17:38:31Z
169,Fixed #17083 -- Allow cached based sessions to use a custom cache backend,"Django currently lacks a way of using a custom cache backend in django.contrib.sessions - it always uses the default backend.

https://code.djangoproject.com/ticket/17083

This commit will default to the ""sessions"" backend, but will fall back to the ""default"" backend, this is similar to  django.contrib.staticfiles behaviour.
",tomkins,None,2012-06-22T23:22:17Z,2014-07-20T01:28:06Z
168,Fixed #11948 -- Added interpolate and project linear referencing methods,,claudep,None,2012-06-21T18:10:21Z,2014-07-04T00:04:34Z
167,Update ref/templates/api.txt,"`django.core.context_processors.tz` was missing from default `TEMPLATE_CONTEXT_PROCESSORS`.
",jnns,None,2012-06-21T09:37:23Z,2014-07-20T01:28:07Z
166,Fixed typo on closing tag in spanish localization that prevents user's admin page from working,"A typo in a closing tag wraps most fields in the user change form inside a link to ""change password"".
",jairtrejo,None,2012-06-20T17:31:00Z,2014-07-20T01:28:07Z
165,Fixed #17988 -- BaseModelFormset now works with commit=False,"Ref: https://code.djangoproject.com/ticket/17988

This pull request implements the suggestion pointed out here: https://code.djangoproject.com/ticket/17988#comment:2

Thanks.
",tuxcanfly,None,2012-06-20T06:27:46Z,2014-07-01T09:49:22Z
164,Fixed #17988 -- BaseModelFormset now works with commit=False,"Ref: https://code.djangoproject.com/ticket/17988

This pull request implements the suggestion pointed out here: https://code.djangoproject.com/ticket/17988#comment:2

Thanks.
",tuxcanfly,None,2012-06-20T06:25:53Z,2014-07-06T03:18:06Z
163,Small doc fix - ``include`` should not have a $ at the end. ,,bmihelac,None,2012-06-19T11:42:19Z,2014-07-20T01:28:08Z
162,Fixed check for table layout in formset js,"Fixed check for table layout, so that the add button is actually wrapped within a tr and td tag if appropriate.

Currently the plugin attempts to check for the tagName on the jQuery object (which will always return undefined), now it uses the jQuery ""is"" method.
",ximi,None,2012-06-19T08:22:27Z,2014-07-20T01:28:09Z
161,Fixed #18414 -- Raise assertion with exists() and sliced query,"Assertion that query hasn't been sliced when calling exists() method.
",errx,None,2012-06-18T22:16:53Z,2014-07-20T01:28:09Z
160,"Fixed 3-letter month names now is 3-letter not four, five.","This allow easy for human fixed date formatting (all date string has same width what make it easy to read - not as before variable length against design).
",ChameleonRed,None,2012-06-18T08:01:16Z,2014-06-21T13:40:06Z
159,Fixed GIS testsuite.,"Moved HAS_SPATIALREFSYS back into the tests namespace since it only operates
on the default database and isn't a global flag like HAS_GDAL.
",apollo13,None,2012-06-17T09:42:13Z,2014-07-20T01:28:10Z
158,Patch for Ticket #13629,"This is a patch and unit test for Ticket #13629 - Admin Changelist: add app-model_name class to <body> tag.
https://code.djangoproject.com/ticket/13629#comment:10
",ekkus93,None,2012-06-17T00:03:12Z,2014-06-26T05:37:52Z
157,Changed setUp/tearDown magic in contrib.auth tests to override_settings.,"This fixes the following bug:

```
<apollo13> I get http://dpaste.org/KhnIK/ since django 1.4 -- the issue is that UserSettingsHolder doesn't pass del on the default_settings it stores
<apollo13> this only surfaces on 1.4 since mYk added override_settings(USE_TZ=False) which does wrap the settings in the UserSettingsHolder
```

While it's not clear how UserSettingsHolder should act in that case, Aymeric said the tests should use override_settings instead.
",apollo13,None,2012-06-16T18:54:14Z,2014-07-20T01:28:10Z
156,Fixed our HTMLParser patches for python 2.7.3,,apollo13,None,2012-06-16T18:52:02Z,2014-06-27T17:39:05Z
155,display a default title for comments in the administration interface to avoid not having any links,,Psycojoker,None,2012-06-15T14:08:34Z,2014-07-20T01:28:11Z
154,Add Lithuania to localflavor,"ID code, Municipalities and Counties.
",nagisa,None,2012-06-14T19:47:46Z,2014-07-20T01:28:11Z
153,Fixed #18110 -- Improve template cache tag documentation,"For me it was not clear that the fragment name cannot be a variable. I just found out by wondering about errors and having a quick look into Django's code. It should be made more clear that the second argument will not be resolved even though all the others will be (even the cache time gets resolved).

""It takes at least two arguments: the cache timeout, in seconds, and the name to give the cache fragment. For example:""

should at least be something like

""It takes at least two arguments: the cache timeout, in seconds, and the name to give the cache fragment. The name will be taken as is, do not use a variable. For example:""

 https://docs.djangoproject.com/en/dev/topics/cache/#template-fragment-caching

https://code.djangoproject.com/ticket/18110
",webjunkie,None,2012-06-14T14:43:06Z,2014-06-26T08:30:28Z
152,Ticket #18471: Implemented localization option in Model fields,"Currently Form fields can be easily localized, but Model fields are not easy to localize. With this modification localization in a model field can be done adding a single parameter in the Model definition this way:

```
class Foo(models.Model)
    price = models.DecimalField(verbose_name='Price', max_digits=20, decimal_places=2, localize=True)
```
",cobalys,None,2012-06-14T02:32:13Z,2014-07-20T01:28:12Z
151,minor documentation fix,"The code in a widget example had a syntax error, so I corrected it.
",tsaylor,None,2012-06-13T18:45:26Z,2014-07-20T01:28:12Z
150,Add CSRF_COOKIE_HTTPONLY config value,"Follow-up of https://github.com/django/django/pull/114

Copied my last comment:

Maybe it makes sense to keep the config value and set it to False by default, otherwise the current CSRF+Ajax recipe in the official Django documentation won't work (https://docs.djangoproject.com/en/dev/ref/contrib/csrf/#ajax) because access to 'document.cookies' is restricted (obviously). Of course there are other ways to do it (like http://erlend.oftedal.no/blog/?blogid=118) but maybe this is worth discussing beforehand.
",saschpe,None,2012-06-12T14:06:28Z,2014-06-14T11:19:55Z
149,fixes https://code.djangoproject.com/ticket/18465,"Correctly configure NLS_SESSION_PARAMETERS to format Date and DateTime with
respect to the Oracle backend.
",jarshwah,None,2012-06-12T10:32:52Z,2014-07-20T01:28:13Z
148,- add support for gdal 1.9,,dgerzo,None,2012-06-10T22:04:29Z,2014-07-20T01:28:13Z
147,url  inconsistency,"according  to admin.site.urls, there should be a tailing '/'.
",fuu,None,2012-06-09T07:41:14Z,2014-07-20T01:28:14Z
146,Fixed #11154 and #17904 -- Inconsistency with permissions for proxy models,"Make sure permissions are associated with the correct
`ContentType` when dealing with proxy models.
",charettes,None,2012-06-09T05:57:36Z,2014-06-13T11:23:42Z
145,#18451 Improved class based view documentation,"Trying to help out @pydanny a little.

Added in some missing docstrings for classes and methods in the generic class-based views.
",kennethlove,None,2012-06-08T16:41:11Z,2014-07-20T01:28:14Z
144,#18451 Improved class based view documentation,"For https://code.djangoproject.com/ticket/18451

Ref Improvements:
- Documentation moved to /ref/class-based-views/ directory.
- Method Resolution Order (MRO) on most views.
- Method flowchart added to many views.
- Mixins moved to their own pages.
- Mixins demonstrate which other Mixins they extend.
- Autodoc added to all views and mixins.
  - Because the Django code does always not contain docstrings, or it is not complete, there remains in many cases the old manual documentation.
  - 'Note' statements placed whenever autodoc is in addition to manual documentation.

Topic Improvements:
- Documentation moved to /topics/class-based-views/ directory.
- Cleaner explanation including additional examples.
- More examples.
- Mixins moved to their own pages.
- Very clean mixin documentation with advocacy for best practices.

Authors:
- Daniel Greenfeld
- James Aylett
- Marc Tamlyn
- Simon Williams
",pydanny,None,2012-06-08T15:40:54Z,2014-07-20T01:28:15Z
143,Documentation for ticket #18134,"Removed the extra ':' from the template examples in the forms
documentation. Noted that the label_tag template tag also outputs the
label_suffix.
",gabejackson,None,2012-06-08T14:56:49Z,2014-07-20T01:28:15Z
142,Fixed #18154 -- Documentation on closing File objects and best practices,,gabejackson,None,2012-06-08T14:36:09Z,2014-07-20T01:28:15Z
141,Fixed #18134 -- Inconsistent label_tag generation on form fields,"There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well. CAUTION: This may be be ""backwards incompatible
change"" because users who have added the label_suffix manually in their
templates may now get double label_suffix characters in their forms.

Also some test cases regarding the label_tag output were inconsistent.
Some expected <label>Label:</label> and some expected the label_suffix
outside of the <label> tag: <label>Label</label>:
The format has now been unified to keep the label_suffix inside the
<label> tag: <label>Label:</label>. If the label_suffix is not needed,
the form can still be constructed with label_suffix=''.
",gabejackson,None,2012-06-08T14:28:04Z,2014-06-17T04:59:17Z
140,Fixed #18154 -- Documentation on closing File objects and best practices,,gabejackson,None,2012-06-08T14:12:39Z,2014-06-13T15:06:02Z
139,Fixed #18450 -- Removed default values for i18n JavaScript URLs in Admin templates,"See https://code.djangoproject.com/ticket/18450 for details
",dhepper,None,2012-06-08T13:44:39Z,2014-06-16T19:17:26Z
138,Fixed #18154 -- Documentation on closing File objects and best practices,,gabejackson,None,2012-06-08T13:43:20Z,2014-06-17T13:45:24Z
137,"Fixed #18444 -- Replace hard coded ""View on Site"" URLs","For details see https://code.djangoproject.com/ticket/18444
",dhepper,None,2012-06-08T10:51:38Z,2014-07-20T01:28:17Z
136,Add ability to pass several signals to `receiver`,"This adds ability to use receiver in the following way:

```
@receiver([post_save, post_delete], sender=MyModel)
def signals_receiver(sender, **kwargs):
    ...
```

Quite often I want to connect both `post_save` and `post_delete` signals
for some particular sender.
",dmedvinsky,None,2012-06-08T10:12:10Z,2014-06-13T04:42:12Z
135,Fixed #18161 changing the determination of redirect url in admin login,"Changed the logic for determination of the redirect URL in admin login to match the logic in the login view, as proposed by andrewgodwin in the ticket #18161
",pvl,None,2012-06-08T10:06:07Z,2014-06-23T02:33:23Z
134,Fixed #17869 - security improvement to RemoteUserMiddleware,"- (On behalf of Paul McMillan) this is a minor security fix so it should be backported to 1.4

Fixed #17869
- RemoteUserMiddleware forces logout when REMOTE_USER header disappears during a same browser session.
- Added a test, and documentation for the 1.4.1 release.
",ghost,None,2012-06-08T10:03:04Z,2014-06-15T07:26:05Z
133,Fixed #16674 -- Pass exceptions to WSGI callback,"This patch is a attempt at making the patch attached to
https://code.djangoproject.com/ticket/16674 more github friendly, and adds
tests.

It passes raised exceptions to the WSGI start_response callback, so that
WSGI middlewares can track, log or otherwise handle excpetions (as is
done in other WSGI compliant applications, and as specified in PEP 3333).

Thanks to ""jamesh"" for the original fix.
",chrisglass,None,2012-06-08T09:51:43Z,2014-06-21T23:55:45Z
132,Fixed #18056 - Cleared aggregations on DateQuery.add_date_select,"Cleared aggregations on add_date_select method so only distinct dates are returned when dealing
with a QuerySet that contained aggregations. That would cause the query set to return repeated
dates because it would look for distinct (date kind, aggregation) pairs.

Tests pass on sqllite.
",nmfm,None,2012-06-08T09:37:05Z,2014-07-03T03:29:17Z
131,Fixed #18161 - Redirection url determination in the admin login with same logic as in the login view,"Fix for #18161 with the strategy proposed by andrewgodwin that uses in the admin login the same logic for determination of the redirection url as used in the login view
",pvl,None,2012-06-08T09:08:19Z,2014-06-12T17:53:26Z
130,Fixed #17888 -- removed a bare except: statement,"CheckboxInput no longer swallows exceptions when calling check_test()

See https://code.djangoproject.com/ticket/17888

This should be a proper pull request after an attempt in #125
",brutasse,None,2012-06-07T21:28:17Z,2014-07-01T17:58:03Z
129,Add py3k compatibility layer for string/int types,"See also ticket https://code.djangoproject.com/ticket/18443
",claudep,None,2012-06-07T18:41:00Z,2014-07-01T07:45:40Z
128,Form topic documentation work,"I revised the text in the 'Using a form in a view' section to make it more readable.
",audreyfeldroy,None,2012-06-07T18:08:37Z,2014-06-24T08:55:09Z
127,"Fixed #18433 -- Fixed ""View on Site"" link in inline admin for models with custom PK",,dhepper,None,2012-06-07T17:55:23Z,2014-06-19T09:11:27Z
126,fix for #18432,"and PEP8 compliance in those files
https://code.djangoproject.com/ticket/18432
",JannKleen,None,2012-06-07T16:43:27Z,2014-07-20T01:28:20Z
125,Fixed #17888 -- removed a bare except: statement,"CheckboxInput no longer swallows exceptions when calling check_test()

See https://code.djangoproject.com/ticket/17888
",brutasse,None,2012-06-07T16:14:59Z,2014-06-13T15:45:06Z
124,Fixes #16855,"https://code.djangoproject.com/ticket/16855
",oinopion,None,2012-06-07T15:57:36Z,2014-06-13T17:25:06Z
123,Don't escape object ids when passing to the contenttypes.shortcut view.,"See https://code.djangoproject.com/ticket/18381 for details.
",apollo13,None,2012-06-07T15:37:04Z,2014-06-30T09:31:45Z
122,fix bad locale names in doc,"https://code.djangoproject.com/ticket/18442
",jakul,None,2012-06-07T15:25:09Z,2014-06-17T04:43:32Z
121,Trac #17181 - Allow for specifying multiple locales and domains for makemessages and compilemessages commands,"option to pass in multiple locales to the compilemessages command, and multiple locales and multiple domains to the makemessages command

https://code.djangoproject.com/ticket/17181

I've updated the existing patch (from the ticket), so that it applies cleanly. I've added tests and docs.

Let me know if this is up to scratch!
",jakul,None,2012-06-07T15:14:26Z,2014-06-13T11:04:35Z
120,Added documentation for patch in #16817 ,"Included the patch in #16817 and added documentation for using coverage installation and use (also based on the documentation work of krzysiumed in #4501)
",pvl,None,2012-06-07T15:02:58Z,2014-06-16T22:27:15Z
119,Fixed #18154 -- Documentation on closing File objects and best practices,,gabejackson,None,2012-06-07T12:13:34Z,2014-07-20T01:28:24Z
118,Fixed #18145 -- Improved documentation of unique_together type fields,,raulcd,None,2012-06-07T11:48:24Z,2014-07-20T01:28:25Z
117,Fixed #18380 -- Improve installation instructions for MySQLdb,,juanriaza,None,2012-06-07T11:35:49Z,2014-07-20T01:28:25Z
116,Fixes #17933,"added link to check out documentation to ""Writing documentation"" page

One can argue about placing this information on the bottom of the page to ensure that possible contributors read the docs first. One the other hand checking out the code is the first step to get started.
",westfeld,None,2012-06-07T10:53:33Z,2014-06-16T04:22:16Z
115,Added to the documentation the django.test.Client.defaults definition.,,raulcd,None,2012-06-07T09:16:10Z,2014-06-20T16:47:31Z
114,Add CSRF_COOKIE_HTTPONLY config value,"Fixes #15808, even if there is also strict referer checking in place, better safe than sorry.
",saschpe,None,2012-06-06T09:16:55Z,2014-06-16T22:27:18Z
113,Database indexes for some of contrib.auth.models.User fields,"It is not a very quick operation: iterate over users table with some joins within. For example, code like this will works slow, because it iterates over a whole `auth_user` table firstly (checked at MySQL):

```
permission = Permission.objects.get(…)
slow_query_is_here = User.objects.filter(Q(is_staff=True),
    Q(user_permissions=permission) | Q(groups__permissions=permission)).distinct()
```

Database indexes for fields `is_staff`, `is_active` and `is_superuser` helps here and in the similar queries.
",svartalf,None,2012-06-06T03:51:16Z,2014-07-20T01:28:26Z
112,fix of ticket #17804,"modified admin CSS + admin widgets + BaseModelAdmin class
",bohyn,None,2012-06-05T11:35:31Z,2014-07-20T01:28:27Z
111,Don't mention 'media' as a subdomain when talking about static files. Se...,"...e https://code.djangoproject.com/ticket/18397.
",littke,None,2012-06-05T07:58:04Z,2014-07-06T03:43:59Z
110,Add support for tox (http://tox.testrun.org/) and Travis CI (http://travis-ci.org/),"You might want to cherry-pick around the Travis commit if you think http://ci.django-cms.org/ is good enough and Travis doesn't add anything. Arguably, having more testing is better. OTOH, arguably having two build systems that yell at you when something breaks could be annoying.

As an example, here's the build status for my fork: [![Build Status](https://secure.travis-ci.org/msabramo/django.png?branch=testing)](http://travis-ci.org/msabramo/django) -- http://travis-ci.org/msabramo/django

[Tox](http://tox.testrun.org/) is pretty neat though because you can run it on your local tree on uncommitted stuff, so you can catch errors before you push them and have the builds fail.
",msabramo,None,2012-06-04T21:02:55Z,2014-06-20T08:53:29Z
109,Fix test error.,"See http://ci.django-cms.org/job/Django/database=sqlite3,python=python2.6/1210/
",apollo13,None,2012-06-04T11:25:21Z,2014-06-18T18:39:32Z
108,#15231: Replaced admin's datetime shortcut JS by a jQuery plugin for more performance.,"https://code.djangoproject.com/ticket/15231

I've attached updated patches to the ticket for the 1.4 master (this pull request) and the 1.4 stable branch.

Cheers, Fabian
",fabianbuechler,None,2012-06-04T08:23:26Z,2014-06-16T08:29:12Z
107,Addresses #17496 and adds a no_index option to ModelAdmin,"Adds, documents and tests a fix for #17496 which adds a new option
to ModelAdmin called no_index, which when set to True, will exclude
that Model from being displayed in the AdminSite's indexes (both
the primary index and the app-level index).

For convenience: https://code.djangoproject.com/ticket/17498
",samuraisam,None,2012-06-04T02:34:14Z,2014-06-19T12:02:22Z
106,Fixed #17138 -- Made the sensitive_variables decorator work with object ...,"...methods.
",jphalip,None,2012-06-04T00:34:21Z,2014-07-20T01:28:28Z
105,Fixed #17485 -- Made defer work with select_related.,"Calling select_related on a deferred field now results in an exception.
Thanks to Andrei Antoukh and Anssi Kääriäinen for review.

See https://code.djangoproject.com/ticket/17485 for discussion.
",koniiiik,None,2012-06-04T00:00:09Z,2014-06-14T22:58:53Z
104,Remove the summary attribute of the table,"In the discussion here: https://code.djangoproject.com/ticket/17138
it was decided that using the caption for this previously
non-visible part of the table element was not semantic, this patch
moves that summary to the `title` attribute of the `a` tag which 
when hovered over, on most browsers, will show the text.
",samuraisam,None,2012-06-03T19:45:46Z,2014-07-20T01:28:29Z
103,"GeoIPException is not imported, so use generic Exception class","When using GeoIP without defining the GeoIP library path, an exception is thrown. However, an incorrect exception class is used an the real exception is hidden.

Expected result:

```
Exception at /test/geoip/
Could not find the GeoIP library (tried ""GeoIP""). Try setting GEOIP_LIBRARY_PATH in your settings.
Request Method: GET
Request URL:    http://localhost:8000/test/geoip/
Django Version: 1.4
Exception Type: Exception
Exception Value:    
Could not find the GeoIP library (tried ""GeoIP""). Try setting GEOIP_LIBRARY_PATH in your settings.
```

Actual result:

```
NameError at /test/geoip/
name 'GeoIPException' is not defined
Request Method: GET
Request URL:    http://localhost:8000/test/geoip/
Django Version: 1.4
Exception Type: NameError
Exception Value:    
name 'GeoIPException' is not defined
Exception Location: /django/contrib/gis/geoip/libgeoip.py in <module>, line 22
```
",Bouke,None,2012-06-03T09:59:17Z,2014-06-12T07:06:55Z
102,Ticket17932,"Fixed problem with test failing under Oracle, due to a column named 'date' in the Event model causing a problem with trigger creation during syncdb.
",vsajip,None,2012-06-02T13:10:02Z,2014-06-16T10:22:16Z
101,Fixed #18409 -- Made RegexField work with unicode characters.,,jphalip,None,2012-05-31T18:47:39Z,2014-06-30T14:39:56Z
100,modified ModelFormMixin.get_success_url to check for self.object,"I hit an error today where my view was trying to call get_success_url() on ModelFormMixin, with success_url set, but without self.object being present. This will fall back to a static url if self.object isn't available.
",jacobh,None,2012-05-31T15:03:51Z,2014-07-20T01:28:30Z
99,"Docs: ""Form in a view"" example doesn't use RequestContext","Used the `render` shortcut in the ""using a form in a view"" example to ensure that the CSRF is properly enabled.
",danielroseman,None,2012-05-31T15:03:22Z,2014-06-26T09:15:22Z
98,Fixed #18399 – Add a `for_concrete_model` kwarg to `ContentTypeManager.get_for_models?`,"Is is now possible to retrive `ContentType` instances associated with proxy models using those methods.
",charettes,None,2012-05-29T21:58:11Z,2015-07-10T02:51:08Z
97,Ticket #18401 -- Refactored db cache backend to use ORM,,akaariai,None,2012-05-29T21:45:58Z,2014-07-10T03:36:00Z
96,Docs correction and clarification.,"Docs refers 'variable' objects instead of 'mutable' objects and thread
safety between class based views is not enough clear.

See #91 (I hope this time is correct enough).
",rafaduran,None,2012-05-28T20:52:46Z,2014-07-20T01:28:32Z
95,Csrf Enhancements,"Pull request for GSoC project on Security Enhancements. This doesn't need to be merged anytime soon.
",crodjer,None,2012-05-28T19:50:23Z,2014-06-13T23:08:55Z
94,Fixed #18393 -- Prevented blocktrans to crash when a variable name is ba...,"...dly formatted.
",jphalip,None,2012-05-28T18:05:16Z,2014-06-27T04:40:43Z
93,Ticket #16047: fix autocommit restore on psycopg2,"When using autocommit on psycopg2 the autocommit was never restored into use after first using a transaction managed block. In addition autocommit incorrectly reported the backend to not support transactions.

There are a couple of failing tests when running under psycopg2 with autocommit enabled in select_for_update tests. Those can be fixed in another commit.

I added a note in the release notes about this fix. Even if this is just a bugfix, it could have hard to find out effects for users who have autocommit enabled, so a little note in release notes seemed wise.
",akaariai,None,2012-05-26T23:32:21Z,2014-07-20T01:28:33Z
92,Refactor the empty/full result logic in WhereNode.as_sql(),"Made sure the WhereNode.as_sql() handles various EmptyResultSet and
FullResultSet conditions correctly. Got rid of the FullResultSet
exception class. It is now represented by '', [].

I will commit this patch in a couple of days if nobody objects.
",akaariai,None,2012-05-26T04:36:48Z,2014-06-15T07:00:13Z
91,Docs correction and clarification.,"Docs refers 'variable' objects instead of 'mutable' objects and thread
safety between class based views is not enough clear.
",rafaduran,None,2012-05-25T16:12:41Z,2014-06-30T15:34:10Z
90,Fix qs.order_by() join promotion for already existing joins,"When order_by causes new joins to be added to the query, the joins must
be LEFT OUTER joins for nullable relations, otherwise the order_by
could cause the results to be altered. This commit fixed the logic to
only promote new joins, previously all applicable joins were promoted.

Thanks to Bruno Desthuilliers for spotting this corner case.
",akaariai,None,2012-05-23T20:31:20Z,2014-07-16T22:13:14Z
89,Add documentation about python3 compatibility,,claudep,None,2012-05-23T09:58:29Z,2014-06-13T11:59:35Z
88,Fixed inaccuracy in runserver outpout.,"Using runserver looks like:

```
>>> ./manage.py runserver
Validating models...

0 errors found
Django version 1.4, using settings 'test_project.settings'
Development server is running at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
```

The problem is that if the port is already bound, it will look like:

```
>>> ./manage.py runserver
Validating models...

0 errors found
Django version 1.4, using settings 'test_project.settings'
Development server is running at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
Error: That port is already in use.
```

Which misleads the system administrator who may think that runserver
double bound that port.

With this patch, it looks like:

```
>>> ./manage.py runserver
Validating models...

 0 errors found
 Django version 1.5.dev20120521232858, using settings 'test_project.settings'
 Development server is starting at http://127.0.0.1:8000/
 Quit the server with CONTROL-C.
 Error: That port is already in use.
```

Which is accurate.

Credit to William Waisse for reporting the issue.
",jpic,None,2012-05-22T09:33:28Z,2014-06-16T13:43:30Z
87,"Language codes can include numbers, e.g. es-419 is Spanish for LatAm and...","... Carribean.

Sorry I didn't add a test-case or anything else, but the test case is that 

parse_accept_lang_header('es-419') would result in (('es-419', 1.0),) or something ;)
",davedash,None,2012-05-21T19:42:44Z,2014-06-13T16:28:32Z
86,Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.,"In Python 3, all strings without prefix are considered Unicode.
Importing unicode_literals mimics this behavior in Python 2,
rendering the code more Python 3 compatible.
",claudep,None,2012-05-21T17:39:42Z,2014-06-23T00:37:46Z
85,Docs correction and clarification.,"Docs refers 'variable' objects instead of 'mutable' objects and thread
safety between class based views is not enough clear
",rafaduran,None,2012-05-21T09:59:05Z,2014-06-13T09:24:57Z
84,failing test case and fix for 18356 test client context lost for nested views,"Link to ticket: https://code.djangoproject.com/ticket/18356
",bmihelac,None,2012-05-20T16:07:56Z,2014-07-20T01:28:35Z
83,Fixed #18408 -- Flatpages tests expect example.com for site 1,"Resolves a couple of issues with running Flatpages tests by...
- Creating an example_site fixture
- Overriding project SITE_ID setting to 1
- Normalizing the use of the hardcoded (1) site_id to settings.SITE_ID
",datajockey,None,2012-05-20T02:06:57Z,2014-07-10T03:36:13Z
82,Fixed #18347 -- Wrapped raw identity inserts in tests.,"Added enable_identity_insert, disable_identity_insert, and
contextmanager identity_insert_enabled to DatabaseOperations for
database backends that need to take special actions to allow
identity inserts.

All raw insert statements that set a value in to the identity field
should include these guards to allow all database backends to
function.
",manfre,None,2012-05-18T22:50:40Z,2014-06-21T16:19:07Z
81,Fixed typo on GeoQuerySet.geohash method.,"Changed preceison parameter to precision
",glenrobertson,None,2012-05-18T21:56:59Z,2014-07-20T01:28:36Z
80,Ticket #18343 -- Cleaned up deferred model implementation,"Removed some dead-code, and some dump logic in deferred field loading
and deferred model **reduce**(). The biggest user visible change is
that primary keys do not need fetching from the DB in some inheritance
cases.

All tests pass on SQLite.
",akaariai,None,2012-05-18T13:22:48Z,2014-06-26T00:46:07Z
79,remove mention of djangoproject.com from cbv topic,"The class based views topic mentions that the djangoproject.com weblog
is built using the date-based generic views, but looking at the code,
it actually uses the deprecated pre-1.3 function based generic views.
",stratoukos,None,2012-05-18T10:28:32Z,2014-06-16T03:54:26Z
78,Improvements to contrib.sessions,#NAME?,crodjer,None,2012-05-18T07:59:28Z,2014-06-14T02:31:46Z
77,ticket 18337 - django.forms.BoundField should be injectable within django.forms.Form,"In order to keep the label html in the BoundField? and the widget html in the widget and to allow a mechanism for adding wrapping html to a field widget it would seem elegant to allow access to BoundField? by making BoundField? an overridable property in the django.forms.BaseForm? class in the same way the widget property is overridable in the Field class.

https://code.djangoproject.com/ticket/18337
",eamonnfaherty,None,2012-05-17T23:19:58Z,2014-06-12T21:29:19Z
76,FormWizard documentation didn't load i18n,"Added load i18n code to the base wizard form template documentation as it uses the trans tag.
",jcowgar,None,2012-05-17T22:57:51Z,2014-07-20T01:28:38Z
75,Added a missing template tag load statement in the formtools emample wizard.,"Ref [ticket #18335](https://code.djangoproject.com/ticket/18335).
",charettes,None,2012-05-17T20:11:38Z,2015-07-10T02:51:07Z
74,Stable/1.4.x - Backport for #18135 -- Sleeping Database Connections on Startup with MySQL,"This is a fix for #18135, which was closed before the patches were applied. I have tested and the DB connections are properly closed.
",newmaniese,None,2012-05-16T23:26:48Z,2014-06-18T18:39:28Z
73,Stable/1.3.x - Backport for #18135 -- Sleeping Database Connections on Startup with MySQL,"This is a fix for #18135, which was closed before the patches were applied. I have tested and the DB connections are properly closed.
",newmaniese,None,2012-05-16T23:26:12Z,2014-06-15T18:45:16Z
72,Stable/1.3.x - Backport for #18135 -- Sleeping Database Connections on Startup with MySQL,"This is a fix for #18135, which was closed before the patches were applied. I have tested and the DB connections are properly closed.
",newmaniese,None,2012-05-16T23:23:50Z,2014-07-09T15:24:45Z
71,"Fix for #18135, Sleeping DB connections in MySQL","This is a fix for #18135, which was closed before the patches were applied. I have tested and the DB connections are properly closed.
",newmaniese,None,2012-05-16T23:22:52Z,2014-07-20T01:28:40Z
70,Make sure these functions don't bleed into the global scope,"This makes sure that all of these functions are assigned to variables 
assigned to the current scope, rather than the global scope.  It also adds a
trailing semi-colon to make sure various linters are happy.
",tswicegood,None,2012-05-16T18:36:00Z,2014-06-25T11:54:32Z
69,Fixed error message in detail generic view.,,mitar,None,2012-05-16T16:09:36Z,2014-07-20T01:28:40Z
68,Fixing my e-mail duplicates in the AUTHORS.,,BooBSD,None,2012-05-16T15:47:55Z,2014-06-29T00:31:41Z
67,"[PATCH] issue #13844 ""Errors when using character fields for aggregation""","https://code.djangoproject.com/ticket/13844

This patch solves the issue by using Field.to_python() to do conversion, instead of having dispatching logic in the database operations layer.

50edfe68    adds a regression test which specifically addresses #13844;
b0bdaf4b   removes the conversion logic from BaseDatabaseOperations, dispatching it to Field.to_python() instead.
",valhallasw,None,2012-05-16T10:39:58Z,2014-07-01T22:31:17Z
66,Fixed #18254 -- Add support for `as <varname>` to the staticfiles {% sta...,"Ticket: https://code.djangoproject.com/ticket/18254

This is a posible solution.
",niwinz,None,2012-05-15T21:06:15Z,2014-07-13T19:41:51Z
65,Fixed #18306 -- Deferred models should automatically issue update_fields...,"Ticket: https://code.djangoproject.com/ticket/18306

Is an initial patch, run all test cases mentioned in the ticket.
I added documentation, where I felt I should be, but I'm not sure.

The only thing not clear to me, as it should behave `_state.update_fields`.
- Normal case, save all fields -> this attribute must be `None` (or all fields?)
- In all other cases, filled with the result of `update_fields`.
",niwinz,None,2012-05-15T17:26:33Z,2014-07-20T01:28:41Z
64,#17890: added support for extra_context in django.contrib.admin.site.password_change,"Allows for extra_context to be passed in to the method password_change in django.contrib.admin.site

""python runtests.py --settings=test_sqlite"" passes all tests.
",stephenmuss,None,2012-05-14T12:17:20Z,2014-06-12T04:56:32Z
63,Fixed #17257 -- Comment that contradicts code in django.contrib.syndication.views,"Easy picking ticket and testing how this github workflow works out ;)
",httpdss,None,2012-05-13T20:00:08Z,2014-06-26T13:15:06Z
62,"Bigint AutoField (fixes #56, #13774)","Alternative approach to fix ticket 56.
Based on discussion  https://github.com/django/django/pull/49
This approach doesn't change AutoField behavior. Only those who need extended int range may use it.
It keeps values ranges consistent between databases. Also it works nice with related fields.
",pzinovkin,None,2012-05-13T12:00:57Z,2014-06-14T19:44:06Z
61,Optimize MySQL model.save() in inheritance cases,"MySQL generated non-necessary queries when saving a multitable
inherited model, and when the save resulted in update.

This issue is tracked in ticket #18304
",akaariai,None,2012-05-12T10:07:02Z,2014-06-12T06:11:50Z
60,Taking a stab at #16882. Clarify why you shouldn't leave the init_command in,,programmerq,None,2012-05-11T22:59:53Z,2014-07-20T01:28:43Z
59,This change matches Django's slice filter to be consistent with extended slice syntax.,"Before:

slice_filter(['a','b','c'], ""::2"") == ['a','b','c'][::2]
slice_filter(['a','b','c'], "":2"") == ['a','b','c'][:2]
slice_filter(['a','b','c'], ""2"") != ['a','b','c'][2]

After:

slice_filter(['a','b','c'], ""::2"") == ['a','b','c'][::2]
slice_filter(['a','b','c'], "":2"") == ['a','b','c'][:2]
slice_filter(['a','b','c'], ""2"") == ['a','b','c'][2]

A consequence of this change is that existing templates that make use of foobar|slice:int will no longer produce the same result, though I'd argue that the above change is closer in line with what people might expect.
",bradbeattie,None,2012-05-11T21:23:09Z,2014-07-20T01:28:43Z
58,Changes Django's slice filter to be consistent with extended slice syntax,"This change matches Django's slice filter to be consistent with extended slice syntax.

Before:

slice_filter(['a','b','c'], ""::2"") == ['a','b','c'][::2]
slice_filter(['a','b','c'], "":2"") == ['a','b','c'][:2]
slice_filter(['a','b','c'], ""2"") != ['a','b','c'][2]

After:

slice_filter(['a','b','c'], ""::2"") == ['a','b','c'][::2]
slice_filter(['a','b','c'], "":2"") == ['a','b','c'][:2]
slice_filter(['a','b','c'], ""2"") == ['a','b','c'][2]

A consequence of this change is that existing templates that make use of foobar|slice:int will no longer produce the same result, though I'd argue that the above change is closer in line with what people might expect.
",bradbeattie,None,2012-05-11T21:05:24Z,2014-07-13T16:48:07Z
57,Fixed #18251 -- Removed a deadlock possibility in apploading,"Thanks to harm for the report and comments.

Note: the patch does not contain tests as this is hard to test using unittests. There is a test project in the ticket, use that instead.
",akaariai,None,2012-05-11T16:45:08Z,2014-06-21T12:50:45Z
56,scriptname feature,"This adds a feature for the runserver command to run under a scriptname.
This is usefull when testing if your website works also well if it is not mounted as / on the webserver.
",pvanderlinden,None,2012-05-10T15:09:53Z,2014-07-09T20:45:49Z
55,All Canadian localflavour form errors should be translatable strings.,"Trac ticket: https://code.djangoproject.com/ticket/18298
",tylerball,None,2012-05-10T15:09:47Z,2014-06-15T18:45:20Z
54,Errors in russian localization of filesizeformat,,ei-grad,None,2012-05-10T12:09:33Z,2014-06-20T18:30:22Z
53,Using Unicode.translate to speed up html and js escaping,"Django is currently making use of inefficient repeated called to .replace() to perform html and js string escaping. Given that these functions are used all over the codebase, and typically called a hundred or so times per request, this is a sweet spot for some simple optimisation.

By replacing the repeated .replace() calls with a single call to .translate(), we improve efficiency with no side-effects (so far as I can see). All tests pass, certainly.

A discussion on the relative benefits of .replace() versus .translate() can be found here:

http://stackoverflow.com/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python

(Benchmarks in the top answer)
",etianen,None,2012-05-10T11:30:11Z,2014-07-02T22:06:09Z
52,Ticket/16418,"Solves #16418 by explicitly checking for subclasses not assuming anything with a `_meta` or `model` attribute is a Model or QuerySet subclass.
",dstufft,None,2012-05-09T22:03:03Z,2014-06-26T12:37:25Z
51,Add a {% verbatim %} template tag.,"Fixes #14502.
",SmileyChris,None,2012-05-09T00:34:06Z,2014-06-12T20:52:43Z
50,Comment._get_userinfo thread safe,"This pull request is a small fix for Comment._get_userinfo of the django.contrib.comments app. The code was not re-entrant, normally this should not required but I had to fix it because of this other issue in django-debug-toolbar: https://github.com/django-debug-toolbar/django-debug-toolbar/issues/281
",duilio,None,2012-05-08T15:28:58Z,2014-06-12T12:09:36Z
49,Ability to make id column unsigned.,"https://code.djangoproject.com/ticket/56
",pzinovkin,None,2012-05-07T18:18:09Z,2014-06-12T19:34:46Z
48,Fixed total_ordering for Python < 2.7.2,"The total_ordering of Python versions prior to 2.7.2 is buggy, and
this caused an infinite recursion. Use the borrowed total_ordering
for all Python versions prior to 2.7.2.
",akaariai,None,2012-05-07T17:43:08Z,2014-07-01T20:26:34Z
47,Add link after URLField on admin widget (#17549),"Also updated file to follow PEP8 recommendations (2 breaklines before class definitions).
",rpedigoni,None,2012-05-06T03:32:53Z,2014-06-18T17:54:22Z
46,Ticket #14030 - Refactor Aggregate to use ExpressionNodes,"This patch refactors Aggregate into ExpressionNode, allowing for total composability of the two.

My original announcement was in this email to the developers list, and more detail can be found there:

http://groups.google.com/group/django-developers/browse_thread/thread/3d3aba985cd8471f/98618f82b635806a
",natebragg,None,2012-05-05T12:12:58Z,2014-06-17T18:10:31Z
45,"Truncate tables at the end of a TransactionTestCase run, rather then before.","This allows for abritrary test order execution.

Ticket: https://code.djangoproject.com/ticket/18271
django-developers discussion: http://groups.google.com/group/django-developers/browse_thread/thread/3df2b4926eba08d2?hl=en
",pelme,None,2012-05-04T07:05:38Z,2014-06-15T10:25:02Z
44,add more warnings.simplefilter calls.,"This is a follow up to 00c0d3c44ebc4e3461653ec96cd47023cc0a6e5b
which still caused 4 test failures on my machine.
",apollo13,None,2012-05-03T19:28:00Z,2014-06-22T13:30:17Z
43,Fix issue #18267 - document `settings.configured` property.,"https://code.djangoproject.com/ticket/18267
",techtonik,None,2012-05-03T18:53:50Z,2014-06-24T02:30:55Z
42,Adding MXSocialSecurityNumberField to local flavor,"Adding MXSocialSecurityNumberField to local flavor
",gerardo-orozco,None,2012-05-03T18:04:46Z,2014-06-14T16:32:47Z
41,Ticket #4102 - Allow UPDATE of only specific fields in model.save(),"https://code.djangoproject.com/ticket/4102
",niwinz,None,2012-05-03T15:31:54Z,2014-06-25T00:05:37Z
40,Travis CI,"![love](http://images.wikia.com/half-life/en/images/3/30/Companion_Cube_p2.png)
",ken-reitz,None,2012-05-03T10:33:37Z,2014-07-20T01:28:49Z
39,Make sure ContentTypeManager returns the correct ContentType for proxy models,"This is a pull request for ticket #17648
",charettes,None,2012-05-02T21:17:14Z,2015-07-10T02:51:03Z
38,Make sure model fields can be compared to other objects,"Pull request for ticket #17851
",charettes,None,2012-05-02T20:54:08Z,2015-07-10T02:51:06Z
37,Fixed #18225 -- Staticfiles template tag does not fail silently,"static template tag now returns an empty string if the file was not found.
",MoritzS,None,2012-05-02T19:24:01Z,2015-09-17T10:19:35Z
36,Fixed #17966 -- 'AttributeError: AUTH_PROFILE_MODULE' when running tests,"Removed all the code which checks for `settings.AUTH_PROFILE_MODULE` and replaced with an extra kwarg on the `override_settings` decorator. Net effect is about 20 fewer lines and the test now passes.
",robgolding,None,2012-05-01T19:51:32Z,2014-07-03T02:46:53Z
35,Fixed #18182 -- Raw password echoed on authentication if no hashing used,"contrib.auth.hashers.is_password_usable now checks if the encoded string
contains a $ character. For backward compatibilty to unsalted md5 hashes all
encoded 32-character-long strings without a $ character are assumed to be
usable. check_password won't return True for a 32-character-long plain
password, though.
",MoritzS,None,2012-05-01T14:36:29Z,2015-09-17T10:18:26Z
34,Fixed #18182 -- Raw password echoed on authentication if no hashing used,"contrib.auth.hashers.is_password_usable now checks if the encoded string
contains a $ character. For backward compatibilty to unsalted md5 hashes all
encoded 32-character-long strings without a $ character are assumed to be
usable. check_password won't return True for a 32-character-long plain
password, though.
",MoritzS,None,2012-05-01T13:51:16Z,2014-07-20T01:28:51Z
33,Ticket #4102 - Allow UPDATE of only specific fields in model.save(),"This is a previous closed pull request (#4) in unique commit.
",niwinz,None,2012-05-01T12:22:44Z,2014-07-20T01:28:51Z
32,Fix proxy model Query.remove_inherited_models(),"Fixed #18248 -- proxy models were added to included_inherited_models
in sql.query.Query. The variable is meant to be used for multitable
inheritance only. This mistake caused problems in situations where
proxy model's query was reused.
",akaariai,None,2012-05-01T05:25:11Z,2014-06-18T02:18:04Z
31,Add @gsong to AUTHORS,"See https://code.djangoproject.com/ticket/10931 for my contribution.
",gsong,None,2012-05-01T03:11:42Z,2014-07-20T01:28:52Z
30,Add a warning to the session doc about size of the table.,"This table can be large, and it might cause your database to become unhappy if you run it when you have, say, multiple million stale sessions in it.
",ericholscher,None,2012-04-30T22:23:14Z,2014-07-20T01:28:52Z
29,Skip model validation when models are known good.,"In some situations Django calls model validation when the models are
already known good. This is most visible in tests, which use flush
and loaddata commands. This resulted in around 10% overhead when
running tests under sqlite.
",akaariai,None,2012-04-30T19:58:46Z,2014-07-04T02:27:25Z
28,Ticket 18163 - use faster password hasher in tests.,,akaariai,None,2012-04-30T19:11:57Z,2014-06-14T11:21:45Z
27,Add @leereilly to contributor list.,"I made a contribution via GitHub ~ 11 months ago that was merged into the old SVN repo. See the commit message at https://code.djangoproject.com/changeset/16324 for verification. It was issue #24 on django/django SVN clone:

![](https://img.skitch.com/20120430-quqk1yb5g72e72kpyrxxut6uqh.png)

Cheers,
  Lee :beers:
",leereilly,None,2012-04-30T17:02:37Z,2014-07-08T02:30:32Z
26,docs: It's rsync_project not rysnc_project,,kylef,None,2012-04-30T11:53:39Z,2014-07-20T01:28:54Z
25,Made get_indexes() consistent across backends.,"Fixed #15933, #18082 -- the get_indexes() method introspection was
done inconsitently depending on the backend. For example SQLite
included all the columns in the table in the returned dictionary,
while MySQL introspected also multicolumn indexes.

All backends return now consistenly only single-column indexes.

Thanks to andi for the MySQL report, and ikelly for comments on
Oracle's get_indexes() changes.
",akaariai,None,2012-04-30T11:36:48Z,2014-06-14T10:54:24Z
24,Removed 'return false' in favor of preventDefault.,"Using 'return false' makes it very difficult to add additional event handlers to the add button because it prevent the events from bubbling up; preventDefault appears to be the desired behavior.

Also, other various js fixes like === instead of ==, missing parseInt radix, and missing semi colons

[https://code.djangoproject.com/ticket/18241](https://code.djangoproject.com/ticket/18241)
",marcneuwirth,None,2012-04-30T01:54:06Z,2014-06-13T19:52:48Z
23,Fixed Oracle's multicolumn index introspection,"Fixed #18082 -- Oracle's introspection.get_indexes() got confused
when there were multiple indexes containing the same column at
position 1. Skip all multicolumn indexes like on other databases.
",akaariai,None,2012-04-29T17:24:09Z,2014-06-15T02:48:01Z
22,Added regression test for #17967.,"@aaugustin Here's a regression test for #17967. Hope it's okay.
",aviraldg,None,2012-04-29T12:00:20Z,2014-06-12T07:07:22Z
21,Simplified QuerySet field.null handling,"QuerySet had previously some complex logic for dealing with nullable
fields in negated add_filter() calls. It seems the logic is leftover
from a time where the WhereNode wasn't as intelligent in handling
field__in=[] conditions.

All tests passed on SQLite. I believe all tests should pass on other
backends, too.

The reason why this should be fixed is that it is very hard to see what
is happening in the negated field.null case currently. I hope this patch
makes the logic and why the condition is added clearer
",akaariai,None,2012-04-29T11:46:24Z,2014-06-14T00:22:20Z
20,"Fixed template syntax error, introduced in pull request #17",,yumike,None,2012-04-29T07:04:05Z,2014-06-24T07:06:43Z
19,Prevent Oracle from changing field.null to True,"Fixed #17957 -- when using Oracle and character fields, the fields
were set null = True to ease the handling of empty strings. This
caused problems when using multiple databases from different vendors,
or when the character field happened to be also a primary key.

The handling was changed so that NOT NULL is not emitted on Oracle
even if field.null = False, and field.null is not touched otherwise.

Thanks to bhuztez for the report, ramiro for triaging & comments and
ikelly for the patch.
",akaariai,None,2012-04-29T02:58:38Z,2014-07-12T04:24:13Z
18,"Fixed #18233: Raise IOError if destination file already exists, in django.core.files.move.file_move_safe.","On certain platforms like Linux, the existing code will simply ignore `allow_overwrite` and go ahead and overwrite the destination file anyway. This fixes it.

ps. This is also my first contribution to Django :)
",aviraldg,None,2012-04-29T02:45:22Z,2014-06-14T07:40:50Z
17,"Fixed #17967: Hide ""Change Password"" link in admin if user.has_usable_password is False.",,aviraldg,None,2012-04-29T02:07:38Z,2014-06-13T06:03:43Z
16,Made table_names() output sorted.,"Fixed #18218 -- previously Django's introspection table_names() and
get_table_list() methods did not sort the output consistently. This
resulted in random order of inspected models.

This commit also removed all external usages of get_table_list().
table_names() should be used instead.

Thanks to claudep for patch and report.
",akaariai,None,2012-04-28T23:28:39Z,2014-07-12T04:43:39Z
15,Fix bullet formatting for README.rst.,"Leading whitespace was causing the bullet lists to turn into [block quotes](http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#block-quotes).
",jasondavies,None,2012-04-28T20:23:11Z,2014-07-20T01:28:57Z
14,i18n javascript_catalog Reference Error,"This pull request corresponds to [Trac ticket 18232](https://code.djangoproject.com/ticket/18232)

> The get_format JavaScript function references an undefined variable (`msgid`). I believe the intent was to return the argument (`format_type`).
",matthewwithanm,None,2012-04-28T19:56:47Z,2014-06-15T19:19:41Z
13,i18n javascript_catalog View Pollutes Global Namespace,"This pull request corresponds to [Trac Ticket number 18231](https://code.djangoproject.com/ticket/18231)

> In addition to the translation functions (`gettext`, `ngettext`, etc.), the global variables catalog and formats are created. These variables are required to exist and be in the correct format in order for the translation functions to work.
> 
> Seeing as how these are common words, with a relatively high likelihood of being clobbered, I propose we use the module pattern (an immediately invoked function).
> 
> This patch also uses vanilla objects for `catalog` and `formats` as those are the preferred type for dictionaries in JavaScript.
",matthewwithanm,None,2012-04-28T19:48:22Z,2014-06-12T19:45:09Z
12,Break-out password reset confirmation so that it is re-usable.,"See also: https://code.djangoproject.com/ticket/18170
",tvaughan,None,2012-04-28T19:00:32Z,2014-07-20T01:28:58Z
11,BaseGenericInlineFormSet does not use form's save() method,"Saving a BaseGenericInlineFormSet through the form instead of the model directly. Same patch that attached on ticket https://code.djangoproject.com/ticket/16869
",pablorecio,None,2012-04-28T18:25:19Z,2014-07-20T01:28:58Z
10,"Updated some antique references in ""Is Django stable?""","Edited out some old references to how long World Online has been using Django, and how it's survived ""Slashdottings,"" which I'm pretty sure don't happen anymore.
",kleinmatic,None,2012-04-28T18:18:09Z,2014-07-20T01:28:59Z
9,"Fixed typo, instanciating -> instantiating in django/views/generic/edit.py",,t0m,None,2012-04-28T17:19:17Z,2014-06-26T13:34:03Z
8,Added DEBUG_PLAINTEXT_AJAX_ERROR_MESSAGES setting to customize error display,"The plaintext error responses for AJAX requests in 1.4 drop a lot of the stack trace context that was included in the HTML responses pre-1.4.  Tools like the network response 'Preview' viewer in Chrome make it easy to navigate the HTML response to drill down into the richer context it provides.  This patch maintains the 1.4 default but enables the response to be configured to use the original behavior.
",davehughes,None,2012-04-28T17:15:07Z,2014-06-13T09:26:49Z
7,Made the README into valid Markdown,"I added a file extension to make the README Markdown, and cleaned up the document a bit. Makes it look good here on Github.
",JCB-K,None,2012-04-28T14:50:34Z,2014-06-12T18:04:42Z
6,Convert README to README.rst,"No content change, just an initial conversion to ReStructuredText.
",yuvadm,None,2012-04-28T11:27:26Z,2014-09-06T07:41:21Z
5,Convert README to Markdown,"Since Django has officially moved to GitHub, it should have a README.md that renders properly. I didn’t change any content, just added the Markdown syntax.
",remi,None,2012-04-28T10:41:23Z,2014-06-27T07:41:25Z
4,Ticket #4102 - Allow UPDATE of only specific fields in model.save(),"It's the same patch that is on the ticket. - https://code.djangoproject.com/ticket/4102

(What a joy to have django on github officially)
",niwinz,None,2012-04-28T10:07:03Z,2014-06-16T01:16:42Z
3,Created a Github-style Markdown README,"Moved the README to README.md and edited with Github flavoured Markdown so it is easier to read on GH.
",jvc26,None,2012-04-28T09:51:19Z,2014-06-13T14:38:30Z
2,Change phone2numeric to use generator expressions instead of lambdas,"Made a slight change to the phone2numeric method. I believe this makes the code more readable and might have a minor performance benefit for not making a temporary function on each invocation. 
",ghost,None,2012-04-28T07:34:39Z,2014-07-08T12:34:37Z
1,Change phone2numeric to use generator expressions instead of lambdas,"Made a slight change to the phone2numeric method.  I believe this makes the code more readable and might have a minor performance benefit for not making a temporary function on each invocation.  
",ghost,None,2012-04-28T07:32:22Z,2014-06-27T23:53:10Z